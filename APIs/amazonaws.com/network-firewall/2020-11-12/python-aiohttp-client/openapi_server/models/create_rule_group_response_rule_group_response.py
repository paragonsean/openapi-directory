# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_status import ResourceStatus
from openapi_server.models.rule_group_response_encryption_configuration import RuleGroupResponseEncryptionConfiguration
from openapi_server.models.rule_group_response_source_metadata import RuleGroupResponseSourceMetadata
from openapi_server.models.rule_group_type import RuleGroupType
from openapi_server import util


class CreateRuleGroupResponseRuleGroupResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rule_group_arn: str=None, rule_group_name: str=None, rule_group_id: str=None, description: str=None, type: RuleGroupType=None, capacity: int=None, rule_group_status: ResourceStatus=None, tags: List=None, consumed_capacity: int=None, number_of_associations: int=None, encryption_configuration: RuleGroupResponseEncryptionConfiguration=None, source_metadata: RuleGroupResponseSourceMetadata=None, sns_topic: str=None, last_modified_time: datetime=None):
        """CreateRuleGroupResponseRuleGroupResponse - a model defined in OpenAPI

        :param rule_group_arn: The rule_group_arn of this CreateRuleGroupResponseRuleGroupResponse.
        :param rule_group_name: The rule_group_name of this CreateRuleGroupResponseRuleGroupResponse.
        :param rule_group_id: The rule_group_id of this CreateRuleGroupResponseRuleGroupResponse.
        :param description: The description of this CreateRuleGroupResponseRuleGroupResponse.
        :param type: The type of this CreateRuleGroupResponseRuleGroupResponse.
        :param capacity: The capacity of this CreateRuleGroupResponseRuleGroupResponse.
        :param rule_group_status: The rule_group_status of this CreateRuleGroupResponseRuleGroupResponse.
        :param tags: The tags of this CreateRuleGroupResponseRuleGroupResponse.
        :param consumed_capacity: The consumed_capacity of this CreateRuleGroupResponseRuleGroupResponse.
        :param number_of_associations: The number_of_associations of this CreateRuleGroupResponseRuleGroupResponse.
        :param encryption_configuration: The encryption_configuration of this CreateRuleGroupResponseRuleGroupResponse.
        :param source_metadata: The source_metadata of this CreateRuleGroupResponseRuleGroupResponse.
        :param sns_topic: The sns_topic of this CreateRuleGroupResponseRuleGroupResponse.
        :param last_modified_time: The last_modified_time of this CreateRuleGroupResponseRuleGroupResponse.
        """
        self.openapi_types = {
            'rule_group_arn': str,
            'rule_group_name': str,
            'rule_group_id': str,
            'description': str,
            'type': RuleGroupType,
            'capacity': int,
            'rule_group_status': ResourceStatus,
            'tags': List,
            'consumed_capacity': int,
            'number_of_associations': int,
            'encryption_configuration': RuleGroupResponseEncryptionConfiguration,
            'source_metadata': RuleGroupResponseSourceMetadata,
            'sns_topic': str,
            'last_modified_time': datetime
        }

        self.attribute_map = {
            'rule_group_arn': 'RuleGroupArn',
            'rule_group_name': 'RuleGroupName',
            'rule_group_id': 'RuleGroupId',
            'description': 'Description',
            'type': 'Type',
            'capacity': 'Capacity',
            'rule_group_status': 'RuleGroupStatus',
            'tags': 'Tags',
            'consumed_capacity': 'ConsumedCapacity',
            'number_of_associations': 'NumberOfAssociations',
            'encryption_configuration': 'EncryptionConfiguration',
            'source_metadata': 'SourceMetadata',
            'sns_topic': 'SnsTopic',
            'last_modified_time': 'LastModifiedTime'
        }

        self._rule_group_arn = rule_group_arn
        self._rule_group_name = rule_group_name
        self._rule_group_id = rule_group_id
        self._description = description
        self._type = type
        self._capacity = capacity
        self._rule_group_status = rule_group_status
        self._tags = tags
        self._consumed_capacity = consumed_capacity
        self._number_of_associations = number_of_associations
        self._encryption_configuration = encryption_configuration
        self._source_metadata = source_metadata
        self._sns_topic = sns_topic
        self._last_modified_time = last_modified_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateRuleGroupResponseRuleGroupResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateRuleGroupResponse_RuleGroupResponse of this CreateRuleGroupResponseRuleGroupResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rule_group_arn(self):
        """Gets the rule_group_arn of this CreateRuleGroupResponseRuleGroupResponse.


        :return: The rule_group_arn of this CreateRuleGroupResponseRuleGroupResponse.
        :rtype: str
        """
        return self._rule_group_arn

    @rule_group_arn.setter
    def rule_group_arn(self, rule_group_arn):
        """Sets the rule_group_arn of this CreateRuleGroupResponseRuleGroupResponse.


        :param rule_group_arn: The rule_group_arn of this CreateRuleGroupResponseRuleGroupResponse.
        :type rule_group_arn: str
        """
        if rule_group_arn is None:
            raise ValueError("Invalid value for `rule_group_arn`, must not be `None`")

        self._rule_group_arn = rule_group_arn

    @property
    def rule_group_name(self):
        """Gets the rule_group_name of this CreateRuleGroupResponseRuleGroupResponse.


        :return: The rule_group_name of this CreateRuleGroupResponseRuleGroupResponse.
        :rtype: str
        """
        return self._rule_group_name

    @rule_group_name.setter
    def rule_group_name(self, rule_group_name):
        """Sets the rule_group_name of this CreateRuleGroupResponseRuleGroupResponse.


        :param rule_group_name: The rule_group_name of this CreateRuleGroupResponseRuleGroupResponse.
        :type rule_group_name: str
        """
        if rule_group_name is None:
            raise ValueError("Invalid value for `rule_group_name`, must not be `None`")

        self._rule_group_name = rule_group_name

    @property
    def rule_group_id(self):
        """Gets the rule_group_id of this CreateRuleGroupResponseRuleGroupResponse.


        :return: The rule_group_id of this CreateRuleGroupResponseRuleGroupResponse.
        :rtype: str
        """
        return self._rule_group_id

    @rule_group_id.setter
    def rule_group_id(self, rule_group_id):
        """Sets the rule_group_id of this CreateRuleGroupResponseRuleGroupResponse.


        :param rule_group_id: The rule_group_id of this CreateRuleGroupResponseRuleGroupResponse.
        :type rule_group_id: str
        """
        if rule_group_id is None:
            raise ValueError("Invalid value for `rule_group_id`, must not be `None`")

        self._rule_group_id = rule_group_id

    @property
    def description(self):
        """Gets the description of this CreateRuleGroupResponseRuleGroupResponse.


        :return: The description of this CreateRuleGroupResponseRuleGroupResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateRuleGroupResponseRuleGroupResponse.


        :param description: The description of this CreateRuleGroupResponseRuleGroupResponse.
        :type description: str
        """

        self._description = description

    @property
    def type(self):
        """Gets the type of this CreateRuleGroupResponseRuleGroupResponse.


        :return: The type of this CreateRuleGroupResponseRuleGroupResponse.
        :rtype: RuleGroupType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CreateRuleGroupResponseRuleGroupResponse.


        :param type: The type of this CreateRuleGroupResponseRuleGroupResponse.
        :type type: RuleGroupType
        """

        self._type = type

    @property
    def capacity(self):
        """Gets the capacity of this CreateRuleGroupResponseRuleGroupResponse.


        :return: The capacity of this CreateRuleGroupResponseRuleGroupResponse.
        :rtype: int
        """
        return self._capacity

    @capacity.setter
    def capacity(self, capacity):
        """Sets the capacity of this CreateRuleGroupResponseRuleGroupResponse.


        :param capacity: The capacity of this CreateRuleGroupResponseRuleGroupResponse.
        :type capacity: int
        """

        self._capacity = capacity

    @property
    def rule_group_status(self):
        """Gets the rule_group_status of this CreateRuleGroupResponseRuleGroupResponse.


        :return: The rule_group_status of this CreateRuleGroupResponseRuleGroupResponse.
        :rtype: ResourceStatus
        """
        return self._rule_group_status

    @rule_group_status.setter
    def rule_group_status(self, rule_group_status):
        """Sets the rule_group_status of this CreateRuleGroupResponseRuleGroupResponse.


        :param rule_group_status: The rule_group_status of this CreateRuleGroupResponseRuleGroupResponse.
        :type rule_group_status: ResourceStatus
        """

        self._rule_group_status = rule_group_status

    @property
    def tags(self):
        """Gets the tags of this CreateRuleGroupResponseRuleGroupResponse.


        :return: The tags of this CreateRuleGroupResponseRuleGroupResponse.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateRuleGroupResponseRuleGroupResponse.


        :param tags: The tags of this CreateRuleGroupResponseRuleGroupResponse.
        :type tags: List
        """

        self._tags = tags

    @property
    def consumed_capacity(self):
        """Gets the consumed_capacity of this CreateRuleGroupResponseRuleGroupResponse.


        :return: The consumed_capacity of this CreateRuleGroupResponseRuleGroupResponse.
        :rtype: int
        """
        return self._consumed_capacity

    @consumed_capacity.setter
    def consumed_capacity(self, consumed_capacity):
        """Sets the consumed_capacity of this CreateRuleGroupResponseRuleGroupResponse.


        :param consumed_capacity: The consumed_capacity of this CreateRuleGroupResponseRuleGroupResponse.
        :type consumed_capacity: int
        """

        self._consumed_capacity = consumed_capacity

    @property
    def number_of_associations(self):
        """Gets the number_of_associations of this CreateRuleGroupResponseRuleGroupResponse.


        :return: The number_of_associations of this CreateRuleGroupResponseRuleGroupResponse.
        :rtype: int
        """
        return self._number_of_associations

    @number_of_associations.setter
    def number_of_associations(self, number_of_associations):
        """Sets the number_of_associations of this CreateRuleGroupResponseRuleGroupResponse.


        :param number_of_associations: The number_of_associations of this CreateRuleGroupResponseRuleGroupResponse.
        :type number_of_associations: int
        """

        self._number_of_associations = number_of_associations

    @property
    def encryption_configuration(self):
        """Gets the encryption_configuration of this CreateRuleGroupResponseRuleGroupResponse.


        :return: The encryption_configuration of this CreateRuleGroupResponseRuleGroupResponse.
        :rtype: RuleGroupResponseEncryptionConfiguration
        """
        return self._encryption_configuration

    @encryption_configuration.setter
    def encryption_configuration(self, encryption_configuration):
        """Sets the encryption_configuration of this CreateRuleGroupResponseRuleGroupResponse.


        :param encryption_configuration: The encryption_configuration of this CreateRuleGroupResponseRuleGroupResponse.
        :type encryption_configuration: RuleGroupResponseEncryptionConfiguration
        """

        self._encryption_configuration = encryption_configuration

    @property
    def source_metadata(self):
        """Gets the source_metadata of this CreateRuleGroupResponseRuleGroupResponse.


        :return: The source_metadata of this CreateRuleGroupResponseRuleGroupResponse.
        :rtype: RuleGroupResponseSourceMetadata
        """
        return self._source_metadata

    @source_metadata.setter
    def source_metadata(self, source_metadata):
        """Sets the source_metadata of this CreateRuleGroupResponseRuleGroupResponse.


        :param source_metadata: The source_metadata of this CreateRuleGroupResponseRuleGroupResponse.
        :type source_metadata: RuleGroupResponseSourceMetadata
        """

        self._source_metadata = source_metadata

    @property
    def sns_topic(self):
        """Gets the sns_topic of this CreateRuleGroupResponseRuleGroupResponse.


        :return: The sns_topic of this CreateRuleGroupResponseRuleGroupResponse.
        :rtype: str
        """
        return self._sns_topic

    @sns_topic.setter
    def sns_topic(self, sns_topic):
        """Sets the sns_topic of this CreateRuleGroupResponseRuleGroupResponse.


        :param sns_topic: The sns_topic of this CreateRuleGroupResponseRuleGroupResponse.
        :type sns_topic: str
        """

        self._sns_topic = sns_topic

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this CreateRuleGroupResponseRuleGroupResponse.


        :return: The last_modified_time of this CreateRuleGroupResponseRuleGroupResponse.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this CreateRuleGroupResponseRuleGroupResponse.


        :param last_modified_time: The last_modified_time of this CreateRuleGroupResponseRuleGroupResponse.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time
