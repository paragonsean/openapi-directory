# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.per_object_sync_status import PerObjectSyncStatus
from openapi_server import util


class PerObjectStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sync_status: PerObjectSyncStatus=None, update_token: str=None):
        """PerObjectStatus - a model defined in OpenAPI

        :param sync_status: The sync_status of this PerObjectStatus.
        :param update_token: The update_token of this PerObjectStatus.
        """
        self.openapi_types = {
            'sync_status': PerObjectSyncStatus,
            'update_token': str
        }

        self.attribute_map = {
            'sync_status': 'SyncStatus',
            'update_token': 'UpdateToken'
        }

        self._sync_status = sync_status
        self._update_token = update_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PerObjectStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PerObjectStatus of this PerObjectStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sync_status(self):
        """Gets the sync_status of this PerObjectStatus.


        :return: The sync_status of this PerObjectStatus.
        :rtype: PerObjectSyncStatus
        """
        return self._sync_status

    @sync_status.setter
    def sync_status(self, sync_status):
        """Sets the sync_status of this PerObjectStatus.


        :param sync_status: The sync_status of this PerObjectStatus.
        :type sync_status: PerObjectSyncStatus
        """

        self._sync_status = sync_status

    @property
    def update_token(self):
        """Gets the update_token of this PerObjectStatus.


        :return: The update_token of this PerObjectStatus.
        :rtype: str
        """
        return self._update_token

    @update_token.setter
    def update_token(self, update_token):
        """Sets the update_token of this PerObjectStatus.


        :param update_token: The update_token of this PerObjectStatus.
        :type update_token: str
        """

        self._update_token = update_token
