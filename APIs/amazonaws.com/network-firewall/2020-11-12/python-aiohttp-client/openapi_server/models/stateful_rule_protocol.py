# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StatefulRuleProtocol(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    IP = 'IP'
    TCP = 'TCP'
    UDP = 'UDP'
    ICMP = 'ICMP'
    HTTP = 'HTTP'
    FTP = 'FTP'
    TLS = 'TLS'
    SMB = 'SMB'
    DNS = 'DNS'
    DCERPC = 'DCERPC'
    SSH = 'SSH'
    SMTP = 'SMTP'
    IMAP = 'IMAP'
    MSN = 'MSN'
    KRB5 = 'KRB5'
    IKEV2 = 'IKEV2'
    TFTP = 'TFTP'
    NTP = 'NTP'
    DHCP = 'DHCP'

    def __init__(self):
        """StatefulRuleProtocol - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StatefulRuleProtocol':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StatefulRuleProtocol of this StatefulRuleProtocol.
        """
        return util.deserialize_model(dikt, cls)
