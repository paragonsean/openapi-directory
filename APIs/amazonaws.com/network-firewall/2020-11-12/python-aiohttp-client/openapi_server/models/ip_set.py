# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IPSet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, definition: List=None):
        """IPSet - a model defined in OpenAPI

        :param definition: The definition of this IPSet.
        """
        self.openapi_types = {
            'definition': List
        }

        self.attribute_map = {
            'definition': 'Definition'
        }

        self._definition = definition

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IPSet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IPSet of this IPSet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def definition(self):
        """Gets the definition of this IPSet.


        :return: The definition of this IPSet.
        :rtype: List
        """
        return self._definition

    @definition.setter
    def definition(self, definition):
        """Sets the definition of this IPSet.


        :param definition: The definition of this IPSet.
        :type definition: List
        """
        if definition is None:
            raise ValueError("Invalid value for `definition`, must not be `None`")

        self._definition = definition
