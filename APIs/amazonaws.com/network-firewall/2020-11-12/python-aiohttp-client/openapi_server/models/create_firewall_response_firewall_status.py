# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configuration_sync_state import ConfigurationSyncState
from openapi_server.models.firewall_status_capacity_usage_summary import FirewallStatusCapacityUsageSummary
from openapi_server.models.firewall_status_value import FirewallStatusValue
from openapi_server import util


class CreateFirewallResponseFirewallStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: FirewallStatusValue=None, configuration_sync_state_summary: ConfigurationSyncState=None, sync_states: Dict=None, capacity_usage_summary: FirewallStatusCapacityUsageSummary=None):
        """CreateFirewallResponseFirewallStatus - a model defined in OpenAPI

        :param status: The status of this CreateFirewallResponseFirewallStatus.
        :param configuration_sync_state_summary: The configuration_sync_state_summary of this CreateFirewallResponseFirewallStatus.
        :param sync_states: The sync_states of this CreateFirewallResponseFirewallStatus.
        :param capacity_usage_summary: The capacity_usage_summary of this CreateFirewallResponseFirewallStatus.
        """
        self.openapi_types = {
            'status': FirewallStatusValue,
            'configuration_sync_state_summary': ConfigurationSyncState,
            'sync_states': Dict,
            'capacity_usage_summary': FirewallStatusCapacityUsageSummary
        }

        self.attribute_map = {
            'status': 'Status',
            'configuration_sync_state_summary': 'ConfigurationSyncStateSummary',
            'sync_states': 'SyncStates',
            'capacity_usage_summary': 'CapacityUsageSummary'
        }

        self._status = status
        self._configuration_sync_state_summary = configuration_sync_state_summary
        self._sync_states = sync_states
        self._capacity_usage_summary = capacity_usage_summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateFirewallResponseFirewallStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateFirewallResponse_FirewallStatus of this CreateFirewallResponseFirewallStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this CreateFirewallResponseFirewallStatus.


        :return: The status of this CreateFirewallResponseFirewallStatus.
        :rtype: FirewallStatusValue
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CreateFirewallResponseFirewallStatus.


        :param status: The status of this CreateFirewallResponseFirewallStatus.
        :type status: FirewallStatusValue
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def configuration_sync_state_summary(self):
        """Gets the configuration_sync_state_summary of this CreateFirewallResponseFirewallStatus.


        :return: The configuration_sync_state_summary of this CreateFirewallResponseFirewallStatus.
        :rtype: ConfigurationSyncState
        """
        return self._configuration_sync_state_summary

    @configuration_sync_state_summary.setter
    def configuration_sync_state_summary(self, configuration_sync_state_summary):
        """Sets the configuration_sync_state_summary of this CreateFirewallResponseFirewallStatus.


        :param configuration_sync_state_summary: The configuration_sync_state_summary of this CreateFirewallResponseFirewallStatus.
        :type configuration_sync_state_summary: ConfigurationSyncState
        """
        if configuration_sync_state_summary is None:
            raise ValueError("Invalid value for `configuration_sync_state_summary`, must not be `None`")

        self._configuration_sync_state_summary = configuration_sync_state_summary

    @property
    def sync_states(self):
        """Gets the sync_states of this CreateFirewallResponseFirewallStatus.


        :return: The sync_states of this CreateFirewallResponseFirewallStatus.
        :rtype: Dict
        """
        return self._sync_states

    @sync_states.setter
    def sync_states(self, sync_states):
        """Sets the sync_states of this CreateFirewallResponseFirewallStatus.


        :param sync_states: The sync_states of this CreateFirewallResponseFirewallStatus.
        :type sync_states: Dict
        """

        self._sync_states = sync_states

    @property
    def capacity_usage_summary(self):
        """Gets the capacity_usage_summary of this CreateFirewallResponseFirewallStatus.


        :return: The capacity_usage_summary of this CreateFirewallResponseFirewallStatus.
        :rtype: FirewallStatusCapacityUsageSummary
        """
        return self._capacity_usage_summary

    @capacity_usage_summary.setter
    def capacity_usage_summary(self, capacity_usage_summary):
        """Sets the capacity_usage_summary of this CreateFirewallResponseFirewallStatus.


        :param capacity_usage_summary: The capacity_usage_summary of this CreateFirewallResponseFirewallStatus.
        :type capacity_usage_summary: FirewallStatusCapacityUsageSummary
        """

        self._capacity_usage_summary = capacity_usage_summary
