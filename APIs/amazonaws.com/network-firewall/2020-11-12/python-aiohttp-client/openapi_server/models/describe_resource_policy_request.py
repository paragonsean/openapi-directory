# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeResourcePolicyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_arn: str=None):
        """DescribeResourcePolicyRequest - a model defined in OpenAPI

        :param resource_arn: The resource_arn of this DescribeResourcePolicyRequest.
        """
        self.openapi_types = {
            'resource_arn': str
        }

        self.attribute_map = {
            'resource_arn': 'ResourceArn'
        }

        self._resource_arn = resource_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeResourcePolicyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeResourcePolicyRequest of this DescribeResourcePolicyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_arn(self):
        """Gets the resource_arn of this DescribeResourcePolicyRequest.


        :return: The resource_arn of this DescribeResourcePolicyRequest.
        :rtype: str
        """
        return self._resource_arn

    @resource_arn.setter
    def resource_arn(self, resource_arn):
        """Sets the resource_arn of this DescribeResourcePolicyRequest.


        :param resource_arn: The resource_arn of this DescribeResourcePolicyRequest.
        :type resource_arn: str
        """
        if resource_arn is None:
            raise ValueError("Invalid value for `resource_arn`, must not be `None`")

        self._resource_arn = resource_arn
