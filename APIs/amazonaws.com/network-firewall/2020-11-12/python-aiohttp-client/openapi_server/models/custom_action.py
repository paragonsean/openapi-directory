# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_action_action_definition import CustomActionActionDefinition
from openapi_server import util


class CustomAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_name: str=None, action_definition: CustomActionActionDefinition=None):
        """CustomAction - a model defined in OpenAPI

        :param action_name: The action_name of this CustomAction.
        :param action_definition: The action_definition of this CustomAction.
        """
        self.openapi_types = {
            'action_name': str,
            'action_definition': CustomActionActionDefinition
        }

        self.attribute_map = {
            'action_name': 'ActionName',
            'action_definition': 'ActionDefinition'
        }

        self._action_name = action_name
        self._action_definition = action_definition

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomAction of this CustomAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_name(self):
        """Gets the action_name of this CustomAction.


        :return: The action_name of this CustomAction.
        :rtype: str
        """
        return self._action_name

    @action_name.setter
    def action_name(self, action_name):
        """Sets the action_name of this CustomAction.


        :param action_name: The action_name of this CustomAction.
        :type action_name: str
        """
        if action_name is None:
            raise ValueError("Invalid value for `action_name`, must not be `None`")

        self._action_name = action_name

    @property
    def action_definition(self):
        """Gets the action_definition of this CustomAction.


        :return: The action_definition of this CustomAction.
        :rtype: CustomActionActionDefinition
        """
        return self._action_definition

    @action_definition.setter
    def action_definition(self, action_definition):
        """Sets the action_definition of this CustomAction.


        :param action_definition: The action_definition of this CustomAction.
        :type action_definition: CustomActionActionDefinition
        """
        if action_definition is None:
            raise ValueError("Invalid value for `action_definition`, must not be `None`")

        self._action_definition = action_definition
