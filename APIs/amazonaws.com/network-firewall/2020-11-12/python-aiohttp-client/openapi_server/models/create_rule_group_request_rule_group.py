# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rule_group_reference_sets import RuleGroupReferenceSets
from openapi_server.models.rule_group_rule_variables import RuleGroupRuleVariables
from openapi_server.models.rule_group_rules_source import RuleGroupRulesSource
from openapi_server.models.rule_group_stateful_rule_options import RuleGroupStatefulRuleOptions
from openapi_server import util


class CreateRuleGroupRequestRuleGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rule_variables: RuleGroupRuleVariables=None, reference_sets: RuleGroupReferenceSets=None, rules_source: RuleGroupRulesSource=None, stateful_rule_options: RuleGroupStatefulRuleOptions=None):
        """CreateRuleGroupRequestRuleGroup - a model defined in OpenAPI

        :param rule_variables: The rule_variables of this CreateRuleGroupRequestRuleGroup.
        :param reference_sets: The reference_sets of this CreateRuleGroupRequestRuleGroup.
        :param rules_source: The rules_source of this CreateRuleGroupRequestRuleGroup.
        :param stateful_rule_options: The stateful_rule_options of this CreateRuleGroupRequestRuleGroup.
        """
        self.openapi_types = {
            'rule_variables': RuleGroupRuleVariables,
            'reference_sets': RuleGroupReferenceSets,
            'rules_source': RuleGroupRulesSource,
            'stateful_rule_options': RuleGroupStatefulRuleOptions
        }

        self.attribute_map = {
            'rule_variables': 'RuleVariables',
            'reference_sets': 'ReferenceSets',
            'rules_source': 'RulesSource',
            'stateful_rule_options': 'StatefulRuleOptions'
        }

        self._rule_variables = rule_variables
        self._reference_sets = reference_sets
        self._rules_source = rules_source
        self._stateful_rule_options = stateful_rule_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateRuleGroupRequestRuleGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateRuleGroupRequest_RuleGroup of this CreateRuleGroupRequestRuleGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rule_variables(self):
        """Gets the rule_variables of this CreateRuleGroupRequestRuleGroup.


        :return: The rule_variables of this CreateRuleGroupRequestRuleGroup.
        :rtype: RuleGroupRuleVariables
        """
        return self._rule_variables

    @rule_variables.setter
    def rule_variables(self, rule_variables):
        """Sets the rule_variables of this CreateRuleGroupRequestRuleGroup.


        :param rule_variables: The rule_variables of this CreateRuleGroupRequestRuleGroup.
        :type rule_variables: RuleGroupRuleVariables
        """

        self._rule_variables = rule_variables

    @property
    def reference_sets(self):
        """Gets the reference_sets of this CreateRuleGroupRequestRuleGroup.


        :return: The reference_sets of this CreateRuleGroupRequestRuleGroup.
        :rtype: RuleGroupReferenceSets
        """
        return self._reference_sets

    @reference_sets.setter
    def reference_sets(self, reference_sets):
        """Sets the reference_sets of this CreateRuleGroupRequestRuleGroup.


        :param reference_sets: The reference_sets of this CreateRuleGroupRequestRuleGroup.
        :type reference_sets: RuleGroupReferenceSets
        """

        self._reference_sets = reference_sets

    @property
    def rules_source(self):
        """Gets the rules_source of this CreateRuleGroupRequestRuleGroup.


        :return: The rules_source of this CreateRuleGroupRequestRuleGroup.
        :rtype: RuleGroupRulesSource
        """
        return self._rules_source

    @rules_source.setter
    def rules_source(self, rules_source):
        """Sets the rules_source of this CreateRuleGroupRequestRuleGroup.


        :param rules_source: The rules_source of this CreateRuleGroupRequestRuleGroup.
        :type rules_source: RuleGroupRulesSource
        """
        if rules_source is None:
            raise ValueError("Invalid value for `rules_source`, must not be `None`")

        self._rules_source = rules_source

    @property
    def stateful_rule_options(self):
        """Gets the stateful_rule_options of this CreateRuleGroupRequestRuleGroup.


        :return: The stateful_rule_options of this CreateRuleGroupRequestRuleGroup.
        :rtype: RuleGroupStatefulRuleOptions
        """
        return self._stateful_rule_options

    @stateful_rule_options.setter
    def stateful_rule_options(self, stateful_rule_options):
        """Sets the stateful_rule_options of this CreateRuleGroupRequestRuleGroup.


        :param stateful_rule_options: The stateful_rule_options of this CreateRuleGroupRequestRuleGroup.
        :type stateful_rule_options: RuleGroupStatefulRuleOptions
        """

        self._stateful_rule_options = stateful_rule_options
