# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rule_group_type import RuleGroupType
from openapi_server import util


class DescribeRuleGroupRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rule_group_name: str=None, rule_group_arn: str=None, type: RuleGroupType=None):
        """DescribeRuleGroupRequest - a model defined in OpenAPI

        :param rule_group_name: The rule_group_name of this DescribeRuleGroupRequest.
        :param rule_group_arn: The rule_group_arn of this DescribeRuleGroupRequest.
        :param type: The type of this DescribeRuleGroupRequest.
        """
        self.openapi_types = {
            'rule_group_name': str,
            'rule_group_arn': str,
            'type': RuleGroupType
        }

        self.attribute_map = {
            'rule_group_name': 'RuleGroupName',
            'rule_group_arn': 'RuleGroupArn',
            'type': 'Type'
        }

        self._rule_group_name = rule_group_name
        self._rule_group_arn = rule_group_arn
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeRuleGroupRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeRuleGroupRequest of this DescribeRuleGroupRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rule_group_name(self):
        """Gets the rule_group_name of this DescribeRuleGroupRequest.


        :return: The rule_group_name of this DescribeRuleGroupRequest.
        :rtype: str
        """
        return self._rule_group_name

    @rule_group_name.setter
    def rule_group_name(self, rule_group_name):
        """Sets the rule_group_name of this DescribeRuleGroupRequest.


        :param rule_group_name: The rule_group_name of this DescribeRuleGroupRequest.
        :type rule_group_name: str
        """

        self._rule_group_name = rule_group_name

    @property
    def rule_group_arn(self):
        """Gets the rule_group_arn of this DescribeRuleGroupRequest.


        :return: The rule_group_arn of this DescribeRuleGroupRequest.
        :rtype: str
        """
        return self._rule_group_arn

    @rule_group_arn.setter
    def rule_group_arn(self, rule_group_arn):
        """Sets the rule_group_arn of this DescribeRuleGroupRequest.


        :param rule_group_arn: The rule_group_arn of this DescribeRuleGroupRequest.
        :type rule_group_arn: str
        """

        self._rule_group_arn = rule_group_arn

    @property
    def type(self):
        """Gets the type of this DescribeRuleGroupRequest.


        :return: The type of this DescribeRuleGroupRequest.
        :rtype: RuleGroupType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DescribeRuleGroupRequest.


        :param type: The type of this DescribeRuleGroupRequest.
        :type type: RuleGroupType
        """

        self._type = type
