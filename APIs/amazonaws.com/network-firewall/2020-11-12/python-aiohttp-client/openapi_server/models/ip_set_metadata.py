# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IPSetMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resolved_cidr_count: int=None):
        """IPSetMetadata - a model defined in OpenAPI

        :param resolved_cidr_count: The resolved_cidr_count of this IPSetMetadata.
        """
        self.openapi_types = {
            'resolved_cidr_count': int
        }

        self.attribute_map = {
            'resolved_cidr_count': 'ResolvedCIDRCount'
        }

        self._resolved_cidr_count = resolved_cidr_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IPSetMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IPSetMetadata of this IPSetMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resolved_cidr_count(self):
        """Gets the resolved_cidr_count of this IPSetMetadata.


        :return: The resolved_cidr_count of this IPSetMetadata.
        :rtype: int
        """
        return self._resolved_cidr_count

    @resolved_cidr_count.setter
    def resolved_cidr_count(self, resolved_cidr_count):
        """Sets the resolved_cidr_count of this IPSetMetadata.


        :param resolved_cidr_count: The resolved_cidr_count of this IPSetMetadata.
        :type resolved_cidr_count: int
        """

        self._resolved_cidr_count = resolved_cidr_count
