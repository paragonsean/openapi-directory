# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_tls_inspection_configuration_response_tls_inspection_configuration_response import CreateTLSInspectionConfigurationResponseTLSInspectionConfigurationResponse
from openapi_server import util


class CreateTLSInspectionConfigurationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, update_token: str=None, tls_inspection_configuration_response: CreateTLSInspectionConfigurationResponseTLSInspectionConfigurationResponse=None):
        """CreateTLSInspectionConfigurationResponse - a model defined in OpenAPI

        :param update_token: The update_token of this CreateTLSInspectionConfigurationResponse.
        :param tls_inspection_configuration_response: The tls_inspection_configuration_response of this CreateTLSInspectionConfigurationResponse.
        """
        self.openapi_types = {
            'update_token': str,
            'tls_inspection_configuration_response': CreateTLSInspectionConfigurationResponseTLSInspectionConfigurationResponse
        }

        self.attribute_map = {
            'update_token': 'UpdateToken',
            'tls_inspection_configuration_response': 'TLSInspectionConfigurationResponse'
        }

        self._update_token = update_token
        self._tls_inspection_configuration_response = tls_inspection_configuration_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateTLSInspectionConfigurationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateTLSInspectionConfigurationResponse of this CreateTLSInspectionConfigurationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def update_token(self):
        """Gets the update_token of this CreateTLSInspectionConfigurationResponse.


        :return: The update_token of this CreateTLSInspectionConfigurationResponse.
        :rtype: str
        """
        return self._update_token

    @update_token.setter
    def update_token(self, update_token):
        """Sets the update_token of this CreateTLSInspectionConfigurationResponse.


        :param update_token: The update_token of this CreateTLSInspectionConfigurationResponse.
        :type update_token: str
        """
        if update_token is None:
            raise ValueError("Invalid value for `update_token`, must not be `None`")

        self._update_token = update_token

    @property
    def tls_inspection_configuration_response(self):
        """Gets the tls_inspection_configuration_response of this CreateTLSInspectionConfigurationResponse.


        :return: The tls_inspection_configuration_response of this CreateTLSInspectionConfigurationResponse.
        :rtype: CreateTLSInspectionConfigurationResponseTLSInspectionConfigurationResponse
        """
        return self._tls_inspection_configuration_response

    @tls_inspection_configuration_response.setter
    def tls_inspection_configuration_response(self, tls_inspection_configuration_response):
        """Sets the tls_inspection_configuration_response of this CreateTLSInspectionConfigurationResponse.


        :param tls_inspection_configuration_response: The tls_inspection_configuration_response of this CreateTLSInspectionConfigurationResponse.
        :type tls_inspection_configuration_response: CreateTLSInspectionConfigurationResponseTLSInspectionConfigurationResponse
        """
        if tls_inspection_configuration_response is None:
            raise ValueError("Invalid value for `tls_inspection_configuration_response`, must not be `None`")

        self._tls_inspection_configuration_response = tls_inspection_configuration_response
