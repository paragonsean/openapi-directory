# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rule_group_type import RuleGroupType
from openapi_server.models.stateful_rule_options import StatefulRuleOptions
from openapi_server import util


class DescribeRuleGroupMetadataResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rule_group_arn: str=None, rule_group_name: str=None, description: str=None, type: RuleGroupType=None, capacity: int=None, stateful_rule_options: StatefulRuleOptions=None, last_modified_time: datetime=None):
        """DescribeRuleGroupMetadataResponse - a model defined in OpenAPI

        :param rule_group_arn: The rule_group_arn of this DescribeRuleGroupMetadataResponse.
        :param rule_group_name: The rule_group_name of this DescribeRuleGroupMetadataResponse.
        :param description: The description of this DescribeRuleGroupMetadataResponse.
        :param type: The type of this DescribeRuleGroupMetadataResponse.
        :param capacity: The capacity of this DescribeRuleGroupMetadataResponse.
        :param stateful_rule_options: The stateful_rule_options of this DescribeRuleGroupMetadataResponse.
        :param last_modified_time: The last_modified_time of this DescribeRuleGroupMetadataResponse.
        """
        self.openapi_types = {
            'rule_group_arn': str,
            'rule_group_name': str,
            'description': str,
            'type': RuleGroupType,
            'capacity': int,
            'stateful_rule_options': StatefulRuleOptions,
            'last_modified_time': datetime
        }

        self.attribute_map = {
            'rule_group_arn': 'RuleGroupArn',
            'rule_group_name': 'RuleGroupName',
            'description': 'Description',
            'type': 'Type',
            'capacity': 'Capacity',
            'stateful_rule_options': 'StatefulRuleOptions',
            'last_modified_time': 'LastModifiedTime'
        }

        self._rule_group_arn = rule_group_arn
        self._rule_group_name = rule_group_name
        self._description = description
        self._type = type
        self._capacity = capacity
        self._stateful_rule_options = stateful_rule_options
        self._last_modified_time = last_modified_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeRuleGroupMetadataResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeRuleGroupMetadataResponse of this DescribeRuleGroupMetadataResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rule_group_arn(self):
        """Gets the rule_group_arn of this DescribeRuleGroupMetadataResponse.


        :return: The rule_group_arn of this DescribeRuleGroupMetadataResponse.
        :rtype: str
        """
        return self._rule_group_arn

    @rule_group_arn.setter
    def rule_group_arn(self, rule_group_arn):
        """Sets the rule_group_arn of this DescribeRuleGroupMetadataResponse.


        :param rule_group_arn: The rule_group_arn of this DescribeRuleGroupMetadataResponse.
        :type rule_group_arn: str
        """
        if rule_group_arn is None:
            raise ValueError("Invalid value for `rule_group_arn`, must not be `None`")

        self._rule_group_arn = rule_group_arn

    @property
    def rule_group_name(self):
        """Gets the rule_group_name of this DescribeRuleGroupMetadataResponse.


        :return: The rule_group_name of this DescribeRuleGroupMetadataResponse.
        :rtype: str
        """
        return self._rule_group_name

    @rule_group_name.setter
    def rule_group_name(self, rule_group_name):
        """Sets the rule_group_name of this DescribeRuleGroupMetadataResponse.


        :param rule_group_name: The rule_group_name of this DescribeRuleGroupMetadataResponse.
        :type rule_group_name: str
        """
        if rule_group_name is None:
            raise ValueError("Invalid value for `rule_group_name`, must not be `None`")

        self._rule_group_name = rule_group_name

    @property
    def description(self):
        """Gets the description of this DescribeRuleGroupMetadataResponse.


        :return: The description of this DescribeRuleGroupMetadataResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DescribeRuleGroupMetadataResponse.


        :param description: The description of this DescribeRuleGroupMetadataResponse.
        :type description: str
        """

        self._description = description

    @property
    def type(self):
        """Gets the type of this DescribeRuleGroupMetadataResponse.


        :return: The type of this DescribeRuleGroupMetadataResponse.
        :rtype: RuleGroupType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DescribeRuleGroupMetadataResponse.


        :param type: The type of this DescribeRuleGroupMetadataResponse.
        :type type: RuleGroupType
        """

        self._type = type

    @property
    def capacity(self):
        """Gets the capacity of this DescribeRuleGroupMetadataResponse.


        :return: The capacity of this DescribeRuleGroupMetadataResponse.
        :rtype: int
        """
        return self._capacity

    @capacity.setter
    def capacity(self, capacity):
        """Sets the capacity of this DescribeRuleGroupMetadataResponse.


        :param capacity: The capacity of this DescribeRuleGroupMetadataResponse.
        :type capacity: int
        """

        self._capacity = capacity

    @property
    def stateful_rule_options(self):
        """Gets the stateful_rule_options of this DescribeRuleGroupMetadataResponse.


        :return: The stateful_rule_options of this DescribeRuleGroupMetadataResponse.
        :rtype: StatefulRuleOptions
        """
        return self._stateful_rule_options

    @stateful_rule_options.setter
    def stateful_rule_options(self, stateful_rule_options):
        """Sets the stateful_rule_options of this DescribeRuleGroupMetadataResponse.


        :param stateful_rule_options: The stateful_rule_options of this DescribeRuleGroupMetadataResponse.
        :type stateful_rule_options: StatefulRuleOptions
        """

        self._stateful_rule_options = stateful_rule_options

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this DescribeRuleGroupMetadataResponse.


        :return: The last_modified_time of this DescribeRuleGroupMetadataResponse.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this DescribeRuleGroupMetadataResponse.


        :param last_modified_time: The last_modified_time of this DescribeRuleGroupMetadataResponse.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time
