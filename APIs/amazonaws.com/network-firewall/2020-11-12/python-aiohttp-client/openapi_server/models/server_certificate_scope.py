# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServerCertificateScope(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sources: List=None, destinations: List=None, source_ports: List=None, destination_ports: List=None, protocols: List=None):
        """ServerCertificateScope - a model defined in OpenAPI

        :param sources: The sources of this ServerCertificateScope.
        :param destinations: The destinations of this ServerCertificateScope.
        :param source_ports: The source_ports of this ServerCertificateScope.
        :param destination_ports: The destination_ports of this ServerCertificateScope.
        :param protocols: The protocols of this ServerCertificateScope.
        """
        self.openapi_types = {
            'sources': List,
            'destinations': List,
            'source_ports': List,
            'destination_ports': List,
            'protocols': List
        }

        self.attribute_map = {
            'sources': 'Sources',
            'destinations': 'Destinations',
            'source_ports': 'SourcePorts',
            'destination_ports': 'DestinationPorts',
            'protocols': 'Protocols'
        }

        self._sources = sources
        self._destinations = destinations
        self._source_ports = source_ports
        self._destination_ports = destination_ports
        self._protocols = protocols

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServerCertificateScope':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServerCertificateScope of this ServerCertificateScope.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sources(self):
        """Gets the sources of this ServerCertificateScope.


        :return: The sources of this ServerCertificateScope.
        :rtype: List
        """
        return self._sources

    @sources.setter
    def sources(self, sources):
        """Sets the sources of this ServerCertificateScope.


        :param sources: The sources of this ServerCertificateScope.
        :type sources: List
        """

        self._sources = sources

    @property
    def destinations(self):
        """Gets the destinations of this ServerCertificateScope.


        :return: The destinations of this ServerCertificateScope.
        :rtype: List
        """
        return self._destinations

    @destinations.setter
    def destinations(self, destinations):
        """Sets the destinations of this ServerCertificateScope.


        :param destinations: The destinations of this ServerCertificateScope.
        :type destinations: List
        """

        self._destinations = destinations

    @property
    def source_ports(self):
        """Gets the source_ports of this ServerCertificateScope.


        :return: The source_ports of this ServerCertificateScope.
        :rtype: List
        """
        return self._source_ports

    @source_ports.setter
    def source_ports(self, source_ports):
        """Sets the source_ports of this ServerCertificateScope.


        :param source_ports: The source_ports of this ServerCertificateScope.
        :type source_ports: List
        """

        self._source_ports = source_ports

    @property
    def destination_ports(self):
        """Gets the destination_ports of this ServerCertificateScope.


        :return: The destination_ports of this ServerCertificateScope.
        :rtype: List
        """
        return self._destination_ports

    @destination_ports.setter
    def destination_ports(self, destination_ports):
        """Sets the destination_ports of this ServerCertificateScope.


        :param destination_ports: The destination_ports of this ServerCertificateScope.
        :type destination_ports: List
        """

        self._destination_ports = destination_ports

    @property
    def protocols(self):
        """Gets the protocols of this ServerCertificateScope.


        :return: The protocols of this ServerCertificateScope.
        :rtype: List
        """
        return self._protocols

    @protocols.setter
    def protocols(self, protocols):
        """Sets the protocols of this ServerCertificateScope.


        :param protocols: The protocols of this ServerCertificateScope.
        :type protocols: List
        """

        self._protocols = protocols
