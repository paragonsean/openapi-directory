# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_tls_inspection_configuration_request_tls_inspection_configuration import CreateTLSInspectionConfigurationRequestTLSInspectionConfiguration
from openapi_server.models.encryption_configuration import EncryptionConfiguration
from openapi_server import util


class CreateTLSInspectionConfigurationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tls_inspection_configuration_name: str=None, tls_inspection_configuration: CreateTLSInspectionConfigurationRequestTLSInspectionConfiguration=None, description: str=None, tags: List=None, encryption_configuration: EncryptionConfiguration=None):
        """CreateTLSInspectionConfigurationRequest - a model defined in OpenAPI

        :param tls_inspection_configuration_name: The tls_inspection_configuration_name of this CreateTLSInspectionConfigurationRequest.
        :param tls_inspection_configuration: The tls_inspection_configuration of this CreateTLSInspectionConfigurationRequest.
        :param description: The description of this CreateTLSInspectionConfigurationRequest.
        :param tags: The tags of this CreateTLSInspectionConfigurationRequest.
        :param encryption_configuration: The encryption_configuration of this CreateTLSInspectionConfigurationRequest.
        """
        self.openapi_types = {
            'tls_inspection_configuration_name': str,
            'tls_inspection_configuration': CreateTLSInspectionConfigurationRequestTLSInspectionConfiguration,
            'description': str,
            'tags': List,
            'encryption_configuration': EncryptionConfiguration
        }

        self.attribute_map = {
            'tls_inspection_configuration_name': 'TLSInspectionConfigurationName',
            'tls_inspection_configuration': 'TLSInspectionConfiguration',
            'description': 'Description',
            'tags': 'Tags',
            'encryption_configuration': 'EncryptionConfiguration'
        }

        self._tls_inspection_configuration_name = tls_inspection_configuration_name
        self._tls_inspection_configuration = tls_inspection_configuration
        self._description = description
        self._tags = tags
        self._encryption_configuration = encryption_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateTLSInspectionConfigurationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateTLSInspectionConfigurationRequest of this CreateTLSInspectionConfigurationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tls_inspection_configuration_name(self):
        """Gets the tls_inspection_configuration_name of this CreateTLSInspectionConfigurationRequest.


        :return: The tls_inspection_configuration_name of this CreateTLSInspectionConfigurationRequest.
        :rtype: str
        """
        return self._tls_inspection_configuration_name

    @tls_inspection_configuration_name.setter
    def tls_inspection_configuration_name(self, tls_inspection_configuration_name):
        """Sets the tls_inspection_configuration_name of this CreateTLSInspectionConfigurationRequest.


        :param tls_inspection_configuration_name: The tls_inspection_configuration_name of this CreateTLSInspectionConfigurationRequest.
        :type tls_inspection_configuration_name: str
        """
        if tls_inspection_configuration_name is None:
            raise ValueError("Invalid value for `tls_inspection_configuration_name`, must not be `None`")

        self._tls_inspection_configuration_name = tls_inspection_configuration_name

    @property
    def tls_inspection_configuration(self):
        """Gets the tls_inspection_configuration of this CreateTLSInspectionConfigurationRequest.


        :return: The tls_inspection_configuration of this CreateTLSInspectionConfigurationRequest.
        :rtype: CreateTLSInspectionConfigurationRequestTLSInspectionConfiguration
        """
        return self._tls_inspection_configuration

    @tls_inspection_configuration.setter
    def tls_inspection_configuration(self, tls_inspection_configuration):
        """Sets the tls_inspection_configuration of this CreateTLSInspectionConfigurationRequest.


        :param tls_inspection_configuration: The tls_inspection_configuration of this CreateTLSInspectionConfigurationRequest.
        :type tls_inspection_configuration: CreateTLSInspectionConfigurationRequestTLSInspectionConfiguration
        """
        if tls_inspection_configuration is None:
            raise ValueError("Invalid value for `tls_inspection_configuration`, must not be `None`")

        self._tls_inspection_configuration = tls_inspection_configuration

    @property
    def description(self):
        """Gets the description of this CreateTLSInspectionConfigurationRequest.


        :return: The description of this CreateTLSInspectionConfigurationRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateTLSInspectionConfigurationRequest.


        :param description: The description of this CreateTLSInspectionConfigurationRequest.
        :type description: str
        """

        self._description = description

    @property
    def tags(self):
        """Gets the tags of this CreateTLSInspectionConfigurationRequest.


        :return: The tags of this CreateTLSInspectionConfigurationRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateTLSInspectionConfigurationRequest.


        :param tags: The tags of this CreateTLSInspectionConfigurationRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def encryption_configuration(self):
        """Gets the encryption_configuration of this CreateTLSInspectionConfigurationRequest.


        :return: The encryption_configuration of this CreateTLSInspectionConfigurationRequest.
        :rtype: EncryptionConfiguration
        """
        return self._encryption_configuration

    @encryption_configuration.setter
    def encryption_configuration(self, encryption_configuration):
        """Sets the encryption_configuration of this CreateTLSInspectionConfigurationRequest.


        :param encryption_configuration: The encryption_configuration of this CreateTLSInspectionConfigurationRequest.
        :type encryption_configuration: EncryptionConfiguration
        """

        self._encryption_configuration = encryption_configuration
