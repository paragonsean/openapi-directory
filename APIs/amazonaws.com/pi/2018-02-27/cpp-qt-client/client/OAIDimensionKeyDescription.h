/**
 * AWS Performance Insights
 * <fullname>Amazon RDS Performance Insights</fullname> <p>Amazon RDS Performance Insights enables you to monitor and explore different dimensions of database load based on data captured from a running DB instance. The guide provides detailed information about Performance Insights data types, parameters and errors.</p> <p>When Performance Insights is enabled, the Amazon RDS Performance Insights API provides visibility into the performance of your DB instance. Amazon CloudWatch provides the authoritative source for Amazon Web Services service-vended monitoring metrics. Performance Insights offers a domain-specific view of DB load.</p> <p>DB load is measured as average active sessions. Performance Insights provides the data to API consumers as a two-dimensional time-series dataset. The time dimension provides DB load data for each time point in the queried time range. Each time point decomposes overall load in relation to the requested dimensions, measured at that time point. Examples include SQL, Wait event, User, and Host.</p> <ul> <li> <p>To learn more about Performance Insights and Amazon Aurora DB instances, go to the <i> <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights.html\"> Amazon Aurora User Guide</a> </i>. </p> </li> <li> <p>To learn more about Performance Insights and Amazon RDS DB instances, go to the <i> <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html\"> Amazon RDS User Guide</a> </i>. </p> </li> <li> <p>To learn more about Performance Insights and Amazon DocumentDB clusters, go to the <i> <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/performance-insights.html\"> Amazon DocumentDB Developer Guide</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-02-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDimensionKeyDescription.h
 *
 * An object that includes the requested dimension key values and aggregated metric values within a dimension group.
 */

#ifndef OAIDimensionKeyDescription_H
#define OAIDimensionKeyDescription_H

#include <QJsonObject>

#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDimensionKeyDescription : public OAIObject {
public:
    OAIDimensionKeyDescription();
    OAIDimensionKeyDescription(QString json);
    ~OAIDimensionKeyDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap getDimensions() const;
    void setDimensions(const QMap &dimensions);
    bool is_dimensions_Set() const;
    bool is_dimensions_Valid() const;

    double getTotal() const;
    void setTotal(const double &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    QMap getAdditionalMetrics() const;
    void setAdditionalMetrics(const QMap &additional_metrics);
    bool is_additional_metrics_Set() const;
    bool is_additional_metrics_Valid() const;

    QList getPartitions() const;
    void setPartitions(const QList &partitions);
    bool is_partitions_Set() const;
    bool is_partitions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap m_dimensions;
    bool m_dimensions_isSet;
    bool m_dimensions_isValid;

    double m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    QMap m_additional_metrics;
    bool m_additional_metrics_isSet;
    bool m_additional_metrics_isValid;

    QList m_partitions;
    bool m_partitions_isSet;
    bool m_partitions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDimensionKeyDescription)

#endif // OAIDimensionKeyDescription_H
