/**
 * AWS Performance Insights
 * <fullname>Amazon RDS Performance Insights</fullname> <p>Amazon RDS Performance Insights enables you to monitor and explore different dimensions of database load based on data captured from a running DB instance. The guide provides detailed information about Performance Insights data types, parameters and errors.</p> <p>When Performance Insights is enabled, the Amazon RDS Performance Insights API provides visibility into the performance of your DB instance. Amazon CloudWatch provides the authoritative source for Amazon Web Services service-vended monitoring metrics. Performance Insights offers a domain-specific view of DB load.</p> <p>DB load is measured as average active sessions. Performance Insights provides the data to API consumers as a two-dimensional time-series dataset. The time dimension provides DB load data for each time point in the queried time range. Each time point decomposes overall load in relation to the requested dimensions, measured at that time point. Examples include SQL, Wait event, User, and Host.</p> <ul> <li> <p>To learn more about Performance Insights and Amazon Aurora DB instances, go to the <i> <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights.html\"> Amazon Aurora User Guide</a> </i>. </p> </li> <li> <p>To learn more about Performance Insights and Amazon RDS DB instances, go to the <i> <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html\"> Amazon RDS User Guide</a> </i>. </p> </li> <li> <p>To learn more about Performance Insights and Amazon DocumentDB clusters, go to the <i> <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/performance-insights.html\"> Amazon DocumentDB Developer Guide</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-02-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetricQuery.h
 *
 * A single query to be processed. You must provide the metric to query. If no other parameters are specified, Performance Insights returns all data points for the specified metric. Optionally, you can request that the data points be aggregated by dimension group (&lt;code&gt;GroupBy&lt;/code&gt;), and return only those data points that match your criteria (&lt;code&gt;Filter&lt;/code&gt;).
 */

#ifndef OAIMetricQuery_H
#define OAIMetricQuery_H

#include <QJsonObject>

#include "OAIMetricQuery_GroupBy.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMetricQuery_GroupBy;

class OAIMetricQuery : public OAIObject {
public:
    OAIMetricQuery();
    OAIMetricQuery(QString json);
    ~OAIMetricQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMetric() const;
    void setMetric(const QString &metric);
    bool is_metric_Set() const;
    bool is_metric_Valid() const;

    OAIMetricQuery_GroupBy getGroupBy() const;
    void setGroupBy(const OAIMetricQuery_GroupBy &group_by);
    bool is_group_by_Set() const;
    bool is_group_by_Valid() const;

    QMap getFilter() const;
    void setFilter(const QMap &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_metric;
    bool m_metric_isSet;
    bool m_metric_isValid;

    OAIMetricQuery_GroupBy m_group_by;
    bool m_group_by_isSet;
    bool m_group_by_isValid;

    QMap m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetricQuery)

#endif // OAIMetricQuery_H
