/**
 * AWS Performance Insights
 * <fullname>Amazon RDS Performance Insights</fullname> <p>Amazon RDS Performance Insights enables you to monitor and explore different dimensions of database load based on data captured from a running DB instance. The guide provides detailed information about Performance Insights data types, parameters and errors.</p> <p>When Performance Insights is enabled, the Amazon RDS Performance Insights API provides visibility into the performance of your DB instance. Amazon CloudWatch provides the authoritative source for Amazon Web Services service-vended monitoring metrics. Performance Insights offers a domain-specific view of DB load.</p> <p>DB load is measured as average active sessions. Performance Insights provides the data to API consumers as a two-dimensional time-series dataset. The time dimension provides DB load data for each time point in the queried time range. Each time point decomposes overall load in relation to the requested dimensions, measured at that time point. Examples include SQL, Wait event, User, and Host.</p> <ul> <li> <p>To learn more about Performance Insights and Amazon Aurora DB instances, go to the <i> <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights.html\"> Amazon Aurora User Guide</a> </i>. </p> </li> <li> <p>To learn more about Performance Insights and Amazon RDS DB instances, go to the <i> <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html\"> Amazon RDS User Guide</a> </i>. </p> </li> <li> <p>To learn more about Performance Insights and Amazon DocumentDB clusters, go to the <i> <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/performance-insights.html\"> Amazon DocumentDB Developer Guide</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-02-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeDimensionKeysResponse.h
 *
 * 
 */

#ifndef OAIDescribeDimensionKeysResponse_H
#define OAIDescribeDimensionKeysResponse_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeDimensionKeysResponse : public OAIObject {
public:
    OAIDescribeDimensionKeysResponse();
    OAIDescribeDimensionKeysResponse(QString json);
    ~OAIDescribeDimensionKeysResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getAlignedStartTime() const;
    void setAlignedStartTime(const QDateTime &aligned_start_time);
    bool is_aligned_start_time_Set() const;
    bool is_aligned_start_time_Valid() const;

    QDateTime getAlignedEndTime() const;
    void setAlignedEndTime(const QDateTime &aligned_end_time);
    bool is_aligned_end_time_Set() const;
    bool is_aligned_end_time_Valid() const;

    QList getPartitionKeys() const;
    void setPartitionKeys(const QList &partition_keys);
    bool is_partition_keys_Set() const;
    bool is_partition_keys_Valid() const;

    QList getKeys() const;
    void setKeys(const QList &keys);
    bool is_keys_Set() const;
    bool is_keys_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_aligned_start_time;
    bool m_aligned_start_time_isSet;
    bool m_aligned_start_time_isValid;

    QDateTime m_aligned_end_time;
    bool m_aligned_end_time_isSet;
    bool m_aligned_end_time_isValid;

    QList m_partition_keys;
    bool m_partition_keys_isSet;
    bool m_partition_keys_isValid;

    QList m_keys;
    bool m_keys_isSet;
    bool m_keys_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeDimensionKeysResponse)

#endif // OAIDescribeDimensionKeysResponse_H
