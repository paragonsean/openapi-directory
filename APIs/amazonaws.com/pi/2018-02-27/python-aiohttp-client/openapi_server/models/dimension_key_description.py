# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DimensionKeyDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dimensions: Dict=None, total: float=None, additional_metrics: Dict=None, partitions: List=None):
        """DimensionKeyDescription - a model defined in OpenAPI

        :param dimensions: The dimensions of this DimensionKeyDescription.
        :param total: The total of this DimensionKeyDescription.
        :param additional_metrics: The additional_metrics of this DimensionKeyDescription.
        :param partitions: The partitions of this DimensionKeyDescription.
        """
        self.openapi_types = {
            'dimensions': Dict,
            'total': float,
            'additional_metrics': Dict,
            'partitions': List
        }

        self.attribute_map = {
            'dimensions': 'Dimensions',
            'total': 'Total',
            'additional_metrics': 'AdditionalMetrics',
            'partitions': 'Partitions'
        }

        self._dimensions = dimensions
        self._total = total
        self._additional_metrics = additional_metrics
        self._partitions = partitions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DimensionKeyDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DimensionKeyDescription of this DimensionKeyDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dimensions(self):
        """Gets the dimensions of this DimensionKeyDescription.


        :return: The dimensions of this DimensionKeyDescription.
        :rtype: Dict
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this DimensionKeyDescription.


        :param dimensions: The dimensions of this DimensionKeyDescription.
        :type dimensions: Dict
        """

        self._dimensions = dimensions

    @property
    def total(self):
        """Gets the total of this DimensionKeyDescription.


        :return: The total of this DimensionKeyDescription.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this DimensionKeyDescription.


        :param total: The total of this DimensionKeyDescription.
        :type total: float
        """

        self._total = total

    @property
    def additional_metrics(self):
        """Gets the additional_metrics of this DimensionKeyDescription.


        :return: The additional_metrics of this DimensionKeyDescription.
        :rtype: Dict
        """
        return self._additional_metrics

    @additional_metrics.setter
    def additional_metrics(self, additional_metrics):
        """Sets the additional_metrics of this DimensionKeyDescription.


        :param additional_metrics: The additional_metrics of this DimensionKeyDescription.
        :type additional_metrics: Dict
        """

        self._additional_metrics = additional_metrics

    @property
    def partitions(self):
        """Gets the partitions of this DimensionKeyDescription.


        :return: The partitions of this DimensionKeyDescription.
        :rtype: List
        """
        return self._partitions

    @partitions.setter
    def partitions(self, partitions):
        """Sets the partitions of this DimensionKeyDescription.


        :param partitions: The partitions of this DimensionKeyDescription.
        :type partitions: List
        """

        self._partitions = partitions
