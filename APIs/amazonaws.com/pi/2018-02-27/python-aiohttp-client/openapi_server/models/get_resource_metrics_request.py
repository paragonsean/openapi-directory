# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.period_alignment import PeriodAlignment
from openapi_server.models.service_type import ServiceType
from openapi_server import util


class GetResourceMetricsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_type: ServiceType=None, identifier: str=None, metric_queries: List=None, start_time: datetime=None, end_time: datetime=None, period_in_seconds: int=None, max_results: int=None, next_token: str=None, period_alignment: PeriodAlignment=None):
        """GetResourceMetricsRequest - a model defined in OpenAPI

        :param service_type: The service_type of this GetResourceMetricsRequest.
        :param identifier: The identifier of this GetResourceMetricsRequest.
        :param metric_queries: The metric_queries of this GetResourceMetricsRequest.
        :param start_time: The start_time of this GetResourceMetricsRequest.
        :param end_time: The end_time of this GetResourceMetricsRequest.
        :param period_in_seconds: The period_in_seconds of this GetResourceMetricsRequest.
        :param max_results: The max_results of this GetResourceMetricsRequest.
        :param next_token: The next_token of this GetResourceMetricsRequest.
        :param period_alignment: The period_alignment of this GetResourceMetricsRequest.
        """
        self.openapi_types = {
            'service_type': ServiceType,
            'identifier': str,
            'metric_queries': List,
            'start_time': datetime,
            'end_time': datetime,
            'period_in_seconds': int,
            'max_results': int,
            'next_token': str,
            'period_alignment': PeriodAlignment
        }

        self.attribute_map = {
            'service_type': 'ServiceType',
            'identifier': 'Identifier',
            'metric_queries': 'MetricQueries',
            'start_time': 'StartTime',
            'end_time': 'EndTime',
            'period_in_seconds': 'PeriodInSeconds',
            'max_results': 'MaxResults',
            'next_token': 'NextToken',
            'period_alignment': 'PeriodAlignment'
        }

        self._service_type = service_type
        self._identifier = identifier
        self._metric_queries = metric_queries
        self._start_time = start_time
        self._end_time = end_time
        self._period_in_seconds = period_in_seconds
        self._max_results = max_results
        self._next_token = next_token
        self._period_alignment = period_alignment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetResourceMetricsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetResourceMetricsRequest of this GetResourceMetricsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_type(self):
        """Gets the service_type of this GetResourceMetricsRequest.


        :return: The service_type of this GetResourceMetricsRequest.
        :rtype: ServiceType
        """
        return self._service_type

    @service_type.setter
    def service_type(self, service_type):
        """Sets the service_type of this GetResourceMetricsRequest.


        :param service_type: The service_type of this GetResourceMetricsRequest.
        :type service_type: ServiceType
        """
        if service_type is None:
            raise ValueError("Invalid value for `service_type`, must not be `None`")

        self._service_type = service_type

    @property
    def identifier(self):
        """Gets the identifier of this GetResourceMetricsRequest.


        :return: The identifier of this GetResourceMetricsRequest.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this GetResourceMetricsRequest.


        :param identifier: The identifier of this GetResourceMetricsRequest.
        :type identifier: str
        """
        if identifier is None:
            raise ValueError("Invalid value for `identifier`, must not be `None`")

        self._identifier = identifier

    @property
    def metric_queries(self):
        """Gets the metric_queries of this GetResourceMetricsRequest.


        :return: The metric_queries of this GetResourceMetricsRequest.
        :rtype: List
        """
        return self._metric_queries

    @metric_queries.setter
    def metric_queries(self, metric_queries):
        """Sets the metric_queries of this GetResourceMetricsRequest.


        :param metric_queries: The metric_queries of this GetResourceMetricsRequest.
        :type metric_queries: List
        """
        if metric_queries is None:
            raise ValueError("Invalid value for `metric_queries`, must not be `None`")

        self._metric_queries = metric_queries

    @property
    def start_time(self):
        """Gets the start_time of this GetResourceMetricsRequest.


        :return: The start_time of this GetResourceMetricsRequest.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GetResourceMetricsRequest.


        :param start_time: The start_time of this GetResourceMetricsRequest.
        :type start_time: datetime
        """
        if start_time is None:
            raise ValueError("Invalid value for `start_time`, must not be `None`")

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this GetResourceMetricsRequest.


        :return: The end_time of this GetResourceMetricsRequest.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GetResourceMetricsRequest.


        :param end_time: The end_time of this GetResourceMetricsRequest.
        :type end_time: datetime
        """
        if end_time is None:
            raise ValueError("Invalid value for `end_time`, must not be `None`")

        self._end_time = end_time

    @property
    def period_in_seconds(self):
        """Gets the period_in_seconds of this GetResourceMetricsRequest.


        :return: The period_in_seconds of this GetResourceMetricsRequest.
        :rtype: int
        """
        return self._period_in_seconds

    @period_in_seconds.setter
    def period_in_seconds(self, period_in_seconds):
        """Sets the period_in_seconds of this GetResourceMetricsRequest.


        :param period_in_seconds: The period_in_seconds of this GetResourceMetricsRequest.
        :type period_in_seconds: int
        """

        self._period_in_seconds = period_in_seconds

    @property
    def max_results(self):
        """Gets the max_results of this GetResourceMetricsRequest.


        :return: The max_results of this GetResourceMetricsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this GetResourceMetricsRequest.


        :param max_results: The max_results of this GetResourceMetricsRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this GetResourceMetricsRequest.


        :return: The next_token of this GetResourceMetricsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this GetResourceMetricsRequest.


        :param next_token: The next_token of this GetResourceMetricsRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def period_alignment(self):
        """Gets the period_alignment of this GetResourceMetricsRequest.


        :return: The period_alignment of this GetResourceMetricsRequest.
        :rtype: PeriodAlignment
        """
        return self._period_alignment

    @period_alignment.setter
    def period_alignment(self, period_alignment):
        """Sets the period_alignment of this GetResourceMetricsRequest.


        :param period_alignment: The period_alignment of this GetResourceMetricsRequest.
        :type period_alignment: PeriodAlignment
        """

        self._period_alignment = period_alignment
