/*
 * AWS Performance Insights
 * <fullname>Amazon RDS Performance Insights</fullname> <p>Amazon RDS Performance Insights enables you to monitor and explore different dimensions of database load based on data captured from a running DB instance. The guide provides detailed information about Performance Insights data types, parameters and errors.</p> <p>When Performance Insights is enabled, the Amazon RDS Performance Insights API provides visibility into the performance of your DB instance. Amazon CloudWatch provides the authoritative source for Amazon Web Services service-vended monitoring metrics. Performance Insights offers a domain-specific view of DB load.</p> <p>DB load is measured as average active sessions. Performance Insights provides the data to API consumers as a two-dimensional time-series dataset. The time dimension provides DB load data for each time point in the queried time range. Each time point decomposes overall load in relation to the requested dimensions, measured at that time point. Examples include SQL, Wait event, User, and Host.</p> <ul> <li> <p>To learn more about Performance Insights and Amazon Aurora DB instances, go to the <i> <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights.html\"> Amazon Aurora User Guide</a> </i>. </p> </li> <li> <p>To learn more about Performance Insights and Amazon RDS DB instances, go to the <i> <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html\"> Amazon RDS User Guide</a> </i>. </p> </li> <li> <p>To learn more about Performance Insights and Amazon DocumentDB clusters, go to the <i> <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/performance-insights.html\"> Amazon DocumentDB Developer Guide</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-02-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetResourceMetricsResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:26.260854-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetResourceMetricsResponse {
  public static final String SERIALIZED_NAME_ALIGNED_START_TIME = "AlignedStartTime";
  @SerializedName(SERIALIZED_NAME_ALIGNED_START_TIME)
  private OffsetDateTime alignedStartTime;

  public static final String SERIALIZED_NAME_ALIGNED_END_TIME = "AlignedEndTime";
  @SerializedName(SERIALIZED_NAME_ALIGNED_END_TIME)
  private OffsetDateTime alignedEndTime;

  public static final String SERIALIZED_NAME_IDENTIFIER = "Identifier";
  @SerializedName(SERIALIZED_NAME_IDENTIFIER)
  private String identifier;

  public static final String SERIALIZED_NAME_METRIC_LIST = "MetricList";
  @SerializedName(SERIALIZED_NAME_METRIC_LIST)
  private List metricList;

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "NextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public GetResourceMetricsResponse() {
  }

  public GetResourceMetricsResponse alignedStartTime(OffsetDateTime alignedStartTime) {
    this.alignedStartTime = alignedStartTime;
    return this;
  }

  /**
   * Get alignedStartTime
   * @return alignedStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getAlignedStartTime() {
    return alignedStartTime;
  }

  public void setAlignedStartTime(OffsetDateTime alignedStartTime) {
    this.alignedStartTime = alignedStartTime;
  }


  public GetResourceMetricsResponse alignedEndTime(OffsetDateTime alignedEndTime) {
    this.alignedEndTime = alignedEndTime;
    return this;
  }

  /**
   * Get alignedEndTime
   * @return alignedEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getAlignedEndTime() {
    return alignedEndTime;
  }

  public void setAlignedEndTime(OffsetDateTime alignedEndTime) {
    this.alignedEndTime = alignedEndTime;
  }


  public GetResourceMetricsResponse identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

  /**
   * Get identifier
   * @return identifier
   */
  @javax.annotation.Nullable
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public GetResourceMetricsResponse metricList(List metricList) {
    this.metricList = metricList;
    return this;
  }

  /**
   * Get metricList
   * @return metricList
   */
  @javax.annotation.Nullable
  public List getMetricList() {
    return metricList;
  }

  public void setMetricList(List metricList) {
    this.metricList = metricList;
  }


  public GetResourceMetricsResponse nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * Get nextToken
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetResourceMetricsResponse getResourceMetricsResponse = (GetResourceMetricsResponse) o;
    return Objects.equals(this.alignedStartTime, getResourceMetricsResponse.alignedStartTime) &&
        Objects.equals(this.alignedEndTime, getResourceMetricsResponse.alignedEndTime) &&
        Objects.equals(this.identifier, getResourceMetricsResponse.identifier) &&
        Objects.equals(this.metricList, getResourceMetricsResponse.metricList) &&
        Objects.equals(this.nextToken, getResourceMetricsResponse.nextToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alignedStartTime, alignedEndTime, identifier, metricList, nextToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetResourceMetricsResponse {\n");
    sb.append("    alignedStartTime: ").append(toIndentedString(alignedStartTime)).append("\n");
    sb.append("    alignedEndTime: ").append(toIndentedString(alignedEndTime)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    metricList: ").append(toIndentedString(metricList)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AlignedStartTime");
    openapiFields.add("AlignedEndTime");
    openapiFields.add("Identifier");
    openapiFields.add("MetricList");
    openapiFields.add("NextToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetResourceMetricsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetResourceMetricsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetResourceMetricsResponse is not found in the empty JSON string", GetResourceMetricsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetResourceMetricsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetResourceMetricsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AlignedStartTime`
      if (jsonObj.get("AlignedStartTime") != null && !jsonObj.get("AlignedStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("AlignedStartTime"));
      }
      // validate the optional field `AlignedEndTime`
      if (jsonObj.get("AlignedEndTime") != null && !jsonObj.get("AlignedEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("AlignedEndTime"));
      }
      // validate the optional field `Identifier`
      if (jsonObj.get("Identifier") != null && !jsonObj.get("Identifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Identifier"));
      }
      // validate the optional field `MetricList`
      if (jsonObj.get("MetricList") != null && !jsonObj.get("MetricList").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("MetricList"));
      }
      // validate the optional field `NextToken`
      if (jsonObj.get("NextToken") != null && !jsonObj.get("NextToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NextToken"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetResourceMetricsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetResourceMetricsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetResourceMetricsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetResourceMetricsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetResourceMetricsResponse>() {
           @Override
           public void write(JsonWriter out, GetResourceMetricsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetResourceMetricsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetResourceMetricsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetResourceMetricsResponse
   * @throws IOException if the JSON string is invalid with respect to GetResourceMetricsResponse
   */
  public static GetResourceMetricsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetResourceMetricsResponse.class);
  }

  /**
   * Convert an instance of GetResourceMetricsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

