/*
 * AWS Performance Insights
 * <fullname>Amazon RDS Performance Insights</fullname> <p>Amazon RDS Performance Insights enables you to monitor and explore different dimensions of database load based on data captured from a running DB instance. The guide provides detailed information about Performance Insights data types, parameters and errors.</p> <p>When Performance Insights is enabled, the Amazon RDS Performance Insights API provides visibility into the performance of your DB instance. Amazon CloudWatch provides the authoritative source for Amazon Web Services service-vended monitoring metrics. Performance Insights offers a domain-specific view of DB load.</p> <p>DB load is measured as average active sessions. Performance Insights provides the data to API consumers as a two-dimensional time-series dataset. The time dimension provides DB load data for each time point in the queried time range. Each time point decomposes overall load in relation to the requested dimensions, measured at that time point. Examples include SQL, Wait event, User, and Host.</p> <ul> <li> <p>To learn more about Performance Insights and Amazon Aurora DB instances, go to the <i> <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights.html\"> Amazon Aurora User Guide</a> </i>. </p> </li> <li> <p>To learn more about Performance Insights and Amazon RDS DB instances, go to the <i> <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html\"> Amazon RDS User Guide</a> </i>. </p> </li> <li> <p>To learn more about Performance Insights and Amazon DocumentDB clusters, go to the <i> <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/performance-insights.html\"> Amazon DocumentDB Developer Guide</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-02-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PeriodAlignment;
import org.openapitools.client.model.ServiceType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetResourceMetricsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:26.260854-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetResourceMetricsRequest {
  public static final String SERIALIZED_NAME_SERVICE_TYPE = "ServiceType";
  @SerializedName(SERIALIZED_NAME_SERVICE_TYPE)
  private ServiceType serviceType;

  public static final String SERIALIZED_NAME_IDENTIFIER = "Identifier";
  @SerializedName(SERIALIZED_NAME_IDENTIFIER)
  private String identifier;

  public static final String SERIALIZED_NAME_METRIC_QUERIES = "MetricQueries";
  @SerializedName(SERIALIZED_NAME_METRIC_QUERIES)
  private List metricQueries;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_PERIOD_IN_SECONDS = "PeriodInSeconds";
  @SerializedName(SERIALIZED_NAME_PERIOD_IN_SECONDS)
  private Integer periodInSeconds;

  public static final String SERIALIZED_NAME_MAX_RESULTS = "MaxResults";
  @SerializedName(SERIALIZED_NAME_MAX_RESULTS)
  private Integer maxResults;

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "NextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public static final String SERIALIZED_NAME_PERIOD_ALIGNMENT = "PeriodAlignment";
  @SerializedName(SERIALIZED_NAME_PERIOD_ALIGNMENT)
  private PeriodAlignment periodAlignment;

  public GetResourceMetricsRequest() {
  }

  public GetResourceMetricsRequest serviceType(ServiceType serviceType) {
    this.serviceType = serviceType;
    return this;
  }

  /**
   * Get serviceType
   * @return serviceType
   */
  @javax.annotation.Nonnull
  public ServiceType getServiceType() {
    return serviceType;
  }

  public void setServiceType(ServiceType serviceType) {
    this.serviceType = serviceType;
  }


  public GetResourceMetricsRequest identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

  /**
   * Get identifier
   * @return identifier
   */
  @javax.annotation.Nonnull
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public GetResourceMetricsRequest metricQueries(List metricQueries) {
    this.metricQueries = metricQueries;
    return this;
  }

  /**
   * Get metricQueries
   * @return metricQueries
   */
  @javax.annotation.Nonnull
  public List getMetricQueries() {
    return metricQueries;
  }

  public void setMetricQueries(List metricQueries) {
    this.metricQueries = metricQueries;
  }


  public GetResourceMetricsRequest startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public GetResourceMetricsRequest endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public GetResourceMetricsRequest periodInSeconds(Integer periodInSeconds) {
    this.periodInSeconds = periodInSeconds;
    return this;
  }

  /**
   * Get periodInSeconds
   * @return periodInSeconds
   */
  @javax.annotation.Nullable
  public Integer getPeriodInSeconds() {
    return periodInSeconds;
  }

  public void setPeriodInSeconds(Integer periodInSeconds) {
    this.periodInSeconds = periodInSeconds;
  }


  public GetResourceMetricsRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

  /**
   * Get maxResults
   * @return maxResults
   */
  @javax.annotation.Nullable
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }


  public GetResourceMetricsRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * Get nextToken
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }


  public GetResourceMetricsRequest periodAlignment(PeriodAlignment periodAlignment) {
    this.periodAlignment = periodAlignment;
    return this;
  }

  /**
   * Get periodAlignment
   * @return periodAlignment
   */
  @javax.annotation.Nullable
  public PeriodAlignment getPeriodAlignment() {
    return periodAlignment;
  }

  public void setPeriodAlignment(PeriodAlignment periodAlignment) {
    this.periodAlignment = periodAlignment;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetResourceMetricsRequest getResourceMetricsRequest = (GetResourceMetricsRequest) o;
    return Objects.equals(this.serviceType, getResourceMetricsRequest.serviceType) &&
        Objects.equals(this.identifier, getResourceMetricsRequest.identifier) &&
        Objects.equals(this.metricQueries, getResourceMetricsRequest.metricQueries) &&
        Objects.equals(this.startTime, getResourceMetricsRequest.startTime) &&
        Objects.equals(this.endTime, getResourceMetricsRequest.endTime) &&
        Objects.equals(this.periodInSeconds, getResourceMetricsRequest.periodInSeconds) &&
        Objects.equals(this.maxResults, getResourceMetricsRequest.maxResults) &&
        Objects.equals(this.nextToken, getResourceMetricsRequest.nextToken) &&
        Objects.equals(this.periodAlignment, getResourceMetricsRequest.periodAlignment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serviceType, identifier, metricQueries, startTime, endTime, periodInSeconds, maxResults, nextToken, periodAlignment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetResourceMetricsRequest {\n");
    sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    metricQueries: ").append(toIndentedString(metricQueries)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    periodInSeconds: ").append(toIndentedString(periodInSeconds)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    periodAlignment: ").append(toIndentedString(periodAlignment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ServiceType");
    openapiFields.add("Identifier");
    openapiFields.add("MetricQueries");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");
    openapiFields.add("PeriodInSeconds");
    openapiFields.add("MaxResults");
    openapiFields.add("NextToken");
    openapiFields.add("PeriodAlignment");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ServiceType");
    openapiRequiredFields.add("Identifier");
    openapiRequiredFields.add("MetricQueries");
    openapiRequiredFields.add("StartTime");
    openapiRequiredFields.add("EndTime");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetResourceMetricsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetResourceMetricsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetResourceMetricsRequest is not found in the empty JSON string", GetResourceMetricsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetResourceMetricsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetResourceMetricsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetResourceMetricsRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ServiceType`
      ServiceType.validateJsonElement(jsonObj.get("ServiceType"));
      // validate the required field `Identifier`
      String.validateJsonElement(jsonObj.get("Identifier"));
      // validate the required field `MetricQueries`
      List.validateJsonElement(jsonObj.get("MetricQueries"));
      // validate the required field `StartTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("StartTime"));
      // validate the required field `EndTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("EndTime"));
      // validate the optional field `PeriodInSeconds`
      if (jsonObj.get("PeriodInSeconds") != null && !jsonObj.get("PeriodInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PeriodInSeconds"));
      }
      // validate the optional field `MaxResults`
      if (jsonObj.get("MaxResults") != null && !jsonObj.get("MaxResults").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxResults"));
      }
      // validate the optional field `NextToken`
      if (jsonObj.get("NextToken") != null && !jsonObj.get("NextToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NextToken"));
      }
      // validate the optional field `PeriodAlignment`
      if (jsonObj.get("PeriodAlignment") != null && !jsonObj.get("PeriodAlignment").isJsonNull()) {
        PeriodAlignment.validateJsonElement(jsonObj.get("PeriodAlignment"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetResourceMetricsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetResourceMetricsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetResourceMetricsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetResourceMetricsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GetResourceMetricsRequest>() {
           @Override
           public void write(JsonWriter out, GetResourceMetricsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetResourceMetricsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetResourceMetricsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetResourceMetricsRequest
   * @throws IOException if the JSON string is invalid with respect to GetResourceMetricsRequest
   */
  public static GetResourceMetricsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetResourceMetricsRequest.class);
  }

  /**
   * Convert an instance of GetResourceMetricsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

