# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_set_state import ImageSetState
from openapi_server.models.image_set_workflow_status import ImageSetWorkflowStatus
from openapi_server import util


class CopyDestinationImageSetProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_set_id: str=None, latest_version_id: str=None, image_set_state: ImageSetState=None, image_set_workflow_status: ImageSetWorkflowStatus=None, created_at: datetime=None, updated_at: datetime=None, image_set_arn: str=None):
        """CopyDestinationImageSetProperties - a model defined in OpenAPI

        :param image_set_id: The image_set_id of this CopyDestinationImageSetProperties.
        :param latest_version_id: The latest_version_id of this CopyDestinationImageSetProperties.
        :param image_set_state: The image_set_state of this CopyDestinationImageSetProperties.
        :param image_set_workflow_status: The image_set_workflow_status of this CopyDestinationImageSetProperties.
        :param created_at: The created_at of this CopyDestinationImageSetProperties.
        :param updated_at: The updated_at of this CopyDestinationImageSetProperties.
        :param image_set_arn: The image_set_arn of this CopyDestinationImageSetProperties.
        """
        self.openapi_types = {
            'image_set_id': str,
            'latest_version_id': str,
            'image_set_state': ImageSetState,
            'image_set_workflow_status': ImageSetWorkflowStatus,
            'created_at': datetime,
            'updated_at': datetime,
            'image_set_arn': str
        }

        self.attribute_map = {
            'image_set_id': 'imageSetId',
            'latest_version_id': 'latestVersionId',
            'image_set_state': 'imageSetState',
            'image_set_workflow_status': 'imageSetWorkflowStatus',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt',
            'image_set_arn': 'imageSetArn'
        }

        self._image_set_id = image_set_id
        self._latest_version_id = latest_version_id
        self._image_set_state = image_set_state
        self._image_set_workflow_status = image_set_workflow_status
        self._created_at = created_at
        self._updated_at = updated_at
        self._image_set_arn = image_set_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CopyDestinationImageSetProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CopyDestinationImageSetProperties of this CopyDestinationImageSetProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_set_id(self):
        """Gets the image_set_id of this CopyDestinationImageSetProperties.


        :return: The image_set_id of this CopyDestinationImageSetProperties.
        :rtype: str
        """
        return self._image_set_id

    @image_set_id.setter
    def image_set_id(self, image_set_id):
        """Sets the image_set_id of this CopyDestinationImageSetProperties.


        :param image_set_id: The image_set_id of this CopyDestinationImageSetProperties.
        :type image_set_id: str
        """
        if image_set_id is None:
            raise ValueError("Invalid value for `image_set_id`, must not be `None`")

        self._image_set_id = image_set_id

    @property
    def latest_version_id(self):
        """Gets the latest_version_id of this CopyDestinationImageSetProperties.


        :return: The latest_version_id of this CopyDestinationImageSetProperties.
        :rtype: str
        """
        return self._latest_version_id

    @latest_version_id.setter
    def latest_version_id(self, latest_version_id):
        """Sets the latest_version_id of this CopyDestinationImageSetProperties.


        :param latest_version_id: The latest_version_id of this CopyDestinationImageSetProperties.
        :type latest_version_id: str
        """
        if latest_version_id is None:
            raise ValueError("Invalid value for `latest_version_id`, must not be `None`")

        self._latest_version_id = latest_version_id

    @property
    def image_set_state(self):
        """Gets the image_set_state of this CopyDestinationImageSetProperties.


        :return: The image_set_state of this CopyDestinationImageSetProperties.
        :rtype: ImageSetState
        """
        return self._image_set_state

    @image_set_state.setter
    def image_set_state(self, image_set_state):
        """Sets the image_set_state of this CopyDestinationImageSetProperties.


        :param image_set_state: The image_set_state of this CopyDestinationImageSetProperties.
        :type image_set_state: ImageSetState
        """

        self._image_set_state = image_set_state

    @property
    def image_set_workflow_status(self):
        """Gets the image_set_workflow_status of this CopyDestinationImageSetProperties.


        :return: The image_set_workflow_status of this CopyDestinationImageSetProperties.
        :rtype: ImageSetWorkflowStatus
        """
        return self._image_set_workflow_status

    @image_set_workflow_status.setter
    def image_set_workflow_status(self, image_set_workflow_status):
        """Sets the image_set_workflow_status of this CopyDestinationImageSetProperties.


        :param image_set_workflow_status: The image_set_workflow_status of this CopyDestinationImageSetProperties.
        :type image_set_workflow_status: ImageSetWorkflowStatus
        """

        self._image_set_workflow_status = image_set_workflow_status

    @property
    def created_at(self):
        """Gets the created_at of this CopyDestinationImageSetProperties.


        :return: The created_at of this CopyDestinationImageSetProperties.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this CopyDestinationImageSetProperties.


        :param created_at: The created_at of this CopyDestinationImageSetProperties.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this CopyDestinationImageSetProperties.


        :return: The updated_at of this CopyDestinationImageSetProperties.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this CopyDestinationImageSetProperties.


        :param updated_at: The updated_at of this CopyDestinationImageSetProperties.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def image_set_arn(self):
        """Gets the image_set_arn of this CopyDestinationImageSetProperties.


        :return: The image_set_arn of this CopyDestinationImageSetProperties.
        :rtype: str
        """
        return self._image_set_arn

    @image_set_arn.setter
    def image_set_arn(self, image_set_arn):
        """Sets the image_set_arn of this CopyDestinationImageSetProperties.


        :param image_set_arn: The image_set_arn of this CopyDestinationImageSetProperties.
        :type image_set_arn: str
        """

        self._image_set_arn = image_set_arn
