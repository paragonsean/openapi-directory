# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_sets_metadata_summary_dicom_tags import ImageSetsMetadataSummaryDICOMTags
from openapi_server import util


class ImageSetsMetadataSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_set_id: str=None, version: int=None, created_at: datetime=None, updated_at: datetime=None, dicom_tags: ImageSetsMetadataSummaryDICOMTags=None):
        """ImageSetsMetadataSummary - a model defined in OpenAPI

        :param image_set_id: The image_set_id of this ImageSetsMetadataSummary.
        :param version: The version of this ImageSetsMetadataSummary.
        :param created_at: The created_at of this ImageSetsMetadataSummary.
        :param updated_at: The updated_at of this ImageSetsMetadataSummary.
        :param dicom_tags: The dicom_tags of this ImageSetsMetadataSummary.
        """
        self.openapi_types = {
            'image_set_id': str,
            'version': int,
            'created_at': datetime,
            'updated_at': datetime,
            'dicom_tags': ImageSetsMetadataSummaryDICOMTags
        }

        self.attribute_map = {
            'image_set_id': 'imageSetId',
            'version': 'version',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt',
            'dicom_tags': 'DICOMTags'
        }

        self._image_set_id = image_set_id
        self._version = version
        self._created_at = created_at
        self._updated_at = updated_at
        self._dicom_tags = dicom_tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageSetsMetadataSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageSetsMetadataSummary of this ImageSetsMetadataSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_set_id(self):
        """Gets the image_set_id of this ImageSetsMetadataSummary.


        :return: The image_set_id of this ImageSetsMetadataSummary.
        :rtype: str
        """
        return self._image_set_id

    @image_set_id.setter
    def image_set_id(self, image_set_id):
        """Sets the image_set_id of this ImageSetsMetadataSummary.


        :param image_set_id: The image_set_id of this ImageSetsMetadataSummary.
        :type image_set_id: str
        """
        if image_set_id is None:
            raise ValueError("Invalid value for `image_set_id`, must not be `None`")

        self._image_set_id = image_set_id

    @property
    def version(self):
        """Gets the version of this ImageSetsMetadataSummary.


        :return: The version of this ImageSetsMetadataSummary.
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ImageSetsMetadataSummary.


        :param version: The version of this ImageSetsMetadataSummary.
        :type version: int
        """

        self._version = version

    @property
    def created_at(self):
        """Gets the created_at of this ImageSetsMetadataSummary.


        :return: The created_at of this ImageSetsMetadataSummary.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ImageSetsMetadataSummary.


        :param created_at: The created_at of this ImageSetsMetadataSummary.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this ImageSetsMetadataSummary.


        :return: The updated_at of this ImageSetsMetadataSummary.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this ImageSetsMetadataSummary.


        :param updated_at: The updated_at of this ImageSetsMetadataSummary.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def dicom_tags(self):
        """Gets the dicom_tags of this ImageSetsMetadataSummary.


        :return: The dicom_tags of this ImageSetsMetadataSummary.
        :rtype: ImageSetsMetadataSummaryDICOMTags
        """
        return self._dicom_tags

    @dicom_tags.setter
    def dicom_tags(self, dicom_tags):
        """Sets the dicom_tags of this ImageSetsMetadataSummary.


        :param dicom_tags: The dicom_tags of this ImageSetsMetadataSummary.
        :type dicom_tags: ImageSetsMetadataSummaryDICOMTags
        """

        self._dicom_tags = dicom_tags
