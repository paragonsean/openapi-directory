# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetImageSetMetadataResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_set_metadata_blob: str=None):
        """GetImageSetMetadataResponse - a model defined in OpenAPI

        :param image_set_metadata_blob: The image_set_metadata_blob of this GetImageSetMetadataResponse.
        """
        self.openapi_types = {
            'image_set_metadata_blob': str
        }

        self.attribute_map = {
            'image_set_metadata_blob': 'imageSetMetadataBlob'
        }

        self._image_set_metadata_blob = image_set_metadata_blob

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetImageSetMetadataResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetImageSetMetadataResponse of this GetImageSetMetadataResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_set_metadata_blob(self):
        """Gets the image_set_metadata_blob of this GetImageSetMetadataResponse.


        :return: The image_set_metadata_blob of this GetImageSetMetadataResponse.
        :rtype: str
        """
        return self._image_set_metadata_blob

    @image_set_metadata_blob.setter
    def image_set_metadata_blob(self, image_set_metadata_blob):
        """Sets the image_set_metadata_blob of this GetImageSetMetadataResponse.


        :param image_set_metadata_blob: The image_set_metadata_blob of this GetImageSetMetadataResponse.
        :type image_set_metadata_blob: str
        """
        if image_set_metadata_blob is None:
            raise ValueError("Invalid value for `image_set_metadata_blob`, must not be `None`")

        self._image_set_metadata_blob = image_set_metadata_blob
