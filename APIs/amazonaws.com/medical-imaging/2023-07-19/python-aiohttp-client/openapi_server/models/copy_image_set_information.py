# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.copy_image_set_request_copy_image_set_information_destination_image_set import CopyImageSetRequestCopyImageSetInformationDestinationImageSet
from openapi_server.models.copy_image_set_request_copy_image_set_information_source_image_set import CopyImageSetRequestCopyImageSetInformationSourceImageSet
from openapi_server import util


class CopyImageSetInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_image_set: CopyImageSetRequestCopyImageSetInformationSourceImageSet=None, destination_image_set: CopyImageSetRequestCopyImageSetInformationDestinationImageSet=None):
        """CopyImageSetInformation - a model defined in OpenAPI

        :param source_image_set: The source_image_set of this CopyImageSetInformation.
        :param destination_image_set: The destination_image_set of this CopyImageSetInformation.
        """
        self.openapi_types = {
            'source_image_set': CopyImageSetRequestCopyImageSetInformationSourceImageSet,
            'destination_image_set': CopyImageSetRequestCopyImageSetInformationDestinationImageSet
        }

        self.attribute_map = {
            'source_image_set': 'sourceImageSet',
            'destination_image_set': 'destinationImageSet'
        }

        self._source_image_set = source_image_set
        self._destination_image_set = destination_image_set

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CopyImageSetInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CopyImageSetInformation of this CopyImageSetInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_image_set(self):
        """Gets the source_image_set of this CopyImageSetInformation.


        :return: The source_image_set of this CopyImageSetInformation.
        :rtype: CopyImageSetRequestCopyImageSetInformationSourceImageSet
        """
        return self._source_image_set

    @source_image_set.setter
    def source_image_set(self, source_image_set):
        """Sets the source_image_set of this CopyImageSetInformation.


        :param source_image_set: The source_image_set of this CopyImageSetInformation.
        :type source_image_set: CopyImageSetRequestCopyImageSetInformationSourceImageSet
        """
        if source_image_set is None:
            raise ValueError("Invalid value for `source_image_set`, must not be `None`")

        self._source_image_set = source_image_set

    @property
    def destination_image_set(self):
        """Gets the destination_image_set of this CopyImageSetInformation.


        :return: The destination_image_set of this CopyImageSetInformation.
        :rtype: CopyImageSetRequestCopyImageSetInformationDestinationImageSet
        """
        return self._destination_image_set

    @destination_image_set.setter
    def destination_image_set(self, destination_image_set):
        """Sets the destination_image_set of this CopyImageSetInformation.


        :param destination_image_set: The destination_image_set of this CopyImageSetInformation.
        :type destination_image_set: CopyImageSetRequestCopyImageSetInformationDestinationImageSet
        """

        self._destination_image_set = destination_image_set
