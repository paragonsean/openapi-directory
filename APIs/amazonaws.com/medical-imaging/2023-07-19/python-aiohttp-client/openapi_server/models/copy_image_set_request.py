# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.copy_image_set_request_copy_image_set_information import CopyImageSetRequestCopyImageSetInformation
from openapi_server import util


class CopyImageSetRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, copy_image_set_information: CopyImageSetRequestCopyImageSetInformation=None):
        """CopyImageSetRequest - a model defined in OpenAPI

        :param copy_image_set_information: The copy_image_set_information of this CopyImageSetRequest.
        """
        self.openapi_types = {
            'copy_image_set_information': CopyImageSetRequestCopyImageSetInformation
        }

        self.attribute_map = {
            'copy_image_set_information': 'copyImageSetInformation'
        }

        self._copy_image_set_information = copy_image_set_information

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CopyImageSetRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CopyImageSet_request of this CopyImageSetRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def copy_image_set_information(self):
        """Gets the copy_image_set_information of this CopyImageSetRequest.


        :return: The copy_image_set_information of this CopyImageSetRequest.
        :rtype: CopyImageSetRequestCopyImageSetInformation
        """
        return self._copy_image_set_information

    @copy_image_set_information.setter
    def copy_image_set_information(self, copy_image_set_information):
        """Sets the copy_image_set_information of this CopyImageSetRequest.


        :param copy_image_set_information: The copy_image_set_information of this CopyImageSetRequest.
        :type copy_image_set_information: CopyImageSetRequestCopyImageSetInformation
        """
        if copy_image_set_information is None:
            raise ValueError("Invalid value for `copy_image_set_information`, must not be `None`")

        self._copy_image_set_information = copy_image_set_information
