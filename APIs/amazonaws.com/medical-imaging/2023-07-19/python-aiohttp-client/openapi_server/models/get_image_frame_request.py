# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_image_frame_request_image_frame_information import GetImageFrameRequestImageFrameInformation
from openapi_server import util


class GetImageFrameRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_frame_information: GetImageFrameRequestImageFrameInformation=None):
        """GetImageFrameRequest - a model defined in OpenAPI

        :param image_frame_information: The image_frame_information of this GetImageFrameRequest.
        """
        self.openapi_types = {
            'image_frame_information': GetImageFrameRequestImageFrameInformation
        }

        self.attribute_map = {
            'image_frame_information': 'imageFrameInformation'
        }

        self._image_frame_information = image_frame_information

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetImageFrameRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetImageFrame_request of this GetImageFrameRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_frame_information(self):
        """Gets the image_frame_information of this GetImageFrameRequest.


        :return: The image_frame_information of this GetImageFrameRequest.
        :rtype: GetImageFrameRequestImageFrameInformation
        """
        return self._image_frame_information

    @image_frame_information.setter
    def image_frame_information(self, image_frame_information):
        """Sets the image_frame_information of this GetImageFrameRequest.


        :param image_frame_information: The image_frame_information of this GetImageFrameRequest.
        :type image_frame_information: GetImageFrameRequestImageFrameInformation
        """
        if image_frame_information is None:
            raise ValueError("Invalid value for `image_frame_information`, must not be `None`")

        self._image_frame_information = image_frame_information
