# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_dicom_import_job_response_job_properties import GetDICOMImportJobResponseJobProperties
from openapi_server import util


class GetDICOMImportJobResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_properties: GetDICOMImportJobResponseJobProperties=None):
        """GetDICOMImportJobResponse - a model defined in OpenAPI

        :param job_properties: The job_properties of this GetDICOMImportJobResponse.
        """
        self.openapi_types = {
            'job_properties': GetDICOMImportJobResponseJobProperties
        }

        self.attribute_map = {
            'job_properties': 'jobProperties'
        }

        self._job_properties = job_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDICOMImportJobResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetDICOMImportJobResponse of this GetDICOMImportJobResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_properties(self):
        """Gets the job_properties of this GetDICOMImportJobResponse.


        :return: The job_properties of this GetDICOMImportJobResponse.
        :rtype: GetDICOMImportJobResponseJobProperties
        """
        return self._job_properties

    @job_properties.setter
    def job_properties(self, job_properties):
        """Sets the job_properties of this GetDICOMImportJobResponse.


        :param job_properties: The job_properties of this GetDICOMImportJobResponse.
        :type job_properties: GetDICOMImportJobResponseJobProperties
        """
        if job_properties is None:
            raise ValueError("Invalid value for `job_properties`, must not be `None`")

        self._job_properties = job_properties
