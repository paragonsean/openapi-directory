# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_image_set_metadata_request_update_image_set_metadata_updates_dicom_updates import UpdateImageSetMetadataRequestUpdateImageSetMetadataUpdatesDICOMUpdates
from openapi_server import util


class MetadataUpdates(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dicom_updates: UpdateImageSetMetadataRequestUpdateImageSetMetadataUpdatesDICOMUpdates=None):
        """MetadataUpdates - a model defined in OpenAPI

        :param dicom_updates: The dicom_updates of this MetadataUpdates.
        """
        self.openapi_types = {
            'dicom_updates': UpdateImageSetMetadataRequestUpdateImageSetMetadataUpdatesDICOMUpdates
        }

        self.attribute_map = {
            'dicom_updates': 'DICOMUpdates'
        }

        self._dicom_updates = dicom_updates

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetadataUpdates':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetadataUpdates of this MetadataUpdates.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dicom_updates(self):
        """Gets the dicom_updates of this MetadataUpdates.


        :return: The dicom_updates of this MetadataUpdates.
        :rtype: UpdateImageSetMetadataRequestUpdateImageSetMetadataUpdatesDICOMUpdates
        """
        return self._dicom_updates

    @dicom_updates.setter
    def dicom_updates(self, dicom_updates):
        """Sets the dicom_updates of this MetadataUpdates.


        :param dicom_updates: The dicom_updates of this MetadataUpdates.
        :type dicom_updates: UpdateImageSetMetadataRequestUpdateImageSetMetadataUpdatesDICOMUpdates
        """

        self._dicom_updates = dicom_updates
