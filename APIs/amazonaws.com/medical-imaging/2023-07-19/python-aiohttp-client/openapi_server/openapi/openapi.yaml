openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>This is the <i>AWS HealthImaging API Reference</i>. AWS HealthImaging\
    \ is an AWS service for storing, accessing, and analyzing medical images. For\
    \ an introduction to the service, see the <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide\"\
    > <i>AWS HealthImaging Developer Guide</i> </a>.</p> <note> <p>We recommend using\
    \ one of the AWS Software Development Kits (SDKs) for your programming language,\
    \ as they take care of request authentication, serialization, and connection management.\
    \ For more information, see <a href=\"http://aws.amazon.com/developer/tools\"\
    >Tools to build on AWS</a>.</p> <p>For information about using AWS HealthImaging\
    \ API actions in one of the language-specific AWS SDKs, refer to the <i>See Also</i>\
    \ link at the end of each section that describes an API action or data type.</p>\
    \ </note> <p>The following sections list AWS HealthImaging API actions categorized\
    \ according to functionality. Links are provided to actions within this Reference,\
    \ along with links back to corresponding sections in the <i>AWS HealthImaging\
    \ Developer Guide</i> so you can view console procedures and CLI/SDK code examples.</p>\
    \ <p class=\"title\"> <b>Data store actions</b> </p> <ul> <li> <p> <a href=\"\
    https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_CreateDatastore.html\"\
    >CreateDatastore</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/create-data-store.html\"\
    >Creating a data store</a>.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_GetDatastore.html\"\
    >GetDatastore</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/get-data-store.html\"\
    >Getting data store properties</a>.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_ListDatastores.html\"\
    >ListDatastores</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/list-data-stores.html\"\
    >Listing data stores</a>.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_DeleteDatastore.html\"\
    >DeleteDatastore</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/delete-data-store.html\"\
    >Deleting a data store</a>.</p> </li> </ul> <p class=\"title\"> <b>Import job\
    \ actions</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_StartDICOMImportJob.html\"\
    >StartDICOMImportJob</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/start-dicom-import-job.html\"\
    >Starting an import job</a>.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_GetDICOMImportJob.html\"\
    >GetDICOMImportJob</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/get-dicom-import-job.html\"\
    >Getting import job properties</a>.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_ListDICOMImportJobs.html\"\
    >ListDICOMImportJobs</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/list-dicom-import-jobs.html\"\
    >Listing import jobs</a>.</p> </li> </ul> <p class=\"title\"> <b>Image set access\
    \ actions</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_SearchImageSets.html\"\
    >SearchImageSets</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/search-image-sets.html\"\
    >Searching image sets</a>.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_GetImageSet.html\"\
    >GetImageSet</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/get-image-set-properties.html\"\
    >Getting image set properties</a>.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_GetImageSetMetadata.html\"\
    >GetImageSetMetadata</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/get-image-set-metadata.html\"\
    >Getting image set metadata</a>.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_GetImageFrame.html\"\
    >GetImageFrame</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/get-image-frame.html\"\
    >Getting image set pixel data</a>.</p> </li> </ul> <p class=\"title\"> <b>Image\
    \ set modification actions</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_ListImageSetVersions.html\"\
    >ListImageSetVersions</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/list-image-set-versions.html\"\
    >Listing image set versions</a>.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_UpdateImageSetMetadata.html\"\
    >UpdateImageSetMetadata</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/update-image-set-metadata.html\"\
    >Updating image set metadata</a>.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_CopyImageSet.html\"\
    >CopyImageSet</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/copy-image-set.html\"\
    >Copying an image set</a>.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_DeleteImageSet.html\"\
    >DeleteImageSet</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/delete-image-set.html\"\
    >Deleting an image set</a>.</p> </li> </ul> <p class=\"title\"> <b>Tagging actions</b>\
    \ </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_TagResource.html\"\
    >TagResource</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/tag-list-untag-data-store.html\"\
    >Tagging a data store</a> and <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/tag-list-untag-image-set.html\"\
    >Tagging an image set</a>.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_ListTagsForResource.html\"\
    >ListTagsForResource</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/tag-list-untag-data-store.html\"\
    >Tagging a data store</a> and <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/tag-list-untag-image-set.html\"\
    >Tagging an image set</a>.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_UntagResource.html\"\
    >UntagResource</a> – See <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/tag-list-untag-data-store.html\"\
    >Tagging a data store</a> and <a href=\"https://docs.aws.amazon.com/medical-imaging/latest/devguide/tag-list-untag-image-set.html\"\
    >Tagging an image set</a>.</p> </li> </ul>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Health Imaging
  version: 2023-07-19
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: medical-imaging
  x-aws-signingName: medical-imaging
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/medical-imaging-2023-07-19.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/medical-imaging/
servers:
- description: The AWS Health Imaging multi-region endpoint
  url: "http://medical-imaging.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Health Imaging multi-region endpoint
  url: "https://medical-imaging.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Health Imaging endpoint for China (Beijing) and China (Ningxia)
  url: "http://medical-imaging.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS Health Imaging endpoint for China (Beijing) and China (Ningxia)
  url: "https://medical-imaging.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /datastore:
    get:
      description: List data stores created by this AWS account.
      operationId: list_datastores
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The data store status.
        explode: true
        in: query
        name: datastoreStatus
        required: false
        schema:
          enum:
          - CREATING
          - CREATE_FAILED
          - ACTIVE
          - DELETING
          - DELETED
          type: string
        style: form
      - description: The pagination token used to request the list of data stores
          on the next page.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 8192
          minLength: 1
          pattern: "\\p{ASCII}{0,8192}"
          type: string
        style: form
      - description: "Valid Range: Minimum value of 1. Maximum value of 50."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatastoresResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Create a data store.
      operationId: create_datastore
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatastore_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatastoreResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /datastore/{datastoreId}:
    delete:
      description: "<p>Delete a data store.</p> <note> <p>Before a data store can\
        \ be deleted, you must first delete all image sets within it.</p> </note>"
      operationId: delete_datastore
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The data store identifier.
        explode: false
        in: path
        name: datastoreId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDatastoreResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Get data store properties.
      operationId: get_datastore
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The data store identifier.
        explode: false
        in: path
        name: datastoreId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDatastoreResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /datastore/{datastoreId}/imageSet/{imageSetId}/deleteImageSet:
    post:
      description: Delete an image set.
      operationId: delete_image_set
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The data store identifier.
        explode: false
        in: path
        name: datastoreId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      - description: The image set identifier.
        explode: false
        in: path
        name: imageSetId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteImageSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /datastore/{datastoreId}/imageSet/{imageSetId}/getImageFrame:
    post:
      description: Get an image frame (pixel data) for an image set.
      operationId: get_image_frame
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The data store identifier.
        explode: false
        in: path
        name: datastoreId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      - description: The image set identifier.
        explode: false
        in: path
        name: imageSetId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetImageFrame_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetImageFrameResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /datastore/{datastoreId}/imageSet/{imageSetId}/getImageSet:
    post:
      description: Get image set properties.
      operationId: get_image_set
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The data store identifier.
        explode: false
        in: path
        name: datastoreId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      - description: The image set identifier.
        explode: false
        in: path
        name: imageSetId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      - description: The image set version identifier.
        explode: true
        in: query
        name: version
        required: false
        schema:
          pattern: \d+
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetImageSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /datastore/{datastoreId}/imageSet/{imageSetId}/getImageSetMetadata:
    post:
      description: Get metadata attributes for an image set.
      operationId: get_image_set_metadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The data store identifier.
        explode: false
        in: path
        name: datastoreId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      - description: The image set identifier.
        explode: false
        in: path
        name: imageSetId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      - description: The image set version identifier.
        explode: true
        in: query
        name: version
        required: false
        schema:
          pattern: \d+
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetImageSetMetadataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /datastore/{datastoreId}/imageSet/{imageSetId}/listImageSetVersions:
    post:
      description: List image set versions.
      operationId: list_image_set_versions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The data store identifier.
        explode: false
        in: path
        name: datastoreId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      - description: The image set identifier.
        explode: false
        in: path
        name: imageSetId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      - description: The pagination token used to request the list of image set versions
          on the next page.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 8192
          minLength: 1
          pattern: "\\p{ASCII}{0,8192}"
          type: string
        style: form
      - description: The max results count.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImageSetVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /datastore/{datastoreId}/imageSet/{imageSetId}/updateImageSetMetadata#latestVersion:
    post:
      description: Update image set metadata attributes.
      operationId: update_image_set_metadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The data store identifier.
        explode: false
        in: path
        name: datastoreId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      - description: The image set identifier.
        explode: false
        in: path
        name: imageSetId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      - description: The latest image set version identifier.
        explode: true
        in: query
        name: latestVersion
        required: true
        schema:
          pattern: \d+
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImageSetMetadata_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateImageSetMetadataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /datastore/{datastoreId}/imageSet/{sourceImageSetId}/copyImageSet:
    post:
      description: Copy an image set.
      operationId: copy_image_set
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The data store identifier.
        explode: false
        in: path
        name: datastoreId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      - description: The source image set identifier.
        explode: false
        in: path
        name: sourceImageSetId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyImageSet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyImageSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /datastore/{datastoreId}/searchImageSets:
    post:
      description: Search image sets based on defined input attributes.
      operationId: search_image_sets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the data store where the image sets reside.
        explode: false
        in: path
        name: datastoreId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      - description: The maximum number of results that can be returned in a search.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token used for pagination of results returned in the response.
          Use the token returned from the previous request to continue results where
          the previous request ended.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 8192
          minLength: 1
          pattern: "\\p{ASCII}{0,8192}"
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchImageSets_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchImageSetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /getDICOMImportJob/datastore/{datastoreId}/job/{jobId}:
    get:
      description: Get the import job properties to learn more about the job or job
        progress.
      operationId: get_dicom_import_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The data store identifier.
        explode: false
        in: path
        name: datastoreId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      - description: The import job identifier.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          maxLength: 32
          minLength: 1
          pattern: "[0-9a-z]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDICOMImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /listDICOMImportJobs/datastore/{datastoreId}:
    get:
      description: List import jobs created by this AWS account for a specific data
        store.
      operationId: list_dicom_import_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The data store identifier.
        explode: false
        in: path
        name: datastoreId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      - description: The filters for listing import jobs based on status.
        explode: true
        in: query
        name: jobStatus
        required: false
        schema:
          enum:
          - SUBMITTED
          - IN_PROGRESS
          - COMPLETED
          - FAILED
          type: string
        style: form
      - description: The pagination token used to request the list of import jobs
          on the next page.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 8192
          minLength: 1
          pattern: "\\p{ASCII}{0,8192}"
          type: string
        style: form
      - description: The max results count. The upper bound is determined by load
          testing.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDICOMImportJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /startDICOMImportJob/datastore/{datastoreId}:
    post:
      description: Start importing bulk data into an <code>ACTIVE</code> data store.
        The import job imports DICOM P10 files found in the S3 prefix specified by
        the <code>inputS3Uri</code> parameter. The import job stores processing results
        in the file specified by the <code>outputS3Uri</code> parameter.
      operationId: start_dicom_import_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The data store identifier.
        explode: false
        in: path
        name: datastoreId
        required: true
        schema:
          pattern: "[0-9a-z]{32}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDICOMImportJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartDICOMImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}:
    get:
      description: Lists all tags associated with a medical imaging resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the medical imaging resource
          to list tags for.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:medical-imaging:[a-z0-9-]+:[0-9]{12}:datastore/[0-9a-z]{32}(/imageset/[0-9a-z]{32})?"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Adds a user-specifed key and value tag to a medical imaging resource.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the medical imaging resource
          that tags are being added to.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:medical-imaging:[a-z0-9-]+:[0-9]{12}:datastore/[0-9a-z]{32}(/imageset/[0-9a-z]{32})?"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Removes tags from a medical imaging resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the medical imaging resource
          that tags are being removed from.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:medical-imaging:[a-z0-9-]+:[0-9]{12}:datastore/[0-9a-z]{32}(/imageset/[0-9a-z]{32})?"
          type: string
        style: simple
      - description: The keys for the tags to be removed from the medical imaging
          resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 200
          minItems: 0
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CopyImageSetResponse:
      example:
        destinationImageSetProperties:
          imageSetArn: ""
          createdAt: ""
          imageSetId: ""
          imageSetWorkflowStatus: ""
          latestVersionId: ""
          imageSetState: ""
          updatedAt: ""
        datastoreId: ""
        sourceImageSetProperties:
          imageSetArn: ""
          createdAt: ""
          imageSetId: ""
          imageSetWorkflowStatus: ""
          latestVersionId: ""
          imageSetState: ""
          updatedAt: ""
      properties:
        datastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The data store identifier.
          title: datastoreId
        sourceImageSetProperties:
          $ref: '#/components/schemas/CopyImageSetResponse_sourceImageSetProperties'
        destinationImageSetProperties:
          $ref: '#/components/schemas/CopyImageSetResponse_destinationImageSetProperties'
      required:
      - datastoreId
      - destinationImageSetProperties
      - sourceImageSetProperties
      title: CopyImageSetResponse
      type: object
    CopySourceImageSetInformation:
      description: Copy source image set information.
      properties:
        latestVersionId:
          allOf:
          - $ref: '#/components/schemas/ImageSetExternalVersionId'
          - description: The latest version identifier for the source image set.
          title: latestVersionId
      required:
      - latestVersionId
      title: CopySourceImageSetInformation
      type: object
    CopyDestinationImageSet:
      description: Copy the destination image set.
      properties:
        imageSetId:
          allOf:
          - $ref: '#/components/schemas/ImageSetId'
          - description: The image set identifier for the destination image set.
          title: imageSetId
        latestVersionId:
          allOf:
          - $ref: '#/components/schemas/ImageSetExternalVersionId'
          - description: The latest version identifier for the destination image set.
          title: latestVersionId
      required:
      - imageSetId
      - latestVersionId
      title: CopyDestinationImageSet
      type: object
    ThrottlingException: {}
    ConflictException: {}
    AccessDeniedException: {}
    ValidationException: {}
    InternalServerException: {}
    ResourceNotFoundException: {}
    ServiceQuotaExceededException: {}
    CreateDatastoreResponse:
      example:
        datastoreStatus: ""
        datastoreId: ""
      properties:
        datastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The data store identifier.
          title: datastoreId
        datastoreStatus:
          allOf:
          - $ref: '#/components/schemas/DatastoreStatus'
          - description: The data store status.
          title: datastoreStatus
      required:
      - datastoreId
      - datastoreStatus
      title: CreateDatastoreResponse
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      title: TagValue
      type: string
    DeleteDatastoreResponse:
      example:
        datastoreStatus: ""
        datastoreId: ""
      properties:
        datastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The data store identifier.
          title: datastoreId
        datastoreStatus:
          allOf:
          - $ref: '#/components/schemas/DatastoreStatus'
          - description: The data store status.
          title: datastoreStatus
      required:
      - datastoreId
      - datastoreStatus
      title: DeleteDatastoreResponse
      type: object
    DeleteImageSetResponse:
      example:
        imageSetId: ""
        imageSetWorkflowStatus: ""
        datastoreId: ""
        imageSetState: ""
      properties:
        datastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The data store identifier.
          title: datastoreId
        imageSetId:
          allOf:
          - $ref: '#/components/schemas/ImageSetId'
          - description: The image set identifier.
          title: imageSetId
        imageSetState:
          allOf:
          - $ref: '#/components/schemas/ImageSetState'
          - description: The image set state.
          title: imageSetState
        imageSetWorkflowStatus:
          allOf:
          - $ref: '#/components/schemas/ImageSetWorkflowStatus'
          - description: The image set workflow status.
          title: imageSetWorkflowStatus
      required:
      - datastoreId
      - imageSetId
      - imageSetState
      - imageSetWorkflowStatus
      title: DeleteImageSetResponse
      type: object
    GetDICOMImportJobResponse:
      example:
        jobProperties:
          jobName: ""
          jobId: ""
          jobStatus: ""
          inputS3Uri: ""
          endedAt: ""
          datastoreId: ""
          submittedAt: ""
          message: ""
          outputS3Uri: ""
          dataAccessRoleArn: ""
      properties:
        jobProperties:
          $ref: '#/components/schemas/GetDICOMImportJobResponse_jobProperties'
      required:
      - jobProperties
      title: GetDICOMImportJobResponse
      type: object
    GetDatastoreResponse:
      example:
        datastoreProperties:
          createdAt: ""
          datastoreStatus: ""
          kmsKeyArn: ""
          datastoreName: ""
          datastoreId: ""
          datastoreArn: ""
          updatedAt: ""
      properties:
        datastoreProperties:
          $ref: '#/components/schemas/GetDatastoreResponse_datastoreProperties'
      required:
      - datastoreProperties
      title: GetDatastoreResponse
      type: object
    GetImageFrameResponse:
      example:
        imageFrameBlob: ""
      properties:
        imageFrameBlob:
          allOf:
          - $ref: '#/components/schemas/PayloadBlob'
          - description: The blob containing the aggregated image frame information.
          title: imageFrameBlob
      required:
      - imageFrameBlob
      title: GetImageFrameResponse
      type: object
    ImageFrameId:
      pattern: "[0-9a-z]{32}"
      type: string
    GetImageSetResponse:
      example:
        imageSetArn: ""
        createdAt: ""
        versionId: ""
        deletedAt: ""
        imageSetId: ""
        imageSetWorkflowStatus: ""
        datastoreId: ""
        imageSetState: ""
        message: ""
        updatedAt: ""
      properties:
        datastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The data store identifier.
          title: datastoreId
        imageSetId:
          allOf:
          - $ref: '#/components/schemas/ImageSetId'
          - description: The image set identifier.
          title: imageSetId
        versionId:
          allOf:
          - $ref: '#/components/schemas/ImageSetExternalVersionId'
          - description: The image set version identifier.
          title: versionId
        imageSetState:
          allOf:
          - $ref: '#/components/schemas/ImageSetState'
          - description: The image set state.
          title: imageSetState
        imageSetWorkflowStatus:
          allOf:
          - $ref: '#/components/schemas/ImageSetWorkflowStatus'
          - description: The image set workflow status.
          title: imageSetWorkflowStatus
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when image set properties were created.
          title: createdAt
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when image set properties were updated.
          title: updatedAt
        deletedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when the image set properties were deleted.
          title: deletedAt
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The error message thrown if an image set action fails.
          title: message
        imageSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) assigned to the image set.
          title: imageSetArn
      required:
      - datastoreId
      - imageSetId
      - imageSetState
      - versionId
      title: GetImageSetResponse
      type: object
    GetImageSetMetadataResponse:
      example:
        imageSetMetadataBlob: ""
      properties:
        imageSetMetadataBlob:
          allOf:
          - $ref: '#/components/schemas/ImageSetMetadataBlob'
          - description: The blob containing the aggregated metadata information for
              the image set.
          title: imageSetMetadataBlob
      required:
      - imageSetMetadataBlob
      title: GetImageSetMetadataResponse
      type: object
    ListDICOMImportJobsResponse:
      example:
        jobSummaries: ""
        nextToken: ""
      properties:
        jobSummaries:
          allOf:
          - $ref: '#/components/schemas/DICOMImportJobSummaries'
          - description: A list of job summaries.
          title: jobSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token used to retrieve the list of import
              jobs on the next page.
          title: nextToken
      required:
      - jobSummaries
      title: ListDICOMImportJobsResponse
      type: object
    ListDatastoresResponse:
      example:
        nextToken: ""
        datastoreSummaries: ""
      properties:
        datastoreSummaries:
          allOf:
          - $ref: '#/components/schemas/DatastoreSummaries'
          - description: The list of summaries of data stores.
          title: datastoreSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token used to retrieve the list of data stores
              on the next page.
          title: nextToken
      title: ListDatastoresResponse
      type: object
    ListImageSetVersionsResponse:
      example:
        imageSetPropertiesList: ""
        nextToken: ""
      properties:
        imageSetPropertiesList:
          allOf:
          - $ref: '#/components/schemas/ImageSetPropertiesList'
          - description: Lists all properties associated with an image set.
          title: imageSetPropertiesList
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token used to retrieve the list of image set
              versions on the next page.
          title: nextToken
      required:
      - imageSetPropertiesList
      title: ListImageSetVersionsResponse
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A list of all tags associated with a medical imaging resource.
          title: tags
      required:
      - tags
      title: ListTagsForResourceResponse
      type: object
    SearchImageSetsResponse:
      example:
        imageSetsMetadataSummaries: ""
        nextToken: ""
      properties:
        imageSetsMetadataSummaries:
          allOf:
          - $ref: '#/components/schemas/ImageSetsMetadataSummaries'
          - description: The model containing the image set results.
          title: imageSetsMetadataSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for pagination results.
          title: nextToken
      required:
      - imageSetsMetadataSummaries
      title: SearchImageSetsResponse
      type: object
    SearchCriteriaFiltersList:
      items:
        $ref: '#/components/schemas/SearchFilter'
      maxItems: 2
      minItems: 1
      type: array
    StartDICOMImportJobResponse:
      example:
        jobId: ""
        jobStatus: ""
        datastoreId: ""
        submittedAt: ""
      properties:
        datastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The data store identifier.
          title: datastoreId
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The import job identifier.
          title: jobId
        jobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: The import job status.
          title: jobStatus
        submittedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when the import job was submitted.
          title: submittedAt
      required:
      - datastoreId
      - jobId
      - jobStatus
      - submittedAt
      title: StartDICOMImportJobResponse
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "(?!aws:)[a-zA-Z+-=._:/]+"
      title: TagKey
      type: string
    UpdateImageSetMetadataResponse:
      example:
        createdAt: ""
        imageSetId: ""
        imageSetWorkflowStatus: ""
        latestVersionId: ""
        datastoreId: ""
        imageSetState: ""
        message: ""
        updatedAt: ""
      properties:
        datastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The data store identifier.
          title: datastoreId
        imageSetId:
          allOf:
          - $ref: '#/components/schemas/ImageSetId'
          - description: The image set identifier.
          title: imageSetId
        latestVersionId:
          allOf:
          - $ref: '#/components/schemas/ImageSetExternalVersionId'
          - description: The latest image set version identifier.
          title: latestVersionId
        imageSetState:
          allOf:
          - $ref: '#/components/schemas/ImageSetState'
          - description: The image set state.
          title: imageSetState
        imageSetWorkflowStatus:
          allOf:
          - $ref: '#/components/schemas/ImageSetWorkflowStatus'
          - description: The image set workflow status.
          title: imageSetWorkflowStatus
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when image set metadata was created.
          title: createdAt
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when image set metadata was updated.
          title: updatedAt
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The error message thrown if an update image set metadata
              action fails.
          title: message
      required:
      - datastoreId
      - imageSetId
      - imageSetState
      - latestVersionId
      title: UpdateImageSetMetadataResponse
      type: object
    DICOMUpdates:
      description: The object containing <code>removableAttributes</code> and <code>updatableAttributes</code>.
      properties:
        removableAttributes:
          allOf:
          - $ref: '#/components/schemas/DICOMAttribute'
          - description: The DICOM tags to be removed from <code>ImageSetMetadata</code>.
          title: removableAttributes
        updatableAttributes:
          allOf:
          - $ref: '#/components/schemas/DICOMAttribute'
          - description: The DICOM tags that need to be updated in <code>ImageSetMetadata</code>.
          title: updatableAttributes
      title: DICOMUpdates
      type: object
    Arn:
      pattern: "arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:medical-imaging:[a-z0-9-]+:[0-9]{12}:datastore/[0-9a-z]{32}(/imageset/[0-9a-z]{32})?"
      type: string
    ClientToken:
      maxLength: 64
      minLength: 1
      pattern: "[A-Za-z0-9._-]+"
      type: string
    ImageSetId:
      pattern: "[0-9a-z]{32}"
      type: string
    ImageSetExternalVersionId:
      pattern: \d+
      type: string
    ImageSetState:
      enum:
      - ACTIVE
      - LOCKED
      - DELETED
      title: ImageSetState
      type: string
    ImageSetWorkflowStatus:
      enum:
      - CREATED
      - COPIED
      - COPYING
      - COPYING_WITH_READ_ONLY_ACCESS
      - COPY_FAILED
      - UPDATING
      - UPDATED
      - UPDATE_FAILED
      - DELETING
      - DELETED
      title: ImageSetWorkflowStatus
      type: string
    Date:
      format: date-time
      type: string
    CopyDestinationImageSetProperties:
      description: Copy the image set properties of the destination image set.
      properties:
        imageSetId:
          allOf:
          - $ref: '#/components/schemas/ImageSetId'
          - description: The image set identifier of the copied image set properties.
          title: imageSetId
        latestVersionId:
          allOf:
          - $ref: '#/components/schemas/ImageSetExternalVersionId'
          - description: The latest version identifier for the destination image set
              properties.
          title: latestVersionId
        imageSetState:
          allOf:
          - $ref: '#/components/schemas/ImageSetState'
          - description: The image set state of the destination image set properties.
          title: imageSetState
        imageSetWorkflowStatus:
          allOf:
          - $ref: '#/components/schemas/ImageSetWorkflowStatus'
          - description: The image set workflow status of the destination image set
              properties.
          title: imageSetWorkflowStatus
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when the destination image set properties were
              created.
          title: createdAt
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when the destination image set properties were
              last updated.
          title: updatedAt
        imageSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) assigned to the destination
              image set.
          title: imageSetArn
      required:
      - imageSetId
      - latestVersionId
      title: CopyDestinationImageSetProperties
      type: object
    CopyImageSetInformation:
      description: Copy image set information.
      properties:
        sourceImageSet:
          $ref: '#/components/schemas/CopyImageSet_request_copyImageSetInformation_sourceImageSet'
        destinationImageSet:
          $ref: '#/components/schemas/CopyImageSet_request_copyImageSetInformation_destinationImageSet'
      required:
      - sourceImageSet
      title: CopyImageSetInformation
      type: object
    DatastoreId:
      pattern: "[0-9a-z]{32}"
      type: string
    CopyImageSetRequest:
      example:
        copyImageSetInformation:
          destinationImageSet:
            imageSetId: ""
            latestVersionId: ""
          sourceImageSet:
            latestVersionId: ""
      properties:
        copyImageSetInformation:
          $ref: '#/components/schemas/CopyImageSetRequest_copyImageSetInformation'
      required:
      - copyImageSetInformation
      title: CopyImageSetRequest
      type: object
    CopySourceImageSetProperties:
      description: Copy source image set properties.
      properties:
        imageSetId:
          allOf:
          - $ref: '#/components/schemas/ImageSetId'
          - description: The image set identifier for the copied source image set.
          title: imageSetId
        latestVersionId:
          allOf:
          - $ref: '#/components/schemas/ImageSetExternalVersionId'
          - description: The latest version identifier for the copied source image
              set.
          title: latestVersionId
        imageSetState:
          allOf:
          - $ref: '#/components/schemas/ImageSetState'
          - description: The image set state of the copied source image set.
          title: imageSetState
        imageSetWorkflowStatus:
          allOf:
          - $ref: '#/components/schemas/ImageSetWorkflowStatus'
          - description: The workflow status of the copied source image set.
          title: imageSetWorkflowStatus
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when the source image set properties were created.
          title: createdAt
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when the source image set properties were updated.
          title: updatedAt
        imageSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) assigned to the source image
              set.
          title: imageSetArn
      required:
      - imageSetId
      - latestVersionId
      title: CopySourceImageSetProperties
      type: object
    DatastoreName:
      maxLength: 256
      minLength: 1
      pattern: "[A-Za-z0-9._/#-]+"
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      type: object
    KmsKeyArn:
      description: ARN referencing a KMS key or KMS key alias.
      maxLength: 512
      minLength: 1
      pattern: "arn:aws[a-zA-Z-]{0,16}:kms:[a-z]{2}(-[a-z]{1,16}){1,3}-\\d{1}:\\d{12}:((key/[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})|(alias/[a-zA-Z0-9:/_-]{1,256}))"
      type: string
    CreateDatastoreRequest:
      example:
        clientToken: ""
        kmsKeyArn: ""
        datastoreName: ""
        tags: ""
      properties:
        datastoreName:
          allOf:
          - $ref: '#/components/schemas/DatastoreName'
          - description: The data store name.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: A unique identifier for API idempotency.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags provided when creating a data store.
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: The Amazon Resource Name (ARN) assigned to the AWS Key Management
              Service (AWS KMS) key for accessing encrypted data.
      required:
      - clientToken
      title: CreateDatastoreRequest
      type: object
    DatastoreStatus:
      enum:
      - CREATING
      - CREATE_FAILED
      - ACTIVE
      - DELETING
      - DELETED
      title: DatastoreStatus
      type: string
    DICOMAccessionNumber:
      format: password
      maxLength: 16
      minLength: 0
      type: string
    DICOMAttribute:
      format: password
      maxLength: 10000
      minLength: 1
      type: string
    JobId:
      maxLength: 32
      minLength: 1
      pattern: "[0-9a-z]+"
      type: string
    JobName:
      maxLength: 64
      minLength: 1
      pattern: "[A-Za-z0-9._/#-]+"
      type: string
    JobStatus:
      enum:
      - SUBMITTED
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      title: JobStatus
      type: string
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+"
      type: string
    S3Uri:
      maxLength: 1024
      minLength: 1
      pattern: "s3://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/.*)?"
      type: string
    Message:
      maxLength: 2048
      minLength: 1
      pattern: "[\\w -:]+"
      type: string
    DICOMImportJobProperties:
      description: Properties of the import job.
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The import job identifier.
          title: jobId
        jobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: The import job name.
          title: jobName
        jobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: The filters for listing import jobs based on status.
          title: jobStatus
        datastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The data store identifier.
          title: datastoreId
        dataAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) that grants permissions to
              access medical imaging resources.
          title: dataAccessRoleArn
        endedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp for when the import job was ended.
          title: endedAt
        submittedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp for when the import job was submitted.
          title: submittedAt
        inputS3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          - description: The input prefix path for the S3 bucket that contains the
              DICOM P10 files to be imported.
          title: inputS3Uri
        outputS3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          - description: The output prefix of the S3 bucket to upload the results
              of the DICOM import job.
          title: outputS3Uri
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The error message thrown if an import job fails.
          title: message
      required:
      - dataAccessRoleArn
      - datastoreId
      - inputS3Uri
      - jobId
      - jobName
      - jobStatus
      - outputS3Uri
      title: DICOMImportJobProperties
      type: object
    DICOMImportJobSummary:
      description: Summary of import job.
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The import job identifier.
          title: jobId
        jobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: The import job name.
          title: jobName
        jobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: The filters for listing import jobs based on status.
          title: jobStatus
        datastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The data store identifier.
          title: datastoreId
        dataAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) that grants permissions to
              access medical imaging resources.
          title: dataAccessRoleArn
        endedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when an import job ended.
          title: endedAt
        submittedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when an import job was submitted.
          title: submittedAt
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The error message thrown if an import job fails.
          title: message
      required:
      - datastoreId
      - jobId
      - jobName
      - jobStatus
      title: DICOMImportJobSummary
      type: object
    DICOMImportJobSummaries:
      items:
        $ref: '#/components/schemas/DICOMImportJobSummary'
      type: array
    DICOMNumberOfStudyRelatedInstances:
      maximum: 10000
      minimum: 0
      type: integer
    DICOMNumberOfStudyRelatedSeries:
      maximum: 10000
      minimum: 0
      type: integer
    DICOMPatientBirthDate:
      format: password
      maxLength: 18
      minLength: 0
      type: string
    DICOMPatientId:
      format: password
      maxLength: 64
      minLength: 0
      type: string
    DICOMPatientName:
      format: password
      maxLength: 256
      minLength: 0
      type: string
    DICOMPatientSex:
      format: password
      maxLength: 16
      minLength: 0
      type: string
    DICOMStudyDate:
      format: password
      maxLength: 18
      minLength: 0
      type: string
    DICOMStudyTime:
      format: password
      maxLength: 28
      minLength: 0
      type: string
    DICOMStudyDateAndTime:
      description: The aggregated structure to store DICOM study date and study time
        for search capabilities.
      properties:
        DICOMStudyDate:
          allOf:
          - $ref: '#/components/schemas/DICOMStudyDate'
          - description: The DICOM study date provided in <code>yyMMdd</code> format.
          title: DICOMStudyDate
        DICOMStudyTime:
          allOf:
          - $ref: '#/components/schemas/DICOMStudyTime'
          - description: The DICOM study time provided in <code>HHmmss.FFFFFF</code>
              format.
          title: DICOMStudyTime
      required:
      - DICOMStudyDate
      title: DICOMStudyDateAndTime
      type: object
    DICOMStudyDescription:
      format: password
      maxLength: 64
      minLength: 0
      type: string
    DICOMStudyId:
      format: password
      maxLength: 16
      minLength: 0
      type: string
    DICOMStudyInstanceUID:
      format: password
      maxLength: 64
      minLength: 0
      pattern: "(?:[1-9][0-9]*|0)(\\.(?:[1-9][0-9]*|0))*"
      type: string
    DICOMTags:
      description: The DICOM attributes returned as a part of a response. Each image
        set has these properties as part of a search result.
      properties:
        DICOMPatientId:
          allOf:
          - $ref: '#/components/schemas/DICOMPatientId'
          - description: The unique identifier for a patient in a DICOM Study.
          title: DICOMPatientId
        DICOMPatientName:
          allOf:
          - $ref: '#/components/schemas/DICOMPatientName'
          - description: The patient name.
          title: DICOMPatientName
        DICOMPatientBirthDate:
          allOf:
          - $ref: '#/components/schemas/DICOMPatientBirthDate'
          - description: The patient birth date.
          title: DICOMPatientBirthDate
        DICOMPatientSex:
          allOf:
          - $ref: '#/components/schemas/DICOMPatientSex'
          - description: The patient sex.
          title: DICOMPatientSex
        DICOMStudyInstanceUID:
          allOf:
          - $ref: '#/components/schemas/DICOMStudyInstanceUID'
          - description: The DICOM provided identifier for studyInstanceUid.&gt;
          title: DICOMStudyInstanceUID
        DICOMStudyId:
          allOf:
          - $ref: '#/components/schemas/DICOMStudyId'
          - description: The DICOM provided studyId.
          title: DICOMStudyId
        DICOMStudyDescription:
          allOf:
          - $ref: '#/components/schemas/DICOMStudyDescription'
          - description: The description of the study.
          title: DICOMStudyDescription
        DICOMNumberOfStudyRelatedSeries:
          allOf:
          - $ref: '#/components/schemas/DICOMNumberOfStudyRelatedSeries'
          - description: The total number of series in the DICOM study.
          title: DICOMNumberOfStudyRelatedSeries
        DICOMNumberOfStudyRelatedInstances:
          allOf:
          - $ref: '#/components/schemas/DICOMNumberOfStudyRelatedInstances'
          - description: The total number of instances in the DICOM study.
          title: DICOMNumberOfStudyRelatedInstances
        DICOMAccessionNumber:
          allOf:
          - $ref: '#/components/schemas/DICOMAccessionNumber'
          - description: The accession number for the DICOM study.
          title: DICOMAccessionNumber
        DICOMStudyDate:
          allOf:
          - $ref: '#/components/schemas/DICOMStudyDate'
          - description: The study date.
          title: DICOMStudyDate
        DICOMStudyTime:
          allOf:
          - $ref: '#/components/schemas/DICOMStudyTime'
          - description: The study time.
          title: DICOMStudyTime
      title: DICOMTags
      type: object
    DatastoreProperties:
      description: The properties associated with the data store.
      properties:
        datastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The data store identifier.
          title: datastoreId
        datastoreName:
          allOf:
          - $ref: '#/components/schemas/DatastoreName'
          - description: The data store name.
          title: datastoreName
        datastoreStatus:
          allOf:
          - $ref: '#/components/schemas/DatastoreStatus'
          - description: The data store status.
          title: datastoreStatus
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: The Amazon Resource Name (ARN) assigned to the AWS Key Management
              Service (AWS KMS) key for accessing encrypted data.
          title: kmsKeyArn
        datastoreArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) for the data store.
          title: datastoreArn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when the data store was created.
          title: createdAt
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when the data store was last updated.
          title: updatedAt
      required:
      - datastoreId
      - datastoreName
      - datastoreStatus
      title: DatastoreProperties
      type: object
    DatastoreSummary:
      description: List of summaries of data stores.
      properties:
        datastoreId:
          allOf:
          - $ref: '#/components/schemas/DatastoreId'
          - description: The data store identifier.
          title: datastoreId
        datastoreName:
          allOf:
          - $ref: '#/components/schemas/DatastoreName'
          - description: The data store name.
          title: datastoreName
        datastoreStatus:
          allOf:
          - $ref: '#/components/schemas/DatastoreStatus'
          - description: The data store status.
          title: datastoreStatus
        datastoreArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) for the data store.
          title: datastoreArn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when the data store was created.
          title: createdAt
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when the data store was last updated.
          title: updatedAt
      required:
      - datastoreId
      - datastoreName
      - datastoreStatus
      title: DatastoreSummary
      type: object
    DatastoreSummaries:
      items:
        $ref: '#/components/schemas/DatastoreSummary'
      type: array
    DeleteDatastoreRequest:
      properties: {}
      title: DeleteDatastoreRequest
      type: object
    DeleteImageSetRequest:
      properties: {}
      title: DeleteImageSetRequest
      type: object
    GetDICOMImportJobRequest:
      properties: {}
      title: GetDICOMImportJobRequest
      type: object
    GetDatastoreRequest:
      properties: {}
      title: GetDatastoreRequest
      type: object
    ImageFrameInformation:
      description: Information about the image frame (pixel data) identifier.
      properties:
        imageFrameId:
          allOf:
          - $ref: '#/components/schemas/ImageFrameId'
          - description: The image frame (pixel data) identifier.
          title: imageFrameId
      required:
      - imageFrameId
      title: ImageFrameInformation
      type: object
    GetImageFrameRequest:
      example:
        imageFrameInformation:
          imageFrameId: ""
      properties:
        imageFrameInformation:
          $ref: '#/components/schemas/GetImageFrameRequest_imageFrameInformation'
      required:
      - imageFrameInformation
      title: GetImageFrameRequest
      type: object
    PayloadBlob:
      type: string
    String:
      type: string
    GetImageSetMetadataRequest:
      properties: {}
      title: GetImageSetMetadataRequest
      type: object
    ImageSetMetadataBlob:
      type: string
    GetImageSetRequest:
      properties: {}
      title: GetImageSetRequest
      type: object
    ImageSetProperties:
      description: The image set properties.
      properties:
        imageSetId:
          allOf:
          - $ref: '#/components/schemas/ImageSetId'
          - description: The image set identifier.
          title: imageSetId
        versionId:
          allOf:
          - $ref: '#/components/schemas/ImageSetExternalVersionId'
          - description: The image set version identifier.
          title: versionId
        imageSetState:
          allOf:
          - $ref: '#/components/schemas/ImageSetState'
          - description: The image set state.
          title: imageSetState
        ImageSetWorkflowStatus:
          allOf:
          - $ref: '#/components/schemas/ImageSetWorkflowStatus'
          - description: The image set workflow status.
          title: ImageSetWorkflowStatus
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when the image set properties were created.
          title: createdAt
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when the image set properties were updated.
          title: updatedAt
        deletedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The timestamp when the image set properties were deleted.
          title: deletedAt
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The error message thrown if an image set action fails.
          title: message
      required:
      - imageSetId
      - imageSetState
      - versionId
      title: ImageSetProperties
      type: object
    ImageSetPropertiesList:
      items:
        $ref: '#/components/schemas/ImageSetProperties'
      type: array
    ImageSetsMetadataSummary:
      description: Summary of the image set metadata.
      properties:
        imageSetId:
          allOf:
          - $ref: '#/components/schemas/ImageSetId'
          - description: The image set identifier.
          title: imageSetId
        version:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The image set version.
          title: version
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The time an image set is created in AWS HealthImaging. Sample
              creation date is provided in <code>1985-04-12T23:20:50.52Z</code> format.
          title: createdAt
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The time when an image was last updated in AWS HealthImaging.
          title: updatedAt
        DICOMTags:
          $ref: '#/components/schemas/ImageSetsMetadataSummary_DICOMTags'
      required:
      - imageSetId
      title: ImageSetsMetadataSummary
      type: object
    ImageSetsMetadataSummaries:
      items:
        $ref: '#/components/schemas/ImageSetsMetadataSummary'
      type: array
    Integer:
      type: integer
    NextToken:
      maxLength: 8192
      minLength: 1
      pattern: "\\p{ASCII}{0,8192}"
      type: string
    ListDICOMImportJobsRequestMaxResultsInteger:
      maximum: 50
      minimum: 1
      type: integer
    ListDICOMImportJobsRequest:
      properties: {}
      title: ListDICOMImportJobsRequest
      type: object
    ListDatastoresRequestMaxResultsInteger:
      maximum: 50
      minimum: 1
      type: integer
    ListDatastoresRequest:
      properties: {}
      title: ListDatastoresRequest
      type: object
    ListImageSetVersionsRequestMaxResultsInteger:
      maximum: 50
      minimum: 1
      type: integer
    ListImageSetVersionsRequest:
      properties: {}
      title: ListImageSetVersionsRequest
      type: object
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    MetadataUpdates:
      description: Contains DICOMUpdates.
      properties:
        DICOMUpdates:
          $ref: '#/components/schemas/UpdateImageSetMetadata_request_updateImageSetMetadataUpdates_DICOMUpdates'
      title: MetadataUpdates
      type: object
    Operator:
      enum:
      - EQUAL
      - BETWEEN
      title: Operator
      type: string
    SearchByAttributeValue:
      description: The search input attribute value.
      properties:
        DICOMPatientId:
          allOf:
          - $ref: '#/components/schemas/DICOMPatientId'
          - description: The patient ID input for search.
          title: DICOMPatientId
        DICOMAccessionNumber:
          allOf:
          - $ref: '#/components/schemas/DICOMAccessionNumber'
          - description: The DICOM accession number for search.
          title: DICOMAccessionNumber
        DICOMStudyId:
          allOf:
          - $ref: '#/components/schemas/DICOMStudyId'
          - description: The DICOM study ID for search.
          title: DICOMStudyId
        DICOMStudyInstanceUID:
          allOf:
          - $ref: '#/components/schemas/DICOMStudyInstanceUID'
          - description: The DICOM study instance UID for search.
          title: DICOMStudyInstanceUID
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The created at time of the image set provided for search.
          title: createdAt
        DICOMStudyDateAndTime:
          $ref: '#/components/schemas/SearchByAttributeValue_DICOMStudyDateAndTime'
      title: SearchByAttributeValue
      type: object
    SearchCriteria:
      description: The search criteria.
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/SearchCriteriaFiltersList'
          - description: The filters for the search criteria.
          title: filters
      title: SearchCriteria
      type: object
    SearchFilter:
      description: The search filter.
      properties:
        values:
          allOf:
          - $ref: '#/components/schemas/SearchFilterValuesList'
          - description: The search filter values.
          title: values
        operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          - description: The search filter operator for <code>imageSetDateTime</code>.
          title: operator
      required:
      - operator
      - values
      title: SearchFilter
      type: object
    SearchFilterValuesList:
      items:
        $ref: '#/components/schemas/SearchByAttributeValue'
      maxItems: 2
      minItems: 1
      type: array
    SearchImageSetsRequestMaxResultsInteger:
      maximum: 50
      minimum: 1
      type: integer
    SearchImageSetsRequest:
      example:
        searchCriteria:
          filters: ""
      properties:
        searchCriteria:
          $ref: '#/components/schemas/SearchImageSetsRequest_searchCriteria'
      title: SearchImageSetsRequest
      type: object
    StartDICOMImportJobRequest:
      example:
        jobName: ""
        inputS3Uri: ""
        clientToken: ""
        outputS3Uri: ""
        dataAccessRoleArn: ""
      properties:
        jobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: The import job name.
        dataAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of the IAM role that grants
              permission to access medical imaging resources.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: A unique identifier for API idempotency.
        inputS3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          - description: The input prefix path for the S3 bucket that contains the
              DICOM files to be imported.
        outputS3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          - description: The output prefix of the S3 bucket to upload the results
              of the DICOM import job.
      required:
      - clientToken
      - dataAccessRoleArn
      - inputS3Uri
      - outputS3Uri
      title: StartDICOMImportJobRequest
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The user-specified key and value tag pairs added to a medical
              imaging resource.
      required:
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateImageSetMetadataRequest:
      example:
        updateImageSetMetadataUpdates:
          DICOMUpdates:
            removableAttributes: ""
            updatableAttributes: ""
      properties:
        updateImageSetMetadataUpdates:
          $ref: '#/components/schemas/UpdateImageSetMetadataRequest_updateImageSetMetadataUpdates'
      required:
      - updateImageSetMetadataUpdates
      title: UpdateImageSetMetadataRequest
      type: object
    CopyImageSet_request_copyImageSetInformation_sourceImageSet:
      allOf:
      - $ref: '#/components/schemas/CopySourceImageSetInformation'
      - description: The source image set.
      example:
        latestVersionId: ""
      title: CopyImageSet_request_copyImageSetInformation_sourceImageSet
    CopyImageSet_request_copyImageSetInformation_destinationImageSet:
      allOf:
      - $ref: '#/components/schemas/CopyDestinationImageSet'
      - description: The destination image set.
      example:
        imageSetId: ""
        latestVersionId: ""
      title: CopyImageSet_request_copyImageSetInformation_destinationImageSet
    CopyImageSet_request_copyImageSetInformation:
      description: Copy image set information.
      properties:
        sourceImageSet:
          $ref: '#/components/schemas/CopyImageSet_request_copyImageSetInformation_sourceImageSet'
        destinationImageSet:
          $ref: '#/components/schemas/CopyImageSet_request_copyImageSetInformation_destinationImageSet'
      title: CopyImageSet_request_copyImageSetInformation
      type: object
    CopyImageSet_request:
      properties:
        copyImageSetInformation:
          $ref: '#/components/schemas/CopyImageSet_request_copyImageSetInformation'
      required:
      - copyImageSetInformation
      title: CopyImageSet_request
      type: object
    CreateDatastore_request:
      properties:
        datastoreName:
          description: The data store name.
          maxLength: 256
          minLength: 1
          pattern: "[A-Za-z0-9._/#-]+"
          title: datastoreName
          type: string
        clientToken:
          description: A unique identifier for API idempotency.
          maxLength: 64
          minLength: 1
          pattern: "[A-Za-z0-9._-]+"
          title: clientToken
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags provided when creating a data store.
          title: tags
          type: object
        kmsKeyArn:
          description: ARN referencing a KMS key or KMS key alias.
          maxLength: 512
          minLength: 1
          pattern: "arn:aws[a-zA-Z-]{0,16}:kms:[a-z]{2}(-[a-z]{1,16}){1,3}-\\d{1}:\\\
            d{12}:((key/[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})|(alias/[a-zA-Z0-9:/_-]{1,256}))"
          title: kmsKeyArn
          type: string
      required:
      - clientToken
      title: CreateDatastore_request
      type: object
    GetImageFrame_request_imageFrameInformation:
      description: Information about the image frame (pixel data) identifier.
      properties:
        imageFrameId:
          allOf:
          - $ref: '#/components/schemas/ImageFrameId'
          - description: The image frame (pixel data) identifier.
          title: imageFrameId
      title: GetImageFrame_request_imageFrameInformation
      type: object
    GetImageFrame_request:
      properties:
        imageFrameInformation:
          $ref: '#/components/schemas/GetImageFrame_request_imageFrameInformation'
      required:
      - imageFrameInformation
      title: GetImageFrame_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The user-specified key and value tag pairs added to a medical
            imaging resource.
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    SearchImageSets_request_searchCriteria:
      description: The search criteria.
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/SearchCriteriaFiltersList'
          - description: The filters for the search criteria.
          title: filters
      title: SearchImageSets_request_searchCriteria
      type: object
    SearchImageSets_request:
      properties:
        searchCriteria:
          $ref: '#/components/schemas/SearchImageSets_request_searchCriteria'
      title: SearchImageSets_request
      type: object
    StartDICOMImportJob_request:
      properties:
        jobName:
          description: The import job name.
          maxLength: 64
          minLength: 1
          pattern: "[A-Za-z0-9._/#-]+"
          title: jobName
          type: string
        dataAccessRoleArn:
          description: The Amazon Resource Name (ARN) of the IAM role that grants
            permission to access medical imaging resources.
          maxLength: 2048
          minLength: 20
          pattern: "arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+"
          title: dataAccessRoleArn
          type: string
        clientToken:
          description: A unique identifier for API idempotency.
          maxLength: 64
          minLength: 1
          pattern: "[A-Za-z0-9._-]+"
          title: clientToken
          type: string
        inputS3Uri:
          description: The input prefix path for the S3 bucket that contains the DICOM
            files to be imported.
          maxLength: 1024
          minLength: 1
          pattern: "s3://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/.*)?"
          title: inputS3Uri
          type: string
        outputS3Uri:
          description: The output prefix of the S3 bucket to upload the results of
            the DICOM import job.
          maxLength: 1024
          minLength: 1
          pattern: "s3://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/.*)?"
          title: outputS3Uri
          type: string
      required:
      - clientToken
      - dataAccessRoleArn
      - inputS3Uri
      - outputS3Uri
      title: StartDICOMImportJob_request
      type: object
    UpdateImageSetMetadata_request_updateImageSetMetadataUpdates_DICOMUpdates:
      allOf:
      - $ref: '#/components/schemas/DICOMUpdates'
      - description: The object containing <code>removableAttributes</code> and <code>updatableAttributes</code>.
      example:
        removableAttributes: ""
        updatableAttributes: ""
      title: UpdateImageSetMetadata_request_updateImageSetMetadataUpdates_DICOMUpdates
    UpdateImageSetMetadata_request_updateImageSetMetadataUpdates:
      description: Contains DICOMUpdates.
      properties:
        DICOMUpdates:
          $ref: '#/components/schemas/UpdateImageSetMetadata_request_updateImageSetMetadataUpdates_DICOMUpdates'
      title: UpdateImageSetMetadata_request_updateImageSetMetadataUpdates
      type: object
    UpdateImageSetMetadata_request:
      properties:
        updateImageSetMetadataUpdates:
          $ref: '#/components/schemas/UpdateImageSetMetadata_request_updateImageSetMetadataUpdates'
      required:
      - updateImageSetMetadataUpdates
      title: UpdateImageSetMetadata_request
      type: object
    CopyImageSetResponse_sourceImageSetProperties:
      allOf:
      - $ref: '#/components/schemas/CopySourceImageSetProperties'
      - description: The properties of the source image set.
      example:
        imageSetArn: ""
        createdAt: ""
        imageSetId: ""
        imageSetWorkflowStatus: ""
        latestVersionId: ""
        imageSetState: ""
        updatedAt: ""
      title: CopyImageSetResponse_sourceImageSetProperties
    CopyImageSetResponse_destinationImageSetProperties:
      allOf:
      - $ref: '#/components/schemas/CopyDestinationImageSetProperties'
      - description: The properties of the destination image set.
      example:
        imageSetArn: ""
        createdAt: ""
        imageSetId: ""
        imageSetWorkflowStatus: ""
        latestVersionId: ""
        imageSetState: ""
        updatedAt: ""
      title: CopyImageSetResponse_destinationImageSetProperties
    GetDICOMImportJobResponse_jobProperties:
      allOf:
      - $ref: '#/components/schemas/DICOMImportJobProperties'
      - description: The properties of the import job.
      example:
        jobName: ""
        jobId: ""
        jobStatus: ""
        inputS3Uri: ""
        endedAt: ""
        datastoreId: ""
        submittedAt: ""
        message: ""
        outputS3Uri: ""
        dataAccessRoleArn: ""
      title: GetDICOMImportJobResponse_jobProperties
    GetDatastoreResponse_datastoreProperties:
      allOf:
      - $ref: '#/components/schemas/DatastoreProperties'
      - description: The data store properties.
      example:
        createdAt: ""
        datastoreStatus: ""
        kmsKeyArn: ""
        datastoreName: ""
        datastoreId: ""
        datastoreArn: ""
        updatedAt: ""
      title: GetDatastoreResponse_datastoreProperties
    CopyImageSetRequest_copyImageSetInformation:
      allOf:
      - $ref: '#/components/schemas/CopyImageSetInformation'
      - description: Copy image set information.
      example:
        destinationImageSet:
          imageSetId: ""
          latestVersionId: ""
        sourceImageSet:
          latestVersionId: ""
      title: CopyImageSetRequest_copyImageSetInformation
    GetImageFrameRequest_imageFrameInformation:
      allOf:
      - $ref: '#/components/schemas/ImageFrameInformation'
      - description: Information about the image frame (pixel data) identifier.
      example:
        imageFrameId: ""
      title: GetImageFrameRequest_imageFrameInformation
    ImageSetsMetadataSummary_DICOMTags:
      allOf:
      - $ref: '#/components/schemas/DICOMTags'
      - description: The DICOM tags associated with the image set.
      title: ImageSetsMetadataSummary_DICOMTags
    SearchByAttributeValue_DICOMStudyDateAndTime:
      allOf:
      - $ref: '#/components/schemas/DICOMStudyDateAndTime'
      - description: The aggregated structure containing DICOM study date and study
          time for search.
      title: SearchByAttributeValue_DICOMStudyDateAndTime
    SearchImageSetsRequest_searchCriteria:
      allOf:
      - $ref: '#/components/schemas/SearchCriteria'
      - description: The search criteria that filters by applying a maximum of 1 item
          to <code>SearchByAttribute</code>.
      example:
        filters: ""
      title: SearchImageSetsRequest_searchCriteria
    UpdateImageSetMetadataRequest_updateImageSetMetadataUpdates:
      allOf:
      - $ref: '#/components/schemas/MetadataUpdates'
      - description: Update image set metadata updates.
      example:
        DICOMUpdates:
          removableAttributes: ""
          updatableAttributes: ""
      title: UpdateImageSetMetadataRequest_updateImageSetMetadataUpdates
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
