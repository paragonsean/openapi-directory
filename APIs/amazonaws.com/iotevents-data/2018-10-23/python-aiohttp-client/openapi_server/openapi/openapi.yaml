openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>IoT Events monitors your equipment or device fleets for failures\
    \ or changes in operation, and triggers actions when such events occur. You can\
    \ use IoT Events Data API commands to send inputs to detectors, list detectors,\
    \ and view or update a detector's status.</p> <p> For more information, see <a\
    \ href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/what-is-iotevents.html\"\
    >What is IoT Events?</a> in the <i>IoT Events Developer Guide</i>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS IoT Events Data
  version: 2018-10-23
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: iotevents-data
  x-aws-signingName: ioteventsdata
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotevents-data-2018-10-23.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/iotevents/
servers:
- description: The AWS IoT Events Data multi-region endpoint
  url: "http://data.iotevents.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS IoT Events Data multi-region endpoint
  url: "https://data.iotevents.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS IoT Events Data endpoint for China (Beijing) and China (Ningxia)
  url: "http://data.iotevents.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS IoT Events Data endpoint for China (Beijing) and China (Ningxia)
  url: "https://data.iotevents.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /alarms/acknowledge:
    post:
      description: Acknowledges one or more alarms. The alarms change to the <code>ACKNOWLEDGED</code>
        state after you acknowledge them.
      operationId: batch_acknowledge_alarm
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAcknowledgeAlarm_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAcknowledgeAlarmResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /alarms/disable:
    post:
      description: Disables one or more alarms. The alarms change to the <code>DISABLED</code>
        state after you disable them.
      operationId: batch_disable_alarm
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDisableAlarm_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDisableAlarmResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /alarms/enable:
    post:
      description: Enables one or more alarms. The alarms change to the <code>NORMAL</code>
        state after you enable them.
      operationId: batch_enable_alarm
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchEnableAlarm_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchEnableAlarmResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /alarms/reset:
    post:
      description: Resets one or more alarms. The alarms return to the <code>NORMAL</code>
        state after you reset them.
      operationId: batch_reset_alarm
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchResetAlarm_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResetAlarmResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /alarms/snooze:
    post:
      description: Changes one or more alarms to the snooze mode. The alarms change
        to the <code>SNOOZE_DISABLED</code> state after you set them to the snooze
        mode.
      operationId: batch_snooze_alarm
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchSnoozeAlarm_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSnoozeAlarmResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /alarms/{alarmModelName}:
    get:
      description: Lists one or more alarms. The operation returns only the metadata
        associated with each alarm.
      operationId: list_alarms
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the alarm model.
        explode: false
        in: path
        name: alarmModelName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The token that you can use to return the next set of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to be returned per request.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 250
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAlarmsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /alarms/{alarmModelName}/keyValues/:
    get:
      description: Retrieves information about an alarm.
      operationId: describe_alarm
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the alarm model.
        explode: false
        in: path
        name: alarmModelName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The value of the key used as a filter to select only the alarms
          associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.
        explode: true
        in: query
        name: keyValue
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_:]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAlarmResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /detectors:
    post:
      description: "Updates the state, variable values, and timer settings of one\
        \ or more detectors (instances) of a specified detector model."
      operationId: batch_update_detector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateDetector_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateDetectorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /detectors/delete:
    post:
      description: "Deletes one or more detectors that were created. When a detector\
        \ is deleted, its state will be cleared and the detector will be removed from\
        \ the list of detectors. The deleted detector will no longer appear if referenced\
        \ in the <a href=\"https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_ListDetectors.html\"\
        >ListDetectors</a> API call."
      operationId: batch_delete_detector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteDetector_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDeleteDetectorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /detectors/{detectorModelName}:
    get:
      description: Lists detectors (the instances of a detector model).
      operationId: list_detectors
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the detector model whose detectors (instances) are
          listed.
        explode: false
        in: path
        name: detectorModelName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: A filter that limits results to those detectors (instances) in
          the given state.
        explode: true
        in: query
        name: stateName
        required: false
        schema:
          maxLength: 128
          minLength: 1
          type: string
        style: form
      - description: The token that you can use to return the next set of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to be returned per request.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 250
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDetectorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /detectors/{detectorModelName}/keyValues/:
    get:
      description: Returns information about the specified detector (instance).
      operationId: describe_detector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the detector model whose detectors (instances) you
          want information about.
        explode: false
        in: path
        name: detectorModelName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: A filter used to limit results to detectors (instances) created
          because of the given key ID.
        explode: true
        in: query
        name: keyValue
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-_:]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDetectorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /inputs/messages:
    post:
      description: "Sends a set of messages to the IoT Events system. Each message\
        \ payload is transformed into the input you specify (<code>\"inputName\"</code>)\
        \ and ingested into any detectors that monitor that input. If multiple messages\
        \ are sent, the order in which the messages are processed isn't guaranteed.\
        \ To guarantee ordering, you must send messages one at a time and wait for\
        \ a successful response."
      operationId: batch_put_message
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPutMessage_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPutMessageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    BatchAcknowledgeAlarmResponse:
      example:
        errorEntries: ""
      properties:
        errorEntries:
          allOf:
          - $ref: '#/components/schemas/BatchAlarmActionErrorEntries'
          - description: "A list of errors associated with the request, or <code>null</code>\
              \ if there are no errors. Each error entry contains an entry ID that\
              \ helps you identify the entry that failed."
          title: errorEntries
      title: BatchAcknowledgeAlarmResponse
      type: object
    AcknowledgeAlarmActionRequest:
      description: Information needed to acknowledge the alarm.
      properties:
        requestId:
          allOf:
          - $ref: '#/components/schemas/RequestId'
          - description: The request ID. Each ID must be unique within each batch.
          title: requestId
        alarmModelName:
          allOf:
          - $ref: '#/components/schemas/AlarmModelName'
          - description: The name of the alarm model.
          title: alarmModelName
        keyValue:
          allOf:
          - $ref: '#/components/schemas/KeyValue'
          - description: The value of the key used as a filter to select only the
              alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.
          title: keyValue
        note:
          allOf:
          - $ref: '#/components/schemas/Note'
          - description: The note that you can leave when you acknowledge the alarm.
          title: note
      required:
      - alarmModelName
      - requestId
      title: AcknowledgeAlarmActionRequest
      type: object
    InvalidRequestException: {}
    InternalFailureException: {}
    ServiceUnavailableException: {}
    ThrottlingException: {}
    BatchDeleteDetectorResponse:
      example:
        batchDeleteDetectorErrorEntries: ""
      properties:
        batchDeleteDetectorErrorEntries:
          allOf:
          - $ref: '#/components/schemas/BatchDeleteDetectorErrorEntries'
          - description: "A list of errors associated with the request, or an empty\
              \ array (<code>[]</code>) if there are no errors. Each error entry contains\
              \ a <code>messageId</code> that helps you identify the entry that failed."
          title: batchDeleteDetectorErrorEntries
      title: BatchDeleteDetectorResponse
      type: object
    DeleteDetectorRequest:
      description: Information used to delete the detector model.
      properties:
        messageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          - description: The ID to assign to the <code>DeleteDetectorRequest</code>.
              Each <code>"messageId"</code> must be unique within each batch sent.
          title: messageId
        detectorModelName:
          allOf:
          - $ref: '#/components/schemas/DetectorModelName'
          - description: The name of the detector model that was used to create the
              detector instance.
          title: detectorModelName
        keyValue:
          allOf:
          - $ref: '#/components/schemas/KeyValue'
          - description: 'The value of the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateDetectorModel.html#iotevents-CreateDetectorModel-request-key">key</a>
              used to identify the detector. '
          title: keyValue
      required:
      - detectorModelName
      - messageId
      title: DeleteDetectorRequest
      type: object
    BatchDisableAlarmResponse:
      example:
        errorEntries: ""
      properties:
        errorEntries:
          allOf:
          - $ref: '#/components/schemas/BatchAlarmActionErrorEntries'
          - description: "A list of errors associated with the request, or <code>null</code>\
              \ if there are no errors. Each error entry contains an entry ID that\
              \ helps you identify the entry that failed."
          title: errorEntries
      title: BatchDisableAlarmResponse
      type: object
    DisableAlarmActionRequest:
      description: Information used to disable the alarm.
      properties:
        requestId:
          allOf:
          - $ref: '#/components/schemas/RequestId'
          - description: The request ID. Each ID must be unique within each batch.
          title: requestId
        alarmModelName:
          allOf:
          - $ref: '#/components/schemas/AlarmModelName'
          - description: The name of the alarm model.
          title: alarmModelName
        keyValue:
          allOf:
          - $ref: '#/components/schemas/KeyValue'
          - description: The value of the key used as a filter to select only the
              alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.
          title: keyValue
        note:
          allOf:
          - $ref: '#/components/schemas/Note'
          - description: The note that you can leave when you disable the alarm.
          title: note
      required:
      - alarmModelName
      - requestId
      title: DisableAlarmActionRequest
      type: object
    BatchEnableAlarmResponse:
      example:
        errorEntries: ""
      properties:
        errorEntries:
          allOf:
          - $ref: '#/components/schemas/BatchAlarmActionErrorEntries'
          - description: "A list of errors associated with the request, or <code>null</code>\
              \ if there are no errors. Each error entry contains an entry ID that\
              \ helps you identify the entry that failed."
          title: errorEntries
      title: BatchEnableAlarmResponse
      type: object
    EnableAlarmActionRequest:
      description: Information needed to enable the alarm.
      properties:
        requestId:
          allOf:
          - $ref: '#/components/schemas/RequestId'
          - description: The request ID. Each ID must be unique within each batch.
          title: requestId
        alarmModelName:
          allOf:
          - $ref: '#/components/schemas/AlarmModelName'
          - description: The name of the alarm model.
          title: alarmModelName
        keyValue:
          allOf:
          - $ref: '#/components/schemas/KeyValue'
          - description: The value of the key used as a filter to select only the
              alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.
          title: keyValue
        note:
          allOf:
          - $ref: '#/components/schemas/Note'
          - description: The note that you can leave when you enable the alarm.
          title: note
      required:
      - alarmModelName
      - requestId
      title: EnableAlarmActionRequest
      type: object
    BatchPutMessageResponse:
      example:
        BatchPutMessageErrorEntries: ""
      properties:
        BatchPutMessageErrorEntries:
          allOf:
          - $ref: '#/components/schemas/BatchPutMessageErrorEntries'
          - description: A list of any errors encountered when sending the messages.
          title: BatchPutMessageErrorEntries
      title: BatchPutMessageResponse
      type: object
    Message:
      description: Information about a message.
      properties:
        messageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          - description: "The ID to assign to the message. Within each batch sent,\
              \ each <code>\"messageId\"</code> must be unique."
          title: messageId
        inputName:
          allOf:
          - $ref: '#/components/schemas/EphemeralInputName'
          - description: The name of the input into which the message payload is transformed.
          title: inputName
        payload:
          allOf:
          - $ref: '#/components/schemas/Payload'
          - description: The payload of the message. This can be a JSON string or
              a Base-64-encoded string representing binary data (in which case you
              must decode it).
          title: payload
        timestamp:
          $ref: '#/components/schemas/Message_timestamp'
      required:
      - inputName
      - messageId
      - payload
      title: Message
      type: object
    BatchResetAlarmResponse:
      example:
        errorEntries: ""
      properties:
        errorEntries:
          allOf:
          - $ref: '#/components/schemas/BatchAlarmActionErrorEntries'
          - description: "A list of errors associated with the request, or <code>null</code>\
              \ if there are no errors. Each error entry contains an entry ID that\
              \ helps you identify the entry that failed."
          title: errorEntries
      title: BatchResetAlarmResponse
      type: object
    ResetAlarmActionRequest:
      description: Information needed to reset the alarm.
      properties:
        requestId:
          allOf:
          - $ref: '#/components/schemas/RequestId'
          - description: The request ID. Each ID must be unique within each batch.
          title: requestId
        alarmModelName:
          allOf:
          - $ref: '#/components/schemas/AlarmModelName'
          - description: The name of the alarm model.
          title: alarmModelName
        keyValue:
          allOf:
          - $ref: '#/components/schemas/KeyValue'
          - description: The value of the key used as a filter to select only the
              alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.
          title: keyValue
        note:
          allOf:
          - $ref: '#/components/schemas/Note'
          - description: The note that you can leave when you reset the alarm.
          title: note
      required:
      - alarmModelName
      - requestId
      title: ResetAlarmActionRequest
      type: object
    BatchSnoozeAlarmResponse:
      example:
        errorEntries: ""
      properties:
        errorEntries:
          allOf:
          - $ref: '#/components/schemas/BatchAlarmActionErrorEntries'
          - description: "A list of errors associated with the request, or <code>null</code>\
              \ if there are no errors. Each error entry contains an entry ID that\
              \ helps you identify the entry that failed."
          title: errorEntries
      title: BatchSnoozeAlarmResponse
      type: object
    SnoozeAlarmActionRequest:
      description: Information needed to snooze the alarm.
      properties:
        requestId:
          allOf:
          - $ref: '#/components/schemas/RequestId'
          - description: The request ID. Each ID must be unique within each batch.
          title: requestId
        alarmModelName:
          allOf:
          - $ref: '#/components/schemas/AlarmModelName'
          - description: The name of the alarm model.
          title: alarmModelName
        keyValue:
          allOf:
          - $ref: '#/components/schemas/KeyValue'
          - description: The value of the key used as a filter to select only the
              alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.
          title: keyValue
        note:
          allOf:
          - $ref: '#/components/schemas/Note'
          - description: The note that you can leave when you snooze the alarm.
          title: note
        snoozeDuration:
          allOf:
          - $ref: '#/components/schemas/SnoozeDuration'
          - description: The snooze time in seconds. The alarm automatically changes
              to the <code>NORMAL</code> state after this duration.
          title: snoozeDuration
      required:
      - alarmModelName
      - requestId
      - snoozeDuration
      title: SnoozeAlarmActionRequest
      type: object
    BatchUpdateDetectorResponse:
      example:
        batchUpdateDetectorErrorEntries: ""
      properties:
        batchUpdateDetectorErrorEntries:
          allOf:
          - $ref: '#/components/schemas/BatchUpdateDetectorErrorEntries'
          - description: "A list of those detector updates that resulted in errors.\
              \ (If an error is listed here, the specific update did not occur.)"
          title: batchUpdateDetectorErrorEntries
      title: BatchUpdateDetectorResponse
      type: object
    UpdateDetectorRequest:
      description: Information used to update the detector (instance).
      properties:
        messageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          - description: The ID to assign to the detector update <code>"message"</code>.
              Each <code>"messageId"</code> must be unique within each batch sent.
          title: messageId
        detectorModelName:
          allOf:
          - $ref: '#/components/schemas/DetectorModelName'
          - description: The name of the detector model that created the detectors
              (instances).
          title: detectorModelName
        keyValue:
          allOf:
          - $ref: '#/components/schemas/KeyValue'
          - description: The value of the input key attribute (identifying the device
              or system) that caused the creation of this detector (instance).
          title: keyValue
        state:
          $ref: '#/components/schemas/UpdateDetectorRequest_state'
      required:
      - detectorModelName
      - messageId
      - state
      title: UpdateDetectorRequest
      type: object
    DescribeAlarmResponse:
      example:
        alarm:
          alarmModelName: ""
          severity: ""
          alarmState:
            stateName: ""
            customerAction:
              resetActionConfiguration:
                note: ""
              disableActionConfiguration:
                note: ""
              snoozeActionConfiguration:
                note: ""
                snoozeDuration: ""
              enableActionConfiguration:
                note: ""
              actionName: ""
              acknowledgeActionConfiguration:
                note: ""
            ruleEvaluation:
              simpleRuleEvaluation:
                inputPropertyValue: ""
                thresholdValue: ""
                operator: ""
            systemEvent:
              stateChangeConfiguration:
                triggerType: ""
              eventType: ""
          creationTime: ""
          keyValue: ""
          alarmModelVersion: ""
          lastUpdateTime: ""
      properties:
        alarm:
          $ref: '#/components/schemas/DescribeAlarmResponse_alarm'
      title: DescribeAlarmResponse
      type: object
    ResourceNotFoundException: {}
    DescribeDetectorResponse:
      example:
        detector:
          creationTime: ""
          keyValue: ""
          detectorModelVersion: ""
          state:
            variables: ""
            timers: ""
            stateName: ""
          detectorModelName: ""
          lastUpdateTime: ""
      properties:
        detector:
          $ref: '#/components/schemas/DescribeDetectorResponse_detector'
      title: DescribeDetectorResponse
      type: object
    ListAlarmsResponse:
      example:
        nextToken: ""
        alarmSummaries: ""
      properties:
        alarmSummaries:
          allOf:
          - $ref: '#/components/schemas/AlarmSummaries'
          - description: A list that summarizes each alarm.
          title: alarmSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token that you can use to return the next set of results,\
              \ or <code>null</code> if there are no more results."
          title: nextToken
      title: ListAlarmsResponse
      type: object
    ListDetectorsResponse:
      example:
        nextToken: ""
        detectorSummaries: ""
      properties:
        detectorSummaries:
          allOf:
          - $ref: '#/components/schemas/DetectorSummaries'
          - description: A list of summary information about the detectors (instances).
          title: detectorSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token that you can use to return the next set of results,\
              \ or <code>null</code> if there are no more results."
          title: nextToken
      title: ListDetectorsResponse
      type: object
    Note:
      maxLength: 256
      type: string
    AcknowledgeActionConfiguration:
      description: Contains the configuration information of an acknowledge action.
      properties:
        note:
          allOf:
          - $ref: '#/components/schemas/Note'
          - description: The note that you can leave when you acknowledge the alarm.
          title: note
      title: AcknowledgeActionConfiguration
      type: object
    RequestId:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z0-9_-]+$"
      type: string
    AlarmModelName:
      maxLength: 128
      minLength: 1
      pattern: "^[a-zA-Z0-9_-]+$"
      type: string
    KeyValue:
      maxLength: 128
      minLength: 1
      pattern: "^[a-zA-Z0-9\\-_:]+$"
      type: string
    AcknowledgeAlarmActionRequests:
      items:
        $ref: '#/components/schemas/AcknowledgeAlarmActionRequest'
      minItems: 1
      type: array
    AlarmModelVersion:
      maxLength: 128
      minLength: 1
      type: string
    AlarmState:
      description: Contains information about the current state of the alarm.
      properties:
        stateName:
          allOf:
          - $ref: '#/components/schemas/AlarmStateName'
          - description: "<p>The name of the alarm state. The state name can be one\
              \ of the following values:</p> <ul> <li> <p> <code>DISABLED</code> -\
              \ When the alarm is in the <code>DISABLED</code> state, it isn't ready\
              \ to evaluate data. To enable the alarm, you must change the alarm to\
              \ the <code>NORMAL</code> state.</p> </li> <li> <p> <code>NORMAL</code>\
              \ - When the alarm is in the <code>NORMAL</code> state, it's ready to\
              \ evaluate data.</p> </li> <li> <p> <code>ACTIVE</code> - If the alarm\
              \ is in the <code>ACTIVE</code> state, the alarm is invoked.</p> </li>\
              \ <li> <p> <code>ACKNOWLEDGED</code> - When the alarm is in the <code>ACKNOWLEDGED</code>\
              \ state, the alarm was invoked and you acknowledged the alarm.</p> </li>\
              \ <li> <p> <code>SNOOZE_DISABLED</code> - When the alarm is in the <code>SNOOZE_DISABLED</code>\
              \ state, the alarm is disabled for a specified period of time. After\
              \ the snooze time, the alarm automatically changes to the <code>NORMAL</code>\
              \ state. </p> </li> <li> <p> <code>LATCHED</code> - When the alarm is\
              \ in the <code>LATCHED</code> state, the alarm was invoked. However,\
              \ the data that the alarm is currently evaluating is within the specified\
              \ range. To change the alarm to the <code>NORMAL</code> state, you must\
              \ acknowledge the alarm.</p> </li> </ul>"
          title: stateName
        ruleEvaluation:
          $ref: '#/components/schemas/AlarmState_ruleEvaluation'
        customerAction:
          $ref: '#/components/schemas/AlarmState_customerAction'
        systemEvent:
          $ref: '#/components/schemas/AlarmState_systemEvent'
      title: AlarmState
      type: object
    Severity:
      maximum: 2147483647
      minimum: 0
      type: integer
    Timestamp:
      format: date-time
      type: string
    Alarm:
      description: Contains information about an alarm.
      properties:
        alarmModelName:
          allOf:
          - $ref: '#/components/schemas/AlarmModelName'
          - description: The name of the alarm model.
          title: alarmModelName
        alarmModelVersion:
          allOf:
          - $ref: '#/components/schemas/AlarmModelVersion'
          - description: The version of the alarm model.
          title: alarmModelVersion
        keyValue:
          allOf:
          - $ref: '#/components/schemas/KeyValue'
          - description: The value of the key used as a filter to select only the
              alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.
          title: keyValue
        alarmState:
          $ref: '#/components/schemas/Alarm_alarmState'
        severity:
          allOf:
          - $ref: '#/components/schemas/Severity'
          - description: A non-negative integer that reflects the severity level of
              the alarm.
          title: severity
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time the alarm was created, in the Unix epoch format."
          title: creationTime
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time the alarm was last updated, in the Unix epoch format."
          title: lastUpdateTime
      title: Alarm
      type: object
    AlarmStateName:
      enum:
      - DISABLED
      - NORMAL
      - ACTIVE
      - ACKNOWLEDGED
      - SNOOZE_DISABLED
      - LATCHED
      title: AlarmStateName
      type: string
    RuleEvaluation:
      description: Information needed to evaluate data.
      properties:
        simpleRuleEvaluation:
          $ref: '#/components/schemas/RuleEvaluation_simpleRuleEvaluation'
      title: RuleEvaluation
      type: object
    CustomerAction:
      description: Contains information about the action that you can take to respond
        to the alarm.
      properties:
        actionName:
          allOf:
          - $ref: '#/components/schemas/CustomerActionName'
          - description: "<p>The name of the action. The action name can be one of\
              \ the following values:</p> <ul> <li> <p> <code>SNOOZE</code> - When\
              \ you snooze the alarm, the alarm state changes to <code>SNOOZE_DISABLED</code>.</p>\
              \ </li> <li> <p> <code>ENABLE</code> - When you enable the alarm, the\
              \ alarm state changes to <code>NORMAL</code>.</p> </li> <li> <p> <code>DISABLE</code>\
              \ - When you disable the alarm, the alarm state changes to <code>DISABLED</code>.</p>\
              \ </li> <li> <p> <code>ACKNOWLEDGE</code> - When you acknowledge the\
              \ alarm, the alarm state changes to <code>ACKNOWLEDGED</code>.</p> </li>\
              \ <li> <p> <code>RESET</code> - When you reset the alarm, the alarm\
              \ state changes to <code>NORMAL</code>.</p> </li> </ul> <p>For more\
              \ information, see the <a href=\"https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_AlarmState.html\"\
              >AlarmState</a> API.</p>"
          title: actionName
        snoozeActionConfiguration:
          $ref: '#/components/schemas/CustomerAction_snoozeActionConfiguration'
        enableActionConfiguration:
          $ref: '#/components/schemas/CustomerAction_enableActionConfiguration'
        disableActionConfiguration:
          $ref: '#/components/schemas/CustomerAction_disableActionConfiguration'
        acknowledgeActionConfiguration:
          $ref: '#/components/schemas/CustomerAction_acknowledgeActionConfiguration'
        resetActionConfiguration:
          $ref: '#/components/schemas/CustomerAction_resetActionConfiguration'
      title: CustomerAction
      type: object
    SystemEvent:
      description: Contains information about alarm state changes.
      properties:
        eventType:
          allOf:
          - $ref: '#/components/schemas/EventType'
          - description: "The event type. If the value is <code>STATE_CHANGE</code>,\
              \ the event contains information about alarm state changes."
          title: eventType
        stateChangeConfiguration:
          $ref: '#/components/schemas/SystemEvent_stateChangeConfiguration'
      title: SystemEvent
      type: object
    AlarmSummary:
      description: Contains a summary of an alarm.
      properties:
        alarmModelName:
          allOf:
          - $ref: '#/components/schemas/AlarmModelName'
          - description: The name of the alarm model.
          title: alarmModelName
        alarmModelVersion:
          allOf:
          - $ref: '#/components/schemas/AlarmModelVersion'
          - description: The version of the alarm model.
          title: alarmModelVersion
        keyValue:
          allOf:
          - $ref: '#/components/schemas/KeyValue'
          - description: The value of the key used as a filter to select only the
              alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.
          title: keyValue
        stateName:
          allOf:
          - $ref: '#/components/schemas/AlarmStateName'
          - description: "<p>The name of the alarm state. The state name can be one\
              \ of the following values:</p> <ul> <li> <p> <code>DISABLED</code> -\
              \ When the alarm is in the <code>DISABLED</code> state, it isn't ready\
              \ to evaluate data. To enable the alarm, you must change the alarm to\
              \ the <code>NORMAL</code> state.</p> </li> <li> <p> <code>NORMAL</code>\
              \ - When the alarm is in the <code>NORMAL</code> state, it's ready to\
              \ evaluate data.</p> </li> <li> <p> <code>ACTIVE</code> - If the alarm\
              \ is in the <code>ACTIVE</code> state, the alarm is invoked.</p> </li>\
              \ <li> <p> <code>ACKNOWLEDGED</code> - When the alarm is in the <code>ACKNOWLEDGED</code>\
              \ state, the alarm was invoked and you acknowledged the alarm.</p> </li>\
              \ <li> <p> <code>SNOOZE_DISABLED</code> - When the alarm is in the <code>SNOOZE_DISABLED</code>\
              \ state, the alarm is disabled for a specified period of time. After\
              \ the snooze time, the alarm automatically changes to the <code>NORMAL</code>\
              \ state. </p> </li> <li> <p> <code>LATCHED</code> - When the alarm is\
              \ in the <code>LATCHED</code> state, the alarm was invoked. However,\
              \ the data that the alarm is currently evaluating is within the specified\
              \ range. To change the alarm to the <code>NORMAL</code> state, you must\
              \ acknowledge the alarm.</p> </li> </ul>"
          title: stateName
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time the alarm was created, in the Unix epoch format."
          title: creationTime
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time the alarm was last updated, in the Unix epoch format."
          title: lastUpdateTime
      title: AlarmSummary
      type: object
    AlarmSummaries:
      items:
        $ref: '#/components/schemas/AlarmSummary'
      type: array
    BatchAcknowledgeAlarmRequest:
      example:
        acknowledgeActionRequests: ""
      properties:
        acknowledgeActionRequests:
          allOf:
          - $ref: '#/components/schemas/AcknowledgeAlarmActionRequests'
          - description: The list of acknowledge action requests. You can specify
              up to 10 requests per operation.
      required:
      - acknowledgeActionRequests
      title: BatchAcknowledgeAlarmRequest
      type: object
    BatchAlarmActionErrorEntries:
      items:
        $ref: '#/components/schemas/BatchAlarmActionErrorEntry'
      type: array
    BatchAlarmActionErrorEntry:
      description: <p>Contains error messages associated with one of the following
        requests:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchAcknowledgeAlarm.html">BatchAcknowledgeAlarm</a>
        </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchDisableAlarm.html">BatchDisableAlarm</a>
        </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchEnableAlarm.html">BatchEnableAlarm</a>
        </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchResetAlarm.html">BatchResetAlarm</a>
        </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchSnoozeAlarm.html">BatchSnoozeAlarm</a>
        </p> </li> </ul>
      properties:
        requestId:
          allOf:
          - $ref: '#/components/schemas/RequestId'
          - description: The request ID. Each ID must be unique within each batch.
          title: requestId
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          - description: The error code.
          title: errorCode
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: A message that describes the error.
          title: errorMessage
      title: BatchAlarmActionErrorEntry
      type: object
    ErrorCode:
      enum:
      - ResourceNotFoundException
      - InvalidRequestException
      - InternalFailureException
      - ServiceUnavailableException
      - ThrottlingException
      title: ErrorCode
      type: string
    ErrorMessage:
      type: string
    BatchDeleteDetectorErrorEntry:
      description: Contains error messages associated with the deletion request.
      properties:
        messageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          - description: The ID of the message that caused the error. (See the value
              of the <code>"messageId"</code> in the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchDeleteDetector.html#iotevents-iotevents-data_BatchDeleteDetector-request-detectors">detectors</a>
              object of the <code>DeleteDetectorRequest</code>.)
          title: messageId
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          - description: The error code.
          title: errorCode
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: A message that describes the error.
          title: errorMessage
      title: BatchDeleteDetectorErrorEntry
      type: object
    BatchDeleteDetectorErrorEntries:
      items:
        $ref: '#/components/schemas/BatchDeleteDetectorErrorEntry'
      type: array
    MessageId:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z0-9_-]+$"
      type: string
    DeleteDetectorRequests:
      items:
        $ref: '#/components/schemas/DeleteDetectorRequest'
      minItems: 1
      type: array
    BatchDeleteDetectorRequest:
      example:
        detectors: ""
      properties:
        detectors:
          allOf:
          - $ref: '#/components/schemas/DeleteDetectorRequests'
          - description: The list of one or more detectors to be deleted.
      required:
      - detectors
      title: BatchDeleteDetectorRequest
      type: object
    DisableAlarmActionRequests:
      items:
        $ref: '#/components/schemas/DisableAlarmActionRequest'
      minItems: 1
      type: array
    BatchDisableAlarmRequest:
      example:
        disableActionRequests: ""
      properties:
        disableActionRequests:
          allOf:
          - $ref: '#/components/schemas/DisableAlarmActionRequests'
          - description: The list of disable action requests. You can specify up to
              10 requests per operation.
      required:
      - disableActionRequests
      title: BatchDisableAlarmRequest
      type: object
    EnableAlarmActionRequests:
      items:
        $ref: '#/components/schemas/EnableAlarmActionRequest'
      minItems: 1
      type: array
    BatchEnableAlarmRequest:
      example:
        enableActionRequests: ""
      properties:
        enableActionRequests:
          allOf:
          - $ref: '#/components/schemas/EnableAlarmActionRequests'
          - description: The list of enable action requests. You can specify up to
              10 requests per operation.
      required:
      - enableActionRequests
      title: BatchEnableAlarmRequest
      type: object
    BatchPutMessageErrorEntry:
      description: Contains information about the errors encountered.
      properties:
        messageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          - description: The ID of the message that caused the error. (See the value
              corresponding to the <code>"messageId"</code> key in the <code>"message"</code>
              object.)
          title: messageId
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          - description: The error code.
          title: errorCode
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: A message that describes the error.
          title: errorMessage
      title: BatchPutMessageErrorEntry
      type: object
    BatchPutMessageErrorEntries:
      items:
        $ref: '#/components/schemas/BatchPutMessageErrorEntry'
      type: array
    Messages:
      items:
        $ref: '#/components/schemas/Message'
      minItems: 1
      type: array
    BatchPutMessageRequest:
      example:
        messages: ""
      properties:
        messages:
          allOf:
          - $ref: '#/components/schemas/Messages'
          - description: "The list of messages to send. Each message has the following\
              \ format: <code>'{ \"messageId\": \"string\", \"inputName\": \"string\"\
              , \"payload\": \"string\"}'</code> "
      required:
      - messages
      title: BatchPutMessageRequest
      type: object
    ResetAlarmActionRequests:
      items:
        $ref: '#/components/schemas/ResetAlarmActionRequest'
      minItems: 1
      type: array
    BatchResetAlarmRequest:
      example:
        resetActionRequests: ""
      properties:
        resetActionRequests:
          allOf:
          - $ref: '#/components/schemas/ResetAlarmActionRequests'
          - description: The list of reset action requests. You can specify up to
              10 requests per operation.
      required:
      - resetActionRequests
      title: BatchResetAlarmRequest
      type: object
    SnoozeAlarmActionRequests:
      items:
        $ref: '#/components/schemas/SnoozeAlarmActionRequest'
      minItems: 1
      type: array
    BatchSnoozeAlarmRequest:
      example:
        snoozeActionRequests: ""
      properties:
        snoozeActionRequests:
          allOf:
          - $ref: '#/components/schemas/SnoozeAlarmActionRequests'
          - description: The list of snooze action requests. You can specify up to
              10 requests per operation.
      required:
      - snoozeActionRequests
      title: BatchSnoozeAlarmRequest
      type: object
    BatchUpdateDetectorErrorEntry:
      description: Information about the error that occurred when attempting to update
        a detector.
      properties:
        messageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          - description: The <code>"messageId"</code> of the update request that caused
              the error. (The value of the <code>"messageId"</code> in the update
              request <code>"Detector"</code> object.)
          title: messageId
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          - description: The error code.
          title: errorCode
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: A message that describes the error.
          title: errorMessage
      title: BatchUpdateDetectorErrorEntry
      type: object
    BatchUpdateDetectorErrorEntries:
      items:
        $ref: '#/components/schemas/BatchUpdateDetectorErrorEntry'
      type: array
    UpdateDetectorRequests:
      items:
        $ref: '#/components/schemas/UpdateDetectorRequest'
      minItems: 1
      type: array
    BatchUpdateDetectorRequest:
      example:
        detectors: ""
      properties:
        detectors:
          allOf:
          - $ref: '#/components/schemas/UpdateDetectorRequests'
          - description: "The list of detectors (instances) to update, along with\
              \ the values to update."
      required:
      - detectors
      title: BatchUpdateDetectorRequest
      type: object
    ComparisonOperator:
      enum:
      - GREATER
      - GREATER_OR_EQUAL
      - LESS
      - LESS_OR_EQUAL
      - EQUAL
      - NOT_EQUAL
      title: ComparisonOperator
      type: string
    CustomerActionName:
      enum:
      - SNOOZE
      - ENABLE
      - DISABLE
      - ACKNOWLEDGE
      - RESET
      title: CustomerActionName
      type: string
    SnoozeActionConfiguration:
      description: Contains the configuration information of a snooze action.
      properties:
        snoozeDuration:
          allOf:
          - $ref: '#/components/schemas/SnoozeDuration'
          - description: The snooze time in seconds. The alarm automatically changes
              to the <code>NORMAL</code> state after this duration.
          title: snoozeDuration
        note:
          allOf:
          - $ref: '#/components/schemas/Note'
          - description: The note that you can leave when you snooze the alarm.
          title: note
      title: SnoozeActionConfiguration
      type: object
    EnableActionConfiguration:
      description: Contains the configuration information of an enable action.
      properties:
        note:
          allOf:
          - $ref: '#/components/schemas/Note'
          - description: The note that you can leave when you enable the alarm.
          title: note
      title: EnableActionConfiguration
      type: object
    DisableActionConfiguration:
      description: Contains the configuration information of a disable action.
      properties:
        note:
          allOf:
          - $ref: '#/components/schemas/Note'
          - description: The note that you can leave when you disable the alarm.
          title: note
      title: DisableActionConfiguration
      type: object
    ResetActionConfiguration:
      description: Contains the configuration information of a reset action.
      properties:
        note:
          allOf:
          - $ref: '#/components/schemas/Note'
          - description: The note that you can leave when you reset the alarm.
          title: note
      title: ResetActionConfiguration
      type: object
    DetectorModelName:
      maxLength: 128
      minLength: 1
      pattern: "^[a-zA-Z0-9_-]+$"
      type: string
    DescribeAlarmRequest:
      properties: {}
      title: DescribeAlarmRequest
      type: object
    DescribeDetectorRequest:
      properties: {}
      title: DescribeDetectorRequest
      type: object
    Detector:
      description: Information about the detector (instance).
      properties:
        detectorModelName:
          allOf:
          - $ref: '#/components/schemas/DetectorModelName'
          - description: The name of the detector model that created this detector
              (instance).
          title: detectorModelName
        keyValue:
          allOf:
          - $ref: '#/components/schemas/KeyValue'
          - description: The value of the key (identifying the device or system) that
              caused the creation of this detector (instance).
          title: keyValue
        detectorModelVersion:
          allOf:
          - $ref: '#/components/schemas/DetectorModelVersion'
          - description: The version of the detector model that created this detector
              (instance).
          title: detectorModelVersion
        state:
          $ref: '#/components/schemas/Detector_state'
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the detector (instance) was created.
          title: creationTime
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the detector (instance) was last updated.
          title: lastUpdateTime
      title: Detector
      type: object
    DetectorModelVersion:
      maxLength: 128
      minLength: 1
      type: string
    DetectorState:
      description: Information about the current state of the detector instance.
      properties:
        stateName:
          allOf:
          - $ref: '#/components/schemas/StateName'
          - description: The name of the state.
          title: stateName
        variables:
          allOf:
          - $ref: '#/components/schemas/Variables'
          - description: The current values of the detector's variables.
          title: variables
        timers:
          allOf:
          - $ref: '#/components/schemas/Timers'
          - description: The current state of the detector's timers.
          title: timers
      required:
      - stateName
      - timers
      - variables
      title: DetectorState
      type: object
    StateName:
      maxLength: 128
      minLength: 1
      type: string
    Variables:
      items:
        $ref: '#/components/schemas/Variable'
      type: array
    Timers:
      items:
        $ref: '#/components/schemas/Timer'
      type: array
    VariableDefinitions:
      items:
        $ref: '#/components/schemas/VariableDefinition'
      type: array
    TimerDefinitions:
      items:
        $ref: '#/components/schemas/TimerDefinition'
      type: array
    DetectorStateDefinition:
      description: "The new state, variable values, and timer settings of the detector\
        \ (instance)."
      properties:
        stateName:
          allOf:
          - $ref: '#/components/schemas/StateName'
          - description: The name of the new state of the detector (instance).
          title: stateName
        variables:
          allOf:
          - $ref: '#/components/schemas/VariableDefinitions'
          - description: The new values of the detector's variables. Any variable
              whose value isn't specified is cleared.
          title: variables
        timers:
          allOf:
          - $ref: '#/components/schemas/TimerDefinitions'
          - description: "The new values of the detector's timers. Any timer whose\
              \ value isn't specified is cleared, and its timeout event won't occur."
          title: timers
      required:
      - stateName
      - timers
      - variables
      title: DetectorStateDefinition
      type: object
    DetectorStateSummary:
      description: Information about the detector state.
      properties:
        stateName:
          allOf:
          - $ref: '#/components/schemas/StateName'
          - description: The name of the state.
          title: stateName
      title: DetectorStateSummary
      type: object
    DetectorSummary:
      description: Information about the detector (instance).
      properties:
        detectorModelName:
          allOf:
          - $ref: '#/components/schemas/DetectorModelName'
          - description: The name of the detector model that created this detector
              (instance).
          title: detectorModelName
        keyValue:
          allOf:
          - $ref: '#/components/schemas/KeyValue'
          - description: The value of the key (identifying the device or system) that
              caused the creation of this detector (instance).
          title: keyValue
        detectorModelVersion:
          allOf:
          - $ref: '#/components/schemas/DetectorModelVersion'
          - description: The version of the detector model that created this detector
              (instance).
          title: detectorModelVersion
        state:
          $ref: '#/components/schemas/DetectorSummary_state'
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the detector (instance) was created.
          title: creationTime
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the detector (instance) was last updated.
          title: lastUpdateTime
      title: DetectorSummary
      type: object
    DetectorSummaries:
      items:
        $ref: '#/components/schemas/DetectorSummary'
      type: array
    EphemeralInputName:
      maxLength: 128
      minLength: 1
      pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
      type: string
    EpochMilliTimestamp:
      maximum: 9223372036854776000
      minimum: 1
      type: integer
    EventType:
      enum:
      - STATE_CHANGE
      title: EventType
      type: string
    InputPropertyValue:
      type: string
    NextToken:
      type: string
    MaxResults:
      maximum: 250
      minimum: 1
      type: integer
    ListAlarmsRequest:
      properties: {}
      title: ListAlarmsRequest
      type: object
    ListDetectorsRequest:
      properties: {}
      title: ListDetectorsRequest
      type: object
    Payload:
      type: string
    TimestampValue:
      description: Contains information about a timestamp.
      properties:
        timeInMillis:
          allOf:
          - $ref: '#/components/schemas/EpochMilliTimestamp'
          - description: "The value of the timestamp, in the Unix epoch format."
          title: timeInMillis
      title: TimestampValue
      type: object
    SimpleRuleEvaluation:
      description: Information needed to compare two values with a comparison operator.
      properties:
        inputPropertyValue:
          allOf:
          - $ref: '#/components/schemas/InputPropertyValue'
          - description: "The value of the input property, on the left side of the\
              \ comparison operator."
          title: inputPropertyValue
        operator:
          allOf:
          - $ref: '#/components/schemas/ComparisonOperator'
          - description: The comparison operator.
          title: operator
        thresholdValue:
          allOf:
          - $ref: '#/components/schemas/ThresholdValue'
          - description: "The threshold value, on the right side of the comparison\
              \ operator."
          title: thresholdValue
      title: SimpleRuleEvaluation
      type: object
    Seconds:
      type: integer
    ThresholdValue:
      type: string
    SnoozeDuration:
      type: integer
    TriggerType:
      enum:
      - SNOOZE_TIMEOUT
      title: TriggerType
      type: string
    StateChangeConfiguration:
      description: Contains the configuration information of alarm state changes.
      properties:
        triggerType:
          allOf:
          - $ref: '#/components/schemas/TriggerType'
          - description: "The trigger type. If the value is <code>SNOOZE_TIMEOUT</code>,\
              \ the snooze duration ends and the alarm automatically changes to the\
              \ <code>NORMAL</code> state."
          title: triggerType
      title: StateChangeConfiguration
      type: object
    TimerName:
      maxLength: 128
      minLength: 1
      type: string
    Timer:
      description: The current state of a timer.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/TimerName'
          - description: The name of the timer.
          title: name
        timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The expiration time for the timer.
          title: timestamp
      required:
      - name
      - timestamp
      title: Timer
      type: object
    TimerDefinition:
      description: The new setting of a timer.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/TimerName'
          - description: The name of the timer.
          title: name
        seconds:
          allOf:
          - $ref: '#/components/schemas/Seconds'
          - description: The new setting of the timer (the number of seconds before
              the timer elapses).
          title: seconds
      required:
      - name
      - seconds
      title: TimerDefinition
      type: object
    VariableName:
      maxLength: 128
      minLength: 1
      pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
      type: string
    VariableValue:
      maxLength: 1024
      minLength: 1
      type: string
    Variable:
      description: The current state of the variable.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/VariableName'
          - description: The name of the variable.
          title: name
        value:
          allOf:
          - $ref: '#/components/schemas/VariableValue'
          - description: The current value of the variable.
          title: value
      required:
      - name
      - value
      title: Variable
      type: object
    VariableDefinition:
      description: The new value of the variable.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/VariableName'
          - description: The name of the variable.
          title: name
        value:
          allOf:
          - $ref: '#/components/schemas/VariableValue'
          - description: The new value of the variable.
          title: value
      required:
      - name
      - value
      title: VariableDefinition
      type: object
    BatchAcknowledgeAlarm_request:
      properties:
        acknowledgeActionRequests:
          description: The list of acknowledge action requests. You can specify up
            to 10 requests per operation.
          items:
            $ref: '#/components/schemas/AcknowledgeAlarmActionRequest'
          minItems: 1
          title: acknowledgeActionRequests
          type: array
      required:
      - acknowledgeActionRequests
      title: BatchAcknowledgeAlarm_request
      type: object
    BatchDeleteDetector_request:
      properties:
        detectors:
          description: The list of one or more detectors to be deleted.
          items:
            $ref: '#/components/schemas/DeleteDetectorRequest'
          minItems: 1
          title: detectors
          type: array
      required:
      - detectors
      title: BatchDeleteDetector_request
      type: object
    BatchDisableAlarm_request:
      properties:
        disableActionRequests:
          description: The list of disable action requests. You can specify up to
            10 requests per operation.
          items:
            $ref: '#/components/schemas/DisableAlarmActionRequest'
          minItems: 1
          title: disableActionRequests
          type: array
      required:
      - disableActionRequests
      title: BatchDisableAlarm_request
      type: object
    BatchEnableAlarm_request:
      properties:
        enableActionRequests:
          description: The list of enable action requests. You can specify up to 10
            requests per operation.
          items:
            $ref: '#/components/schemas/EnableAlarmActionRequest'
          minItems: 1
          title: enableActionRequests
          type: array
      required:
      - enableActionRequests
      title: BatchEnableAlarm_request
      type: object
    BatchPutMessage_request:
      properties:
        messages:
          description: "The list of messages to send. Each message has the following\
            \ format: <code>'{ \"messageId\": \"string\", \"inputName\": \"string\"\
            , \"payload\": \"string\"}'</code> "
          items:
            $ref: '#/components/schemas/Message'
          minItems: 1
          title: messages
          type: array
      required:
      - messages
      title: BatchPutMessage_request
      type: object
    BatchResetAlarm_request:
      properties:
        resetActionRequests:
          description: The list of reset action requests. You can specify up to 10
            requests per operation.
          items:
            $ref: '#/components/schemas/ResetAlarmActionRequest'
          minItems: 1
          title: resetActionRequests
          type: array
      required:
      - resetActionRequests
      title: BatchResetAlarm_request
      type: object
    BatchSnoozeAlarm_request:
      properties:
        snoozeActionRequests:
          description: The list of snooze action requests. You can specify up to 10
            requests per operation.
          items:
            $ref: '#/components/schemas/SnoozeAlarmActionRequest'
          minItems: 1
          title: snoozeActionRequests
          type: array
      required:
      - snoozeActionRequests
      title: BatchSnoozeAlarm_request
      type: object
    BatchUpdateDetector_request:
      properties:
        detectors:
          description: "The list of detectors (instances) to update, along with the\
            \ values to update."
          items:
            $ref: '#/components/schemas/UpdateDetectorRequest'
          minItems: 1
          title: detectors
          type: array
      required:
      - detectors
      title: BatchUpdateDetector_request
      type: object
    Message_timestamp:
      allOf:
      - $ref: '#/components/schemas/TimestampValue'
      - description: The timestamp associated with the message.
      title: Message_timestamp
    UpdateDetectorRequest_state:
      allOf:
      - $ref: '#/components/schemas/DetectorStateDefinition'
      - description: "The new state, variable values, and timer settings of the detector\
          \ (instance)."
      title: UpdateDetectorRequest_state
    DescribeAlarmResponse_alarm:
      allOf:
      - $ref: '#/components/schemas/Alarm'
      - description: Contains information about an alarm.
      example:
        alarmModelName: ""
        severity: ""
        alarmState:
          stateName: ""
          customerAction:
            resetActionConfiguration:
              note: ""
            disableActionConfiguration:
              note: ""
            snoozeActionConfiguration:
              note: ""
              snoozeDuration: ""
            enableActionConfiguration:
              note: ""
            actionName: ""
            acknowledgeActionConfiguration:
              note: ""
          ruleEvaluation:
            simpleRuleEvaluation:
              inputPropertyValue: ""
              thresholdValue: ""
              operator: ""
          systemEvent:
            stateChangeConfiguration:
              triggerType: ""
            eventType: ""
        creationTime: ""
        keyValue: ""
        alarmModelVersion: ""
        lastUpdateTime: ""
      title: DescribeAlarmResponse_alarm
    DescribeDetectorResponse_detector:
      allOf:
      - $ref: '#/components/schemas/Detector'
      - description: Information about the detector (instance).
      example:
        creationTime: ""
        keyValue: ""
        detectorModelVersion: ""
        state:
          variables: ""
          timers: ""
          stateName: ""
        detectorModelName: ""
        lastUpdateTime: ""
      title: DescribeDetectorResponse_detector
    AlarmState_ruleEvaluation:
      allOf:
      - $ref: '#/components/schemas/RuleEvaluation'
      - description: Information needed to evaluate data.
      example:
        simpleRuleEvaluation:
          inputPropertyValue: ""
          thresholdValue: ""
          operator: ""
      title: AlarmState_ruleEvaluation
    AlarmState_customerAction:
      allOf:
      - $ref: '#/components/schemas/CustomerAction'
      - description: Contains information about the action that you can take to respond
          to the alarm.
      example:
        resetActionConfiguration:
          note: ""
        disableActionConfiguration:
          note: ""
        snoozeActionConfiguration:
          note: ""
          snoozeDuration: ""
        enableActionConfiguration:
          note: ""
        actionName: ""
        acknowledgeActionConfiguration:
          note: ""
      title: AlarmState_customerAction
    AlarmState_systemEvent:
      allOf:
      - $ref: '#/components/schemas/SystemEvent'
      - description: Contains information about alarm state changes.
      example:
        stateChangeConfiguration:
          triggerType: ""
        eventType: ""
      title: AlarmState_systemEvent
    Alarm_alarmState:
      allOf:
      - $ref: '#/components/schemas/AlarmState'
      - description: Contains information about the current state of the alarm.
      example:
        stateName: ""
        customerAction:
          resetActionConfiguration:
            note: ""
          disableActionConfiguration:
            note: ""
          snoozeActionConfiguration:
            note: ""
            snoozeDuration: ""
          enableActionConfiguration:
            note: ""
          actionName: ""
          acknowledgeActionConfiguration:
            note: ""
        ruleEvaluation:
          simpleRuleEvaluation:
            inputPropertyValue: ""
            thresholdValue: ""
            operator: ""
        systemEvent:
          stateChangeConfiguration:
            triggerType: ""
          eventType: ""
      title: Alarm_alarmState
    RuleEvaluation_simpleRuleEvaluation:
      allOf:
      - $ref: '#/components/schemas/SimpleRuleEvaluation'
      - description: Information needed to compare two values with a comparison operator.
      example:
        inputPropertyValue: ""
        thresholdValue: ""
        operator: ""
      title: RuleEvaluation_simpleRuleEvaluation
    CustomerAction_snoozeActionConfiguration:
      allOf:
      - $ref: '#/components/schemas/SnoozeActionConfiguration'
      - description: Contains the configuration information of a snooze action.
      example:
        note: ""
        snoozeDuration: ""
      title: CustomerAction_snoozeActionConfiguration
    CustomerAction_enableActionConfiguration:
      allOf:
      - $ref: '#/components/schemas/EnableActionConfiguration'
      - description: Contains the configuration information of an enable action.
      example:
        note: ""
      title: CustomerAction_enableActionConfiguration
    CustomerAction_disableActionConfiguration:
      allOf:
      - $ref: '#/components/schemas/DisableActionConfiguration'
      - description: Contains the configuration information of a disable action.
      example:
        note: ""
      title: CustomerAction_disableActionConfiguration
    CustomerAction_acknowledgeActionConfiguration:
      allOf:
      - $ref: '#/components/schemas/AcknowledgeActionConfiguration'
      - description: Contains the configuration information of an acknowledge action.
      example:
        note: ""
      title: CustomerAction_acknowledgeActionConfiguration
    CustomerAction_resetActionConfiguration:
      allOf:
      - $ref: '#/components/schemas/ResetActionConfiguration'
      - description: Contains the configuration information of a reset action.
      example:
        note: ""
      title: CustomerAction_resetActionConfiguration
    SystemEvent_stateChangeConfiguration:
      allOf:
      - $ref: '#/components/schemas/StateChangeConfiguration'
      - description: Contains the configuration information of alarm state changes.
      example:
        triggerType: ""
      title: SystemEvent_stateChangeConfiguration
    Detector_state:
      allOf:
      - $ref: '#/components/schemas/DetectorState'
      - description: The current state of the detector (instance).
      example:
        variables: ""
        timers: ""
        stateName: ""
      title: Detector_state
    DetectorSummary_state:
      allOf:
      - $ref: '#/components/schemas/DetectorStateSummary'
      - description: The current state of the detector (instance).
      title: DetectorSummary_state
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
