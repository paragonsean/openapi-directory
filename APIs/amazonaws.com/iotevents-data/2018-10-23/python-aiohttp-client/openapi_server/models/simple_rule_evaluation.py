# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.comparison_operator import ComparisonOperator
from openapi_server import util


class SimpleRuleEvaluation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, input_property_value: str=None, operator: ComparisonOperator=None, threshold_value: str=None):
        """SimpleRuleEvaluation - a model defined in OpenAPI

        :param input_property_value: The input_property_value of this SimpleRuleEvaluation.
        :param operator: The operator of this SimpleRuleEvaluation.
        :param threshold_value: The threshold_value of this SimpleRuleEvaluation.
        """
        self.openapi_types = {
            'input_property_value': str,
            'operator': ComparisonOperator,
            'threshold_value': str
        }

        self.attribute_map = {
            'input_property_value': 'inputPropertyValue',
            'operator': 'operator',
            'threshold_value': 'thresholdValue'
        }

        self._input_property_value = input_property_value
        self._operator = operator
        self._threshold_value = threshold_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SimpleRuleEvaluation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SimpleRuleEvaluation of this SimpleRuleEvaluation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def input_property_value(self):
        """Gets the input_property_value of this SimpleRuleEvaluation.


        :return: The input_property_value of this SimpleRuleEvaluation.
        :rtype: str
        """
        return self._input_property_value

    @input_property_value.setter
    def input_property_value(self, input_property_value):
        """Sets the input_property_value of this SimpleRuleEvaluation.


        :param input_property_value: The input_property_value of this SimpleRuleEvaluation.
        :type input_property_value: str
        """

        self._input_property_value = input_property_value

    @property
    def operator(self):
        """Gets the operator of this SimpleRuleEvaluation.


        :return: The operator of this SimpleRuleEvaluation.
        :rtype: ComparisonOperator
        """
        return self._operator

    @operator.setter
    def operator(self, operator):
        """Sets the operator of this SimpleRuleEvaluation.


        :param operator: The operator of this SimpleRuleEvaluation.
        :type operator: ComparisonOperator
        """

        self._operator = operator

    @property
    def threshold_value(self):
        """Gets the threshold_value of this SimpleRuleEvaluation.


        :return: The threshold_value of this SimpleRuleEvaluation.
        :rtype: str
        """
        return self._threshold_value

    @threshold_value.setter
    def threshold_value(self, threshold_value):
        """Sets the threshold_value of this SimpleRuleEvaluation.


        :param threshold_value: The threshold_value of this SimpleRuleEvaluation.
        :type threshold_value: str
        """

        self._threshold_value = threshold_value
