# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_type import EventType
from openapi_server.models.system_event_state_change_configuration import SystemEventStateChangeConfiguration
from openapi_server import util


class AlarmStateSystemEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_type: EventType=None, state_change_configuration: SystemEventStateChangeConfiguration=None):
        """AlarmStateSystemEvent - a model defined in OpenAPI

        :param event_type: The event_type of this AlarmStateSystemEvent.
        :param state_change_configuration: The state_change_configuration of this AlarmStateSystemEvent.
        """
        self.openapi_types = {
            'event_type': EventType,
            'state_change_configuration': SystemEventStateChangeConfiguration
        }

        self.attribute_map = {
            'event_type': 'eventType',
            'state_change_configuration': 'stateChangeConfiguration'
        }

        self._event_type = event_type
        self._state_change_configuration = state_change_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlarmStateSystemEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlarmState_systemEvent of this AlarmStateSystemEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_type(self):
        """Gets the event_type of this AlarmStateSystemEvent.


        :return: The event_type of this AlarmStateSystemEvent.
        :rtype: EventType
        """
        return self._event_type

    @event_type.setter
    def event_type(self, event_type):
        """Sets the event_type of this AlarmStateSystemEvent.


        :param event_type: The event_type of this AlarmStateSystemEvent.
        :type event_type: EventType
        """

        self._event_type = event_type

    @property
    def state_change_configuration(self):
        """Gets the state_change_configuration of this AlarmStateSystemEvent.


        :return: The state_change_configuration of this AlarmStateSystemEvent.
        :rtype: SystemEventStateChangeConfiguration
        """
        return self._state_change_configuration

    @state_change_configuration.setter
    def state_change_configuration(self, state_change_configuration):
        """Sets the state_change_configuration of this AlarmStateSystemEvent.


        :param state_change_configuration: The state_change_configuration of this AlarmStateSystemEvent.
        :type state_change_configuration: SystemEventStateChangeConfiguration
        """

        self._state_change_configuration = state_change_configuration
