# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DetectorSummaryState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, state_name: str=None):
        """DetectorSummaryState - a model defined in OpenAPI

        :param state_name: The state_name of this DetectorSummaryState.
        """
        self.openapi_types = {
            'state_name': str
        }

        self.attribute_map = {
            'state_name': 'stateName'
        }

        self._state_name = state_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DetectorSummaryState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DetectorSummary_state of this DetectorSummaryState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def state_name(self):
        """Gets the state_name of this DetectorSummaryState.


        :return: The state_name of this DetectorSummaryState.
        :rtype: str
        """
        return self._state_name

    @state_name.setter
    def state_name(self, state_name):
        """Sets the state_name of this DetectorSummaryState.


        :param state_name: The state_name of this DetectorSummaryState.
        :type state_name: str
        """

        self._state_name = state_name
