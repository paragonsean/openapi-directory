# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Timer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, timestamp: datetime=None):
        """Timer - a model defined in OpenAPI

        :param name: The name of this Timer.
        :param timestamp: The timestamp of this Timer.
        """
        self.openapi_types = {
            'name': str,
            'timestamp': datetime
        }

        self.attribute_map = {
            'name': 'name',
            'timestamp': 'timestamp'
        }

        self._name = name
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Timer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Timer of this Timer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Timer.


        :return: The name of this Timer.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Timer.


        :param name: The name of this Timer.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def timestamp(self):
        """Gets the timestamp of this Timer.


        :return: The timestamp of this Timer.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this Timer.


        :param timestamp: The timestamp of this Timer.
        :type timestamp: datetime
        """
        if timestamp is None:
            raise ValueError("Invalid value for `timestamp`, must not be `None`")

        self._timestamp = timestamp
