# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnableAlarmActionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, request_id: str=None, alarm_model_name: str=None, key_value: str=None, note: str=None):
        """EnableAlarmActionRequest - a model defined in OpenAPI

        :param request_id: The request_id of this EnableAlarmActionRequest.
        :param alarm_model_name: The alarm_model_name of this EnableAlarmActionRequest.
        :param key_value: The key_value of this EnableAlarmActionRequest.
        :param note: The note of this EnableAlarmActionRequest.
        """
        self.openapi_types = {
            'request_id': str,
            'alarm_model_name': str,
            'key_value': str,
            'note': str
        }

        self.attribute_map = {
            'request_id': 'requestId',
            'alarm_model_name': 'alarmModelName',
            'key_value': 'keyValue',
            'note': 'note'
        }

        self._request_id = request_id
        self._alarm_model_name = alarm_model_name
        self._key_value = key_value
        self._note = note

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnableAlarmActionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnableAlarmActionRequest of this EnableAlarmActionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request_id(self):
        """Gets the request_id of this EnableAlarmActionRequest.


        :return: The request_id of this EnableAlarmActionRequest.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this EnableAlarmActionRequest.


        :param request_id: The request_id of this EnableAlarmActionRequest.
        :type request_id: str
        """
        if request_id is None:
            raise ValueError("Invalid value for `request_id`, must not be `None`")

        self._request_id = request_id

    @property
    def alarm_model_name(self):
        """Gets the alarm_model_name of this EnableAlarmActionRequest.


        :return: The alarm_model_name of this EnableAlarmActionRequest.
        :rtype: str
        """
        return self._alarm_model_name

    @alarm_model_name.setter
    def alarm_model_name(self, alarm_model_name):
        """Sets the alarm_model_name of this EnableAlarmActionRequest.


        :param alarm_model_name: The alarm_model_name of this EnableAlarmActionRequest.
        :type alarm_model_name: str
        """
        if alarm_model_name is None:
            raise ValueError("Invalid value for `alarm_model_name`, must not be `None`")

        self._alarm_model_name = alarm_model_name

    @property
    def key_value(self):
        """Gets the key_value of this EnableAlarmActionRequest.


        :return: The key_value of this EnableAlarmActionRequest.
        :rtype: str
        """
        return self._key_value

    @key_value.setter
    def key_value(self, key_value):
        """Sets the key_value of this EnableAlarmActionRequest.


        :param key_value: The key_value of this EnableAlarmActionRequest.
        :type key_value: str
        """

        self._key_value = key_value

    @property
    def note(self):
        """Gets the note of this EnableAlarmActionRequest.


        :return: The note of this EnableAlarmActionRequest.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this EnableAlarmActionRequest.


        :param note: The note of this EnableAlarmActionRequest.
        :type note: str
        """

        self._note = note
