# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enable_alarm_action_request import EnableAlarmActionRequest
from openapi_server import util


class BatchEnableAlarmRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_action_requests: List[EnableAlarmActionRequest]=None):
        """BatchEnableAlarmRequest - a model defined in OpenAPI

        :param enable_action_requests: The enable_action_requests of this BatchEnableAlarmRequest.
        """
        self.openapi_types = {
            'enable_action_requests': List[EnableAlarmActionRequest]
        }

        self.attribute_map = {
            'enable_action_requests': 'enableActionRequests'
        }

        self._enable_action_requests = enable_action_requests

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchEnableAlarmRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchEnableAlarm_request of this BatchEnableAlarmRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_action_requests(self):
        """Gets the enable_action_requests of this BatchEnableAlarmRequest.

        The list of enable action requests. You can specify up to 10 requests per operation.

        :return: The enable_action_requests of this BatchEnableAlarmRequest.
        :rtype: List[EnableAlarmActionRequest]
        """
        return self._enable_action_requests

    @enable_action_requests.setter
    def enable_action_requests(self, enable_action_requests):
        """Sets the enable_action_requests of this BatchEnableAlarmRequest.

        The list of enable action requests. You can specify up to 10 requests per operation.

        :param enable_action_requests: The enable_action_requests of this BatchEnableAlarmRequest.
        :type enable_action_requests: List[EnableAlarmActionRequest]
        """
        if enable_action_requests is None:
            raise ValueError("Invalid value for `enable_action_requests`, must not be `None`")
        if enable_action_requests is not None and len(enable_action_requests) < 1:
            raise ValueError("Invalid value for `enable_action_requests`, number of items must be greater than or equal to `1`")

        self._enable_action_requests = enable_action_requests
