# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_detector_response_detector import DescribeDetectorResponseDetector
from openapi_server import util


class DescribeDetectorResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detector: DescribeDetectorResponseDetector=None):
        """DescribeDetectorResponse - a model defined in OpenAPI

        :param detector: The detector of this DescribeDetectorResponse.
        """
        self.openapi_types = {
            'detector': DescribeDetectorResponseDetector
        }

        self.attribute_map = {
            'detector': 'detector'
        }

        self._detector = detector

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeDetectorResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeDetectorResponse of this DescribeDetectorResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detector(self):
        """Gets the detector of this DescribeDetectorResponse.


        :return: The detector of this DescribeDetectorResponse.
        :rtype: DescribeDetectorResponseDetector
        """
        return self._detector

    @detector.setter
    def detector(self, detector):
        """Sets the detector of this DescribeDetectorResponse.


        :param detector: The detector of this DescribeDetectorResponse.
        :type detector: DescribeDetectorResponseDetector
        """

        self._detector = detector
