# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.acknowledge_alarm_action_request import AcknowledgeAlarmActionRequest
from openapi_server import util


class BatchAcknowledgeAlarmRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acknowledge_action_requests: List[AcknowledgeAlarmActionRequest]=None):
        """BatchAcknowledgeAlarmRequest - a model defined in OpenAPI

        :param acknowledge_action_requests: The acknowledge_action_requests of this BatchAcknowledgeAlarmRequest.
        """
        self.openapi_types = {
            'acknowledge_action_requests': List[AcknowledgeAlarmActionRequest]
        }

        self.attribute_map = {
            'acknowledge_action_requests': 'acknowledgeActionRequests'
        }

        self._acknowledge_action_requests = acknowledge_action_requests

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchAcknowledgeAlarmRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchAcknowledgeAlarm_request of this BatchAcknowledgeAlarmRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acknowledge_action_requests(self):
        """Gets the acknowledge_action_requests of this BatchAcknowledgeAlarmRequest.

        The list of acknowledge action requests. You can specify up to 10 requests per operation.

        :return: The acknowledge_action_requests of this BatchAcknowledgeAlarmRequest.
        :rtype: List[AcknowledgeAlarmActionRequest]
        """
        return self._acknowledge_action_requests

    @acknowledge_action_requests.setter
    def acknowledge_action_requests(self, acknowledge_action_requests):
        """Sets the acknowledge_action_requests of this BatchAcknowledgeAlarmRequest.

        The list of acknowledge action requests. You can specify up to 10 requests per operation.

        :param acknowledge_action_requests: The acknowledge_action_requests of this BatchAcknowledgeAlarmRequest.
        :type acknowledge_action_requests: List[AcknowledgeAlarmActionRequest]
        """
        if acknowledge_action_requests is None:
            raise ValueError("Invalid value for `acknowledge_action_requests`, must not be `None`")
        if acknowledge_action_requests is not None and len(acknowledge_action_requests) < 1:
            raise ValueError("Invalid value for `acknowledge_action_requests`, number of items must be greater than or equal to `1`")

        self._acknowledge_action_requests = acknowledge_action_requests
