# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.customer_action_acknowledge_action_configuration import CustomerActionAcknowledgeActionConfiguration
from openapi_server.models.customer_action_disable_action_configuration import CustomerActionDisableActionConfiguration
from openapi_server.models.customer_action_enable_action_configuration import CustomerActionEnableActionConfiguration
from openapi_server.models.customer_action_name import CustomerActionName
from openapi_server.models.customer_action_reset_action_configuration import CustomerActionResetActionConfiguration
from openapi_server.models.customer_action_snooze_action_configuration import CustomerActionSnoozeActionConfiguration
from openapi_server import util


class CustomerAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_name: CustomerActionName=None, snooze_action_configuration: CustomerActionSnoozeActionConfiguration=None, enable_action_configuration: CustomerActionEnableActionConfiguration=None, disable_action_configuration: CustomerActionDisableActionConfiguration=None, acknowledge_action_configuration: CustomerActionAcknowledgeActionConfiguration=None, reset_action_configuration: CustomerActionResetActionConfiguration=None):
        """CustomerAction - a model defined in OpenAPI

        :param action_name: The action_name of this CustomerAction.
        :param snooze_action_configuration: The snooze_action_configuration of this CustomerAction.
        :param enable_action_configuration: The enable_action_configuration of this CustomerAction.
        :param disable_action_configuration: The disable_action_configuration of this CustomerAction.
        :param acknowledge_action_configuration: The acknowledge_action_configuration of this CustomerAction.
        :param reset_action_configuration: The reset_action_configuration of this CustomerAction.
        """
        self.openapi_types = {
            'action_name': CustomerActionName,
            'snooze_action_configuration': CustomerActionSnoozeActionConfiguration,
            'enable_action_configuration': CustomerActionEnableActionConfiguration,
            'disable_action_configuration': CustomerActionDisableActionConfiguration,
            'acknowledge_action_configuration': CustomerActionAcknowledgeActionConfiguration,
            'reset_action_configuration': CustomerActionResetActionConfiguration
        }

        self.attribute_map = {
            'action_name': 'actionName',
            'snooze_action_configuration': 'snoozeActionConfiguration',
            'enable_action_configuration': 'enableActionConfiguration',
            'disable_action_configuration': 'disableActionConfiguration',
            'acknowledge_action_configuration': 'acknowledgeActionConfiguration',
            'reset_action_configuration': 'resetActionConfiguration'
        }

        self._action_name = action_name
        self._snooze_action_configuration = snooze_action_configuration
        self._enable_action_configuration = enable_action_configuration
        self._disable_action_configuration = disable_action_configuration
        self._acknowledge_action_configuration = acknowledge_action_configuration
        self._reset_action_configuration = reset_action_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomerAction of this CustomerAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_name(self):
        """Gets the action_name of this CustomerAction.


        :return: The action_name of this CustomerAction.
        :rtype: CustomerActionName
        """
        return self._action_name

    @action_name.setter
    def action_name(self, action_name):
        """Sets the action_name of this CustomerAction.


        :param action_name: The action_name of this CustomerAction.
        :type action_name: CustomerActionName
        """

        self._action_name = action_name

    @property
    def snooze_action_configuration(self):
        """Gets the snooze_action_configuration of this CustomerAction.


        :return: The snooze_action_configuration of this CustomerAction.
        :rtype: CustomerActionSnoozeActionConfiguration
        """
        return self._snooze_action_configuration

    @snooze_action_configuration.setter
    def snooze_action_configuration(self, snooze_action_configuration):
        """Sets the snooze_action_configuration of this CustomerAction.


        :param snooze_action_configuration: The snooze_action_configuration of this CustomerAction.
        :type snooze_action_configuration: CustomerActionSnoozeActionConfiguration
        """

        self._snooze_action_configuration = snooze_action_configuration

    @property
    def enable_action_configuration(self):
        """Gets the enable_action_configuration of this CustomerAction.


        :return: The enable_action_configuration of this CustomerAction.
        :rtype: CustomerActionEnableActionConfiguration
        """
        return self._enable_action_configuration

    @enable_action_configuration.setter
    def enable_action_configuration(self, enable_action_configuration):
        """Sets the enable_action_configuration of this CustomerAction.


        :param enable_action_configuration: The enable_action_configuration of this CustomerAction.
        :type enable_action_configuration: CustomerActionEnableActionConfiguration
        """

        self._enable_action_configuration = enable_action_configuration

    @property
    def disable_action_configuration(self):
        """Gets the disable_action_configuration of this CustomerAction.


        :return: The disable_action_configuration of this CustomerAction.
        :rtype: CustomerActionDisableActionConfiguration
        """
        return self._disable_action_configuration

    @disable_action_configuration.setter
    def disable_action_configuration(self, disable_action_configuration):
        """Sets the disable_action_configuration of this CustomerAction.


        :param disable_action_configuration: The disable_action_configuration of this CustomerAction.
        :type disable_action_configuration: CustomerActionDisableActionConfiguration
        """

        self._disable_action_configuration = disable_action_configuration

    @property
    def acknowledge_action_configuration(self):
        """Gets the acknowledge_action_configuration of this CustomerAction.


        :return: The acknowledge_action_configuration of this CustomerAction.
        :rtype: CustomerActionAcknowledgeActionConfiguration
        """
        return self._acknowledge_action_configuration

    @acknowledge_action_configuration.setter
    def acknowledge_action_configuration(self, acknowledge_action_configuration):
        """Sets the acknowledge_action_configuration of this CustomerAction.


        :param acknowledge_action_configuration: The acknowledge_action_configuration of this CustomerAction.
        :type acknowledge_action_configuration: CustomerActionAcknowledgeActionConfiguration
        """

        self._acknowledge_action_configuration = acknowledge_action_configuration

    @property
    def reset_action_configuration(self):
        """Gets the reset_action_configuration of this CustomerAction.


        :return: The reset_action_configuration of this CustomerAction.
        :rtype: CustomerActionResetActionConfiguration
        """
        return self._reset_action_configuration

    @reset_action_configuration.setter
    def reset_action_configuration(self, reset_action_configuration):
        """Sets the reset_action_configuration of this CustomerAction.


        :param reset_action_configuration: The reset_action_configuration of this CustomerAction.
        :type reset_action_configuration: CustomerActionResetActionConfiguration
        """

        self._reset_action_configuration = reset_action_configuration
