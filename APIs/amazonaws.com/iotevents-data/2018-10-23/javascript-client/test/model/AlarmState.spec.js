/**
 * AWS IoT Events Data
 * <p>IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use IoT Events Data API commands to send inputs to detectors, list detectors, and view or update a detector's status.</p> <p> For more information, see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/what-is-iotevents.html\">What is IoT Events?</a> in the <i>IoT Events Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-10-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsIoTEventsData);
  }
}(this, function(expect, AwsIoTEventsData) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsIoTEventsData.AlarmState();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AlarmState', function() {
    it('should create an instance of AlarmState', function() {
      // uncomment below and update the code to test AlarmState
      //var instance = new AwsIoTEventsData.AlarmState();
      //expect(instance).to.be.a(AwsIoTEventsData.AlarmState);
    });

    it('should have the property stateName (base name: "stateName")', function() {
      // uncomment below and update the code to test the property stateName
      //var instance = new AwsIoTEventsData.AlarmState();
      //expect(instance).to.be();
    });

    it('should have the property ruleEvaluation (base name: "ruleEvaluation")', function() {
      // uncomment below and update the code to test the property ruleEvaluation
      //var instance = new AwsIoTEventsData.AlarmState();
      //expect(instance).to.be();
    });

    it('should have the property customerAction (base name: "customerAction")', function() {
      // uncomment below and update the code to test the property customerAction
      //var instance = new AwsIoTEventsData.AlarmState();
      //expect(instance).to.be();
    });

    it('should have the property systemEvent (base name: "systemEvent")', function() {
      // uncomment below and update the code to test the property systemEvent
      //var instance = new AwsIoTEventsData.AlarmState();
      //expect(instance).to.be();
    });

  });

}));
