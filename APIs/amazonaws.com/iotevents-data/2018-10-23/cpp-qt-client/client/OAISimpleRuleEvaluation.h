/**
 * AWS IoT Events Data
 * <p>IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use IoT Events Data API commands to send inputs to detectors, list detectors, and view or update a detector's status.</p> <p> For more information, see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/what-is-iotevents.html\">What is IoT Events?</a> in the <i>IoT Events Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-10-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISimpleRuleEvaluation.h
 *
 * Information needed to compare two values with a comparison operator.
 */

#ifndef OAISimpleRuleEvaluation_H
#define OAISimpleRuleEvaluation_H

#include <QJsonObject>

#include "OAIComparisonOperator.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISimpleRuleEvaluation : public OAIObject {
public:
    OAISimpleRuleEvaluation();
    OAISimpleRuleEvaluation(QString json);
    ~OAISimpleRuleEvaluation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInputPropertyValue() const;
    void setInputPropertyValue(const QString &input_property_value);
    bool is_input_property_value_Set() const;
    bool is_input_property_value_Valid() const;

    OAIComparisonOperator getROperator() const;
    void setROperator(const OAIComparisonOperator &r_operator);
    bool is_r_operator_Set() const;
    bool is_r_operator_Valid() const;

    QString getThresholdValue() const;
    void setThresholdValue(const QString &threshold_value);
    bool is_threshold_value_Set() const;
    bool is_threshold_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_input_property_value;
    bool m_input_property_value_isSet;
    bool m_input_property_value_isValid;

    OAIComparisonOperator m_r_operator;
    bool m_r_operator_isSet;
    bool m_r_operator_isValid;

    QString m_threshold_value;
    bool m_threshold_value_isSet;
    bool m_threshold_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISimpleRuleEvaluation)

#endif // OAISimpleRuleEvaluation_H
