/**
 * AWS IoT Events Data
 * <p>IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use IoT Events Data API commands to send inputs to detectors, list detectors, and view or update a detector's status.</p> <p> For more information, see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/what-is-iotevents.html\">What is IoT Events?</a> in the <i>IoT Events Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-10-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITriggerType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITriggerType::OAITriggerType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITriggerType::OAITriggerType() {
    this->initializeModel();
}

OAITriggerType::~OAITriggerType() {}

void OAITriggerType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITriggerType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITriggerType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SNOOZE_TIMEOUT", Qt::CaseInsensitive) == 0) {
        m_value = eOAITriggerType::SNOOZE_TIMEOUT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITriggerType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITriggerType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITriggerType::SNOOZE_TIMEOUT:
            val = "SNOOZE_TIMEOUT";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITriggerType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITriggerType::eOAITriggerType OAITriggerType::getValue() const {
    return m_value;
}

void OAITriggerType::setValue(const OAITriggerType::eOAITriggerType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITriggerType::isSet() const {
    
    return m_value_isSet;
}

bool OAITriggerType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
