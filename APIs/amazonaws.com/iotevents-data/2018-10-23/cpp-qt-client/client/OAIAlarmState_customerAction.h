/**
 * AWS IoT Events Data
 * <p>IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use IoT Events Data API commands to send inputs to detectors, list detectors, and view or update a detector's status.</p> <p> For more information, see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/what-is-iotevents.html\">What is IoT Events?</a> in the <i>IoT Events Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-10-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAlarmState_customerAction.h
 *
 * 
 */

#ifndef OAIAlarmState_customerAction_H
#define OAIAlarmState_customerAction_H

#include <QJsonObject>

#include "OAICustomerActionName.h"
#include "OAICustomerAction_acknowledgeActionConfiguration.h"
#include "OAICustomerAction_disableActionConfiguration.h"
#include "OAICustomerAction_enableActionConfiguration.h"
#include "OAICustomerAction_resetActionConfiguration.h"
#include "OAICustomerAction_snoozeActionConfiguration.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICustomerAction_snoozeActionConfiguration;
class OAICustomerAction_enableActionConfiguration;
class OAICustomerAction_disableActionConfiguration;
class OAICustomerAction_acknowledgeActionConfiguration;
class OAICustomerAction_resetActionConfiguration;

class OAIAlarmState_customerAction : public OAIObject {
public:
    OAIAlarmState_customerAction();
    OAIAlarmState_customerAction(QString json);
    ~OAIAlarmState_customerAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICustomerActionName getActionName() const;
    void setActionName(const OAICustomerActionName &action_name);
    bool is_action_name_Set() const;
    bool is_action_name_Valid() const;

    OAICustomerAction_snoozeActionConfiguration getSnoozeActionConfiguration() const;
    void setSnoozeActionConfiguration(const OAICustomerAction_snoozeActionConfiguration &snooze_action_configuration);
    bool is_snooze_action_configuration_Set() const;
    bool is_snooze_action_configuration_Valid() const;

    OAICustomerAction_enableActionConfiguration getEnableActionConfiguration() const;
    void setEnableActionConfiguration(const OAICustomerAction_enableActionConfiguration &enable_action_configuration);
    bool is_enable_action_configuration_Set() const;
    bool is_enable_action_configuration_Valid() const;

    OAICustomerAction_disableActionConfiguration getDisableActionConfiguration() const;
    void setDisableActionConfiguration(const OAICustomerAction_disableActionConfiguration &disable_action_configuration);
    bool is_disable_action_configuration_Set() const;
    bool is_disable_action_configuration_Valid() const;

    OAICustomerAction_acknowledgeActionConfiguration getAcknowledgeActionConfiguration() const;
    void setAcknowledgeActionConfiguration(const OAICustomerAction_acknowledgeActionConfiguration &acknowledge_action_configuration);
    bool is_acknowledge_action_configuration_Set() const;
    bool is_acknowledge_action_configuration_Valid() const;

    OAICustomerAction_resetActionConfiguration getResetActionConfiguration() const;
    void setResetActionConfiguration(const OAICustomerAction_resetActionConfiguration &reset_action_configuration);
    bool is_reset_action_configuration_Set() const;
    bool is_reset_action_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICustomerActionName m_action_name;
    bool m_action_name_isSet;
    bool m_action_name_isValid;

    OAICustomerAction_snoozeActionConfiguration m_snooze_action_configuration;
    bool m_snooze_action_configuration_isSet;
    bool m_snooze_action_configuration_isValid;

    OAICustomerAction_enableActionConfiguration m_enable_action_configuration;
    bool m_enable_action_configuration_isSet;
    bool m_enable_action_configuration_isValid;

    OAICustomerAction_disableActionConfiguration m_disable_action_configuration;
    bool m_disable_action_configuration_isSet;
    bool m_disable_action_configuration_isValid;

    OAICustomerAction_acknowledgeActionConfiguration m_acknowledge_action_configuration;
    bool m_acknowledge_action_configuration_isSet;
    bool m_acknowledge_action_configuration_isValid;

    OAICustomerAction_resetActionConfiguration m_reset_action_configuration;
    bool m_reset_action_configuration_isSet;
    bool m_reset_action_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAlarmState_customerAction)

#endif // OAIAlarmState_customerAction_H
