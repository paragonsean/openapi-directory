/**
 * AWS IoT Events Data
 * <p>IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use IoT Events Data API commands to send inputs to detectors, list detectors, and view or update a detector's status.</p> <p> For more information, see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/what-is-iotevents.html\">What is IoT Events?</a> in the <i>IoT Events Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-10-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISnoozeAlarmActionRequest.h
 *
 * Information needed to snooze the alarm.
 */

#ifndef OAISnoozeAlarmActionRequest_H
#define OAISnoozeAlarmActionRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISnoozeAlarmActionRequest : public OAIObject {
public:
    OAISnoozeAlarmActionRequest();
    OAISnoozeAlarmActionRequest(QString json);
    ~OAISnoozeAlarmActionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    QString getAlarmModelName() const;
    void setAlarmModelName(const QString &alarm_model_name);
    bool is_alarm_model_name_Set() const;
    bool is_alarm_model_name_Valid() const;

    QString getKeyValue() const;
    void setKeyValue(const QString &key_value);
    bool is_key_value_Set() const;
    bool is_key_value_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    qint32 getSnoozeDuration() const;
    void setSnoozeDuration(const qint32 &snooze_duration);
    bool is_snooze_duration_Set() const;
    bool is_snooze_duration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    QString m_alarm_model_name;
    bool m_alarm_model_name_isSet;
    bool m_alarm_model_name_isValid;

    QString m_key_value;
    bool m_key_value_isSet;
    bool m_key_value_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    qint32 m_snooze_duration;
    bool m_snooze_duration_isSet;
    bool m_snooze_duration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISnoozeAlarmActionRequest)

#endif // OAISnoozeAlarmActionRequest_H
