/**
 * AWS IoT Events Data
 * <p>IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use IoT Events Data API commands to send inputs to detectors, list detectors, and view or update a detector's status.</p> <p> For more information, see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/what-is-iotevents.html\">What is IoT Events?</a> in the <i>IoT Events Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-10-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateDetectorRequest.h
 *
 * Information used to update the detector (instance).
 */

#ifndef OAIUpdateDetectorRequest_H
#define OAIUpdateDetectorRequest_H

#include <QJsonObject>

#include "OAIUpdateDetectorRequest_state.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateDetectorRequest_state;

class OAIUpdateDetectorRequest : public OAIObject {
public:
    OAIUpdateDetectorRequest();
    OAIUpdateDetectorRequest(QString json);
    ~OAIUpdateDetectorRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMessageId() const;
    void setMessageId(const QString &message_id);
    bool is_message_id_Set() const;
    bool is_message_id_Valid() const;

    QString getDetectorModelName() const;
    void setDetectorModelName(const QString &detector_model_name);
    bool is_detector_model_name_Set() const;
    bool is_detector_model_name_Valid() const;

    QString getKeyValue() const;
    void setKeyValue(const QString &key_value);
    bool is_key_value_Set() const;
    bool is_key_value_Valid() const;

    OAIUpdateDetectorRequest_state getState() const;
    void setState(const OAIUpdateDetectorRequest_state &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_message_id;
    bool m_message_id_isSet;
    bool m_message_id_isValid;

    QString m_detector_model_name;
    bool m_detector_model_name_isSet;
    bool m_detector_model_name_isValid;

    QString m_key_value;
    bool m_key_value_isSet;
    bool m_key_value_isValid;

    OAIUpdateDetectorRequest_state m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateDetectorRequest)

#endif // OAIUpdateDetectorRequest_H
