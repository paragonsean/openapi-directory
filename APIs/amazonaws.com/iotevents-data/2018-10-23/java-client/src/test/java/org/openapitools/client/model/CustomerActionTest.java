/*
 * AWS IoT Events Data
 * <p>IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use IoT Events Data API commands to send inputs to detectors, list detectors, and view or update a detector's status.</p> <p> For more information, see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/what-is-iotevents.html\">What is IoT Events?</a> in the <i>IoT Events Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-10-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CustomerActionAcknowledgeActionConfiguration;
import org.openapitools.client.model.CustomerActionDisableActionConfiguration;
import org.openapitools.client.model.CustomerActionEnableActionConfiguration;
import org.openapitools.client.model.CustomerActionName;
import org.openapitools.client.model.CustomerActionResetActionConfiguration;
import org.openapitools.client.model.CustomerActionSnoozeActionConfiguration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CustomerAction
 */
public class CustomerActionTest {
    private final CustomerAction model = new CustomerAction();

    /**
     * Model tests for CustomerAction
     */
    @Test
    public void testCustomerAction() {
        // TODO: test CustomerAction
    }

    /**
     * Test the property 'actionName'
     */
    @Test
    public void actionNameTest() {
        // TODO: test actionName
    }

    /**
     * Test the property 'snoozeActionConfiguration'
     */
    @Test
    public void snoozeActionConfigurationTest() {
        // TODO: test snoozeActionConfiguration
    }

    /**
     * Test the property 'enableActionConfiguration'
     */
    @Test
    public void enableActionConfigurationTest() {
        // TODO: test enableActionConfiguration
    }

    /**
     * Test the property 'disableActionConfiguration'
     */
    @Test
    public void disableActionConfigurationTest() {
        // TODO: test disableActionConfiguration
    }

    /**
     * Test the property 'acknowledgeActionConfiguration'
     */
    @Test
    public void acknowledgeActionConfigurationTest() {
        // TODO: test acknowledgeActionConfiguration
    }

    /**
     * Test the property 'resetActionConfiguration'
     */
    @Test
    public void resetActionConfigurationTest() {
        // TODO: test resetActionConfiguration
    }

}
