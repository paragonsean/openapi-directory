/*
 * AWS IoT Events Data
 * <p>IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use IoT Events Data API commands to send inputs to detectors, list detectors, and view or update a detector's status.</p> <p> For more information, see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/what-is-iotevents.html\">What is IoT Events?</a> in the <i>IoT Events Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-10-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DisableAlarmActionRequest;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BatchDisableAlarmRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:38.480686-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BatchDisableAlarmRequest {
  public static final String SERIALIZED_NAME_DISABLE_ACTION_REQUESTS = "disableActionRequests";
  @SerializedName(SERIALIZED_NAME_DISABLE_ACTION_REQUESTS)
  private List<DisableAlarmActionRequest> disableActionRequests = new ArrayList<>();

  public BatchDisableAlarmRequest() {
  }

  public BatchDisableAlarmRequest disableActionRequests(List<DisableAlarmActionRequest> disableActionRequests) {
    this.disableActionRequests = disableActionRequests;
    return this;
  }

  public BatchDisableAlarmRequest addDisableActionRequestsItem(DisableAlarmActionRequest disableActionRequestsItem) {
    if (this.disableActionRequests == null) {
      this.disableActionRequests = new ArrayList<>();
    }
    this.disableActionRequests.add(disableActionRequestsItem);
    return this;
  }

  /**
   * The list of disable action requests. You can specify up to 10 requests per operation.
   * @return disableActionRequests
   */
  @javax.annotation.Nonnull
  public List<DisableAlarmActionRequest> getDisableActionRequests() {
    return disableActionRequests;
  }

  public void setDisableActionRequests(List<DisableAlarmActionRequest> disableActionRequests) {
    this.disableActionRequests = disableActionRequests;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchDisableAlarmRequest batchDisableAlarmRequest = (BatchDisableAlarmRequest) o;
    return Objects.equals(this.disableActionRequests, batchDisableAlarmRequest.disableActionRequests);
  }

  @Override
  public int hashCode() {
    return Objects.hash(disableActionRequests);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchDisableAlarmRequest {\n");
    sb.append("    disableActionRequests: ").append(toIndentedString(disableActionRequests)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("disableActionRequests");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("disableActionRequests");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BatchDisableAlarmRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BatchDisableAlarmRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BatchDisableAlarmRequest is not found in the empty JSON string", BatchDisableAlarmRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BatchDisableAlarmRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BatchDisableAlarmRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BatchDisableAlarmRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the json data is an array
      if (!jsonObj.get("disableActionRequests").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `disableActionRequests` to be an array in the JSON string but got `%s`", jsonObj.get("disableActionRequests").toString()));
      }

      JsonArray jsonArraydisableActionRequests = jsonObj.getAsJsonArray("disableActionRequests");
      // validate the required field `disableActionRequests` (array)
      for (int i = 0; i < jsonArraydisableActionRequests.size(); i++) {
        DisableAlarmActionRequest.validateJsonElement(jsonArraydisableActionRequests.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BatchDisableAlarmRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BatchDisableAlarmRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BatchDisableAlarmRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BatchDisableAlarmRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<BatchDisableAlarmRequest>() {
           @Override
           public void write(JsonWriter out, BatchDisableAlarmRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BatchDisableAlarmRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BatchDisableAlarmRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BatchDisableAlarmRequest
   * @throws IOException if the JSON string is invalid with respect to BatchDisableAlarmRequest
   */
  public static BatchDisableAlarmRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BatchDisableAlarmRequest.class);
  }

  /**
   * Convert an instance of BatchDisableAlarmRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

