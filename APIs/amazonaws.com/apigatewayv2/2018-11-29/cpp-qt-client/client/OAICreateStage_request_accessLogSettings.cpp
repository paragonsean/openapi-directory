/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateStage_request_accessLogSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateStage_request_accessLogSettings::OAICreateStage_request_accessLogSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateStage_request_accessLogSettings::OAICreateStage_request_accessLogSettings() {
    this->initializeModel();
}

OAICreateStage_request_accessLogSettings::~OAICreateStage_request_accessLogSettings() {}

void OAICreateStage_request_accessLogSettings::initializeModel() {

    m_destination_arn_isSet = false;
    m_destination_arn_isValid = false;

    m_format_isSet = false;
    m_format_isValid = false;
}

void OAICreateStage_request_accessLogSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateStage_request_accessLogSettings::fromJsonObject(QJsonObject json) {

    m_destination_arn_isValid = ::OpenAPI::fromJsonValue(m_destination_arn, json[QString("DestinationArn")]);
    m_destination_arn_isSet = !json[QString("DestinationArn")].isNull() && m_destination_arn_isValid;

    m_format_isValid = ::OpenAPI::fromJsonValue(m_format, json[QString("Format")]);
    m_format_isSet = !json[QString("Format")].isNull() && m_format_isValid;
}

QString OAICreateStage_request_accessLogSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateStage_request_accessLogSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_destination_arn_isSet) {
        obj.insert(QString("DestinationArn"), ::OpenAPI::toJsonValue(m_destination_arn));
    }
    if (m_format_isSet) {
        obj.insert(QString("Format"), ::OpenAPI::toJsonValue(m_format));
    }
    return obj;
}

QString OAICreateStage_request_accessLogSettings::getDestinationArn() const {
    return m_destination_arn;
}
void OAICreateStage_request_accessLogSettings::setDestinationArn(const QString &destination_arn) {
    m_destination_arn = destination_arn;
    m_destination_arn_isSet = true;
}

bool OAICreateStage_request_accessLogSettings::is_destination_arn_Set() const{
    return m_destination_arn_isSet;
}

bool OAICreateStage_request_accessLogSettings::is_destination_arn_Valid() const{
    return m_destination_arn_isValid;
}

QString OAICreateStage_request_accessLogSettings::getFormat() const {
    return m_format;
}
void OAICreateStage_request_accessLogSettings::setFormat(const QString &format) {
    m_format = format;
    m_format_isSet = true;
}

bool OAICreateStage_request_accessLogSettings::is_format_Set() const{
    return m_format_isSet;
}

bool OAICreateStage_request_accessLogSettings::is_format_Valid() const{
    return m_format_isValid;
}

bool OAICreateStage_request_accessLogSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_destination_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_format_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateStage_request_accessLogSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
