/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuthorizerType.h
 *
 * The authorizer type. Specify REQUEST for a Lambda function using incoming request parameters. Specify JWT to use JSON Web Tokens (supported only for HTTP APIs).
 */

#ifndef OAIAuthorizerType_H
#define OAIAuthorizerType_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAuthorizerType : public OAIEnum {
public:
    OAIAuthorizerType();
    OAIAuthorizerType(QString json);
    ~OAIAuthorizerType() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIAuthorizerType {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        REQUEST, 
        JWT
    };
    OAIAuthorizerType::eOAIAuthorizerType getValue() const;
    void setValue(const OAIAuthorizerType::eOAIAuthorizerType& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIAuthorizerType m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuthorizerType)

#endif // OAIAuthorizerType_H
