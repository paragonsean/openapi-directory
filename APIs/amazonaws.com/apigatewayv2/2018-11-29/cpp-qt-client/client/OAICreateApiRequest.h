/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateApiRequest.h
 *
 * Creates a new Api resource to represent an API.
 */

#ifndef OAICreateApiRequest_H
#define OAICreateApiRequest_H

#include <QJsonObject>

#include "OAICreateApiRequest_CorsConfiguration.h"
#include "OAIProtocolType.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateApiRequest_CorsConfiguration;

class OAICreateApiRequest : public OAIObject {
public:
    OAICreateApiRequest();
    OAICreateApiRequest(QString json);
    ~OAICreateApiRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiKeySelectionExpression() const;
    void setApiKeySelectionExpression(const QString &api_key_selection_expression);
    bool is_api_key_selection_expression_Set() const;
    bool is_api_key_selection_expression_Valid() const;

    OAICreateApiRequest_CorsConfiguration getCorsConfiguration() const;
    void setCorsConfiguration(const OAICreateApiRequest_CorsConfiguration &cors_configuration);
    bool is_cors_configuration_Set() const;
    bool is_cors_configuration_Valid() const;

    QString getCredentialsArn() const;
    void setCredentialsArn(const QString &credentials_arn);
    bool is_credentials_arn_Set() const;
    bool is_credentials_arn_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool getDisableSchemaValidation() const;
    void setDisableSchemaValidation(const bool &disable_schema_validation);
    bool is_disable_schema_validation_Set() const;
    bool is_disable_schema_validation_Valid() const;

    bool getDisableExecuteApiEndpoint() const;
    void setDisableExecuteApiEndpoint(const bool &disable_execute_api_endpoint);
    bool is_disable_execute_api_endpoint_Set() const;
    bool is_disable_execute_api_endpoint_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIProtocolType getProtocolType() const;
    void setProtocolType(const OAIProtocolType &protocol_type);
    bool is_protocol_type_Set() const;
    bool is_protocol_type_Valid() const;

    QString getRouteKey() const;
    void setRouteKey(const QString &route_key);
    bool is_route_key_Set() const;
    bool is_route_key_Valid() const;

    QString getRouteSelectionExpression() const;
    void setRouteSelectionExpression(const QString &route_selection_expression);
    bool is_route_selection_expression_Set() const;
    bool is_route_selection_expression_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getTarget() const;
    void setTarget(const QString &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_key_selection_expression;
    bool m_api_key_selection_expression_isSet;
    bool m_api_key_selection_expression_isValid;

    OAICreateApiRequest_CorsConfiguration m_cors_configuration;
    bool m_cors_configuration_isSet;
    bool m_cors_configuration_isValid;

    QString m_credentials_arn;
    bool m_credentials_arn_isSet;
    bool m_credentials_arn_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_disable_schema_validation;
    bool m_disable_schema_validation_isSet;
    bool m_disable_schema_validation_isValid;

    bool m_disable_execute_api_endpoint;
    bool m_disable_execute_api_endpoint_isSet;
    bool m_disable_execute_api_endpoint_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIProtocolType m_protocol_type;
    bool m_protocol_type_isSet;
    bool m_protocol_type_isValid;

    QString m_route_key;
    bool m_route_key_isSet;
    bool m_route_key_isValid;

    QString m_route_selection_expression;
    bool m_route_selection_expression_isSet;
    bool m_route_selection_expression_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateApiRequest)

#endif // OAICreateApiRequest_H
