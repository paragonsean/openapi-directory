/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDomainNameConfiguration.h
 *
 * The domain name configuration.
 */

#ifndef OAIDomainNameConfiguration_H
#define OAIDomainNameConfiguration_H

#include <QJsonObject>

#include "OAIDomainNameStatus.h"
#include "OAIEndpointType.h"
#include "OAISecurityPolicy.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDomainNameConfiguration : public OAIObject {
public:
    OAIDomainNameConfiguration();
    OAIDomainNameConfiguration(QString json);
    ~OAIDomainNameConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiGatewayDomainName() const;
    void setApiGatewayDomainName(const QString &api_gateway_domain_name);
    bool is_api_gateway_domain_name_Set() const;
    bool is_api_gateway_domain_name_Valid() const;

    QString getCertificateArn() const;
    void setCertificateArn(const QString &certificate_arn);
    bool is_certificate_arn_Set() const;
    bool is_certificate_arn_Valid() const;

    QString getCertificateName() const;
    void setCertificateName(const QString &certificate_name);
    bool is_certificate_name_Set() const;
    bool is_certificate_name_Valid() const;

    QDateTime getCertificateUploadDate() const;
    void setCertificateUploadDate(const QDateTime &certificate_upload_date);
    bool is_certificate_upload_date_Set() const;
    bool is_certificate_upload_date_Valid() const;

    OAIDomainNameStatus getDomainNameStatus() const;
    void setDomainNameStatus(const OAIDomainNameStatus &domain_name_status);
    bool is_domain_name_status_Set() const;
    bool is_domain_name_status_Valid() const;

    QString getDomainNameStatusMessage() const;
    void setDomainNameStatusMessage(const QString &domain_name_status_message);
    bool is_domain_name_status_message_Set() const;
    bool is_domain_name_status_message_Valid() const;

    OAIEndpointType getEndpointType() const;
    void setEndpointType(const OAIEndpointType &endpoint_type);
    bool is_endpoint_type_Set() const;
    bool is_endpoint_type_Valid() const;

    QString getHostedZoneId() const;
    void setHostedZoneId(const QString &hosted_zone_id);
    bool is_hosted_zone_id_Set() const;
    bool is_hosted_zone_id_Valid() const;

    OAISecurityPolicy getSecurityPolicy() const;
    void setSecurityPolicy(const OAISecurityPolicy &security_policy);
    bool is_security_policy_Set() const;
    bool is_security_policy_Valid() const;

    QString getOwnershipVerificationCertificateArn() const;
    void setOwnershipVerificationCertificateArn(const QString &ownership_verification_certificate_arn);
    bool is_ownership_verification_certificate_arn_Set() const;
    bool is_ownership_verification_certificate_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_gateway_domain_name;
    bool m_api_gateway_domain_name_isSet;
    bool m_api_gateway_domain_name_isValid;

    QString m_certificate_arn;
    bool m_certificate_arn_isSet;
    bool m_certificate_arn_isValid;

    QString m_certificate_name;
    bool m_certificate_name_isSet;
    bool m_certificate_name_isValid;

    QDateTime m_certificate_upload_date;
    bool m_certificate_upload_date_isSet;
    bool m_certificate_upload_date_isValid;

    OAIDomainNameStatus m_domain_name_status;
    bool m_domain_name_status_isSet;
    bool m_domain_name_status_isValid;

    QString m_domain_name_status_message;
    bool m_domain_name_status_message_isSet;
    bool m_domain_name_status_message_isValid;

    OAIEndpointType m_endpoint_type;
    bool m_endpoint_type_isSet;
    bool m_endpoint_type_isValid;

    QString m_hosted_zone_id;
    bool m_hosted_zone_id_isSet;
    bool m_hosted_zone_id_isValid;

    OAISecurityPolicy m_security_policy;
    bool m_security_policy_isSet;
    bool m_security_policy_isValid;

    QString m_ownership_verification_certificate_arn;
    bool m_ownership_verification_certificate_arn_isSet;
    bool m_ownership_verification_certificate_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDomainNameConfiguration)

#endif // OAIDomainNameConfiguration_H
