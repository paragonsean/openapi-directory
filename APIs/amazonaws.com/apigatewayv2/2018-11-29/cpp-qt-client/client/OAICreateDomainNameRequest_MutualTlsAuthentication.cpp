/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateDomainNameRequest_MutualTlsAuthentication.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateDomainNameRequest_MutualTlsAuthentication::OAICreateDomainNameRequest_MutualTlsAuthentication(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateDomainNameRequest_MutualTlsAuthentication::OAICreateDomainNameRequest_MutualTlsAuthentication() {
    this->initializeModel();
}

OAICreateDomainNameRequest_MutualTlsAuthentication::~OAICreateDomainNameRequest_MutualTlsAuthentication() {}

void OAICreateDomainNameRequest_MutualTlsAuthentication::initializeModel() {

    m_truststore_uri_isSet = false;
    m_truststore_uri_isValid = false;

    m_truststore_version_isSet = false;
    m_truststore_version_isValid = false;
}

void OAICreateDomainNameRequest_MutualTlsAuthentication::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateDomainNameRequest_MutualTlsAuthentication::fromJsonObject(QJsonObject json) {

    m_truststore_uri_isValid = ::OpenAPI::fromJsonValue(m_truststore_uri, json[QString("TruststoreUri")]);
    m_truststore_uri_isSet = !json[QString("TruststoreUri")].isNull() && m_truststore_uri_isValid;

    m_truststore_version_isValid = ::OpenAPI::fromJsonValue(m_truststore_version, json[QString("TruststoreVersion")]);
    m_truststore_version_isSet = !json[QString("TruststoreVersion")].isNull() && m_truststore_version_isValid;
}

QString OAICreateDomainNameRequest_MutualTlsAuthentication::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateDomainNameRequest_MutualTlsAuthentication::asJsonObject() const {
    QJsonObject obj;
    if (m_truststore_uri_isSet) {
        obj.insert(QString("TruststoreUri"), ::OpenAPI::toJsonValue(m_truststore_uri));
    }
    if (m_truststore_version_isSet) {
        obj.insert(QString("TruststoreVersion"), ::OpenAPI::toJsonValue(m_truststore_version));
    }
    return obj;
}

QString OAICreateDomainNameRequest_MutualTlsAuthentication::getTruststoreUri() const {
    return m_truststore_uri;
}
void OAICreateDomainNameRequest_MutualTlsAuthentication::setTruststoreUri(const QString &truststore_uri) {
    m_truststore_uri = truststore_uri;
    m_truststore_uri_isSet = true;
}

bool OAICreateDomainNameRequest_MutualTlsAuthentication::is_truststore_uri_Set() const{
    return m_truststore_uri_isSet;
}

bool OAICreateDomainNameRequest_MutualTlsAuthentication::is_truststore_uri_Valid() const{
    return m_truststore_uri_isValid;
}

QString OAICreateDomainNameRequest_MutualTlsAuthentication::getTruststoreVersion() const {
    return m_truststore_version;
}
void OAICreateDomainNameRequest_MutualTlsAuthentication::setTruststoreVersion(const QString &truststore_version) {
    m_truststore_version = truststore_version;
    m_truststore_version_isSet = true;
}

bool OAICreateDomainNameRequest_MutualTlsAuthentication::is_truststore_version_Set() const{
    return m_truststore_version_isSet;
}

bool OAICreateDomainNameRequest_MutualTlsAuthentication::is_truststore_version_Valid() const{
    return m_truststore_version_isValid;
}

bool OAICreateDomainNameRequest_MutualTlsAuthentication::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_truststore_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_truststore_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateDomainNameRequest_MutualTlsAuthentication::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
