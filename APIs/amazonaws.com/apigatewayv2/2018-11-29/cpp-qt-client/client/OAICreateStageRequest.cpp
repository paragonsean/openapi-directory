/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateStageRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateStageRequest::OAICreateStageRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateStageRequest::OAICreateStageRequest() {
    this->initializeModel();
}

OAICreateStageRequest::~OAICreateStageRequest() {}

void OAICreateStageRequest::initializeModel() {

    m_access_log_settings_isSet = false;
    m_access_log_settings_isValid = false;

    m_auto_deploy_isSet = false;
    m_auto_deploy_isValid = false;

    m_client_certificate_id_isSet = false;
    m_client_certificate_id_isValid = false;

    m_default_route_settings_isSet = false;
    m_default_route_settings_isValid = false;

    m_deployment_id_isSet = false;
    m_deployment_id_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_route_settings_isSet = false;
    m_route_settings_isValid = false;

    m_stage_name_isSet = false;
    m_stage_name_isValid = false;

    m_stage_variables_isSet = false;
    m_stage_variables_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateStageRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateStageRequest::fromJsonObject(QJsonObject json) {

    m_access_log_settings_isValid = ::OpenAPI::fromJsonValue(m_access_log_settings, json[QString("AccessLogSettings")]);
    m_access_log_settings_isSet = !json[QString("AccessLogSettings")].isNull() && m_access_log_settings_isValid;

    m_auto_deploy_isValid = ::OpenAPI::fromJsonValue(m_auto_deploy, json[QString("AutoDeploy")]);
    m_auto_deploy_isSet = !json[QString("AutoDeploy")].isNull() && m_auto_deploy_isValid;

    m_client_certificate_id_isValid = ::OpenAPI::fromJsonValue(m_client_certificate_id, json[QString("ClientCertificateId")]);
    m_client_certificate_id_isSet = !json[QString("ClientCertificateId")].isNull() && m_client_certificate_id_isValid;

    m_default_route_settings_isValid = ::OpenAPI::fromJsonValue(m_default_route_settings, json[QString("DefaultRouteSettings")]);
    m_default_route_settings_isSet = !json[QString("DefaultRouteSettings")].isNull() && m_default_route_settings_isValid;

    m_deployment_id_isValid = ::OpenAPI::fromJsonValue(m_deployment_id, json[QString("DeploymentId")]);
    m_deployment_id_isSet = !json[QString("DeploymentId")].isNull() && m_deployment_id_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_route_settings_isValid = ::OpenAPI::fromJsonValue(m_route_settings, json[QString("RouteSettings")]);
    m_route_settings_isSet = !json[QString("RouteSettings")].isNull() && m_route_settings_isValid;

    m_stage_name_isValid = ::OpenAPI::fromJsonValue(m_stage_name, json[QString("StageName")]);
    m_stage_name_isSet = !json[QString("StageName")].isNull() && m_stage_name_isValid;

    m_stage_variables_isValid = ::OpenAPI::fromJsonValue(m_stage_variables, json[QString("StageVariables")]);
    m_stage_variables_isSet = !json[QString("StageVariables")].isNull() && m_stage_variables_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAICreateStageRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateStageRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_access_log_settings.isSet()) {
        obj.insert(QString("AccessLogSettings"), ::OpenAPI::toJsonValue(m_access_log_settings));
    }
    if (m_auto_deploy_isSet) {
        obj.insert(QString("AutoDeploy"), ::OpenAPI::toJsonValue(m_auto_deploy));
    }
    if (m_client_certificate_id_isSet) {
        obj.insert(QString("ClientCertificateId"), ::OpenAPI::toJsonValue(m_client_certificate_id));
    }
    if (m_default_route_settings.isSet()) {
        obj.insert(QString("DefaultRouteSettings"), ::OpenAPI::toJsonValue(m_default_route_settings));
    }
    if (m_deployment_id_isSet) {
        obj.insert(QString("DeploymentId"), ::OpenAPI::toJsonValue(m_deployment_id));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_route_settings.isSet()) {
        obj.insert(QString("RouteSettings"), ::OpenAPI::toJsonValue(m_route_settings));
    }
    if (m_stage_name_isSet) {
        obj.insert(QString("StageName"), ::OpenAPI::toJsonValue(m_stage_name));
    }
    if (m_stage_variables.isSet()) {
        obj.insert(QString("StageVariables"), ::OpenAPI::toJsonValue(m_stage_variables));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

OAICreateStageResponse_AccessLogSettings OAICreateStageRequest::getAccessLogSettings() const {
    return m_access_log_settings;
}
void OAICreateStageRequest::setAccessLogSettings(const OAICreateStageResponse_AccessLogSettings &access_log_settings) {
    m_access_log_settings = access_log_settings;
    m_access_log_settings_isSet = true;
}

bool OAICreateStageRequest::is_access_log_settings_Set() const{
    return m_access_log_settings_isSet;
}

bool OAICreateStageRequest::is_access_log_settings_Valid() const{
    return m_access_log_settings_isValid;
}

bool OAICreateStageRequest::getAutoDeploy() const {
    return m_auto_deploy;
}
void OAICreateStageRequest::setAutoDeploy(const bool &auto_deploy) {
    m_auto_deploy = auto_deploy;
    m_auto_deploy_isSet = true;
}

bool OAICreateStageRequest::is_auto_deploy_Set() const{
    return m_auto_deploy_isSet;
}

bool OAICreateStageRequest::is_auto_deploy_Valid() const{
    return m_auto_deploy_isValid;
}

QString OAICreateStageRequest::getClientCertificateId() const {
    return m_client_certificate_id;
}
void OAICreateStageRequest::setClientCertificateId(const QString &client_certificate_id) {
    m_client_certificate_id = client_certificate_id;
    m_client_certificate_id_isSet = true;
}

bool OAICreateStageRequest::is_client_certificate_id_Set() const{
    return m_client_certificate_id_isSet;
}

bool OAICreateStageRequest::is_client_certificate_id_Valid() const{
    return m_client_certificate_id_isValid;
}

OAICreateStageRequest_DefaultRouteSettings OAICreateStageRequest::getDefaultRouteSettings() const {
    return m_default_route_settings;
}
void OAICreateStageRequest::setDefaultRouteSettings(const OAICreateStageRequest_DefaultRouteSettings &default_route_settings) {
    m_default_route_settings = default_route_settings;
    m_default_route_settings_isSet = true;
}

bool OAICreateStageRequest::is_default_route_settings_Set() const{
    return m_default_route_settings_isSet;
}

bool OAICreateStageRequest::is_default_route_settings_Valid() const{
    return m_default_route_settings_isValid;
}

QString OAICreateStageRequest::getDeploymentId() const {
    return m_deployment_id;
}
void OAICreateStageRequest::setDeploymentId(const QString &deployment_id) {
    m_deployment_id = deployment_id;
    m_deployment_id_isSet = true;
}

bool OAICreateStageRequest::is_deployment_id_Set() const{
    return m_deployment_id_isSet;
}

bool OAICreateStageRequest::is_deployment_id_Valid() const{
    return m_deployment_id_isValid;
}

QString OAICreateStageRequest::getDescription() const {
    return m_description;
}
void OAICreateStageRequest::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateStageRequest::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateStageRequest::is_description_Valid() const{
    return m_description_isValid;
}

QMap OAICreateStageRequest::getRouteSettings() const {
    return m_route_settings;
}
void OAICreateStageRequest::setRouteSettings(const QMap &route_settings) {
    m_route_settings = route_settings;
    m_route_settings_isSet = true;
}

bool OAICreateStageRequest::is_route_settings_Set() const{
    return m_route_settings_isSet;
}

bool OAICreateStageRequest::is_route_settings_Valid() const{
    return m_route_settings_isValid;
}

QString OAICreateStageRequest::getStageName() const {
    return m_stage_name;
}
void OAICreateStageRequest::setStageName(const QString &stage_name) {
    m_stage_name = stage_name;
    m_stage_name_isSet = true;
}

bool OAICreateStageRequest::is_stage_name_Set() const{
    return m_stage_name_isSet;
}

bool OAICreateStageRequest::is_stage_name_Valid() const{
    return m_stage_name_isValid;
}

QMap OAICreateStageRequest::getStageVariables() const {
    return m_stage_variables;
}
void OAICreateStageRequest::setStageVariables(const QMap &stage_variables) {
    m_stage_variables = stage_variables;
    m_stage_variables_isSet = true;
}

bool OAICreateStageRequest::is_stage_variables_Set() const{
    return m_stage_variables_isSet;
}

bool OAICreateStageRequest::is_stage_variables_Valid() const{
    return m_stage_variables_isValid;
}

QMap OAICreateStageRequest::getTags() const {
    return m_tags;
}
void OAICreateStageRequest::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateStageRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateStageRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateStageRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_log_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_auto_deploy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_certificate_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_route_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_route_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_stage_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stage_variables.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateStageRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_stage_name_isValid && true;
}

} // namespace OpenAPI
