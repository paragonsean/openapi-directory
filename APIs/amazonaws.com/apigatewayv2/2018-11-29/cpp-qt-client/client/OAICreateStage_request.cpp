/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateStage_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateStage_request::OAICreateStage_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateStage_request::OAICreateStage_request() {
    this->initializeModel();
}

OAICreateStage_request::~OAICreateStage_request() {}

void OAICreateStage_request::initializeModel() {

    m_access_log_settings_isSet = false;
    m_access_log_settings_isValid = false;

    m_auto_deploy_isSet = false;
    m_auto_deploy_isValid = false;

    m_client_certificate_id_isSet = false;
    m_client_certificate_id_isValid = false;

    m_default_route_settings_isSet = false;
    m_default_route_settings_isValid = false;

    m_deployment_id_isSet = false;
    m_deployment_id_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_route_settings_isSet = false;
    m_route_settings_isValid = false;

    m_stage_name_isSet = false;
    m_stage_name_isValid = false;

    m_stage_variables_isSet = false;
    m_stage_variables_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateStage_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateStage_request::fromJsonObject(QJsonObject json) {

    m_access_log_settings_isValid = ::OpenAPI::fromJsonValue(m_access_log_settings, json[QString("accessLogSettings")]);
    m_access_log_settings_isSet = !json[QString("accessLogSettings")].isNull() && m_access_log_settings_isValid;

    m_auto_deploy_isValid = ::OpenAPI::fromJsonValue(m_auto_deploy, json[QString("autoDeploy")]);
    m_auto_deploy_isSet = !json[QString("autoDeploy")].isNull() && m_auto_deploy_isValid;

    m_client_certificate_id_isValid = ::OpenAPI::fromJsonValue(m_client_certificate_id, json[QString("clientCertificateId")]);
    m_client_certificate_id_isSet = !json[QString("clientCertificateId")].isNull() && m_client_certificate_id_isValid;

    m_default_route_settings_isValid = ::OpenAPI::fromJsonValue(m_default_route_settings, json[QString("defaultRouteSettings")]);
    m_default_route_settings_isSet = !json[QString("defaultRouteSettings")].isNull() && m_default_route_settings_isValid;

    m_deployment_id_isValid = ::OpenAPI::fromJsonValue(m_deployment_id, json[QString("deploymentId")]);
    m_deployment_id_isSet = !json[QString("deploymentId")].isNull() && m_deployment_id_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_route_settings_isValid = ::OpenAPI::fromJsonValue(m_route_settings, json[QString("routeSettings")]);
    m_route_settings_isSet = !json[QString("routeSettings")].isNull() && m_route_settings_isValid;

    m_stage_name_isValid = ::OpenAPI::fromJsonValue(m_stage_name, json[QString("stageName")]);
    m_stage_name_isSet = !json[QString("stageName")].isNull() && m_stage_name_isValid;

    m_stage_variables_isValid = ::OpenAPI::fromJsonValue(m_stage_variables, json[QString("stageVariables")]);
    m_stage_variables_isSet = !json[QString("stageVariables")].isNull() && m_stage_variables_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAICreateStage_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateStage_request::asJsonObject() const {
    QJsonObject obj;
    if (m_access_log_settings.isSet()) {
        obj.insert(QString("accessLogSettings"), ::OpenAPI::toJsonValue(m_access_log_settings));
    }
    if (m_auto_deploy_isSet) {
        obj.insert(QString("autoDeploy"), ::OpenAPI::toJsonValue(m_auto_deploy));
    }
    if (m_client_certificate_id_isSet) {
        obj.insert(QString("clientCertificateId"), ::OpenAPI::toJsonValue(m_client_certificate_id));
    }
    if (m_default_route_settings.isSet()) {
        obj.insert(QString("defaultRouteSettings"), ::OpenAPI::toJsonValue(m_default_route_settings));
    }
    if (m_deployment_id_isSet) {
        obj.insert(QString("deploymentId"), ::OpenAPI::toJsonValue(m_deployment_id));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_route_settings.size() > 0) {
        obj.insert(QString("routeSettings"), ::OpenAPI::toJsonValue(m_route_settings));
    }
    if (m_stage_name_isSet) {
        obj.insert(QString("stageName"), ::OpenAPI::toJsonValue(m_stage_name));
    }
    if (m_stage_variables.size() > 0) {
        obj.insert(QString("stageVariables"), ::OpenAPI::toJsonValue(m_stage_variables));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

OAICreateStage_request_accessLogSettings OAICreateStage_request::getAccessLogSettings() const {
    return m_access_log_settings;
}
void OAICreateStage_request::setAccessLogSettings(const OAICreateStage_request_accessLogSettings &access_log_settings) {
    m_access_log_settings = access_log_settings;
    m_access_log_settings_isSet = true;
}

bool OAICreateStage_request::is_access_log_settings_Set() const{
    return m_access_log_settings_isSet;
}

bool OAICreateStage_request::is_access_log_settings_Valid() const{
    return m_access_log_settings_isValid;
}

bool OAICreateStage_request::isAutoDeploy() const {
    return m_auto_deploy;
}
void OAICreateStage_request::setAutoDeploy(const bool &auto_deploy) {
    m_auto_deploy = auto_deploy;
    m_auto_deploy_isSet = true;
}

bool OAICreateStage_request::is_auto_deploy_Set() const{
    return m_auto_deploy_isSet;
}

bool OAICreateStage_request::is_auto_deploy_Valid() const{
    return m_auto_deploy_isValid;
}

QString OAICreateStage_request::getClientCertificateId() const {
    return m_client_certificate_id;
}
void OAICreateStage_request::setClientCertificateId(const QString &client_certificate_id) {
    m_client_certificate_id = client_certificate_id;
    m_client_certificate_id_isSet = true;
}

bool OAICreateStage_request::is_client_certificate_id_Set() const{
    return m_client_certificate_id_isSet;
}

bool OAICreateStage_request::is_client_certificate_id_Valid() const{
    return m_client_certificate_id_isValid;
}

OAICreateStage_request_defaultRouteSettings OAICreateStage_request::getDefaultRouteSettings() const {
    return m_default_route_settings;
}
void OAICreateStage_request::setDefaultRouteSettings(const OAICreateStage_request_defaultRouteSettings &default_route_settings) {
    m_default_route_settings = default_route_settings;
    m_default_route_settings_isSet = true;
}

bool OAICreateStage_request::is_default_route_settings_Set() const{
    return m_default_route_settings_isSet;
}

bool OAICreateStage_request::is_default_route_settings_Valid() const{
    return m_default_route_settings_isValid;
}

QString OAICreateStage_request::getDeploymentId() const {
    return m_deployment_id;
}
void OAICreateStage_request::setDeploymentId(const QString &deployment_id) {
    m_deployment_id = deployment_id;
    m_deployment_id_isSet = true;
}

bool OAICreateStage_request::is_deployment_id_Set() const{
    return m_deployment_id_isSet;
}

bool OAICreateStage_request::is_deployment_id_Valid() const{
    return m_deployment_id_isValid;
}

QString OAICreateStage_request::getDescription() const {
    return m_description;
}
void OAICreateStage_request::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateStage_request::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateStage_request::is_description_Valid() const{
    return m_description_isValid;
}

QMap<QString, OAIRouteSettings> OAICreateStage_request::getRouteSettings() const {
    return m_route_settings;
}
void OAICreateStage_request::setRouteSettings(const QMap<QString, OAIRouteSettings> &route_settings) {
    m_route_settings = route_settings;
    m_route_settings_isSet = true;
}

bool OAICreateStage_request::is_route_settings_Set() const{
    return m_route_settings_isSet;
}

bool OAICreateStage_request::is_route_settings_Valid() const{
    return m_route_settings_isValid;
}

QString OAICreateStage_request::getStageName() const {
    return m_stage_name;
}
void OAICreateStage_request::setStageName(const QString &stage_name) {
    m_stage_name = stage_name;
    m_stage_name_isSet = true;
}

bool OAICreateStage_request::is_stage_name_Set() const{
    return m_stage_name_isSet;
}

bool OAICreateStage_request::is_stage_name_Valid() const{
    return m_stage_name_isValid;
}

QMap<QString, QString> OAICreateStage_request::getStageVariables() const {
    return m_stage_variables;
}
void OAICreateStage_request::setStageVariables(const QMap<QString, QString> &stage_variables) {
    m_stage_variables = stage_variables;
    m_stage_variables_isSet = true;
}

bool OAICreateStage_request::is_stage_variables_Set() const{
    return m_stage_variables_isSet;
}

bool OAICreateStage_request::is_stage_variables_Valid() const{
    return m_stage_variables_isValid;
}

QMap<QString, QString> OAICreateStage_request::getTags() const {
    return m_tags;
}
void OAICreateStage_request::setTags(const QMap<QString, QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateStage_request::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateStage_request::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateStage_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_log_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_auto_deploy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_certificate_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_route_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_route_settings.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_stage_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stage_variables.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateStage_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_stage_name_isValid && true;
}

} // namespace OpenAPI
