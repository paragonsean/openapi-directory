/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetApiResponse.h
 *
 * 
 */

#ifndef OAIGetApiResponse_H
#define OAIGetApiResponse_H

#include <QJsonObject>

#include "OAICreateApiResponse_CorsConfiguration.h"
#include "OAIProtocolType.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateApiResponse_CorsConfiguration;

class OAIGetApiResponse : public OAIObject {
public:
    OAIGetApiResponse();
    OAIGetApiResponse(QString json);
    ~OAIGetApiResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiEndpoint() const;
    void setApiEndpoint(const QString &api_endpoint);
    bool is_api_endpoint_Set() const;
    bool is_api_endpoint_Valid() const;

    bool getApiGatewayManaged() const;
    void setApiGatewayManaged(const bool &api_gateway_managed);
    bool is_api_gateway_managed_Set() const;
    bool is_api_gateway_managed_Valid() const;

    QString getApiId() const;
    void setApiId(const QString &api_id);
    bool is_api_id_Set() const;
    bool is_api_id_Valid() const;

    QString getApiKeySelectionExpression() const;
    void setApiKeySelectionExpression(const QString &api_key_selection_expression);
    bool is_api_key_selection_expression_Set() const;
    bool is_api_key_selection_expression_Valid() const;

    OAICreateApiResponse_CorsConfiguration getCorsConfiguration() const;
    void setCorsConfiguration(const OAICreateApiResponse_CorsConfiguration &cors_configuration);
    bool is_cors_configuration_Set() const;
    bool is_cors_configuration_Valid() const;

    QDateTime getCreatedDate() const;
    void setCreatedDate(const QDateTime &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool getDisableSchemaValidation() const;
    void setDisableSchemaValidation(const bool &disable_schema_validation);
    bool is_disable_schema_validation_Set() const;
    bool is_disable_schema_validation_Valid() const;

    bool getDisableExecuteApiEndpoint() const;
    void setDisableExecuteApiEndpoint(const bool &disable_execute_api_endpoint);
    bool is_disable_execute_api_endpoint_Set() const;
    bool is_disable_execute_api_endpoint_Valid() const;

    QList getImportInfo() const;
    void setImportInfo(const QList &import_info);
    bool is_import_info_Set() const;
    bool is_import_info_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIProtocolType getProtocolType() const;
    void setProtocolType(const OAIProtocolType &protocol_type);
    bool is_protocol_type_Set() const;
    bool is_protocol_type_Valid() const;

    QString getRouteSelectionExpression() const;
    void setRouteSelectionExpression(const QString &route_selection_expression);
    bool is_route_selection_expression_Set() const;
    bool is_route_selection_expression_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QList getWarnings() const;
    void setWarnings(const QList &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_endpoint;
    bool m_api_endpoint_isSet;
    bool m_api_endpoint_isValid;

    bool m_api_gateway_managed;
    bool m_api_gateway_managed_isSet;
    bool m_api_gateway_managed_isValid;

    QString m_api_id;
    bool m_api_id_isSet;
    bool m_api_id_isValid;

    QString m_api_key_selection_expression;
    bool m_api_key_selection_expression_isSet;
    bool m_api_key_selection_expression_isValid;

    OAICreateApiResponse_CorsConfiguration m_cors_configuration;
    bool m_cors_configuration_isSet;
    bool m_cors_configuration_isValid;

    QDateTime m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_disable_schema_validation;
    bool m_disable_schema_validation_isSet;
    bool m_disable_schema_validation_isValid;

    bool m_disable_execute_api_endpoint;
    bool m_disable_execute_api_endpoint_isSet;
    bool m_disable_execute_api_endpoint_isValid;

    QList m_import_info;
    bool m_import_info_isSet;
    bool m_import_info_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIProtocolType m_protocol_type;
    bool m_protocol_type_isSet;
    bool m_protocol_type_isValid;

    QString m_route_selection_expression;
    bool m_route_selection_expression_isSet;
    bool m_route_selection_expression_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QList m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetApiResponse)

#endif // OAIGetApiResponse_H
