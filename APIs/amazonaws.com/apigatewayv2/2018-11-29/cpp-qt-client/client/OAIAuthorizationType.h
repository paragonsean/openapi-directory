/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuthorizationType.h
 *
 * The authorization type. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer. For HTTP APIs, valid values are NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
 */

#ifndef OAIAuthorizationType_H
#define OAIAuthorizationType_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAuthorizationType : public OAIEnum {
public:
    OAIAuthorizationType();
    OAIAuthorizationType(QString json);
    ~OAIAuthorizationType() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIAuthorizationType {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        NONE, 
        AWS_IAM, 
        CUSTOM, 
        JWT
    };
    OAIAuthorizationType::eOAIAuthorizationType getValue() const;
    void setValue(const OAIAuthorizationType::eOAIAuthorizationType& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIAuthorizationType m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuthorizationType)

#endif // OAIAuthorizationType_H
