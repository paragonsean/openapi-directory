/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateApiMappingRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateApiMappingRequest::OAICreateApiMappingRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateApiMappingRequest::OAICreateApiMappingRequest() {
    this->initializeModel();
}

OAICreateApiMappingRequest::~OAICreateApiMappingRequest() {}

void OAICreateApiMappingRequest::initializeModel() {

    m_api_id_isSet = false;
    m_api_id_isValid = false;

    m_api_mapping_key_isSet = false;
    m_api_mapping_key_isValid = false;

    m_stage_isSet = false;
    m_stage_isValid = false;
}

void OAICreateApiMappingRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateApiMappingRequest::fromJsonObject(QJsonObject json) {

    m_api_id_isValid = ::OpenAPI::fromJsonValue(m_api_id, json[QString("ApiId")]);
    m_api_id_isSet = !json[QString("ApiId")].isNull() && m_api_id_isValid;

    m_api_mapping_key_isValid = ::OpenAPI::fromJsonValue(m_api_mapping_key, json[QString("ApiMappingKey")]);
    m_api_mapping_key_isSet = !json[QString("ApiMappingKey")].isNull() && m_api_mapping_key_isValid;

    m_stage_isValid = ::OpenAPI::fromJsonValue(m_stage, json[QString("Stage")]);
    m_stage_isSet = !json[QString("Stage")].isNull() && m_stage_isValid;
}

QString OAICreateApiMappingRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateApiMappingRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_api_id_isSet) {
        obj.insert(QString("ApiId"), ::OpenAPI::toJsonValue(m_api_id));
    }
    if (m_api_mapping_key_isSet) {
        obj.insert(QString("ApiMappingKey"), ::OpenAPI::toJsonValue(m_api_mapping_key));
    }
    if (m_stage_isSet) {
        obj.insert(QString("Stage"), ::OpenAPI::toJsonValue(m_stage));
    }
    return obj;
}

QString OAICreateApiMappingRequest::getApiId() const {
    return m_api_id;
}
void OAICreateApiMappingRequest::setApiId(const QString &api_id) {
    m_api_id = api_id;
    m_api_id_isSet = true;
}

bool OAICreateApiMappingRequest::is_api_id_Set() const{
    return m_api_id_isSet;
}

bool OAICreateApiMappingRequest::is_api_id_Valid() const{
    return m_api_id_isValid;
}

QString OAICreateApiMappingRequest::getApiMappingKey() const {
    return m_api_mapping_key;
}
void OAICreateApiMappingRequest::setApiMappingKey(const QString &api_mapping_key) {
    m_api_mapping_key = api_mapping_key;
    m_api_mapping_key_isSet = true;
}

bool OAICreateApiMappingRequest::is_api_mapping_key_Set() const{
    return m_api_mapping_key_isSet;
}

bool OAICreateApiMappingRequest::is_api_mapping_key_Valid() const{
    return m_api_mapping_key_isValid;
}

QString OAICreateApiMappingRequest::getStage() const {
    return m_stage;
}
void OAICreateApiMappingRequest::setStage(const QString &stage) {
    m_stage = stage;
    m_stage_isSet = true;
}

bool OAICreateApiMappingRequest::is_stage_Set() const{
    return m_stage_isSet;
}

bool OAICreateApiMappingRequest::is_stage_Valid() const{
    return m_stage_isValid;
}

bool OAICreateApiMappingRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_mapping_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stage_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateApiMappingRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_api_id_isValid && m_stage_isValid && true;
}

} // namespace OpenAPI
