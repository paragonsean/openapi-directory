/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIParameterConstraints.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIParameterConstraints::OAIParameterConstraints(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIParameterConstraints::OAIParameterConstraints() {
    this->initializeModel();
}

OAIParameterConstraints::~OAIParameterConstraints() {}

void OAIParameterConstraints::initializeModel() {

    m_required_isSet = false;
    m_required_isValid = false;
}

void OAIParameterConstraints::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIParameterConstraints::fromJsonObject(QJsonObject json) {

    m_required_isValid = ::OpenAPI::fromJsonValue(m_required, json[QString("Required")]);
    m_required_isSet = !json[QString("Required")].isNull() && m_required_isValid;
}

QString OAIParameterConstraints::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIParameterConstraints::asJsonObject() const {
    QJsonObject obj;
    if (m_required_isSet) {
        obj.insert(QString("Required"), ::OpenAPI::toJsonValue(m_required));
    }
    return obj;
}

bool OAIParameterConstraints::getRequired() const {
    return m_required;
}
void OAIParameterConstraints::setRequired(const bool &required) {
    m_required = required;
    m_required_isSet = true;
}

bool OAIParameterConstraints::is_required_Set() const{
    return m_required_isSet;
}

bool OAIParameterConstraints::is_required_Valid() const{
    return m_required_isValid;
}

bool OAIParameterConstraints::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_required_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIParameterConstraints::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
