/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateStageRequest_DefaultRouteSettings.h
 *
 * 
 */

#ifndef OAICreateStageRequest_DefaultRouteSettings_H
#define OAICreateStageRequest_DefaultRouteSettings_H

#include <QJsonObject>

#include "OAILoggingLevel.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateStageRequest_DefaultRouteSettings : public OAIObject {
public:
    OAICreateStageRequest_DefaultRouteSettings();
    OAICreateStageRequest_DefaultRouteSettings(QString json);
    ~OAICreateStageRequest_DefaultRouteSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getDataTraceEnabled() const;
    void setDataTraceEnabled(const bool &data_trace_enabled);
    bool is_data_trace_enabled_Set() const;
    bool is_data_trace_enabled_Valid() const;

    bool getDetailedMetricsEnabled() const;
    void setDetailedMetricsEnabled(const bool &detailed_metrics_enabled);
    bool is_detailed_metrics_enabled_Set() const;
    bool is_detailed_metrics_enabled_Valid() const;

    OAILoggingLevel getLoggingLevel() const;
    void setLoggingLevel(const OAILoggingLevel &logging_level);
    bool is_logging_level_Set() const;
    bool is_logging_level_Valid() const;

    qint32 getThrottlingBurstLimit() const;
    void setThrottlingBurstLimit(const qint32 &throttling_burst_limit);
    bool is_throttling_burst_limit_Set() const;
    bool is_throttling_burst_limit_Valid() const;

    double getThrottlingRateLimit() const;
    void setThrottlingRateLimit(const double &throttling_rate_limit);
    bool is_throttling_rate_limit_Set() const;
    bool is_throttling_rate_limit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_data_trace_enabled;
    bool m_data_trace_enabled_isSet;
    bool m_data_trace_enabled_isValid;

    bool m_detailed_metrics_enabled;
    bool m_detailed_metrics_enabled_isSet;
    bool m_detailed_metrics_enabled_isValid;

    OAILoggingLevel m_logging_level;
    bool m_logging_level_isSet;
    bool m_logging_level_isValid;

    qint32 m_throttling_burst_limit;
    bool m_throttling_burst_limit_isSet;
    bool m_throttling_burst_limit_isValid;

    double m_throttling_rate_limit;
    bool m_throttling_rate_limit_isSet;
    bool m_throttling_rate_limit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateStageRequest_DefaultRouteSettings)

#endif // OAICreateStageRequest_DefaultRouteSettings_H
