/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateDomainName_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateDomainName_request::OAIUpdateDomainName_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateDomainName_request::OAIUpdateDomainName_request() {
    this->initializeModel();
}

OAIUpdateDomainName_request::~OAIUpdateDomainName_request() {}

void OAIUpdateDomainName_request::initializeModel() {

    m_domain_name_configurations_isSet = false;
    m_domain_name_configurations_isValid = false;

    m_mutual_tls_authentication_isSet = false;
    m_mutual_tls_authentication_isValid = false;
}

void OAIUpdateDomainName_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateDomainName_request::fromJsonObject(QJsonObject json) {

    m_domain_name_configurations_isValid = ::OpenAPI::fromJsonValue(m_domain_name_configurations, json[QString("domainNameConfigurations")]);
    m_domain_name_configurations_isSet = !json[QString("domainNameConfigurations")].isNull() && m_domain_name_configurations_isValid;

    m_mutual_tls_authentication_isValid = ::OpenAPI::fromJsonValue(m_mutual_tls_authentication, json[QString("mutualTlsAuthentication")]);
    m_mutual_tls_authentication_isSet = !json[QString("mutualTlsAuthentication")].isNull() && m_mutual_tls_authentication_isValid;
}

QString OAIUpdateDomainName_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateDomainName_request::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_name_configurations.size() > 0) {
        obj.insert(QString("domainNameConfigurations"), ::OpenAPI::toJsonValue(m_domain_name_configurations));
    }
    if (m_mutual_tls_authentication.isSet()) {
        obj.insert(QString("mutualTlsAuthentication"), ::OpenAPI::toJsonValue(m_mutual_tls_authentication));
    }
    return obj;
}

QList<OAIDomainNameConfiguration> OAIUpdateDomainName_request::getDomainNameConfigurations() const {
    return m_domain_name_configurations;
}
void OAIUpdateDomainName_request::setDomainNameConfigurations(const QList<OAIDomainNameConfiguration> &domain_name_configurations) {
    m_domain_name_configurations = domain_name_configurations;
    m_domain_name_configurations_isSet = true;
}

bool OAIUpdateDomainName_request::is_domain_name_configurations_Set() const{
    return m_domain_name_configurations_isSet;
}

bool OAIUpdateDomainName_request::is_domain_name_configurations_Valid() const{
    return m_domain_name_configurations_isValid;
}

OAICreateDomainName_request_mutualTlsAuthentication OAIUpdateDomainName_request::getMutualTlsAuthentication() const {
    return m_mutual_tls_authentication;
}
void OAIUpdateDomainName_request::setMutualTlsAuthentication(const OAICreateDomainName_request_mutualTlsAuthentication &mutual_tls_authentication) {
    m_mutual_tls_authentication = mutual_tls_authentication;
    m_mutual_tls_authentication_isSet = true;
}

bool OAIUpdateDomainName_request::is_mutual_tls_authentication_Set() const{
    return m_mutual_tls_authentication_isSet;
}

bool OAIUpdateDomainName_request::is_mutual_tls_authentication_Valid() const{
    return m_mutual_tls_authentication_isValid;
}

bool OAIUpdateDomainName_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_name_configurations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_mutual_tls_authentication.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateDomainName_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
