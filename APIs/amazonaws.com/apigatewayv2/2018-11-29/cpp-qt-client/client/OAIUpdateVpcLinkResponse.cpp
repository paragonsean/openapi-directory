/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateVpcLinkResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateVpcLinkResponse::OAIUpdateVpcLinkResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateVpcLinkResponse::OAIUpdateVpcLinkResponse() {
    this->initializeModel();
}

OAIUpdateVpcLinkResponse::~OAIUpdateVpcLinkResponse() {}

void OAIUpdateVpcLinkResponse::initializeModel() {

    m_created_date_isSet = false;
    m_created_date_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_security_group_ids_isSet = false;
    m_security_group_ids_isValid = false;

    m_subnet_ids_isSet = false;
    m_subnet_ids_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_vpc_link_id_isSet = false;
    m_vpc_link_id_isValid = false;

    m_vpc_link_status_isSet = false;
    m_vpc_link_status_isValid = false;

    m_vpc_link_status_message_isSet = false;
    m_vpc_link_status_message_isValid = false;

    m_vpc_link_version_isSet = false;
    m_vpc_link_version_isValid = false;
}

void OAIUpdateVpcLinkResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateVpcLinkResponse::fromJsonObject(QJsonObject json) {

    m_created_date_isValid = ::OpenAPI::fromJsonValue(m_created_date, json[QString("CreatedDate")]);
    m_created_date_isSet = !json[QString("CreatedDate")].isNull() && m_created_date_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_security_group_ids_isValid = ::OpenAPI::fromJsonValue(m_security_group_ids, json[QString("SecurityGroupIds")]);
    m_security_group_ids_isSet = !json[QString("SecurityGroupIds")].isNull() && m_security_group_ids_isValid;

    m_subnet_ids_isValid = ::OpenAPI::fromJsonValue(m_subnet_ids, json[QString("SubnetIds")]);
    m_subnet_ids_isSet = !json[QString("SubnetIds")].isNull() && m_subnet_ids_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_vpc_link_id_isValid = ::OpenAPI::fromJsonValue(m_vpc_link_id, json[QString("VpcLinkId")]);
    m_vpc_link_id_isSet = !json[QString("VpcLinkId")].isNull() && m_vpc_link_id_isValid;

    m_vpc_link_status_isValid = ::OpenAPI::fromJsonValue(m_vpc_link_status, json[QString("VpcLinkStatus")]);
    m_vpc_link_status_isSet = !json[QString("VpcLinkStatus")].isNull() && m_vpc_link_status_isValid;

    m_vpc_link_status_message_isValid = ::OpenAPI::fromJsonValue(m_vpc_link_status_message, json[QString("VpcLinkStatusMessage")]);
    m_vpc_link_status_message_isSet = !json[QString("VpcLinkStatusMessage")].isNull() && m_vpc_link_status_message_isValid;

    m_vpc_link_version_isValid = ::OpenAPI::fromJsonValue(m_vpc_link_version, json[QString("VpcLinkVersion")]);
    m_vpc_link_version_isSet = !json[QString("VpcLinkVersion")].isNull() && m_vpc_link_version_isValid;
}

QString OAIUpdateVpcLinkResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateVpcLinkResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_created_date_isSet) {
        obj.insert(QString("CreatedDate"), ::OpenAPI::toJsonValue(m_created_date));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_security_group_ids.isSet()) {
        obj.insert(QString("SecurityGroupIds"), ::OpenAPI::toJsonValue(m_security_group_ids));
    }
    if (m_subnet_ids.isSet()) {
        obj.insert(QString("SubnetIds"), ::OpenAPI::toJsonValue(m_subnet_ids));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_vpc_link_id_isSet) {
        obj.insert(QString("VpcLinkId"), ::OpenAPI::toJsonValue(m_vpc_link_id));
    }
    if (m_vpc_link_status.isSet()) {
        obj.insert(QString("VpcLinkStatus"), ::OpenAPI::toJsonValue(m_vpc_link_status));
    }
    if (m_vpc_link_status_message_isSet) {
        obj.insert(QString("VpcLinkStatusMessage"), ::OpenAPI::toJsonValue(m_vpc_link_status_message));
    }
    if (m_vpc_link_version.isSet()) {
        obj.insert(QString("VpcLinkVersion"), ::OpenAPI::toJsonValue(m_vpc_link_version));
    }
    return obj;
}

QDateTime OAIUpdateVpcLinkResponse::getCreatedDate() const {
    return m_created_date;
}
void OAIUpdateVpcLinkResponse::setCreatedDate(const QDateTime &created_date) {
    m_created_date = created_date;
    m_created_date_isSet = true;
}

bool OAIUpdateVpcLinkResponse::is_created_date_Set() const{
    return m_created_date_isSet;
}

bool OAIUpdateVpcLinkResponse::is_created_date_Valid() const{
    return m_created_date_isValid;
}

QString OAIUpdateVpcLinkResponse::getName() const {
    return m_name;
}
void OAIUpdateVpcLinkResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateVpcLinkResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateVpcLinkResponse::is_name_Valid() const{
    return m_name_isValid;
}

QList OAIUpdateVpcLinkResponse::getSecurityGroupIds() const {
    return m_security_group_ids;
}
void OAIUpdateVpcLinkResponse::setSecurityGroupIds(const QList &security_group_ids) {
    m_security_group_ids = security_group_ids;
    m_security_group_ids_isSet = true;
}

bool OAIUpdateVpcLinkResponse::is_security_group_ids_Set() const{
    return m_security_group_ids_isSet;
}

bool OAIUpdateVpcLinkResponse::is_security_group_ids_Valid() const{
    return m_security_group_ids_isValid;
}

QList OAIUpdateVpcLinkResponse::getSubnetIds() const {
    return m_subnet_ids;
}
void OAIUpdateVpcLinkResponse::setSubnetIds(const QList &subnet_ids) {
    m_subnet_ids = subnet_ids;
    m_subnet_ids_isSet = true;
}

bool OAIUpdateVpcLinkResponse::is_subnet_ids_Set() const{
    return m_subnet_ids_isSet;
}

bool OAIUpdateVpcLinkResponse::is_subnet_ids_Valid() const{
    return m_subnet_ids_isValid;
}

QMap OAIUpdateVpcLinkResponse::getTags() const {
    return m_tags;
}
void OAIUpdateVpcLinkResponse::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIUpdateVpcLinkResponse::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIUpdateVpcLinkResponse::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIUpdateVpcLinkResponse::getVpcLinkId() const {
    return m_vpc_link_id;
}
void OAIUpdateVpcLinkResponse::setVpcLinkId(const QString &vpc_link_id) {
    m_vpc_link_id = vpc_link_id;
    m_vpc_link_id_isSet = true;
}

bool OAIUpdateVpcLinkResponse::is_vpc_link_id_Set() const{
    return m_vpc_link_id_isSet;
}

bool OAIUpdateVpcLinkResponse::is_vpc_link_id_Valid() const{
    return m_vpc_link_id_isValid;
}

OAIVpcLinkStatus OAIUpdateVpcLinkResponse::getVpcLinkStatus() const {
    return m_vpc_link_status;
}
void OAIUpdateVpcLinkResponse::setVpcLinkStatus(const OAIVpcLinkStatus &vpc_link_status) {
    m_vpc_link_status = vpc_link_status;
    m_vpc_link_status_isSet = true;
}

bool OAIUpdateVpcLinkResponse::is_vpc_link_status_Set() const{
    return m_vpc_link_status_isSet;
}

bool OAIUpdateVpcLinkResponse::is_vpc_link_status_Valid() const{
    return m_vpc_link_status_isValid;
}

QString OAIUpdateVpcLinkResponse::getVpcLinkStatusMessage() const {
    return m_vpc_link_status_message;
}
void OAIUpdateVpcLinkResponse::setVpcLinkStatusMessage(const QString &vpc_link_status_message) {
    m_vpc_link_status_message = vpc_link_status_message;
    m_vpc_link_status_message_isSet = true;
}

bool OAIUpdateVpcLinkResponse::is_vpc_link_status_message_Set() const{
    return m_vpc_link_status_message_isSet;
}

bool OAIUpdateVpcLinkResponse::is_vpc_link_status_message_Valid() const{
    return m_vpc_link_status_message_isValid;
}

OAIVpcLinkVersion OAIUpdateVpcLinkResponse::getVpcLinkVersion() const {
    return m_vpc_link_version;
}
void OAIUpdateVpcLinkResponse::setVpcLinkVersion(const OAIVpcLinkVersion &vpc_link_version) {
    m_vpc_link_version = vpc_link_version;
    m_vpc_link_version_isSet = true;
}

bool OAIUpdateVpcLinkResponse::is_vpc_link_version_Set() const{
    return m_vpc_link_version_isSet;
}

bool OAIUpdateVpcLinkResponse::is_vpc_link_version_Valid() const{
    return m_vpc_link_version_isValid;
}

bool OAIUpdateVpcLinkResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_group_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_subnet_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpc_link_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpc_link_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpc_link_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpc_link_version.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateVpcLinkResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
