/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonApiGatewayV2);
  }
}(this, function(expect, AmazonApiGatewayV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonApiGatewayV2.CreateIntegrationResult();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateIntegrationResult', function() {
    it('should create an instance of CreateIntegrationResult', function() {
      // uncomment below and update the code to test CreateIntegrationResult
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be.a(AmazonApiGatewayV2.CreateIntegrationResult);
    });

    it('should have the property apiGatewayManaged (base name: "ApiGatewayManaged")', function() {
      // uncomment below and update the code to test the property apiGatewayManaged
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property connectionId (base name: "ConnectionId")', function() {
      // uncomment below and update the code to test the property connectionId
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property connectionType (base name: "ConnectionType")', function() {
      // uncomment below and update the code to test the property connectionType
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property contentHandlingStrategy (base name: "ContentHandlingStrategy")', function() {
      // uncomment below and update the code to test the property contentHandlingStrategy
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property credentialsArn (base name: "CredentialsArn")', function() {
      // uncomment below and update the code to test the property credentialsArn
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property integrationId (base name: "IntegrationId")', function() {
      // uncomment below and update the code to test the property integrationId
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property integrationMethod (base name: "IntegrationMethod")', function() {
      // uncomment below and update the code to test the property integrationMethod
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property integrationResponseSelectionExpression (base name: "IntegrationResponseSelectionExpression")', function() {
      // uncomment below and update the code to test the property integrationResponseSelectionExpression
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property integrationSubtype (base name: "IntegrationSubtype")', function() {
      // uncomment below and update the code to test the property integrationSubtype
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property integrationType (base name: "IntegrationType")', function() {
      // uncomment below and update the code to test the property integrationType
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property integrationUri (base name: "IntegrationUri")', function() {
      // uncomment below and update the code to test the property integrationUri
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property passthroughBehavior (base name: "PassthroughBehavior")', function() {
      // uncomment below and update the code to test the property passthroughBehavior
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property payloadFormatVersion (base name: "PayloadFormatVersion")', function() {
      // uncomment below and update the code to test the property payloadFormatVersion
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property requestParameters (base name: "RequestParameters")', function() {
      // uncomment below and update the code to test the property requestParameters
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property requestTemplates (base name: "RequestTemplates")', function() {
      // uncomment below and update the code to test the property requestTemplates
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property responseParameters (base name: "ResponseParameters")', function() {
      // uncomment below and update the code to test the property responseParameters
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property templateSelectionExpression (base name: "TemplateSelectionExpression")', function() {
      // uncomment below and update the code to test the property templateSelectionExpression
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property timeoutInMillis (base name: "TimeoutInMillis")', function() {
      // uncomment below and update the code to test the property timeoutInMillis
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

    it('should have the property tlsConfig (base name: "TlsConfig")', function() {
      // uncomment below and update the code to test the property tlsConfig
      //var instance = new AmazonApiGatewayV2.CreateIntegrationResult();
      //expect(instance).to.be();
    });

  });

}));
