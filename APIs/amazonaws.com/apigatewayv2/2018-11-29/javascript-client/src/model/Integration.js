/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConnectionType from './ConnectionType';
import ContentHandlingStrategy from './ContentHandlingStrategy';
import CreateIntegrationResultTlsConfig from './CreateIntegrationResultTlsConfig';
import IntegrationType from './IntegrationType';
import PassthroughBehavior from './PassthroughBehavior';

/**
 * The Integration model module.
 * @module model/Integration
 * @version 2018-11-29
 */
class Integration {
    /**
     * Constructs a new <code>Integration</code>.
     * Represents an integration.
     * @alias module:model/Integration
     */
    constructor() { 
        
        Integration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Integration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Integration} obj Optional instance to populate.
     * @return {module:model/Integration} The populated <code>Integration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Integration();

            if (data.hasOwnProperty('ApiGatewayManaged')) {
                obj['ApiGatewayManaged'] = ApiClient.convertToType(data['ApiGatewayManaged'], 'Boolean');
            }
            if (data.hasOwnProperty('ConnectionId')) {
                obj['ConnectionId'] = ApiClient.convertToType(data['ConnectionId'], 'String');
            }
            if (data.hasOwnProperty('ConnectionType')) {
                obj['ConnectionType'] = ApiClient.convertToType(data['ConnectionType'], ConnectionType);
            }
            if (data.hasOwnProperty('ContentHandlingStrategy')) {
                obj['ContentHandlingStrategy'] = ApiClient.convertToType(data['ContentHandlingStrategy'], ContentHandlingStrategy);
            }
            if (data.hasOwnProperty('CredentialsArn')) {
                obj['CredentialsArn'] = ApiClient.convertToType(data['CredentialsArn'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('IntegrationId')) {
                obj['IntegrationId'] = ApiClient.convertToType(data['IntegrationId'], 'String');
            }
            if (data.hasOwnProperty('IntegrationMethod')) {
                obj['IntegrationMethod'] = ApiClient.convertToType(data['IntegrationMethod'], 'String');
            }
            if (data.hasOwnProperty('IntegrationResponseSelectionExpression')) {
                obj['IntegrationResponseSelectionExpression'] = ApiClient.convertToType(data['IntegrationResponseSelectionExpression'], 'String');
            }
            if (data.hasOwnProperty('IntegrationSubtype')) {
                obj['IntegrationSubtype'] = ApiClient.convertToType(data['IntegrationSubtype'], 'String');
            }
            if (data.hasOwnProperty('IntegrationType')) {
                obj['IntegrationType'] = ApiClient.convertToType(data['IntegrationType'], IntegrationType);
            }
            if (data.hasOwnProperty('IntegrationUri')) {
                obj['IntegrationUri'] = ApiClient.convertToType(data['IntegrationUri'], 'String');
            }
            if (data.hasOwnProperty('PassthroughBehavior')) {
                obj['PassthroughBehavior'] = ApiClient.convertToType(data['PassthroughBehavior'], PassthroughBehavior);
            }
            if (data.hasOwnProperty('PayloadFormatVersion')) {
                obj['PayloadFormatVersion'] = ApiClient.convertToType(data['PayloadFormatVersion'], 'String');
            }
            if (data.hasOwnProperty('RequestParameters')) {
                obj['RequestParameters'] = ApiClient.convertToType(data['RequestParameters'], Object);
            }
            if (data.hasOwnProperty('RequestTemplates')) {
                obj['RequestTemplates'] = ApiClient.convertToType(data['RequestTemplates'], Object);
            }
            if (data.hasOwnProperty('ResponseParameters')) {
                obj['ResponseParameters'] = ApiClient.convertToType(data['ResponseParameters'], Object);
            }
            if (data.hasOwnProperty('TemplateSelectionExpression')) {
                obj['TemplateSelectionExpression'] = ApiClient.convertToType(data['TemplateSelectionExpression'], 'String');
            }
            if (data.hasOwnProperty('TimeoutInMillis')) {
                obj['TimeoutInMillis'] = ApiClient.convertToType(data['TimeoutInMillis'], 'Number');
            }
            if (data.hasOwnProperty('TlsConfig')) {
                obj['TlsConfig'] = CreateIntegrationResultTlsConfig.constructFromObject(data['TlsConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Integration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Integration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ApiGatewayManaged`
        if (data['ApiGatewayManaged']) { // data not null
          Boolean.validateJSON(data['ApiGatewayManaged']);
        }
        // validate the optional field `ConnectionId`
        if (data['ConnectionId']) { // data not null
          String.validateJSON(data['ConnectionId']);
        }
        // validate the optional field `ConnectionType`
        if (data['ConnectionType']) { // data not null
          ConnectionType.validateJSON(data['ConnectionType']);
        }
        // validate the optional field `ContentHandlingStrategy`
        if (data['ContentHandlingStrategy']) { // data not null
          ContentHandlingStrategy.validateJSON(data['ContentHandlingStrategy']);
        }
        // validate the optional field `CredentialsArn`
        if (data['CredentialsArn']) { // data not null
          String.validateJSON(data['CredentialsArn']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `IntegrationId`
        if (data['IntegrationId']) { // data not null
          String.validateJSON(data['IntegrationId']);
        }
        // validate the optional field `IntegrationMethod`
        if (data['IntegrationMethod']) { // data not null
          String.validateJSON(data['IntegrationMethod']);
        }
        // validate the optional field `IntegrationResponseSelectionExpression`
        if (data['IntegrationResponseSelectionExpression']) { // data not null
          String.validateJSON(data['IntegrationResponseSelectionExpression']);
        }
        // validate the optional field `IntegrationSubtype`
        if (data['IntegrationSubtype']) { // data not null
          String.validateJSON(data['IntegrationSubtype']);
        }
        // validate the optional field `IntegrationType`
        if (data['IntegrationType']) { // data not null
          IntegrationType.validateJSON(data['IntegrationType']);
        }
        // validate the optional field `IntegrationUri`
        if (data['IntegrationUri']) { // data not null
          String.validateJSON(data['IntegrationUri']);
        }
        // validate the optional field `PassthroughBehavior`
        if (data['PassthroughBehavior']) { // data not null
          PassthroughBehavior.validateJSON(data['PassthroughBehavior']);
        }
        // validate the optional field `PayloadFormatVersion`
        if (data['PayloadFormatVersion']) { // data not null
          String.validateJSON(data['PayloadFormatVersion']);
        }
        // validate the optional field `RequestParameters`
        if (data['RequestParameters']) { // data not null
          Object.validateJSON(data['RequestParameters']);
        }
        // validate the optional field `RequestTemplates`
        if (data['RequestTemplates']) { // data not null
          Object.validateJSON(data['RequestTemplates']);
        }
        // validate the optional field `ResponseParameters`
        if (data['ResponseParameters']) { // data not null
          Object.validateJSON(data['ResponseParameters']);
        }
        // validate the optional field `TemplateSelectionExpression`
        if (data['TemplateSelectionExpression']) { // data not null
          String.validateJSON(data['TemplateSelectionExpression']);
        }
        // validate the optional field `TimeoutInMillis`
        if (data['TimeoutInMillis']) { // data not null
          Number.validateJSON(data['TimeoutInMillis']);
        }
        // validate the optional field `TlsConfig`
        if (data['TlsConfig']) { // data not null
          CreateIntegrationResultTlsConfig.validateJSON(data['TlsConfig']);
        }

        return true;
    }


}



/**
 * @member {Boolean} ApiGatewayManaged
 */
Integration.prototype['ApiGatewayManaged'] = undefined;

/**
 * @member {String} ConnectionId
 */
Integration.prototype['ConnectionId'] = undefined;

/**
 * @member {module:model/ConnectionType} ConnectionType
 */
Integration.prototype['ConnectionType'] = undefined;

/**
 * @member {module:model/ContentHandlingStrategy} ContentHandlingStrategy
 */
Integration.prototype['ContentHandlingStrategy'] = undefined;

/**
 * @member {String} CredentialsArn
 */
Integration.prototype['CredentialsArn'] = undefined;

/**
 * @member {String} Description
 */
Integration.prototype['Description'] = undefined;

/**
 * @member {String} IntegrationId
 */
Integration.prototype['IntegrationId'] = undefined;

/**
 * @member {String} IntegrationMethod
 */
Integration.prototype['IntegrationMethod'] = undefined;

/**
 * @member {String} IntegrationResponseSelectionExpression
 */
Integration.prototype['IntegrationResponseSelectionExpression'] = undefined;

/**
 * @member {String} IntegrationSubtype
 */
Integration.prototype['IntegrationSubtype'] = undefined;

/**
 * @member {module:model/IntegrationType} IntegrationType
 */
Integration.prototype['IntegrationType'] = undefined;

/**
 * @member {String} IntegrationUri
 */
Integration.prototype['IntegrationUri'] = undefined;

/**
 * @member {module:model/PassthroughBehavior} PassthroughBehavior
 */
Integration.prototype['PassthroughBehavior'] = undefined;

/**
 * @member {String} PayloadFormatVersion
 */
Integration.prototype['PayloadFormatVersion'] = undefined;

/**
 * @member {Object} RequestParameters
 */
Integration.prototype['RequestParameters'] = undefined;

/**
 * @member {Object} RequestTemplates
 */
Integration.prototype['RequestTemplates'] = undefined;

/**
 * @member {Object} ResponseParameters
 */
Integration.prototype['ResponseParameters'] = undefined;

/**
 * @member {String} TemplateSelectionExpression
 */
Integration.prototype['TemplateSelectionExpression'] = undefined;

/**
 * @member {Number} TimeoutInMillis
 */
Integration.prototype['TimeoutInMillis'] = undefined;

/**
 * @member {module:model/CreateIntegrationResultTlsConfig} TlsConfig
 */
Integration.prototype['TlsConfig'] = undefined;






export default Integration;

