/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateDomainNameRequestMutualTlsAuthentication from './CreateDomainNameRequestMutualTlsAuthentication';
import DomainNameConfiguration from './DomainNameConfiguration';

/**
 * The CreateDomainNameRequest model module.
 * @module model/CreateDomainNameRequest
 * @version 2018-11-29
 */
class CreateDomainNameRequest {
    /**
     * Constructs a new <code>CreateDomainNameRequest</code>.
     * @alias module:model/CreateDomainNameRequest
     * @param domainName {String} A string with a length between [1-512].
     */
    constructor(domainName) { 
        
        CreateDomainNameRequest.initialize(this, domainName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, domainName) { 
        obj['domainName'] = domainName;
    }

    /**
     * Constructs a <code>CreateDomainNameRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDomainNameRequest} obj Optional instance to populate.
     * @return {module:model/CreateDomainNameRequest} The populated <code>CreateDomainNameRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDomainNameRequest();

            if (data.hasOwnProperty('domainName')) {
                obj['domainName'] = ApiClient.convertToType(data['domainName'], 'String');
            }
            if (data.hasOwnProperty('domainNameConfigurations')) {
                obj['domainNameConfigurations'] = ApiClient.convertToType(data['domainNameConfigurations'], [DomainNameConfiguration]);
            }
            if (data.hasOwnProperty('mutualTlsAuthentication')) {
                obj['mutualTlsAuthentication'] = CreateDomainNameRequestMutualTlsAuthentication.constructFromObject(data['mutualTlsAuthentication']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDomainNameRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDomainNameRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateDomainNameRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['domainName'] && !(typeof data['domainName'] === 'string' || data['domainName'] instanceof String)) {
            throw new Error("Expected the field `domainName` to be a primitive type in the JSON string but got " + data['domainName']);
        }
        if (data['domainNameConfigurations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['domainNameConfigurations'])) {
                throw new Error("Expected the field `domainNameConfigurations` to be an array in the JSON data but got " + data['domainNameConfigurations']);
            }
            // validate the optional field `domainNameConfigurations` (array)
            for (const item of data['domainNameConfigurations']) {
                DomainNameConfiguration.validateJSON(item);
            };
        }
        // validate the optional field `mutualTlsAuthentication`
        if (data['mutualTlsAuthentication']) { // data not null
          CreateDomainNameRequestMutualTlsAuthentication.validateJSON(data['mutualTlsAuthentication']);
        }

        return true;
    }


}

CreateDomainNameRequest.RequiredProperties = ["domainName"];

/**
 * A string with a length between [1-512].
 * @member {String} domainName
 */
CreateDomainNameRequest.prototype['domainName'] = undefined;

/**
 * The domain name configurations.
 * @member {Array.<module:model/DomainNameConfiguration>} domainNameConfigurations
 */
CreateDomainNameRequest.prototype['domainNameConfigurations'] = undefined;

/**
 * @member {module:model/CreateDomainNameRequestMutualTlsAuthentication} mutualTlsAuthentication
 */
CreateDomainNameRequest.prototype['mutualTlsAuthentication'] = undefined;

/**
 * Represents a collection of tags associated with the resource.
 * @member {Object.<String, String>} tags
 */
CreateDomainNameRequest.prototype['tags'] = undefined;






export default CreateDomainNameRequest;

