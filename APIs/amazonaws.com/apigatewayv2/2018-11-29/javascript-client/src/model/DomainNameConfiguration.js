/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DomainNameStatus from './DomainNameStatus';
import EndpointType from './EndpointType';
import SecurityPolicy from './SecurityPolicy';

/**
 * The DomainNameConfiguration model module.
 * @module model/DomainNameConfiguration
 * @version 2018-11-29
 */
class DomainNameConfiguration {
    /**
     * Constructs a new <code>DomainNameConfiguration</code>.
     * The domain name configuration.
     * @alias module:model/DomainNameConfiguration
     */
    constructor() { 
        
        DomainNameConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DomainNameConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DomainNameConfiguration} obj Optional instance to populate.
     * @return {module:model/DomainNameConfiguration} The populated <code>DomainNameConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DomainNameConfiguration();

            if (data.hasOwnProperty('ApiGatewayDomainName')) {
                obj['ApiGatewayDomainName'] = ApiClient.convertToType(data['ApiGatewayDomainName'], 'String');
            }
            if (data.hasOwnProperty('CertificateArn')) {
                obj['CertificateArn'] = ApiClient.convertToType(data['CertificateArn'], 'String');
            }
            if (data.hasOwnProperty('CertificateName')) {
                obj['CertificateName'] = ApiClient.convertToType(data['CertificateName'], 'String');
            }
            if (data.hasOwnProperty('CertificateUploadDate')) {
                obj['CertificateUploadDate'] = ApiClient.convertToType(data['CertificateUploadDate'], 'Date');
            }
            if (data.hasOwnProperty('DomainNameStatus')) {
                obj['DomainNameStatus'] = ApiClient.convertToType(data['DomainNameStatus'], DomainNameStatus);
            }
            if (data.hasOwnProperty('DomainNameStatusMessage')) {
                obj['DomainNameStatusMessage'] = ApiClient.convertToType(data['DomainNameStatusMessage'], 'String');
            }
            if (data.hasOwnProperty('EndpointType')) {
                obj['EndpointType'] = ApiClient.convertToType(data['EndpointType'], EndpointType);
            }
            if (data.hasOwnProperty('HostedZoneId')) {
                obj['HostedZoneId'] = ApiClient.convertToType(data['HostedZoneId'], 'String');
            }
            if (data.hasOwnProperty('SecurityPolicy')) {
                obj['SecurityPolicy'] = ApiClient.convertToType(data['SecurityPolicy'], SecurityPolicy);
            }
            if (data.hasOwnProperty('OwnershipVerificationCertificateArn')) {
                obj['OwnershipVerificationCertificateArn'] = ApiClient.convertToType(data['OwnershipVerificationCertificateArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DomainNameConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DomainNameConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ApiGatewayDomainName`
        if (data['ApiGatewayDomainName']) { // data not null
          String.validateJSON(data['ApiGatewayDomainName']);
        }
        // validate the optional field `CertificateArn`
        if (data['CertificateArn']) { // data not null
          String.validateJSON(data['CertificateArn']);
        }
        // validate the optional field `CertificateName`
        if (data['CertificateName']) { // data not null
          String.validateJSON(data['CertificateName']);
        }
        // validate the optional field `CertificateUploadDate`
        if (data['CertificateUploadDate']) { // data not null
          Date.validateJSON(data['CertificateUploadDate']);
        }
        // validate the optional field `DomainNameStatus`
        if (data['DomainNameStatus']) { // data not null
          DomainNameStatus.validateJSON(data['DomainNameStatus']);
        }
        // validate the optional field `DomainNameStatusMessage`
        if (data['DomainNameStatusMessage']) { // data not null
          String.validateJSON(data['DomainNameStatusMessage']);
        }
        // validate the optional field `EndpointType`
        if (data['EndpointType']) { // data not null
          EndpointType.validateJSON(data['EndpointType']);
        }
        // validate the optional field `HostedZoneId`
        if (data['HostedZoneId']) { // data not null
          String.validateJSON(data['HostedZoneId']);
        }
        // validate the optional field `SecurityPolicy`
        if (data['SecurityPolicy']) { // data not null
          SecurityPolicy.validateJSON(data['SecurityPolicy']);
        }
        // validate the optional field `OwnershipVerificationCertificateArn`
        if (data['OwnershipVerificationCertificateArn']) { // data not null
          String.validateJSON(data['OwnershipVerificationCertificateArn']);
        }

        return true;
    }


}



/**
 * @member {String} ApiGatewayDomainName
 */
DomainNameConfiguration.prototype['ApiGatewayDomainName'] = undefined;

/**
 * @member {String} CertificateArn
 */
DomainNameConfiguration.prototype['CertificateArn'] = undefined;

/**
 * @member {String} CertificateName
 */
DomainNameConfiguration.prototype['CertificateName'] = undefined;

/**
 * @member {Date} CertificateUploadDate
 */
DomainNameConfiguration.prototype['CertificateUploadDate'] = undefined;

/**
 * @member {module:model/DomainNameStatus} DomainNameStatus
 */
DomainNameConfiguration.prototype['DomainNameStatus'] = undefined;

/**
 * @member {String} DomainNameStatusMessage
 */
DomainNameConfiguration.prototype['DomainNameStatusMessage'] = undefined;

/**
 * @member {module:model/EndpointType} EndpointType
 */
DomainNameConfiguration.prototype['EndpointType'] = undefined;

/**
 * @member {String} HostedZoneId
 */
DomainNameConfiguration.prototype['HostedZoneId'] = undefined;

/**
 * @member {module:model/SecurityPolicy} SecurityPolicy
 */
DomainNameConfiguration.prototype['SecurityPolicy'] = undefined;

/**
 * @member {String} OwnershipVerificationCertificateArn
 */
DomainNameConfiguration.prototype['OwnershipVerificationCertificateArn'] = undefined;






export default DomainNameConfiguration;

