/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateIntegrationRequestTlsConfig from './CreateIntegrationRequestTlsConfig';

/**
 * The CreateIntegrationRequest model module.
 * @module model/CreateIntegrationRequest
 * @version 2018-11-29
 */
class CreateIntegrationRequest {
    /**
     * Constructs a new <code>CreateIntegrationRequest</code>.
     * @alias module:model/CreateIntegrationRequest
     * @param integrationType {module:model/CreateIntegrationRequest.IntegrationTypeEnum} Represents an API method integration type.
     */
    constructor(integrationType) { 
        
        CreateIntegrationRequest.initialize(this, integrationType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, integrationType) { 
        obj['integrationType'] = integrationType;
    }

    /**
     * Constructs a <code>CreateIntegrationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateIntegrationRequest} obj Optional instance to populate.
     * @return {module:model/CreateIntegrationRequest} The populated <code>CreateIntegrationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateIntegrationRequest();

            if (data.hasOwnProperty('connectionId')) {
                obj['connectionId'] = ApiClient.convertToType(data['connectionId'], 'String');
            }
            if (data.hasOwnProperty('connectionType')) {
                obj['connectionType'] = ApiClient.convertToType(data['connectionType'], 'String');
            }
            if (data.hasOwnProperty('contentHandlingStrategy')) {
                obj['contentHandlingStrategy'] = ApiClient.convertToType(data['contentHandlingStrategy'], 'String');
            }
            if (data.hasOwnProperty('credentialsArn')) {
                obj['credentialsArn'] = ApiClient.convertToType(data['credentialsArn'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('integrationMethod')) {
                obj['integrationMethod'] = ApiClient.convertToType(data['integrationMethod'], 'String');
            }
            if (data.hasOwnProperty('integrationSubtype')) {
                obj['integrationSubtype'] = ApiClient.convertToType(data['integrationSubtype'], 'String');
            }
            if (data.hasOwnProperty('integrationType')) {
                obj['integrationType'] = ApiClient.convertToType(data['integrationType'], 'String');
            }
            if (data.hasOwnProperty('integrationUri')) {
                obj['integrationUri'] = ApiClient.convertToType(data['integrationUri'], 'String');
            }
            if (data.hasOwnProperty('passthroughBehavior')) {
                obj['passthroughBehavior'] = ApiClient.convertToType(data['passthroughBehavior'], 'String');
            }
            if (data.hasOwnProperty('payloadFormatVersion')) {
                obj['payloadFormatVersion'] = ApiClient.convertToType(data['payloadFormatVersion'], 'String');
            }
            if (data.hasOwnProperty('requestParameters')) {
                obj['requestParameters'] = ApiClient.convertToType(data['requestParameters'], {'String': 'String'});
            }
            if (data.hasOwnProperty('requestTemplates')) {
                obj['requestTemplates'] = ApiClient.convertToType(data['requestTemplates'], {'String': 'String'});
            }
            if (data.hasOwnProperty('responseParameters')) {
                obj['responseParameters'] = ApiClient.convertToType(data['responseParameters'], {'String': Object});
            }
            if (data.hasOwnProperty('templateSelectionExpression')) {
                obj['templateSelectionExpression'] = ApiClient.convertToType(data['templateSelectionExpression'], 'String');
            }
            if (data.hasOwnProperty('timeoutInMillis')) {
                obj['timeoutInMillis'] = ApiClient.convertToType(data['timeoutInMillis'], 'Number');
            }
            if (data.hasOwnProperty('tlsConfig')) {
                obj['tlsConfig'] = CreateIntegrationRequestTlsConfig.constructFromObject(data['tlsConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateIntegrationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateIntegrationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateIntegrationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['connectionId'] && !(typeof data['connectionId'] === 'string' || data['connectionId'] instanceof String)) {
            throw new Error("Expected the field `connectionId` to be a primitive type in the JSON string but got " + data['connectionId']);
        }
        // ensure the json data is a string
        if (data['connectionType'] && !(typeof data['connectionType'] === 'string' || data['connectionType'] instanceof String)) {
            throw new Error("Expected the field `connectionType` to be a primitive type in the JSON string but got " + data['connectionType']);
        }
        // ensure the json data is a string
        if (data['contentHandlingStrategy'] && !(typeof data['contentHandlingStrategy'] === 'string' || data['contentHandlingStrategy'] instanceof String)) {
            throw new Error("Expected the field `contentHandlingStrategy` to be a primitive type in the JSON string but got " + data['contentHandlingStrategy']);
        }
        // ensure the json data is a string
        if (data['credentialsArn'] && !(typeof data['credentialsArn'] === 'string' || data['credentialsArn'] instanceof String)) {
            throw new Error("Expected the field `credentialsArn` to be a primitive type in the JSON string but got " + data['credentialsArn']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['integrationMethod'] && !(typeof data['integrationMethod'] === 'string' || data['integrationMethod'] instanceof String)) {
            throw new Error("Expected the field `integrationMethod` to be a primitive type in the JSON string but got " + data['integrationMethod']);
        }
        // ensure the json data is a string
        if (data['integrationSubtype'] && !(typeof data['integrationSubtype'] === 'string' || data['integrationSubtype'] instanceof String)) {
            throw new Error("Expected the field `integrationSubtype` to be a primitive type in the JSON string but got " + data['integrationSubtype']);
        }
        // ensure the json data is a string
        if (data['integrationType'] && !(typeof data['integrationType'] === 'string' || data['integrationType'] instanceof String)) {
            throw new Error("Expected the field `integrationType` to be a primitive type in the JSON string but got " + data['integrationType']);
        }
        // ensure the json data is a string
        if (data['integrationUri'] && !(typeof data['integrationUri'] === 'string' || data['integrationUri'] instanceof String)) {
            throw new Error("Expected the field `integrationUri` to be a primitive type in the JSON string but got " + data['integrationUri']);
        }
        // ensure the json data is a string
        if (data['passthroughBehavior'] && !(typeof data['passthroughBehavior'] === 'string' || data['passthroughBehavior'] instanceof String)) {
            throw new Error("Expected the field `passthroughBehavior` to be a primitive type in the JSON string but got " + data['passthroughBehavior']);
        }
        // ensure the json data is a string
        if (data['payloadFormatVersion'] && !(typeof data['payloadFormatVersion'] === 'string' || data['payloadFormatVersion'] instanceof String)) {
            throw new Error("Expected the field `payloadFormatVersion` to be a primitive type in the JSON string but got " + data['payloadFormatVersion']);
        }
        // ensure the json data is a string
        if (data['templateSelectionExpression'] && !(typeof data['templateSelectionExpression'] === 'string' || data['templateSelectionExpression'] instanceof String)) {
            throw new Error("Expected the field `templateSelectionExpression` to be a primitive type in the JSON string but got " + data['templateSelectionExpression']);
        }
        // validate the optional field `tlsConfig`
        if (data['tlsConfig']) { // data not null
          CreateIntegrationRequestTlsConfig.validateJSON(data['tlsConfig']);
        }

        return true;
    }


}

CreateIntegrationRequest.RequiredProperties = ["integrationType"];

/**
 * A string with a length between [1-1024].
 * @member {String} connectionId
 */
CreateIntegrationRequest.prototype['connectionId'] = undefined;

/**
 * Represents a connection type.
 * @member {module:model/CreateIntegrationRequest.ConnectionTypeEnum} connectionType
 */
CreateIntegrationRequest.prototype['connectionType'] = undefined;

/**
 * Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
 * @member {module:model/CreateIntegrationRequest.ContentHandlingStrategyEnum} contentHandlingStrategy
 */
CreateIntegrationRequest.prototype['contentHandlingStrategy'] = undefined;

/**
 * Represents an Amazon Resource Name (ARN).
 * @member {String} credentialsArn
 */
CreateIntegrationRequest.prototype['credentialsArn'] = undefined;

/**
 * A string with a length between [0-1024].
 * @member {String} description
 */
CreateIntegrationRequest.prototype['description'] = undefined;

/**
 * A string with a length between [1-64].
 * @member {String} integrationMethod
 */
CreateIntegrationRequest.prototype['integrationMethod'] = undefined;

/**
 * A string with a length between [1-128].
 * @member {String} integrationSubtype
 */
CreateIntegrationRequest.prototype['integrationSubtype'] = undefined;

/**
 * Represents an API method integration type.
 * @member {module:model/CreateIntegrationRequest.IntegrationTypeEnum} integrationType
 */
CreateIntegrationRequest.prototype['integrationType'] = undefined;

/**
 * A string representation of a URI with a length between [1-2048].
 * @member {String} integrationUri
 */
CreateIntegrationRequest.prototype['integrationUri'] = undefined;

/**
 * Represents passthrough behavior for an integration response. Supported only for WebSocket APIs.
 * @member {module:model/CreateIntegrationRequest.PassthroughBehaviorEnum} passthroughBehavior
 */
CreateIntegrationRequest.prototype['passthroughBehavior'] = undefined;

/**
 * A string with a length between [1-64].
 * @member {String} payloadFormatVersion
 */
CreateIntegrationRequest.prototype['payloadFormatVersion'] = undefined;

/**
 * <p>For WebSocket APIs, a key-value map specifying request parameters that are passed from the method request to the backend. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the backend. The method request parameter value must match the pattern of method.request.<replaceable>{location}</replaceable>.<replaceable>{name}</replaceable>           , where              <replaceable>{location}</replaceable>            is querystring, path, or header; and              <replaceable>{name}</replaceable>            must be a valid and unique method request parameter name.</p> <p>For HTTP API integrations with a specified integrationSubtype, request parameters are a key-value map specifying parameters that are passed to AWS_PROXY integrations. You can provide static values, or map request data, stage variables, or context variables that are evaluated at runtime. To learn more, see <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-aws-services.html\">Working with AWS service integrations for HTTP APIs</a>.</p> <p>For HTTP API integrations without a specified integrationSubtype request parameters are a key-value map specifying how to transform HTTP requests before sending them to the backend. The key should follow the pattern &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt; where action can be append, overwrite or remove. For values, you can provide static values, or map request data, stage variables, or context variables that are evaluated at runtime. To learn more, see <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html\">Transforming API requests and responses</a>.</p>
 * @member {Object.<String, String>} requestParameters
 */
CreateIntegrationRequest.prototype['requestParameters'] = undefined;

/**
 * A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
 * @member {Object.<String, String>} requestTemplates
 */
CreateIntegrationRequest.prototype['requestTemplates'] = undefined;

/**
 * Supported only for HTTP APIs. You use response parameters to transform the HTTP response from a backend integration before returning the response to clients.
 * @member {Object.<String, Object.<String, String>>} responseParameters
 */
CreateIntegrationRequest.prototype['responseParameters'] = undefined;

/**
 * An expression used to extract information at runtime. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\">Selection Expressions</a> for more information.
 * @member {String} templateSelectionExpression
 */
CreateIntegrationRequest.prototype['templateSelectionExpression'] = undefined;

/**
 * An integer with a value between [50-30000].
 * @member {Number} timeoutInMillis
 */
CreateIntegrationRequest.prototype['timeoutInMillis'] = undefined;

/**
 * @member {module:model/CreateIntegrationRequestTlsConfig} tlsConfig
 */
CreateIntegrationRequest.prototype['tlsConfig'] = undefined;





/**
 * Allowed values for the <code>connectionType</code> property.
 * @enum {String}
 * @readonly
 */
CreateIntegrationRequest['ConnectionTypeEnum'] = {

    /**
     * value: "INTERNET"
     * @const
     */
    "INTERNET": "INTERNET",

    /**
     * value: "VPC_LINK"
     * @const
     */
    "VPC_LINK": "VPC_LINK"
};


/**
 * Allowed values for the <code>contentHandlingStrategy</code> property.
 * @enum {String}
 * @readonly
 */
CreateIntegrationRequest['ContentHandlingStrategyEnum'] = {

    /**
     * value: "CONVERT_TO_BINARY"
     * @const
     */
    "BINARY": "CONVERT_TO_BINARY",

    /**
     * value: "CONVERT_TO_TEXT"
     * @const
     */
    "TEXT": "CONVERT_TO_TEXT"
};


/**
 * Allowed values for the <code>integrationType</code> property.
 * @enum {String}
 * @readonly
 */
CreateIntegrationRequest['IntegrationTypeEnum'] = {

    /**
     * value: "AWS"
     * @const
     */
    "AWS": "AWS",

    /**
     * value: "HTTP"
     * @const
     */
    "HTTP": "HTTP",

    /**
     * value: "MOCK"
     * @const
     */
    "MOCK": "MOCK",

    /**
     * value: "HTTP_PROXY"
     * @const
     */
    "HTTP_PROXY": "HTTP_PROXY",

    /**
     * value: "AWS_PROXY"
     * @const
     */
    "AWS_PROXY": "AWS_PROXY"
};


/**
 * Allowed values for the <code>passthroughBehavior</code> property.
 * @enum {String}
 * @readonly
 */
CreateIntegrationRequest['PassthroughBehaviorEnum'] = {

    /**
     * value: "WHEN_NO_MATCH"
     * @const
     */
    "WHEN_NO_MATCH": "WHEN_NO_MATCH",

    /**
     * value: "NEVER"
     * @const
     */
    "NEVER": "NEVER",

    /**
     * value: "WHEN_NO_TEMPLATES"
     * @const
     */
    "WHEN_NO_TEMPLATES": "WHEN_NO_TEMPLATES"
};



export default CreateIntegrationRequest;

