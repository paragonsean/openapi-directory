/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuthorizerType from './AuthorizerType';
import CreateAuthorizerResponseJwtConfiguration from './CreateAuthorizerResponseJwtConfiguration';

/**
 * The UpdateAuthorizerResponse model module.
 * @module model/UpdateAuthorizerResponse
 * @version 2018-11-29
 */
class UpdateAuthorizerResponse {
    /**
     * Constructs a new <code>UpdateAuthorizerResponse</code>.
     * @alias module:model/UpdateAuthorizerResponse
     */
    constructor() { 
        
        UpdateAuthorizerResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateAuthorizerResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateAuthorizerResponse} obj Optional instance to populate.
     * @return {module:model/UpdateAuthorizerResponse} The populated <code>UpdateAuthorizerResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateAuthorizerResponse();

            if (data.hasOwnProperty('AuthorizerCredentialsArn')) {
                obj['AuthorizerCredentialsArn'] = ApiClient.convertToType(data['AuthorizerCredentialsArn'], 'String');
            }
            if (data.hasOwnProperty('AuthorizerId')) {
                obj['AuthorizerId'] = ApiClient.convertToType(data['AuthorizerId'], 'String');
            }
            if (data.hasOwnProperty('AuthorizerPayloadFormatVersion')) {
                obj['AuthorizerPayloadFormatVersion'] = ApiClient.convertToType(data['AuthorizerPayloadFormatVersion'], 'String');
            }
            if (data.hasOwnProperty('AuthorizerResultTtlInSeconds')) {
                obj['AuthorizerResultTtlInSeconds'] = ApiClient.convertToType(data['AuthorizerResultTtlInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('AuthorizerType')) {
                obj['AuthorizerType'] = ApiClient.convertToType(data['AuthorizerType'], AuthorizerType);
            }
            if (data.hasOwnProperty('AuthorizerUri')) {
                obj['AuthorizerUri'] = ApiClient.convertToType(data['AuthorizerUri'], 'String');
            }
            if (data.hasOwnProperty('EnableSimpleResponses')) {
                obj['EnableSimpleResponses'] = ApiClient.convertToType(data['EnableSimpleResponses'], 'Boolean');
            }
            if (data.hasOwnProperty('IdentitySource')) {
                obj['IdentitySource'] = ApiClient.convertToType(data['IdentitySource'], Array);
            }
            if (data.hasOwnProperty('IdentityValidationExpression')) {
                obj['IdentityValidationExpression'] = ApiClient.convertToType(data['IdentityValidationExpression'], 'String');
            }
            if (data.hasOwnProperty('JwtConfiguration')) {
                obj['JwtConfiguration'] = CreateAuthorizerResponseJwtConfiguration.constructFromObject(data['JwtConfiguration']);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateAuthorizerResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateAuthorizerResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AuthorizerCredentialsArn`
        if (data['AuthorizerCredentialsArn']) { // data not null
          String.validateJSON(data['AuthorizerCredentialsArn']);
        }
        // validate the optional field `AuthorizerId`
        if (data['AuthorizerId']) { // data not null
          String.validateJSON(data['AuthorizerId']);
        }
        // validate the optional field `AuthorizerPayloadFormatVersion`
        if (data['AuthorizerPayloadFormatVersion']) { // data not null
          String.validateJSON(data['AuthorizerPayloadFormatVersion']);
        }
        // validate the optional field `AuthorizerResultTtlInSeconds`
        if (data['AuthorizerResultTtlInSeconds']) { // data not null
          Number.validateJSON(data['AuthorizerResultTtlInSeconds']);
        }
        // validate the optional field `AuthorizerType`
        if (data['AuthorizerType']) { // data not null
          AuthorizerType.validateJSON(data['AuthorizerType']);
        }
        // validate the optional field `AuthorizerUri`
        if (data['AuthorizerUri']) { // data not null
          String.validateJSON(data['AuthorizerUri']);
        }
        // validate the optional field `EnableSimpleResponses`
        if (data['EnableSimpleResponses']) { // data not null
          Boolean.validateJSON(data['EnableSimpleResponses']);
        }
        // validate the optional field `IdentitySource`
        if (data['IdentitySource']) { // data not null
          Array.validateJSON(data['IdentitySource']);
        }
        // validate the optional field `IdentityValidationExpression`
        if (data['IdentityValidationExpression']) { // data not null
          String.validateJSON(data['IdentityValidationExpression']);
        }
        // validate the optional field `JwtConfiguration`
        if (data['JwtConfiguration']) { // data not null
          CreateAuthorizerResponseJwtConfiguration.validateJSON(data['JwtConfiguration']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }

        return true;
    }


}



/**
 * @member {String} AuthorizerCredentialsArn
 */
UpdateAuthorizerResponse.prototype['AuthorizerCredentialsArn'] = undefined;

/**
 * @member {String} AuthorizerId
 */
UpdateAuthorizerResponse.prototype['AuthorizerId'] = undefined;

/**
 * @member {String} AuthorizerPayloadFormatVersion
 */
UpdateAuthorizerResponse.prototype['AuthorizerPayloadFormatVersion'] = undefined;

/**
 * @member {Number} AuthorizerResultTtlInSeconds
 */
UpdateAuthorizerResponse.prototype['AuthorizerResultTtlInSeconds'] = undefined;

/**
 * @member {module:model/AuthorizerType} AuthorizerType
 */
UpdateAuthorizerResponse.prototype['AuthorizerType'] = undefined;

/**
 * @member {String} AuthorizerUri
 */
UpdateAuthorizerResponse.prototype['AuthorizerUri'] = undefined;

/**
 * @member {Boolean} EnableSimpleResponses
 */
UpdateAuthorizerResponse.prototype['EnableSimpleResponses'] = undefined;

/**
 * @member {Array} IdentitySource
 */
UpdateAuthorizerResponse.prototype['IdentitySource'] = undefined;

/**
 * @member {String} IdentityValidationExpression
 */
UpdateAuthorizerResponse.prototype['IdentityValidationExpression'] = undefined;

/**
 * @member {module:model/CreateAuthorizerResponseJwtConfiguration} JwtConfiguration
 */
UpdateAuthorizerResponse.prototype['JwtConfiguration'] = undefined;

/**
 * @member {String} Name
 */
UpdateAuthorizerResponse.prototype['Name'] = undefined;






export default UpdateAuthorizerResponse;

