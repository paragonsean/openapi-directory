/**
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ParameterConstraints from './ParameterConstraints';

/**
 * The CreateRouteRequest model module.
 * @module model/CreateRouteRequest
 * @version 2018-11-29
 */
class CreateRouteRequest {
    /**
     * Constructs a new <code>CreateRouteRequest</code>.
     * @alias module:model/CreateRouteRequest
     * @param routeKey {String} After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
     */
    constructor(routeKey) { 
        
        CreateRouteRequest.initialize(this, routeKey);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, routeKey) { 
        obj['routeKey'] = routeKey;
    }

    /**
     * Constructs a <code>CreateRouteRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateRouteRequest} obj Optional instance to populate.
     * @return {module:model/CreateRouteRequest} The populated <code>CreateRouteRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateRouteRequest();

            if (data.hasOwnProperty('apiKeyRequired')) {
                obj['apiKeyRequired'] = ApiClient.convertToType(data['apiKeyRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('authorizationScopes')) {
                obj['authorizationScopes'] = ApiClient.convertToType(data['authorizationScopes'], ['String']);
            }
            if (data.hasOwnProperty('authorizationType')) {
                obj['authorizationType'] = ApiClient.convertToType(data['authorizationType'], 'String');
            }
            if (data.hasOwnProperty('authorizerId')) {
                obj['authorizerId'] = ApiClient.convertToType(data['authorizerId'], 'String');
            }
            if (data.hasOwnProperty('modelSelectionExpression')) {
                obj['modelSelectionExpression'] = ApiClient.convertToType(data['modelSelectionExpression'], 'String');
            }
            if (data.hasOwnProperty('operationName')) {
                obj['operationName'] = ApiClient.convertToType(data['operationName'], 'String');
            }
            if (data.hasOwnProperty('requestModels')) {
                obj['requestModels'] = ApiClient.convertToType(data['requestModels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('requestParameters')) {
                obj['requestParameters'] = ApiClient.convertToType(data['requestParameters'], {'String': ParameterConstraints});
            }
            if (data.hasOwnProperty('routeKey')) {
                obj['routeKey'] = ApiClient.convertToType(data['routeKey'], 'String');
            }
            if (data.hasOwnProperty('routeResponseSelectionExpression')) {
                obj['routeResponseSelectionExpression'] = ApiClient.convertToType(data['routeResponseSelectionExpression'], 'String');
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = ApiClient.convertToType(data['target'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateRouteRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateRouteRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateRouteRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['authorizationScopes'])) {
            throw new Error("Expected the field `authorizationScopes` to be an array in the JSON data but got " + data['authorizationScopes']);
        }
        // ensure the json data is a string
        if (data['authorizationType'] && !(typeof data['authorizationType'] === 'string' || data['authorizationType'] instanceof String)) {
            throw new Error("Expected the field `authorizationType` to be a primitive type in the JSON string but got " + data['authorizationType']);
        }
        // ensure the json data is a string
        if (data['authorizerId'] && !(typeof data['authorizerId'] === 'string' || data['authorizerId'] instanceof String)) {
            throw new Error("Expected the field `authorizerId` to be a primitive type in the JSON string but got " + data['authorizerId']);
        }
        // ensure the json data is a string
        if (data['modelSelectionExpression'] && !(typeof data['modelSelectionExpression'] === 'string' || data['modelSelectionExpression'] instanceof String)) {
            throw new Error("Expected the field `modelSelectionExpression` to be a primitive type in the JSON string but got " + data['modelSelectionExpression']);
        }
        // ensure the json data is a string
        if (data['operationName'] && !(typeof data['operationName'] === 'string' || data['operationName'] instanceof String)) {
            throw new Error("Expected the field `operationName` to be a primitive type in the JSON string but got " + data['operationName']);
        }
        // ensure the json data is a string
        if (data['routeKey'] && !(typeof data['routeKey'] === 'string' || data['routeKey'] instanceof String)) {
            throw new Error("Expected the field `routeKey` to be a primitive type in the JSON string but got " + data['routeKey']);
        }
        // ensure the json data is a string
        if (data['routeResponseSelectionExpression'] && !(typeof data['routeResponseSelectionExpression'] === 'string' || data['routeResponseSelectionExpression'] instanceof String)) {
            throw new Error("Expected the field `routeResponseSelectionExpression` to be a primitive type in the JSON string but got " + data['routeResponseSelectionExpression']);
        }
        // ensure the json data is a string
        if (data['target'] && !(typeof data['target'] === 'string' || data['target'] instanceof String)) {
            throw new Error("Expected the field `target` to be a primitive type in the JSON string but got " + data['target']);
        }

        return true;
    }


}

CreateRouteRequest.RequiredProperties = ["routeKey"];

/**
 * Specifies whether an API key is required for the route. Supported only for WebSocket APIs.
 * @member {Boolean} apiKeyRequired
 */
CreateRouteRequest.prototype['apiKeyRequired'] = undefined;

/**
 * A list of authorization scopes configured on a route. The scopes are used with a JWT authorizer to authorize the method invocation. The authorization works by matching the route scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any route scope matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the route scope is configured, the client must provide an access token instead of an identity token for authorization purposes.
 * @member {Array.<String>} authorizationScopes
 */
CreateRouteRequest.prototype['authorizationScopes'] = undefined;

/**
 * The authorization type. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer. For HTTP APIs, valid values are NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
 * @member {module:model/CreateRouteRequest.AuthorizationTypeEnum} authorizationType
 */
CreateRouteRequest.prototype['authorizationType'] = undefined;

/**
 * The identifier.
 * @member {String} authorizerId
 */
CreateRouteRequest.prototype['authorizerId'] = undefined;

/**
 * An expression used to extract information at runtime. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\">Selection Expressions</a> for more information.
 * @member {String} modelSelectionExpression
 */
CreateRouteRequest.prototype['modelSelectionExpression'] = undefined;

/**
 * A string with a length between [1-64].
 * @member {String} operationName
 */
CreateRouteRequest.prototype['operationName'] = undefined;

/**
 * The route models.
 * @member {Object.<String, String>} requestModels
 */
CreateRouteRequest.prototype['requestModels'] = undefined;

/**
 * The route parameters.
 * @member {Object.<String, module:model/ParameterConstraints>} requestParameters
 */
CreateRouteRequest.prototype['requestParameters'] = undefined;

/**
 * After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
 * @member {String} routeKey
 */
CreateRouteRequest.prototype['routeKey'] = undefined;

/**
 * An expression used to extract information at runtime. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\">Selection Expressions</a> for more information.
 * @member {String} routeResponseSelectionExpression
 */
CreateRouteRequest.prototype['routeResponseSelectionExpression'] = undefined;

/**
 * A string with a length between [1-128].
 * @member {String} target
 */
CreateRouteRequest.prototype['target'] = undefined;





/**
 * Allowed values for the <code>authorizationType</code> property.
 * @enum {String}
 * @readonly
 */
CreateRouteRequest['AuthorizationTypeEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "AWS_IAM"
     * @const
     */
    "AWS_IAM": "AWS_IAM",

    /**
     * value: "CUSTOM"
     * @const
     */
    "CUSTOM": "CUSTOM",

    /**
     * value: "JWT"
     * @const
     */
    "JWT": "JWT"
};



export default CreateRouteRequest;

