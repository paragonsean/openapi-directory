/*
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.ConnectionType;
import org.openapitools.client.model.ContentHandlingStrategy;
import org.openapitools.client.model.CreateIntegrationResultTlsConfig;
import org.openapitools.client.model.IntegrationType;
import org.openapitools.client.model.PassthroughBehavior;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetIntegrationResult
 */
public class GetIntegrationResultTest {
    private final GetIntegrationResult model = new GetIntegrationResult();

    /**
     * Model tests for GetIntegrationResult
     */
    @Test
    public void testGetIntegrationResult() {
        // TODO: test GetIntegrationResult
    }

    /**
     * Test the property 'apiGatewayManaged'
     */
    @Test
    public void apiGatewayManagedTest() {
        // TODO: test apiGatewayManaged
    }

    /**
     * Test the property 'connectionId'
     */
    @Test
    public void connectionIdTest() {
        // TODO: test connectionId
    }

    /**
     * Test the property 'connectionType'
     */
    @Test
    public void connectionTypeTest() {
        // TODO: test connectionType
    }

    /**
     * Test the property 'contentHandlingStrategy'
     */
    @Test
    public void contentHandlingStrategyTest() {
        // TODO: test contentHandlingStrategy
    }

    /**
     * Test the property 'credentialsArn'
     */
    @Test
    public void credentialsArnTest() {
        // TODO: test credentialsArn
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'integrationId'
     */
    @Test
    public void integrationIdTest() {
        // TODO: test integrationId
    }

    /**
     * Test the property 'integrationMethod'
     */
    @Test
    public void integrationMethodTest() {
        // TODO: test integrationMethod
    }

    /**
     * Test the property 'integrationResponseSelectionExpression'
     */
    @Test
    public void integrationResponseSelectionExpressionTest() {
        // TODO: test integrationResponseSelectionExpression
    }

    /**
     * Test the property 'integrationSubtype'
     */
    @Test
    public void integrationSubtypeTest() {
        // TODO: test integrationSubtype
    }

    /**
     * Test the property 'integrationType'
     */
    @Test
    public void integrationTypeTest() {
        // TODO: test integrationType
    }

    /**
     * Test the property 'integrationUri'
     */
    @Test
    public void integrationUriTest() {
        // TODO: test integrationUri
    }

    /**
     * Test the property 'passthroughBehavior'
     */
    @Test
    public void passthroughBehaviorTest() {
        // TODO: test passthroughBehavior
    }

    /**
     * Test the property 'payloadFormatVersion'
     */
    @Test
    public void payloadFormatVersionTest() {
        // TODO: test payloadFormatVersion
    }

    /**
     * Test the property 'requestParameters'
     */
    @Test
    public void requestParametersTest() {
        // TODO: test requestParameters
    }

    /**
     * Test the property 'requestTemplates'
     */
    @Test
    public void requestTemplatesTest() {
        // TODO: test requestTemplates
    }

    /**
     * Test the property 'responseParameters'
     */
    @Test
    public void responseParametersTest() {
        // TODO: test responseParameters
    }

    /**
     * Test the property 'templateSelectionExpression'
     */
    @Test
    public void templateSelectionExpressionTest() {
        // TODO: test templateSelectionExpression
    }

    /**
     * Test the property 'timeoutInMillis'
     */
    @Test
    public void timeoutInMillisTest() {
        // TODO: test timeoutInMillis
    }

    /**
     * Test the property 'tlsConfig'
     */
    @Test
    public void tlsConfigTest() {
        // TODO: test tlsConfig
    }

}
