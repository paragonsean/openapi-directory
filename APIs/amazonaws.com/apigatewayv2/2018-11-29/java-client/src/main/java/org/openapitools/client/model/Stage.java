/*
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.CreateStageResponseAccessLogSettings;
import org.openapitools.client.model.CreateStageResponseDefaultRouteSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents an API stage.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:11.055256-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Stage {
  public static final String SERIALIZED_NAME_ACCESS_LOG_SETTINGS = "AccessLogSettings";
  @SerializedName(SERIALIZED_NAME_ACCESS_LOG_SETTINGS)
  private CreateStageResponseAccessLogSettings accessLogSettings;

  public static final String SERIALIZED_NAME_API_GATEWAY_MANAGED = "ApiGatewayManaged";
  @SerializedName(SERIALIZED_NAME_API_GATEWAY_MANAGED)
  private Boolean apiGatewayManaged;

  public static final String SERIALIZED_NAME_AUTO_DEPLOY = "AutoDeploy";
  @SerializedName(SERIALIZED_NAME_AUTO_DEPLOY)
  private Boolean autoDeploy;

  public static final String SERIALIZED_NAME_CLIENT_CERTIFICATE_ID = "ClientCertificateId";
  @SerializedName(SERIALIZED_NAME_CLIENT_CERTIFICATE_ID)
  private String clientCertificateId;

  public static final String SERIALIZED_NAME_CREATED_DATE = "CreatedDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_DEFAULT_ROUTE_SETTINGS = "DefaultRouteSettings";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ROUTE_SETTINGS)
  private CreateStageResponseDefaultRouteSettings defaultRouteSettings;

  public static final String SERIALIZED_NAME_DEPLOYMENT_ID = "DeploymentId";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_ID)
  private String deploymentId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_LAST_DEPLOYMENT_STATUS_MESSAGE = "LastDeploymentStatusMessage";
  @SerializedName(SERIALIZED_NAME_LAST_DEPLOYMENT_STATUS_MESSAGE)
  private String lastDeploymentStatusMessage;

  public static final String SERIALIZED_NAME_LAST_UPDATED_DATE = "LastUpdatedDate";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_DATE)
  private OffsetDateTime lastUpdatedDate;

  public static final String SERIALIZED_NAME_ROUTE_SETTINGS = "RouteSettings";
  @SerializedName(SERIALIZED_NAME_ROUTE_SETTINGS)
  private Map routeSettings;

  public static final String SERIALIZED_NAME_STAGE_NAME = "StageName";
  @SerializedName(SERIALIZED_NAME_STAGE_NAME)
  private String stageName;

  public static final String SERIALIZED_NAME_STAGE_VARIABLES = "StageVariables";
  @SerializedName(SERIALIZED_NAME_STAGE_VARIABLES)
  private Map stageVariables;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public Stage() {
  }

  public Stage accessLogSettings(CreateStageResponseAccessLogSettings accessLogSettings) {
    this.accessLogSettings = accessLogSettings;
    return this;
  }

  /**
   * Get accessLogSettings
   * @return accessLogSettings
   */
  @javax.annotation.Nullable
  public CreateStageResponseAccessLogSettings getAccessLogSettings() {
    return accessLogSettings;
  }

  public void setAccessLogSettings(CreateStageResponseAccessLogSettings accessLogSettings) {
    this.accessLogSettings = accessLogSettings;
  }


  public Stage apiGatewayManaged(Boolean apiGatewayManaged) {
    this.apiGatewayManaged = apiGatewayManaged;
    return this;
  }

  /**
   * Get apiGatewayManaged
   * @return apiGatewayManaged
   */
  @javax.annotation.Nullable
  public Boolean getApiGatewayManaged() {
    return apiGatewayManaged;
  }

  public void setApiGatewayManaged(Boolean apiGatewayManaged) {
    this.apiGatewayManaged = apiGatewayManaged;
  }


  public Stage autoDeploy(Boolean autoDeploy) {
    this.autoDeploy = autoDeploy;
    return this;
  }

  /**
   * Get autoDeploy
   * @return autoDeploy
   */
  @javax.annotation.Nullable
  public Boolean getAutoDeploy() {
    return autoDeploy;
  }

  public void setAutoDeploy(Boolean autoDeploy) {
    this.autoDeploy = autoDeploy;
  }


  public Stage clientCertificateId(String clientCertificateId) {
    this.clientCertificateId = clientCertificateId;
    return this;
  }

  /**
   * Get clientCertificateId
   * @return clientCertificateId
   */
  @javax.annotation.Nullable
  public String getClientCertificateId() {
    return clientCertificateId;
  }

  public void setClientCertificateId(String clientCertificateId) {
    this.clientCertificateId = clientCertificateId;
  }


  public Stage createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Get createdDate
   * @return createdDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public Stage defaultRouteSettings(CreateStageResponseDefaultRouteSettings defaultRouteSettings) {
    this.defaultRouteSettings = defaultRouteSettings;
    return this;
  }

  /**
   * Get defaultRouteSettings
   * @return defaultRouteSettings
   */
  @javax.annotation.Nullable
  public CreateStageResponseDefaultRouteSettings getDefaultRouteSettings() {
    return defaultRouteSettings;
  }

  public void setDefaultRouteSettings(CreateStageResponseDefaultRouteSettings defaultRouteSettings) {
    this.defaultRouteSettings = defaultRouteSettings;
  }


  public Stage deploymentId(String deploymentId) {
    this.deploymentId = deploymentId;
    return this;
  }

  /**
   * Get deploymentId
   * @return deploymentId
   */
  @javax.annotation.Nullable
  public String getDeploymentId() {
    return deploymentId;
  }

  public void setDeploymentId(String deploymentId) {
    this.deploymentId = deploymentId;
  }


  public Stage description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public Stage lastDeploymentStatusMessage(String lastDeploymentStatusMessage) {
    this.lastDeploymentStatusMessage = lastDeploymentStatusMessage;
    return this;
  }

  /**
   * Get lastDeploymentStatusMessage
   * @return lastDeploymentStatusMessage
   */
  @javax.annotation.Nullable
  public String getLastDeploymentStatusMessage() {
    return lastDeploymentStatusMessage;
  }

  public void setLastDeploymentStatusMessage(String lastDeploymentStatusMessage) {
    this.lastDeploymentStatusMessage = lastDeploymentStatusMessage;
  }


  public Stage lastUpdatedDate(OffsetDateTime lastUpdatedDate) {
    this.lastUpdatedDate = lastUpdatedDate;
    return this;
  }

  /**
   * Get lastUpdatedDate
   * @return lastUpdatedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedDate() {
    return lastUpdatedDate;
  }

  public void setLastUpdatedDate(OffsetDateTime lastUpdatedDate) {
    this.lastUpdatedDate = lastUpdatedDate;
  }


  public Stage routeSettings(Map routeSettings) {
    this.routeSettings = routeSettings;
    return this;
  }

  /**
   * Get routeSettings
   * @return routeSettings
   */
  @javax.annotation.Nullable
  public Map getRouteSettings() {
    return routeSettings;
  }

  public void setRouteSettings(Map routeSettings) {
    this.routeSettings = routeSettings;
  }


  public Stage stageName(String stageName) {
    this.stageName = stageName;
    return this;
  }

  /**
   * Get stageName
   * @return stageName
   */
  @javax.annotation.Nonnull
  public String getStageName() {
    return stageName;
  }

  public void setStageName(String stageName) {
    this.stageName = stageName;
  }


  public Stage stageVariables(Map stageVariables) {
    this.stageVariables = stageVariables;
    return this;
  }

  /**
   * Get stageVariables
   * @return stageVariables
   */
  @javax.annotation.Nullable
  public Map getStageVariables() {
    return stageVariables;
  }

  public void setStageVariables(Map stageVariables) {
    this.stageVariables = stageVariables;
  }


  public Stage tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Stage stage = (Stage) o;
    return Objects.equals(this.accessLogSettings, stage.accessLogSettings) &&
        Objects.equals(this.apiGatewayManaged, stage.apiGatewayManaged) &&
        Objects.equals(this.autoDeploy, stage.autoDeploy) &&
        Objects.equals(this.clientCertificateId, stage.clientCertificateId) &&
        Objects.equals(this.createdDate, stage.createdDate) &&
        Objects.equals(this.defaultRouteSettings, stage.defaultRouteSettings) &&
        Objects.equals(this.deploymentId, stage.deploymentId) &&
        Objects.equals(this.description, stage.description) &&
        Objects.equals(this.lastDeploymentStatusMessage, stage.lastDeploymentStatusMessage) &&
        Objects.equals(this.lastUpdatedDate, stage.lastUpdatedDate) &&
        Objects.equals(this.routeSettings, stage.routeSettings) &&
        Objects.equals(this.stageName, stage.stageName) &&
        Objects.equals(this.stageVariables, stage.stageVariables) &&
        Objects.equals(this.tags, stage.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessLogSettings, apiGatewayManaged, autoDeploy, clientCertificateId, createdDate, defaultRouteSettings, deploymentId, description, lastDeploymentStatusMessage, lastUpdatedDate, routeSettings, stageName, stageVariables, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Stage {\n");
    sb.append("    accessLogSettings: ").append(toIndentedString(accessLogSettings)).append("\n");
    sb.append("    apiGatewayManaged: ").append(toIndentedString(apiGatewayManaged)).append("\n");
    sb.append("    autoDeploy: ").append(toIndentedString(autoDeploy)).append("\n");
    sb.append("    clientCertificateId: ").append(toIndentedString(clientCertificateId)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    defaultRouteSettings: ").append(toIndentedString(defaultRouteSettings)).append("\n");
    sb.append("    deploymentId: ").append(toIndentedString(deploymentId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    lastDeploymentStatusMessage: ").append(toIndentedString(lastDeploymentStatusMessage)).append("\n");
    sb.append("    lastUpdatedDate: ").append(toIndentedString(lastUpdatedDate)).append("\n");
    sb.append("    routeSettings: ").append(toIndentedString(routeSettings)).append("\n");
    sb.append("    stageName: ").append(toIndentedString(stageName)).append("\n");
    sb.append("    stageVariables: ").append(toIndentedString(stageVariables)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccessLogSettings");
    openapiFields.add("ApiGatewayManaged");
    openapiFields.add("AutoDeploy");
    openapiFields.add("ClientCertificateId");
    openapiFields.add("CreatedDate");
    openapiFields.add("DefaultRouteSettings");
    openapiFields.add("DeploymentId");
    openapiFields.add("Description");
    openapiFields.add("LastDeploymentStatusMessage");
    openapiFields.add("LastUpdatedDate");
    openapiFields.add("RouteSettings");
    openapiFields.add("StageName");
    openapiFields.add("StageVariables");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("StageName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Stage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Stage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Stage is not found in the empty JSON string", Stage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Stage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Stage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Stage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AccessLogSettings`
      if (jsonObj.get("AccessLogSettings") != null && !jsonObj.get("AccessLogSettings").isJsonNull()) {
        CreateStageResponseAccessLogSettings.validateJsonElement(jsonObj.get("AccessLogSettings"));
      }
      // validate the optional field `ApiGatewayManaged`
      if (jsonObj.get("ApiGatewayManaged") != null && !jsonObj.get("ApiGatewayManaged").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("ApiGatewayManaged"));
      }
      // validate the optional field `AutoDeploy`
      if (jsonObj.get("AutoDeploy") != null && !jsonObj.get("AutoDeploy").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AutoDeploy"));
      }
      // validate the optional field `ClientCertificateId`
      if (jsonObj.get("ClientCertificateId") != null && !jsonObj.get("ClientCertificateId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClientCertificateId"));
      }
      // validate the optional field `CreatedDate`
      if (jsonObj.get("CreatedDate") != null && !jsonObj.get("CreatedDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedDate"));
      }
      // validate the optional field `DefaultRouteSettings`
      if (jsonObj.get("DefaultRouteSettings") != null && !jsonObj.get("DefaultRouteSettings").isJsonNull()) {
        CreateStageResponseDefaultRouteSettings.validateJsonElement(jsonObj.get("DefaultRouteSettings"));
      }
      // validate the optional field `DeploymentId`
      if (jsonObj.get("DeploymentId") != null && !jsonObj.get("DeploymentId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DeploymentId"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `LastDeploymentStatusMessage`
      if (jsonObj.get("LastDeploymentStatusMessage") != null && !jsonObj.get("LastDeploymentStatusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastDeploymentStatusMessage"));
      }
      // validate the optional field `LastUpdatedDate`
      if (jsonObj.get("LastUpdatedDate") != null && !jsonObj.get("LastUpdatedDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdatedDate"));
      }
      // validate the optional field `RouteSettings`
      if (jsonObj.get("RouteSettings") != null && !jsonObj.get("RouteSettings").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("RouteSettings"));
      }
      // validate the required field `StageName`
      String.validateJsonElement(jsonObj.get("StageName"));
      // validate the optional field `StageVariables`
      if (jsonObj.get("StageVariables") != null && !jsonObj.get("StageVariables").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("StageVariables"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Stage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Stage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Stage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Stage.class));

       return (TypeAdapter<T>) new TypeAdapter<Stage>() {
           @Override
           public void write(JsonWriter out, Stage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Stage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Stage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Stage
   * @throws IOException if the JSON string is invalid with respect to Stage
   */
  public static Stage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Stage.class);
  }

  /**
   * Convert an instance of Stage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

