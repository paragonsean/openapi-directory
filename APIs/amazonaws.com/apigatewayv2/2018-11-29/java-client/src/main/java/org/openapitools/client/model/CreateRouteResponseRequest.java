/*
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.ParameterConstraints;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateRouteResponseRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:11.055256-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateRouteResponseRequest {
  public static final String SERIALIZED_NAME_MODEL_SELECTION_EXPRESSION = "modelSelectionExpression";
  @SerializedName(SERIALIZED_NAME_MODEL_SELECTION_EXPRESSION)
  private String modelSelectionExpression;

  public static final String SERIALIZED_NAME_RESPONSE_MODELS = "responseModels";
  @SerializedName(SERIALIZED_NAME_RESPONSE_MODELS)
  private Map<String, String> responseModels = new HashMap<>();

  public static final String SERIALIZED_NAME_RESPONSE_PARAMETERS = "responseParameters";
  @SerializedName(SERIALIZED_NAME_RESPONSE_PARAMETERS)
  private Map<String, ParameterConstraints> responseParameters = new HashMap<>();

  public static final String SERIALIZED_NAME_ROUTE_RESPONSE_KEY = "routeResponseKey";
  @SerializedName(SERIALIZED_NAME_ROUTE_RESPONSE_KEY)
  private String routeResponseKey;

  public CreateRouteResponseRequest() {
  }

  public CreateRouteResponseRequest modelSelectionExpression(String modelSelectionExpression) {
    this.modelSelectionExpression = modelSelectionExpression;
    return this;
  }

  /**
   * An expression used to extract information at runtime. See &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\&quot;&gt;Selection Expressions&lt;/a&gt; for more information.
   * @return modelSelectionExpression
   */
  @javax.annotation.Nullable
  public String getModelSelectionExpression() {
    return modelSelectionExpression;
  }

  public void setModelSelectionExpression(String modelSelectionExpression) {
    this.modelSelectionExpression = modelSelectionExpression;
  }


  public CreateRouteResponseRequest responseModels(Map<String, String> responseModels) {
    this.responseModels = responseModels;
    return this;
  }

  public CreateRouteResponseRequest putResponseModelsItem(String key, String responseModelsItem) {
    if (this.responseModels == null) {
      this.responseModels = new HashMap<>();
    }
    this.responseModels.put(key, responseModelsItem);
    return this;
  }

  /**
   * The route models.
   * @return responseModels
   */
  @javax.annotation.Nullable
  public Map<String, String> getResponseModels() {
    return responseModels;
  }

  public void setResponseModels(Map<String, String> responseModels) {
    this.responseModels = responseModels;
  }


  public CreateRouteResponseRequest responseParameters(Map<String, ParameterConstraints> responseParameters) {
    this.responseParameters = responseParameters;
    return this;
  }

  public CreateRouteResponseRequest putResponseParametersItem(String key, ParameterConstraints responseParametersItem) {
    if (this.responseParameters == null) {
      this.responseParameters = new HashMap<>();
    }
    this.responseParameters.put(key, responseParametersItem);
    return this;
  }

  /**
   * The route parameters.
   * @return responseParameters
   */
  @javax.annotation.Nullable
  public Map<String, ParameterConstraints> getResponseParameters() {
    return responseParameters;
  }

  public void setResponseParameters(Map<String, ParameterConstraints> responseParameters) {
    this.responseParameters = responseParameters;
  }


  public CreateRouteResponseRequest routeResponseKey(String routeResponseKey) {
    this.routeResponseKey = routeResponseKey;
    return this;
  }

  /**
   * After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\&quot;&gt;Selection Expressions&lt;/a&gt; for a list of expressions and each expression&#39;s associated selection key type.
   * @return routeResponseKey
   */
  @javax.annotation.Nonnull
  public String getRouteResponseKey() {
    return routeResponseKey;
  }

  public void setRouteResponseKey(String routeResponseKey) {
    this.routeResponseKey = routeResponseKey;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateRouteResponseRequest createRouteResponseRequest = (CreateRouteResponseRequest) o;
    return Objects.equals(this.modelSelectionExpression, createRouteResponseRequest.modelSelectionExpression) &&
        Objects.equals(this.responseModels, createRouteResponseRequest.responseModels) &&
        Objects.equals(this.responseParameters, createRouteResponseRequest.responseParameters) &&
        Objects.equals(this.routeResponseKey, createRouteResponseRequest.routeResponseKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelSelectionExpression, responseModels, responseParameters, routeResponseKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateRouteResponseRequest {\n");
    sb.append("    modelSelectionExpression: ").append(toIndentedString(modelSelectionExpression)).append("\n");
    sb.append("    responseModels: ").append(toIndentedString(responseModels)).append("\n");
    sb.append("    responseParameters: ").append(toIndentedString(responseParameters)).append("\n");
    sb.append("    routeResponseKey: ").append(toIndentedString(routeResponseKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("modelSelectionExpression");
    openapiFields.add("responseModels");
    openapiFields.add("responseParameters");
    openapiFields.add("routeResponseKey");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("routeResponseKey");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateRouteResponseRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateRouteResponseRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateRouteResponseRequest is not found in the empty JSON string", CreateRouteResponseRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateRouteResponseRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateRouteResponseRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateRouteResponseRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("modelSelectionExpression") != null && !jsonObj.get("modelSelectionExpression").isJsonNull()) && !jsonObj.get("modelSelectionExpression").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modelSelectionExpression` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modelSelectionExpression").toString()));
      }
      if (!jsonObj.get("routeResponseKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `routeResponseKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("routeResponseKey").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateRouteResponseRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateRouteResponseRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateRouteResponseRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateRouteResponseRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateRouteResponseRequest>() {
           @Override
           public void write(JsonWriter out, CreateRouteResponseRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateRouteResponseRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateRouteResponseRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateRouteResponseRequest
   * @throws IOException if the JSON string is invalid with respect to CreateRouteResponseRequest
   */
  public static CreateRouteResponseRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateRouteResponseRequest.class);
  }

  /**
   * Convert an instance of CreateRouteResponseRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

