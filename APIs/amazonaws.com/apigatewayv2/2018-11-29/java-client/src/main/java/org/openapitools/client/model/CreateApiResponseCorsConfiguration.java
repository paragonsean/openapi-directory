/*
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateApiResponseCorsConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:11.055256-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateApiResponseCorsConfiguration {
  public static final String SERIALIZED_NAME_ALLOW_CREDENTIALS = "AllowCredentials";
  @SerializedName(SERIALIZED_NAME_ALLOW_CREDENTIALS)
  private Boolean allowCredentials;

  public static final String SERIALIZED_NAME_ALLOW_HEADERS = "AllowHeaders";
  @SerializedName(SERIALIZED_NAME_ALLOW_HEADERS)
  private List allowHeaders;

  public static final String SERIALIZED_NAME_ALLOW_METHODS = "AllowMethods";
  @SerializedName(SERIALIZED_NAME_ALLOW_METHODS)
  private List allowMethods;

  public static final String SERIALIZED_NAME_ALLOW_ORIGINS = "AllowOrigins";
  @SerializedName(SERIALIZED_NAME_ALLOW_ORIGINS)
  private List allowOrigins;

  public static final String SERIALIZED_NAME_EXPOSE_HEADERS = "ExposeHeaders";
  @SerializedName(SERIALIZED_NAME_EXPOSE_HEADERS)
  private List exposeHeaders;

  public static final String SERIALIZED_NAME_MAX_AGE = "MaxAge";
  @SerializedName(SERIALIZED_NAME_MAX_AGE)
  private Integer maxAge;

  public CreateApiResponseCorsConfiguration() {
  }

  public CreateApiResponseCorsConfiguration allowCredentials(Boolean allowCredentials) {
    this.allowCredentials = allowCredentials;
    return this;
  }

  /**
   * Get allowCredentials
   * @return allowCredentials
   */
  @javax.annotation.Nullable
  public Boolean getAllowCredentials() {
    return allowCredentials;
  }

  public void setAllowCredentials(Boolean allowCredentials) {
    this.allowCredentials = allowCredentials;
  }


  public CreateApiResponseCorsConfiguration allowHeaders(List allowHeaders) {
    this.allowHeaders = allowHeaders;
    return this;
  }

  /**
   * Get allowHeaders
   * @return allowHeaders
   */
  @javax.annotation.Nullable
  public List getAllowHeaders() {
    return allowHeaders;
  }

  public void setAllowHeaders(List allowHeaders) {
    this.allowHeaders = allowHeaders;
  }


  public CreateApiResponseCorsConfiguration allowMethods(List allowMethods) {
    this.allowMethods = allowMethods;
    return this;
  }

  /**
   * Get allowMethods
   * @return allowMethods
   */
  @javax.annotation.Nullable
  public List getAllowMethods() {
    return allowMethods;
  }

  public void setAllowMethods(List allowMethods) {
    this.allowMethods = allowMethods;
  }


  public CreateApiResponseCorsConfiguration allowOrigins(List allowOrigins) {
    this.allowOrigins = allowOrigins;
    return this;
  }

  /**
   * Get allowOrigins
   * @return allowOrigins
   */
  @javax.annotation.Nullable
  public List getAllowOrigins() {
    return allowOrigins;
  }

  public void setAllowOrigins(List allowOrigins) {
    this.allowOrigins = allowOrigins;
  }


  public CreateApiResponseCorsConfiguration exposeHeaders(List exposeHeaders) {
    this.exposeHeaders = exposeHeaders;
    return this;
  }

  /**
   * Get exposeHeaders
   * @return exposeHeaders
   */
  @javax.annotation.Nullable
  public List getExposeHeaders() {
    return exposeHeaders;
  }

  public void setExposeHeaders(List exposeHeaders) {
    this.exposeHeaders = exposeHeaders;
  }


  public CreateApiResponseCorsConfiguration maxAge(Integer maxAge) {
    this.maxAge = maxAge;
    return this;
  }

  /**
   * Get maxAge
   * @return maxAge
   */
  @javax.annotation.Nullable
  public Integer getMaxAge() {
    return maxAge;
  }

  public void setMaxAge(Integer maxAge) {
    this.maxAge = maxAge;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateApiResponseCorsConfiguration createApiResponseCorsConfiguration = (CreateApiResponseCorsConfiguration) o;
    return Objects.equals(this.allowCredentials, createApiResponseCorsConfiguration.allowCredentials) &&
        Objects.equals(this.allowHeaders, createApiResponseCorsConfiguration.allowHeaders) &&
        Objects.equals(this.allowMethods, createApiResponseCorsConfiguration.allowMethods) &&
        Objects.equals(this.allowOrigins, createApiResponseCorsConfiguration.allowOrigins) &&
        Objects.equals(this.exposeHeaders, createApiResponseCorsConfiguration.exposeHeaders) &&
        Objects.equals(this.maxAge, createApiResponseCorsConfiguration.maxAge);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowCredentials, allowHeaders, allowMethods, allowOrigins, exposeHeaders, maxAge);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateApiResponseCorsConfiguration {\n");
    sb.append("    allowCredentials: ").append(toIndentedString(allowCredentials)).append("\n");
    sb.append("    allowHeaders: ").append(toIndentedString(allowHeaders)).append("\n");
    sb.append("    allowMethods: ").append(toIndentedString(allowMethods)).append("\n");
    sb.append("    allowOrigins: ").append(toIndentedString(allowOrigins)).append("\n");
    sb.append("    exposeHeaders: ").append(toIndentedString(exposeHeaders)).append("\n");
    sb.append("    maxAge: ").append(toIndentedString(maxAge)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AllowCredentials");
    openapiFields.add("AllowHeaders");
    openapiFields.add("AllowMethods");
    openapiFields.add("AllowOrigins");
    openapiFields.add("ExposeHeaders");
    openapiFields.add("MaxAge");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateApiResponseCorsConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateApiResponseCorsConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateApiResponseCorsConfiguration is not found in the empty JSON string", CreateApiResponseCorsConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateApiResponseCorsConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateApiResponseCorsConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AllowCredentials`
      if (jsonObj.get("AllowCredentials") != null && !jsonObj.get("AllowCredentials").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AllowCredentials"));
      }
      // validate the optional field `AllowHeaders`
      if (jsonObj.get("AllowHeaders") != null && !jsonObj.get("AllowHeaders").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AllowHeaders"));
      }
      // validate the optional field `AllowMethods`
      if (jsonObj.get("AllowMethods") != null && !jsonObj.get("AllowMethods").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AllowMethods"));
      }
      // validate the optional field `AllowOrigins`
      if (jsonObj.get("AllowOrigins") != null && !jsonObj.get("AllowOrigins").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AllowOrigins"));
      }
      // validate the optional field `ExposeHeaders`
      if (jsonObj.get("ExposeHeaders") != null && !jsonObj.get("ExposeHeaders").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ExposeHeaders"));
      }
      // validate the optional field `MaxAge`
      if (jsonObj.get("MaxAge") != null && !jsonObj.get("MaxAge").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxAge"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateApiResponseCorsConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateApiResponseCorsConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateApiResponseCorsConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateApiResponseCorsConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateApiResponseCorsConfiguration>() {
           @Override
           public void write(JsonWriter out, CreateApiResponseCorsConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateApiResponseCorsConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateApiResponseCorsConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateApiResponseCorsConfiguration
   * @throws IOException if the JSON string is invalid with respect to CreateApiResponseCorsConfiguration
   */
  public static CreateApiResponseCorsConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateApiResponseCorsConfiguration.class);
  }

  /**
   * Convert an instance of CreateApiResponseCorsConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

