/*
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.VpcLinkStatus;
import org.openapitools.client.model.VpcLinkVersion;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetVpcLinkResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:11.055256-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetVpcLinkResponse {
  public static final String SERIALIZED_NAME_CREATED_DATE = "CreatedDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SECURITY_GROUP_IDS = "SecurityGroupIds";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUP_IDS)
  private List securityGroupIds;

  public static final String SERIALIZED_NAME_SUBNET_IDS = "SubnetIds";
  @SerializedName(SERIALIZED_NAME_SUBNET_IDS)
  private List subnetIds;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_VPC_LINK_ID = "VpcLinkId";
  @SerializedName(SERIALIZED_NAME_VPC_LINK_ID)
  private String vpcLinkId;

  public static final String SERIALIZED_NAME_VPC_LINK_STATUS = "VpcLinkStatus";
  @SerializedName(SERIALIZED_NAME_VPC_LINK_STATUS)
  private VpcLinkStatus vpcLinkStatus;

  public static final String SERIALIZED_NAME_VPC_LINK_STATUS_MESSAGE = "VpcLinkStatusMessage";
  @SerializedName(SERIALIZED_NAME_VPC_LINK_STATUS_MESSAGE)
  private String vpcLinkStatusMessage;

  public static final String SERIALIZED_NAME_VPC_LINK_VERSION = "VpcLinkVersion";
  @SerializedName(SERIALIZED_NAME_VPC_LINK_VERSION)
  private VpcLinkVersion vpcLinkVersion;

  public GetVpcLinkResponse() {
  }

  public GetVpcLinkResponse createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Get createdDate
   * @return createdDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public GetVpcLinkResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetVpcLinkResponse securityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
    return this;
  }

  /**
   * Get securityGroupIds
   * @return securityGroupIds
   */
  @javax.annotation.Nullable
  public List getSecurityGroupIds() {
    return securityGroupIds;
  }

  public void setSecurityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
  }


  public GetVpcLinkResponse subnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
    return this;
  }

  /**
   * Get subnetIds
   * @return subnetIds
   */
  @javax.annotation.Nullable
  public List getSubnetIds() {
    return subnetIds;
  }

  public void setSubnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
  }


  public GetVpcLinkResponse tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public GetVpcLinkResponse vpcLinkId(String vpcLinkId) {
    this.vpcLinkId = vpcLinkId;
    return this;
  }

  /**
   * Get vpcLinkId
   * @return vpcLinkId
   */
  @javax.annotation.Nullable
  public String getVpcLinkId() {
    return vpcLinkId;
  }

  public void setVpcLinkId(String vpcLinkId) {
    this.vpcLinkId = vpcLinkId;
  }


  public GetVpcLinkResponse vpcLinkStatus(VpcLinkStatus vpcLinkStatus) {
    this.vpcLinkStatus = vpcLinkStatus;
    return this;
  }

  /**
   * Get vpcLinkStatus
   * @return vpcLinkStatus
   */
  @javax.annotation.Nullable
  public VpcLinkStatus getVpcLinkStatus() {
    return vpcLinkStatus;
  }

  public void setVpcLinkStatus(VpcLinkStatus vpcLinkStatus) {
    this.vpcLinkStatus = vpcLinkStatus;
  }


  public GetVpcLinkResponse vpcLinkStatusMessage(String vpcLinkStatusMessage) {
    this.vpcLinkStatusMessage = vpcLinkStatusMessage;
    return this;
  }

  /**
   * Get vpcLinkStatusMessage
   * @return vpcLinkStatusMessage
   */
  @javax.annotation.Nullable
  public String getVpcLinkStatusMessage() {
    return vpcLinkStatusMessage;
  }

  public void setVpcLinkStatusMessage(String vpcLinkStatusMessage) {
    this.vpcLinkStatusMessage = vpcLinkStatusMessage;
  }


  public GetVpcLinkResponse vpcLinkVersion(VpcLinkVersion vpcLinkVersion) {
    this.vpcLinkVersion = vpcLinkVersion;
    return this;
  }

  /**
   * Get vpcLinkVersion
   * @return vpcLinkVersion
   */
  @javax.annotation.Nullable
  public VpcLinkVersion getVpcLinkVersion() {
    return vpcLinkVersion;
  }

  public void setVpcLinkVersion(VpcLinkVersion vpcLinkVersion) {
    this.vpcLinkVersion = vpcLinkVersion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetVpcLinkResponse getVpcLinkResponse = (GetVpcLinkResponse) o;
    return Objects.equals(this.createdDate, getVpcLinkResponse.createdDate) &&
        Objects.equals(this.name, getVpcLinkResponse.name) &&
        Objects.equals(this.securityGroupIds, getVpcLinkResponse.securityGroupIds) &&
        Objects.equals(this.subnetIds, getVpcLinkResponse.subnetIds) &&
        Objects.equals(this.tags, getVpcLinkResponse.tags) &&
        Objects.equals(this.vpcLinkId, getVpcLinkResponse.vpcLinkId) &&
        Objects.equals(this.vpcLinkStatus, getVpcLinkResponse.vpcLinkStatus) &&
        Objects.equals(this.vpcLinkStatusMessage, getVpcLinkResponse.vpcLinkStatusMessage) &&
        Objects.equals(this.vpcLinkVersion, getVpcLinkResponse.vpcLinkVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdDate, name, securityGroupIds, subnetIds, tags, vpcLinkId, vpcLinkStatus, vpcLinkStatusMessage, vpcLinkVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetVpcLinkResponse {\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    securityGroupIds: ").append(toIndentedString(securityGroupIds)).append("\n");
    sb.append("    subnetIds: ").append(toIndentedString(subnetIds)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    vpcLinkId: ").append(toIndentedString(vpcLinkId)).append("\n");
    sb.append("    vpcLinkStatus: ").append(toIndentedString(vpcLinkStatus)).append("\n");
    sb.append("    vpcLinkStatusMessage: ").append(toIndentedString(vpcLinkStatusMessage)).append("\n");
    sb.append("    vpcLinkVersion: ").append(toIndentedString(vpcLinkVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CreatedDate");
    openapiFields.add("Name");
    openapiFields.add("SecurityGroupIds");
    openapiFields.add("SubnetIds");
    openapiFields.add("Tags");
    openapiFields.add("VpcLinkId");
    openapiFields.add("VpcLinkStatus");
    openapiFields.add("VpcLinkStatusMessage");
    openapiFields.add("VpcLinkVersion");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetVpcLinkResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetVpcLinkResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetVpcLinkResponse is not found in the empty JSON string", GetVpcLinkResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetVpcLinkResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetVpcLinkResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `CreatedDate`
      if (jsonObj.get("CreatedDate") != null && !jsonObj.get("CreatedDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedDate"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `SecurityGroupIds`
      if (jsonObj.get("SecurityGroupIds") != null && !jsonObj.get("SecurityGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroupIds"));
      }
      // validate the optional field `SubnetIds`
      if (jsonObj.get("SubnetIds") != null && !jsonObj.get("SubnetIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SubnetIds"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `VpcLinkId`
      if (jsonObj.get("VpcLinkId") != null && !jsonObj.get("VpcLinkId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VpcLinkId"));
      }
      // validate the optional field `VpcLinkStatus`
      if (jsonObj.get("VpcLinkStatus") != null && !jsonObj.get("VpcLinkStatus").isJsonNull()) {
        VpcLinkStatus.validateJsonElement(jsonObj.get("VpcLinkStatus"));
      }
      // validate the optional field `VpcLinkStatusMessage`
      if (jsonObj.get("VpcLinkStatusMessage") != null && !jsonObj.get("VpcLinkStatusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VpcLinkStatusMessage"));
      }
      // validate the optional field `VpcLinkVersion`
      if (jsonObj.get("VpcLinkVersion") != null && !jsonObj.get("VpcLinkVersion").isJsonNull()) {
        VpcLinkVersion.validateJsonElement(jsonObj.get("VpcLinkVersion"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetVpcLinkResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetVpcLinkResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetVpcLinkResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetVpcLinkResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetVpcLinkResponse>() {
           @Override
           public void write(JsonWriter out, GetVpcLinkResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetVpcLinkResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetVpcLinkResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetVpcLinkResponse
   * @throws IOException if the JSON string is invalid with respect to GetVpcLinkResponse
   */
  public static GetVpcLinkResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetVpcLinkResponse.class);
  }

  /**
   * Convert an instance of GetVpcLinkResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

