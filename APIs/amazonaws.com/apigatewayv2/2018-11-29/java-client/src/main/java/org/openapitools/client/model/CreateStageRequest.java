/*
 * AmazonApiGatewayV2
 * Amazon API Gateway V2
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.CreateStageRequestAccessLogSettings;
import org.openapitools.client.model.CreateStageRequestDefaultRouteSettings;
import org.openapitools.client.model.RouteSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateStageRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:11.055256-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateStageRequest {
  public static final String SERIALIZED_NAME_ACCESS_LOG_SETTINGS = "accessLogSettings";
  @SerializedName(SERIALIZED_NAME_ACCESS_LOG_SETTINGS)
  private CreateStageRequestAccessLogSettings accessLogSettings;

  public static final String SERIALIZED_NAME_AUTO_DEPLOY = "autoDeploy";
  @SerializedName(SERIALIZED_NAME_AUTO_DEPLOY)
  private Boolean autoDeploy;

  public static final String SERIALIZED_NAME_CLIENT_CERTIFICATE_ID = "clientCertificateId";
  @SerializedName(SERIALIZED_NAME_CLIENT_CERTIFICATE_ID)
  private String clientCertificateId;

  public static final String SERIALIZED_NAME_DEFAULT_ROUTE_SETTINGS = "defaultRouteSettings";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ROUTE_SETTINGS)
  private CreateStageRequestDefaultRouteSettings defaultRouteSettings;

  public static final String SERIALIZED_NAME_DEPLOYMENT_ID = "deploymentId";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_ID)
  private String deploymentId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ROUTE_SETTINGS = "routeSettings";
  @SerializedName(SERIALIZED_NAME_ROUTE_SETTINGS)
  private Map<String, RouteSettings> routeSettings = new HashMap<>();

  public static final String SERIALIZED_NAME_STAGE_NAME = "stageName";
  @SerializedName(SERIALIZED_NAME_STAGE_NAME)
  private String stageName;

  public static final String SERIALIZED_NAME_STAGE_VARIABLES = "stageVariables";
  @SerializedName(SERIALIZED_NAME_STAGE_VARIABLES)
  private Map<String, String> stageVariables = new HashMap<>();

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = new HashMap<>();

  public CreateStageRequest() {
  }

  public CreateStageRequest accessLogSettings(CreateStageRequestAccessLogSettings accessLogSettings) {
    this.accessLogSettings = accessLogSettings;
    return this;
  }

  /**
   * Get accessLogSettings
   * @return accessLogSettings
   */
  @javax.annotation.Nullable
  public CreateStageRequestAccessLogSettings getAccessLogSettings() {
    return accessLogSettings;
  }

  public void setAccessLogSettings(CreateStageRequestAccessLogSettings accessLogSettings) {
    this.accessLogSettings = accessLogSettings;
  }


  public CreateStageRequest autoDeploy(Boolean autoDeploy) {
    this.autoDeploy = autoDeploy;
    return this;
  }

  /**
   * Specifies whether updates to an API automatically trigger a new deployment. The default value is false.
   * @return autoDeploy
   */
  @javax.annotation.Nullable
  public Boolean getAutoDeploy() {
    return autoDeploy;
  }

  public void setAutoDeploy(Boolean autoDeploy) {
    this.autoDeploy = autoDeploy;
  }


  public CreateStageRequest clientCertificateId(String clientCertificateId) {
    this.clientCertificateId = clientCertificateId;
    return this;
  }

  /**
   * The identifier.
   * @return clientCertificateId
   */
  @javax.annotation.Nullable
  public String getClientCertificateId() {
    return clientCertificateId;
  }

  public void setClientCertificateId(String clientCertificateId) {
    this.clientCertificateId = clientCertificateId;
  }


  public CreateStageRequest defaultRouteSettings(CreateStageRequestDefaultRouteSettings defaultRouteSettings) {
    this.defaultRouteSettings = defaultRouteSettings;
    return this;
  }

  /**
   * Get defaultRouteSettings
   * @return defaultRouteSettings
   */
  @javax.annotation.Nullable
  public CreateStageRequestDefaultRouteSettings getDefaultRouteSettings() {
    return defaultRouteSettings;
  }

  public void setDefaultRouteSettings(CreateStageRequestDefaultRouteSettings defaultRouteSettings) {
    this.defaultRouteSettings = defaultRouteSettings;
  }


  public CreateStageRequest deploymentId(String deploymentId) {
    this.deploymentId = deploymentId;
    return this;
  }

  /**
   * The identifier.
   * @return deploymentId
   */
  @javax.annotation.Nullable
  public String getDeploymentId() {
    return deploymentId;
  }

  public void setDeploymentId(String deploymentId) {
    this.deploymentId = deploymentId;
  }


  public CreateStageRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * A string with a length between [0-1024].
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateStageRequest routeSettings(Map<String, RouteSettings> routeSettings) {
    this.routeSettings = routeSettings;
    return this;
  }

  public CreateStageRequest putRouteSettingsItem(String key, RouteSettings routeSettingsItem) {
    if (this.routeSettings == null) {
      this.routeSettings = new HashMap<>();
    }
    this.routeSettings.put(key, routeSettingsItem);
    return this;
  }

  /**
   * The route settings map.
   * @return routeSettings
   */
  @javax.annotation.Nullable
  public Map<String, RouteSettings> getRouteSettings() {
    return routeSettings;
  }

  public void setRouteSettings(Map<String, RouteSettings> routeSettings) {
    this.routeSettings = routeSettings;
  }


  public CreateStageRequest stageName(String stageName) {
    this.stageName = stageName;
    return this;
  }

  /**
   * A string with a length between [1-128].
   * @return stageName
   */
  @javax.annotation.Nonnull
  public String getStageName() {
    return stageName;
  }

  public void setStageName(String stageName) {
    this.stageName = stageName;
  }


  public CreateStageRequest stageVariables(Map<String, String> stageVariables) {
    this.stageVariables = stageVariables;
    return this;
  }

  public CreateStageRequest putStageVariablesItem(String key, String stageVariablesItem) {
    if (this.stageVariables == null) {
      this.stageVariables = new HashMap<>();
    }
    this.stageVariables.put(key, stageVariablesItem);
    return this;
  }

  /**
   * The stage variable map.
   * @return stageVariables
   */
  @javax.annotation.Nullable
  public Map<String, String> getStageVariables() {
    return stageVariables;
  }

  public void setStageVariables(Map<String, String> stageVariables) {
    this.stageVariables = stageVariables;
  }


  public CreateStageRequest tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public CreateStageRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * Represents a collection of tags associated with the resource.
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateStageRequest createStageRequest = (CreateStageRequest) o;
    return Objects.equals(this.accessLogSettings, createStageRequest.accessLogSettings) &&
        Objects.equals(this.autoDeploy, createStageRequest.autoDeploy) &&
        Objects.equals(this.clientCertificateId, createStageRequest.clientCertificateId) &&
        Objects.equals(this.defaultRouteSettings, createStageRequest.defaultRouteSettings) &&
        Objects.equals(this.deploymentId, createStageRequest.deploymentId) &&
        Objects.equals(this.description, createStageRequest.description) &&
        Objects.equals(this.routeSettings, createStageRequest.routeSettings) &&
        Objects.equals(this.stageName, createStageRequest.stageName) &&
        Objects.equals(this.stageVariables, createStageRequest.stageVariables) &&
        Objects.equals(this.tags, createStageRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessLogSettings, autoDeploy, clientCertificateId, defaultRouteSettings, deploymentId, description, routeSettings, stageName, stageVariables, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateStageRequest {\n");
    sb.append("    accessLogSettings: ").append(toIndentedString(accessLogSettings)).append("\n");
    sb.append("    autoDeploy: ").append(toIndentedString(autoDeploy)).append("\n");
    sb.append("    clientCertificateId: ").append(toIndentedString(clientCertificateId)).append("\n");
    sb.append("    defaultRouteSettings: ").append(toIndentedString(defaultRouteSettings)).append("\n");
    sb.append("    deploymentId: ").append(toIndentedString(deploymentId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    routeSettings: ").append(toIndentedString(routeSettings)).append("\n");
    sb.append("    stageName: ").append(toIndentedString(stageName)).append("\n");
    sb.append("    stageVariables: ").append(toIndentedString(stageVariables)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accessLogSettings");
    openapiFields.add("autoDeploy");
    openapiFields.add("clientCertificateId");
    openapiFields.add("defaultRouteSettings");
    openapiFields.add("deploymentId");
    openapiFields.add("description");
    openapiFields.add("routeSettings");
    openapiFields.add("stageName");
    openapiFields.add("stageVariables");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("stageName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateStageRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateStageRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateStageRequest is not found in the empty JSON string", CreateStageRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateStageRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateStageRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateStageRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `accessLogSettings`
      if (jsonObj.get("accessLogSettings") != null && !jsonObj.get("accessLogSettings").isJsonNull()) {
        CreateStageRequestAccessLogSettings.validateJsonElement(jsonObj.get("accessLogSettings"));
      }
      if ((jsonObj.get("clientCertificateId") != null && !jsonObj.get("clientCertificateId").isJsonNull()) && !jsonObj.get("clientCertificateId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientCertificateId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientCertificateId").toString()));
      }
      // validate the optional field `defaultRouteSettings`
      if (jsonObj.get("defaultRouteSettings") != null && !jsonObj.get("defaultRouteSettings").isJsonNull()) {
        CreateStageRequestDefaultRouteSettings.validateJsonElement(jsonObj.get("defaultRouteSettings"));
      }
      if ((jsonObj.get("deploymentId") != null && !jsonObj.get("deploymentId").isJsonNull()) && !jsonObj.get("deploymentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deploymentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deploymentId").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (!jsonObj.get("stageName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stageName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stageName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateStageRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateStageRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateStageRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateStageRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateStageRequest>() {
           @Override
           public void write(JsonWriter out, CreateStageRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateStageRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateStageRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateStageRequest
   * @throws IOException if the JSON string is invalid with respect to CreateStageRequest
   */
  public static CreateStageRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateStageRequest.class);
  }

  /**
   * Convert an instance of CreateStageRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

