# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ParameterConstraints(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, required: bool=None):
        """ParameterConstraints - a model defined in OpenAPI

        :param required: The required of this ParameterConstraints.
        """
        self.openapi_types = {
            'required': bool
        }

        self.attribute_map = {
            'required': 'Required'
        }

        self._required = required

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParameterConstraints':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParameterConstraints of this ParameterConstraints.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def required(self):
        """Gets the required of this ParameterConstraints.


        :return: The required of this ParameterConstraints.
        :rtype: bool
        """
        return self._required

    @required.setter
    def required(self, required):
        """Sets the required of this ParameterConstraints.


        :param required: The required of this ParameterConstraints.
        :type required: bool
        """

        self._required = required
