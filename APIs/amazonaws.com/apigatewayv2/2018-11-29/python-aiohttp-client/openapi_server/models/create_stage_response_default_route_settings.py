# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.logging_level import LoggingLevel
from openapi_server import util


class CreateStageResponseDefaultRouteSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_trace_enabled: bool=None, detailed_metrics_enabled: bool=None, logging_level: LoggingLevel=None, throttling_burst_limit: int=None, throttling_rate_limit: float=None):
        """CreateStageResponseDefaultRouteSettings - a model defined in OpenAPI

        :param data_trace_enabled: The data_trace_enabled of this CreateStageResponseDefaultRouteSettings.
        :param detailed_metrics_enabled: The detailed_metrics_enabled of this CreateStageResponseDefaultRouteSettings.
        :param logging_level: The logging_level of this CreateStageResponseDefaultRouteSettings.
        :param throttling_burst_limit: The throttling_burst_limit of this CreateStageResponseDefaultRouteSettings.
        :param throttling_rate_limit: The throttling_rate_limit of this CreateStageResponseDefaultRouteSettings.
        """
        self.openapi_types = {
            'data_trace_enabled': bool,
            'detailed_metrics_enabled': bool,
            'logging_level': LoggingLevel,
            'throttling_burst_limit': int,
            'throttling_rate_limit': float
        }

        self.attribute_map = {
            'data_trace_enabled': 'DataTraceEnabled',
            'detailed_metrics_enabled': 'DetailedMetricsEnabled',
            'logging_level': 'LoggingLevel',
            'throttling_burst_limit': 'ThrottlingBurstLimit',
            'throttling_rate_limit': 'ThrottlingRateLimit'
        }

        self._data_trace_enabled = data_trace_enabled
        self._detailed_metrics_enabled = detailed_metrics_enabled
        self._logging_level = logging_level
        self._throttling_burst_limit = throttling_burst_limit
        self._throttling_rate_limit = throttling_rate_limit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateStageResponseDefaultRouteSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateStageResponse_DefaultRouteSettings of this CreateStageResponseDefaultRouteSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_trace_enabled(self):
        """Gets the data_trace_enabled of this CreateStageResponseDefaultRouteSettings.


        :return: The data_trace_enabled of this CreateStageResponseDefaultRouteSettings.
        :rtype: bool
        """
        return self._data_trace_enabled

    @data_trace_enabled.setter
    def data_trace_enabled(self, data_trace_enabled):
        """Sets the data_trace_enabled of this CreateStageResponseDefaultRouteSettings.


        :param data_trace_enabled: The data_trace_enabled of this CreateStageResponseDefaultRouteSettings.
        :type data_trace_enabled: bool
        """

        self._data_trace_enabled = data_trace_enabled

    @property
    def detailed_metrics_enabled(self):
        """Gets the detailed_metrics_enabled of this CreateStageResponseDefaultRouteSettings.


        :return: The detailed_metrics_enabled of this CreateStageResponseDefaultRouteSettings.
        :rtype: bool
        """
        return self._detailed_metrics_enabled

    @detailed_metrics_enabled.setter
    def detailed_metrics_enabled(self, detailed_metrics_enabled):
        """Sets the detailed_metrics_enabled of this CreateStageResponseDefaultRouteSettings.


        :param detailed_metrics_enabled: The detailed_metrics_enabled of this CreateStageResponseDefaultRouteSettings.
        :type detailed_metrics_enabled: bool
        """

        self._detailed_metrics_enabled = detailed_metrics_enabled

    @property
    def logging_level(self):
        """Gets the logging_level of this CreateStageResponseDefaultRouteSettings.


        :return: The logging_level of this CreateStageResponseDefaultRouteSettings.
        :rtype: LoggingLevel
        """
        return self._logging_level

    @logging_level.setter
    def logging_level(self, logging_level):
        """Sets the logging_level of this CreateStageResponseDefaultRouteSettings.


        :param logging_level: The logging_level of this CreateStageResponseDefaultRouteSettings.
        :type logging_level: LoggingLevel
        """

        self._logging_level = logging_level

    @property
    def throttling_burst_limit(self):
        """Gets the throttling_burst_limit of this CreateStageResponseDefaultRouteSettings.


        :return: The throttling_burst_limit of this CreateStageResponseDefaultRouteSettings.
        :rtype: int
        """
        return self._throttling_burst_limit

    @throttling_burst_limit.setter
    def throttling_burst_limit(self, throttling_burst_limit):
        """Sets the throttling_burst_limit of this CreateStageResponseDefaultRouteSettings.


        :param throttling_burst_limit: The throttling_burst_limit of this CreateStageResponseDefaultRouteSettings.
        :type throttling_burst_limit: int
        """

        self._throttling_burst_limit = throttling_burst_limit

    @property
    def throttling_rate_limit(self):
        """Gets the throttling_rate_limit of this CreateStageResponseDefaultRouteSettings.


        :return: The throttling_rate_limit of this CreateStageResponseDefaultRouteSettings.
        :rtype: float
        """
        return self._throttling_rate_limit

    @throttling_rate_limit.setter
    def throttling_rate_limit(self, throttling_rate_limit):
        """Sets the throttling_rate_limit of this CreateStageResponseDefaultRouteSettings.


        :param throttling_rate_limit: The throttling_rate_limit of this CreateStageResponseDefaultRouteSettings.
        :type throttling_rate_limit: float
        """

        self._throttling_rate_limit = throttling_rate_limit
