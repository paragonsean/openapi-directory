# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateApiMappingRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_id: str=None, api_mapping_key: str=None, stage: str=None):
        """UpdateApiMappingRequest - a model defined in OpenAPI

        :param api_id: The api_id of this UpdateApiMappingRequest.
        :param api_mapping_key: The api_mapping_key of this UpdateApiMappingRequest.
        :param stage: The stage of this UpdateApiMappingRequest.
        """
        self.openapi_types = {
            'api_id': str,
            'api_mapping_key': str,
            'stage': str
        }

        self.attribute_map = {
            'api_id': 'apiId',
            'api_mapping_key': 'apiMappingKey',
            'stage': 'stage'
        }

        self._api_id = api_id
        self._api_mapping_key = api_mapping_key
        self._stage = stage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateApiMappingRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateApiMapping_request of this UpdateApiMappingRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_id(self):
        """Gets the api_id of this UpdateApiMappingRequest.

        The identifier.

        :return: The api_id of this UpdateApiMappingRequest.
        :rtype: str
        """
        return self._api_id

    @api_id.setter
    def api_id(self, api_id):
        """Sets the api_id of this UpdateApiMappingRequest.

        The identifier.

        :param api_id: The api_id of this UpdateApiMappingRequest.
        :type api_id: str
        """
        if api_id is None:
            raise ValueError("Invalid value for `api_id`, must not be `None`")

        self._api_id = api_id

    @property
    def api_mapping_key(self):
        """Gets the api_mapping_key of this UpdateApiMappingRequest.

        After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.

        :return: The api_mapping_key of this UpdateApiMappingRequest.
        :rtype: str
        """
        return self._api_mapping_key

    @api_mapping_key.setter
    def api_mapping_key(self, api_mapping_key):
        """Sets the api_mapping_key of this UpdateApiMappingRequest.

        After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.

        :param api_mapping_key: The api_mapping_key of this UpdateApiMappingRequest.
        :type api_mapping_key: str
        """

        self._api_mapping_key = api_mapping_key

    @property
    def stage(self):
        """Gets the stage of this UpdateApiMappingRequest.

        A string with a length between [1-128].

        :return: The stage of this UpdateApiMappingRequest.
        :rtype: str
        """
        return self._stage

    @stage.setter
    def stage(self, stage):
        """Sets the stage of this UpdateApiMappingRequest.

        A string with a length between [1-128].

        :param stage: The stage of this UpdateApiMappingRequest.
        :type stage: str
        """

        self._stage = stage
