# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateVpcLinkRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, security_group_ids: List[str]=None, subnet_ids: List[str]=None, tags: Dict[str, str]=None):
        """CreateVpcLinkRequest - a model defined in OpenAPI

        :param name: The name of this CreateVpcLinkRequest.
        :param security_group_ids: The security_group_ids of this CreateVpcLinkRequest.
        :param subnet_ids: The subnet_ids of this CreateVpcLinkRequest.
        :param tags: The tags of this CreateVpcLinkRequest.
        """
        self.openapi_types = {
            'name': str,
            'security_group_ids': List[str],
            'subnet_ids': List[str],
            'tags': Dict[str, str]
        }

        self.attribute_map = {
            'name': 'name',
            'security_group_ids': 'securityGroupIds',
            'subnet_ids': 'subnetIds',
            'tags': 'tags'
        }

        self._name = name
        self._security_group_ids = security_group_ids
        self._subnet_ids = subnet_ids
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateVpcLinkRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateVpcLink_request of this CreateVpcLinkRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CreateVpcLinkRequest.

        A string with a length between [1-128].

        :return: The name of this CreateVpcLinkRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateVpcLinkRequest.

        A string with a length between [1-128].

        :param name: The name of this CreateVpcLinkRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def security_group_ids(self):
        """Gets the security_group_ids of this CreateVpcLinkRequest.

        A list of security group IDs for the VPC link.

        :return: The security_group_ids of this CreateVpcLinkRequest.
        :rtype: List[str]
        """
        return self._security_group_ids

    @security_group_ids.setter
    def security_group_ids(self, security_group_ids):
        """Sets the security_group_ids of this CreateVpcLinkRequest.

        A list of security group IDs for the VPC link.

        :param security_group_ids: The security_group_ids of this CreateVpcLinkRequest.
        :type security_group_ids: List[str]
        """

        self._security_group_ids = security_group_ids

    @property
    def subnet_ids(self):
        """Gets the subnet_ids of this CreateVpcLinkRequest.

        A list of subnet IDs to include in the VPC link.

        :return: The subnet_ids of this CreateVpcLinkRequest.
        :rtype: List[str]
        """
        return self._subnet_ids

    @subnet_ids.setter
    def subnet_ids(self, subnet_ids):
        """Sets the subnet_ids of this CreateVpcLinkRequest.

        A list of subnet IDs to include in the VPC link.

        :param subnet_ids: The subnet_ids of this CreateVpcLinkRequest.
        :type subnet_ids: List[str]
        """
        if subnet_ids is None:
            raise ValueError("Invalid value for `subnet_ids`, must not be `None`")

        self._subnet_ids = subnet_ids

    @property
    def tags(self):
        """Gets the tags of this CreateVpcLinkRequest.

        Represents a collection of tags associated with the resource.

        :return: The tags of this CreateVpcLinkRequest.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateVpcLinkRequest.

        Represents a collection of tags associated with the resource.

        :param tags: The tags of this CreateVpcLinkRequest.
        :type tags: Dict[str, str]
        """

        self._tags = tags
