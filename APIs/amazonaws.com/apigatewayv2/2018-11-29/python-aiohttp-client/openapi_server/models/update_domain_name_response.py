# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_domain_name_response_mutual_tls_authentication import CreateDomainNameResponseMutualTlsAuthentication
from openapi_server import util


class UpdateDomainNameResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_mapping_selection_expression: str=None, domain_name: str=None, domain_name_configurations: List=None, mutual_tls_authentication: CreateDomainNameResponseMutualTlsAuthentication=None, tags: Dict=None):
        """UpdateDomainNameResponse - a model defined in OpenAPI

        :param api_mapping_selection_expression: The api_mapping_selection_expression of this UpdateDomainNameResponse.
        :param domain_name: The domain_name of this UpdateDomainNameResponse.
        :param domain_name_configurations: The domain_name_configurations of this UpdateDomainNameResponse.
        :param mutual_tls_authentication: The mutual_tls_authentication of this UpdateDomainNameResponse.
        :param tags: The tags of this UpdateDomainNameResponse.
        """
        self.openapi_types = {
            'api_mapping_selection_expression': str,
            'domain_name': str,
            'domain_name_configurations': List,
            'mutual_tls_authentication': CreateDomainNameResponseMutualTlsAuthentication,
            'tags': Dict
        }

        self.attribute_map = {
            'api_mapping_selection_expression': 'ApiMappingSelectionExpression',
            'domain_name': 'DomainName',
            'domain_name_configurations': 'DomainNameConfigurations',
            'mutual_tls_authentication': 'MutualTlsAuthentication',
            'tags': 'Tags'
        }

        self._api_mapping_selection_expression = api_mapping_selection_expression
        self._domain_name = domain_name
        self._domain_name_configurations = domain_name_configurations
        self._mutual_tls_authentication = mutual_tls_authentication
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDomainNameResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateDomainNameResponse of this UpdateDomainNameResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_mapping_selection_expression(self):
        """Gets the api_mapping_selection_expression of this UpdateDomainNameResponse.


        :return: The api_mapping_selection_expression of this UpdateDomainNameResponse.
        :rtype: str
        """
        return self._api_mapping_selection_expression

    @api_mapping_selection_expression.setter
    def api_mapping_selection_expression(self, api_mapping_selection_expression):
        """Sets the api_mapping_selection_expression of this UpdateDomainNameResponse.


        :param api_mapping_selection_expression: The api_mapping_selection_expression of this UpdateDomainNameResponse.
        :type api_mapping_selection_expression: str
        """

        self._api_mapping_selection_expression = api_mapping_selection_expression

    @property
    def domain_name(self):
        """Gets the domain_name of this UpdateDomainNameResponse.


        :return: The domain_name of this UpdateDomainNameResponse.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this UpdateDomainNameResponse.


        :param domain_name: The domain_name of this UpdateDomainNameResponse.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def domain_name_configurations(self):
        """Gets the domain_name_configurations of this UpdateDomainNameResponse.


        :return: The domain_name_configurations of this UpdateDomainNameResponse.
        :rtype: List
        """
        return self._domain_name_configurations

    @domain_name_configurations.setter
    def domain_name_configurations(self, domain_name_configurations):
        """Sets the domain_name_configurations of this UpdateDomainNameResponse.


        :param domain_name_configurations: The domain_name_configurations of this UpdateDomainNameResponse.
        :type domain_name_configurations: List
        """

        self._domain_name_configurations = domain_name_configurations

    @property
    def mutual_tls_authentication(self):
        """Gets the mutual_tls_authentication of this UpdateDomainNameResponse.


        :return: The mutual_tls_authentication of this UpdateDomainNameResponse.
        :rtype: CreateDomainNameResponseMutualTlsAuthentication
        """
        return self._mutual_tls_authentication

    @mutual_tls_authentication.setter
    def mutual_tls_authentication(self, mutual_tls_authentication):
        """Sets the mutual_tls_authentication of this UpdateDomainNameResponse.


        :param mutual_tls_authentication: The mutual_tls_authentication of this UpdateDomainNameResponse.
        :type mutual_tls_authentication: CreateDomainNameResponseMutualTlsAuthentication
        """

        self._mutual_tls_authentication = mutual_tls_authentication

    @property
    def tags(self):
        """Gets the tags of this UpdateDomainNameResponse.


        :return: The tags of this UpdateDomainNameResponse.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this UpdateDomainNameResponse.


        :param tags: The tags of this UpdateDomainNameResponse.
        :type tags: Dict
        """

        self._tags = tags
