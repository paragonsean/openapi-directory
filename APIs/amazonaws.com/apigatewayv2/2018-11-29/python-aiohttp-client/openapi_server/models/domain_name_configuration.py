# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.domain_name_status import DomainNameStatus
from openapi_server.models.endpoint_type import EndpointType
from openapi_server.models.security_policy import SecurityPolicy
from openapi_server import util


class DomainNameConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_gateway_domain_name: str=None, certificate_arn: str=None, certificate_name: str=None, certificate_upload_date: datetime=None, domain_name_status: DomainNameStatus=None, domain_name_status_message: str=None, endpoint_type: EndpointType=None, hosted_zone_id: str=None, security_policy: SecurityPolicy=None, ownership_verification_certificate_arn: str=None):
        """DomainNameConfiguration - a model defined in OpenAPI

        :param api_gateway_domain_name: The api_gateway_domain_name of this DomainNameConfiguration.
        :param certificate_arn: The certificate_arn of this DomainNameConfiguration.
        :param certificate_name: The certificate_name of this DomainNameConfiguration.
        :param certificate_upload_date: The certificate_upload_date of this DomainNameConfiguration.
        :param domain_name_status: The domain_name_status of this DomainNameConfiguration.
        :param domain_name_status_message: The domain_name_status_message of this DomainNameConfiguration.
        :param endpoint_type: The endpoint_type of this DomainNameConfiguration.
        :param hosted_zone_id: The hosted_zone_id of this DomainNameConfiguration.
        :param security_policy: The security_policy of this DomainNameConfiguration.
        :param ownership_verification_certificate_arn: The ownership_verification_certificate_arn of this DomainNameConfiguration.
        """
        self.openapi_types = {
            'api_gateway_domain_name': str,
            'certificate_arn': str,
            'certificate_name': str,
            'certificate_upload_date': datetime,
            'domain_name_status': DomainNameStatus,
            'domain_name_status_message': str,
            'endpoint_type': EndpointType,
            'hosted_zone_id': str,
            'security_policy': SecurityPolicy,
            'ownership_verification_certificate_arn': str
        }

        self.attribute_map = {
            'api_gateway_domain_name': 'ApiGatewayDomainName',
            'certificate_arn': 'CertificateArn',
            'certificate_name': 'CertificateName',
            'certificate_upload_date': 'CertificateUploadDate',
            'domain_name_status': 'DomainNameStatus',
            'domain_name_status_message': 'DomainNameStatusMessage',
            'endpoint_type': 'EndpointType',
            'hosted_zone_id': 'HostedZoneId',
            'security_policy': 'SecurityPolicy',
            'ownership_verification_certificate_arn': 'OwnershipVerificationCertificateArn'
        }

        self._api_gateway_domain_name = api_gateway_domain_name
        self._certificate_arn = certificate_arn
        self._certificate_name = certificate_name
        self._certificate_upload_date = certificate_upload_date
        self._domain_name_status = domain_name_status
        self._domain_name_status_message = domain_name_status_message
        self._endpoint_type = endpoint_type
        self._hosted_zone_id = hosted_zone_id
        self._security_policy = security_policy
        self._ownership_verification_certificate_arn = ownership_verification_certificate_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainNameConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainNameConfiguration of this DomainNameConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_gateway_domain_name(self):
        """Gets the api_gateway_domain_name of this DomainNameConfiguration.


        :return: The api_gateway_domain_name of this DomainNameConfiguration.
        :rtype: str
        """
        return self._api_gateway_domain_name

    @api_gateway_domain_name.setter
    def api_gateway_domain_name(self, api_gateway_domain_name):
        """Sets the api_gateway_domain_name of this DomainNameConfiguration.


        :param api_gateway_domain_name: The api_gateway_domain_name of this DomainNameConfiguration.
        :type api_gateway_domain_name: str
        """

        self._api_gateway_domain_name = api_gateway_domain_name

    @property
    def certificate_arn(self):
        """Gets the certificate_arn of this DomainNameConfiguration.


        :return: The certificate_arn of this DomainNameConfiguration.
        :rtype: str
        """
        return self._certificate_arn

    @certificate_arn.setter
    def certificate_arn(self, certificate_arn):
        """Sets the certificate_arn of this DomainNameConfiguration.


        :param certificate_arn: The certificate_arn of this DomainNameConfiguration.
        :type certificate_arn: str
        """

        self._certificate_arn = certificate_arn

    @property
    def certificate_name(self):
        """Gets the certificate_name of this DomainNameConfiguration.


        :return: The certificate_name of this DomainNameConfiguration.
        :rtype: str
        """
        return self._certificate_name

    @certificate_name.setter
    def certificate_name(self, certificate_name):
        """Sets the certificate_name of this DomainNameConfiguration.


        :param certificate_name: The certificate_name of this DomainNameConfiguration.
        :type certificate_name: str
        """

        self._certificate_name = certificate_name

    @property
    def certificate_upload_date(self):
        """Gets the certificate_upload_date of this DomainNameConfiguration.


        :return: The certificate_upload_date of this DomainNameConfiguration.
        :rtype: datetime
        """
        return self._certificate_upload_date

    @certificate_upload_date.setter
    def certificate_upload_date(self, certificate_upload_date):
        """Sets the certificate_upload_date of this DomainNameConfiguration.


        :param certificate_upload_date: The certificate_upload_date of this DomainNameConfiguration.
        :type certificate_upload_date: datetime
        """

        self._certificate_upload_date = certificate_upload_date

    @property
    def domain_name_status(self):
        """Gets the domain_name_status of this DomainNameConfiguration.


        :return: The domain_name_status of this DomainNameConfiguration.
        :rtype: DomainNameStatus
        """
        return self._domain_name_status

    @domain_name_status.setter
    def domain_name_status(self, domain_name_status):
        """Sets the domain_name_status of this DomainNameConfiguration.


        :param domain_name_status: The domain_name_status of this DomainNameConfiguration.
        :type domain_name_status: DomainNameStatus
        """

        self._domain_name_status = domain_name_status

    @property
    def domain_name_status_message(self):
        """Gets the domain_name_status_message of this DomainNameConfiguration.


        :return: The domain_name_status_message of this DomainNameConfiguration.
        :rtype: str
        """
        return self._domain_name_status_message

    @domain_name_status_message.setter
    def domain_name_status_message(self, domain_name_status_message):
        """Sets the domain_name_status_message of this DomainNameConfiguration.


        :param domain_name_status_message: The domain_name_status_message of this DomainNameConfiguration.
        :type domain_name_status_message: str
        """

        self._domain_name_status_message = domain_name_status_message

    @property
    def endpoint_type(self):
        """Gets the endpoint_type of this DomainNameConfiguration.


        :return: The endpoint_type of this DomainNameConfiguration.
        :rtype: EndpointType
        """
        return self._endpoint_type

    @endpoint_type.setter
    def endpoint_type(self, endpoint_type):
        """Sets the endpoint_type of this DomainNameConfiguration.


        :param endpoint_type: The endpoint_type of this DomainNameConfiguration.
        :type endpoint_type: EndpointType
        """

        self._endpoint_type = endpoint_type

    @property
    def hosted_zone_id(self):
        """Gets the hosted_zone_id of this DomainNameConfiguration.


        :return: The hosted_zone_id of this DomainNameConfiguration.
        :rtype: str
        """
        return self._hosted_zone_id

    @hosted_zone_id.setter
    def hosted_zone_id(self, hosted_zone_id):
        """Sets the hosted_zone_id of this DomainNameConfiguration.


        :param hosted_zone_id: The hosted_zone_id of this DomainNameConfiguration.
        :type hosted_zone_id: str
        """

        self._hosted_zone_id = hosted_zone_id

    @property
    def security_policy(self):
        """Gets the security_policy of this DomainNameConfiguration.


        :return: The security_policy of this DomainNameConfiguration.
        :rtype: SecurityPolicy
        """
        return self._security_policy

    @security_policy.setter
    def security_policy(self, security_policy):
        """Sets the security_policy of this DomainNameConfiguration.


        :param security_policy: The security_policy of this DomainNameConfiguration.
        :type security_policy: SecurityPolicy
        """

        self._security_policy = security_policy

    @property
    def ownership_verification_certificate_arn(self):
        """Gets the ownership_verification_certificate_arn of this DomainNameConfiguration.


        :return: The ownership_verification_certificate_arn of this DomainNameConfiguration.
        :rtype: str
        """
        return self._ownership_verification_certificate_arn

    @ownership_verification_certificate_arn.setter
    def ownership_verification_certificate_arn(self, ownership_verification_certificate_arn):
        """Sets the ownership_verification_certificate_arn of this DomainNameConfiguration.


        :param ownership_verification_certificate_arn: The ownership_verification_certificate_arn of this DomainNameConfiguration.
        :type ownership_verification_certificate_arn: str
        """

        self._ownership_verification_certificate_arn = ownership_verification_certificate_arn
