# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.connection_type import ConnectionType
from openapi_server.models.content_handling_strategy import ContentHandlingStrategy
from openapi_server.models.create_integration_result_tls_config import CreateIntegrationResultTlsConfig
from openapi_server.models.integration_type import IntegrationType
from openapi_server.models.passthrough_behavior import PassthroughBehavior
from openapi_server import util


class Integration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_gateway_managed: bool=None, connection_id: str=None, connection_type: ConnectionType=None, content_handling_strategy: ContentHandlingStrategy=None, credentials_arn: str=None, description: str=None, integration_id: str=None, integration_method: str=None, integration_response_selection_expression: str=None, integration_subtype: str=None, integration_type: IntegrationType=None, integration_uri: str=None, passthrough_behavior: PassthroughBehavior=None, payload_format_version: str=None, request_parameters: Dict=None, request_templates: Dict=None, response_parameters: Dict=None, template_selection_expression: str=None, timeout_in_millis: int=None, tls_config: CreateIntegrationResultTlsConfig=None):
        """Integration - a model defined in OpenAPI

        :param api_gateway_managed: The api_gateway_managed of this Integration.
        :param connection_id: The connection_id of this Integration.
        :param connection_type: The connection_type of this Integration.
        :param content_handling_strategy: The content_handling_strategy of this Integration.
        :param credentials_arn: The credentials_arn of this Integration.
        :param description: The description of this Integration.
        :param integration_id: The integration_id of this Integration.
        :param integration_method: The integration_method of this Integration.
        :param integration_response_selection_expression: The integration_response_selection_expression of this Integration.
        :param integration_subtype: The integration_subtype of this Integration.
        :param integration_type: The integration_type of this Integration.
        :param integration_uri: The integration_uri of this Integration.
        :param passthrough_behavior: The passthrough_behavior of this Integration.
        :param payload_format_version: The payload_format_version of this Integration.
        :param request_parameters: The request_parameters of this Integration.
        :param request_templates: The request_templates of this Integration.
        :param response_parameters: The response_parameters of this Integration.
        :param template_selection_expression: The template_selection_expression of this Integration.
        :param timeout_in_millis: The timeout_in_millis of this Integration.
        :param tls_config: The tls_config of this Integration.
        """
        self.openapi_types = {
            'api_gateway_managed': bool,
            'connection_id': str,
            'connection_type': ConnectionType,
            'content_handling_strategy': ContentHandlingStrategy,
            'credentials_arn': str,
            'description': str,
            'integration_id': str,
            'integration_method': str,
            'integration_response_selection_expression': str,
            'integration_subtype': str,
            'integration_type': IntegrationType,
            'integration_uri': str,
            'passthrough_behavior': PassthroughBehavior,
            'payload_format_version': str,
            'request_parameters': Dict,
            'request_templates': Dict,
            'response_parameters': Dict,
            'template_selection_expression': str,
            'timeout_in_millis': int,
            'tls_config': CreateIntegrationResultTlsConfig
        }

        self.attribute_map = {
            'api_gateway_managed': 'ApiGatewayManaged',
            'connection_id': 'ConnectionId',
            'connection_type': 'ConnectionType',
            'content_handling_strategy': 'ContentHandlingStrategy',
            'credentials_arn': 'CredentialsArn',
            'description': 'Description',
            'integration_id': 'IntegrationId',
            'integration_method': 'IntegrationMethod',
            'integration_response_selection_expression': 'IntegrationResponseSelectionExpression',
            'integration_subtype': 'IntegrationSubtype',
            'integration_type': 'IntegrationType',
            'integration_uri': 'IntegrationUri',
            'passthrough_behavior': 'PassthroughBehavior',
            'payload_format_version': 'PayloadFormatVersion',
            'request_parameters': 'RequestParameters',
            'request_templates': 'RequestTemplates',
            'response_parameters': 'ResponseParameters',
            'template_selection_expression': 'TemplateSelectionExpression',
            'timeout_in_millis': 'TimeoutInMillis',
            'tls_config': 'TlsConfig'
        }

        self._api_gateway_managed = api_gateway_managed
        self._connection_id = connection_id
        self._connection_type = connection_type
        self._content_handling_strategy = content_handling_strategy
        self._credentials_arn = credentials_arn
        self._description = description
        self._integration_id = integration_id
        self._integration_method = integration_method
        self._integration_response_selection_expression = integration_response_selection_expression
        self._integration_subtype = integration_subtype
        self._integration_type = integration_type
        self._integration_uri = integration_uri
        self._passthrough_behavior = passthrough_behavior
        self._payload_format_version = payload_format_version
        self._request_parameters = request_parameters
        self._request_templates = request_templates
        self._response_parameters = response_parameters
        self._template_selection_expression = template_selection_expression
        self._timeout_in_millis = timeout_in_millis
        self._tls_config = tls_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Integration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Integration of this Integration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_gateway_managed(self):
        """Gets the api_gateway_managed of this Integration.


        :return: The api_gateway_managed of this Integration.
        :rtype: bool
        """
        return self._api_gateway_managed

    @api_gateway_managed.setter
    def api_gateway_managed(self, api_gateway_managed):
        """Sets the api_gateway_managed of this Integration.


        :param api_gateway_managed: The api_gateway_managed of this Integration.
        :type api_gateway_managed: bool
        """

        self._api_gateway_managed = api_gateway_managed

    @property
    def connection_id(self):
        """Gets the connection_id of this Integration.


        :return: The connection_id of this Integration.
        :rtype: str
        """
        return self._connection_id

    @connection_id.setter
    def connection_id(self, connection_id):
        """Sets the connection_id of this Integration.


        :param connection_id: The connection_id of this Integration.
        :type connection_id: str
        """

        self._connection_id = connection_id

    @property
    def connection_type(self):
        """Gets the connection_type of this Integration.


        :return: The connection_type of this Integration.
        :rtype: ConnectionType
        """
        return self._connection_type

    @connection_type.setter
    def connection_type(self, connection_type):
        """Sets the connection_type of this Integration.


        :param connection_type: The connection_type of this Integration.
        :type connection_type: ConnectionType
        """

        self._connection_type = connection_type

    @property
    def content_handling_strategy(self):
        """Gets the content_handling_strategy of this Integration.


        :return: The content_handling_strategy of this Integration.
        :rtype: ContentHandlingStrategy
        """
        return self._content_handling_strategy

    @content_handling_strategy.setter
    def content_handling_strategy(self, content_handling_strategy):
        """Sets the content_handling_strategy of this Integration.


        :param content_handling_strategy: The content_handling_strategy of this Integration.
        :type content_handling_strategy: ContentHandlingStrategy
        """

        self._content_handling_strategy = content_handling_strategy

    @property
    def credentials_arn(self):
        """Gets the credentials_arn of this Integration.


        :return: The credentials_arn of this Integration.
        :rtype: str
        """
        return self._credentials_arn

    @credentials_arn.setter
    def credentials_arn(self, credentials_arn):
        """Sets the credentials_arn of this Integration.


        :param credentials_arn: The credentials_arn of this Integration.
        :type credentials_arn: str
        """

        self._credentials_arn = credentials_arn

    @property
    def description(self):
        """Gets the description of this Integration.


        :return: The description of this Integration.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Integration.


        :param description: The description of this Integration.
        :type description: str
        """

        self._description = description

    @property
    def integration_id(self):
        """Gets the integration_id of this Integration.


        :return: The integration_id of this Integration.
        :rtype: str
        """
        return self._integration_id

    @integration_id.setter
    def integration_id(self, integration_id):
        """Sets the integration_id of this Integration.


        :param integration_id: The integration_id of this Integration.
        :type integration_id: str
        """

        self._integration_id = integration_id

    @property
    def integration_method(self):
        """Gets the integration_method of this Integration.


        :return: The integration_method of this Integration.
        :rtype: str
        """
        return self._integration_method

    @integration_method.setter
    def integration_method(self, integration_method):
        """Sets the integration_method of this Integration.


        :param integration_method: The integration_method of this Integration.
        :type integration_method: str
        """

        self._integration_method = integration_method

    @property
    def integration_response_selection_expression(self):
        """Gets the integration_response_selection_expression of this Integration.


        :return: The integration_response_selection_expression of this Integration.
        :rtype: str
        """
        return self._integration_response_selection_expression

    @integration_response_selection_expression.setter
    def integration_response_selection_expression(self, integration_response_selection_expression):
        """Sets the integration_response_selection_expression of this Integration.


        :param integration_response_selection_expression: The integration_response_selection_expression of this Integration.
        :type integration_response_selection_expression: str
        """

        self._integration_response_selection_expression = integration_response_selection_expression

    @property
    def integration_subtype(self):
        """Gets the integration_subtype of this Integration.


        :return: The integration_subtype of this Integration.
        :rtype: str
        """
        return self._integration_subtype

    @integration_subtype.setter
    def integration_subtype(self, integration_subtype):
        """Sets the integration_subtype of this Integration.


        :param integration_subtype: The integration_subtype of this Integration.
        :type integration_subtype: str
        """

        self._integration_subtype = integration_subtype

    @property
    def integration_type(self):
        """Gets the integration_type of this Integration.


        :return: The integration_type of this Integration.
        :rtype: IntegrationType
        """
        return self._integration_type

    @integration_type.setter
    def integration_type(self, integration_type):
        """Sets the integration_type of this Integration.


        :param integration_type: The integration_type of this Integration.
        :type integration_type: IntegrationType
        """

        self._integration_type = integration_type

    @property
    def integration_uri(self):
        """Gets the integration_uri of this Integration.


        :return: The integration_uri of this Integration.
        :rtype: str
        """
        return self._integration_uri

    @integration_uri.setter
    def integration_uri(self, integration_uri):
        """Sets the integration_uri of this Integration.


        :param integration_uri: The integration_uri of this Integration.
        :type integration_uri: str
        """

        self._integration_uri = integration_uri

    @property
    def passthrough_behavior(self):
        """Gets the passthrough_behavior of this Integration.


        :return: The passthrough_behavior of this Integration.
        :rtype: PassthroughBehavior
        """
        return self._passthrough_behavior

    @passthrough_behavior.setter
    def passthrough_behavior(self, passthrough_behavior):
        """Sets the passthrough_behavior of this Integration.


        :param passthrough_behavior: The passthrough_behavior of this Integration.
        :type passthrough_behavior: PassthroughBehavior
        """

        self._passthrough_behavior = passthrough_behavior

    @property
    def payload_format_version(self):
        """Gets the payload_format_version of this Integration.


        :return: The payload_format_version of this Integration.
        :rtype: str
        """
        return self._payload_format_version

    @payload_format_version.setter
    def payload_format_version(self, payload_format_version):
        """Sets the payload_format_version of this Integration.


        :param payload_format_version: The payload_format_version of this Integration.
        :type payload_format_version: str
        """

        self._payload_format_version = payload_format_version

    @property
    def request_parameters(self):
        """Gets the request_parameters of this Integration.


        :return: The request_parameters of this Integration.
        :rtype: Dict
        """
        return self._request_parameters

    @request_parameters.setter
    def request_parameters(self, request_parameters):
        """Sets the request_parameters of this Integration.


        :param request_parameters: The request_parameters of this Integration.
        :type request_parameters: Dict
        """

        self._request_parameters = request_parameters

    @property
    def request_templates(self):
        """Gets the request_templates of this Integration.


        :return: The request_templates of this Integration.
        :rtype: Dict
        """
        return self._request_templates

    @request_templates.setter
    def request_templates(self, request_templates):
        """Sets the request_templates of this Integration.


        :param request_templates: The request_templates of this Integration.
        :type request_templates: Dict
        """

        self._request_templates = request_templates

    @property
    def response_parameters(self):
        """Gets the response_parameters of this Integration.


        :return: The response_parameters of this Integration.
        :rtype: Dict
        """
        return self._response_parameters

    @response_parameters.setter
    def response_parameters(self, response_parameters):
        """Sets the response_parameters of this Integration.


        :param response_parameters: The response_parameters of this Integration.
        :type response_parameters: Dict
        """

        self._response_parameters = response_parameters

    @property
    def template_selection_expression(self):
        """Gets the template_selection_expression of this Integration.


        :return: The template_selection_expression of this Integration.
        :rtype: str
        """
        return self._template_selection_expression

    @template_selection_expression.setter
    def template_selection_expression(self, template_selection_expression):
        """Sets the template_selection_expression of this Integration.


        :param template_selection_expression: The template_selection_expression of this Integration.
        :type template_selection_expression: str
        """

        self._template_selection_expression = template_selection_expression

    @property
    def timeout_in_millis(self):
        """Gets the timeout_in_millis of this Integration.


        :return: The timeout_in_millis of this Integration.
        :rtype: int
        """
        return self._timeout_in_millis

    @timeout_in_millis.setter
    def timeout_in_millis(self, timeout_in_millis):
        """Sets the timeout_in_millis of this Integration.


        :param timeout_in_millis: The timeout_in_millis of this Integration.
        :type timeout_in_millis: int
        """

        self._timeout_in_millis = timeout_in_millis

    @property
    def tls_config(self):
        """Gets the tls_config of this Integration.


        :return: The tls_config of this Integration.
        :rtype: CreateIntegrationResultTlsConfig
        """
        return self._tls_config

    @tls_config.setter
    def tls_config(self, tls_config):
        """Sets the tls_config of this Integration.


        :param tls_config: The tls_config of this Integration.
        :type tls_config: CreateIntegrationResultTlsConfig
        """

        self._tls_config = tls_config
