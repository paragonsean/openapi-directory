# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.authorization_type import AuthorizationType
from openapi_server import util


class GetRouteResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_gateway_managed: bool=None, api_key_required: bool=None, authorization_scopes: List=None, authorization_type: AuthorizationType=None, authorizer_id: str=None, model_selection_expression: str=None, operation_name: str=None, request_models: Dict=None, request_parameters: Dict=None, route_id: str=None, route_key: str=None, route_response_selection_expression: str=None, target: str=None):
        """GetRouteResult - a model defined in OpenAPI

        :param api_gateway_managed: The api_gateway_managed of this GetRouteResult.
        :param api_key_required: The api_key_required of this GetRouteResult.
        :param authorization_scopes: The authorization_scopes of this GetRouteResult.
        :param authorization_type: The authorization_type of this GetRouteResult.
        :param authorizer_id: The authorizer_id of this GetRouteResult.
        :param model_selection_expression: The model_selection_expression of this GetRouteResult.
        :param operation_name: The operation_name of this GetRouteResult.
        :param request_models: The request_models of this GetRouteResult.
        :param request_parameters: The request_parameters of this GetRouteResult.
        :param route_id: The route_id of this GetRouteResult.
        :param route_key: The route_key of this GetRouteResult.
        :param route_response_selection_expression: The route_response_selection_expression of this GetRouteResult.
        :param target: The target of this GetRouteResult.
        """
        self.openapi_types = {
            'api_gateway_managed': bool,
            'api_key_required': bool,
            'authorization_scopes': List,
            'authorization_type': AuthorizationType,
            'authorizer_id': str,
            'model_selection_expression': str,
            'operation_name': str,
            'request_models': Dict,
            'request_parameters': Dict,
            'route_id': str,
            'route_key': str,
            'route_response_selection_expression': str,
            'target': str
        }

        self.attribute_map = {
            'api_gateway_managed': 'ApiGatewayManaged',
            'api_key_required': 'ApiKeyRequired',
            'authorization_scopes': 'AuthorizationScopes',
            'authorization_type': 'AuthorizationType',
            'authorizer_id': 'AuthorizerId',
            'model_selection_expression': 'ModelSelectionExpression',
            'operation_name': 'OperationName',
            'request_models': 'RequestModels',
            'request_parameters': 'RequestParameters',
            'route_id': 'RouteId',
            'route_key': 'RouteKey',
            'route_response_selection_expression': 'RouteResponseSelectionExpression',
            'target': 'Target'
        }

        self._api_gateway_managed = api_gateway_managed
        self._api_key_required = api_key_required
        self._authorization_scopes = authorization_scopes
        self._authorization_type = authorization_type
        self._authorizer_id = authorizer_id
        self._model_selection_expression = model_selection_expression
        self._operation_name = operation_name
        self._request_models = request_models
        self._request_parameters = request_parameters
        self._route_id = route_id
        self._route_key = route_key
        self._route_response_selection_expression = route_response_selection_expression
        self._target = target

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetRouteResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetRouteResult of this GetRouteResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_gateway_managed(self):
        """Gets the api_gateway_managed of this GetRouteResult.


        :return: The api_gateway_managed of this GetRouteResult.
        :rtype: bool
        """
        return self._api_gateway_managed

    @api_gateway_managed.setter
    def api_gateway_managed(self, api_gateway_managed):
        """Sets the api_gateway_managed of this GetRouteResult.


        :param api_gateway_managed: The api_gateway_managed of this GetRouteResult.
        :type api_gateway_managed: bool
        """

        self._api_gateway_managed = api_gateway_managed

    @property
    def api_key_required(self):
        """Gets the api_key_required of this GetRouteResult.


        :return: The api_key_required of this GetRouteResult.
        :rtype: bool
        """
        return self._api_key_required

    @api_key_required.setter
    def api_key_required(self, api_key_required):
        """Sets the api_key_required of this GetRouteResult.


        :param api_key_required: The api_key_required of this GetRouteResult.
        :type api_key_required: bool
        """

        self._api_key_required = api_key_required

    @property
    def authorization_scopes(self):
        """Gets the authorization_scopes of this GetRouteResult.


        :return: The authorization_scopes of this GetRouteResult.
        :rtype: List
        """
        return self._authorization_scopes

    @authorization_scopes.setter
    def authorization_scopes(self, authorization_scopes):
        """Sets the authorization_scopes of this GetRouteResult.


        :param authorization_scopes: The authorization_scopes of this GetRouteResult.
        :type authorization_scopes: List
        """

        self._authorization_scopes = authorization_scopes

    @property
    def authorization_type(self):
        """Gets the authorization_type of this GetRouteResult.


        :return: The authorization_type of this GetRouteResult.
        :rtype: AuthorizationType
        """
        return self._authorization_type

    @authorization_type.setter
    def authorization_type(self, authorization_type):
        """Sets the authorization_type of this GetRouteResult.


        :param authorization_type: The authorization_type of this GetRouteResult.
        :type authorization_type: AuthorizationType
        """

        self._authorization_type = authorization_type

    @property
    def authorizer_id(self):
        """Gets the authorizer_id of this GetRouteResult.


        :return: The authorizer_id of this GetRouteResult.
        :rtype: str
        """
        return self._authorizer_id

    @authorizer_id.setter
    def authorizer_id(self, authorizer_id):
        """Sets the authorizer_id of this GetRouteResult.


        :param authorizer_id: The authorizer_id of this GetRouteResult.
        :type authorizer_id: str
        """

        self._authorizer_id = authorizer_id

    @property
    def model_selection_expression(self):
        """Gets the model_selection_expression of this GetRouteResult.


        :return: The model_selection_expression of this GetRouteResult.
        :rtype: str
        """
        return self._model_selection_expression

    @model_selection_expression.setter
    def model_selection_expression(self, model_selection_expression):
        """Sets the model_selection_expression of this GetRouteResult.


        :param model_selection_expression: The model_selection_expression of this GetRouteResult.
        :type model_selection_expression: str
        """

        self._model_selection_expression = model_selection_expression

    @property
    def operation_name(self):
        """Gets the operation_name of this GetRouteResult.


        :return: The operation_name of this GetRouteResult.
        :rtype: str
        """
        return self._operation_name

    @operation_name.setter
    def operation_name(self, operation_name):
        """Sets the operation_name of this GetRouteResult.


        :param operation_name: The operation_name of this GetRouteResult.
        :type operation_name: str
        """

        self._operation_name = operation_name

    @property
    def request_models(self):
        """Gets the request_models of this GetRouteResult.


        :return: The request_models of this GetRouteResult.
        :rtype: Dict
        """
        return self._request_models

    @request_models.setter
    def request_models(self, request_models):
        """Sets the request_models of this GetRouteResult.


        :param request_models: The request_models of this GetRouteResult.
        :type request_models: Dict
        """

        self._request_models = request_models

    @property
    def request_parameters(self):
        """Gets the request_parameters of this GetRouteResult.


        :return: The request_parameters of this GetRouteResult.
        :rtype: Dict
        """
        return self._request_parameters

    @request_parameters.setter
    def request_parameters(self, request_parameters):
        """Sets the request_parameters of this GetRouteResult.


        :param request_parameters: The request_parameters of this GetRouteResult.
        :type request_parameters: Dict
        """

        self._request_parameters = request_parameters

    @property
    def route_id(self):
        """Gets the route_id of this GetRouteResult.


        :return: The route_id of this GetRouteResult.
        :rtype: str
        """
        return self._route_id

    @route_id.setter
    def route_id(self, route_id):
        """Sets the route_id of this GetRouteResult.


        :param route_id: The route_id of this GetRouteResult.
        :type route_id: str
        """

        self._route_id = route_id

    @property
    def route_key(self):
        """Gets the route_key of this GetRouteResult.


        :return: The route_key of this GetRouteResult.
        :rtype: str
        """
        return self._route_key

    @route_key.setter
    def route_key(self, route_key):
        """Sets the route_key of this GetRouteResult.


        :param route_key: The route_key of this GetRouteResult.
        :type route_key: str
        """

        self._route_key = route_key

    @property
    def route_response_selection_expression(self):
        """Gets the route_response_selection_expression of this GetRouteResult.


        :return: The route_response_selection_expression of this GetRouteResult.
        :rtype: str
        """
        return self._route_response_selection_expression

    @route_response_selection_expression.setter
    def route_response_selection_expression(self, route_response_selection_expression):
        """Sets the route_response_selection_expression of this GetRouteResult.


        :param route_response_selection_expression: The route_response_selection_expression of this GetRouteResult.
        :type route_response_selection_expression: str
        """

        self._route_response_selection_expression = route_response_selection_expression

    @property
    def target(self):
        """Gets the target of this GetRouteResult.


        :return: The target of this GetRouteResult.
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this GetRouteResult.


        :param target: The target of this GetRouteResult.
        :type target: str
        """

        self._target = target
