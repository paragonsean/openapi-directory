/*
 * Amazon Translate
 * Provides translation of the input content from the source language to the target language.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateParallelDataRequest;
import org.openapitools.client.model.CreateParallelDataResponse;
import org.openapitools.client.model.DeleteParallelDataRequest;
import org.openapitools.client.model.DeleteParallelDataResponse;
import org.openapitools.client.model.DeleteTerminologyRequest;
import org.openapitools.client.model.DescribeTextTranslationJobRequest;
import org.openapitools.client.model.DescribeTextTranslationJobResponse;
import org.openapitools.client.model.GetParallelDataRequest;
import org.openapitools.client.model.GetParallelDataResponse;
import org.openapitools.client.model.GetTerminologyRequest;
import org.openapitools.client.model.GetTerminologyResponse;
import org.openapitools.client.model.ImportTerminologyRequest;
import org.openapitools.client.model.ImportTerminologyResponse;
import org.openapitools.client.model.ListLanguagesRequest;
import org.openapitools.client.model.ListLanguagesResponse;
import org.openapitools.client.model.ListParallelDataRequest;
import org.openapitools.client.model.ListParallelDataResponse;
import org.openapitools.client.model.ListTagsForResourceRequest;
import org.openapitools.client.model.ListTagsForResourceResponse;
import org.openapitools.client.model.ListTerminologiesRequest;
import org.openapitools.client.model.ListTerminologiesResponse;
import org.openapitools.client.model.ListTextTranslationJobsRequest;
import org.openapitools.client.model.ListTextTranslationJobsResponse;
import org.openapitools.client.model.StartTextTranslationJobRequest;
import org.openapitools.client.model.StartTextTranslationJobResponse;
import org.openapitools.client.model.StopTextTranslationJobRequest;
import org.openapitools.client.model.StopTextTranslationJobResponse;
import org.openapitools.client.model.TagResourceRequest;
import org.openapitools.client.model.TranslateDocumentRequest;
import org.openapitools.client.model.TranslateDocumentResponse;
import org.openapitools.client.model.TranslateTextRequest;
import org.openapitools.client.model.TranslateTextResponse;
import org.openapitools.client.model.UntagResourceRequest;
import org.openapitools.client.model.UpdateParallelDataRequest;
import org.openapitools.client.model.UpdateParallelDataResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Creates a parallel data resource in Amazon Translate by importing an input file from Amazon S3. Parallel data files contain examples that show how you want segments of text to be translated. By adding parallel data, you can influence the style, tone, and word choice in your translation output.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createParallelDataTest() throws ApiException {
        String xAmzTarget = null;
        CreateParallelDataRequest createParallelDataRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateParallelDataResponse response = api.createParallelData(xAmzTarget, createParallelDataRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a parallel data resource in Amazon Translate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteParallelDataTest() throws ApiException {
        String xAmzTarget = null;
        DeleteParallelDataRequest deleteParallelDataRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteParallelDataResponse response = api.deleteParallelData(xAmzTarget, deleteParallelDataRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * A synchronous action that deletes a custom terminology.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTerminologyTest() throws ApiException {
        String xAmzTarget = null;
        DeleteTerminologyRequest deleteTerminologyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteTerminology(xAmzTarget, deleteTerminologyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets the properties associated with an asynchronous batch translation job including name, ID, status, source and target languages, input/output S3 buckets, and so on.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeTextTranslationJobTest() throws ApiException {
        String xAmzTarget = null;
        DescribeTextTranslationJobRequest describeTextTranslationJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeTextTranslationJobResponse response = api.describeTextTranslationJob(xAmzTarget, describeTextTranslationJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Provides information about a parallel data resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getParallelDataTest() throws ApiException {
        String xAmzTarget = null;
        GetParallelDataRequest getParallelDataRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetParallelDataResponse response = api.getParallelData(xAmzTarget, getParallelDataRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Retrieves a custom terminology.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTerminologyTest() throws ApiException {
        String xAmzTarget = null;
        GetTerminologyRequest getTerminologyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetTerminologyResponse response = api.getTerminology(xAmzTarget, getTerminologyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates or updates a custom terminology, depending on whether one already exists for the given terminology name. Importing a terminology with the same name as an existing one will merge the terminologies based on the chosen merge strategy. The only supported merge strategy is OVERWRITE, where the imported terminology overwrites the existing terminology of the same name.&lt;/p&gt; &lt;p&gt;If you import a terminology that overwrites an existing one, the new terminology takes up to 10 minutes to fully propagate. After that, translations have access to the new terminology.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void importTerminologyTest() throws ApiException {
        String xAmzTarget = null;
        ImportTerminologyRequest importTerminologyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ImportTerminologyResponse response = api.importTerminology(xAmzTarget, importTerminologyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Provides a list of languages (RFC-5646 codes and names) that Amazon Translate supports.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listLanguagesTest() throws ApiException {
        String xAmzTarget = null;
        ListLanguagesRequest listLanguagesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListLanguagesResponse response = api.listLanguages(xAmzTarget, listLanguagesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Provides a list of your parallel data resources in Amazon Translate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listParallelDataTest() throws ApiException {
        String xAmzTarget = null;
        ListParallelDataRequest listParallelDataRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListParallelDataResponse response = api.listParallelData(xAmzTarget, listParallelDataRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists all tags associated with a given Amazon Translate resource. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/translate/latest/dg/tagging.html\&quot;&gt; Tagging your resources&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForResourceTest() throws ApiException {
        String xAmzTarget = null;
        ListTagsForResourceRequest listTagsForResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourceResponse response = api.listTagsForResource(xAmzTarget, listTagsForResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Provides a list of custom terminologies associated with your account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTerminologiesTest() throws ApiException {
        String xAmzTarget = null;
        ListTerminologiesRequest listTerminologiesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListTerminologiesResponse response = api.listTerminologies(xAmzTarget, listTerminologiesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Gets a list of the batch translation jobs that you have submitted.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTextTranslationJobsTest() throws ApiException {
        String xAmzTarget = null;
        ListTextTranslationJobsRequest listTextTranslationJobsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListTextTranslationJobsResponse response = api.listTextTranslationJobs(xAmzTarget, listTextTranslationJobsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Starts an asynchronous batch translation job. Use batch translation jobs to translate large volumes of text across multiple documents at once. For batch translation, you can input documents with different source languages (specify &lt;code&gt;auto&lt;/code&gt; as the source language). You can specify one or more target languages. Batch translation translates each input document into each of the target languages. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/translate/latest/dg/async.html\&quot;&gt;Asynchronous batch processing&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Batch translation jobs can be described with the &lt;a&gt;DescribeTextTranslationJob&lt;/a&gt; operation, listed with the &lt;a&gt;ListTextTranslationJobs&lt;/a&gt; operation, and stopped with the &lt;a&gt;StopTextTranslationJob&lt;/a&gt; operation.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startTextTranslationJobTest() throws ApiException {
        String xAmzTarget = null;
        StartTextTranslationJobRequest startTextTranslationJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StartTextTranslationJobResponse response = api.startTextTranslationJob(xAmzTarget, startTextTranslationJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Stops an asynchronous batch translation job that is in progress.&lt;/p&gt; &lt;p&gt;If the job&#39;s state is &lt;code&gt;IN_PROGRESS&lt;/code&gt;, the job will be marked for termination and put into the &lt;code&gt;STOP_REQUESTED&lt;/code&gt; state. If the job completes before it can be stopped, it is put into the &lt;code&gt;COMPLETED&lt;/code&gt; state. Otherwise, the job is put into the &lt;code&gt;STOPPED&lt;/code&gt; state.&lt;/p&gt; &lt;p&gt;Asynchronous batch translation jobs are started with the &lt;a&gt;StartTextTranslationJob&lt;/a&gt; operation. You can use the &lt;a&gt;DescribeTextTranslationJob&lt;/a&gt; or &lt;a&gt;ListTextTranslationJobs&lt;/a&gt; operations to get a batch translation job&#39;s &lt;code&gt;JobId&lt;/code&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void stopTextTranslationJobTest() throws ApiException {
        String xAmzTarget = null;
        StopTextTranslationJobRequest stopTextTranslationJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StopTextTranslationJobResponse response = api.stopTextTranslationJob(xAmzTarget, stopTextTranslationJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Associates a specific tag with a resource. A tag is a key-value pair that adds as a metadata to a resource. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/translate/latest/dg/tagging.html\&quot;&gt; Tagging your resources&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagResourceTest() throws ApiException {
        String xAmzTarget = null;
        TagResourceRequest tagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.tagResource(xAmzTarget, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Translates the input document from the source language to the target language. This synchronous operation supports plain text or HTML for the input document. &lt;code&gt;TranslateDocument&lt;/code&gt; supports translations from English to any supported language, and from any supported language to English. Therefore, specify either the source language code or the target language code as “en” (English). &lt;/p&gt; &lt;p&gt; &lt;code&gt;TranslateDocument&lt;/code&gt; does not support language auto-detection. &lt;/p&gt; &lt;p&gt; If you set the &lt;code&gt;Formality&lt;/code&gt; parameter, the request will fail if the target language does not support formality. For a list of target languages that support formality, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/translate/latest/dg/customizing-translations-formality.html\&quot;&gt;Setting formality&lt;/a&gt;. &lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void translateDocumentTest() throws ApiException {
        String xAmzTarget = null;
        TranslateDocumentRequest translateDocumentRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        TranslateDocumentResponse response = api.translateDocument(xAmzTarget, translateDocumentRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Translates input text from the source language to the target language. For a list of available languages and language codes, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/translate/latest/dg/what-is-languages.html\&quot;&gt;Supported languages&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void translateTextTest() throws ApiException {
        String xAmzTarget = null;
        TranslateTextRequest translateTextRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        TranslateTextResponse response = api.translateText(xAmzTarget, translateTextRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes a specific tag associated with an Amazon Translate resource. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/translate/latest/dg/tagging.html\&quot;&gt; Tagging your resources&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagResourceTest() throws ApiException {
        String xAmzTarget = null;
        UntagResourceRequest untagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.untagResource(xAmzTarget, untagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a previously created parallel data resource by importing a new input file from Amazon S3.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateParallelDataTest() throws ApiException {
        String xAmzTarget = null;
        UpdateParallelDataRequest updateParallelDataRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateParallelDataResponse response = api.updateParallelData(xAmzTarget, updateParallelDataRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
