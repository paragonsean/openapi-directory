/**
 * Amazon Translate
 * Provides translation of the input content from the source language to the target language.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StartTextTranslationJobRequestSettings from './StartTextTranslationJobRequestSettings';

/**
 * The TranslateTextRequest model module.
 * @module model/TranslateTextRequest
 * @version 2017-07-01
 */
class TranslateTextRequest {
    /**
     * Constructs a new <code>TranslateTextRequest</code>.
     * @alias module:model/TranslateTextRequest
     * @param text {String} 
     * @param sourceLanguageCode {String} 
     * @param targetLanguageCode {String} 
     */
    constructor(text, sourceLanguageCode, targetLanguageCode) { 
        
        TranslateTextRequest.initialize(this, text, sourceLanguageCode, targetLanguageCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, text, sourceLanguageCode, targetLanguageCode) { 
        obj['Text'] = text;
        obj['SourceLanguageCode'] = sourceLanguageCode;
        obj['TargetLanguageCode'] = targetLanguageCode;
    }

    /**
     * Constructs a <code>TranslateTextRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TranslateTextRequest} obj Optional instance to populate.
     * @return {module:model/TranslateTextRequest} The populated <code>TranslateTextRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TranslateTextRequest();

            if (data.hasOwnProperty('Text')) {
                obj['Text'] = ApiClient.convertToType(data['Text'], 'String');
            }
            if (data.hasOwnProperty('TerminologyNames')) {
                obj['TerminologyNames'] = ApiClient.convertToType(data['TerminologyNames'], Array);
            }
            if (data.hasOwnProperty('SourceLanguageCode')) {
                obj['SourceLanguageCode'] = ApiClient.convertToType(data['SourceLanguageCode'], 'String');
            }
            if (data.hasOwnProperty('TargetLanguageCode')) {
                obj['TargetLanguageCode'] = ApiClient.convertToType(data['TargetLanguageCode'], 'String');
            }
            if (data.hasOwnProperty('Settings')) {
                obj['Settings'] = StartTextTranslationJobRequestSettings.constructFromObject(data['Settings']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TranslateTextRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TranslateTextRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TranslateTextRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Text`
        if (data['Text']) { // data not null
          String.validateJSON(data['Text']);
        }
        // validate the optional field `TerminologyNames`
        if (data['TerminologyNames']) { // data not null
          Array.validateJSON(data['TerminologyNames']);
        }
        // validate the optional field `SourceLanguageCode`
        if (data['SourceLanguageCode']) { // data not null
          String.validateJSON(data['SourceLanguageCode']);
        }
        // validate the optional field `TargetLanguageCode`
        if (data['TargetLanguageCode']) { // data not null
          String.validateJSON(data['TargetLanguageCode']);
        }
        // validate the optional field `Settings`
        if (data['Settings']) { // data not null
          StartTextTranslationJobRequestSettings.validateJSON(data['Settings']);
        }

        return true;
    }


}

TranslateTextRequest.RequiredProperties = ["Text", "SourceLanguageCode", "TargetLanguageCode"];

/**
 * @member {String} Text
 */
TranslateTextRequest.prototype['Text'] = undefined;

/**
 * @member {Array} TerminologyNames
 */
TranslateTextRequest.prototype['TerminologyNames'] = undefined;

/**
 * @member {String} SourceLanguageCode
 */
TranslateTextRequest.prototype['SourceLanguageCode'] = undefined;

/**
 * @member {String} TargetLanguageCode
 */
TranslateTextRequest.prototype['TargetLanguageCode'] = undefined;

/**
 * @member {module:model/StartTextTranslationJobRequestSettings} Settings
 */
TranslateTextRequest.prototype['Settings'] = undefined;






export default TranslateTextRequest;

