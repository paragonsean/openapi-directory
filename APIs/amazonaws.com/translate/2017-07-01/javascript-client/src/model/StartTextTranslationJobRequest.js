/**
 * Amazon Translate
 * Provides translation of the input content from the source language to the target language.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StartTextTranslationJobRequestInputDataConfig from './StartTextTranslationJobRequestInputDataConfig';
import StartTextTranslationJobRequestOutputDataConfig from './StartTextTranslationJobRequestOutputDataConfig';
import StartTextTranslationJobRequestSettings from './StartTextTranslationJobRequestSettings';

/**
 * The StartTextTranslationJobRequest model module.
 * @module model/StartTextTranslationJobRequest
 * @version 2017-07-01
 */
class StartTextTranslationJobRequest {
    /**
     * Constructs a new <code>StartTextTranslationJobRequest</code>.
     * @alias module:model/StartTextTranslationJobRequest
     * @param inputDataConfig {module:model/StartTextTranslationJobRequestInputDataConfig} 
     * @param outputDataConfig {module:model/StartTextTranslationJobRequestOutputDataConfig} 
     * @param dataAccessRoleArn {String} 
     * @param sourceLanguageCode {String} 
     * @param targetLanguageCodes {Array} 
     * @param clientToken {String} 
     */
    constructor(inputDataConfig, outputDataConfig, dataAccessRoleArn, sourceLanguageCode, targetLanguageCodes, clientToken) { 
        
        StartTextTranslationJobRequest.initialize(this, inputDataConfig, outputDataConfig, dataAccessRoleArn, sourceLanguageCode, targetLanguageCodes, clientToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, inputDataConfig, outputDataConfig, dataAccessRoleArn, sourceLanguageCode, targetLanguageCodes, clientToken) { 
        obj['InputDataConfig'] = inputDataConfig;
        obj['OutputDataConfig'] = outputDataConfig;
        obj['DataAccessRoleArn'] = dataAccessRoleArn;
        obj['SourceLanguageCode'] = sourceLanguageCode;
        obj['TargetLanguageCodes'] = targetLanguageCodes;
        obj['ClientToken'] = clientToken;
    }

    /**
     * Constructs a <code>StartTextTranslationJobRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StartTextTranslationJobRequest} obj Optional instance to populate.
     * @return {module:model/StartTextTranslationJobRequest} The populated <code>StartTextTranslationJobRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StartTextTranslationJobRequest();

            if (data.hasOwnProperty('JobName')) {
                obj['JobName'] = ApiClient.convertToType(data['JobName'], 'String');
            }
            if (data.hasOwnProperty('InputDataConfig')) {
                obj['InputDataConfig'] = StartTextTranslationJobRequestInputDataConfig.constructFromObject(data['InputDataConfig']);
            }
            if (data.hasOwnProperty('OutputDataConfig')) {
                obj['OutputDataConfig'] = StartTextTranslationJobRequestOutputDataConfig.constructFromObject(data['OutputDataConfig']);
            }
            if (data.hasOwnProperty('DataAccessRoleArn')) {
                obj['DataAccessRoleArn'] = ApiClient.convertToType(data['DataAccessRoleArn'], 'String');
            }
            if (data.hasOwnProperty('SourceLanguageCode')) {
                obj['SourceLanguageCode'] = ApiClient.convertToType(data['SourceLanguageCode'], 'String');
            }
            if (data.hasOwnProperty('TargetLanguageCodes')) {
                obj['TargetLanguageCodes'] = ApiClient.convertToType(data['TargetLanguageCodes'], Array);
            }
            if (data.hasOwnProperty('TerminologyNames')) {
                obj['TerminologyNames'] = ApiClient.convertToType(data['TerminologyNames'], Array);
            }
            if (data.hasOwnProperty('ParallelDataNames')) {
                obj['ParallelDataNames'] = ApiClient.convertToType(data['ParallelDataNames'], Array);
            }
            if (data.hasOwnProperty('ClientToken')) {
                obj['ClientToken'] = ApiClient.convertToType(data['ClientToken'], 'String');
            }
            if (data.hasOwnProperty('Settings')) {
                obj['Settings'] = StartTextTranslationJobRequestSettings.constructFromObject(data['Settings']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StartTextTranslationJobRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StartTextTranslationJobRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StartTextTranslationJobRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `JobName`
        if (data['JobName']) { // data not null
          String.validateJSON(data['JobName']);
        }
        // validate the optional field `InputDataConfig`
        if (data['InputDataConfig']) { // data not null
          StartTextTranslationJobRequestInputDataConfig.validateJSON(data['InputDataConfig']);
        }
        // validate the optional field `OutputDataConfig`
        if (data['OutputDataConfig']) { // data not null
          StartTextTranslationJobRequestOutputDataConfig.validateJSON(data['OutputDataConfig']);
        }
        // validate the optional field `DataAccessRoleArn`
        if (data['DataAccessRoleArn']) { // data not null
          String.validateJSON(data['DataAccessRoleArn']);
        }
        // validate the optional field `SourceLanguageCode`
        if (data['SourceLanguageCode']) { // data not null
          String.validateJSON(data['SourceLanguageCode']);
        }
        // validate the optional field `TargetLanguageCodes`
        if (data['TargetLanguageCodes']) { // data not null
          Array.validateJSON(data['TargetLanguageCodes']);
        }
        // validate the optional field `TerminologyNames`
        if (data['TerminologyNames']) { // data not null
          Array.validateJSON(data['TerminologyNames']);
        }
        // validate the optional field `ParallelDataNames`
        if (data['ParallelDataNames']) { // data not null
          Array.validateJSON(data['ParallelDataNames']);
        }
        // validate the optional field `ClientToken`
        if (data['ClientToken']) { // data not null
          String.validateJSON(data['ClientToken']);
        }
        // validate the optional field `Settings`
        if (data['Settings']) { // data not null
          StartTextTranslationJobRequestSettings.validateJSON(data['Settings']);
        }

        return true;
    }


}

StartTextTranslationJobRequest.RequiredProperties = ["InputDataConfig", "OutputDataConfig", "DataAccessRoleArn", "SourceLanguageCode", "TargetLanguageCodes", "ClientToken"];

/**
 * @member {String} JobName
 */
StartTextTranslationJobRequest.prototype['JobName'] = undefined;

/**
 * @member {module:model/StartTextTranslationJobRequestInputDataConfig} InputDataConfig
 */
StartTextTranslationJobRequest.prototype['InputDataConfig'] = undefined;

/**
 * @member {module:model/StartTextTranslationJobRequestOutputDataConfig} OutputDataConfig
 */
StartTextTranslationJobRequest.prototype['OutputDataConfig'] = undefined;

/**
 * @member {String} DataAccessRoleArn
 */
StartTextTranslationJobRequest.prototype['DataAccessRoleArn'] = undefined;

/**
 * @member {String} SourceLanguageCode
 */
StartTextTranslationJobRequest.prototype['SourceLanguageCode'] = undefined;

/**
 * @member {Array} TargetLanguageCodes
 */
StartTextTranslationJobRequest.prototype['TargetLanguageCodes'] = undefined;

/**
 * @member {Array} TerminologyNames
 */
StartTextTranslationJobRequest.prototype['TerminologyNames'] = undefined;

/**
 * @member {Array} ParallelDataNames
 */
StartTextTranslationJobRequest.prototype['ParallelDataNames'] = undefined;

/**
 * @member {String} ClientToken
 */
StartTextTranslationJobRequest.prototype['ClientToken'] = undefined;

/**
 * @member {module:model/StartTextTranslationJobRequestSettings} Settings
 */
StartTextTranslationJobRequest.prototype['Settings'] = undefined;






export default StartTextTranslationJobRequest;

