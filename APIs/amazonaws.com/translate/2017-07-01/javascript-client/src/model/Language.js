/**
 * Amazon Translate
 * Provides translation of the input content from the source language to the target language.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Language model module.
 * @module model/Language
 * @version 2017-07-01
 */
class Language {
    /**
     * Constructs a new <code>Language</code>.
     * A supported language.
     * @alias module:model/Language
     * @param languageName {String} 
     * @param languageCode {String} 
     */
    constructor(languageName, languageCode) { 
        
        Language.initialize(this, languageName, languageCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, languageName, languageCode) { 
        obj['LanguageName'] = languageName;
        obj['LanguageCode'] = languageCode;
    }

    /**
     * Constructs a <code>Language</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Language} obj Optional instance to populate.
     * @return {module:model/Language} The populated <code>Language</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Language();

            if (data.hasOwnProperty('LanguageName')) {
                obj['LanguageName'] = ApiClient.convertToType(data['LanguageName'], 'String');
            }
            if (data.hasOwnProperty('LanguageCode')) {
                obj['LanguageCode'] = ApiClient.convertToType(data['LanguageCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Language</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Language</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Language.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `LanguageName`
        if (data['LanguageName']) { // data not null
          String.validateJSON(data['LanguageName']);
        }
        // validate the optional field `LanguageCode`
        if (data['LanguageCode']) { // data not null
          String.validateJSON(data['LanguageCode']);
        }

        return true;
    }


}

Language.RequiredProperties = ["LanguageName", "LanguageCode"];

/**
 * @member {String} LanguageName
 */
Language.prototype['LanguageName'] = undefined;

/**
 * @member {String} LanguageCode
 */
Language.prototype['LanguageCode'] = undefined;






export default Language;

