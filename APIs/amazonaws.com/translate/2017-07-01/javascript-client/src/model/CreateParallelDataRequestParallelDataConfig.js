/**
 * Amazon Translate
 * Provides translation of the input content from the source language to the target language.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ParallelDataConfig from './ParallelDataConfig';
import ParallelDataFormat from './ParallelDataFormat';

/**
 * The CreateParallelDataRequestParallelDataConfig model module.
 * @module model/CreateParallelDataRequestParallelDataConfig
 * @version 2017-07-01
 */
class CreateParallelDataRequestParallelDataConfig {
    /**
     * Constructs a new <code>CreateParallelDataRequestParallelDataConfig</code>.
     * @alias module:model/CreateParallelDataRequestParallelDataConfig
     * @implements module:model/ParallelDataConfig
     * @param s3Uri {String} 
     * @param format {module:model/ParallelDataFormat} 
     */
    constructor(s3Uri, format) { 
        ParallelDataConfig.initialize(this, s3Uri, format);
        CreateParallelDataRequestParallelDataConfig.initialize(this, s3Uri, format);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, s3Uri, format) { 
        obj['S3Uri'] = s3Uri;
        obj['Format'] = format;
    }

    /**
     * Constructs a <code>CreateParallelDataRequestParallelDataConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateParallelDataRequestParallelDataConfig} obj Optional instance to populate.
     * @return {module:model/CreateParallelDataRequestParallelDataConfig} The populated <code>CreateParallelDataRequestParallelDataConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateParallelDataRequestParallelDataConfig();
            ParallelDataConfig.constructFromObject(data, obj);

            if (data.hasOwnProperty('S3Uri')) {
                obj['S3Uri'] = ApiClient.convertToType(data['S3Uri'], 'String');
            }
            if (data.hasOwnProperty('Format')) {
                obj['Format'] = ApiClient.convertToType(data['Format'], ParallelDataFormat);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateParallelDataRequestParallelDataConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateParallelDataRequestParallelDataConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateParallelDataRequestParallelDataConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `S3Uri`
        if (data['S3Uri']) { // data not null
          String.validateJSON(data['S3Uri']);
        }
        // validate the optional field `Format`
        if (data['Format']) { // data not null
          ParallelDataFormat.validateJSON(data['Format']);
        }

        return true;
    }


}

CreateParallelDataRequestParallelDataConfig.RequiredProperties = ["S3Uri", "Format"];

/**
 * @member {String} S3Uri
 */
CreateParallelDataRequestParallelDataConfig.prototype['S3Uri'] = undefined;

/**
 * @member {module:model/ParallelDataFormat} Format
 */
CreateParallelDataRequestParallelDataConfig.prototype['Format'] = undefined;


// Implement ParallelDataConfig interface:
/**
 * @member {String} S3Uri
 */
ParallelDataConfig.prototype['S3Uri'] = undefined;
/**
 * @member {module:model/ParallelDataFormat} Format
 */
ParallelDataConfig.prototype['Format'] = undefined;




export default CreateParallelDataRequestParallelDataConfig;

