/**
 * Amazon Translate
 * Provides translation of the input content from the source language to the target language.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateParallelDataRequestParallelDataConfig from './CreateParallelDataRequestParallelDataConfig';

/**
 * The UpdateParallelDataRequest model module.
 * @module model/UpdateParallelDataRequest
 * @version 2017-07-01
 */
class UpdateParallelDataRequest {
    /**
     * Constructs a new <code>UpdateParallelDataRequest</code>.
     * @alias module:model/UpdateParallelDataRequest
     * @param name {String} 
     * @param parallelDataConfig {module:model/CreateParallelDataRequestParallelDataConfig} 
     * @param clientToken {String} 
     */
    constructor(name, parallelDataConfig, clientToken) { 
        
        UpdateParallelDataRequest.initialize(this, name, parallelDataConfig, clientToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, parallelDataConfig, clientToken) { 
        obj['Name'] = name;
        obj['ParallelDataConfig'] = parallelDataConfig;
        obj['ClientToken'] = clientToken;
    }

    /**
     * Constructs a <code>UpdateParallelDataRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateParallelDataRequest} obj Optional instance to populate.
     * @return {module:model/UpdateParallelDataRequest} The populated <code>UpdateParallelDataRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateParallelDataRequest();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('ParallelDataConfig')) {
                obj['ParallelDataConfig'] = CreateParallelDataRequestParallelDataConfig.constructFromObject(data['ParallelDataConfig']);
            }
            if (data.hasOwnProperty('ClientToken')) {
                obj['ClientToken'] = ApiClient.convertToType(data['ClientToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateParallelDataRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateParallelDataRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateParallelDataRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `ParallelDataConfig`
        if (data['ParallelDataConfig']) { // data not null
          CreateParallelDataRequestParallelDataConfig.validateJSON(data['ParallelDataConfig']);
        }
        // validate the optional field `ClientToken`
        if (data['ClientToken']) { // data not null
          String.validateJSON(data['ClientToken']);
        }

        return true;
    }


}

UpdateParallelDataRequest.RequiredProperties = ["Name", "ParallelDataConfig", "ClientToken"];

/**
 * @member {String} Name
 */
UpdateParallelDataRequest.prototype['Name'] = undefined;

/**
 * @member {String} Description
 */
UpdateParallelDataRequest.prototype['Description'] = undefined;

/**
 * @member {module:model/CreateParallelDataRequestParallelDataConfig} ParallelDataConfig
 */
UpdateParallelDataRequest.prototype['ParallelDataConfig'] = undefined;

/**
 * @member {String} ClientToken
 */
UpdateParallelDataRequest.prototype['ClientToken'] = undefined;






export default UpdateParallelDataRequest;

