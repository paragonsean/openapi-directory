/**
 * Amazon Translate
 * Provides translation of the input content from the source language to the target language.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ParallelDataDataLocation from './ParallelDataDataLocation';

/**
 * The GetParallelDataResponseAuxiliaryDataLocation model module.
 * @module model/GetParallelDataResponseAuxiliaryDataLocation
 * @version 2017-07-01
 */
class GetParallelDataResponseAuxiliaryDataLocation {
    /**
     * Constructs a new <code>GetParallelDataResponseAuxiliaryDataLocation</code>.
     * @alias module:model/GetParallelDataResponseAuxiliaryDataLocation
     * @implements module:model/ParallelDataDataLocation
     * @param repositoryType {String} 
     * @param location {String} 
     */
    constructor(repositoryType, location) { 
        ParallelDataDataLocation.initialize(this, repositoryType, location);
        GetParallelDataResponseAuxiliaryDataLocation.initialize(this, repositoryType, location);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, repositoryType, location) { 
        obj['RepositoryType'] = repositoryType;
        obj['Location'] = location;
    }

    /**
     * Constructs a <code>GetParallelDataResponseAuxiliaryDataLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetParallelDataResponseAuxiliaryDataLocation} obj Optional instance to populate.
     * @return {module:model/GetParallelDataResponseAuxiliaryDataLocation} The populated <code>GetParallelDataResponseAuxiliaryDataLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetParallelDataResponseAuxiliaryDataLocation();
            ParallelDataDataLocation.constructFromObject(data, obj);

            if (data.hasOwnProperty('RepositoryType')) {
                obj['RepositoryType'] = ApiClient.convertToType(data['RepositoryType'], 'String');
            }
            if (data.hasOwnProperty('Location')) {
                obj['Location'] = ApiClient.convertToType(data['Location'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetParallelDataResponseAuxiliaryDataLocation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetParallelDataResponseAuxiliaryDataLocation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetParallelDataResponseAuxiliaryDataLocation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `RepositoryType`
        if (data['RepositoryType']) { // data not null
          String.validateJSON(data['RepositoryType']);
        }
        // validate the optional field `Location`
        if (data['Location']) { // data not null
          String.validateJSON(data['Location']);
        }

        return true;
    }


}

GetParallelDataResponseAuxiliaryDataLocation.RequiredProperties = ["RepositoryType", "Location"];

/**
 * @member {String} RepositoryType
 */
GetParallelDataResponseAuxiliaryDataLocation.prototype['RepositoryType'] = undefined;

/**
 * @member {String} Location
 */
GetParallelDataResponseAuxiliaryDataLocation.prototype['Location'] = undefined;


// Implement ParallelDataDataLocation interface:
/**
 * @member {String} RepositoryType
 */
ParallelDataDataLocation.prototype['RepositoryType'] = undefined;
/**
 * @member {String} Location
 */
ParallelDataDataLocation.prototype['Location'] = undefined;




export default GetParallelDataResponseAuxiliaryDataLocation;

