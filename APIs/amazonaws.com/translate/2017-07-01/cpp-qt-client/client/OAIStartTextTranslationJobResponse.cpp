/**
 * Amazon Translate
 * Provides translation of the input content from the source language to the target language.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartTextTranslationJobResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartTextTranslationJobResponse::OAIStartTextTranslationJobResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartTextTranslationJobResponse::OAIStartTextTranslationJobResponse() {
    this->initializeModel();
}

OAIStartTextTranslationJobResponse::~OAIStartTextTranslationJobResponse() {}

void OAIStartTextTranslationJobResponse::initializeModel() {

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_job_status_isSet = false;
    m_job_status_isValid = false;
}

void OAIStartTextTranslationJobResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartTextTranslationJobResponse::fromJsonObject(QJsonObject json) {

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("JobId")]);
    m_job_id_isSet = !json[QString("JobId")].isNull() && m_job_id_isValid;

    m_job_status_isValid = ::OpenAPI::fromJsonValue(m_job_status, json[QString("JobStatus")]);
    m_job_status_isSet = !json[QString("JobStatus")].isNull() && m_job_status_isValid;
}

QString OAIStartTextTranslationJobResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartTextTranslationJobResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_job_id_isSet) {
        obj.insert(QString("JobId"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_job_status.isSet()) {
        obj.insert(QString("JobStatus"), ::OpenAPI::toJsonValue(m_job_status));
    }
    return obj;
}

QString OAIStartTextTranslationJobResponse::getJobId() const {
    return m_job_id;
}
void OAIStartTextTranslationJobResponse::setJobId(const QString &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIStartTextTranslationJobResponse::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIStartTextTranslationJobResponse::is_job_id_Valid() const{
    return m_job_id_isValid;
}

OAIJobStatus OAIStartTextTranslationJobResponse::getJobStatus() const {
    return m_job_status;
}
void OAIStartTextTranslationJobResponse::setJobStatus(const OAIJobStatus &job_status) {
    m_job_status = job_status;
    m_job_status_isSet = true;
}

bool OAIStartTextTranslationJobResponse::is_job_status_Set() const{
    return m_job_status_isSet;
}

bool OAIStartTextTranslationJobResponse::is_job_status_Valid() const{
    return m_job_status_isValid;
}

bool OAIStartTextTranslationJobResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartTextTranslationJobResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
