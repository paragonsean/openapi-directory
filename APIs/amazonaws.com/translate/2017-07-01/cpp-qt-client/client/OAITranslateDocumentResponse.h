/**
 * Amazon Translate
 * Provides translation of the input content from the source language to the target language.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITranslateDocumentResponse.h
 *
 * 
 */

#ifndef OAITranslateDocumentResponse_H
#define OAITranslateDocumentResponse_H

#include <QJsonObject>

#include "OAITranslateDocumentResponse_TranslatedDocument.h"
#include "OAITranslationSettings.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITranslateDocumentResponse_TranslatedDocument;
class OAITranslationSettings;

class OAITranslateDocumentResponse : public OAIObject {
public:
    OAITranslateDocumentResponse();
    OAITranslateDocumentResponse(QString json);
    ~OAITranslateDocumentResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITranslateDocumentResponse_TranslatedDocument getTranslatedDocument() const;
    void setTranslatedDocument(const OAITranslateDocumentResponse_TranslatedDocument &translated_document);
    bool is_translated_document_Set() const;
    bool is_translated_document_Valid() const;

    QString getSourceLanguageCode() const;
    void setSourceLanguageCode(const QString &source_language_code);
    bool is_source_language_code_Set() const;
    bool is_source_language_code_Valid() const;

    QString getTargetLanguageCode() const;
    void setTargetLanguageCode(const QString &target_language_code);
    bool is_target_language_code_Set() const;
    bool is_target_language_code_Valid() const;

    QList getAppliedTerminologies() const;
    void setAppliedTerminologies(const QList &applied_terminologies);
    bool is_applied_terminologies_Set() const;
    bool is_applied_terminologies_Valid() const;

    OAITranslationSettings getAppliedSettings() const;
    void setAppliedSettings(const OAITranslationSettings &applied_settings);
    bool is_applied_settings_Set() const;
    bool is_applied_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITranslateDocumentResponse_TranslatedDocument m_translated_document;
    bool m_translated_document_isSet;
    bool m_translated_document_isValid;

    QString m_source_language_code;
    bool m_source_language_code_isSet;
    bool m_source_language_code_isValid;

    QString m_target_language_code;
    bool m_target_language_code_isSet;
    bool m_target_language_code_isValid;

    QList m_applied_terminologies;
    bool m_applied_terminologies_isSet;
    bool m_applied_terminologies_isValid;

    OAITranslationSettings m_applied_settings;
    bool m_applied_settings_isSet;
    bool m_applied_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITranslateDocumentResponse)

#endif // OAITranslateDocumentResponse_H
