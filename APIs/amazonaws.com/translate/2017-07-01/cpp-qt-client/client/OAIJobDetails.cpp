/**
 * Amazon Translate
 * Provides translation of the input content from the source language to the target language.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobDetails::OAIJobDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobDetails::OAIJobDetails() {
    this->initializeModel();
}

OAIJobDetails::~OAIJobDetails() {}

void OAIJobDetails::initializeModel() {

    m_translated_documents_count_isSet = false;
    m_translated_documents_count_isValid = false;

    m_documents_with_errors_count_isSet = false;
    m_documents_with_errors_count_isValid = false;

    m_input_documents_count_isSet = false;
    m_input_documents_count_isValid = false;
}

void OAIJobDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobDetails::fromJsonObject(QJsonObject json) {

    m_translated_documents_count_isValid = ::OpenAPI::fromJsonValue(m_translated_documents_count, json[QString("TranslatedDocumentsCount")]);
    m_translated_documents_count_isSet = !json[QString("TranslatedDocumentsCount")].isNull() && m_translated_documents_count_isValid;

    m_documents_with_errors_count_isValid = ::OpenAPI::fromJsonValue(m_documents_with_errors_count, json[QString("DocumentsWithErrorsCount")]);
    m_documents_with_errors_count_isSet = !json[QString("DocumentsWithErrorsCount")].isNull() && m_documents_with_errors_count_isValid;

    m_input_documents_count_isValid = ::OpenAPI::fromJsonValue(m_input_documents_count, json[QString("InputDocumentsCount")]);
    m_input_documents_count_isSet = !json[QString("InputDocumentsCount")].isNull() && m_input_documents_count_isValid;
}

QString OAIJobDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_translated_documents_count_isSet) {
        obj.insert(QString("TranslatedDocumentsCount"), ::OpenAPI::toJsonValue(m_translated_documents_count));
    }
    if (m_documents_with_errors_count_isSet) {
        obj.insert(QString("DocumentsWithErrorsCount"), ::OpenAPI::toJsonValue(m_documents_with_errors_count));
    }
    if (m_input_documents_count_isSet) {
        obj.insert(QString("InputDocumentsCount"), ::OpenAPI::toJsonValue(m_input_documents_count));
    }
    return obj;
}

qint32 OAIJobDetails::getTranslatedDocumentsCount() const {
    return m_translated_documents_count;
}
void OAIJobDetails::setTranslatedDocumentsCount(const qint32 &translated_documents_count) {
    m_translated_documents_count = translated_documents_count;
    m_translated_documents_count_isSet = true;
}

bool OAIJobDetails::is_translated_documents_count_Set() const{
    return m_translated_documents_count_isSet;
}

bool OAIJobDetails::is_translated_documents_count_Valid() const{
    return m_translated_documents_count_isValid;
}

qint32 OAIJobDetails::getDocumentsWithErrorsCount() const {
    return m_documents_with_errors_count;
}
void OAIJobDetails::setDocumentsWithErrorsCount(const qint32 &documents_with_errors_count) {
    m_documents_with_errors_count = documents_with_errors_count;
    m_documents_with_errors_count_isSet = true;
}

bool OAIJobDetails::is_documents_with_errors_count_Set() const{
    return m_documents_with_errors_count_isSet;
}

bool OAIJobDetails::is_documents_with_errors_count_Valid() const{
    return m_documents_with_errors_count_isValid;
}

qint32 OAIJobDetails::getInputDocumentsCount() const {
    return m_input_documents_count;
}
void OAIJobDetails::setInputDocumentsCount(const qint32 &input_documents_count) {
    m_input_documents_count = input_documents_count;
    m_input_documents_count_isSet = true;
}

bool OAIJobDetails::is_input_documents_count_Set() const{
    return m_input_documents_count_isSet;
}

bool OAIJobDetails::is_input_documents_count_Valid() const{
    return m_input_documents_count_isValid;
}

bool OAIJobDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_translated_documents_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_documents_with_errors_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_documents_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
