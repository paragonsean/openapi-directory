/**
 * Amazon Translate
 * Provides translation of the input content from the source language to the target language.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITranslateTextResponse.h
 *
 * 
 */

#ifndef OAITranslateTextResponse_H
#define OAITranslateTextResponse_H

#include <QJsonObject>

#include "OAITranslateTextResponse_AppliedSettings.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITranslateTextResponse_AppliedSettings;

class OAITranslateTextResponse : public OAIObject {
public:
    OAITranslateTextResponse();
    OAITranslateTextResponse(QString json);
    ~OAITranslateTextResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTranslatedText() const;
    void setTranslatedText(const QString &translated_text);
    bool is_translated_text_Set() const;
    bool is_translated_text_Valid() const;

    QString getSourceLanguageCode() const;
    void setSourceLanguageCode(const QString &source_language_code);
    bool is_source_language_code_Set() const;
    bool is_source_language_code_Valid() const;

    QString getTargetLanguageCode() const;
    void setTargetLanguageCode(const QString &target_language_code);
    bool is_target_language_code_Set() const;
    bool is_target_language_code_Valid() const;

    QList getAppliedTerminologies() const;
    void setAppliedTerminologies(const QList &applied_terminologies);
    bool is_applied_terminologies_Set() const;
    bool is_applied_terminologies_Valid() const;

    OAITranslateTextResponse_AppliedSettings getAppliedSettings() const;
    void setAppliedSettings(const OAITranslateTextResponse_AppliedSettings &applied_settings);
    bool is_applied_settings_Set() const;
    bool is_applied_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_translated_text;
    bool m_translated_text_isSet;
    bool m_translated_text_isValid;

    QString m_source_language_code;
    bool m_source_language_code_isSet;
    bool m_source_language_code_isValid;

    QString m_target_language_code;
    bool m_target_language_code_isSet;
    bool m_target_language_code_isValid;

    QList m_applied_terminologies;
    bool m_applied_terminologies_isSet;
    bool m_applied_terminologies_isValid;

    OAITranslateTextResponse_AppliedSettings m_applied_settings;
    bool m_applied_settings_isSet;
    bool m_applied_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITranslateTextResponse)

#endif // OAITranslateTextResponse_H
