/**
 * Amazon Translate
 * Provides translation of the input content from the source language to the target language.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartTextTranslationJobRequest.h
 *
 * 
 */

#ifndef OAIStartTextTranslationJobRequest_H
#define OAIStartTextTranslationJobRequest_H

#include <QJsonObject>

#include "OAIStartTextTranslationJobRequest_InputDataConfig.h"
#include "OAIStartTextTranslationJobRequest_OutputDataConfig.h"
#include "OAIStartTextTranslationJobRequest_Settings.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStartTextTranslationJobRequest_InputDataConfig;
class OAIStartTextTranslationJobRequest_OutputDataConfig;
class OAIStartTextTranslationJobRequest_Settings;

class OAIStartTextTranslationJobRequest : public OAIObject {
public:
    OAIStartTextTranslationJobRequest();
    OAIStartTextTranslationJobRequest(QString json);
    ~OAIStartTextTranslationJobRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getJobName() const;
    void setJobName(const QString &job_name);
    bool is_job_name_Set() const;
    bool is_job_name_Valid() const;

    OAIStartTextTranslationJobRequest_InputDataConfig getInputDataConfig() const;
    void setInputDataConfig(const OAIStartTextTranslationJobRequest_InputDataConfig &input_data_config);
    bool is_input_data_config_Set() const;
    bool is_input_data_config_Valid() const;

    OAIStartTextTranslationJobRequest_OutputDataConfig getOutputDataConfig() const;
    void setOutputDataConfig(const OAIStartTextTranslationJobRequest_OutputDataConfig &output_data_config);
    bool is_output_data_config_Set() const;
    bool is_output_data_config_Valid() const;

    QString getDataAccessRoleArn() const;
    void setDataAccessRoleArn(const QString &data_access_role_arn);
    bool is_data_access_role_arn_Set() const;
    bool is_data_access_role_arn_Valid() const;

    QString getSourceLanguageCode() const;
    void setSourceLanguageCode(const QString &source_language_code);
    bool is_source_language_code_Set() const;
    bool is_source_language_code_Valid() const;

    QList getTargetLanguageCodes() const;
    void setTargetLanguageCodes(const QList &target_language_codes);
    bool is_target_language_codes_Set() const;
    bool is_target_language_codes_Valid() const;

    QList getTerminologyNames() const;
    void setTerminologyNames(const QList &terminology_names);
    bool is_terminology_names_Set() const;
    bool is_terminology_names_Valid() const;

    QList getParallelDataNames() const;
    void setParallelDataNames(const QList &parallel_data_names);
    bool is_parallel_data_names_Set() const;
    bool is_parallel_data_names_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    OAIStartTextTranslationJobRequest_Settings getSettings() const;
    void setSettings(const OAIStartTextTranslationJobRequest_Settings &settings);
    bool is_settings_Set() const;
    bool is_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_job_name;
    bool m_job_name_isSet;
    bool m_job_name_isValid;

    OAIStartTextTranslationJobRequest_InputDataConfig m_input_data_config;
    bool m_input_data_config_isSet;
    bool m_input_data_config_isValid;

    OAIStartTextTranslationJobRequest_OutputDataConfig m_output_data_config;
    bool m_output_data_config_isSet;
    bool m_output_data_config_isValid;

    QString m_data_access_role_arn;
    bool m_data_access_role_arn_isSet;
    bool m_data_access_role_arn_isValid;

    QString m_source_language_code;
    bool m_source_language_code_isSet;
    bool m_source_language_code_isValid;

    QList m_target_language_codes;
    bool m_target_language_codes_isSet;
    bool m_target_language_codes_isValid;

    QList m_terminology_names;
    bool m_terminology_names_isSet;
    bool m_terminology_names_isValid;

    QList m_parallel_data_names;
    bool m_parallel_data_names_isSet;
    bool m_parallel_data_names_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    OAIStartTextTranslationJobRequest_Settings m_settings;
    bool m_settings_isSet;
    bool m_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartTextTranslationJobRequest)

#endif // OAIStartTextTranslationJobRequest_H
