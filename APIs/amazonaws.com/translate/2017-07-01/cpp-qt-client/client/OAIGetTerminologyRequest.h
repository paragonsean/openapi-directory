/**
 * Amazon Translate
 * Provides translation of the input content from the source language to the target language.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetTerminologyRequest.h
 *
 * 
 */

#ifndef OAIGetTerminologyRequest_H
#define OAIGetTerminologyRequest_H

#include <QJsonObject>

#include "OAITerminologyDataFormat.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetTerminologyRequest : public OAIObject {
public:
    OAIGetTerminologyRequest();
    OAIGetTerminologyRequest(QString json);
    ~OAIGetTerminologyRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAITerminologyDataFormat getTerminologyDataFormat() const;
    void setTerminologyDataFormat(const OAITerminologyDataFormat &terminology_data_format);
    bool is_terminology_data_format_Set() const;
    bool is_terminology_data_format_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAITerminologyDataFormat m_terminology_data_format;
    bool m_terminology_data_format_isSet;
    bool m_terminology_data_format_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetTerminologyRequest)

#endif // OAIGetTerminologyRequest_H
