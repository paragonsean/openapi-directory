/**
 * Amazon Translate
 * Provides translation of the input content from the source language to the target language.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParallelDataDataLocation.h
 *
 * The location of the most recent parallel data input file that was successfully imported into Amazon Translate.
 */

#ifndef OAIParallelDataDataLocation_H
#define OAIParallelDataDataLocation_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIParallelDataDataLocation : public OAIObject {
public:
    OAIParallelDataDataLocation();
    OAIParallelDataDataLocation(QString json);
    ~OAIParallelDataDataLocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRepositoryType() const;
    void setRepositoryType(const QString &repository_type);
    bool is_repository_type_Set() const;
    bool is_repository_type_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_repository_type;
    bool m_repository_type_isSet;
    bool m_repository_type_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParallelDataDataLocation)

#endif // OAIParallelDataDataLocation_H
