/**
 * Amazon Translate
 * Provides translation of the input content from the source language to the target language.
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITranslationSettings.h
 *
 * Settings to configure your translation output, including the option to set the formality level of the output text and the option to mask profane words and phrases.
 */

#ifndef OAITranslationSettings_H
#define OAITranslationSettings_H

#include <QJsonObject>

#include "OAIFormality.h"
#include "OAIProfanity.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITranslationSettings : public OAIObject {
public:
    OAITranslationSettings();
    OAITranslationSettings(QString json);
    ~OAITranslationSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFormality getFormality() const;
    void setFormality(const OAIFormality &formality);
    bool is_formality_Set() const;
    bool is_formality_Valid() const;

    OAIProfanity getProfanity() const;
    void setProfanity(const OAIProfanity &profanity);
    bool is_profanity_Set() const;
    bool is_profanity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFormality m_formality;
    bool m_formality_isSet;
    bool m_formality_isValid;

    OAIProfanity m_profanity;
    bool m_profanity_isSet;
    bool m_profanity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITranslationSettings)

#endif // OAITranslationSettings_H
