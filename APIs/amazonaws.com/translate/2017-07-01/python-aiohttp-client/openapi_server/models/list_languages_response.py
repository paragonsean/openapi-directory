# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.display_language_code import DisplayLanguageCode
from openapi_server import util


class ListLanguagesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, languages: List=None, display_language_code: DisplayLanguageCode=None, next_token: str=None):
        """ListLanguagesResponse - a model defined in OpenAPI

        :param languages: The languages of this ListLanguagesResponse.
        :param display_language_code: The display_language_code of this ListLanguagesResponse.
        :param next_token: The next_token of this ListLanguagesResponse.
        """
        self.openapi_types = {
            'languages': List,
            'display_language_code': DisplayLanguageCode,
            'next_token': str
        }

        self.attribute_map = {
            'languages': 'Languages',
            'display_language_code': 'DisplayLanguageCode',
            'next_token': 'NextToken'
        }

        self._languages = languages
        self._display_language_code = display_language_code
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListLanguagesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListLanguagesResponse of this ListLanguagesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def languages(self):
        """Gets the languages of this ListLanguagesResponse.


        :return: The languages of this ListLanguagesResponse.
        :rtype: List
        """
        return self._languages

    @languages.setter
    def languages(self, languages):
        """Sets the languages of this ListLanguagesResponse.


        :param languages: The languages of this ListLanguagesResponse.
        :type languages: List
        """

        self._languages = languages

    @property
    def display_language_code(self):
        """Gets the display_language_code of this ListLanguagesResponse.


        :return: The display_language_code of this ListLanguagesResponse.
        :rtype: DisplayLanguageCode
        """
        return self._display_language_code

    @display_language_code.setter
    def display_language_code(self, display_language_code):
        """Sets the display_language_code of this ListLanguagesResponse.


        :param display_language_code: The display_language_code of this ListLanguagesResponse.
        :type display_language_code: DisplayLanguageCode
        """

        self._display_language_code = display_language_code

    @property
    def next_token(self):
        """Gets the next_token of this ListLanguagesResponse.


        :return: The next_token of this ListLanguagesResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListLanguagesResponse.


        :param next_token: The next_token of this ListLanguagesResponse.
        :type next_token: str
        """

        self._next_token = next_token
