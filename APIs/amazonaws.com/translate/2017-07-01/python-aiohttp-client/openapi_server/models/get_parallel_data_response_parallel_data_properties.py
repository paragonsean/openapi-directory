# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_parallel_data_request_parallel_data_config import CreateParallelDataRequestParallelDataConfig
from openapi_server.models.encryption_key import EncryptionKey
from openapi_server.models.parallel_data_status import ParallelDataStatus
from openapi_server import util


class GetParallelDataResponseParallelDataProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, arn: str=None, description: str=None, status: ParallelDataStatus=None, source_language_code: str=None, target_language_codes: List=None, parallel_data_config: CreateParallelDataRequestParallelDataConfig=None, message: str=None, imported_data_size: int=None, imported_record_count: int=None, failed_record_count: int=None, skipped_record_count: int=None, encryption_key: EncryptionKey=None, created_at: datetime=None, last_updated_at: datetime=None, latest_update_attempt_status: ParallelDataStatus=None, latest_update_attempt_at: datetime=None):
        """GetParallelDataResponseParallelDataProperties - a model defined in OpenAPI

        :param name: The name of this GetParallelDataResponseParallelDataProperties.
        :param arn: The arn of this GetParallelDataResponseParallelDataProperties.
        :param description: The description of this GetParallelDataResponseParallelDataProperties.
        :param status: The status of this GetParallelDataResponseParallelDataProperties.
        :param source_language_code: The source_language_code of this GetParallelDataResponseParallelDataProperties.
        :param target_language_codes: The target_language_codes of this GetParallelDataResponseParallelDataProperties.
        :param parallel_data_config: The parallel_data_config of this GetParallelDataResponseParallelDataProperties.
        :param message: The message of this GetParallelDataResponseParallelDataProperties.
        :param imported_data_size: The imported_data_size of this GetParallelDataResponseParallelDataProperties.
        :param imported_record_count: The imported_record_count of this GetParallelDataResponseParallelDataProperties.
        :param failed_record_count: The failed_record_count of this GetParallelDataResponseParallelDataProperties.
        :param skipped_record_count: The skipped_record_count of this GetParallelDataResponseParallelDataProperties.
        :param encryption_key: The encryption_key of this GetParallelDataResponseParallelDataProperties.
        :param created_at: The created_at of this GetParallelDataResponseParallelDataProperties.
        :param last_updated_at: The last_updated_at of this GetParallelDataResponseParallelDataProperties.
        :param latest_update_attempt_status: The latest_update_attempt_status of this GetParallelDataResponseParallelDataProperties.
        :param latest_update_attempt_at: The latest_update_attempt_at of this GetParallelDataResponseParallelDataProperties.
        """
        self.openapi_types = {
            'name': str,
            'arn': str,
            'description': str,
            'status': ParallelDataStatus,
            'source_language_code': str,
            'target_language_codes': List,
            'parallel_data_config': CreateParallelDataRequestParallelDataConfig,
            'message': str,
            'imported_data_size': int,
            'imported_record_count': int,
            'failed_record_count': int,
            'skipped_record_count': int,
            'encryption_key': EncryptionKey,
            'created_at': datetime,
            'last_updated_at': datetime,
            'latest_update_attempt_status': ParallelDataStatus,
            'latest_update_attempt_at': datetime
        }

        self.attribute_map = {
            'name': 'Name',
            'arn': 'Arn',
            'description': 'Description',
            'status': 'Status',
            'source_language_code': 'SourceLanguageCode',
            'target_language_codes': 'TargetLanguageCodes',
            'parallel_data_config': 'ParallelDataConfig',
            'message': 'Message',
            'imported_data_size': 'ImportedDataSize',
            'imported_record_count': 'ImportedRecordCount',
            'failed_record_count': 'FailedRecordCount',
            'skipped_record_count': 'SkippedRecordCount',
            'encryption_key': 'EncryptionKey',
            'created_at': 'CreatedAt',
            'last_updated_at': 'LastUpdatedAt',
            'latest_update_attempt_status': 'LatestUpdateAttemptStatus',
            'latest_update_attempt_at': 'LatestUpdateAttemptAt'
        }

        self._name = name
        self._arn = arn
        self._description = description
        self._status = status
        self._source_language_code = source_language_code
        self._target_language_codes = target_language_codes
        self._parallel_data_config = parallel_data_config
        self._message = message
        self._imported_data_size = imported_data_size
        self._imported_record_count = imported_record_count
        self._failed_record_count = failed_record_count
        self._skipped_record_count = skipped_record_count
        self._encryption_key = encryption_key
        self._created_at = created_at
        self._last_updated_at = last_updated_at
        self._latest_update_attempt_status = latest_update_attempt_status
        self._latest_update_attempt_at = latest_update_attempt_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetParallelDataResponseParallelDataProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetParallelDataResponse_ParallelDataProperties of this GetParallelDataResponseParallelDataProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this GetParallelDataResponseParallelDataProperties.


        :return: The name of this GetParallelDataResponseParallelDataProperties.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetParallelDataResponseParallelDataProperties.


        :param name: The name of this GetParallelDataResponseParallelDataProperties.
        :type name: str
        """

        self._name = name

    @property
    def arn(self):
        """Gets the arn of this GetParallelDataResponseParallelDataProperties.


        :return: The arn of this GetParallelDataResponseParallelDataProperties.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this GetParallelDataResponseParallelDataProperties.


        :param arn: The arn of this GetParallelDataResponseParallelDataProperties.
        :type arn: str
        """

        self._arn = arn

    @property
    def description(self):
        """Gets the description of this GetParallelDataResponseParallelDataProperties.


        :return: The description of this GetParallelDataResponseParallelDataProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetParallelDataResponseParallelDataProperties.


        :param description: The description of this GetParallelDataResponseParallelDataProperties.
        :type description: str
        """

        self._description = description

    @property
    def status(self):
        """Gets the status of this GetParallelDataResponseParallelDataProperties.


        :return: The status of this GetParallelDataResponseParallelDataProperties.
        :rtype: ParallelDataStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetParallelDataResponseParallelDataProperties.


        :param status: The status of this GetParallelDataResponseParallelDataProperties.
        :type status: ParallelDataStatus
        """

        self._status = status

    @property
    def source_language_code(self):
        """Gets the source_language_code of this GetParallelDataResponseParallelDataProperties.


        :return: The source_language_code of this GetParallelDataResponseParallelDataProperties.
        :rtype: str
        """
        return self._source_language_code

    @source_language_code.setter
    def source_language_code(self, source_language_code):
        """Sets the source_language_code of this GetParallelDataResponseParallelDataProperties.


        :param source_language_code: The source_language_code of this GetParallelDataResponseParallelDataProperties.
        :type source_language_code: str
        """

        self._source_language_code = source_language_code

    @property
    def target_language_codes(self):
        """Gets the target_language_codes of this GetParallelDataResponseParallelDataProperties.


        :return: The target_language_codes of this GetParallelDataResponseParallelDataProperties.
        :rtype: List
        """
        return self._target_language_codes

    @target_language_codes.setter
    def target_language_codes(self, target_language_codes):
        """Sets the target_language_codes of this GetParallelDataResponseParallelDataProperties.


        :param target_language_codes: The target_language_codes of this GetParallelDataResponseParallelDataProperties.
        :type target_language_codes: List
        """

        self._target_language_codes = target_language_codes

    @property
    def parallel_data_config(self):
        """Gets the parallel_data_config of this GetParallelDataResponseParallelDataProperties.


        :return: The parallel_data_config of this GetParallelDataResponseParallelDataProperties.
        :rtype: CreateParallelDataRequestParallelDataConfig
        """
        return self._parallel_data_config

    @parallel_data_config.setter
    def parallel_data_config(self, parallel_data_config):
        """Sets the parallel_data_config of this GetParallelDataResponseParallelDataProperties.


        :param parallel_data_config: The parallel_data_config of this GetParallelDataResponseParallelDataProperties.
        :type parallel_data_config: CreateParallelDataRequestParallelDataConfig
        """

        self._parallel_data_config = parallel_data_config

    @property
    def message(self):
        """Gets the message of this GetParallelDataResponseParallelDataProperties.


        :return: The message of this GetParallelDataResponseParallelDataProperties.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this GetParallelDataResponseParallelDataProperties.


        :param message: The message of this GetParallelDataResponseParallelDataProperties.
        :type message: str
        """

        self._message = message

    @property
    def imported_data_size(self):
        """Gets the imported_data_size of this GetParallelDataResponseParallelDataProperties.


        :return: The imported_data_size of this GetParallelDataResponseParallelDataProperties.
        :rtype: int
        """
        return self._imported_data_size

    @imported_data_size.setter
    def imported_data_size(self, imported_data_size):
        """Sets the imported_data_size of this GetParallelDataResponseParallelDataProperties.


        :param imported_data_size: The imported_data_size of this GetParallelDataResponseParallelDataProperties.
        :type imported_data_size: int
        """

        self._imported_data_size = imported_data_size

    @property
    def imported_record_count(self):
        """Gets the imported_record_count of this GetParallelDataResponseParallelDataProperties.


        :return: The imported_record_count of this GetParallelDataResponseParallelDataProperties.
        :rtype: int
        """
        return self._imported_record_count

    @imported_record_count.setter
    def imported_record_count(self, imported_record_count):
        """Sets the imported_record_count of this GetParallelDataResponseParallelDataProperties.


        :param imported_record_count: The imported_record_count of this GetParallelDataResponseParallelDataProperties.
        :type imported_record_count: int
        """

        self._imported_record_count = imported_record_count

    @property
    def failed_record_count(self):
        """Gets the failed_record_count of this GetParallelDataResponseParallelDataProperties.


        :return: The failed_record_count of this GetParallelDataResponseParallelDataProperties.
        :rtype: int
        """
        return self._failed_record_count

    @failed_record_count.setter
    def failed_record_count(self, failed_record_count):
        """Sets the failed_record_count of this GetParallelDataResponseParallelDataProperties.


        :param failed_record_count: The failed_record_count of this GetParallelDataResponseParallelDataProperties.
        :type failed_record_count: int
        """

        self._failed_record_count = failed_record_count

    @property
    def skipped_record_count(self):
        """Gets the skipped_record_count of this GetParallelDataResponseParallelDataProperties.


        :return: The skipped_record_count of this GetParallelDataResponseParallelDataProperties.
        :rtype: int
        """
        return self._skipped_record_count

    @skipped_record_count.setter
    def skipped_record_count(self, skipped_record_count):
        """Sets the skipped_record_count of this GetParallelDataResponseParallelDataProperties.


        :param skipped_record_count: The skipped_record_count of this GetParallelDataResponseParallelDataProperties.
        :type skipped_record_count: int
        """

        self._skipped_record_count = skipped_record_count

    @property
    def encryption_key(self):
        """Gets the encryption_key of this GetParallelDataResponseParallelDataProperties.


        :return: The encryption_key of this GetParallelDataResponseParallelDataProperties.
        :rtype: EncryptionKey
        """
        return self._encryption_key

    @encryption_key.setter
    def encryption_key(self, encryption_key):
        """Sets the encryption_key of this GetParallelDataResponseParallelDataProperties.


        :param encryption_key: The encryption_key of this GetParallelDataResponseParallelDataProperties.
        :type encryption_key: EncryptionKey
        """

        self._encryption_key = encryption_key

    @property
    def created_at(self):
        """Gets the created_at of this GetParallelDataResponseParallelDataProperties.


        :return: The created_at of this GetParallelDataResponseParallelDataProperties.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this GetParallelDataResponseParallelDataProperties.


        :param created_at: The created_at of this GetParallelDataResponseParallelDataProperties.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def last_updated_at(self):
        """Gets the last_updated_at of this GetParallelDataResponseParallelDataProperties.


        :return: The last_updated_at of this GetParallelDataResponseParallelDataProperties.
        :rtype: datetime
        """
        return self._last_updated_at

    @last_updated_at.setter
    def last_updated_at(self, last_updated_at):
        """Sets the last_updated_at of this GetParallelDataResponseParallelDataProperties.


        :param last_updated_at: The last_updated_at of this GetParallelDataResponseParallelDataProperties.
        :type last_updated_at: datetime
        """

        self._last_updated_at = last_updated_at

    @property
    def latest_update_attempt_status(self):
        """Gets the latest_update_attempt_status of this GetParallelDataResponseParallelDataProperties.


        :return: The latest_update_attempt_status of this GetParallelDataResponseParallelDataProperties.
        :rtype: ParallelDataStatus
        """
        return self._latest_update_attempt_status

    @latest_update_attempt_status.setter
    def latest_update_attempt_status(self, latest_update_attempt_status):
        """Sets the latest_update_attempt_status of this GetParallelDataResponseParallelDataProperties.


        :param latest_update_attempt_status: The latest_update_attempt_status of this GetParallelDataResponseParallelDataProperties.
        :type latest_update_attempt_status: ParallelDataStatus
        """

        self._latest_update_attempt_status = latest_update_attempt_status

    @property
    def latest_update_attempt_at(self):
        """Gets the latest_update_attempt_at of this GetParallelDataResponseParallelDataProperties.


        :return: The latest_update_attempt_at of this GetParallelDataResponseParallelDataProperties.
        :rtype: datetime
        """
        return self._latest_update_attempt_at

    @latest_update_attempt_at.setter
    def latest_update_attempt_at(self, latest_update_attempt_at):
        """Sets the latest_update_attempt_at of this GetParallelDataResponseParallelDataProperties.


        :param latest_update_attempt_at: The latest_update_attempt_at of this GetParallelDataResponseParallelDataProperties.
        :type latest_update_attempt_at: datetime
        """

        self._latest_update_attempt_at = latest_update_attempt_at
