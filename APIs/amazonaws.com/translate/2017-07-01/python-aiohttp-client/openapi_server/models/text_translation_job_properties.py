# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job_status import JobStatus
from openapi_server.models.text_translation_job_properties_input_data_config import TextTranslationJobPropertiesInputDataConfig
from openapi_server.models.text_translation_job_properties_job_details import TextTranslationJobPropertiesJobDetails
from openapi_server.models.text_translation_job_properties_output_data_config import TextTranslationJobPropertiesOutputDataConfig
from openapi_server.models.text_translation_job_properties_settings import TextTranslationJobPropertiesSettings
from openapi_server import util


class TextTranslationJobProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_id: str=None, job_name: str=None, job_status: JobStatus=None, job_details: TextTranslationJobPropertiesJobDetails=None, source_language_code: str=None, target_language_codes: List=None, terminology_names: List=None, parallel_data_names: List=None, message: str=None, submitted_time: datetime=None, end_time: datetime=None, input_data_config: TextTranslationJobPropertiesInputDataConfig=None, output_data_config: TextTranslationJobPropertiesOutputDataConfig=None, data_access_role_arn: str=None, settings: TextTranslationJobPropertiesSettings=None):
        """TextTranslationJobProperties - a model defined in OpenAPI

        :param job_id: The job_id of this TextTranslationJobProperties.
        :param job_name: The job_name of this TextTranslationJobProperties.
        :param job_status: The job_status of this TextTranslationJobProperties.
        :param job_details: The job_details of this TextTranslationJobProperties.
        :param source_language_code: The source_language_code of this TextTranslationJobProperties.
        :param target_language_codes: The target_language_codes of this TextTranslationJobProperties.
        :param terminology_names: The terminology_names of this TextTranslationJobProperties.
        :param parallel_data_names: The parallel_data_names of this TextTranslationJobProperties.
        :param message: The message of this TextTranslationJobProperties.
        :param submitted_time: The submitted_time of this TextTranslationJobProperties.
        :param end_time: The end_time of this TextTranslationJobProperties.
        :param input_data_config: The input_data_config of this TextTranslationJobProperties.
        :param output_data_config: The output_data_config of this TextTranslationJobProperties.
        :param data_access_role_arn: The data_access_role_arn of this TextTranslationJobProperties.
        :param settings: The settings of this TextTranslationJobProperties.
        """
        self.openapi_types = {
            'job_id': str,
            'job_name': str,
            'job_status': JobStatus,
            'job_details': TextTranslationJobPropertiesJobDetails,
            'source_language_code': str,
            'target_language_codes': List,
            'terminology_names': List,
            'parallel_data_names': List,
            'message': str,
            'submitted_time': datetime,
            'end_time': datetime,
            'input_data_config': TextTranslationJobPropertiesInputDataConfig,
            'output_data_config': TextTranslationJobPropertiesOutputDataConfig,
            'data_access_role_arn': str,
            'settings': TextTranslationJobPropertiesSettings
        }

        self.attribute_map = {
            'job_id': 'JobId',
            'job_name': 'JobName',
            'job_status': 'JobStatus',
            'job_details': 'JobDetails',
            'source_language_code': 'SourceLanguageCode',
            'target_language_codes': 'TargetLanguageCodes',
            'terminology_names': 'TerminologyNames',
            'parallel_data_names': 'ParallelDataNames',
            'message': 'Message',
            'submitted_time': 'SubmittedTime',
            'end_time': 'EndTime',
            'input_data_config': 'InputDataConfig',
            'output_data_config': 'OutputDataConfig',
            'data_access_role_arn': 'DataAccessRoleArn',
            'settings': 'Settings'
        }

        self._job_id = job_id
        self._job_name = job_name
        self._job_status = job_status
        self._job_details = job_details
        self._source_language_code = source_language_code
        self._target_language_codes = target_language_codes
        self._terminology_names = terminology_names
        self._parallel_data_names = parallel_data_names
        self._message = message
        self._submitted_time = submitted_time
        self._end_time = end_time
        self._input_data_config = input_data_config
        self._output_data_config = output_data_config
        self._data_access_role_arn = data_access_role_arn
        self._settings = settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TextTranslationJobProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TextTranslationJobProperties of this TextTranslationJobProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_id(self):
        """Gets the job_id of this TextTranslationJobProperties.


        :return: The job_id of this TextTranslationJobProperties.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this TextTranslationJobProperties.


        :param job_id: The job_id of this TextTranslationJobProperties.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def job_name(self):
        """Gets the job_name of this TextTranslationJobProperties.


        :return: The job_name of this TextTranslationJobProperties.
        :rtype: str
        """
        return self._job_name

    @job_name.setter
    def job_name(self, job_name):
        """Sets the job_name of this TextTranslationJobProperties.


        :param job_name: The job_name of this TextTranslationJobProperties.
        :type job_name: str
        """

        self._job_name = job_name

    @property
    def job_status(self):
        """Gets the job_status of this TextTranslationJobProperties.


        :return: The job_status of this TextTranslationJobProperties.
        :rtype: JobStatus
        """
        return self._job_status

    @job_status.setter
    def job_status(self, job_status):
        """Sets the job_status of this TextTranslationJobProperties.


        :param job_status: The job_status of this TextTranslationJobProperties.
        :type job_status: JobStatus
        """

        self._job_status = job_status

    @property
    def job_details(self):
        """Gets the job_details of this TextTranslationJobProperties.


        :return: The job_details of this TextTranslationJobProperties.
        :rtype: TextTranslationJobPropertiesJobDetails
        """
        return self._job_details

    @job_details.setter
    def job_details(self, job_details):
        """Sets the job_details of this TextTranslationJobProperties.


        :param job_details: The job_details of this TextTranslationJobProperties.
        :type job_details: TextTranslationJobPropertiesJobDetails
        """

        self._job_details = job_details

    @property
    def source_language_code(self):
        """Gets the source_language_code of this TextTranslationJobProperties.


        :return: The source_language_code of this TextTranslationJobProperties.
        :rtype: str
        """
        return self._source_language_code

    @source_language_code.setter
    def source_language_code(self, source_language_code):
        """Sets the source_language_code of this TextTranslationJobProperties.


        :param source_language_code: The source_language_code of this TextTranslationJobProperties.
        :type source_language_code: str
        """

        self._source_language_code = source_language_code

    @property
    def target_language_codes(self):
        """Gets the target_language_codes of this TextTranslationJobProperties.


        :return: The target_language_codes of this TextTranslationJobProperties.
        :rtype: List
        """
        return self._target_language_codes

    @target_language_codes.setter
    def target_language_codes(self, target_language_codes):
        """Sets the target_language_codes of this TextTranslationJobProperties.


        :param target_language_codes: The target_language_codes of this TextTranslationJobProperties.
        :type target_language_codes: List
        """

        self._target_language_codes = target_language_codes

    @property
    def terminology_names(self):
        """Gets the terminology_names of this TextTranslationJobProperties.


        :return: The terminology_names of this TextTranslationJobProperties.
        :rtype: List
        """
        return self._terminology_names

    @terminology_names.setter
    def terminology_names(self, terminology_names):
        """Sets the terminology_names of this TextTranslationJobProperties.


        :param terminology_names: The terminology_names of this TextTranslationJobProperties.
        :type terminology_names: List
        """

        self._terminology_names = terminology_names

    @property
    def parallel_data_names(self):
        """Gets the parallel_data_names of this TextTranslationJobProperties.


        :return: The parallel_data_names of this TextTranslationJobProperties.
        :rtype: List
        """
        return self._parallel_data_names

    @parallel_data_names.setter
    def parallel_data_names(self, parallel_data_names):
        """Sets the parallel_data_names of this TextTranslationJobProperties.


        :param parallel_data_names: The parallel_data_names of this TextTranslationJobProperties.
        :type parallel_data_names: List
        """

        self._parallel_data_names = parallel_data_names

    @property
    def message(self):
        """Gets the message of this TextTranslationJobProperties.


        :return: The message of this TextTranslationJobProperties.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this TextTranslationJobProperties.


        :param message: The message of this TextTranslationJobProperties.
        :type message: str
        """

        self._message = message

    @property
    def submitted_time(self):
        """Gets the submitted_time of this TextTranslationJobProperties.


        :return: The submitted_time of this TextTranslationJobProperties.
        :rtype: datetime
        """
        return self._submitted_time

    @submitted_time.setter
    def submitted_time(self, submitted_time):
        """Sets the submitted_time of this TextTranslationJobProperties.


        :param submitted_time: The submitted_time of this TextTranslationJobProperties.
        :type submitted_time: datetime
        """

        self._submitted_time = submitted_time

    @property
    def end_time(self):
        """Gets the end_time of this TextTranslationJobProperties.


        :return: The end_time of this TextTranslationJobProperties.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this TextTranslationJobProperties.


        :param end_time: The end_time of this TextTranslationJobProperties.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def input_data_config(self):
        """Gets the input_data_config of this TextTranslationJobProperties.


        :return: The input_data_config of this TextTranslationJobProperties.
        :rtype: TextTranslationJobPropertiesInputDataConfig
        """
        return self._input_data_config

    @input_data_config.setter
    def input_data_config(self, input_data_config):
        """Sets the input_data_config of this TextTranslationJobProperties.


        :param input_data_config: The input_data_config of this TextTranslationJobProperties.
        :type input_data_config: TextTranslationJobPropertiesInputDataConfig
        """

        self._input_data_config = input_data_config

    @property
    def output_data_config(self):
        """Gets the output_data_config of this TextTranslationJobProperties.


        :return: The output_data_config of this TextTranslationJobProperties.
        :rtype: TextTranslationJobPropertiesOutputDataConfig
        """
        return self._output_data_config

    @output_data_config.setter
    def output_data_config(self, output_data_config):
        """Sets the output_data_config of this TextTranslationJobProperties.


        :param output_data_config: The output_data_config of this TextTranslationJobProperties.
        :type output_data_config: TextTranslationJobPropertiesOutputDataConfig
        """

        self._output_data_config = output_data_config

    @property
    def data_access_role_arn(self):
        """Gets the data_access_role_arn of this TextTranslationJobProperties.


        :return: The data_access_role_arn of this TextTranslationJobProperties.
        :rtype: str
        """
        return self._data_access_role_arn

    @data_access_role_arn.setter
    def data_access_role_arn(self, data_access_role_arn):
        """Sets the data_access_role_arn of this TextTranslationJobProperties.


        :param data_access_role_arn: The data_access_role_arn of this TextTranslationJobProperties.
        :type data_access_role_arn: str
        """

        self._data_access_role_arn = data_access_role_arn

    @property
    def settings(self):
        """Gets the settings of this TextTranslationJobProperties.


        :return: The settings of this TextTranslationJobProperties.
        :rtype: TextTranslationJobPropertiesSettings
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this TextTranslationJobProperties.


        :param settings: The settings of this TextTranslationJobProperties.
        :type settings: TextTranslationJobPropertiesSettings
        """

        self._settings = settings
