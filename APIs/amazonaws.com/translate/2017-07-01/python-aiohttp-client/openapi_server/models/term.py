# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Term(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_text: str=None, target_text: str=None):
        """Term - a model defined in OpenAPI

        :param source_text: The source_text of this Term.
        :param target_text: The target_text of this Term.
        """
        self.openapi_types = {
            'source_text': str,
            'target_text': str
        }

        self.attribute_map = {
            'source_text': 'SourceText',
            'target_text': 'TargetText'
        }

        self._source_text = source_text
        self._target_text = target_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Term':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Term of this Term.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_text(self):
        """Gets the source_text of this Term.


        :return: The source_text of this Term.
        :rtype: str
        """
        return self._source_text

    @source_text.setter
    def source_text(self, source_text):
        """Sets the source_text of this Term.


        :param source_text: The source_text of this Term.
        :type source_text: str
        """

        self._source_text = source_text

    @property
    def target_text(self):
        """Gets the target_text of this Term.


        :return: The target_text of this Term.
        :rtype: str
        """
        return self._target_text

    @target_text.setter
    def target_text(self, target_text):
        """Sets the target_text of this Term.


        :param target_text: The target_text of this Term.
        :type target_text: str
        """

        self._target_text = target_text
