openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: Provides translation of the input content from the source language
    to the target language.
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Translate
  version: 2017-07-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: translate
  x-aws-signingName: translate
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/translate-2017-07-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/translate/
servers:
- description: The Amazon Translate multi-region endpoint
  url: "http://translate.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Translate multi-region endpoint
  url: "https://translate.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Translate endpoint for China (Beijing) and China (Ningxia)
  url: "http://translate.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Translate endpoint for China (Beijing) and China (Ningxia)
  url: "https://translate.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=AWSShineFrontendService_20170701.CreateParallelData:
    post:
      description: "Creates a parallel data resource in Amazon Translate by importing\
        \ an input file from Amazon S3. Parallel data files contain examples that\
        \ show how you want segments of text to be translated. By adding parallel\
        \ data, you can influence the style, tone, and word choice in your translation\
        \ output."
      operationId: create_parallel_data
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.CreateParallelData
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateParallelDataRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateParallelDataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.DeleteParallelData:
    post:
      description: Deletes a parallel data resource in Amazon Translate.
      operationId: delete_parallel_data
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.DeleteParallelData
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteParallelDataRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteParallelDataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.DeleteTerminology:
    post:
      description: A synchronous action that deletes a custom terminology.
      operationId: delete_terminology
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.DeleteTerminology
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTerminologyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.DescribeTextTranslationJob:
    post:
      description: "Gets the properties associated with an asynchronous batch translation\
        \ job including name, ID, status, source and target languages, input/output\
        \ S3 buckets, and so on."
      operationId: describe_text_translation_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.DescribeTextTranslationJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTextTranslationJobRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTextTranslationJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.GetParallelData:
    post:
      description: Provides information about a parallel data resource.
      operationId: get_parallel_data
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.GetParallelData
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetParallelDataRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParallelDataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.GetTerminology:
    post:
      description: Retrieves a custom terminology.
      operationId: get_terminology
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.GetTerminology
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTerminologyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTerminologyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.ImportTerminology:
    post:
      description: "<p>Creates or updates a custom terminology, depending on whether\
        \ one already exists for the given terminology name. Importing a terminology\
        \ with the same name as an existing one will merge the terminologies based\
        \ on the chosen merge strategy. The only supported merge strategy is OVERWRITE,\
        \ where the imported terminology overwrites the existing terminology of the\
        \ same name.</p> <p>If you import a terminology that overwrites an existing\
        \ one, the new terminology takes up to 10 minutes to fully propagate. After\
        \ that, translations have access to the new terminology.</p>"
      operationId: import_terminology
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.ImportTerminology
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportTerminologyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportTerminologyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.ListLanguages:
    post:
      description: Provides a list of languages (RFC-5646 codes and names) that Amazon
        Translate supports.
      operationId: list_languages
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.ListLanguages
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLanguagesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLanguagesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDisplayLanguageCodeException'
          description: UnsupportedDisplayLanguageCodeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.ListParallelData:
    post:
      description: Provides a list of your parallel data resources in Amazon Translate.
      operationId: list_parallel_data
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.ListParallelData
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListParallelDataRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListParallelDataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.ListTagsForResource:
    post:
      description: "Lists all tags associated with a given Amazon Translate resource.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/tagging.html\"\
        > Tagging your resources</a>."
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.ListTerminologies:
    post:
      description: Provides a list of custom terminologies associated with your account.
      operationId: list_terminologies
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.ListTerminologies
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTerminologiesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTerminologiesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.ListTextTranslationJobs:
    post:
      description: Gets a list of the batch translation jobs that you have submitted.
      operationId: list_text_translation_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.ListTextTranslationJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTextTranslationJobsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTextTranslationJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterException'
          description: InvalidFilterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.StartTextTranslationJob:
    post:
      description: "<p>Starts an asynchronous batch translation job. Use batch translation\
        \ jobs to translate large volumes of text across multiple documents at once.\
        \ For batch translation, you can input documents with different source languages\
        \ (specify <code>auto</code> as the source language). You can specify one\
        \ or more target languages. Batch translation translates each input document\
        \ into each of the target languages. For more information, see <a href=\"\
        https://docs.aws.amazon.com/translate/latest/dg/async.html\">Asynchronous\
        \ batch processing</a>.</p> <p>Batch translation jobs can be described with\
        \ the <a>DescribeTextTranslationJob</a> operation, listed with the <a>ListTextTranslationJobs</a>\
        \ operation, and stopped with the <a>StopTextTranslationJob</a> operation.</p>"
      operationId: start_text_translation_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.StartTextTranslationJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTextTranslationJobRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartTextTranslationJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLanguagePairException'
          description: UnsupportedLanguagePairException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.StopTextTranslationJob:
    post:
      description: "<p>Stops an asynchronous batch translation job that is in progress.</p>\
        \ <p>If the job's state is <code>IN_PROGRESS</code>, the job will be marked\
        \ for termination and put into the <code>STOP_REQUESTED</code> state. If the\
        \ job completes before it can be stopped, it is put into the <code>COMPLETED</code>\
        \ state. Otherwise, the job is put into the <code>STOPPED</code> state.</p>\
        \ <p>Asynchronous batch translation jobs are started with the <a>StartTextTranslationJob</a>\
        \ operation. You can use the <a>DescribeTextTranslationJob</a> or <a>ListTextTranslationJobs</a>\
        \ operations to get a batch translation job's <code>JobId</code>.</p>"
      operationId: stop_text_translation_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.StopTextTranslationJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopTextTranslationJobRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopTextTranslationJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.TagResource:
    post:
      description: "Associates a specific tag with a resource. A tag is a key-value\
        \ pair that adds as a metadata to a resource. For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/translate/latest/dg/tagging.html\"> Tagging\
        \ your resources</a>."
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.TranslateDocument:
    post:
      description: "<p>Translates the input document from the source language to the\
        \ target language. This synchronous operation supports plain text or HTML\
        \ for the input document. <code>TranslateDocument</code> supports translations\
        \ from English to any supported language, and from any supported language\
        \ to English. Therefore, specify either the source language code or the target\
        \ language code as “en” (English). </p> <p> <code>TranslateDocument</code>\
        \ does not support language auto-detection. </p> <p> If you set the <code>Formality</code>\
        \ parameter, the request will fail if the target language does not support\
        \ formality. For a list of target languages that support formality, see <a\
        \ href=\"https://docs.aws.amazon.com/translate/latest/dg/customizing-translations-formality.html\"\
        >Setting formality</a>. </p>"
      operationId: translate_document
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.TranslateDocument
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslateDocumentRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslateDocumentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLanguagePairException'
          description: UnsupportedLanguagePairException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.TranslateText:
    post:
      description: "Translates input text from the source language to the target language.\
        \ For a list of available languages and language codes, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/what-is-languages.html\"\
        >Supported languages</a>."
      operationId: translate_text
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.TranslateText
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslateTextRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslateTextResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextSizeLimitExceededException'
          description: TextSizeLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLanguagePairException'
          description: UnsupportedLanguagePairException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectedLanguageLowConfidenceException'
          description: DetectedLanguageLowConfidenceException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.UntagResource:
    post:
      description: "Removes a specific tag associated with an Amazon Translate resource.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/tagging.html\"\
        > Tagging your resources</a>."
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSShineFrontendService_20170701.UpdateParallelData:
    post:
      description: Updates a previously created parallel data resource by importing
        a new input file from Amazon S3.
      operationId: update_parallel_data
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSShineFrontendService_20170701.UpdateParallelData
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateParallelDataRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateParallelDataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateParallelDataResponse:
      example:
        Status: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The custom name that you assigned to the parallel data resource.
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/ParallelDataStatus'
          - description: "The status of the parallel data resource. When the resource\
              \ is ready for you to use, the status is <code>ACTIVE</code>."
          title: Status
      title: CreateParallelDataResponse
      type: object
    CreateParallelDataRequest:
      example:
        Description: ""
        EncryptionKey:
          Type: ""
          Id: ""
        ClientToken: ""
        ParallelDataConfig:
          Format: ""
          S3Uri: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: A custom name for the parallel data resource in Amazon Translate.
              You must assign a name that is unique in the account and region.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A custom description for the parallel data resource in Amazon
              Translate.
          title: Description
        ParallelDataConfig:
          $ref: '#/components/schemas/CreateParallelDataRequest_ParallelDataConfig'
        EncryptionKey:
          $ref: '#/components/schemas/EncryptionKey'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientTokenString'
          - description: A unique identifier for the request. This token is automatically
              generated when you use Amazon Translate through an AWS SDK.
          title: ClientToken
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "Tags to be associated with this resource. A tag is a key-value\
              \ pair that adds metadata to a resource. Each tag key for the resource\
              \ must be unique. For more information, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/tagging.html\"\
              > Tagging your resources</a>."
          title: Tags
      required:
      - ClientToken
      - Name
      - ParallelDataConfig
      title: CreateParallelDataRequest
      type: object
    InvalidParameterValueException: {}
    InvalidRequestException: {}
    LimitExceededException: {}
    TooManyRequestsException: {}
    TooManyTagsException: {}
    ConflictException: {}
    ConcurrentModificationException: {}
    InternalServerException: {}
    DeleteParallelDataResponse:
      example:
        Status: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the parallel data resource that is being deleted.
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/ParallelDataStatus'
          - description: The status of the parallel data deletion.
          title: Status
      title: DeleteParallelDataResponse
      type: object
    DeleteParallelDataRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the parallel data resource that is being deleted.
          title: Name
      required:
      - Name
      title: DeleteParallelDataRequest
      type: object
    ResourceNotFoundException: {}
    DeleteTerminologyRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: 'The name of the custom terminology being deleted. '
          title: Name
      required:
      - Name
      title: DeleteTerminologyRequest
      type: object
    DescribeTextTranslationJobResponse:
      example:
        TextTranslationJobProperties:
          Message: ""
          SubmittedTime: ""
          EndTime: ""
          OutputDataConfig:
            S3Uri: ""
            EncryptionKey:
              Type: ""
              Id: ""
          JobName: ""
          InputDataConfig:
            ContentType: ""
            S3Uri: ""
          JobDetails:
            InputDocumentsCount: ""
            TranslatedDocumentsCount: ""
            DocumentsWithErrorsCount: ""
          TargetLanguageCodes: ""
          ParallelDataNames: ""
          JobStatus: ""
          DataAccessRoleArn: ""
          JobId: ""
          SourceLanguageCode: ""
          TerminologyNames: ""
          Settings:
            Formality: ""
            Profanity: ""
      properties:
        TextTranslationJobProperties:
          $ref: '#/components/schemas/DescribeTextTranslationJobResponse_TextTranslationJobProperties'
      title: DescribeTextTranslationJobResponse
      type: object
    DescribeTextTranslationJobRequest:
      example:
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The identifier that Amazon Translate generated for the job.
              The <a>StartTextTranslationJob</a> operation returns this identifier
              in its response.
          title: JobId
      required:
      - JobId
      title: DescribeTextTranslationJobRequest
      type: object
    GetParallelDataResponse:
      example:
        LatestUpdateAttemptAuxiliaryDataLocation:
          RepositoryType: ""
          Location: ""
        ParallelDataProperties:
          Status: ""
          FailedRecordCount: ""
          Description: ""
          Message: ""
          LastUpdatedAt: ""
          ImportedDataSize: ""
          CreatedAt: ""
          EncryptionKey:
            Type: ""
            Id: ""
          ImportedRecordCount: ""
          TargetLanguageCodes: ""
          SkippedRecordCount: ""
          Name: ""
          LatestUpdateAttemptAt: ""
          Arn: ""
          ParallelDataConfig:
            Format: ""
            S3Uri: ""
          LatestUpdateAttemptStatus: ""
          SourceLanguageCode: ""
        DataLocation:
          RepositoryType: ""
          Location: ""
        AuxiliaryDataLocation:
          RepositoryType: ""
          Location: ""
      properties:
        ParallelDataProperties:
          $ref: '#/components/schemas/GetParallelDataResponse_ParallelDataProperties'
        DataLocation:
          $ref: '#/components/schemas/GetParallelDataResponse_DataLocation'
        AuxiliaryDataLocation:
          $ref: '#/components/schemas/GetParallelDataResponse_AuxiliaryDataLocation'
        LatestUpdateAttemptAuxiliaryDataLocation:
          $ref: '#/components/schemas/GetParallelDataResponse_LatestUpdateAttemptAuxiliaryDataLocation'
      title: GetParallelDataResponse
      type: object
    GetParallelDataRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the parallel data resource that is being retrieved.
          title: Name
      required:
      - Name
      title: GetParallelDataRequest
      type: object
    GetTerminologyResponse:
      example:
        TerminologyProperties:
          Description: ""
          LastUpdatedAt: ""
          Message: ""
          CreatedAt: ""
          EncryptionKey:
            Type: ""
            Id: ""
          TargetLanguageCodes: ""
          Name: ""
          Directionality: ""
          Format: ""
          TermCount: ""
          SkippedTermCount: ""
          Arn: ""
          SizeBytes: ""
          SourceLanguageCode: ""
        TerminologyDataLocation:
          RepositoryType: ""
          Location: ""
        AuxiliaryDataLocation:
          RepositoryType: ""
          Location: ""
      properties:
        TerminologyProperties:
          $ref: '#/components/schemas/GetTerminologyResponse_TerminologyProperties'
        TerminologyDataLocation:
          $ref: '#/components/schemas/GetTerminologyResponse_TerminologyDataLocation'
        AuxiliaryDataLocation:
          $ref: '#/components/schemas/GetTerminologyResponse_AuxiliaryDataLocation'
      title: GetTerminologyResponse
      type: object
    GetTerminologyRequest:
      example:
        TerminologyDataFormat: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the custom terminology being retrieved.
          title: Name
        TerminologyDataFormat:
          allOf:
          - $ref: '#/components/schemas/TerminologyDataFormat'
          - description: "<p>The data format of the custom terminology being retrieved.</p>\
              \ <p>If you don't specify this parameter, Amazon Translate returns a\
              \ file with the same format as the file that was imported to create\
              \ the terminology. </p> <p>If you specify this parameter when you retrieve\
              \ a multi-directional terminology resource, you must specify the same\
              \ format as the input file that was imported to create it. Otherwise,\
              \ Amazon Translate throws an error.</p>"
          title: TerminologyDataFormat
      required:
      - Name
      title: GetTerminologyRequest
      type: object
    ImportTerminologyResponse:
      example:
        TerminologyProperties:
          Description: ""
          LastUpdatedAt: ""
          Message: ""
          CreatedAt: ""
          EncryptionKey:
            Type: ""
            Id: ""
          TargetLanguageCodes: ""
          Name: ""
          Directionality: ""
          Format: ""
          TermCount: ""
          SkippedTermCount: ""
          Arn: ""
          SizeBytes: ""
          SourceLanguageCode: ""
        AuxiliaryDataLocation:
          RepositoryType: ""
          Location: ""
      properties:
        TerminologyProperties:
          $ref: '#/components/schemas/ImportTerminologyResponse_TerminologyProperties'
        AuxiliaryDataLocation:
          $ref: '#/components/schemas/ImportTerminologyResponse_AuxiliaryDataLocation'
      title: ImportTerminologyResponse
      type: object
    ImportTerminologyRequest:
      example:
        Description: ""
        MergeStrategy: ""
        EncryptionKey:
          Type: ""
          Id: ""
        TerminologyData:
          Directionality: ""
          Format: ""
          File: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the custom terminology being imported.
          title: Name
        MergeStrategy:
          allOf:
          - $ref: '#/components/schemas/MergeStrategy'
          - description: "The merge strategy of the custom terminology being imported.\
              \ Currently, only the OVERWRITE merge strategy is supported. In this\
              \ case, the imported terminology will overwrite an existing terminology\
              \ of the same name."
          title: MergeStrategy
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the custom terminology being imported.
          title: Description
        TerminologyData:
          $ref: '#/components/schemas/ImportTerminologyRequest_TerminologyData'
        EncryptionKey:
          $ref: '#/components/schemas/ImportTerminologyRequest_EncryptionKey'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "Tags to be associated with this resource. A tag is a key-value\
              \ pair that adds metadata to a resource. Each tag key for the resource\
              \ must be unique. For more information, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/tagging.html\"\
              > Tagging your resources</a>."
          title: Tags
      required:
      - MergeStrategy
      - Name
      - TerminologyData
      title: ImportTerminologyRequest
      type: object
    ListLanguagesResponse:
      example:
        DisplayLanguageCode: ""
        NextToken: ""
        Languages: ""
      properties:
        Languages:
          allOf:
          - $ref: '#/components/schemas/LanguagesList'
          - description: The list of supported languages.
          title: Languages
        DisplayLanguageCode:
          allOf:
          - $ref: '#/components/schemas/DisplayLanguageCode'
          - description: The language code passed in with the request.
          title: DisplayLanguageCode
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: " If the response does not include all remaining results,\
              \ use the NextToken in the next request to fetch the next group of supported\
              \ languages."
          title: NextToken
      title: ListLanguagesResponse
      type: object
    ListLanguagesRequest:
      example:
        DisplayLanguageCode: ""
        NextToken: ""
        MaxResults: ""
      properties:
        DisplayLanguageCode:
          allOf:
          - $ref: '#/components/schemas/DisplayLanguageCode'
          - description: 'The language code for the language to use to display the
              language names in the response. The language code is <code>en</code>
              by default. '
          title: DisplayLanguageCode
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'Include the NextToken value to fetch the next group of supported
              languages. '
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsInteger'
          - description: The maximum number of results to return in each response.
          title: MaxResults
      title: ListLanguagesRequest
      type: object
    UnsupportedDisplayLanguageCodeException: {}
    ListParallelDataResponse:
      example:
        ParallelDataPropertiesList: ""
        NextToken: ""
      properties:
        ParallelDataPropertiesList:
          allOf:
          - $ref: '#/components/schemas/ParallelDataPropertiesList'
          - description: The properties of the parallel data resources returned by
              this request.
          title: ParallelDataPropertiesList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The string to use in a subsequent request to get the next
              page of results in a paginated response. This value is null if there
              are no additional pages.
          title: NextToken
      title: ListParallelDataResponse
      type: object
    ListParallelDataRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A string that specifies the next page of results to return
              in a paginated response.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsInteger'
          - description: The maximum number of parallel data resources returned for
              each request.
          title: MaxResults
      title: ListParallelDataRequest
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "Tags associated with the Amazon Translate resource being\
              \ queried. A tag is a key-value pair that adds as a metadata to a resource\
              \ used by Amazon Translate. For example, a tag with \"Sales\" as the\
              \ key might be added to a resource to indicate its use by the sales\
              \ department. "
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    ListTagsForResourceRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: 'The Amazon Resource Name (ARN) of the given Amazon Translate
              resource you are querying. '
          title: ResourceArn
      required:
      - ResourceArn
      title: ListTagsForResourceRequest
      type: object
    ListTerminologiesResponse:
      example:
        TerminologyPropertiesList: ""
        NextToken: ""
      properties:
        TerminologyPropertiesList:
          allOf:
          - $ref: '#/components/schemas/TerminologyPropertiesList'
          - description: The properties list of the custom terminologies returned
              on the list request.
          title: TerminologyPropertiesList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: " If the response to the ListTerminologies was truncated,\
              \ the NextToken fetches the next group of custom terminologies."
          title: NextToken
      title: ListTerminologiesResponse
      type: object
    ListTerminologiesRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the request to ListTerminologies was truncated,\
              \ include the NextToken to fetch the next group of custom terminologies. "
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsInteger'
          - description: The maximum number of custom terminologies returned per list
              request.
          title: MaxResults
      title: ListTerminologiesRequest
      type: object
    ListTextTranslationJobsResponse:
      example:
        NextToken: ""
        TextTranslationJobPropertiesList: ""
      properties:
        TextTranslationJobPropertiesList:
          allOf:
          - $ref: '#/components/schemas/TextTranslationJobPropertiesList'
          - description: A list containing the properties of each job that is returned.
          title: TextTranslationJobPropertiesList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. This
              value is <code>null</code> when there are no more results to return.
          title: NextToken
      title: ListTextTranslationJobsResponse
      type: object
    ListTextTranslationJobsRequest:
      example:
        NextToken: ""
        Filter:
          JobStatus: ""
          JobName: ""
          SubmittedBeforeTime: ""
          SubmittedAfterTime: ""
        MaxResults: ""
      properties:
        Filter:
          $ref: '#/components/schemas/ListTextTranslationJobsRequest_Filter'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to request the next page of results.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsInteger'
          - description: The maximum number of results to return in each page. The
              default value is 100.
          title: MaxResults
      title: ListTextTranslationJobsRequest
      type: object
    InvalidFilterException: {}
    StartTextTranslationJobResponse:
      example:
        JobStatus: ""
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: "The identifier generated for the job. To get the status\
              \ of a job, use this ID with the <a>DescribeTextTranslationJob</a> operation."
          title: JobId
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: "<p>The status of the job. Possible values include:</p> <ul>\
              \ <li> <p> <code>SUBMITTED</code> - The job has been received and is\
              \ queued for processing.</p> </li> <li> <p> <code>IN_PROGRESS</code>\
              \ - Amazon Translate is processing the job.</p> </li> <li> <p> <code>COMPLETED</code>\
              \ - The job was successfully completed and the output is available.</p>\
              \ </li> <li> <p> <code>COMPLETED_WITH_ERROR</code> - The job was completed\
              \ with errors. The errors can be analyzed in the job's output.</p> </li>\
              \ <li> <p> <code>FAILED</code> - The job did not complete. To get details,\
              \ use the <a>DescribeTextTranslationJob</a> operation.</p> </li> <li>\
              \ <p> <code>STOP_REQUESTED</code> - The user who started the job has\
              \ requested that it be stopped.</p> </li> <li> <p> <code>STOPPED</code>\
              \ - The job has been stopped.</p> </li> </ul>"
          title: JobStatus
      title: StartTextTranslationJobResponse
      type: object
    StartTextTranslationJobRequest:
      example:
        DataAccessRoleArn: ""
        OutputDataConfig:
          S3Uri: ""
          EncryptionKey:
            Type: ""
            Id: ""
        JobName: ""
        ClientToken: ""
        InputDataConfig:
          ContentType: ""
          S3Uri: ""
        SourceLanguageCode: ""
        TargetLanguageCodes: ""
        TerminologyNames: ""
        ParallelDataNames: ""
        Settings:
          Formality: ""
          Profanity: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: The name of the batch translation job to be performed.
          title: JobName
        InputDataConfig:
          $ref: '#/components/schemas/StartTextTranslationJobRequest_InputDataConfig'
        OutputDataConfig:
          $ref: '#/components/schemas/StartTextTranslationJobRequest_OutputDataConfig'
        DataAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: "The Amazon Resource Name (ARN) of an AWS Identity Access\
              \ and Management (IAM) role that grants Amazon Translate read access\
              \ to your input data. For more information, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/identity-and-access-management.html\"\
              >Identity and access management </a>."
          title: DataAccessRoleArn
        SourceLanguageCode:
          allOf:
          - $ref: '#/components/schemas/LanguageCodeString'
          - description: "The language code of the input language. Specify the language\
              \ if all input documents share the same language. If you don't know\
              \ the language of the source files, or your input documents contains\
              \ different source languages, select <code>auto</code>. Amazon Translate\
              \ auto detects the source language for each input document. For a list\
              \ of supported language codes, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/what-is-languages.html\"\
              >Supported languages</a>."
          title: SourceLanguageCode
        TargetLanguageCodes:
          allOf:
          - $ref: '#/components/schemas/TargetLanguageCodeStringList'
          - description: "<p>The target languages of the translation job. Enter up\
              \ to 10 language codes. Each input file is translated into each target\
              \ language.</p> <p>Each language code is 2 or 5 characters long. For\
              \ a list of language codes, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/what-is-languages.html\"\
              >Supported languages</a>.</p>"
          title: TargetLanguageCodes
        TerminologyNames:
          allOf:
          - $ref: '#/components/schemas/ResourceNameList'
          - description: "<p>The name of a custom terminology resource to add to the\
              \ translation job. This resource lists examples source terms and the\
              \ desired translation for each term.</p> <p>This parameter accepts only\
              \ one custom terminology resource.</p> <p>If you specify multiple target\
              \ languages for the job, translate uses the designated terminology for\
              \ each requested target language that has an entry for the source term\
              \ in the terminology file.</p> <p>For a list of available custom terminology\
              \ resources, use the <a>ListTerminologies</a> operation.</p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/how-custom-terminology.html\"\
              >Custom terminology</a>.</p>"
          title: TerminologyNames
        ParallelDataNames:
          allOf:
          - $ref: '#/components/schemas/ResourceNameList'
          - description: "<p>The name of a parallel data resource to add to the translation\
              \ job. This resource consists of examples that show how you want segments\
              \ of text to be translated. If you specify multiple target languages\
              \ for the job, the parallel data file must include translations for\
              \ all the target languages.</p> <p>When you add parallel data to a translation\
              \ job, you create an <i>Active Custom Translation</i> job. </p> <p>This\
              \ parameter accepts only one parallel data resource.</p> <note> <p>Active\
              \ Custom Translation jobs are priced at a higher rate than other jobs\
              \ that don't use parallel data. For more information, see <a href=\"\
              http://aws.amazon.com/translate/pricing/\">Amazon Translate pricing</a>.</p>\
              \ </note> <p>For a list of available parallel data resources, use the\
              \ <a>ListParallelData</a> operation.</p> <p>For more information, see\
              \ <a href=\"https://docs.aws.amazon.com/translate/latest/dg/customizing-translations-parallel-data.html\"\
              > Customizing your translations with parallel data</a>.</p>"
          title: ParallelDataNames
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientTokenString'
          - description: A unique identifier for the request. This token is generated
              for you when using the Amazon Translate SDK.
          title: ClientToken
        Settings:
          $ref: '#/components/schemas/StartTextTranslationJobRequest_Settings'
      required:
      - ClientToken
      - DataAccessRoleArn
      - InputDataConfig
      - OutputDataConfig
      - SourceLanguageCode
      - TargetLanguageCodes
      title: StartTextTranslationJobRequest
      type: object
    UnsupportedLanguagePairException: {}
    StopTextTranslationJobResponse:
      example:
        JobStatus: ""
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The job ID of the stopped batch translation job.
          title: JobId
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: "The status of the designated job. Upon successful completion,\
              \ the job's status will be <code>STOPPED</code>."
          title: JobStatus
      title: StopTextTranslationJobResponse
      type: object
    StopTextTranslationJobRequest:
      example:
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The job ID of the job to be stopped.
          title: JobId
      required:
      - JobId
      title: StopTextTranslationJobRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        ResourceArn: ""
        Tags: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: 'The Amazon Resource Name (ARN) of the given Amazon Translate
              resource to which you want to associate the tags. '
          title: ResourceArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Tags being associated with a specific Amazon Translate resource.
              There can be a maximum of 50 tags (both existing and pending) associated
              with a specific resource.
          title: Tags
      required:
      - ResourceArn
      - Tags
      title: TagResourceRequest
      type: object
    TranslateDocumentResponse:
      example:
        AppliedTerminologies: ""
        AppliedSettings:
          Formality: ""
          Profanity: ""
        TranslatedDocument:
          Content: ""
        TargetLanguageCode: ""
        SourceLanguageCode: ""
      properties:
        TranslatedDocument:
          $ref: '#/components/schemas/TranslateDocumentResponse_TranslatedDocument'
        SourceLanguageCode:
          allOf:
          - $ref: '#/components/schemas/LanguageCodeString'
          - description: The language code of the source document.
          title: SourceLanguageCode
        TargetLanguageCode:
          allOf:
          - $ref: '#/components/schemas/LanguageCodeString'
          - description: 'The language code of the translated document. '
          title: TargetLanguageCode
        AppliedTerminologies:
          allOf:
          - $ref: '#/components/schemas/AppliedTerminologyList'
          - description: The names of the custom terminologies applied to the input
              text by Amazon Translate to produce the translated text document.
          title: AppliedTerminologies
        AppliedSettings:
          $ref: '#/components/schemas/TranslationSettings'
      required:
      - SourceLanguageCode
      - TargetLanguageCode
      - TranslatedDocument
      title: TranslateDocumentResponse
      type: object
    TranslateDocumentRequest:
      example:
        Document:
          ContentType: ""
          Content: ""
        TargetLanguageCode: ""
        TerminologyNames: ""
        SourceLanguageCode: ""
        Settings:
          Formality: ""
          Profanity: ""
      properties:
        Document:
          $ref: '#/components/schemas/TranslateDocumentRequest_Document'
        TerminologyNames:
          allOf:
          - $ref: '#/components/schemas/ResourceNameList'
          - description: "<p>The name of a terminology list file to add to the translation\
              \ job. This file provides source terms and the desired translation for\
              \ each term. A terminology list can contain a maximum of 256 terms.\
              \ You can use one custom terminology resource in your translation request.</p>\
              \ <p>Use the <a>ListTerminologies</a> operation to get the available\
              \ terminology lists.</p> <p>For more information about custom terminology\
              \ lists, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/how-custom-terminology.html\"\
              >Custom terminology</a>.</p>"
          title: TerminologyNames
        SourceLanguageCode:
          allOf:
          - $ref: '#/components/schemas/LanguageCodeString'
          - description: "The language code for the language of the source text. Do\
              \ not use <code>auto</code>, because <code>TranslateDocument</code>\
              \ does not support language auto-detection. For a list of supported\
              \ language codes, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/what-is-languages.html\"\
              >Supported languages</a>."
          title: SourceLanguageCode
        TargetLanguageCode:
          allOf:
          - $ref: '#/components/schemas/LanguageCodeString'
          - description: "The language code requested for the translated document.\
              \ For a list of supported language codes, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/what-is-languages.html\"\
              >Supported languages</a>."
          title: TargetLanguageCode
        Settings:
          $ref: '#/components/schemas/TranslationSettings'
      required:
      - Document
      - SourceLanguageCode
      - TargetLanguageCode
      title: TranslateDocumentRequest
      type: object
    ServiceUnavailableException: {}
    TranslateTextResponse:
      example:
        AppliedTerminologies: ""
        AppliedSettings:
          Formality: ""
          Profanity: ""
        TranslatedText: ""
        TargetLanguageCode: ""
        SourceLanguageCode: ""
      properties:
        TranslatedText:
          allOf:
          - $ref: '#/components/schemas/TranslatedTextString'
          - description: The translated text.
          title: TranslatedText
        SourceLanguageCode:
          allOf:
          - $ref: '#/components/schemas/LanguageCodeString'
          - description: The language code for the language of the source text.
          title: SourceLanguageCode
        TargetLanguageCode:
          allOf:
          - $ref: '#/components/schemas/LanguageCodeString'
          - description: 'The language code for the language of the target text. '
          title: TargetLanguageCode
        AppliedTerminologies:
          allOf:
          - $ref: '#/components/schemas/AppliedTerminologyList'
          - description: The names of the custom terminologies applied to the input
              text by Amazon Translate for the translated text response.
          title: AppliedTerminologies
        AppliedSettings:
          $ref: '#/components/schemas/TranslateTextResponse_AppliedSettings'
      required:
      - SourceLanguageCode
      - TargetLanguageCode
      - TranslatedText
      title: TranslateTextResponse
      type: object
    TranslateTextRequest:
      example:
        Text: ""
        TargetLanguageCode: ""
        TerminologyNames: ""
        SourceLanguageCode: ""
        Settings:
          Formality: ""
          Profanity: ""
      properties:
        Text:
          allOf:
          - $ref: '#/components/schemas/BoundedLengthString'
          - description: "The text to translate. The text string can be a maximum\
              \ of 10,000 bytes long. Depending on your character set, this may be\
              \ fewer than 10,000 characters."
          title: Text
        TerminologyNames:
          allOf:
          - $ref: '#/components/schemas/ResourceNameList'
          - description: "<p>The name of a terminology list file to add to the translation\
              \ job. This file provides source terms and the desired translation for\
              \ each term. A terminology list can contain a maximum of 256 terms.\
              \ You can use one custom terminology resource in your translation request.</p>\
              \ <p>Use the <a>ListTerminologies</a> operation to get the available\
              \ terminology lists.</p> <p>For more information about custom terminology\
              \ lists, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/how-custom-terminology.html\"\
              >Custom terminology</a>.</p>"
          title: TerminologyNames
        SourceLanguageCode:
          allOf:
          - $ref: '#/components/schemas/LanguageCodeString'
          - description: "<p>The language code for the language of the source text.\
              \ For a list of language codes, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/what-is-languages.html\"\
              >Supported languages</a>.</p> <p>To have Amazon Translate determine\
              \ the source language of your text, you can specify <code>auto</code>\
              \ in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>,\
              \ Amazon Translate will call <a href=\"https://docs.aws.amazon.com/comprehend/latest/dg/comprehend-general.html\"\
              >Amazon Comprehend</a> to determine the source language.</p> <note>\
              \ <p>If you specify <code>auto</code>, you must send the <code>TranslateText</code>\
              \ request in a region that supports Amazon Comprehend. Otherwise, the\
              \ request returns an error indicating that autodetect is not supported.\
              \ </p> </note>"
          title: SourceLanguageCode
        TargetLanguageCode:
          allOf:
          - $ref: '#/components/schemas/LanguageCodeString'
          - description: "The language code requested for the language of the target\
              \ text. For a list of language codes, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/what-is-languages.html\"\
              >Supported languages</a>."
          title: TargetLanguageCode
        Settings:
          $ref: '#/components/schemas/StartTextTranslationJobRequest_Settings'
      required:
      - SourceLanguageCode
      - TargetLanguageCode
      - Text
      title: TranslateTextRequest
      type: object
    TextSizeLimitExceededException: {}
    DetectedLanguageLowConfidenceException: {}
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        ResourceArn: ""
        TagKeys: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: ' The Amazon Resource Name (ARN) of the given Amazon Translate
              resource from which you want to remove the tags. '
          title: ResourceArn
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: 'The initial part of a key-value pair that forms a tag being
              removed from a given resource. Keys must be unique and cannot be duplicated
              for a particular resource. '
          title: TagKeys
      required:
      - ResourceArn
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateParallelDataResponse:
      example:
        Status: ""
        LatestUpdateAttemptAt: ""
        LatestUpdateAttemptStatus: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the parallel data resource being updated.
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/ParallelDataStatus'
          - description: The status of the parallel data resource that you are attempting
              to update. Your update request is accepted only if this status is either
              <code>ACTIVE</code> or <code>FAILED</code>.
          title: Status
        LatestUpdateAttemptStatus:
          allOf:
          - $ref: '#/components/schemas/ParallelDataStatus'
          - description: "The status of the parallel data update attempt. When the\
              \ updated parallel data resource is ready for you to use, the status\
              \ is <code>ACTIVE</code>."
          title: LatestUpdateAttemptStatus
        LatestUpdateAttemptAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that the most recent update was attempted.
          title: LatestUpdateAttemptAt
      title: UpdateParallelDataResponse
      type: object
    UpdateParallelDataRequest:
      example:
        Description: ""
        ClientToken: ""
        ParallelDataConfig:
          Format: ""
          S3Uri: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the parallel data resource being updated.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A custom description for the parallel data resource in Amazon
              Translate.
          title: Description
        ParallelDataConfig:
          $ref: '#/components/schemas/CreateParallelDataRequest_ParallelDataConfig'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientTokenString'
          - description: A unique identifier for the request. This token is automatically
              generated when you use Amazon Translate through an AWS SDK.
          title: ClientToken
      required:
      - ClientToken
      - Name
      - ParallelDataConfig
      title: UpdateParallelDataRequest
      type: object
    ResourceName:
      maxLength: 256
      minLength: 1
      pattern: "^([A-Za-z0-9-]_?)+$"
      title: ResourceName
      type: string
    TermList:
      items:
        $ref: '#/components/schemas/Term'
      type: array
    AppliedTerminology:
      description: "The custom terminology applied to the input text by Amazon Translate\
        \ for the translated text response. This is optional in the response and will\
        \ only be present if you specified terminology input in the request. Currently,\
        \ only one terminology can be applied per TranslateText request."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the custom terminology applied to the input text
              by Amazon Translate for the translated text response.
          title: Name
        Terms:
          allOf:
          - $ref: '#/components/schemas/TermList'
          - description: "The specific terms of the custom terminology applied to\
              \ the input text by Amazon Translate for the translated text response.\
              \ A maximum of 250 terms will be returned, and the specific terms applied\
              \ will be the first 250 terms in the source text. "
          title: Terms
      title: AppliedTerminology
      type: object
    AppliedTerminologyList:
      items:
        $ref: '#/components/schemas/AppliedTerminology'
      type: array
    BoundedLengthString:
      maxLength: 10000
      minLength: 1
      pattern: "[\\P{M}\\p{M}]{1,10000}"
      type: string
    ClientTokenString:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z0-9-]+$"
      type: string
    ContentType:
      maxLength: 256
      pattern: "^[-\\w.]+\\/[-\\w.+]+$"
      type: string
    Description:
      maxLength: 256
      pattern: "[\\P{M}\\p{M}]{0,256}"
      type: string
    ParallelDataConfig:
      description: Specifies the format and S3 location of the parallel data input
        file.
      properties:
        S3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          - description: The URI of the Amazon S3 folder that contains the parallel
              data input file. The folder must be in the same Region as the API endpoint
              you are calling.
          title: S3Uri
        Format:
          allOf:
          - $ref: '#/components/schemas/ParallelDataFormat'
          - description: The format of the parallel data input file.
          title: Format
      required:
      - Format
      - S3Uri
      title: ParallelDataConfig
      type: object
    EncryptionKey:
      description: The encryption key used to encrypt this object.
      example:
        Type: ""
        Id: ""
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyType'
          - description: The type of encryption key used by Amazon Translate to encrypt
              this object.
          title: Type
        Id:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyID'
          - description: The Amazon Resource Name (ARN) of the encryption key being
              used to encrypt this object.
          title: Id
      required:
      - Id
      - Type
      title: EncryptionKey
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 200
      minItems: 0
      type: array
    ParallelDataStatus:
      enum:
      - CREATING
      - UPDATING
      - ACTIVE
      - DELETING
      - FAILED
      title: ParallelDataStatus
      type: string
    JobId:
      maxLength: 32
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
      type: string
    TextTranslationJobProperties:
      description: Provides information about a translation job.
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The ID of the translation job.
          title: JobId
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: The user-defined name of the translation job.
          title: JobName
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: The status of the translation job.
          title: JobStatus
        JobDetails:
          $ref: '#/components/schemas/TextTranslationJobProperties_JobDetails'
        SourceLanguageCode:
          allOf:
          - $ref: '#/components/schemas/LanguageCodeString'
          - description: The language code of the language of the source text. The
              language must be a language supported by Amazon Translate.
          title: SourceLanguageCode
        TargetLanguageCodes:
          allOf:
          - $ref: '#/components/schemas/TargetLanguageCodeStringList'
          - description: The language code of the language of the target text. The
              language must be a language supported by Amazon Translate.
          title: TargetLanguageCodes
        TerminologyNames:
          allOf:
          - $ref: '#/components/schemas/ResourceNameList'
          - description: A list containing the names of the terminologies applied
              to a translation job. Only one terminology can be applied per <a>StartTextTranslationJob</a>
              request at this time.
          title: TerminologyNames
        ParallelDataNames:
          allOf:
          - $ref: '#/components/schemas/ResourceNameList'
          - description: A list containing the names of the parallel data resources
              applied to the translation job.
          title: ParallelDataNames
        Message:
          allOf:
          - $ref: '#/components/schemas/UnboundedLengthString'
          - description: An explanation of any errors that may have occurred during
              the translation job.
          title: Message
        SubmittedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the translation job was submitted.
          title: SubmittedTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the translation job ended.
          title: EndTime
        InputDataConfig:
          $ref: '#/components/schemas/TextTranslationJobProperties_InputDataConfig'
        OutputDataConfig:
          $ref: '#/components/schemas/TextTranslationJobProperties_OutputDataConfig'
        DataAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: The Amazon Resource Name (ARN) of an AWS Identity Access
              and Management (IAM) role that granted Amazon Translate read access
              to the job's input data.
          title: DataAccessRoleArn
        Settings:
          $ref: '#/components/schemas/TextTranslationJobProperties_Settings'
      title: TextTranslationJobProperties
      type: object
    Directionality:
      enum:
      - UNI
      - MULTI
      title: Directionality
      type: string
    DisplayLanguageCode:
      enum:
      - de
      - en
      - es
      - fr
      - it
      - ja
      - ko
      - pt
      - zh
      - zh-TW
      title: DisplayLanguageCode
      type: string
    DocumentContent:
      format: password
      maxLength: 102400
      type: string
    Document:
      description: The content and content type of a document.
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/DocumentContent'
          - description: "The <code>Content</code>field type is Binary large object\
              \ (blob). This object contains the document content converted into base64-encoded\
              \ binary data. If you use one of the AWS SDKs, the SDK performs the\
              \ Base64-encoding on this field before sending the request. "
          title: Content
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: <p>Describes the format of the document. You can specify
              one of the following:</p> <ul> <li> <p> <code>text/html</code> - The
              input data consists of HTML content. Amazon Translate translates only
              the text in the HTML element.</p> </li> <li> <p> <code>text/plain</code>
              - The input data consists of unformatted text. Amazon Translate translates
              every character in the content. </p> </li> <li> <p> <code>application/vnd.openxmlformats-officedocument.wordprocessingml.document</code>
              - The input data consists of a Word document (.docx).</p> </li> </ul>
          title: ContentType
      required:
      - Content
      - ContentType
      title: Document
      type: object
    EncryptionKeyType:
      enum:
      - KMS
      title: EncryptionKeyType
      type: string
    EncryptionKeyID:
      maxLength: 400
      minLength: 1
      pattern: "(arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:kms:)?([a-z]{2}-[a-z]+(-[a-z]+)?-\\\
        d:)?(\\d{12}:)?(((key/)?[a-zA-Z0-9-_]+)|(alias/[a-zA-Z0-9:/_-]+))"
      type: string
    Formality:
      enum:
      - FORMAL
      - INFORMAL
      title: Formality
      type: string
    ParallelDataProperties:
      description: The properties of a parallel data resource.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The custom name assigned to the parallel data resource.
          title: Name
        Arn:
          allOf:
          - $ref: '#/components/schemas/ParallelDataArn'
          - description: The Amazon Resource Name (ARN) of the parallel data resource.
          title: Arn
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description assigned to the parallel data resource.
          title: Description
        Status:
          allOf:
          - $ref: '#/components/schemas/ParallelDataStatus'
          - description: "The status of the parallel data resource. When the parallel\
              \ data is ready for you to use, the status is <code>ACTIVE</code>."
          title: Status
        SourceLanguageCode:
          allOf:
          - $ref: '#/components/schemas/LanguageCodeString'
          - description: The source language of the translations in the parallel data
              file.
          title: SourceLanguageCode
        TargetLanguageCodes:
          allOf:
          - $ref: '#/components/schemas/LanguageCodeStringList'
          - description: The language codes for the target languages available in
              the parallel data file. All possible target languages are returned as
              an array.
          title: TargetLanguageCodes
        ParallelDataConfig:
          $ref: '#/components/schemas/CreateParallelDataRequest_ParallelDataConfig'
        Message:
          allOf:
          - $ref: '#/components/schemas/UnboundedLengthString'
          - description: 'Additional information from Amazon Translate about the parallel
              data resource. '
          title: Message
        ImportedDataSize:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The number of UTF-8 characters that Amazon Translate imported\
              \ from the parallel data input file. This number includes only the characters\
              \ in your translation examples. It does not include characters that\
              \ are used to format your file. For example, if you provided a Translation\
              \ Memory Exchange (.tmx) file, this number does not include the tags."
          title: ImportedDataSize
        ImportedRecordCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of records successfully imported from the parallel
              data input file.
          title: ImportedRecordCount
        FailedRecordCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of records unsuccessfully imported from the parallel
              data input file.
          title: FailedRecordCount
        SkippedRecordCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The number of items in the input file that Amazon Translate\
              \ skipped when you created or updated the parallel data resource. For\
              \ example, Amazon Translate skips empty records, empty target texts,\
              \ and empty lines."
          title: SkippedRecordCount
        EncryptionKey:
          $ref: '#/components/schemas/EncryptionKey'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the parallel data resource was created.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the parallel data resource was last updated.
          title: LastUpdatedAt
        LatestUpdateAttemptStatus:
          allOf:
          - $ref: '#/components/schemas/ParallelDataStatus'
          - description: The status of the most recent update attempt for the parallel
              data resource.
          title: LatestUpdateAttemptStatus
        LatestUpdateAttemptAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that the most recent update was attempted.
          title: LatestUpdateAttemptAt
      title: ParallelDataProperties
      type: object
    ParallelDataDataLocation:
      description: The location of the most recent parallel data input file that was
        successfully imported into Amazon Translate.
      properties:
        RepositoryType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Describes the repository that contains the parallel data
              input file.
          title: RepositoryType
        Location:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The Amazon S3 location of the parallel data input file.\
              \ The location is returned as a presigned URL to that has a 30-minute\
              \ expiration.</p> <important> <p>Amazon Translate doesn't scan all input\
              \ files for the risk of CSV injection attacks. </p> <p>CSV injection\
              \ occurs when a .csv or .tsv file is altered so that a record contains\
              \ malicious code. The record begins with a special character, such as\
              \ =, +, -, or @. When the file is opened in a spreadsheet program, the\
              \ program might interpret the record as a formula and run the code within\
              \ it.</p> <p>Before you download an input file from Amazon S3, ensure\
              \ that you recognize the file and trust its creator.</p> </important>"
          title: Location
      required:
      - Location
      - RepositoryType
      title: ParallelDataDataLocation
      type: object
    TerminologyDataFormat:
      enum:
      - CSV
      - TMX
      - TSV
      title: TerminologyDataFormat
      type: string
    TerminologyProperties:
      description: The properties of the custom terminology.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the custom terminology.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the custom terminology properties.
          title: Description
        Arn:
          allOf:
          - $ref: '#/components/schemas/TerminologyArn'
          - description: ' The Amazon Resource Name (ARN) of the custom terminology. '
          title: Arn
        SourceLanguageCode:
          allOf:
          - $ref: '#/components/schemas/LanguageCodeString'
          - description: The language code for the source text of the translation
              request for which the custom terminology is being used.
          title: SourceLanguageCode
        TargetLanguageCodes:
          allOf:
          - $ref: '#/components/schemas/LanguageCodeStringList'
          - description: The language codes for the target languages available with
              the custom terminology resource. All possible target languages are returned
              in array.
          title: TargetLanguageCodes
        EncryptionKey:
          $ref: '#/components/schemas/TerminologyProperties_EncryptionKey'
        SizeBytes:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The size of the file used when importing a custom terminology.
          title: SizeBytes
        TermCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of terms included in the custom terminology.
          title: TermCount
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time at which the custom terminology was created, based\
              \ on the timestamp."
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time at which the custom terminology was last update,\
              \ based on the timestamp."
          title: LastUpdatedAt
        Directionality:
          allOf:
          - $ref: '#/components/schemas/Directionality'
          - description: "<p>The directionality of your terminology resource indicates\
              \ whether it has one source language (uni-directional) or multiple (multi-directional).\
              \ </p> <dl> <dt>UNI</dt> <dd> <p>The terminology resource has one source\
              \ language (the first column in a CSV file), and all of its other languages\
              \ are target languages.</p> </dd> <dt>MULTI</dt> <dd> <p>Any language\
              \ in the terminology resource can be the source language.</p> </dd>\
              \ </dl>"
          title: Directionality
        Message:
          allOf:
          - $ref: '#/components/schemas/UnboundedLengthString'
          - description: Additional information from Amazon Translate about the terminology
              resource.
          title: Message
        SkippedTermCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of terms in the input file that Amazon Translate
              skipped when you created or updated the terminology resource.
          title: SkippedTermCount
        Format:
          allOf:
          - $ref: '#/components/schemas/TerminologyDataFormat'
          - description: The format of the custom terminology input file.
          title: Format
      title: TerminologyProperties
      type: object
    TerminologyDataLocation:
      description: The location of the custom terminology data.
      properties:
        RepositoryType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The repository type for the custom terminology data.
          title: RepositoryType
        Location:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The Amazon S3 location of the most recent custom terminology\
              \ input file that was successfully imported into Amazon Translate. The\
              \ location is returned as a presigned URL that has a 30-minute expiration\
              \ .</p> <important> <p>Amazon Translate doesn't scan all input files\
              \ for the risk of CSV injection attacks. </p> <p>CSV injection occurs\
              \ when a .csv or .tsv file is altered so that a record contains malicious\
              \ code. The record begins with a special character, such as =, +, -,\
              \ or @. When the file is opened in a spreadsheet program, the program\
              \ might interpret the record as a formula and run the code within it.</p>\
              \ <p>Before you download an input file from Amazon S3, ensure that you\
              \ recognize the file and trust its creator.</p> </important>"
          title: Location
      required:
      - Location
      - RepositoryType
      title: TerminologyDataLocation
      type: object
    IamRoleArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+"
      type: string
    MergeStrategy:
      enum:
      - OVERWRITE
      title: MergeStrategy
      type: string
    TerminologyData:
      description: "The data associated with the custom terminology. For information\
        \ about the custom terminology file, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/creating-custom-terminology.html\"\
        > Creating a Custom Terminology</a>."
      properties:
        File:
          allOf:
          - $ref: '#/components/schemas/TerminologyFile'
          - description: The file containing the custom terminology data. Your version
              of the AWS SDK performs a Base64-encoding on this field before sending
              a request to the AWS service. Users of the SDK should not perform Base64-encoding
              themselves.
          title: File
        Format:
          allOf:
          - $ref: '#/components/schemas/TerminologyDataFormat'
          - description: The data format of the custom terminology.
          title: Format
        Directionality:
          allOf:
          - $ref: '#/components/schemas/Directionality'
          - description: "<p>The directionality of your terminology resource indicates\
              \ whether it has one source language (uni-directional) or multiple (multi-directional).</p>\
              \ <dl> <dt>UNI</dt> <dd> <p>The terminology resource has one source\
              \ language (for example, the first column in a CSV file), and all of\
              \ its other languages are target languages. </p> </dd> <dt>MULTI</dt>\
              \ <dd> <p>Any language in the terminology resource can be the source\
              \ language or a target language. A single multi-directional terminology\
              \ resource can be used for jobs that translate different language pairs.\
              \ For example, if the terminology contains English and Spanish terms,\
              \ it can be used for jobs that translate English to Spanish and Spanish\
              \ to English.</p> </dd> </dl> <p>When you create a custom terminology\
              \ resource without specifying the directionality, it behaves as uni-directional\
              \ terminology, although this parameter will have a null value.</p>"
          title: Directionality
      required:
      - File
      - Format
      title: TerminologyData
      type: object
    S3Uri:
      maxLength: 1024
      pattern: "s3://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/.*)?"
      type: string
    InputDataConfig:
      description: The input configuration properties for requesting a batch translation
        job.
      properties:
        S3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          - description: The URI of the AWS S3 folder that contains the input files.
              Amazon Translate translates all the files in the folder and all its
              sub-folders. The folder must be in the same Region as the API endpoint
              you are calling.
          title: S3Uri
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: "<p>Describes the format of the data that you submit to Amazon\
              \ Translate as input. You can specify one of the following multipurpose\
              \ internet mail extension (MIME) types:</p> <ul> <li> <p> <code>text/html</code>:\
              \ The input data consists of one or more HTML files. Amazon Translate\
              \ translates only the text that resides in the <code>html</code> element\
              \ in each file.</p> </li> <li> <p> <code>text/plain</code>: The input\
              \ data consists of one or more unformatted text files. Amazon Translate\
              \ translates every character in this type of input.</p> </li> <li> <p>\
              \ <code>application/vnd.openxmlformats-officedocument.wordprocessingml.document</code>:\
              \ The input data consists of one or more Word documents (.docx).</p>\
              \ </li> <li> <p> <code>application/vnd.openxmlformats-officedocument.presentationml.presentation</code>:\
              \ The input data consists of one or more PowerPoint Presentation files\
              \ (.pptx).</p> </li> <li> <p> <code>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</code>:\
              \ The input data consists of one or more Excel Workbook files (.xlsx).</p>\
              \ </li> <li> <p> <code>application/x-xliff+xml</code>: The input data\
              \ consists of one or more XML Localization Interchange File Format (XLIFF)\
              \ files (.xlf). Amazon Translate supports only XLIFF version 1.2.</p>\
              \ </li> </ul> <important> <p>If you structure your input data as HTML,\
              \ ensure that you set this parameter to <code>text/html</code>. By doing\
              \ so, you cut costs by limiting the translation to the contents of the\
              \ <code>html</code> element in each file. Otherwise, if you set this\
              \ parameter to <code>text/plain</code>, your costs will cover the translation\
              \ of every character.</p> </important>"
          title: ContentType
      required:
      - ContentType
      - S3Uri
      title: InputDataConfig
      type: object
    Integer:
      type: integer
    JobDetails:
      description: The number of documents successfully and unsuccessfully processed
        during a translation job.
      properties:
        TranslatedDocumentsCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of documents successfully processed during a translation
              job.
          title: TranslatedDocumentsCount
        DocumentsWithErrorsCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of documents that could not be processed during
              a translation job.
          title: DocumentsWithErrorsCount
        InputDocumentsCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of documents used as input in a translation job.
          title: InputDocumentsCount
      title: JobDetails
      type: object
    JobName:
      maxLength: 256
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
      type: string
    JobStatus:
      enum:
      - SUBMITTED
      - IN_PROGRESS
      - COMPLETED
      - COMPLETED_WITH_ERROR
      - FAILED
      - STOP_REQUESTED
      - STOPPED
      title: JobStatus
      type: string
    LocalizedNameString:
      maxLength: 256
      minLength: 1
      type: string
    LanguageCodeString:
      maxLength: 5
      minLength: 2
      title: LanguageCodeString
      type: string
    Language:
      description: A supported language.
      properties:
        LanguageName:
          allOf:
          - $ref: '#/components/schemas/LocalizedNameString'
          - description: Language name of the supported language.
          title: LanguageName
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/LanguageCodeString'
          - description: Language code for the supported language.
          title: LanguageCode
      required:
      - LanguageCode
      - LanguageName
      title: Language
      type: object
    LanguageCodeStringList:
      items:
        $ref: '#/components/schemas/LanguageCodeString'
      type: array
    LanguagesList:
      items:
        $ref: '#/components/schemas/Language'
      type: array
    NextToken:
      maxLength: 8192
      pattern: "\\p{ASCII}{0,8192}"
      type: string
    MaxResultsInteger:
      maximum: 500
      minimum: 1
      type: integer
    ParallelDataPropertiesList:
      items:
        $ref: '#/components/schemas/ParallelDataProperties'
      type: array
    ResourceArn:
      maxLength: 512
      minLength: 1
      type: string
    TerminologyPropertiesList:
      items:
        $ref: '#/components/schemas/TerminologyProperties'
      type: array
    TextTranslationJobFilter:
      description: "Provides information for filtering a list of translation jobs.\
        \ For more information, see <a>ListTextTranslationJobs</a>."
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: Filters the list of jobs by name.
          title: JobName
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: Filters the list of jobs based by job status.
          title: JobStatus
        SubmittedBeforeTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "Filters the list of jobs based on the time that the job\
              \ was submitted for processing and returns only the jobs submitted before\
              \ the specified time. Jobs are returned in ascending order, oldest to\
              \ newest."
          title: SubmittedBeforeTime
        SubmittedAfterTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "Filters the list of jobs based on the time that the job\
              \ was submitted for processing and returns only the jobs submitted after\
              \ the specified time. Jobs are returned in descending order, newest\
              \ to oldest."
          title: SubmittedAfterTime
      title: TextTranslationJobFilter
      type: object
    TextTranslationJobPropertiesList:
      items:
        $ref: '#/components/schemas/TextTranslationJobProperties'
      type: array
    Long:
      type: integer
    OutputDataConfig:
      description: The output configuration properties for a batch translation job.
      properties:
        S3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          - description: The URI of the S3 folder that contains a translation job's
              output file. The folder must be in the same Region as the API endpoint
              that you are calling.
          title: S3Uri
        EncryptionKey:
          $ref: '#/components/schemas/EncryptionKey'
      required:
      - S3Uri
      title: OutputDataConfig
      type: object
    ParallelDataArn:
      maxLength: 512
      minLength: 1
      type: string
    ParallelDataFormat:
      enum:
      - TSV
      - CSV
      - TMX
      title: ParallelDataFormat
      type: string
    String:
      maxLength: 10000
      pattern: "[\\P{M}\\p{M}]{0,10000}"
      type: string
    UnboundedLengthString:
      type: string
    Timestamp:
      format: date-time
      type: string
    Profanity:
      enum:
      - MASK
      title: Profanity
      type: string
    ResourceNameList:
      items:
        $ref: '#/components/schemas/ResourceName'
      type: array
    TargetLanguageCodeStringList:
      items:
        $ref: '#/components/schemas/LanguageCodeString'
      minItems: 1
      type: array
    TranslationSettings:
      description: "Settings to configure your translation output, including the option\
        \ to set the formality level of the output text and the option to mask profane\
        \ words and phrases."
      example:
        Formality: ""
        Profanity: ""
      properties:
        Formality:
          allOf:
          - $ref: '#/components/schemas/Formality'
          - description: "<p>You can optionally specify the desired level of formality\
              \ for translations to supported target languages. The formality setting\
              \ controls the level of formal language usage (also known as <a href=\"\
              https://en.wikipedia.org/wiki/Register_(sociolinguistics)\">register</a>)\
              \ in the translation output. You can set the value to informal or formal.\
              \ If you don't specify a value for formality, or if the target language\
              \ doesn't support formality, the translation will ignore the formality\
              \ setting.</p> <p> If you specify multiple target languages for the\
              \ job, translate ignores the formality setting for any unsupported target\
              \ language.</p> <p>For a list of target languages that support formality,\
              \ see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/customizing-translations-formality.html#customizing-translations-formality-languages\"\
              >Supported languages</a> in the Amazon Translate Developer Guide.</p>"
          title: Formality
        Profanity:
          allOf:
          - $ref: '#/components/schemas/Profanity'
          - description: "<p>Enable the profanity setting if you want Amazon Translate\
              \ to mask profane words and phrases in your translation output.</p>\
              \ <p>To mask profane words and phrases, Amazon Translate replaces them\
              \ with the grawlix string “?$#@$“. This 5-character sequence is used\
              \ for each profane word or phrase, regardless of the length or number\
              \ of words.</p> <p>Amazon Translate doesn't detect profanity in all\
              \ of its supported languages. For languages that don't support profanity\
              \ detection, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/customizing-translations-profanity.html#customizing-translations-profanity-languages\"\
              >Unsupported languages</a> in the Amazon Translate Developer Guide.</p>\
              \ <p>If you specify multiple target languages for the job, all the target\
              \ languages must support profanity masking. If any of the target languages\
              \ don't support profanity masking, the translation job won't mask profanity\
              \ for any target language.</p>"
          title: Profanity
      title: TranslationSettings
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      title: TagKey
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    Tag:
      description: 'A key-value pair that adds as a metadata to a resource used by
        Amazon Translate. '
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: 'The initial part of a key-value pair that forms a tag associated
              with a given resource. '
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: ' The second part of a key-value pair that forms a tag associated
              with a given resource.'
          title: Value
      required:
      - Key
      - Value
      title: Tag
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    Term:
      description: The term being translated by the custom terminology.
      properties:
        SourceText:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The source text of the term being translated by the custom
              terminology.
          title: SourceText
        TargetText:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The target text of the term being translated by the custom
              terminology.
          title: TargetText
      title: Term
      type: object
    TerminologyArn:
      maxLength: 512
      minLength: 1
      type: string
    TerminologyFile:
      format: password
      maxLength: 10485760
      type: string
    TranslatedDocument:
      description: The translated content.
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/TranslatedDocumentContent'
          - description: The document containing the translated content.
          title: Content
      required:
      - Content
      title: TranslatedDocument
      type: object
    TranslatedTextString:
      maxLength: 20000
      pattern: "[\\P{M}\\p{M}]{0,20000}"
      type: string
    TranslatedDocumentContent:
      format: password
      type: string
    CreateParallelDataRequest_ParallelDataConfig:
      allOf:
      - $ref: '#/components/schemas/ParallelDataConfig'
      - description: Specifies the format and S3 location of the parallel data input
          file.
      example:
        Format: ""
        S3Uri: ""
      title: CreateParallelDataRequest_ParallelDataConfig
    DescribeTextTranslationJobResponse_TextTranslationJobProperties:
      allOf:
      - $ref: '#/components/schemas/TextTranslationJobProperties'
      - description: An object that contains the properties associated with an asynchronous
          batch translation job.
      example:
        Message: ""
        SubmittedTime: ""
        EndTime: ""
        OutputDataConfig:
          S3Uri: ""
          EncryptionKey:
            Type: ""
            Id: ""
        JobName: ""
        InputDataConfig:
          ContentType: ""
          S3Uri: ""
        JobDetails:
          InputDocumentsCount: ""
          TranslatedDocumentsCount: ""
          DocumentsWithErrorsCount: ""
        TargetLanguageCodes: ""
        ParallelDataNames: ""
        JobStatus: ""
        DataAccessRoleArn: ""
        JobId: ""
        SourceLanguageCode: ""
        TerminologyNames: ""
        Settings:
          Formality: ""
          Profanity: ""
      title: DescribeTextTranslationJobResponse_TextTranslationJobProperties
    GetParallelDataResponse_ParallelDataProperties:
      allOf:
      - $ref: '#/components/schemas/ParallelDataProperties'
      - description: The properties of the parallel data resource that is being retrieved.
      example:
        Status: ""
        FailedRecordCount: ""
        Description: ""
        Message: ""
        LastUpdatedAt: ""
        ImportedDataSize: ""
        CreatedAt: ""
        EncryptionKey:
          Type: ""
          Id: ""
        ImportedRecordCount: ""
        TargetLanguageCodes: ""
        SkippedRecordCount: ""
        Name: ""
        LatestUpdateAttemptAt: ""
        Arn: ""
        ParallelDataConfig:
          Format: ""
          S3Uri: ""
        LatestUpdateAttemptStatus: ""
        SourceLanguageCode: ""
      title: GetParallelDataResponse_ParallelDataProperties
    GetParallelDataResponse_DataLocation:
      allOf:
      - $ref: '#/components/schemas/ParallelDataDataLocation'
      - description: "<p>The Amazon S3 location of the most recent parallel data input\
          \ file that was successfully imported into Amazon Translate. The location\
          \ is returned as a presigned URL that has a 30-minute expiration.</p> <important>\
          \ <p>Amazon Translate doesn't scan all input files for the risk of CSV injection\
          \ attacks. </p> <p>CSV injection occurs when a .csv or .tsv file is altered\
          \ so that a record contains malicious code. The record begins with a special\
          \ character, such as =, +, -, or @. When the file is opened in a spreadsheet\
          \ program, the program might interpret the record as a formula and run the\
          \ code within it.</p> <p>Before you download an input file from Amazon S3,\
          \ ensure that you recognize the file and trust its creator.</p> </important>"
      example:
        RepositoryType: ""
        Location: ""
      title: GetParallelDataResponse_DataLocation
    GetParallelDataResponse_AuxiliaryDataLocation:
      allOf:
      - $ref: '#/components/schemas/ParallelDataDataLocation'
      - description: The Amazon S3 location of a file that provides any errors or
          warnings that were produced by your input file. This file was created when
          Amazon Translate attempted to create a parallel data resource. The location
          is returned as a presigned URL to that has a 30-minute expiration.
      example:
        RepositoryType: ""
        Location: ""
      title: GetParallelDataResponse_AuxiliaryDataLocation
    GetParallelDataResponse_LatestUpdateAttemptAuxiliaryDataLocation:
      allOf:
      - $ref: '#/components/schemas/ParallelDataDataLocation'
      - description: The Amazon S3 location of a file that provides any errors or
          warnings that were produced by your input file. This file was created when
          Amazon Translate attempted to update a parallel data resource. The location
          is returned as a presigned URL to that has a 30-minute expiration.
      example:
        RepositoryType: ""
        Location: ""
      title: GetParallelDataResponse_LatestUpdateAttemptAuxiliaryDataLocation
    GetTerminologyResponse_TerminologyProperties:
      allOf:
      - $ref: '#/components/schemas/TerminologyProperties'
      - description: The properties of the custom terminology being retrieved.
      example:
        Description: ""
        LastUpdatedAt: ""
        Message: ""
        CreatedAt: ""
        EncryptionKey:
          Type: ""
          Id: ""
        TargetLanguageCodes: ""
        Name: ""
        Directionality: ""
        Format: ""
        TermCount: ""
        SkippedTermCount: ""
        Arn: ""
        SizeBytes: ""
        SourceLanguageCode: ""
      title: GetTerminologyResponse_TerminologyProperties
    GetTerminologyResponse_TerminologyDataLocation:
      allOf:
      - $ref: '#/components/schemas/TerminologyDataLocation'
      - description: "<p>The Amazon S3 location of the most recent custom terminology\
          \ input file that was successfully imported into Amazon Translate. The location\
          \ is returned as a presigned URL that has a 30-minute expiration.</p> <important>\
          \ <p>Amazon Translate doesn't scan all input files for the risk of CSV injection\
          \ attacks. </p> <p>CSV injection occurs when a .csv or .tsv file is altered\
          \ so that a record contains malicious code. The record begins with a special\
          \ character, such as =, +, -, or @. When the file is opened in a spreadsheet\
          \ program, the program might interpret the record as a formula and run the\
          \ code within it.</p> <p>Before you download an input file from Amazon S3,\
          \ ensure that you recognize the file and trust its creator.</p> </important>"
      example:
        RepositoryType: ""
        Location: ""
      title: GetTerminologyResponse_TerminologyDataLocation
    GetTerminologyResponse_AuxiliaryDataLocation:
      allOf:
      - $ref: '#/components/schemas/TerminologyDataLocation'
      - description: The Amazon S3 location of a file that provides any errors or
          warnings that were produced by your input file. This file was created when
          Amazon Translate attempted to create a terminology resource. The location
          is returned as a presigned URL to that has a 30-minute expiration.
      example:
        RepositoryType: ""
        Location: ""
      title: GetTerminologyResponse_AuxiliaryDataLocation
    ImportTerminologyResponse_TerminologyProperties:
      allOf:
      - $ref: '#/components/schemas/TerminologyProperties'
      - description: The properties of the custom terminology being imported.
      example:
        Description: ""
        LastUpdatedAt: ""
        Message: ""
        CreatedAt: ""
        EncryptionKey:
          Type: ""
          Id: ""
        TargetLanguageCodes: ""
        Name: ""
        Directionality: ""
        Format: ""
        TermCount: ""
        SkippedTermCount: ""
        Arn: ""
        SizeBytes: ""
        SourceLanguageCode: ""
      title: ImportTerminologyResponse_TerminologyProperties
    ImportTerminologyResponse_AuxiliaryDataLocation:
      allOf:
      - $ref: '#/components/schemas/TerminologyDataLocation'
      - description: The Amazon S3 location of a file that provides any errors or
          warnings that were produced by your input file. This file was created when
          Amazon Translate attempted to create a terminology resource. The location
          is returned as a presigned URL to that has a 30 minute expiration.
      example:
        RepositoryType: ""
        Location: ""
      title: ImportTerminologyResponse_AuxiliaryDataLocation
    ImportTerminologyRequest_TerminologyData:
      allOf:
      - $ref: '#/components/schemas/TerminologyData'
      - description: The terminology data for the custom terminology being imported.
      example:
        Directionality: ""
        Format: ""
        File: ""
      title: ImportTerminologyRequest_TerminologyData
    ImportTerminologyRequest_EncryptionKey:
      allOf:
      - $ref: '#/components/schemas/EncryptionKey'
      - description: The encryption key for the custom terminology being imported.
      example:
        Type: ""
        Id: ""
      title: ImportTerminologyRequest_EncryptionKey
    ListTextTranslationJobsRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/TextTranslationJobFilter'
      - description: "The parameters that specify which batch translation jobs to\
          \ retrieve. Filters include job name, job status, and submission time. You\
          \ can only set one filter at a time."
      example:
        JobStatus: ""
        JobName: ""
        SubmittedBeforeTime: ""
        SubmittedAfterTime: ""
      title: ListTextTranslationJobsRequest_Filter
    StartTextTranslationJobRequest_InputDataConfig:
      allOf:
      - $ref: '#/components/schemas/InputDataConfig'
      - description: Specifies the format and location of the input documents for
          the translation job.
      example:
        ContentType: ""
        S3Uri: ""
      title: StartTextTranslationJobRequest_InputDataConfig
    StartTextTranslationJobRequest_OutputDataConfig:
      allOf:
      - $ref: '#/components/schemas/OutputDataConfig'
      - description: 'Specifies the S3 folder to which your job output will be saved. '
      example:
        S3Uri: ""
        EncryptionKey:
          Type: ""
          Id: ""
      title: StartTextTranslationJobRequest_OutputDataConfig
    StartTextTranslationJobRequest_Settings:
      allOf:
      - $ref: '#/components/schemas/TranslationSettings'
      - description: "Settings to configure your translation output, including the\
          \ option to set the formality level of the output text and the option to\
          \ mask profane words and phrases."
      example:
        Formality: ""
        Profanity: ""
      title: StartTextTranslationJobRequest_Settings
    TranslateDocumentResponse_TranslatedDocument:
      allOf:
      - $ref: '#/components/schemas/TranslatedDocument'
      - description: The document containing the translated content. The document
          format matches the source document format.
      example:
        Content: ""
      title: TranslateDocumentResponse_TranslatedDocument
    TranslateDocumentRequest_Document:
      allOf:
      - $ref: '#/components/schemas/Document'
      - description: The content and content type for the document to be translated.
          The document size must not exceed 100 KB.
      example:
        ContentType: ""
        Content: ""
      title: TranslateDocumentRequest_Document
    TranslateTextResponse_AppliedSettings:
      allOf:
      - $ref: '#/components/schemas/TranslationSettings'
      - description: Optional settings that modify the translation output.
      example:
        Formality: ""
        Profanity: ""
      title: TranslateTextResponse_AppliedSettings
    TextTranslationJobProperties_JobDetails:
      allOf:
      - $ref: '#/components/schemas/JobDetails'
      - description: The number of documents successfully and unsuccessfully processed
          during the translation job.
      example:
        InputDocumentsCount: ""
        TranslatedDocumentsCount: ""
        DocumentsWithErrorsCount: ""
      title: TextTranslationJobProperties_JobDetails
    TextTranslationJobProperties_InputDataConfig:
      allOf:
      - $ref: '#/components/schemas/InputDataConfig'
      - description: The input configuration properties that were specified when the
          job was requested.
      example:
        ContentType: ""
        S3Uri: ""
      title: TextTranslationJobProperties_InputDataConfig
    TextTranslationJobProperties_OutputDataConfig:
      allOf:
      - $ref: '#/components/schemas/OutputDataConfig'
      - description: The output configuration properties that were specified when
          the job was requested.
      example:
        S3Uri: ""
        EncryptionKey:
          Type: ""
          Id: ""
      title: TextTranslationJobProperties_OutputDataConfig
    TextTranslationJobProperties_Settings:
      allOf:
      - $ref: '#/components/schemas/TranslationSettings'
      - description: Settings that modify the translation output.
      example:
        Formality: ""
        Profanity: ""
      title: TextTranslationJobProperties_Settings
    TerminologyProperties_EncryptionKey:
      allOf:
      - $ref: '#/components/schemas/EncryptionKey'
      - description: The encryption key for the custom terminology.
      example:
        Type: ""
        Id: ""
      title: TerminologyProperties_EncryptionKey
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
