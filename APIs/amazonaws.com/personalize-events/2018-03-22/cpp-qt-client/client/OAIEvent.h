/**
 * Amazon Personalize Events
 * Amazon Personalize can consume real-time user event data, such as <i>stream</i> or <i>click</i> data, and use it for model training either alone or combined with historical data. For more information see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/recording-events.html\">Recording Events</a>.
 *
 * The version of the OpenAPI document: 2018-03-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEvent.h
 *
 * Represents user interaction event information sent using the &lt;code&gt;PutEvents&lt;/code&gt; API.
 */

#ifndef OAIEvent_H
#define OAIEvent_H

#include <QJsonObject>

#include "OAIEvent_metricAttribution.h"
#include <QDateTime>
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEvent_metricAttribution;

class OAIEvent : public OAIObject {
public:
    OAIEvent();
    OAIEvent(QString json);
    ~OAIEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEventId() const;
    void setEventId(const QString &event_id);
    bool is_event_id_Set() const;
    bool is_event_id_Valid() const;

    QString getEventType() const;
    void setEventType(const QString &event_type);
    bool is_event_type_Set() const;
    bool is_event_type_Valid() const;

    float getEventValue() const;
    void setEventValue(const float &event_value);
    bool is_event_value_Set() const;
    bool is_event_value_Valid() const;

    QString getItemId() const;
    void setItemId(const QString &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    QJsonValue getProperties() const;
    void setProperties(const QJsonValue &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    QDateTime getSentAt() const;
    void setSentAt(const QDateTime &sent_at);
    bool is_sent_at_Set() const;
    bool is_sent_at_Valid() const;

    QString getRecommendationId() const;
    void setRecommendationId(const QString &recommendation_id);
    bool is_recommendation_id_Set() const;
    bool is_recommendation_id_Valid() const;

    QList getImpression() const;
    void setImpression(const QList &impression);
    bool is_impression_Set() const;
    bool is_impression_Valid() const;

    OAIEvent_metricAttribution getMetricAttribution() const;
    void setMetricAttribution(const OAIEvent_metricAttribution &metric_attribution);
    bool is_metric_attribution_Set() const;
    bool is_metric_attribution_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_event_id;
    bool m_event_id_isSet;
    bool m_event_id_isValid;

    QString m_event_type;
    bool m_event_type_isSet;
    bool m_event_type_isValid;

    float m_event_value;
    bool m_event_value_isSet;
    bool m_event_value_isValid;

    QString m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    QJsonValue m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    QDateTime m_sent_at;
    bool m_sent_at_isSet;
    bool m_sent_at_isValid;

    QString m_recommendation_id;
    bool m_recommendation_id_isSet;
    bool m_recommendation_id_isValid;

    QList m_impression;
    bool m_impression_isSet;
    bool m_impression_isValid;

    OAIEvent_metricAttribution m_metric_attribution;
    bool m_metric_attribution_isSet;
    bool m_metric_attribution_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEvent)

#endif // OAIEvent_H
