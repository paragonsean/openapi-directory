# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InspectorServiceAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schema_version: int=None, assessment_run_arn: str=None, rules_package_arn: str=None):
        """InspectorServiceAttributes - a model defined in OpenAPI

        :param schema_version: The schema_version of this InspectorServiceAttributes.
        :param assessment_run_arn: The assessment_run_arn of this InspectorServiceAttributes.
        :param rules_package_arn: The rules_package_arn of this InspectorServiceAttributes.
        """
        self.openapi_types = {
            'schema_version': int,
            'assessment_run_arn': str,
            'rules_package_arn': str
        }

        self.attribute_map = {
            'schema_version': 'schemaVersion',
            'assessment_run_arn': 'assessmentRunArn',
            'rules_package_arn': 'rulesPackageArn'
        }

        self._schema_version = schema_version
        self._assessment_run_arn = assessment_run_arn
        self._rules_package_arn = rules_package_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InspectorServiceAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InspectorServiceAttributes of this InspectorServiceAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schema_version(self):
        """Gets the schema_version of this InspectorServiceAttributes.


        :return: The schema_version of this InspectorServiceAttributes.
        :rtype: int
        """
        return self._schema_version

    @schema_version.setter
    def schema_version(self, schema_version):
        """Sets the schema_version of this InspectorServiceAttributes.


        :param schema_version: The schema_version of this InspectorServiceAttributes.
        :type schema_version: int
        """
        if schema_version is None:
            raise ValueError("Invalid value for `schema_version`, must not be `None`")

        self._schema_version = schema_version

    @property
    def assessment_run_arn(self):
        """Gets the assessment_run_arn of this InspectorServiceAttributes.


        :return: The assessment_run_arn of this InspectorServiceAttributes.
        :rtype: str
        """
        return self._assessment_run_arn

    @assessment_run_arn.setter
    def assessment_run_arn(self, assessment_run_arn):
        """Sets the assessment_run_arn of this InspectorServiceAttributes.


        :param assessment_run_arn: The assessment_run_arn of this InspectorServiceAttributes.
        :type assessment_run_arn: str
        """

        self._assessment_run_arn = assessment_run_arn

    @property
    def rules_package_arn(self):
        """Gets the rules_package_arn of this InspectorServiceAttributes.


        :return: The rules_package_arn of this InspectorServiceAttributes.
        :rtype: str
        """
        return self._rules_package_arn

    @rules_package_arn.setter
    def rules_package_arn(self, rules_package_arn):
        """Sets the rules_package_arn of this InspectorServiceAttributes.


        :param rules_package_arn: The rules_package_arn of this InspectorServiceAttributes.
        :type rules_package_arn: str
        """

        self._rules_package_arn = rules_package_arn
