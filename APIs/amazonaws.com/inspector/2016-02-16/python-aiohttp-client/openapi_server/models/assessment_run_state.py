# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssessmentRunState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    CREATED = 'CREATED'
    START_DATA_COLLECTION_PENDING = 'START_DATA_COLLECTION_PENDING'
    START_DATA_COLLECTION_IN_PROGRESS = 'START_DATA_COLLECTION_IN_PROGRESS'
    COLLECTING_DATA = 'COLLECTING_DATA'
    STOP_DATA_COLLECTION_PENDING = 'STOP_DATA_COLLECTION_PENDING'
    DATA_COLLECTED = 'DATA_COLLECTED'
    START_EVALUATING_RULES_PENDING = 'START_EVALUATING_RULES_PENDING'
    EVALUATING_RULES = 'EVALUATING_RULES'
    FAILED = 'FAILED'
    ERROR = 'ERROR'
    COMPLETED = 'COMPLETED'
    COMPLETED_WITH_ERRORS = 'COMPLETED_WITH_ERRORS'
    CANCELED = 'CANCELED'

    def __init__(self):
        """AssessmentRunState - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssessmentRunState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssessmentRunState of this AssessmentRunState.
        """
        return util.deserialize_model(dikt, cls)
