# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RemoveAttributesFromFindingsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, finding_arns: List=None, attribute_keys: List=None):
        """RemoveAttributesFromFindingsRequest - a model defined in OpenAPI

        :param finding_arns: The finding_arns of this RemoveAttributesFromFindingsRequest.
        :param attribute_keys: The attribute_keys of this RemoveAttributesFromFindingsRequest.
        """
        self.openapi_types = {
            'finding_arns': List,
            'attribute_keys': List
        }

        self.attribute_map = {
            'finding_arns': 'findingArns',
            'attribute_keys': 'attributeKeys'
        }

        self._finding_arns = finding_arns
        self._attribute_keys = attribute_keys

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoveAttributesFromFindingsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemoveAttributesFromFindingsRequest of this RemoveAttributesFromFindingsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def finding_arns(self):
        """Gets the finding_arns of this RemoveAttributesFromFindingsRequest.


        :return: The finding_arns of this RemoveAttributesFromFindingsRequest.
        :rtype: List
        """
        return self._finding_arns

    @finding_arns.setter
    def finding_arns(self, finding_arns):
        """Sets the finding_arns of this RemoveAttributesFromFindingsRequest.


        :param finding_arns: The finding_arns of this RemoveAttributesFromFindingsRequest.
        :type finding_arns: List
        """
        if finding_arns is None:
            raise ValueError("Invalid value for `finding_arns`, must not be `None`")

        self._finding_arns = finding_arns

    @property
    def attribute_keys(self):
        """Gets the attribute_keys of this RemoveAttributesFromFindingsRequest.


        :return: The attribute_keys of this RemoveAttributesFromFindingsRequest.
        :rtype: List
        """
        return self._attribute_keys

    @attribute_keys.setter
    def attribute_keys(self, attribute_keys):
        """Sets the attribute_keys of this RemoveAttributesFromFindingsRequest.


        :param attribute_keys: The attribute_keys of this RemoveAttributesFromFindingsRequest.
        :type attribute_keys: List
        """
        if attribute_keys is None:
            raise ValueError("Invalid value for `attribute_keys`, must not be `None`")

        self._attribute_keys = attribute_keys
