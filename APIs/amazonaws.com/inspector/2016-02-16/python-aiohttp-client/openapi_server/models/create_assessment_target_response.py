# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateAssessmentTargetResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assessment_target_arn: str=None):
        """CreateAssessmentTargetResponse - a model defined in OpenAPI

        :param assessment_target_arn: The assessment_target_arn of this CreateAssessmentTargetResponse.
        """
        self.openapi_types = {
            'assessment_target_arn': str
        }

        self.attribute_map = {
            'assessment_target_arn': 'assessmentTargetArn'
        }

        self._assessment_target_arn = assessment_target_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAssessmentTargetResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAssessmentTargetResponse of this CreateAssessmentTargetResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assessment_target_arn(self):
        """Gets the assessment_target_arn of this CreateAssessmentTargetResponse.


        :return: The assessment_target_arn of this CreateAssessmentTargetResponse.
        :rtype: str
        """
        return self._assessment_target_arn

    @assessment_target_arn.setter
    def assessment_target_arn(self, assessment_target_arn):
        """Sets the assessment_target_arn of this CreateAssessmentTargetResponse.


        :param assessment_target_arn: The assessment_target_arn of this CreateAssessmentTargetResponse.
        :type assessment_target_arn: str
        """
        if assessment_target_arn is None:
            raise ValueError("Invalid value for `assessment_target_arn`, must not be `None`")

        self._assessment_target_arn = assessment_target_arn
