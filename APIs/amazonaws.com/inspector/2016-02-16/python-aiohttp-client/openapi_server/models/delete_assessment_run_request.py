# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteAssessmentRunRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assessment_run_arn: str=None):
        """DeleteAssessmentRunRequest - a model defined in OpenAPI

        :param assessment_run_arn: The assessment_run_arn of this DeleteAssessmentRunRequest.
        """
        self.openapi_types = {
            'assessment_run_arn': str
        }

        self.attribute_map = {
            'assessment_run_arn': 'assessmentRunArn'
        }

        self._assessment_run_arn = assessment_run_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteAssessmentRunRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteAssessmentRunRequest of this DeleteAssessmentRunRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assessment_run_arn(self):
        """Gets the assessment_run_arn of this DeleteAssessmentRunRequest.


        :return: The assessment_run_arn of this DeleteAssessmentRunRequest.
        :rtype: str
        """
        return self._assessment_run_arn

    @assessment_run_arn.setter
    def assessment_run_arn(self, assessment_run_arn):
        """Sets the assessment_run_arn of this DeleteAssessmentRunRequest.


        :param assessment_run_arn: The assessment_run_arn of this DeleteAssessmentRunRequest.
        :type assessment_run_arn: str
        """
        if assessment_run_arn is None:
            raise ValueError("Invalid value for `assessment_run_arn`, must not be `None`")

        self._assessment_run_arn = assessment_run_arn
