# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.locale import Locale
from openapi_server import util


class GetExclusionsPreviewRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assessment_template_arn: str=None, preview_token: str=None, next_token: str=None, max_results: int=None, locale: Locale=None):
        """GetExclusionsPreviewRequest - a model defined in OpenAPI

        :param assessment_template_arn: The assessment_template_arn of this GetExclusionsPreviewRequest.
        :param preview_token: The preview_token of this GetExclusionsPreviewRequest.
        :param next_token: The next_token of this GetExclusionsPreviewRequest.
        :param max_results: The max_results of this GetExclusionsPreviewRequest.
        :param locale: The locale of this GetExclusionsPreviewRequest.
        """
        self.openapi_types = {
            'assessment_template_arn': str,
            'preview_token': str,
            'next_token': str,
            'max_results': int,
            'locale': Locale
        }

        self.attribute_map = {
            'assessment_template_arn': 'assessmentTemplateArn',
            'preview_token': 'previewToken',
            'next_token': 'nextToken',
            'max_results': 'maxResults',
            'locale': 'locale'
        }

        self._assessment_template_arn = assessment_template_arn
        self._preview_token = preview_token
        self._next_token = next_token
        self._max_results = max_results
        self._locale = locale

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetExclusionsPreviewRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetExclusionsPreviewRequest of this GetExclusionsPreviewRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assessment_template_arn(self):
        """Gets the assessment_template_arn of this GetExclusionsPreviewRequest.


        :return: The assessment_template_arn of this GetExclusionsPreviewRequest.
        :rtype: str
        """
        return self._assessment_template_arn

    @assessment_template_arn.setter
    def assessment_template_arn(self, assessment_template_arn):
        """Sets the assessment_template_arn of this GetExclusionsPreviewRequest.


        :param assessment_template_arn: The assessment_template_arn of this GetExclusionsPreviewRequest.
        :type assessment_template_arn: str
        """
        if assessment_template_arn is None:
            raise ValueError("Invalid value for `assessment_template_arn`, must not be `None`")

        self._assessment_template_arn = assessment_template_arn

    @property
    def preview_token(self):
        """Gets the preview_token of this GetExclusionsPreviewRequest.


        :return: The preview_token of this GetExclusionsPreviewRequest.
        :rtype: str
        """
        return self._preview_token

    @preview_token.setter
    def preview_token(self, preview_token):
        """Sets the preview_token of this GetExclusionsPreviewRequest.


        :param preview_token: The preview_token of this GetExclusionsPreviewRequest.
        :type preview_token: str
        """
        if preview_token is None:
            raise ValueError("Invalid value for `preview_token`, must not be `None`")

        self._preview_token = preview_token

    @property
    def next_token(self):
        """Gets the next_token of this GetExclusionsPreviewRequest.


        :return: The next_token of this GetExclusionsPreviewRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this GetExclusionsPreviewRequest.


        :param next_token: The next_token of this GetExclusionsPreviewRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this GetExclusionsPreviewRequest.


        :return: The max_results of this GetExclusionsPreviewRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this GetExclusionsPreviewRequest.


        :param max_results: The max_results of this GetExclusionsPreviewRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def locale(self):
        """Gets the locale of this GetExclusionsPreviewRequest.


        :return: The locale of this GetExclusionsPreviewRequest.
        :rtype: Locale
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this GetExclusionsPreviewRequest.


        :param locale: The locale of this GetExclusionsPreviewRequest.
        :type locale: Locale
        """

        self._locale = locale
