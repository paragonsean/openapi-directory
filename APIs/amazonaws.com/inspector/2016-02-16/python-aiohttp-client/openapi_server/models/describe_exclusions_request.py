# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.locale import Locale
from openapi_server import util


class DescribeExclusionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exclusion_arns: List=None, locale: Locale=None):
        """DescribeExclusionsRequest - a model defined in OpenAPI

        :param exclusion_arns: The exclusion_arns of this DescribeExclusionsRequest.
        :param locale: The locale of this DescribeExclusionsRequest.
        """
        self.openapi_types = {
            'exclusion_arns': List,
            'locale': Locale
        }

        self.attribute_map = {
            'exclusion_arns': 'exclusionArns',
            'locale': 'locale'
        }

        self._exclusion_arns = exclusion_arns
        self._locale = locale

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeExclusionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeExclusionsRequest of this DescribeExclusionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exclusion_arns(self):
        """Gets the exclusion_arns of this DescribeExclusionsRequest.


        :return: The exclusion_arns of this DescribeExclusionsRequest.
        :rtype: List
        """
        return self._exclusion_arns

    @exclusion_arns.setter
    def exclusion_arns(self, exclusion_arns):
        """Sets the exclusion_arns of this DescribeExclusionsRequest.


        :param exclusion_arns: The exclusion_arns of this DescribeExclusionsRequest.
        :type exclusion_arns: List
        """
        if exclusion_arns is None:
            raise ValueError("Invalid value for `exclusion_arns`, must not be `None`")

        self._exclusion_arns = exclusion_arns

    @property
    def locale(self):
        """Gets the locale of this DescribeExclusionsRequest.


        :return: The locale of this DescribeExclusionsRequest.
        :rtype: Locale
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this DescribeExclusionsRequest.


        :param locale: The locale of this DescribeExclusionsRequest.
        :type locale: Locale
        """

        self._locale = locale
