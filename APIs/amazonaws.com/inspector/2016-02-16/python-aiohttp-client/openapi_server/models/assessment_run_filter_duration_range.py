# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssessmentRunFilterDurationRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, min_seconds: int=None, max_seconds: int=None):
        """AssessmentRunFilterDurationRange - a model defined in OpenAPI

        :param min_seconds: The min_seconds of this AssessmentRunFilterDurationRange.
        :param max_seconds: The max_seconds of this AssessmentRunFilterDurationRange.
        """
        self.openapi_types = {
            'min_seconds': int,
            'max_seconds': int
        }

        self.attribute_map = {
            'min_seconds': 'minSeconds',
            'max_seconds': 'maxSeconds'
        }

        self._min_seconds = min_seconds
        self._max_seconds = max_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssessmentRunFilterDurationRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssessmentRunFilter_durationRange of this AssessmentRunFilterDurationRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def min_seconds(self):
        """Gets the min_seconds of this AssessmentRunFilterDurationRange.


        :return: The min_seconds of this AssessmentRunFilterDurationRange.
        :rtype: int
        """
        return self._min_seconds

    @min_seconds.setter
    def min_seconds(self, min_seconds):
        """Sets the min_seconds of this AssessmentRunFilterDurationRange.


        :param min_seconds: The min_seconds of this AssessmentRunFilterDurationRange.
        :type min_seconds: int
        """

        self._min_seconds = min_seconds

    @property
    def max_seconds(self):
        """Gets the max_seconds of this AssessmentRunFilterDurationRange.


        :return: The max_seconds of this AssessmentRunFilterDurationRange.
        :rtype: int
        """
        return self._max_seconds

    @max_seconds.setter
    def max_seconds(self, max_seconds):
        """Sets the max_seconds of this AssessmentRunFilterDurationRange.


        :param max_seconds: The max_seconds of this AssessmentRunFilterDurationRange.
        :type max_seconds: int
        """

        self._max_seconds = max_seconds
