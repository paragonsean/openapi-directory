# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.preview_status import PreviewStatus
from openapi_server import util


class GetExclusionsPreviewResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, preview_status: PreviewStatus=None, exclusion_previews: List=None, next_token: str=None):
        """GetExclusionsPreviewResponse - a model defined in OpenAPI

        :param preview_status: The preview_status of this GetExclusionsPreviewResponse.
        :param exclusion_previews: The exclusion_previews of this GetExclusionsPreviewResponse.
        :param next_token: The next_token of this GetExclusionsPreviewResponse.
        """
        self.openapi_types = {
            'preview_status': PreviewStatus,
            'exclusion_previews': List,
            'next_token': str
        }

        self.attribute_map = {
            'preview_status': 'previewStatus',
            'exclusion_previews': 'exclusionPreviews',
            'next_token': 'nextToken'
        }

        self._preview_status = preview_status
        self._exclusion_previews = exclusion_previews
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetExclusionsPreviewResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetExclusionsPreviewResponse of this GetExclusionsPreviewResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def preview_status(self):
        """Gets the preview_status of this GetExclusionsPreviewResponse.


        :return: The preview_status of this GetExclusionsPreviewResponse.
        :rtype: PreviewStatus
        """
        return self._preview_status

    @preview_status.setter
    def preview_status(self, preview_status):
        """Sets the preview_status of this GetExclusionsPreviewResponse.


        :param preview_status: The preview_status of this GetExclusionsPreviewResponse.
        :type preview_status: PreviewStatus
        """
        if preview_status is None:
            raise ValueError("Invalid value for `preview_status`, must not be `None`")

        self._preview_status = preview_status

    @property
    def exclusion_previews(self):
        """Gets the exclusion_previews of this GetExclusionsPreviewResponse.


        :return: The exclusion_previews of this GetExclusionsPreviewResponse.
        :rtype: List
        """
        return self._exclusion_previews

    @exclusion_previews.setter
    def exclusion_previews(self, exclusion_previews):
        """Sets the exclusion_previews of this GetExclusionsPreviewResponse.


        :param exclusion_previews: The exclusion_previews of this GetExclusionsPreviewResponse.
        :type exclusion_previews: List
        """

        self._exclusion_previews = exclusion_previews

    @property
    def next_token(self):
        """Gets the next_token of this GetExclusionsPreviewResponse.


        :return: The next_token of this GetExclusionsPreviewResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this GetExclusionsPreviewResponse.


        :param next_token: The next_token of this GetExclusionsPreviewResponse.
        :type next_token: str
        """

        self._next_token = next_token
