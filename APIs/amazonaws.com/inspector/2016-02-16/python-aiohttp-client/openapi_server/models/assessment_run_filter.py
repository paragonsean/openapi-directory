# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.assessment_run_filter_completion_time_range import AssessmentRunFilterCompletionTimeRange
from openapi_server.models.assessment_run_filter_duration_range import AssessmentRunFilterDurationRange
from openapi_server.models.assessment_run_filter_start_time_range import AssessmentRunFilterStartTimeRange
from openapi_server.models.assessment_run_filter_state_change_time_range import AssessmentRunFilterStateChangeTimeRange
from openapi_server import util


class AssessmentRunFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name_pattern: str=None, states: List=None, duration_range: AssessmentRunFilterDurationRange=None, rules_package_arns: List=None, start_time_range: AssessmentRunFilterStartTimeRange=None, completion_time_range: AssessmentRunFilterCompletionTimeRange=None, state_change_time_range: AssessmentRunFilterStateChangeTimeRange=None):
        """AssessmentRunFilter - a model defined in OpenAPI

        :param name_pattern: The name_pattern of this AssessmentRunFilter.
        :param states: The states of this AssessmentRunFilter.
        :param duration_range: The duration_range of this AssessmentRunFilter.
        :param rules_package_arns: The rules_package_arns of this AssessmentRunFilter.
        :param start_time_range: The start_time_range of this AssessmentRunFilter.
        :param completion_time_range: The completion_time_range of this AssessmentRunFilter.
        :param state_change_time_range: The state_change_time_range of this AssessmentRunFilter.
        """
        self.openapi_types = {
            'name_pattern': str,
            'states': List,
            'duration_range': AssessmentRunFilterDurationRange,
            'rules_package_arns': List,
            'start_time_range': AssessmentRunFilterStartTimeRange,
            'completion_time_range': AssessmentRunFilterCompletionTimeRange,
            'state_change_time_range': AssessmentRunFilterStateChangeTimeRange
        }

        self.attribute_map = {
            'name_pattern': 'namePattern',
            'states': 'states',
            'duration_range': 'durationRange',
            'rules_package_arns': 'rulesPackageArns',
            'start_time_range': 'startTimeRange',
            'completion_time_range': 'completionTimeRange',
            'state_change_time_range': 'stateChangeTimeRange'
        }

        self._name_pattern = name_pattern
        self._states = states
        self._duration_range = duration_range
        self._rules_package_arns = rules_package_arns
        self._start_time_range = start_time_range
        self._completion_time_range = completion_time_range
        self._state_change_time_range = state_change_time_range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssessmentRunFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssessmentRunFilter of this AssessmentRunFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name_pattern(self):
        """Gets the name_pattern of this AssessmentRunFilter.


        :return: The name_pattern of this AssessmentRunFilter.
        :rtype: str
        """
        return self._name_pattern

    @name_pattern.setter
    def name_pattern(self, name_pattern):
        """Sets the name_pattern of this AssessmentRunFilter.


        :param name_pattern: The name_pattern of this AssessmentRunFilter.
        :type name_pattern: str
        """

        self._name_pattern = name_pattern

    @property
    def states(self):
        """Gets the states of this AssessmentRunFilter.


        :return: The states of this AssessmentRunFilter.
        :rtype: List
        """
        return self._states

    @states.setter
    def states(self, states):
        """Sets the states of this AssessmentRunFilter.


        :param states: The states of this AssessmentRunFilter.
        :type states: List
        """

        self._states = states

    @property
    def duration_range(self):
        """Gets the duration_range of this AssessmentRunFilter.


        :return: The duration_range of this AssessmentRunFilter.
        :rtype: AssessmentRunFilterDurationRange
        """
        return self._duration_range

    @duration_range.setter
    def duration_range(self, duration_range):
        """Sets the duration_range of this AssessmentRunFilter.


        :param duration_range: The duration_range of this AssessmentRunFilter.
        :type duration_range: AssessmentRunFilterDurationRange
        """

        self._duration_range = duration_range

    @property
    def rules_package_arns(self):
        """Gets the rules_package_arns of this AssessmentRunFilter.


        :return: The rules_package_arns of this AssessmentRunFilter.
        :rtype: List
        """
        return self._rules_package_arns

    @rules_package_arns.setter
    def rules_package_arns(self, rules_package_arns):
        """Sets the rules_package_arns of this AssessmentRunFilter.


        :param rules_package_arns: The rules_package_arns of this AssessmentRunFilter.
        :type rules_package_arns: List
        """

        self._rules_package_arns = rules_package_arns

    @property
    def start_time_range(self):
        """Gets the start_time_range of this AssessmentRunFilter.


        :return: The start_time_range of this AssessmentRunFilter.
        :rtype: AssessmentRunFilterStartTimeRange
        """
        return self._start_time_range

    @start_time_range.setter
    def start_time_range(self, start_time_range):
        """Sets the start_time_range of this AssessmentRunFilter.


        :param start_time_range: The start_time_range of this AssessmentRunFilter.
        :type start_time_range: AssessmentRunFilterStartTimeRange
        """

        self._start_time_range = start_time_range

    @property
    def completion_time_range(self):
        """Gets the completion_time_range of this AssessmentRunFilter.


        :return: The completion_time_range of this AssessmentRunFilter.
        :rtype: AssessmentRunFilterCompletionTimeRange
        """
        return self._completion_time_range

    @completion_time_range.setter
    def completion_time_range(self, completion_time_range):
        """Sets the completion_time_range of this AssessmentRunFilter.


        :param completion_time_range: The completion_time_range of this AssessmentRunFilter.
        :type completion_time_range: AssessmentRunFilterCompletionTimeRange
        """

        self._completion_time_range = completion_time_range

    @property
    def state_change_time_range(self):
        """Gets the state_change_time_range of this AssessmentRunFilter.


        :return: The state_change_time_range of this AssessmentRunFilter.
        :rtype: AssessmentRunFilterStateChangeTimeRange
        """
        return self._state_change_time_range

    @state_change_time_range.setter
    def state_change_time_range(self, state_change_time_range):
        """Sets the state_change_time_range of this AssessmentRunFilter.


        :param state_change_time_range: The state_change_time_range of this AssessmentRunFilter.
        :type state_change_time_range: AssessmentRunFilterStateChangeTimeRange
        """

        self._state_change_time_range = state_change_time_range
