# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListRulesPackagesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rules_package_arns: List=None, next_token: str=None):
        """ListRulesPackagesResponse - a model defined in OpenAPI

        :param rules_package_arns: The rules_package_arns of this ListRulesPackagesResponse.
        :param next_token: The next_token of this ListRulesPackagesResponse.
        """
        self.openapi_types = {
            'rules_package_arns': List,
            'next_token': str
        }

        self.attribute_map = {
            'rules_package_arns': 'rulesPackageArns',
            'next_token': 'nextToken'
        }

        self._rules_package_arns = rules_package_arns
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListRulesPackagesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListRulesPackagesResponse of this ListRulesPackagesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rules_package_arns(self):
        """Gets the rules_package_arns of this ListRulesPackagesResponse.


        :return: The rules_package_arns of this ListRulesPackagesResponse.
        :rtype: List
        """
        return self._rules_package_arns

    @rules_package_arns.setter
    def rules_package_arns(self, rules_package_arns):
        """Sets the rules_package_arns of this ListRulesPackagesResponse.


        :param rules_package_arns: The rules_package_arns of this ListRulesPackagesResponse.
        :type rules_package_arns: List
        """
        if rules_package_arns is None:
            raise ValueError("Invalid value for `rules_package_arns`, must not be `None`")

        self._rules_package_arns = rules_package_arns

    @property
    def next_token(self):
        """Gets the next_token of this ListRulesPackagesResponse.


        :return: The next_token of this ListRulesPackagesResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListRulesPackagesResponse.


        :param next_token: The next_token of this ListRulesPackagesResponse.
        :type next_token: str
        """

        self._next_token = next_token
