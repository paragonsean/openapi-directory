# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddAttributesToFindingsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, finding_arns: List=None, attributes: List=None):
        """AddAttributesToFindingsRequest - a model defined in OpenAPI

        :param finding_arns: The finding_arns of this AddAttributesToFindingsRequest.
        :param attributes: The attributes of this AddAttributesToFindingsRequest.
        """
        self.openapi_types = {
            'finding_arns': List,
            'attributes': List
        }

        self.attribute_map = {
            'finding_arns': 'findingArns',
            'attributes': 'attributes'
        }

        self._finding_arns = finding_arns
        self._attributes = attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddAttributesToFindingsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddAttributesToFindingsRequest of this AddAttributesToFindingsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def finding_arns(self):
        """Gets the finding_arns of this AddAttributesToFindingsRequest.


        :return: The finding_arns of this AddAttributesToFindingsRequest.
        :rtype: List
        """
        return self._finding_arns

    @finding_arns.setter
    def finding_arns(self, finding_arns):
        """Sets the finding_arns of this AddAttributesToFindingsRequest.


        :param finding_arns: The finding_arns of this AddAttributesToFindingsRequest.
        :type finding_arns: List
        """
        if finding_arns is None:
            raise ValueError("Invalid value for `finding_arns`, must not be `None`")

        self._finding_arns = finding_arns

    @property
    def attributes(self):
        """Gets the attributes of this AddAttributesToFindingsRequest.


        :return: The attributes of this AddAttributesToFindingsRequest.
        :rtype: List
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this AddAttributesToFindingsRequest.


        :param attributes: The attributes of this AddAttributesToFindingsRequest.
        :type attributes: List
        """
        if attributes is None:
            raise ValueError("Invalid value for `attributes`, must not be `None`")

        self._attributes = attributes
