# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.report_file_format import ReportFileFormat
from openapi_server.models.report_type import ReportType
from openapi_server import util


class GetAssessmentReportRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assessment_run_arn: str=None, report_file_format: ReportFileFormat=None, report_type: ReportType=None):
        """GetAssessmentReportRequest - a model defined in OpenAPI

        :param assessment_run_arn: The assessment_run_arn of this GetAssessmentReportRequest.
        :param report_file_format: The report_file_format of this GetAssessmentReportRequest.
        :param report_type: The report_type of this GetAssessmentReportRequest.
        """
        self.openapi_types = {
            'assessment_run_arn': str,
            'report_file_format': ReportFileFormat,
            'report_type': ReportType
        }

        self.attribute_map = {
            'assessment_run_arn': 'assessmentRunArn',
            'report_file_format': 'reportFileFormat',
            'report_type': 'reportType'
        }

        self._assessment_run_arn = assessment_run_arn
        self._report_file_format = report_file_format
        self._report_type = report_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAssessmentReportRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetAssessmentReportRequest of this GetAssessmentReportRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assessment_run_arn(self):
        """Gets the assessment_run_arn of this GetAssessmentReportRequest.


        :return: The assessment_run_arn of this GetAssessmentReportRequest.
        :rtype: str
        """
        return self._assessment_run_arn

    @assessment_run_arn.setter
    def assessment_run_arn(self, assessment_run_arn):
        """Sets the assessment_run_arn of this GetAssessmentReportRequest.


        :param assessment_run_arn: The assessment_run_arn of this GetAssessmentReportRequest.
        :type assessment_run_arn: str
        """
        if assessment_run_arn is None:
            raise ValueError("Invalid value for `assessment_run_arn`, must not be `None`")

        self._assessment_run_arn = assessment_run_arn

    @property
    def report_file_format(self):
        """Gets the report_file_format of this GetAssessmentReportRequest.


        :return: The report_file_format of this GetAssessmentReportRequest.
        :rtype: ReportFileFormat
        """
        return self._report_file_format

    @report_file_format.setter
    def report_file_format(self, report_file_format):
        """Sets the report_file_format of this GetAssessmentReportRequest.


        :param report_file_format: The report_file_format of this GetAssessmentReportRequest.
        :type report_file_format: ReportFileFormat
        """
        if report_file_format is None:
            raise ValueError("Invalid value for `report_file_format`, must not be `None`")

        self._report_file_format = report_file_format

    @property
    def report_type(self):
        """Gets the report_type of this GetAssessmentReportRequest.


        :return: The report_type of this GetAssessmentReportRequest.
        :rtype: ReportType
        """
        return self._report_type

    @report_type.setter
    def report_type(self, report_type):
        """Sets the report_type of this GetAssessmentReportRequest.


        :param report_type: The report_type of this GetAssessmentReportRequest.
        :type report_type: ReportType
        """
        if report_type is None:
            raise ValueError("Invalid value for `report_type`, must not be `None`")

        self._report_type = report_type
