# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetTelemetryMetadataResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, telemetry_metadata: List=None):
        """GetTelemetryMetadataResponse - a model defined in OpenAPI

        :param telemetry_metadata: The telemetry_metadata of this GetTelemetryMetadataResponse.
        """
        self.openapi_types = {
            'telemetry_metadata': List
        }

        self.attribute_map = {
            'telemetry_metadata': 'telemetryMetadata'
        }

        self._telemetry_metadata = telemetry_metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetTelemetryMetadataResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetTelemetryMetadataResponse of this GetTelemetryMetadataResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def telemetry_metadata(self):
        """Gets the telemetry_metadata of this GetTelemetryMetadataResponse.


        :return: The telemetry_metadata of this GetTelemetryMetadataResponse.
        :rtype: List
        """
        return self._telemetry_metadata

    @telemetry_metadata.setter
    def telemetry_metadata(self, telemetry_metadata):
        """Sets the telemetry_metadata of this GetTelemetryMetadataResponse.


        :param telemetry_metadata: The telemetry_metadata of this GetTelemetryMetadataResponse.
        :type telemetry_metadata: List
        """
        if telemetry_metadata is None:
            raise ValueError("Invalid value for `telemetry_metadata`, must not be `None`")

        self._telemetry_metadata = telemetry_metadata
