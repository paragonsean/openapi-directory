/**
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AgentHealth from './AgentHealth';
import AgentHealthCode from './AgentHealthCode';

/**
 * The AssessmentRunAgent model module.
 * @module model/AssessmentRunAgent
 * @version 2016-02-16
 */
class AssessmentRunAgent {
    /**
     * Constructs a new <code>AssessmentRunAgent</code>.
     * Contains information about an Amazon Inspector agent. This data type is used as a response element in the &lt;a&gt;ListAssessmentRunAgents&lt;/a&gt; action.
     * @alias module:model/AssessmentRunAgent
     * @param agentId {String} 
     * @param assessmentRunArn {String} 
     * @param agentHealth {module:model/AgentHealth} 
     * @param agentHealthCode {module:model/AgentHealthCode} 
     * @param telemetryMetadata {Array} 
     */
    constructor(agentId, assessmentRunArn, agentHealth, agentHealthCode, telemetryMetadata) { 
        
        AssessmentRunAgent.initialize(this, agentId, assessmentRunArn, agentHealth, agentHealthCode, telemetryMetadata);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, agentId, assessmentRunArn, agentHealth, agentHealthCode, telemetryMetadata) { 
        obj['agentId'] = agentId;
        obj['assessmentRunArn'] = assessmentRunArn;
        obj['agentHealth'] = agentHealth;
        obj['agentHealthCode'] = agentHealthCode;
        obj['telemetryMetadata'] = telemetryMetadata;
    }

    /**
     * Constructs a <code>AssessmentRunAgent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssessmentRunAgent} obj Optional instance to populate.
     * @return {module:model/AssessmentRunAgent} The populated <code>AssessmentRunAgent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssessmentRunAgent();

            if (data.hasOwnProperty('agentId')) {
                obj['agentId'] = ApiClient.convertToType(data['agentId'], 'String');
            }
            if (data.hasOwnProperty('assessmentRunArn')) {
                obj['assessmentRunArn'] = ApiClient.convertToType(data['assessmentRunArn'], 'String');
            }
            if (data.hasOwnProperty('agentHealth')) {
                obj['agentHealth'] = ApiClient.convertToType(data['agentHealth'], AgentHealth);
            }
            if (data.hasOwnProperty('agentHealthCode')) {
                obj['agentHealthCode'] = ApiClient.convertToType(data['agentHealthCode'], AgentHealthCode);
            }
            if (data.hasOwnProperty('agentHealthDetails')) {
                obj['agentHealthDetails'] = ApiClient.convertToType(data['agentHealthDetails'], 'String');
            }
            if (data.hasOwnProperty('autoScalingGroup')) {
                obj['autoScalingGroup'] = ApiClient.convertToType(data['autoScalingGroup'], 'String');
            }
            if (data.hasOwnProperty('telemetryMetadata')) {
                obj['telemetryMetadata'] = ApiClient.convertToType(data['telemetryMetadata'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssessmentRunAgent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssessmentRunAgent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AssessmentRunAgent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `agentId`
        if (data['agentId']) { // data not null
          String.validateJSON(data['agentId']);
        }
        // validate the optional field `assessmentRunArn`
        if (data['assessmentRunArn']) { // data not null
          String.validateJSON(data['assessmentRunArn']);
        }
        // validate the optional field `agentHealth`
        if (data['agentHealth']) { // data not null
          AgentHealth.validateJSON(data['agentHealth']);
        }
        // validate the optional field `agentHealthCode`
        if (data['agentHealthCode']) { // data not null
          AgentHealthCode.validateJSON(data['agentHealthCode']);
        }
        // validate the optional field `agentHealthDetails`
        if (data['agentHealthDetails']) { // data not null
          String.validateJSON(data['agentHealthDetails']);
        }
        // validate the optional field `autoScalingGroup`
        if (data['autoScalingGroup']) { // data not null
          String.validateJSON(data['autoScalingGroup']);
        }
        // validate the optional field `telemetryMetadata`
        if (data['telemetryMetadata']) { // data not null
          Array.validateJSON(data['telemetryMetadata']);
        }

        return true;
    }


}

AssessmentRunAgent.RequiredProperties = ["agentId", "assessmentRunArn", "agentHealth", "agentHealthCode", "telemetryMetadata"];

/**
 * @member {String} agentId
 */
AssessmentRunAgent.prototype['agentId'] = undefined;

/**
 * @member {String} assessmentRunArn
 */
AssessmentRunAgent.prototype['assessmentRunArn'] = undefined;

/**
 * @member {module:model/AgentHealth} agentHealth
 */
AssessmentRunAgent.prototype['agentHealth'] = undefined;

/**
 * @member {module:model/AgentHealthCode} agentHealthCode
 */
AssessmentRunAgent.prototype['agentHealthCode'] = undefined;

/**
 * @member {String} agentHealthDetails
 */
AssessmentRunAgent.prototype['agentHealthDetails'] = undefined;

/**
 * @member {String} autoScalingGroup
 */
AssessmentRunAgent.prototype['autoScalingGroup'] = undefined;

/**
 * @member {Array} telemetryMetadata
 */
AssessmentRunAgent.prototype['telemetryMetadata'] = undefined;






export default AssessmentRunAgent;

