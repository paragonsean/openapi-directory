/**
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssessmentRunState from './AssessmentRunState';

/**
 * The AssessmentRun model module.
 * @module model/AssessmentRun
 * @version 2016-02-16
 */
class AssessmentRun {
    /**
     * Constructs a new <code>AssessmentRun</code>.
     * &lt;p&gt;A snapshot of an Amazon Inspector assessment run that contains the findings of the assessment run .&lt;/p&gt; &lt;p&gt;Used as the response element in the &lt;a&gt;DescribeAssessmentRuns&lt;/a&gt; action.&lt;/p&gt;
     * @alias module:model/AssessmentRun
     * @param arn {String} 
     * @param name {String} 
     * @param assessmentTemplateArn {String} 
     * @param state {module:model/AssessmentRunState} 
     * @param durationInSeconds {Number} 
     * @param rulesPackageArns {Array} 
     * @param userAttributesForFindings {Array} 
     * @param createdAt {Date} 
     * @param stateChangedAt {Date} 
     * @param dataCollected {Boolean} 
     * @param stateChanges {Array} 
     * @param notifications {Array} 
     * @param findingCounts {Object} 
     */
    constructor(arn, name, assessmentTemplateArn, state, durationInSeconds, rulesPackageArns, userAttributesForFindings, createdAt, stateChangedAt, dataCollected, stateChanges, notifications, findingCounts) { 
        
        AssessmentRun.initialize(this, arn, name, assessmentTemplateArn, state, durationInSeconds, rulesPackageArns, userAttributesForFindings, createdAt, stateChangedAt, dataCollected, stateChanges, notifications, findingCounts);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, arn, name, assessmentTemplateArn, state, durationInSeconds, rulesPackageArns, userAttributesForFindings, createdAt, stateChangedAt, dataCollected, stateChanges, notifications, findingCounts) { 
        obj['arn'] = arn;
        obj['name'] = name;
        obj['assessmentTemplateArn'] = assessmentTemplateArn;
        obj['state'] = state;
        obj['durationInSeconds'] = durationInSeconds;
        obj['rulesPackageArns'] = rulesPackageArns;
        obj['userAttributesForFindings'] = userAttributesForFindings;
        obj['createdAt'] = createdAt;
        obj['stateChangedAt'] = stateChangedAt;
        obj['dataCollected'] = dataCollected;
        obj['stateChanges'] = stateChanges;
        obj['notifications'] = notifications;
        obj['findingCounts'] = findingCounts;
    }

    /**
     * Constructs a <code>AssessmentRun</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssessmentRun} obj Optional instance to populate.
     * @return {module:model/AssessmentRun} The populated <code>AssessmentRun</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssessmentRun();

            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('assessmentTemplateArn')) {
                obj['assessmentTemplateArn'] = ApiClient.convertToType(data['assessmentTemplateArn'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], AssessmentRunState);
            }
            if (data.hasOwnProperty('durationInSeconds')) {
                obj['durationInSeconds'] = ApiClient.convertToType(data['durationInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('rulesPackageArns')) {
                obj['rulesPackageArns'] = ApiClient.convertToType(data['rulesPackageArns'], Array);
            }
            if (data.hasOwnProperty('userAttributesForFindings')) {
                obj['userAttributesForFindings'] = ApiClient.convertToType(data['userAttributesForFindings'], Array);
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('startedAt')) {
                obj['startedAt'] = ApiClient.convertToType(data['startedAt'], 'Date');
            }
            if (data.hasOwnProperty('completedAt')) {
                obj['completedAt'] = ApiClient.convertToType(data['completedAt'], 'Date');
            }
            if (data.hasOwnProperty('stateChangedAt')) {
                obj['stateChangedAt'] = ApiClient.convertToType(data['stateChangedAt'], 'Date');
            }
            if (data.hasOwnProperty('dataCollected')) {
                obj['dataCollected'] = ApiClient.convertToType(data['dataCollected'], 'Boolean');
            }
            if (data.hasOwnProperty('stateChanges')) {
                obj['stateChanges'] = ApiClient.convertToType(data['stateChanges'], Array);
            }
            if (data.hasOwnProperty('notifications')) {
                obj['notifications'] = ApiClient.convertToType(data['notifications'], Array);
            }
            if (data.hasOwnProperty('findingCounts')) {
                obj['findingCounts'] = ApiClient.convertToType(data['findingCounts'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssessmentRun</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssessmentRun</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AssessmentRun.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `assessmentTemplateArn`
        if (data['assessmentTemplateArn']) { // data not null
          String.validateJSON(data['assessmentTemplateArn']);
        }
        // validate the optional field `state`
        if (data['state']) { // data not null
          AssessmentRunState.validateJSON(data['state']);
        }
        // validate the optional field `durationInSeconds`
        if (data['durationInSeconds']) { // data not null
          Number.validateJSON(data['durationInSeconds']);
        }
        // validate the optional field `rulesPackageArns`
        if (data['rulesPackageArns']) { // data not null
          Array.validateJSON(data['rulesPackageArns']);
        }
        // validate the optional field `userAttributesForFindings`
        if (data['userAttributesForFindings']) { // data not null
          Array.validateJSON(data['userAttributesForFindings']);
        }
        // validate the optional field `createdAt`
        if (data['createdAt']) { // data not null
          Date.validateJSON(data['createdAt']);
        }
        // validate the optional field `startedAt`
        if (data['startedAt']) { // data not null
          Date.validateJSON(data['startedAt']);
        }
        // validate the optional field `completedAt`
        if (data['completedAt']) { // data not null
          Date.validateJSON(data['completedAt']);
        }
        // validate the optional field `stateChangedAt`
        if (data['stateChangedAt']) { // data not null
          Date.validateJSON(data['stateChangedAt']);
        }
        // validate the optional field `dataCollected`
        if (data['dataCollected']) { // data not null
          Boolean.validateJSON(data['dataCollected']);
        }
        // validate the optional field `stateChanges`
        if (data['stateChanges']) { // data not null
          Array.validateJSON(data['stateChanges']);
        }
        // validate the optional field `notifications`
        if (data['notifications']) { // data not null
          Array.validateJSON(data['notifications']);
        }
        // validate the optional field `findingCounts`
        if (data['findingCounts']) { // data not null
          Object.validateJSON(data['findingCounts']);
        }

        return true;
    }


}

AssessmentRun.RequiredProperties = ["arn", "name", "assessmentTemplateArn", "state", "durationInSeconds", "rulesPackageArns", "userAttributesForFindings", "createdAt", "stateChangedAt", "dataCollected", "stateChanges", "notifications", "findingCounts"];

/**
 * @member {String} arn
 */
AssessmentRun.prototype['arn'] = undefined;

/**
 * @member {String} name
 */
AssessmentRun.prototype['name'] = undefined;

/**
 * @member {String} assessmentTemplateArn
 */
AssessmentRun.prototype['assessmentTemplateArn'] = undefined;

/**
 * @member {module:model/AssessmentRunState} state
 */
AssessmentRun.prototype['state'] = undefined;

/**
 * @member {Number} durationInSeconds
 */
AssessmentRun.prototype['durationInSeconds'] = undefined;

/**
 * @member {Array} rulesPackageArns
 */
AssessmentRun.prototype['rulesPackageArns'] = undefined;

/**
 * @member {Array} userAttributesForFindings
 */
AssessmentRun.prototype['userAttributesForFindings'] = undefined;

/**
 * @member {Date} createdAt
 */
AssessmentRun.prototype['createdAt'] = undefined;

/**
 * @member {Date} startedAt
 */
AssessmentRun.prototype['startedAt'] = undefined;

/**
 * @member {Date} completedAt
 */
AssessmentRun.prototype['completedAt'] = undefined;

/**
 * @member {Date} stateChangedAt
 */
AssessmentRun.prototype['stateChangedAt'] = undefined;

/**
 * @member {Boolean} dataCollected
 */
AssessmentRun.prototype['dataCollected'] = undefined;

/**
 * @member {Array} stateChanges
 */
AssessmentRun.prototype['stateChanges'] = undefined;

/**
 * @member {Array} notifications
 */
AssessmentRun.prototype['notifications'] = undefined;

/**
 * @member {Object} findingCounts
 */
AssessmentRun.prototype['findingCounts'] = undefined;






export default AssessmentRun;

