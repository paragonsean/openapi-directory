/**
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InspectorEvent from './InspectorEvent';

/**
 * The EventSubscription model module.
 * @module model/EventSubscription
 * @version 2016-02-16
 */
class EventSubscription {
    /**
     * Constructs a new <code>EventSubscription</code>.
     * This data type is used in the &lt;a&gt;Subscription&lt;/a&gt; data type.
     * @alias module:model/EventSubscription
     * @param event {module:model/InspectorEvent} 
     * @param subscribedAt {Date} 
     */
    constructor(event, subscribedAt) { 
        
        EventSubscription.initialize(this, event, subscribedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, event, subscribedAt) { 
        obj['event'] = event;
        obj['subscribedAt'] = subscribedAt;
    }

    /**
     * Constructs a <code>EventSubscription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventSubscription} obj Optional instance to populate.
     * @return {module:model/EventSubscription} The populated <code>EventSubscription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventSubscription();

            if (data.hasOwnProperty('event')) {
                obj['event'] = ApiClient.convertToType(data['event'], InspectorEvent);
            }
            if (data.hasOwnProperty('subscribedAt')) {
                obj['subscribedAt'] = ApiClient.convertToType(data['subscribedAt'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventSubscription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventSubscription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EventSubscription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `event`
        if (data['event']) { // data not null
          InspectorEvent.validateJSON(data['event']);
        }
        // validate the optional field `subscribedAt`
        if (data['subscribedAt']) { // data not null
          Date.validateJSON(data['subscribedAt']);
        }

        return true;
    }


}

EventSubscription.RequiredProperties = ["event", "subscribedAt"];

/**
 * @member {module:model/InspectorEvent} event
 */
EventSubscription.prototype['event'] = undefined;

/**
 * @member {Date} subscribedAt
 */
EventSubscription.prototype['subscribedAt'] = undefined;






export default EventSubscription;

