/**
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssetAttributes from './AssetAttributes';

/**
 * The FindingAssetAttributes model module.
 * @module model/FindingAssetAttributes
 * @version 2016-02-16
 */
class FindingAssetAttributes {
    /**
     * Constructs a new <code>FindingAssetAttributes</code>.
     * @alias module:model/FindingAssetAttributes
     * @implements module:model/AssetAttributes
     * @param schemaVersion {Number} 
     */
    constructor(schemaVersion) { 
        AssetAttributes.initialize(this, schemaVersion);
        FindingAssetAttributes.initialize(this, schemaVersion);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, schemaVersion) { 
        obj['schemaVersion'] = schemaVersion;
    }

    /**
     * Constructs a <code>FindingAssetAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FindingAssetAttributes} obj Optional instance to populate.
     * @return {module:model/FindingAssetAttributes} The populated <code>FindingAssetAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FindingAssetAttributes();
            AssetAttributes.constructFromObject(data, obj);

            if (data.hasOwnProperty('schemaVersion')) {
                obj['schemaVersion'] = ApiClient.convertToType(data['schemaVersion'], 'Number');
            }
            if (data.hasOwnProperty('agentId')) {
                obj['agentId'] = ApiClient.convertToType(data['agentId'], 'String');
            }
            if (data.hasOwnProperty('autoScalingGroup')) {
                obj['autoScalingGroup'] = ApiClient.convertToType(data['autoScalingGroup'], 'String');
            }
            if (data.hasOwnProperty('amiId')) {
                obj['amiId'] = ApiClient.convertToType(data['amiId'], 'String');
            }
            if (data.hasOwnProperty('hostname')) {
                obj['hostname'] = ApiClient.convertToType(data['hostname'], 'String');
            }
            if (data.hasOwnProperty('ipv4Addresses')) {
                obj['ipv4Addresses'] = ApiClient.convertToType(data['ipv4Addresses'], Array);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Array);
            }
            if (data.hasOwnProperty('networkInterfaces')) {
                obj['networkInterfaces'] = ApiClient.convertToType(data['networkInterfaces'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FindingAssetAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FindingAssetAttributes</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FindingAssetAttributes.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `schemaVersion`
        if (data['schemaVersion']) { // data not null
          Number.validateJSON(data['schemaVersion']);
        }
        // validate the optional field `agentId`
        if (data['agentId']) { // data not null
          String.validateJSON(data['agentId']);
        }
        // validate the optional field `autoScalingGroup`
        if (data['autoScalingGroup']) { // data not null
          String.validateJSON(data['autoScalingGroup']);
        }
        // validate the optional field `amiId`
        if (data['amiId']) { // data not null
          String.validateJSON(data['amiId']);
        }
        // validate the optional field `hostname`
        if (data['hostname']) { // data not null
          String.validateJSON(data['hostname']);
        }
        // validate the optional field `ipv4Addresses`
        if (data['ipv4Addresses']) { // data not null
          Array.validateJSON(data['ipv4Addresses']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Array.validateJSON(data['tags']);
        }
        // validate the optional field `networkInterfaces`
        if (data['networkInterfaces']) { // data not null
          Array.validateJSON(data['networkInterfaces']);
        }

        return true;
    }


}

FindingAssetAttributes.RequiredProperties = ["schemaVersion"];

/**
 * @member {Number} schemaVersion
 */
FindingAssetAttributes.prototype['schemaVersion'] = undefined;

/**
 * @member {String} agentId
 */
FindingAssetAttributes.prototype['agentId'] = undefined;

/**
 * @member {String} autoScalingGroup
 */
FindingAssetAttributes.prototype['autoScalingGroup'] = undefined;

/**
 * @member {String} amiId
 */
FindingAssetAttributes.prototype['amiId'] = undefined;

/**
 * @member {String} hostname
 */
FindingAssetAttributes.prototype['hostname'] = undefined;

/**
 * @member {Array} ipv4Addresses
 */
FindingAssetAttributes.prototype['ipv4Addresses'] = undefined;

/**
 * @member {Array} tags
 */
FindingAssetAttributes.prototype['tags'] = undefined;

/**
 * @member {Array} networkInterfaces
 */
FindingAssetAttributes.prototype['networkInterfaces'] = undefined;


// Implement AssetAttributes interface:
/**
 * @member {Number} schemaVersion
 */
AssetAttributes.prototype['schemaVersion'] = undefined;
/**
 * @member {String} agentId
 */
AssetAttributes.prototype['agentId'] = undefined;
/**
 * @member {String} autoScalingGroup
 */
AssetAttributes.prototype['autoScalingGroup'] = undefined;
/**
 * @member {String} amiId
 */
AssetAttributes.prototype['amiId'] = undefined;
/**
 * @member {String} hostname
 */
AssetAttributes.prototype['hostname'] = undefined;
/**
 * @member {Array} ipv4Addresses
 */
AssetAttributes.prototype['ipv4Addresses'] = undefined;
/**
 * @member {Array} tags
 */
AssetAttributes.prototype['tags'] = undefined;
/**
 * @member {Array} networkInterfaces
 */
AssetAttributes.prototype['networkInterfaces'] = undefined;




export default FindingAssetAttributes;

