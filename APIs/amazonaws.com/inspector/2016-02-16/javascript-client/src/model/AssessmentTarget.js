/**
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AssessmentTarget model module.
 * @module model/AssessmentTarget
 * @version 2016-02-16
 */
class AssessmentTarget {
    /**
     * Constructs a new <code>AssessmentTarget</code>.
     * Contains information about an Amazon Inspector application. This data type is used as the response element in the &lt;a&gt;DescribeAssessmentTargets&lt;/a&gt; action.
     * @alias module:model/AssessmentTarget
     * @param arn {String} 
     * @param name {String} 
     * @param createdAt {Date} 
     * @param updatedAt {Date} 
     */
    constructor(arn, name, createdAt, updatedAt) { 
        
        AssessmentTarget.initialize(this, arn, name, createdAt, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, arn, name, createdAt, updatedAt) { 
        obj['arn'] = arn;
        obj['name'] = name;
        obj['createdAt'] = createdAt;
        obj['updatedAt'] = updatedAt;
    }

    /**
     * Constructs a <code>AssessmentTarget</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssessmentTarget} obj Optional instance to populate.
     * @return {module:model/AssessmentTarget} The populated <code>AssessmentTarget</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssessmentTarget();

            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('resourceGroupArn')) {
                obj['resourceGroupArn'] = ApiClient.convertToType(data['resourceGroupArn'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssessmentTarget</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssessmentTarget</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AssessmentTarget.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `resourceGroupArn`
        if (data['resourceGroupArn']) { // data not null
          String.validateJSON(data['resourceGroupArn']);
        }
        // validate the optional field `createdAt`
        if (data['createdAt']) { // data not null
          Date.validateJSON(data['createdAt']);
        }
        // validate the optional field `updatedAt`
        if (data['updatedAt']) { // data not null
          Date.validateJSON(data['updatedAt']);
        }

        return true;
    }


}

AssessmentTarget.RequiredProperties = ["arn", "name", "createdAt", "updatedAt"];

/**
 * @member {String} arn
 */
AssessmentTarget.prototype['arn'] = undefined;

/**
 * @member {String} name
 */
AssessmentTarget.prototype['name'] = undefined;

/**
 * @member {String} resourceGroupArn
 */
AssessmentTarget.prototype['resourceGroupArn'] = undefined;

/**
 * @member {Date} createdAt
 */
AssessmentTarget.prototype['createdAt'] = undefined;

/**
 * @member {Date} updatedAt
 */
AssessmentTarget.prototype['updatedAt'] = undefined;






export default AssessmentTarget;

