/**
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Exclusion model module.
 * @module model/Exclusion
 * @version 2016-02-16
 */
class Exclusion {
    /**
     * Constructs a new <code>Exclusion</code>.
     * Contains information about what was excluded from an assessment run.
     * @alias module:model/Exclusion
     * @param arn {String} 
     * @param title {String} 
     * @param description {String} 
     * @param recommendation {String} 
     * @param scopes {Array} 
     */
    constructor(arn, title, description, recommendation, scopes) { 
        
        Exclusion.initialize(this, arn, title, description, recommendation, scopes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, arn, title, description, recommendation, scopes) { 
        obj['arn'] = arn;
        obj['title'] = title;
        obj['description'] = description;
        obj['recommendation'] = recommendation;
        obj['scopes'] = scopes;
    }

    /**
     * Constructs a <code>Exclusion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Exclusion} obj Optional instance to populate.
     * @return {module:model/Exclusion} The populated <code>Exclusion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Exclusion();

            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('recommendation')) {
                obj['recommendation'] = ApiClient.convertToType(data['recommendation'], 'String');
            }
            if (data.hasOwnProperty('scopes')) {
                obj['scopes'] = ApiClient.convertToType(data['scopes'], Array);
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Exclusion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Exclusion</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Exclusion.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `title`
        if (data['title']) { // data not null
          String.validateJSON(data['title']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `recommendation`
        if (data['recommendation']) { // data not null
          String.validateJSON(data['recommendation']);
        }
        // validate the optional field `scopes`
        if (data['scopes']) { // data not null
          Array.validateJSON(data['scopes']);
        }
        // validate the optional field `attributes`
        if (data['attributes']) { // data not null
          Array.validateJSON(data['attributes']);
        }

        return true;
    }


}

Exclusion.RequiredProperties = ["arn", "title", "description", "recommendation", "scopes"];

/**
 * @member {String} arn
 */
Exclusion.prototype['arn'] = undefined;

/**
 * @member {String} title
 */
Exclusion.prototype['title'] = undefined;

/**
 * @member {String} description
 */
Exclusion.prototype['description'] = undefined;

/**
 * @member {String} recommendation
 */
Exclusion.prototype['recommendation'] = undefined;

/**
 * @member {Array} scopes
 */
Exclusion.prototype['scopes'] = undefined;

/**
 * @member {Array} attributes
 */
Exclusion.prototype['attributes'] = undefined;






export default Exclusion;

