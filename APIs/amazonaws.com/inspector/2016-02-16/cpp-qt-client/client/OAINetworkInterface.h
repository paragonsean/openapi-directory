/**
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkInterface.h
 *
 * Contains information about the network interfaces interacting with an EC2 instance. This data type is used as one of the elements of the &lt;a&gt;AssetAttributes&lt;/a&gt; data type.
 */

#ifndef OAINetworkInterface_H
#define OAINetworkInterface_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINetworkInterface : public OAIObject {
public:
    OAINetworkInterface();
    OAINetworkInterface(QString json);
    ~OAINetworkInterface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNetworkInterfaceId() const;
    void setNetworkInterfaceId(const QString &network_interface_id);
    bool is_network_interface_id_Set() const;
    bool is_network_interface_id_Valid() const;

    QString getSubnetId() const;
    void setSubnetId(const QString &subnet_id);
    bool is_subnet_id_Set() const;
    bool is_subnet_id_Valid() const;

    QString getVpcId() const;
    void setVpcId(const QString &vpc_id);
    bool is_vpc_id_Set() const;
    bool is_vpc_id_Valid() const;

    QString getPrivateDnsName() const;
    void setPrivateDnsName(const QString &private_dns_name);
    bool is_private_dns_name_Set() const;
    bool is_private_dns_name_Valid() const;

    QString getPrivateIpAddress() const;
    void setPrivateIpAddress(const QString &private_ip_address);
    bool is_private_ip_address_Set() const;
    bool is_private_ip_address_Valid() const;

    QList getPrivateIpAddresses() const;
    void setPrivateIpAddresses(const QList &private_ip_addresses);
    bool is_private_ip_addresses_Set() const;
    bool is_private_ip_addresses_Valid() const;

    QString getPublicDnsName() const;
    void setPublicDnsName(const QString &public_dns_name);
    bool is_public_dns_name_Set() const;
    bool is_public_dns_name_Valid() const;

    QString getPublicIp() const;
    void setPublicIp(const QString &public_ip);
    bool is_public_ip_Set() const;
    bool is_public_ip_Valid() const;

    QList getIpv6Addresses() const;
    void setIpv6Addresses(const QList &ipv6_addresses);
    bool is_ipv6_addresses_Set() const;
    bool is_ipv6_addresses_Valid() const;

    QList getSecurityGroups() const;
    void setSecurityGroups(const QList &security_groups);
    bool is_security_groups_Set() const;
    bool is_security_groups_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_network_interface_id;
    bool m_network_interface_id_isSet;
    bool m_network_interface_id_isValid;

    QString m_subnet_id;
    bool m_subnet_id_isSet;
    bool m_subnet_id_isValid;

    QString m_vpc_id;
    bool m_vpc_id_isSet;
    bool m_vpc_id_isValid;

    QString m_private_dns_name;
    bool m_private_dns_name_isSet;
    bool m_private_dns_name_isValid;

    QString m_private_ip_address;
    bool m_private_ip_address_isSet;
    bool m_private_ip_address_isValid;

    QList m_private_ip_addresses;
    bool m_private_ip_addresses_isSet;
    bool m_private_ip_addresses_isValid;

    QString m_public_dns_name;
    bool m_public_dns_name_isSet;
    bool m_public_dns_name_isValid;

    QString m_public_ip;
    bool m_public_ip_isSet;
    bool m_public_ip_isValid;

    QList m_ipv6_addresses;
    bool m_ipv6_addresses_isSet;
    bool m_ipv6_addresses_isValid;

    QList m_security_groups;
    bool m_security_groups_isSet;
    bool m_security_groups_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkInterface)

#endif // OAINetworkInterface_H
