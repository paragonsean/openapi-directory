/**
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimestampRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimestampRange::OAITimestampRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimestampRange::OAITimestampRange() {
    this->initializeModel();
}

OAITimestampRange::~OAITimestampRange() {}

void OAITimestampRange::initializeModel() {

    m_begin_date_isSet = false;
    m_begin_date_isValid = false;

    m_end_date_isSet = false;
    m_end_date_isValid = false;
}

void OAITimestampRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimestampRange::fromJsonObject(QJsonObject json) {

    m_begin_date_isValid = ::OpenAPI::fromJsonValue(m_begin_date, json[QString("beginDate")]);
    m_begin_date_isSet = !json[QString("beginDate")].isNull() && m_begin_date_isValid;

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("endDate")]);
    m_end_date_isSet = !json[QString("endDate")].isNull() && m_end_date_isValid;
}

QString OAITimestampRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimestampRange::asJsonObject() const {
    QJsonObject obj;
    if (m_begin_date_isSet) {
        obj.insert(QString("beginDate"), ::OpenAPI::toJsonValue(m_begin_date));
    }
    if (m_end_date_isSet) {
        obj.insert(QString("endDate"), ::OpenAPI::toJsonValue(m_end_date));
    }
    return obj;
}

QDateTime OAITimestampRange::getBeginDate() const {
    return m_begin_date;
}
void OAITimestampRange::setBeginDate(const QDateTime &begin_date) {
    m_begin_date = begin_date;
    m_begin_date_isSet = true;
}

bool OAITimestampRange::is_begin_date_Set() const{
    return m_begin_date_isSet;
}

bool OAITimestampRange::is_begin_date_Valid() const{
    return m_begin_date_isValid;
}

QDateTime OAITimestampRange::getEndDate() const {
    return m_end_date;
}
void OAITimestampRange::setEndDate(const QDateTime &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAITimestampRange::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAITimestampRange::is_end_date_Valid() const{
    return m_end_date_isValid;
}

bool OAITimestampRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_begin_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimestampRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
