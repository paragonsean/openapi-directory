/**
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITelemetryMetadata.h
 *
 * The metadata about the Amazon Inspector application data metrics collected by the agent. This data type is used as the response element in the &lt;a&gt;GetTelemetryMetadata&lt;/a&gt; action.
 */

#ifndef OAITelemetryMetadata_H
#define OAITelemetryMetadata_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITelemetryMetadata : public OAIObject {
public:
    OAITelemetryMetadata();
    OAITelemetryMetadata(QString json);
    ~OAITelemetryMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMessageType() const;
    void setMessageType(const QString &message_type);
    bool is_message_type_Set() const;
    bool is_message_type_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    qint32 getDataSize() const;
    void setDataSize(const qint32 &data_size);
    bool is_data_size_Set() const;
    bool is_data_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_message_type;
    bool m_message_type_isSet;
    bool m_message_type_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    qint32 m_data_size;
    bool m_data_size_isSet;
    bool m_data_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITelemetryMetadata)

#endif // OAITelemetryMetadata_H
