/**
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetType::OAIAssetType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetType::OAIAssetType() {
    this->initializeModel();
}

OAIAssetType::~OAIAssetType() {}

void OAIAssetType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAssetType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAssetType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ec2-instance", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetType::EC2_INSTANCE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAssetType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAssetType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAssetType::EC2_INSTANCE:
            val = "ec2-instance";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAssetType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAssetType::eOAIAssetType OAIAssetType::getValue() const {
    return m_value;
}

void OAIAssetType::setValue(const OAIAssetType::eOAIAssetType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAssetType::isSet() const {
    
    return m_value_isSet;
}

bool OAIAssetType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
