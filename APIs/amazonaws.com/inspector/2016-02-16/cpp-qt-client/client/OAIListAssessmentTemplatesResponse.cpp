/**
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAssessmentTemplatesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAssessmentTemplatesResponse::OAIListAssessmentTemplatesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAssessmentTemplatesResponse::OAIListAssessmentTemplatesResponse() {
    this->initializeModel();
}

OAIListAssessmentTemplatesResponse::~OAIListAssessmentTemplatesResponse() {}

void OAIListAssessmentTemplatesResponse::initializeModel() {

    m_assessment_template_arns_isSet = false;
    m_assessment_template_arns_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListAssessmentTemplatesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAssessmentTemplatesResponse::fromJsonObject(QJsonObject json) {

    m_assessment_template_arns_isValid = ::OpenAPI::fromJsonValue(m_assessment_template_arns, json[QString("assessmentTemplateArns")]);
    m_assessment_template_arns_isSet = !json[QString("assessmentTemplateArns")].isNull() && m_assessment_template_arns_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListAssessmentTemplatesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAssessmentTemplatesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_assessment_template_arns.isSet()) {
        obj.insert(QString("assessmentTemplateArns"), ::OpenAPI::toJsonValue(m_assessment_template_arns));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListAssessmentTemplatesResponse::getAssessmentTemplateArns() const {
    return m_assessment_template_arns;
}
void OAIListAssessmentTemplatesResponse::setAssessmentTemplateArns(const QList &assessment_template_arns) {
    m_assessment_template_arns = assessment_template_arns;
    m_assessment_template_arns_isSet = true;
}

bool OAIListAssessmentTemplatesResponse::is_assessment_template_arns_Set() const{
    return m_assessment_template_arns_isSet;
}

bool OAIListAssessmentTemplatesResponse::is_assessment_template_arns_Valid() const{
    return m_assessment_template_arns_isValid;
}

QString OAIListAssessmentTemplatesResponse::getNextToken() const {
    return m_next_token;
}
void OAIListAssessmentTemplatesResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListAssessmentTemplatesResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListAssessmentTemplatesResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListAssessmentTemplatesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assessment_template_arns.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAssessmentTemplatesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_assessment_template_arns_isValid && true;
}

} // namespace OpenAPI
