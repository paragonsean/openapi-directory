/**
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAgentPreview.h
 *
 * Used as a response element in the &lt;a&gt;PreviewAgents&lt;/a&gt; action.
 */

#ifndef OAIAgentPreview_H
#define OAIAgentPreview_H

#include <QJsonObject>

#include "OAIAgentHealth.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAgentPreview : public OAIObject {
public:
    OAIAgentPreview();
    OAIAgentPreview(QString json);
    ~OAIAgentPreview() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHostname() const;
    void setHostname(const QString &hostname);
    bool is_hostname_Set() const;
    bool is_hostname_Valid() const;

    QString getAgentId() const;
    void setAgentId(const QString &agent_id);
    bool is_agent_id_Set() const;
    bool is_agent_id_Valid() const;

    QString getAutoScalingGroup() const;
    void setAutoScalingGroup(const QString &auto_scaling_group);
    bool is_auto_scaling_group_Set() const;
    bool is_auto_scaling_group_Valid() const;

    OAIAgentHealth getAgentHealth() const;
    void setAgentHealth(const OAIAgentHealth &agent_health);
    bool is_agent_health_Set() const;
    bool is_agent_health_Valid() const;

    QString getAgentVersion() const;
    void setAgentVersion(const QString &agent_version);
    bool is_agent_version_Set() const;
    bool is_agent_version_Valid() const;

    QString getOperatingSystem() const;
    void setOperatingSystem(const QString &operating_system);
    bool is_operating_system_Set() const;
    bool is_operating_system_Valid() const;

    QString getKernelVersion() const;
    void setKernelVersion(const QString &kernel_version);
    bool is_kernel_version_Set() const;
    bool is_kernel_version_Valid() const;

    QString getIpv4Address() const;
    void setIpv4Address(const QString &ipv4_address);
    bool is_ipv4_address_Set() const;
    bool is_ipv4_address_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_hostname;
    bool m_hostname_isSet;
    bool m_hostname_isValid;

    QString m_agent_id;
    bool m_agent_id_isSet;
    bool m_agent_id_isValid;

    QString m_auto_scaling_group;
    bool m_auto_scaling_group_isSet;
    bool m_auto_scaling_group_isValid;

    OAIAgentHealth m_agent_health;
    bool m_agent_health_isSet;
    bool m_agent_health_isValid;

    QString m_agent_version;
    bool m_agent_version_isSet;
    bool m_agent_version_isValid;

    QString m_operating_system;
    bool m_operating_system_isSet;
    bool m_operating_system_isValid;

    QString m_kernel_version;
    bool m_kernel_version_isSet;
    bool m_kernel_version_isValid;

    QString m_ipv4_address;
    bool m_ipv4_address_isSet;
    bool m_ipv4_address_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAgentPreview)

#endif // OAIAgentPreview_H
