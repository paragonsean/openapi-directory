/**
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAgentHealthCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAgentHealthCode::OAIAgentHealthCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAgentHealthCode::OAIAgentHealthCode() {
    this->initializeModel();
}

OAIAgentHealthCode::~OAIAgentHealthCode() {}

void OAIAgentHealthCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAgentHealthCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAgentHealthCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("IDLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAgentHealthCode::IDLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RUNNING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAgentHealthCode::RUNNING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SHUTDOWN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAgentHealthCode::SHUTDOWN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNHEALTHY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAgentHealthCode::UNHEALTHY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("THROTTLED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAgentHealthCode::THROTTLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNKNOWN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAgentHealthCode::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAgentHealthCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAgentHealthCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAgentHealthCode::IDLE:
            val = "IDLE";
            break;
        case eOAIAgentHealthCode::RUNNING:
            val = "RUNNING";
            break;
        case eOAIAgentHealthCode::SHUTDOWN:
            val = "SHUTDOWN";
            break;
        case eOAIAgentHealthCode::UNHEALTHY:
            val = "UNHEALTHY";
            break;
        case eOAIAgentHealthCode::THROTTLED:
            val = "THROTTLED";
            break;
        case eOAIAgentHealthCode::UNKNOWN:
            val = "UNKNOWN";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAgentHealthCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAgentHealthCode::eOAIAgentHealthCode OAIAgentHealthCode::getValue() const {
    return m_value;
}

void OAIAgentHealthCode::setValue(const OAIAgentHealthCode::eOAIAgentHealthCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAgentHealthCode::isSet() const {
    
    return m_value_isSet;
}

bool OAIAgentHealthCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
