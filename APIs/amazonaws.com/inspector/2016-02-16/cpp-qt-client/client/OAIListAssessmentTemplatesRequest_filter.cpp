/**
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAssessmentTemplatesRequest_filter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAssessmentTemplatesRequest_filter::OAIListAssessmentTemplatesRequest_filter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAssessmentTemplatesRequest_filter::OAIListAssessmentTemplatesRequest_filter() {
    this->initializeModel();
}

OAIListAssessmentTemplatesRequest_filter::~OAIListAssessmentTemplatesRequest_filter() {}

void OAIListAssessmentTemplatesRequest_filter::initializeModel() {

    m_name_pattern_isSet = false;
    m_name_pattern_isValid = false;

    m_duration_range_isSet = false;
    m_duration_range_isValid = false;

    m_rules_package_arns_isSet = false;
    m_rules_package_arns_isValid = false;
}

void OAIListAssessmentTemplatesRequest_filter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAssessmentTemplatesRequest_filter::fromJsonObject(QJsonObject json) {

    m_name_pattern_isValid = ::OpenAPI::fromJsonValue(m_name_pattern, json[QString("namePattern")]);
    m_name_pattern_isSet = !json[QString("namePattern")].isNull() && m_name_pattern_isValid;

    m_duration_range_isValid = ::OpenAPI::fromJsonValue(m_duration_range, json[QString("durationRange")]);
    m_duration_range_isSet = !json[QString("durationRange")].isNull() && m_duration_range_isValid;

    m_rules_package_arns_isValid = ::OpenAPI::fromJsonValue(m_rules_package_arns, json[QString("rulesPackageArns")]);
    m_rules_package_arns_isSet = !json[QString("rulesPackageArns")].isNull() && m_rules_package_arns_isValid;
}

QString OAIListAssessmentTemplatesRequest_filter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAssessmentTemplatesRequest_filter::asJsonObject() const {
    QJsonObject obj;
    if (m_name_pattern_isSet) {
        obj.insert(QString("namePattern"), ::OpenAPI::toJsonValue(m_name_pattern));
    }
    if (m_duration_range.isSet()) {
        obj.insert(QString("durationRange"), ::OpenAPI::toJsonValue(m_duration_range));
    }
    if (m_rules_package_arns.isSet()) {
        obj.insert(QString("rulesPackageArns"), ::OpenAPI::toJsonValue(m_rules_package_arns));
    }
    return obj;
}

QString OAIListAssessmentTemplatesRequest_filter::getNamePattern() const {
    return m_name_pattern;
}
void OAIListAssessmentTemplatesRequest_filter::setNamePattern(const QString &name_pattern) {
    m_name_pattern = name_pattern;
    m_name_pattern_isSet = true;
}

bool OAIListAssessmentTemplatesRequest_filter::is_name_pattern_Set() const{
    return m_name_pattern_isSet;
}

bool OAIListAssessmentTemplatesRequest_filter::is_name_pattern_Valid() const{
    return m_name_pattern_isValid;
}

OAIAssessmentTemplateFilter_durationRange OAIListAssessmentTemplatesRequest_filter::getDurationRange() const {
    return m_duration_range;
}
void OAIListAssessmentTemplatesRequest_filter::setDurationRange(const OAIAssessmentTemplateFilter_durationRange &duration_range) {
    m_duration_range = duration_range;
    m_duration_range_isSet = true;
}

bool OAIListAssessmentTemplatesRequest_filter::is_duration_range_Set() const{
    return m_duration_range_isSet;
}

bool OAIListAssessmentTemplatesRequest_filter::is_duration_range_Valid() const{
    return m_duration_range_isValid;
}

QList OAIListAssessmentTemplatesRequest_filter::getRulesPackageArns() const {
    return m_rules_package_arns;
}
void OAIListAssessmentTemplatesRequest_filter::setRulesPackageArns(const QList &rules_package_arns) {
    m_rules_package_arns = rules_package_arns;
    m_rules_package_arns_isSet = true;
}

bool OAIListAssessmentTemplatesRequest_filter::is_rules_package_arns_Set() const{
    return m_rules_package_arns_isSet;
}

bool OAIListAssessmentTemplatesRequest_filter::is_rules_package_arns_Valid() const{
    return m_rules_package_arns_isValid;
}

bool OAIListAssessmentTemplatesRequest_filter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_pattern_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_range.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rules_package_arns.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAssessmentTemplatesRequest_filter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
