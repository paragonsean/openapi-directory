/**
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateExclusionsPreviewRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateExclusionsPreviewRequest::OAICreateExclusionsPreviewRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateExclusionsPreviewRequest::OAICreateExclusionsPreviewRequest() {
    this->initializeModel();
}

OAICreateExclusionsPreviewRequest::~OAICreateExclusionsPreviewRequest() {}

void OAICreateExclusionsPreviewRequest::initializeModel() {

    m_assessment_template_arn_isSet = false;
    m_assessment_template_arn_isValid = false;
}

void OAICreateExclusionsPreviewRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateExclusionsPreviewRequest::fromJsonObject(QJsonObject json) {

    m_assessment_template_arn_isValid = ::OpenAPI::fromJsonValue(m_assessment_template_arn, json[QString("assessmentTemplateArn")]);
    m_assessment_template_arn_isSet = !json[QString("assessmentTemplateArn")].isNull() && m_assessment_template_arn_isValid;
}

QString OAICreateExclusionsPreviewRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateExclusionsPreviewRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_assessment_template_arn_isSet) {
        obj.insert(QString("assessmentTemplateArn"), ::OpenAPI::toJsonValue(m_assessment_template_arn));
    }
    return obj;
}

QString OAICreateExclusionsPreviewRequest::getAssessmentTemplateArn() const {
    return m_assessment_template_arn;
}
void OAICreateExclusionsPreviewRequest::setAssessmentTemplateArn(const QString &assessment_template_arn) {
    m_assessment_template_arn = assessment_template_arn;
    m_assessment_template_arn_isSet = true;
}

bool OAICreateExclusionsPreviewRequest::is_assessment_template_arn_Set() const{
    return m_assessment_template_arn_isSet;
}

bool OAICreateExclusionsPreviewRequest::is_assessment_template_arn_Valid() const{
    return m_assessment_template_arn_isValid;
}

bool OAICreateExclusionsPreviewRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assessment_template_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateExclusionsPreviewRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_assessment_template_arn_isValid && true;
}

} // namespace OpenAPI
