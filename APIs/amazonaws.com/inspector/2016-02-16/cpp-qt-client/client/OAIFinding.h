/**
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFinding.h
 *
 * Contains information about an Amazon Inspector finding. This data type is used as the response element in the &lt;a&gt;DescribeFindings&lt;/a&gt; action.
 */

#ifndef OAIFinding_H
#define OAIFinding_H

#include <QJsonObject>

#include "OAIAssetType.h"
#include "OAIFinding_assetAttributes.h"
#include "OAIFinding_serviceAttributes.h"
#include "OAISeverity.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFinding_serviceAttributes;
class OAIFinding_assetAttributes;

class OAIFinding : public OAIObject {
public:
    OAIFinding();
    OAIFinding(QString json);
    ~OAIFinding() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    qint32 getSchemaVersion() const;
    void setSchemaVersion(const qint32 &schema_version);
    bool is_schema_version_Set() const;
    bool is_schema_version_Valid() const;

    QString getService() const;
    void setService(const QString &service);
    bool is_service_Set() const;
    bool is_service_Valid() const;

    OAIFinding_serviceAttributes getServiceAttributes() const;
    void setServiceAttributes(const OAIFinding_serviceAttributes &service_attributes);
    bool is_service_attributes_Set() const;
    bool is_service_attributes_Valid() const;

    OAIAssetType getAssetType() const;
    void setAssetType(const OAIAssetType &asset_type);
    bool is_asset_type_Set() const;
    bool is_asset_type_Valid() const;

    OAIFinding_assetAttributes getAssetAttributes() const;
    void setAssetAttributes(const OAIFinding_assetAttributes &asset_attributes);
    bool is_asset_attributes_Set() const;
    bool is_asset_attributes_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getRecommendation() const;
    void setRecommendation(const QString &recommendation);
    bool is_recommendation_Set() const;
    bool is_recommendation_Valid() const;

    OAISeverity getSeverity() const;
    void setSeverity(const OAISeverity &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    double getNumericSeverity() const;
    void setNumericSeverity(const double &numeric_severity);
    bool is_numeric_severity_Set() const;
    bool is_numeric_severity_Valid() const;

    qint32 getConfidence() const;
    void setConfidence(const qint32 &confidence);
    bool is_confidence_Set() const;
    bool is_confidence_Valid() const;

    bool getIndicatorOfCompromise() const;
    void setIndicatorOfCompromise(const bool &indicator_of_compromise);
    bool is_indicator_of_compromise_Set() const;
    bool is_indicator_of_compromise_Valid() const;

    QList getAttributes() const;
    void setAttributes(const QList &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QList getUserAttributes() const;
    void setUserAttributes(const QList &user_attributes);
    bool is_user_attributes_Set() const;
    bool is_user_attributes_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    qint32 m_schema_version;
    bool m_schema_version_isSet;
    bool m_schema_version_isValid;

    QString m_service;
    bool m_service_isSet;
    bool m_service_isValid;

    OAIFinding_serviceAttributes m_service_attributes;
    bool m_service_attributes_isSet;
    bool m_service_attributes_isValid;

    OAIAssetType m_asset_type;
    bool m_asset_type_isSet;
    bool m_asset_type_isValid;

    OAIFinding_assetAttributes m_asset_attributes;
    bool m_asset_attributes_isSet;
    bool m_asset_attributes_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_recommendation;
    bool m_recommendation_isSet;
    bool m_recommendation_isValid;

    OAISeverity m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    double m_numeric_severity;
    bool m_numeric_severity_isSet;
    bool m_numeric_severity_isValid;

    qint32 m_confidence;
    bool m_confidence_isSet;
    bool m_confidence_isValid;

    bool m_indicator_of_compromise;
    bool m_indicator_of_compromise_isSet;
    bool m_indicator_of_compromise_isValid;

    QList m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QList m_user_attributes;
    bool m_user_attributes_isSet;
    bool m_user_attributes_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFinding)

#endif // OAIFinding_H
