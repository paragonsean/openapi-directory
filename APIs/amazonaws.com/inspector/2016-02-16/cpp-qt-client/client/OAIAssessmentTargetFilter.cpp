/**
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssessmentTargetFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssessmentTargetFilter::OAIAssessmentTargetFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssessmentTargetFilter::OAIAssessmentTargetFilter() {
    this->initializeModel();
}

OAIAssessmentTargetFilter::~OAIAssessmentTargetFilter() {}

void OAIAssessmentTargetFilter::initializeModel() {

    m_assessment_target_name_pattern_isSet = false;
    m_assessment_target_name_pattern_isValid = false;
}

void OAIAssessmentTargetFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssessmentTargetFilter::fromJsonObject(QJsonObject json) {

    m_assessment_target_name_pattern_isValid = ::OpenAPI::fromJsonValue(m_assessment_target_name_pattern, json[QString("assessmentTargetNamePattern")]);
    m_assessment_target_name_pattern_isSet = !json[QString("assessmentTargetNamePattern")].isNull() && m_assessment_target_name_pattern_isValid;
}

QString OAIAssessmentTargetFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssessmentTargetFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_assessment_target_name_pattern_isSet) {
        obj.insert(QString("assessmentTargetNamePattern"), ::OpenAPI::toJsonValue(m_assessment_target_name_pattern));
    }
    return obj;
}

QString OAIAssessmentTargetFilter::getAssessmentTargetNamePattern() const {
    return m_assessment_target_name_pattern;
}
void OAIAssessmentTargetFilter::setAssessmentTargetNamePattern(const QString &assessment_target_name_pattern) {
    m_assessment_target_name_pattern = assessment_target_name_pattern;
    m_assessment_target_name_pattern_isSet = true;
}

bool OAIAssessmentTargetFilter::is_assessment_target_name_pattern_Set() const{
    return m_assessment_target_name_pattern_isSet;
}

bool OAIAssessmentTargetFilter::is_assessment_target_name_pattern_Valid() const{
    return m_assessment_target_name_pattern_isValid;
}

bool OAIAssessmentTargetFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assessment_target_name_pattern_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssessmentTargetFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
