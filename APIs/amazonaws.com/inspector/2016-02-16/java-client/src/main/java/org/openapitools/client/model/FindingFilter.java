/*
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.FindingFilterCreationTimeRange;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This data type is used as a request parameter in the &lt;a&gt;ListFindings&lt;/a&gt; action.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:08.917957-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FindingFilter {
  public static final String SERIALIZED_NAME_AGENT_IDS = "agentIds";
  @SerializedName(SERIALIZED_NAME_AGENT_IDS)
  private List agentIds;

  public static final String SERIALIZED_NAME_AUTO_SCALING_GROUPS = "autoScalingGroups";
  @SerializedName(SERIALIZED_NAME_AUTO_SCALING_GROUPS)
  private List autoScalingGroups;

  public static final String SERIALIZED_NAME_RULE_NAMES = "ruleNames";
  @SerializedName(SERIALIZED_NAME_RULE_NAMES)
  private List ruleNames;

  public static final String SERIALIZED_NAME_SEVERITIES = "severities";
  @SerializedName(SERIALIZED_NAME_SEVERITIES)
  private List severities;

  public static final String SERIALIZED_NAME_RULES_PACKAGE_ARNS = "rulesPackageArns";
  @SerializedName(SERIALIZED_NAME_RULES_PACKAGE_ARNS)
  private List rulesPackageArns;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List attributes;

  public static final String SERIALIZED_NAME_USER_ATTRIBUTES = "userAttributes";
  @SerializedName(SERIALIZED_NAME_USER_ATTRIBUTES)
  private List userAttributes;

  public static final String SERIALIZED_NAME_CREATION_TIME_RANGE = "creationTimeRange";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME_RANGE)
  private FindingFilterCreationTimeRange creationTimeRange;

  public FindingFilter() {
  }

  public FindingFilter agentIds(List agentIds) {
    this.agentIds = agentIds;
    return this;
  }

  /**
   * Get agentIds
   * @return agentIds
   */
  @javax.annotation.Nullable
  public List getAgentIds() {
    return agentIds;
  }

  public void setAgentIds(List agentIds) {
    this.agentIds = agentIds;
  }


  public FindingFilter autoScalingGroups(List autoScalingGroups) {
    this.autoScalingGroups = autoScalingGroups;
    return this;
  }

  /**
   * Get autoScalingGroups
   * @return autoScalingGroups
   */
  @javax.annotation.Nullable
  public List getAutoScalingGroups() {
    return autoScalingGroups;
  }

  public void setAutoScalingGroups(List autoScalingGroups) {
    this.autoScalingGroups = autoScalingGroups;
  }


  public FindingFilter ruleNames(List ruleNames) {
    this.ruleNames = ruleNames;
    return this;
  }

  /**
   * Get ruleNames
   * @return ruleNames
   */
  @javax.annotation.Nullable
  public List getRuleNames() {
    return ruleNames;
  }

  public void setRuleNames(List ruleNames) {
    this.ruleNames = ruleNames;
  }


  public FindingFilter severities(List severities) {
    this.severities = severities;
    return this;
  }

  /**
   * Get severities
   * @return severities
   */
  @javax.annotation.Nullable
  public List getSeverities() {
    return severities;
  }

  public void setSeverities(List severities) {
    this.severities = severities;
  }


  public FindingFilter rulesPackageArns(List rulesPackageArns) {
    this.rulesPackageArns = rulesPackageArns;
    return this;
  }

  /**
   * Get rulesPackageArns
   * @return rulesPackageArns
   */
  @javax.annotation.Nullable
  public List getRulesPackageArns() {
    return rulesPackageArns;
  }

  public void setRulesPackageArns(List rulesPackageArns) {
    this.rulesPackageArns = rulesPackageArns;
  }


  public FindingFilter attributes(List attributes) {
    this.attributes = attributes;
    return this;
  }

  /**
   * Get attributes
   * @return attributes
   */
  @javax.annotation.Nullable
  public List getAttributes() {
    return attributes;
  }

  public void setAttributes(List attributes) {
    this.attributes = attributes;
  }


  public FindingFilter userAttributes(List userAttributes) {
    this.userAttributes = userAttributes;
    return this;
  }

  /**
   * Get userAttributes
   * @return userAttributes
   */
  @javax.annotation.Nullable
  public List getUserAttributes() {
    return userAttributes;
  }

  public void setUserAttributes(List userAttributes) {
    this.userAttributes = userAttributes;
  }


  public FindingFilter creationTimeRange(FindingFilterCreationTimeRange creationTimeRange) {
    this.creationTimeRange = creationTimeRange;
    return this;
  }

  /**
   * Get creationTimeRange
   * @return creationTimeRange
   */
  @javax.annotation.Nullable
  public FindingFilterCreationTimeRange getCreationTimeRange() {
    return creationTimeRange;
  }

  public void setCreationTimeRange(FindingFilterCreationTimeRange creationTimeRange) {
    this.creationTimeRange = creationTimeRange;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FindingFilter findingFilter = (FindingFilter) o;
    return Objects.equals(this.agentIds, findingFilter.agentIds) &&
        Objects.equals(this.autoScalingGroups, findingFilter.autoScalingGroups) &&
        Objects.equals(this.ruleNames, findingFilter.ruleNames) &&
        Objects.equals(this.severities, findingFilter.severities) &&
        Objects.equals(this.rulesPackageArns, findingFilter.rulesPackageArns) &&
        Objects.equals(this.attributes, findingFilter.attributes) &&
        Objects.equals(this.userAttributes, findingFilter.userAttributes) &&
        Objects.equals(this.creationTimeRange, findingFilter.creationTimeRange);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentIds, autoScalingGroups, ruleNames, severities, rulesPackageArns, attributes, userAttributes, creationTimeRange);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FindingFilter {\n");
    sb.append("    agentIds: ").append(toIndentedString(agentIds)).append("\n");
    sb.append("    autoScalingGroups: ").append(toIndentedString(autoScalingGroups)).append("\n");
    sb.append("    ruleNames: ").append(toIndentedString(ruleNames)).append("\n");
    sb.append("    severities: ").append(toIndentedString(severities)).append("\n");
    sb.append("    rulesPackageArns: ").append(toIndentedString(rulesPackageArns)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    userAttributes: ").append(toIndentedString(userAttributes)).append("\n");
    sb.append("    creationTimeRange: ").append(toIndentedString(creationTimeRange)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("agentIds");
    openapiFields.add("autoScalingGroups");
    openapiFields.add("ruleNames");
    openapiFields.add("severities");
    openapiFields.add("rulesPackageArns");
    openapiFields.add("attributes");
    openapiFields.add("userAttributes");
    openapiFields.add("creationTimeRange");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FindingFilter
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FindingFilter.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FindingFilter is not found in the empty JSON string", FindingFilter.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FindingFilter.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FindingFilter` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `agentIds`
      if (jsonObj.get("agentIds") != null && !jsonObj.get("agentIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("agentIds"));
      }
      // validate the optional field `autoScalingGroups`
      if (jsonObj.get("autoScalingGroups") != null && !jsonObj.get("autoScalingGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("autoScalingGroups"));
      }
      // validate the optional field `ruleNames`
      if (jsonObj.get("ruleNames") != null && !jsonObj.get("ruleNames").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ruleNames"));
      }
      // validate the optional field `severities`
      if (jsonObj.get("severities") != null && !jsonObj.get("severities").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("severities"));
      }
      // validate the optional field `rulesPackageArns`
      if (jsonObj.get("rulesPackageArns") != null && !jsonObj.get("rulesPackageArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("rulesPackageArns"));
      }
      // validate the optional field `attributes`
      if (jsonObj.get("attributes") != null && !jsonObj.get("attributes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("attributes"));
      }
      // validate the optional field `userAttributes`
      if (jsonObj.get("userAttributes") != null && !jsonObj.get("userAttributes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("userAttributes"));
      }
      // validate the optional field `creationTimeRange`
      if (jsonObj.get("creationTimeRange") != null && !jsonObj.get("creationTimeRange").isJsonNull()) {
        FindingFilterCreationTimeRange.validateJsonElement(jsonObj.get("creationTimeRange"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FindingFilter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FindingFilter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FindingFilter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FindingFilter.class));

       return (TypeAdapter<T>) new TypeAdapter<FindingFilter>() {
           @Override
           public void write(JsonWriter out, FindingFilter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FindingFilter read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FindingFilter given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FindingFilter
   * @throws IOException if the JSON string is invalid with respect to FindingFilter
   */
  public static FindingFilter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FindingFilter.class);
  }

  /**
   * Convert an instance of FindingFilter to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

