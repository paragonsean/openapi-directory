/*
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets InspectorEvent
 */
@JsonAdapter(InspectorEvent.Adapter.class)
public enum InspectorEvent {
  
  ASSESSMENT_RUN_STARTED("ASSESSMENT_RUN_STARTED"),
  
  ASSESSMENT_RUN_COMPLETED("ASSESSMENT_RUN_COMPLETED"),
  
  ASSESSMENT_RUN_STATE_CHANGED("ASSESSMENT_RUN_STATE_CHANGED"),
  
  FINDING_REPORTED("FINDING_REPORTED"),
  
  OTHER("OTHER");

  private String value;

  InspectorEvent(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static InspectorEvent fromValue(String value) {
    for (InspectorEvent b : InspectorEvent.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<InspectorEvent> {
    @Override
    public void write(final JsonWriter jsonWriter, final InspectorEvent enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public InspectorEvent read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return InspectorEvent.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    InspectorEvent.fromValue(value);
  }
}

