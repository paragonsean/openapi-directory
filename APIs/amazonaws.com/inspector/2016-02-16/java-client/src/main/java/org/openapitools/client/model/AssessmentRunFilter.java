/*
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AssessmentRunFilterCompletionTimeRange;
import org.openapitools.client.model.AssessmentRunFilterDurationRange;
import org.openapitools.client.model.AssessmentRunFilterStartTimeRange;
import org.openapitools.client.model.AssessmentRunFilterStateChangeTimeRange;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Used as the request parameter in the &lt;a&gt;ListAssessmentRuns&lt;/a&gt; action.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:08.917957-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AssessmentRunFilter {
  public static final String SERIALIZED_NAME_NAME_PATTERN = "namePattern";
  @SerializedName(SERIALIZED_NAME_NAME_PATTERN)
  private String namePattern;

  public static final String SERIALIZED_NAME_STATES = "states";
  @SerializedName(SERIALIZED_NAME_STATES)
  private List states;

  public static final String SERIALIZED_NAME_DURATION_RANGE = "durationRange";
  @SerializedName(SERIALIZED_NAME_DURATION_RANGE)
  private AssessmentRunFilterDurationRange durationRange;

  public static final String SERIALIZED_NAME_RULES_PACKAGE_ARNS = "rulesPackageArns";
  @SerializedName(SERIALIZED_NAME_RULES_PACKAGE_ARNS)
  private List rulesPackageArns;

  public static final String SERIALIZED_NAME_START_TIME_RANGE = "startTimeRange";
  @SerializedName(SERIALIZED_NAME_START_TIME_RANGE)
  private AssessmentRunFilterStartTimeRange startTimeRange;

  public static final String SERIALIZED_NAME_COMPLETION_TIME_RANGE = "completionTimeRange";
  @SerializedName(SERIALIZED_NAME_COMPLETION_TIME_RANGE)
  private AssessmentRunFilterCompletionTimeRange completionTimeRange;

  public static final String SERIALIZED_NAME_STATE_CHANGE_TIME_RANGE = "stateChangeTimeRange";
  @SerializedName(SERIALIZED_NAME_STATE_CHANGE_TIME_RANGE)
  private AssessmentRunFilterStateChangeTimeRange stateChangeTimeRange;

  public AssessmentRunFilter() {
  }

  public AssessmentRunFilter namePattern(String namePattern) {
    this.namePattern = namePattern;
    return this;
  }

  /**
   * Get namePattern
   * @return namePattern
   */
  @javax.annotation.Nullable
  public String getNamePattern() {
    return namePattern;
  }

  public void setNamePattern(String namePattern) {
    this.namePattern = namePattern;
  }


  public AssessmentRunFilter states(List states) {
    this.states = states;
    return this;
  }

  /**
   * Get states
   * @return states
   */
  @javax.annotation.Nullable
  public List getStates() {
    return states;
  }

  public void setStates(List states) {
    this.states = states;
  }


  public AssessmentRunFilter durationRange(AssessmentRunFilterDurationRange durationRange) {
    this.durationRange = durationRange;
    return this;
  }

  /**
   * Get durationRange
   * @return durationRange
   */
  @javax.annotation.Nullable
  public AssessmentRunFilterDurationRange getDurationRange() {
    return durationRange;
  }

  public void setDurationRange(AssessmentRunFilterDurationRange durationRange) {
    this.durationRange = durationRange;
  }


  public AssessmentRunFilter rulesPackageArns(List rulesPackageArns) {
    this.rulesPackageArns = rulesPackageArns;
    return this;
  }

  /**
   * Get rulesPackageArns
   * @return rulesPackageArns
   */
  @javax.annotation.Nullable
  public List getRulesPackageArns() {
    return rulesPackageArns;
  }

  public void setRulesPackageArns(List rulesPackageArns) {
    this.rulesPackageArns = rulesPackageArns;
  }


  public AssessmentRunFilter startTimeRange(AssessmentRunFilterStartTimeRange startTimeRange) {
    this.startTimeRange = startTimeRange;
    return this;
  }

  /**
   * Get startTimeRange
   * @return startTimeRange
   */
  @javax.annotation.Nullable
  public AssessmentRunFilterStartTimeRange getStartTimeRange() {
    return startTimeRange;
  }

  public void setStartTimeRange(AssessmentRunFilterStartTimeRange startTimeRange) {
    this.startTimeRange = startTimeRange;
  }


  public AssessmentRunFilter completionTimeRange(AssessmentRunFilterCompletionTimeRange completionTimeRange) {
    this.completionTimeRange = completionTimeRange;
    return this;
  }

  /**
   * Get completionTimeRange
   * @return completionTimeRange
   */
  @javax.annotation.Nullable
  public AssessmentRunFilterCompletionTimeRange getCompletionTimeRange() {
    return completionTimeRange;
  }

  public void setCompletionTimeRange(AssessmentRunFilterCompletionTimeRange completionTimeRange) {
    this.completionTimeRange = completionTimeRange;
  }


  public AssessmentRunFilter stateChangeTimeRange(AssessmentRunFilterStateChangeTimeRange stateChangeTimeRange) {
    this.stateChangeTimeRange = stateChangeTimeRange;
    return this;
  }

  /**
   * Get stateChangeTimeRange
   * @return stateChangeTimeRange
   */
  @javax.annotation.Nullable
  public AssessmentRunFilterStateChangeTimeRange getStateChangeTimeRange() {
    return stateChangeTimeRange;
  }

  public void setStateChangeTimeRange(AssessmentRunFilterStateChangeTimeRange stateChangeTimeRange) {
    this.stateChangeTimeRange = stateChangeTimeRange;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssessmentRunFilter assessmentRunFilter = (AssessmentRunFilter) o;
    return Objects.equals(this.namePattern, assessmentRunFilter.namePattern) &&
        Objects.equals(this.states, assessmentRunFilter.states) &&
        Objects.equals(this.durationRange, assessmentRunFilter.durationRange) &&
        Objects.equals(this.rulesPackageArns, assessmentRunFilter.rulesPackageArns) &&
        Objects.equals(this.startTimeRange, assessmentRunFilter.startTimeRange) &&
        Objects.equals(this.completionTimeRange, assessmentRunFilter.completionTimeRange) &&
        Objects.equals(this.stateChangeTimeRange, assessmentRunFilter.stateChangeTimeRange);
  }

  @Override
  public int hashCode() {
    return Objects.hash(namePattern, states, durationRange, rulesPackageArns, startTimeRange, completionTimeRange, stateChangeTimeRange);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssessmentRunFilter {\n");
    sb.append("    namePattern: ").append(toIndentedString(namePattern)).append("\n");
    sb.append("    states: ").append(toIndentedString(states)).append("\n");
    sb.append("    durationRange: ").append(toIndentedString(durationRange)).append("\n");
    sb.append("    rulesPackageArns: ").append(toIndentedString(rulesPackageArns)).append("\n");
    sb.append("    startTimeRange: ").append(toIndentedString(startTimeRange)).append("\n");
    sb.append("    completionTimeRange: ").append(toIndentedString(completionTimeRange)).append("\n");
    sb.append("    stateChangeTimeRange: ").append(toIndentedString(stateChangeTimeRange)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("namePattern");
    openapiFields.add("states");
    openapiFields.add("durationRange");
    openapiFields.add("rulesPackageArns");
    openapiFields.add("startTimeRange");
    openapiFields.add("completionTimeRange");
    openapiFields.add("stateChangeTimeRange");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AssessmentRunFilter
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AssessmentRunFilter.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AssessmentRunFilter is not found in the empty JSON string", AssessmentRunFilter.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AssessmentRunFilter.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AssessmentRunFilter` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `namePattern`
      if (jsonObj.get("namePattern") != null && !jsonObj.get("namePattern").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("namePattern"));
      }
      // validate the optional field `states`
      if (jsonObj.get("states") != null && !jsonObj.get("states").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("states"));
      }
      // validate the optional field `durationRange`
      if (jsonObj.get("durationRange") != null && !jsonObj.get("durationRange").isJsonNull()) {
        AssessmentRunFilterDurationRange.validateJsonElement(jsonObj.get("durationRange"));
      }
      // validate the optional field `rulesPackageArns`
      if (jsonObj.get("rulesPackageArns") != null && !jsonObj.get("rulesPackageArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("rulesPackageArns"));
      }
      // validate the optional field `startTimeRange`
      if (jsonObj.get("startTimeRange") != null && !jsonObj.get("startTimeRange").isJsonNull()) {
        AssessmentRunFilterStartTimeRange.validateJsonElement(jsonObj.get("startTimeRange"));
      }
      // validate the optional field `completionTimeRange`
      if (jsonObj.get("completionTimeRange") != null && !jsonObj.get("completionTimeRange").isJsonNull()) {
        AssessmentRunFilterCompletionTimeRange.validateJsonElement(jsonObj.get("completionTimeRange"));
      }
      // validate the optional field `stateChangeTimeRange`
      if (jsonObj.get("stateChangeTimeRange") != null && !jsonObj.get("stateChangeTimeRange").isJsonNull()) {
        AssessmentRunFilterStateChangeTimeRange.validateJsonElement(jsonObj.get("stateChangeTimeRange"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AssessmentRunFilter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AssessmentRunFilter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AssessmentRunFilter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AssessmentRunFilter.class));

       return (TypeAdapter<T>) new TypeAdapter<AssessmentRunFilter>() {
           @Override
           public void write(JsonWriter out, AssessmentRunFilter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AssessmentRunFilter read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AssessmentRunFilter given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AssessmentRunFilter
   * @throws IOException if the JSON string is invalid with respect to AssessmentRunFilter
   */
  public static AssessmentRunFilter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AssessmentRunFilter.class);
  }

  /**
   * Convert an instance of AssessmentRunFilter to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

