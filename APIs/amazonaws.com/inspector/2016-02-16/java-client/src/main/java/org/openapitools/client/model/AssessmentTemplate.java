/*
 * Amazon Inspector
 * <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2016-02-16
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains information about an Amazon Inspector assessment template. This data type is used as the response element in the &lt;a&gt;DescribeAssessmentTemplates&lt;/a&gt; action.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:08.917957-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AssessmentTemplate {
  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ASSESSMENT_TARGET_ARN = "assessmentTargetArn";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_TARGET_ARN)
  private String assessmentTargetArn;

  public static final String SERIALIZED_NAME_DURATION_IN_SECONDS = "durationInSeconds";
  @SerializedName(SERIALIZED_NAME_DURATION_IN_SECONDS)
  private Integer durationInSeconds;

  public static final String SERIALIZED_NAME_RULES_PACKAGE_ARNS = "rulesPackageArns";
  @SerializedName(SERIALIZED_NAME_RULES_PACKAGE_ARNS)
  private List rulesPackageArns;

  public static final String SERIALIZED_NAME_USER_ATTRIBUTES_FOR_FINDINGS = "userAttributesForFindings";
  @SerializedName(SERIALIZED_NAME_USER_ATTRIBUTES_FOR_FINDINGS)
  private List userAttributesForFindings;

  public static final String SERIALIZED_NAME_LAST_ASSESSMENT_RUN_ARN = "lastAssessmentRunArn";
  @SerializedName(SERIALIZED_NAME_LAST_ASSESSMENT_RUN_ARN)
  private String lastAssessmentRunArn;

  public static final String SERIALIZED_NAME_ASSESSMENT_RUN_COUNT = "assessmentRunCount";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_RUN_COUNT)
  private Integer assessmentRunCount;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public AssessmentTemplate() {
  }

  public AssessmentTemplate arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nonnull
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public AssessmentTemplate name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AssessmentTemplate assessmentTargetArn(String assessmentTargetArn) {
    this.assessmentTargetArn = assessmentTargetArn;
    return this;
  }

  /**
   * Get assessmentTargetArn
   * @return assessmentTargetArn
   */
  @javax.annotation.Nonnull
  public String getAssessmentTargetArn() {
    return assessmentTargetArn;
  }

  public void setAssessmentTargetArn(String assessmentTargetArn) {
    this.assessmentTargetArn = assessmentTargetArn;
  }


  public AssessmentTemplate durationInSeconds(Integer durationInSeconds) {
    this.durationInSeconds = durationInSeconds;
    return this;
  }

  /**
   * Get durationInSeconds
   * @return durationInSeconds
   */
  @javax.annotation.Nonnull
  public Integer getDurationInSeconds() {
    return durationInSeconds;
  }

  public void setDurationInSeconds(Integer durationInSeconds) {
    this.durationInSeconds = durationInSeconds;
  }


  public AssessmentTemplate rulesPackageArns(List rulesPackageArns) {
    this.rulesPackageArns = rulesPackageArns;
    return this;
  }

  /**
   * Get rulesPackageArns
   * @return rulesPackageArns
   */
  @javax.annotation.Nonnull
  public List getRulesPackageArns() {
    return rulesPackageArns;
  }

  public void setRulesPackageArns(List rulesPackageArns) {
    this.rulesPackageArns = rulesPackageArns;
  }


  public AssessmentTemplate userAttributesForFindings(List userAttributesForFindings) {
    this.userAttributesForFindings = userAttributesForFindings;
    return this;
  }

  /**
   * Get userAttributesForFindings
   * @return userAttributesForFindings
   */
  @javax.annotation.Nonnull
  public List getUserAttributesForFindings() {
    return userAttributesForFindings;
  }

  public void setUserAttributesForFindings(List userAttributesForFindings) {
    this.userAttributesForFindings = userAttributesForFindings;
  }


  public AssessmentTemplate lastAssessmentRunArn(String lastAssessmentRunArn) {
    this.lastAssessmentRunArn = lastAssessmentRunArn;
    return this;
  }

  /**
   * Get lastAssessmentRunArn
   * @return lastAssessmentRunArn
   */
  @javax.annotation.Nullable
  public String getLastAssessmentRunArn() {
    return lastAssessmentRunArn;
  }

  public void setLastAssessmentRunArn(String lastAssessmentRunArn) {
    this.lastAssessmentRunArn = lastAssessmentRunArn;
  }


  public AssessmentTemplate assessmentRunCount(Integer assessmentRunCount) {
    this.assessmentRunCount = assessmentRunCount;
    return this;
  }

  /**
   * Get assessmentRunCount
   * @return assessmentRunCount
   */
  @javax.annotation.Nonnull
  public Integer getAssessmentRunCount() {
    return assessmentRunCount;
  }

  public void setAssessmentRunCount(Integer assessmentRunCount) {
    this.assessmentRunCount = assessmentRunCount;
  }


  public AssessmentTemplate createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssessmentTemplate assessmentTemplate = (AssessmentTemplate) o;
    return Objects.equals(this.arn, assessmentTemplate.arn) &&
        Objects.equals(this.name, assessmentTemplate.name) &&
        Objects.equals(this.assessmentTargetArn, assessmentTemplate.assessmentTargetArn) &&
        Objects.equals(this.durationInSeconds, assessmentTemplate.durationInSeconds) &&
        Objects.equals(this.rulesPackageArns, assessmentTemplate.rulesPackageArns) &&
        Objects.equals(this.userAttributesForFindings, assessmentTemplate.userAttributesForFindings) &&
        Objects.equals(this.lastAssessmentRunArn, assessmentTemplate.lastAssessmentRunArn) &&
        Objects.equals(this.assessmentRunCount, assessmentTemplate.assessmentRunCount) &&
        Objects.equals(this.createdAt, assessmentTemplate.createdAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, name, assessmentTargetArn, durationInSeconds, rulesPackageArns, userAttributesForFindings, lastAssessmentRunArn, assessmentRunCount, createdAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssessmentTemplate {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    assessmentTargetArn: ").append(toIndentedString(assessmentTargetArn)).append("\n");
    sb.append("    durationInSeconds: ").append(toIndentedString(durationInSeconds)).append("\n");
    sb.append("    rulesPackageArns: ").append(toIndentedString(rulesPackageArns)).append("\n");
    sb.append("    userAttributesForFindings: ").append(toIndentedString(userAttributesForFindings)).append("\n");
    sb.append("    lastAssessmentRunArn: ").append(toIndentedString(lastAssessmentRunArn)).append("\n");
    sb.append("    assessmentRunCount: ").append(toIndentedString(assessmentRunCount)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arn");
    openapiFields.add("name");
    openapiFields.add("assessmentTargetArn");
    openapiFields.add("durationInSeconds");
    openapiFields.add("rulesPackageArns");
    openapiFields.add("userAttributesForFindings");
    openapiFields.add("lastAssessmentRunArn");
    openapiFields.add("assessmentRunCount");
    openapiFields.add("createdAt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("arn");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("assessmentTargetArn");
    openapiRequiredFields.add("durationInSeconds");
    openapiRequiredFields.add("rulesPackageArns");
    openapiRequiredFields.add("userAttributesForFindings");
    openapiRequiredFields.add("assessmentRunCount");
    openapiRequiredFields.add("createdAt");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AssessmentTemplate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AssessmentTemplate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AssessmentTemplate is not found in the empty JSON string", AssessmentTemplate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AssessmentTemplate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AssessmentTemplate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AssessmentTemplate.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `arn`
      String.validateJsonElement(jsonObj.get("arn"));
      // validate the required field `name`
      String.validateJsonElement(jsonObj.get("name"));
      // validate the required field `assessmentTargetArn`
      String.validateJsonElement(jsonObj.get("assessmentTargetArn"));
      // validate the required field `durationInSeconds`
      Integer.validateJsonElement(jsonObj.get("durationInSeconds"));
      // validate the required field `rulesPackageArns`
      List.validateJsonElement(jsonObj.get("rulesPackageArns"));
      // validate the required field `userAttributesForFindings`
      List.validateJsonElement(jsonObj.get("userAttributesForFindings"));
      // validate the optional field `lastAssessmentRunArn`
      if (jsonObj.get("lastAssessmentRunArn") != null && !jsonObj.get("lastAssessmentRunArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("lastAssessmentRunArn"));
      }
      // validate the required field `assessmentRunCount`
      Integer.validateJsonElement(jsonObj.get("assessmentRunCount"));
      // validate the required field `createdAt`
      OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AssessmentTemplate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AssessmentTemplate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AssessmentTemplate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AssessmentTemplate.class));

       return (TypeAdapter<T>) new TypeAdapter<AssessmentTemplate>() {
           @Override
           public void write(JsonWriter out, AssessmentTemplate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AssessmentTemplate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AssessmentTemplate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AssessmentTemplate
   * @throws IOException if the JSON string is invalid with respect to AssessmentTemplate
   */
  public static AssessmentTemplate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AssessmentTemplate.class);
  }

  /**
   * Convert an instance of AssessmentTemplate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

