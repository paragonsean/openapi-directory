# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deployment_state_component import DeploymentStateComponent
from openapi_server.models.deployment_state_environment import DeploymentStateEnvironment
from openapi_server.models.deployment_state_service_instance import DeploymentStateServiceInstance
from openapi_server.models.deployment_state_service_pipeline import DeploymentStateServicePipeline
from openapi_server import util


class DeploymentInitialState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, component: DeploymentStateComponent=None, environment: DeploymentStateEnvironment=None, service_instance: DeploymentStateServiceInstance=None, service_pipeline: DeploymentStateServicePipeline=None):
        """DeploymentInitialState - a model defined in OpenAPI

        :param component: The component of this DeploymentInitialState.
        :param environment: The environment of this DeploymentInitialState.
        :param service_instance: The service_instance of this DeploymentInitialState.
        :param service_pipeline: The service_pipeline of this DeploymentInitialState.
        """
        self.openapi_types = {
            'component': DeploymentStateComponent,
            'environment': DeploymentStateEnvironment,
            'service_instance': DeploymentStateServiceInstance,
            'service_pipeline': DeploymentStateServicePipeline
        }

        self.attribute_map = {
            'component': 'component',
            'environment': 'environment',
            'service_instance': 'serviceInstance',
            'service_pipeline': 'servicePipeline'
        }

        self._component = component
        self._environment = environment
        self._service_instance = service_instance
        self._service_pipeline = service_pipeline

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentInitialState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Deployment_initialState of this DeploymentInitialState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def component(self):
        """Gets the component of this DeploymentInitialState.


        :return: The component of this DeploymentInitialState.
        :rtype: DeploymentStateComponent
        """
        return self._component

    @component.setter
    def component(self, component):
        """Sets the component of this DeploymentInitialState.


        :param component: The component of this DeploymentInitialState.
        :type component: DeploymentStateComponent
        """

        self._component = component

    @property
    def environment(self):
        """Gets the environment of this DeploymentInitialState.


        :return: The environment of this DeploymentInitialState.
        :rtype: DeploymentStateEnvironment
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this DeploymentInitialState.


        :param environment: The environment of this DeploymentInitialState.
        :type environment: DeploymentStateEnvironment
        """

        self._environment = environment

    @property
    def service_instance(self):
        """Gets the service_instance of this DeploymentInitialState.


        :return: The service_instance of this DeploymentInitialState.
        :rtype: DeploymentStateServiceInstance
        """
        return self._service_instance

    @service_instance.setter
    def service_instance(self, service_instance):
        """Sets the service_instance of this DeploymentInitialState.


        :param service_instance: The service_instance of this DeploymentInitialState.
        :type service_instance: DeploymentStateServiceInstance
        """

        self._service_instance = service_instance

    @property
    def service_pipeline(self):
        """Gets the service_pipeline of this DeploymentInitialState.


        :return: The service_pipeline of this DeploymentInitialState.
        :rtype: DeploymentStateServicePipeline
        """
        return self._service_pipeline

    @service_pipeline.setter
    def service_pipeline(self, service_pipeline):
        """Sets the service_pipeline of this DeploymentInitialState.


        :param service_pipeline: The service_pipeline of this DeploymentInitialState.
        :type service_pipeline: DeploymentStateServicePipeline
        """

        self._service_pipeline = service_pipeline
