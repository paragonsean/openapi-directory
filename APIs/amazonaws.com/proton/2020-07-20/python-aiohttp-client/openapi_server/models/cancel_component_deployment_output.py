# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cancel_component_deployment_output_component import CancelComponentDeploymentOutputComponent
from openapi_server import util


class CancelComponentDeploymentOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, component: CancelComponentDeploymentOutputComponent=None):
        """CancelComponentDeploymentOutput - a model defined in OpenAPI

        :param component: The component of this CancelComponentDeploymentOutput.
        """
        self.openapi_types = {
            'component': CancelComponentDeploymentOutputComponent
        }

        self.attribute_map = {
            'component': 'component'
        }

        self._component = component

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CancelComponentDeploymentOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CancelComponentDeploymentOutput of this CancelComponentDeploymentOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def component(self):
        """Gets the component of this CancelComponentDeploymentOutput.


        :return: The component of this CancelComponentDeploymentOutput.
        :rtype: CancelComponentDeploymentOutputComponent
        """
        return self._component

    @component.setter
    def component(self, component):
        """Sets the component of this CancelComponentDeploymentOutput.


        :param component: The component of this CancelComponentDeploymentOutput.
        :type component: CancelComponentDeploymentOutputComponent
        """
        if component is None:
            raise ValueError("Invalid value for `component`, must not be `None`")

        self._component = component
