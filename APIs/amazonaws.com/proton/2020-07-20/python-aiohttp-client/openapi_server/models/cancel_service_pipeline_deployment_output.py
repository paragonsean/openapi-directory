# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cancel_service_pipeline_deployment_output_pipeline import CancelServicePipelineDeploymentOutputPipeline
from openapi_server import util


class CancelServicePipelineDeploymentOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pipeline: CancelServicePipelineDeploymentOutputPipeline=None):
        """CancelServicePipelineDeploymentOutput - a model defined in OpenAPI

        :param pipeline: The pipeline of this CancelServicePipelineDeploymentOutput.
        """
        self.openapi_types = {
            'pipeline': CancelServicePipelineDeploymentOutputPipeline
        }

        self.attribute_map = {
            'pipeline': 'pipeline'
        }

        self._pipeline = pipeline

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CancelServicePipelineDeploymentOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CancelServicePipelineDeploymentOutput of this CancelServicePipelineDeploymentOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pipeline(self):
        """Gets the pipeline of this CancelServicePipelineDeploymentOutput.


        :return: The pipeline of this CancelServicePipelineDeploymentOutput.
        :rtype: CancelServicePipelineDeploymentOutputPipeline
        """
        return self._pipeline

    @pipeline.setter
    def pipeline(self, pipeline):
        """Sets the pipeline of this CancelServicePipelineDeploymentOutput.


        :param pipeline: The pipeline of this CancelServicePipelineDeploymentOutput.
        :type pipeline: CancelServicePipelineDeploymentOutputPipeline
        """
        if pipeline is None:
            raise ValueError("Invalid value for `pipeline`, must not be `None`")

        self._pipeline = pipeline
