# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListDeploymentsInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, component_name: str=None, environment_name: str=None, max_results: int=None, next_token: str=None, service_instance_name: str=None, service_name: str=None):
        """ListDeploymentsInput - a model defined in OpenAPI

        :param component_name: The component_name of this ListDeploymentsInput.
        :param environment_name: The environment_name of this ListDeploymentsInput.
        :param max_results: The max_results of this ListDeploymentsInput.
        :param next_token: The next_token of this ListDeploymentsInput.
        :param service_instance_name: The service_instance_name of this ListDeploymentsInput.
        :param service_name: The service_name of this ListDeploymentsInput.
        """
        self.openapi_types = {
            'component_name': str,
            'environment_name': str,
            'max_results': int,
            'next_token': str,
            'service_instance_name': str,
            'service_name': str
        }

        self.attribute_map = {
            'component_name': 'componentName',
            'environment_name': 'environmentName',
            'max_results': 'maxResults',
            'next_token': 'nextToken',
            'service_instance_name': 'serviceInstanceName',
            'service_name': 'serviceName'
        }

        self._component_name = component_name
        self._environment_name = environment_name
        self._max_results = max_results
        self._next_token = next_token
        self._service_instance_name = service_instance_name
        self._service_name = service_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDeploymentsInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListDeploymentsInput of this ListDeploymentsInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def component_name(self):
        """Gets the component_name of this ListDeploymentsInput.


        :return: The component_name of this ListDeploymentsInput.
        :rtype: str
        """
        return self._component_name

    @component_name.setter
    def component_name(self, component_name):
        """Sets the component_name of this ListDeploymentsInput.


        :param component_name: The component_name of this ListDeploymentsInput.
        :type component_name: str
        """

        self._component_name = component_name

    @property
    def environment_name(self):
        """Gets the environment_name of this ListDeploymentsInput.


        :return: The environment_name of this ListDeploymentsInput.
        :rtype: str
        """
        return self._environment_name

    @environment_name.setter
    def environment_name(self, environment_name):
        """Sets the environment_name of this ListDeploymentsInput.


        :param environment_name: The environment_name of this ListDeploymentsInput.
        :type environment_name: str
        """

        self._environment_name = environment_name

    @property
    def max_results(self):
        """Gets the max_results of this ListDeploymentsInput.


        :return: The max_results of this ListDeploymentsInput.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListDeploymentsInput.


        :param max_results: The max_results of this ListDeploymentsInput.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this ListDeploymentsInput.


        :return: The next_token of this ListDeploymentsInput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListDeploymentsInput.


        :param next_token: The next_token of this ListDeploymentsInput.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def service_instance_name(self):
        """Gets the service_instance_name of this ListDeploymentsInput.


        :return: The service_instance_name of this ListDeploymentsInput.
        :rtype: str
        """
        return self._service_instance_name

    @service_instance_name.setter
    def service_instance_name(self, service_instance_name):
        """Sets the service_instance_name of this ListDeploymentsInput.


        :param service_instance_name: The service_instance_name of this ListDeploymentsInput.
        :type service_instance_name: str
        """

        self._service_instance_name = service_instance_name

    @property
    def service_name(self):
        """Gets the service_name of this ListDeploymentsInput.


        :return: The service_name of this ListDeploymentsInput.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this ListDeploymentsInput.


        :param service_name: The service_name of this ListDeploymentsInput.
        :type service_name: str
        """

        self._service_name = service_name
