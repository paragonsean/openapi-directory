# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.provisioned_resource_engine import ProvisionedResourceEngine
from openapi_server import util


class ProvisionedResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identifier: str=None, name: str=None, provisioning_engine: ProvisionedResourceEngine=None):
        """ProvisionedResource - a model defined in OpenAPI

        :param identifier: The identifier of this ProvisionedResource.
        :param name: The name of this ProvisionedResource.
        :param provisioning_engine: The provisioning_engine of this ProvisionedResource.
        """
        self.openapi_types = {
            'identifier': str,
            'name': str,
            'provisioning_engine': ProvisionedResourceEngine
        }

        self.attribute_map = {
            'identifier': 'identifier',
            'name': 'name',
            'provisioning_engine': 'provisioningEngine'
        }

        self._identifier = identifier
        self._name = name
        self._provisioning_engine = provisioning_engine

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProvisionedResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProvisionedResource of this ProvisionedResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identifier(self):
        """Gets the identifier of this ProvisionedResource.


        :return: The identifier of this ProvisionedResource.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this ProvisionedResource.


        :param identifier: The identifier of this ProvisionedResource.
        :type identifier: str
        """

        self._identifier = identifier

    @property
    def name(self):
        """Gets the name of this ProvisionedResource.


        :return: The name of this ProvisionedResource.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProvisionedResource.


        :param name: The name of this ProvisionedResource.
        :type name: str
        """

        self._name = name

    @property
    def provisioning_engine(self):
        """Gets the provisioning_engine of this ProvisionedResource.


        :return: The provisioning_engine of this ProvisionedResource.
        :rtype: ProvisionedResourceEngine
        """
        return self._provisioning_engine

    @provisioning_engine.setter
    def provisioning_engine(self, provisioning_engine):
        """Sets the provisioning_engine of this ProvisionedResource.


        :param provisioning_engine: The provisioning_engine of this ProvisionedResource.
        :type provisioning_engine: ProvisionedResourceEngine
        """

        self._provisioning_engine = provisioning_engine
