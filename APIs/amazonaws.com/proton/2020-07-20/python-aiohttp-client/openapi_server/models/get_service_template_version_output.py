# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_service_template_version_output_service_template_version import GetServiceTemplateVersionOutputServiceTemplateVersion
from openapi_server import util


class GetServiceTemplateVersionOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_template_version: GetServiceTemplateVersionOutputServiceTemplateVersion=None):
        """GetServiceTemplateVersionOutput - a model defined in OpenAPI

        :param service_template_version: The service_template_version of this GetServiceTemplateVersionOutput.
        """
        self.openapi_types = {
            'service_template_version': GetServiceTemplateVersionOutputServiceTemplateVersion
        }

        self.attribute_map = {
            'service_template_version': 'serviceTemplateVersion'
        }

        self._service_template_version = service_template_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetServiceTemplateVersionOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetServiceTemplateVersionOutput of this GetServiceTemplateVersionOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_template_version(self):
        """Gets the service_template_version of this GetServiceTemplateVersionOutput.


        :return: The service_template_version of this GetServiceTemplateVersionOutput.
        :rtype: GetServiceTemplateVersionOutputServiceTemplateVersion
        """
        return self._service_template_version

    @service_template_version.setter
    def service_template_version(self, service_template_version):
        """Sets the service_template_version of this GetServiceTemplateVersionOutput.


        :param service_template_version: The service_template_version of this GetServiceTemplateVersionOutput.
        :type service_template_version: GetServiceTemplateVersionOutputServiceTemplateVersion
        """
        if service_template_version is None:
            raise ValueError("Invalid value for `service_template_version`, must not be `None`")

        self._service_template_version = service_template_version
