# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.delete_environment_output_environment import DeleteEnvironmentOutputEnvironment
from openapi_server import util


class DeleteEnvironmentOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, environment: DeleteEnvironmentOutputEnvironment=None):
        """DeleteEnvironmentOutput - a model defined in OpenAPI

        :param environment: The environment of this DeleteEnvironmentOutput.
        """
        self.openapi_types = {
            'environment': DeleteEnvironmentOutputEnvironment
        }

        self.attribute_map = {
            'environment': 'environment'
        }

        self._environment = environment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteEnvironmentOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteEnvironmentOutput of this DeleteEnvironmentOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def environment(self):
        """Gets the environment of this DeleteEnvironmentOutput.


        :return: The environment of this DeleteEnvironmentOutput.
        :rtype: DeleteEnvironmentOutputEnvironment
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this DeleteEnvironmentOutput.


        :param environment: The environment of this DeleteEnvironmentOutput.
        :type environment: DeleteEnvironmentOutputEnvironment
        """

        self._environment = environment
