# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ComponentState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_instance_name: str=None, service_name: str=None, service_spec: str=None, template_file: str=None):
        """ComponentState - a model defined in OpenAPI

        :param service_instance_name: The service_instance_name of this ComponentState.
        :param service_name: The service_name of this ComponentState.
        :param service_spec: The service_spec of this ComponentState.
        :param template_file: The template_file of this ComponentState.
        """
        self.openapi_types = {
            'service_instance_name': str,
            'service_name': str,
            'service_spec': str,
            'template_file': str
        }

        self.attribute_map = {
            'service_instance_name': 'serviceInstanceName',
            'service_name': 'serviceName',
            'service_spec': 'serviceSpec',
            'template_file': 'templateFile'
        }

        self._service_instance_name = service_instance_name
        self._service_name = service_name
        self._service_spec = service_spec
        self._template_file = template_file

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComponentState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComponentState of this ComponentState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_instance_name(self):
        """Gets the service_instance_name of this ComponentState.


        :return: The service_instance_name of this ComponentState.
        :rtype: str
        """
        return self._service_instance_name

    @service_instance_name.setter
    def service_instance_name(self, service_instance_name):
        """Sets the service_instance_name of this ComponentState.


        :param service_instance_name: The service_instance_name of this ComponentState.
        :type service_instance_name: str
        """

        self._service_instance_name = service_instance_name

    @property
    def service_name(self):
        """Gets the service_name of this ComponentState.


        :return: The service_name of this ComponentState.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this ComponentState.


        :param service_name: The service_name of this ComponentState.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def service_spec(self):
        """Gets the service_spec of this ComponentState.


        :return: The service_spec of this ComponentState.
        :rtype: str
        """
        return self._service_spec

    @service_spec.setter
    def service_spec(self, service_spec):
        """Sets the service_spec of this ComponentState.


        :param service_spec: The service_spec of this ComponentState.
        :type service_spec: str
        """

        self._service_spec = service_spec

    @property
    def template_file(self):
        """Gets the template_file of this ComponentState.


        :return: The template_file of this ComponentState.
        :rtype: str
        """
        return self._template_file

    @template_file.setter
    def template_file(self, template_file):
        """Sets the template_file of this ComponentState.


        :param template_file: The template_file of this ComponentState.
        :type template_file: str
        """

        self._template_file = template_file
