# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateEnvironmentAccountConnectionInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, codebuild_role_arn: str=None, component_role_arn: str=None, id: str=None, role_arn: str=None):
        """UpdateEnvironmentAccountConnectionInput - a model defined in OpenAPI

        :param codebuild_role_arn: The codebuild_role_arn of this UpdateEnvironmentAccountConnectionInput.
        :param component_role_arn: The component_role_arn of this UpdateEnvironmentAccountConnectionInput.
        :param id: The id of this UpdateEnvironmentAccountConnectionInput.
        :param role_arn: The role_arn of this UpdateEnvironmentAccountConnectionInput.
        """
        self.openapi_types = {
            'codebuild_role_arn': str,
            'component_role_arn': str,
            'id': str,
            'role_arn': str
        }

        self.attribute_map = {
            'codebuild_role_arn': 'codebuildRoleArn',
            'component_role_arn': 'componentRoleArn',
            'id': 'id',
            'role_arn': 'roleArn'
        }

        self._codebuild_role_arn = codebuild_role_arn
        self._component_role_arn = component_role_arn
        self._id = id
        self._role_arn = role_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateEnvironmentAccountConnectionInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateEnvironmentAccountConnectionInput of this UpdateEnvironmentAccountConnectionInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def codebuild_role_arn(self):
        """Gets the codebuild_role_arn of this UpdateEnvironmentAccountConnectionInput.


        :return: The codebuild_role_arn of this UpdateEnvironmentAccountConnectionInput.
        :rtype: str
        """
        return self._codebuild_role_arn

    @codebuild_role_arn.setter
    def codebuild_role_arn(self, codebuild_role_arn):
        """Sets the codebuild_role_arn of this UpdateEnvironmentAccountConnectionInput.


        :param codebuild_role_arn: The codebuild_role_arn of this UpdateEnvironmentAccountConnectionInput.
        :type codebuild_role_arn: str
        """

        self._codebuild_role_arn = codebuild_role_arn

    @property
    def component_role_arn(self):
        """Gets the component_role_arn of this UpdateEnvironmentAccountConnectionInput.


        :return: The component_role_arn of this UpdateEnvironmentAccountConnectionInput.
        :rtype: str
        """
        return self._component_role_arn

    @component_role_arn.setter
    def component_role_arn(self, component_role_arn):
        """Sets the component_role_arn of this UpdateEnvironmentAccountConnectionInput.


        :param component_role_arn: The component_role_arn of this UpdateEnvironmentAccountConnectionInput.
        :type component_role_arn: str
        """

        self._component_role_arn = component_role_arn

    @property
    def id(self):
        """Gets the id of this UpdateEnvironmentAccountConnectionInput.


        :return: The id of this UpdateEnvironmentAccountConnectionInput.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UpdateEnvironmentAccountConnectionInput.


        :param id: The id of this UpdateEnvironmentAccountConnectionInput.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def role_arn(self):
        """Gets the role_arn of this UpdateEnvironmentAccountConnectionInput.


        :return: The role_arn of this UpdateEnvironmentAccountConnectionInput.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this UpdateEnvironmentAccountConnectionInput.


        :param role_arn: The role_arn of this UpdateEnvironmentAccountConnectionInput.
        :type role_arn: str
        """

        self._role_arn = role_arn
