# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_deployment_status import ResourceDeploymentStatus
from openapi_server import util


class NotifyResourceDeploymentStatusChangeInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deployment_id: str=None, outputs: List=None, resource_arn: str=None, status: ResourceDeploymentStatus=None, status_message: str=None):
        """NotifyResourceDeploymentStatusChangeInput - a model defined in OpenAPI

        :param deployment_id: The deployment_id of this NotifyResourceDeploymentStatusChangeInput.
        :param outputs: The outputs of this NotifyResourceDeploymentStatusChangeInput.
        :param resource_arn: The resource_arn of this NotifyResourceDeploymentStatusChangeInput.
        :param status: The status of this NotifyResourceDeploymentStatusChangeInput.
        :param status_message: The status_message of this NotifyResourceDeploymentStatusChangeInput.
        """
        self.openapi_types = {
            'deployment_id': str,
            'outputs': List,
            'resource_arn': str,
            'status': ResourceDeploymentStatus,
            'status_message': str
        }

        self.attribute_map = {
            'deployment_id': 'deploymentId',
            'outputs': 'outputs',
            'resource_arn': 'resourceArn',
            'status': 'status',
            'status_message': 'statusMessage'
        }

        self._deployment_id = deployment_id
        self._outputs = outputs
        self._resource_arn = resource_arn
        self._status = status
        self._status_message = status_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotifyResourceDeploymentStatusChangeInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NotifyResourceDeploymentStatusChangeInput of this NotifyResourceDeploymentStatusChangeInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deployment_id(self):
        """Gets the deployment_id of this NotifyResourceDeploymentStatusChangeInput.


        :return: The deployment_id of this NotifyResourceDeploymentStatusChangeInput.
        :rtype: str
        """
        return self._deployment_id

    @deployment_id.setter
    def deployment_id(self, deployment_id):
        """Sets the deployment_id of this NotifyResourceDeploymentStatusChangeInput.


        :param deployment_id: The deployment_id of this NotifyResourceDeploymentStatusChangeInput.
        :type deployment_id: str
        """

        self._deployment_id = deployment_id

    @property
    def outputs(self):
        """Gets the outputs of this NotifyResourceDeploymentStatusChangeInput.


        :return: The outputs of this NotifyResourceDeploymentStatusChangeInput.
        :rtype: List
        """
        return self._outputs

    @outputs.setter
    def outputs(self, outputs):
        """Sets the outputs of this NotifyResourceDeploymentStatusChangeInput.


        :param outputs: The outputs of this NotifyResourceDeploymentStatusChangeInput.
        :type outputs: List
        """

        self._outputs = outputs

    @property
    def resource_arn(self):
        """Gets the resource_arn of this NotifyResourceDeploymentStatusChangeInput.


        :return: The resource_arn of this NotifyResourceDeploymentStatusChangeInput.
        :rtype: str
        """
        return self._resource_arn

    @resource_arn.setter
    def resource_arn(self, resource_arn):
        """Sets the resource_arn of this NotifyResourceDeploymentStatusChangeInput.


        :param resource_arn: The resource_arn of this NotifyResourceDeploymentStatusChangeInput.
        :type resource_arn: str
        """
        if resource_arn is None:
            raise ValueError("Invalid value for `resource_arn`, must not be `None`")

        self._resource_arn = resource_arn

    @property
    def status(self):
        """Gets the status of this NotifyResourceDeploymentStatusChangeInput.


        :return: The status of this NotifyResourceDeploymentStatusChangeInput.
        :rtype: ResourceDeploymentStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this NotifyResourceDeploymentStatusChangeInput.


        :param status: The status of this NotifyResourceDeploymentStatusChangeInput.
        :type status: ResourceDeploymentStatus
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this NotifyResourceDeploymentStatusChangeInput.


        :return: The status_message of this NotifyResourceDeploymentStatusChangeInput.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this NotifyResourceDeploymentStatusChangeInput.


        :param status_message: The status_message of this NotifyResourceDeploymentStatusChangeInput.
        :type status_message: str
        """

        self._status_message = status_message
