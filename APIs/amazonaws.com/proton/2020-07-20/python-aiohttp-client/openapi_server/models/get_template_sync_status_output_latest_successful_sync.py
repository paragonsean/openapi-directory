# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_sync_attempt_initial_revision import ResourceSyncAttemptInitialRevision
from openapi_server.models.resource_sync_attempt_target_revision import ResourceSyncAttemptTargetRevision
from openapi_server.models.resource_sync_status import ResourceSyncStatus
from openapi_server import util


class GetTemplateSyncStatusOutputLatestSuccessfulSync(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, events: List=None, initial_revision: ResourceSyncAttemptInitialRevision=None, started_at: datetime=None, status: ResourceSyncStatus=None, target: str=None, target_revision: ResourceSyncAttemptTargetRevision=None):
        """GetTemplateSyncStatusOutputLatestSuccessfulSync - a model defined in OpenAPI

        :param events: The events of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        :param initial_revision: The initial_revision of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        :param started_at: The started_at of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        :param status: The status of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        :param target: The target of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        :param target_revision: The target_revision of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        """
        self.openapi_types = {
            'events': List,
            'initial_revision': ResourceSyncAttemptInitialRevision,
            'started_at': datetime,
            'status': ResourceSyncStatus,
            'target': str,
            'target_revision': ResourceSyncAttemptTargetRevision
        }

        self.attribute_map = {
            'events': 'events',
            'initial_revision': 'initialRevision',
            'started_at': 'startedAt',
            'status': 'status',
            'target': 'target',
            'target_revision': 'targetRevision'
        }

        self._events = events
        self._initial_revision = initial_revision
        self._started_at = started_at
        self._status = status
        self._target = target
        self._target_revision = target_revision

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetTemplateSyncStatusOutputLatestSuccessfulSync':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetTemplateSyncStatusOutput_latestSuccessfulSync of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def events(self):
        """Gets the events of this GetTemplateSyncStatusOutputLatestSuccessfulSync.


        :return: The events of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        :rtype: List
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this GetTemplateSyncStatusOutputLatestSuccessfulSync.


        :param events: The events of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        :type events: List
        """
        if events is None:
            raise ValueError("Invalid value for `events`, must not be `None`")

        self._events = events

    @property
    def initial_revision(self):
        """Gets the initial_revision of this GetTemplateSyncStatusOutputLatestSuccessfulSync.


        :return: The initial_revision of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        :rtype: ResourceSyncAttemptInitialRevision
        """
        return self._initial_revision

    @initial_revision.setter
    def initial_revision(self, initial_revision):
        """Sets the initial_revision of this GetTemplateSyncStatusOutputLatestSuccessfulSync.


        :param initial_revision: The initial_revision of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        :type initial_revision: ResourceSyncAttemptInitialRevision
        """
        if initial_revision is None:
            raise ValueError("Invalid value for `initial_revision`, must not be `None`")

        self._initial_revision = initial_revision

    @property
    def started_at(self):
        """Gets the started_at of this GetTemplateSyncStatusOutputLatestSuccessfulSync.


        :return: The started_at of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        :rtype: datetime
        """
        return self._started_at

    @started_at.setter
    def started_at(self, started_at):
        """Sets the started_at of this GetTemplateSyncStatusOutputLatestSuccessfulSync.


        :param started_at: The started_at of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        :type started_at: datetime
        """
        if started_at is None:
            raise ValueError("Invalid value for `started_at`, must not be `None`")

        self._started_at = started_at

    @property
    def status(self):
        """Gets the status of this GetTemplateSyncStatusOutputLatestSuccessfulSync.


        :return: The status of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        :rtype: ResourceSyncStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetTemplateSyncStatusOutputLatestSuccessfulSync.


        :param status: The status of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        :type status: ResourceSyncStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def target(self):
        """Gets the target of this GetTemplateSyncStatusOutputLatestSuccessfulSync.


        :return: The target of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this GetTemplateSyncStatusOutputLatestSuccessfulSync.


        :param target: The target of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        :type target: str
        """
        if target is None:
            raise ValueError("Invalid value for `target`, must not be `None`")

        self._target = target

    @property
    def target_revision(self):
        """Gets the target_revision of this GetTemplateSyncStatusOutputLatestSuccessfulSync.


        :return: The target_revision of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        :rtype: ResourceSyncAttemptTargetRevision
        """
        return self._target_revision

    @target_revision.setter
    def target_revision(self, target_revision):
        """Sets the target_revision of this GetTemplateSyncStatusOutputLatestSuccessfulSync.


        :param target_revision: The target_revision of this GetTemplateSyncStatusOutputLatestSuccessfulSync.
        :type target_revision: ResourceSyncAttemptTargetRevision
        """
        if target_revision is None:
            raise ValueError("Invalid value for `target_revision`, must not be `None`")

        self._target_revision = target_revision
