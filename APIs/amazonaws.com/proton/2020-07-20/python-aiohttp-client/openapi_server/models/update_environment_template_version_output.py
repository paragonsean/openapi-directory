# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_environment_template_version_output_environment_template_version import UpdateEnvironmentTemplateVersionOutputEnvironmentTemplateVersion
from openapi_server import util


class UpdateEnvironmentTemplateVersionOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, environment_template_version: UpdateEnvironmentTemplateVersionOutputEnvironmentTemplateVersion=None):
        """UpdateEnvironmentTemplateVersionOutput - a model defined in OpenAPI

        :param environment_template_version: The environment_template_version of this UpdateEnvironmentTemplateVersionOutput.
        """
        self.openapi_types = {
            'environment_template_version': UpdateEnvironmentTemplateVersionOutputEnvironmentTemplateVersion
        }

        self.attribute_map = {
            'environment_template_version': 'environmentTemplateVersion'
        }

        self._environment_template_version = environment_template_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateEnvironmentTemplateVersionOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateEnvironmentTemplateVersionOutput of this UpdateEnvironmentTemplateVersionOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def environment_template_version(self):
        """Gets the environment_template_version of this UpdateEnvironmentTemplateVersionOutput.


        :return: The environment_template_version of this UpdateEnvironmentTemplateVersionOutput.
        :rtype: UpdateEnvironmentTemplateVersionOutputEnvironmentTemplateVersion
        """
        return self._environment_template_version

    @environment_template_version.setter
    def environment_template_version(self, environment_template_version):
        """Sets the environment_template_version of this UpdateEnvironmentTemplateVersionOutput.


        :param environment_template_version: The environment_template_version of this UpdateEnvironmentTemplateVersionOutput.
        :type environment_template_version: UpdateEnvironmentTemplateVersionOutputEnvironmentTemplateVersion
        """
        if environment_template_version is None:
            raise ValueError("Invalid value for `environment_template_version`, must not be `None`")

        self._environment_template_version = environment_template_version
