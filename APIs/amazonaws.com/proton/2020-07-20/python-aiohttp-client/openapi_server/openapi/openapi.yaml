openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>This is the Proton Service API Reference. It provides descriptions,\
    \ syntax and usage examples for each of the <a href=\"https://docs.aws.amazon.com/proton/latest/APIReference/API_Operations.html\"\
    >actions</a> and <a href=\"https://docs.aws.amazon.com/proton/latest/APIReference/API_Types.html\"\
    >data types</a> for the Proton service.</p> <p>The documentation for each action\
    \ shows the Query API request parameters and the XML response.</p> <p>Alternatively,\
    \ you can use the Amazon Web Services CLI to access an API. For more information,\
    \ see the <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-welcome.html\"\
    >Amazon Web Services Command Line Interface User Guide</a>.</p> <p>The Proton\
    \ service is a two-pronged automation framework. Administrators create service\
    \ templates to provide standardized infrastructure and deployment tooling for\
    \ serverless and container based applications. Developers, in turn, select from\
    \ the available service templates to automate their application or service deployments.</p>\
    \ <p>Because administrators define the infrastructure and tooling that Proton\
    \ deploys and manages, they need permissions to use all of the listed API operations.</p>\
    \ <p>When developers select a specific infrastructure and tooling set, Proton\
    \ deploys their applications. To monitor their applications that are running on\
    \ Proton, developers need permissions to the service <i>create</i>, <i>list</i>,\
    \ <i>update</i> and <i>delete</i> API operations and the service instance <i>list</i>\
    \ and <i>update</i> API operations.</p> <p>To learn more about Proton, see the\
    \ <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/Welcome.html\"\
    >Proton User Guide</a>.</p> <p> <b>Ensuring Idempotency</b> </p> <p>When you make\
    \ a mutating API request, the request typically returns a result before the asynchronous\
    \ workflows of the operation are complete. Operations might also time out or encounter\
    \ other server issues before they're complete, even if the request already returned\
    \ a result. This might make it difficult to determine whether the request succeeded.\
    \ Moreover, you might need to retry the request multiple times to ensure that\
    \ the operation completes successfully. However, if the original request and the\
    \ subsequent retries are successful, the operation occurs multiple times. This\
    \ means that you might create more resources than you intended.</p> <p> <i>Idempotency</i>\
    \ ensures that an API request action completes no more than one time. With an\
    \ idempotent request, if the original request action completes successfully, any\
    \ subsequent retries complete successfully without performing any further actions.\
    \ However, the result might contain updated information, such as the current creation\
    \ status.</p> <p>The following lists of APIs are grouped according to methods\
    \ that ensure idempotency.</p> <p> <b>Idempotent create APIs with a client token</b>\
    \ </p> <p>The API actions in this list support idempotency with the use of a <i>client\
    \ token</i>. The corresponding Amazon Web Services CLI commands also support idempotency\
    \ using a client token. A client token is a unique, case-sensitive string of up\
    \ to 64 ASCII characters. To make an idempotent API request using one of these\
    \ actions, specify a client token in the request. We recommend that you <i>don't</i>\
    \ reuse the same client token for other API requests. If you donâ€™t provide a client\
    \ token for these APIs, a default client token is automatically provided by SDKs.</p>\
    \ <p>Given a request action that has succeeded:</p> <p>If you retry the request\
    \ using the same client token and the same parameters, the retry succeeds without\
    \ performing any further actions other than returning the original resource detail\
    \ data in the response.</p> <p>If you retry the request using the same client\
    \ token, but one or more of the parameters are different, the retry throws a <code>ValidationException</code>\
    \ with an <code>IdempotentParameterMismatch</code> error.</p> <p>Client tokens\
    \ expire eight hours after a request is made. If you retry the request with the\
    \ expired token, a new resource is created.</p> <p>If the original resource is\
    \ deleted and you retry the request, a new resource is created.</p> <p>Idempotent\
    \ create APIs with a client token:</p> <ul> <li> <p>CreateEnvironmentTemplateVersion</p>\
    \ </li> <li> <p>CreateServiceTemplateVersion</p> </li> <li> <p>CreateEnvironmentAccountConnection</p>\
    \ </li> </ul> <p> <b>Idempotent create APIs</b> </p> <p>Given a request action\
    \ that has succeeded:</p> <p>If you retry the request with an API from this group,\
    \ and the original resource <i>hasn't</i> been modified, the retry succeeds without\
    \ performing any further actions other than returning the original resource detail\
    \ data in the response.</p> <p>If the original resource has been modified, the\
    \ retry throws a <code>ConflictException</code>.</p> <p>If you retry with different\
    \ input parameters, the retry throws a <code>ValidationException</code> with an\
    \ <code>IdempotentParameterMismatch</code> error.</p> <p>Idempotent create APIs:</p>\
    \ <ul> <li> <p>CreateEnvironmentTemplate</p> </li> <li> <p>CreateServiceTemplate</p>\
    \ </li> <li> <p>CreateEnvironment</p> </li> <li> <p>CreateService</p> </li> </ul>\
    \ <p> <b>Idempotent delete APIs</b> </p> <p>Given a request action that has succeeded:</p>\
    \ <p>When you retry the request with an API from this group and the resource was\
    \ deleted, its metadata is returned in the response.</p> <p>If you retry and the\
    \ resource doesn't exist, the response is empty.</p> <p>In both cases, the retry\
    \ succeeds.</p> <p>Idempotent delete APIs:</p> <ul> <li> <p>DeleteEnvironmentTemplate</p>\
    \ </li> <li> <p>DeleteEnvironmentTemplateVersion</p> </li> <li> <p>DeleteServiceTemplate</p>\
    \ </li> <li> <p>DeleteServiceTemplateVersion</p> </li> <li> <p>DeleteEnvironmentAccountConnection</p>\
    \ </li> </ul> <p> <b>Asynchronous idempotent delete APIs</b> </p> <p>Given a request\
    \ action that has succeeded:</p> <p>If you retry the request with an API from\
    \ this group, if the original request delete operation status is <code>DELETE_IN_PROGRESS</code>,\
    \ the retry returns the resource detail data in the response without performing\
    \ any further actions.</p> <p>If the original request delete operation is complete,\
    \ a retry returns an empty response.</p> <p>Asynchronous idempotent delete APIs:</p>\
    \ <ul> <li> <p>DeleteEnvironment</p> </li> <li> <p>DeleteService</p> </li> </ul>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Proton
  version: 2020-07-20
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: proton
  x-aws-signingName: proton
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/proton-2020-07-20.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/proton/
servers:
- description: The AWS Proton multi-region endpoint
  url: "http://proton.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Proton multi-region endpoint
  url: "https://proton.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Proton endpoint for China (Beijing) and China (Ningxia)
  url: "http://proton.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS Proton endpoint for China (Beijing) and China (Ningxia)
  url: "https://proton.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=AwsProton20200720.AcceptEnvironmentAccountConnection:
    post:
      description: "<p>In a management account, an environment account connection\
        \ request is accepted. When the environment account connection request is\
        \ accepted, Proton can use the associated IAM role to provision environment\
        \ infrastructure resources in the associated environment account.</p> <p>For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html\"\
        >Environment account connections</a> in the <i>Proton User guide</i>.</p>"
      operationId: accept_environment_account_connection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.AcceptEnvironmentAccountConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptEnvironmentAccountConnectionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptEnvironmentAccountConnectionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.CancelComponentDeployment:
    post:
      description: "<p>Attempts to cancel a component deployment (for a component\
        \ that is in the <code>IN_PROGRESS</code> deployment status).</p> <p>For more\
        \ information about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
        >Proton components</a> in the <i>Proton User Guide</i>.</p>"
      operationId: cancel_component_deployment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.CancelComponentDeployment
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelComponentDeploymentInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelComponentDeploymentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.CancelEnvironmentDeployment:
    post:
      description: "<p>Attempts to cancel an environment deployment on an <a>UpdateEnvironment</a>\
        \ action, if the deployment is <code>IN_PROGRESS</code>. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-env-update.html\"\
        >Update an environment</a> in the <i>Proton User guide</i>.</p> <p>The following\
        \ list includes potential cancellation scenarios.</p> <ul> <li> <p>If the\
        \ cancellation attempt succeeds, the resulting deployment state is <code>CANCELLED</code>.</p>\
        \ </li> <li> <p>If the cancellation attempt fails, the resulting deployment\
        \ state is <code>FAILED</code>.</p> </li> <li> <p>If the current <a>UpdateEnvironment</a>\
        \ action succeeds before the cancellation attempt starts, the resulting deployment\
        \ state is <code>SUCCEEDED</code> and the cancellation attempt has no effect.</p>\
        \ </li> </ul>"
      operationId: cancel_environment_deployment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.CancelEnvironmentDeployment
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelEnvironmentDeploymentInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelEnvironmentDeploymentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.CancelServiceInstanceDeployment:
    post:
      description: "<p>Attempts to cancel a service instance deployment on an <a>UpdateServiceInstance</a>\
        \ action, if the deployment is <code>IN_PROGRESS</code>. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-svc-instance-update.html\"\
        >Update a service instance</a> in the <i>Proton User guide</i>.</p> <p>The\
        \ following list includes potential cancellation scenarios.</p> <ul> <li>\
        \ <p>If the cancellation attempt succeeds, the resulting deployment state\
        \ is <code>CANCELLED</code>.</p> </li> <li> <p>If the cancellation attempt\
        \ fails, the resulting deployment state is <code>FAILED</code>.</p> </li>\
        \ <li> <p>If the current <a>UpdateServiceInstance</a> action succeeds before\
        \ the cancellation attempt starts, the resulting deployment state is <code>SUCCEEDED</code>\
        \ and the cancellation attempt has no effect.</p> </li> </ul>"
      operationId: cancel_service_instance_deployment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.CancelServiceInstanceDeployment
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelServiceInstanceDeploymentInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelServiceInstanceDeploymentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.CancelServicePipelineDeployment:
    post:
      description: "<p>Attempts to cancel a service pipeline deployment on an <a>UpdateServicePipeline</a>\
        \ action, if the deployment is <code>IN_PROGRESS</code>. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-svc-pipeline-update.html\"\
        >Update a service pipeline</a> in the <i>Proton User guide</i>.</p> <p>The\
        \ following list includes potential cancellation scenarios.</p> <ul> <li>\
        \ <p>If the cancellation attempt succeeds, the resulting deployment state\
        \ is <code>CANCELLED</code>.</p> </li> <li> <p>If the cancellation attempt\
        \ fails, the resulting deployment state is <code>FAILED</code>.</p> </li>\
        \ <li> <p>If the current <a>UpdateServicePipeline</a> action succeeds before\
        \ the cancellation attempt starts, the resulting deployment state is <code>SUCCEEDED</code>\
        \ and the cancellation attempt has no effect.</p> </li> </ul>"
      operationId: cancel_service_pipeline_deployment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.CancelServicePipelineDeployment
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelServicePipelineDeploymentInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelServicePipelineDeploymentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.CreateComponent:
    post:
      description: "<p>Create an Proton component. A component is an infrastructure\
        \ extension for a service instance.</p> <p>For more information about components,\
        \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
        >Proton components</a> in the <i>Proton User Guide</i>.</p>"
      operationId: create_component
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.CreateComponent
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateComponentInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateComponentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.CreateEnvironment:
    post:
      description: "<p>Deploy a new environment. An Proton environment is created\
        \ from an environment template that defines infrastructure and resources that\
        \ can be shared across services.</p> <p class=\"title\"> <b>You can provision\
        \ environments using the following methods:</b> </p> <ul> <li> <p>Amazon Web\
        \ Services-managed provisioning: Proton makes direct calls to provision your\
        \ resources.</p> </li> <li> <p>Self-managed provisioning: Proton makes pull\
        \ requests on your repository to provide compiled infrastructure as code (IaC)\
        \ files that your IaC engine uses to provision resources.</p> </li> </ul>\
        \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-environments.html\"\
        >Environments</a> and <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-works-prov-methods.html\"\
        >Provisioning methods</a> in the <i>Proton User Guide</i>.</p>"
      operationId: create_environment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.CreateEnvironment
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEnvironmentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.CreateEnvironmentAccountConnection:
    post:
      description: "<p>Create an environment account connection in an environment\
        \ account so that environment infrastructure resources can be provisioned\
        \ in the environment account from a management account.</p> <p>An environment\
        \ account connection is a secure bi-directional connection between a <i>management\
        \ account</i> and an <i>environment account</i> that maintains authorization\
        \ and permissions. For more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html\"\
        >Environment account connections</a> in the <i>Proton User guide</i>.</p>"
      operationId: create_environment_account_connection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.CreateEnvironmentAccountConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentAccountConnectionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEnvironmentAccountConnectionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.CreateEnvironmentTemplate:
    post:
      description: "<p>Create an environment template for Proton. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-templates.html\"\
        >Environment Templates</a> in the <i>Proton User Guide</i>.</p> <p>You can\
        \ create an environment template in one of the two following ways:</p> <ul>\
        \ <li> <p>Register and publish a <i>standard</i> environment template that\
        \ instructs Proton to deploy and manage environment infrastructure.</p> </li>\
        \ <li> <p>Register and publish a <i>customer managed</i> environment template\
        \ that connects Proton to your existing provisioned infrastructure that you\
        \ manage. Proton <i>doesn't</i> manage your existing provisioned infrastructure.\
        \ To create an environment template for customer provisioned and managed infrastructure,\
        \ include the <code>provisioning</code> parameter and set the value to <code>CUSTOMER_MANAGED</code>.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/template-create.html\"\
        >Register and publish an environment template</a> in the <i>Proton User Guide</i>.</p>\
        \ </li> </ul>"
      operationId: create_environment_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.CreateEnvironmentTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentTemplateInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEnvironmentTemplateOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.CreateEnvironmentTemplateVersion:
    post:
      description: Create a new major or minor version of an environment template.
        A major version of an environment template is a version that <i>isn't</i>
        backwards compatible. A minor version of an environment template is a version
        that's backwards compatible within its major version.
      operationId: create_environment_template_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.CreateEnvironmentTemplateVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentTemplateVersionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEnvironmentTemplateVersionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.CreateRepository:
    post:
      description: "<p>Create and register a link to a repository. Proton uses the\
        \ link to repeatedly access the repository, to either push to it (self-managed\
        \ provisioning) or pull from it (template sync). You can share a linked repository\
        \ across multiple resources (like environments using self-managed provisioning,\
        \ or synced templates). When you create a repository link, Proton creates\
        \ a <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/using-service-linked-roles.html\"\
        >service-linked role</a> for you.</p> <p>For more information, see <a href=\"\
        https://docs.aws.amazon.com/proton/latest/userguide/ag-works-prov-methods.html#ag-works-prov-methods-self\"\
        >Self-managed provisioning</a>, <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-template-authoring.html#ag-template-bundles\"\
        >Template bundles</a>, and <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-template-sync-configs.html\"\
        >Template sync configurations</a> in the <i>Proton User Guide</i>.</p>"
      operationId: create_repository
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.CreateRepository
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRepositoryInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRepositoryOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.CreateService:
    post:
      description: "Create an Proton service. An Proton service is an instantiation\
        \ of a service template and often includes several service instances and pipeline.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-services.html\"\
        >Services</a> in the <i>Proton User Guide</i>."
      operationId: create_service
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.CreateService
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.CreateServiceInstance:
    post:
      description: Create a service instance.
      operationId: create_service_instance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.CreateServiceInstance
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceInstanceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceInstanceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.CreateServiceSyncConfig:
    post:
      description: Create the Proton Ops configuration file.
      operationId: create_service_sync_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.CreateServiceSyncConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceSyncConfigInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceSyncConfigOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.CreateServiceTemplate:
    post:
      description: "Create a service template. The administrator creates a service\
        \ template to define standardized infrastructure and an optional CI/CD service\
        \ pipeline. Developers, in turn, select the service template from Proton.\
        \ If the selected service template includes a service pipeline definition,\
        \ they provide a link to their source code repository. Proton then deploys\
        \ and manages the infrastructure defined by the selected service template.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-templates.html\"\
        >Proton templates</a> in the <i>Proton User Guide</i>."
      operationId: create_service_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.CreateServiceTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceTemplateInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceTemplateOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.CreateServiceTemplateVersion:
    post:
      description: Create a new major or minor version of a service template. A major
        version of a service template is a version that <i>isn't</i> backward compatible.
        A minor version of a service template is a version that's backward compatible
        within its major version.
      operationId: create_service_template_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.CreateServiceTemplateVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceTemplateVersionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceTemplateVersionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.CreateTemplateSyncConfig:
    post:
      description: "<p>Set up a template to create new template versions automatically\
        \ by tracking a linked repository. A linked repository is a repository that\
        \ has been registered with Proton. For more information, see <a>CreateRepository</a>.</p>\
        \ <p>When a commit is pushed to your linked repository, Proton checks for\
        \ changes to your repository template bundles. If it detects a template bundle\
        \ change, a new major or minor version of its template is created, if the\
        \ version doesnâ€™t already exist. For more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-template-sync-configs.html\"\
        >Template sync configurations</a> in the <i>Proton User Guide</i>.</p>"
      operationId: create_template_sync_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.CreateTemplateSyncConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTemplateSyncConfigInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTemplateSyncConfigOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.DeleteComponent:
    post:
      description: "<p>Delete an Proton component resource.</p> <p>For more information\
        \ about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
        >Proton components</a> in the <i>Proton User Guide</i>.</p>"
      operationId: delete_component
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.DeleteComponent
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteComponentInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteComponentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.DeleteDeployment:
    post:
      description: Delete the deployment.
      operationId: delete_deployment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.DeleteDeployment
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDeploymentInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDeploymentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.DeleteEnvironment:
    post:
      description: Delete an environment.
      operationId: delete_environment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.DeleteEnvironment
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEnvironmentInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEnvironmentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.DeleteEnvironmentAccountConnection:
    post:
      description: "<p>In an environment account, delete an environment account connection.</p>\
        \ <p>After you delete an environment account connection thatâ€™s in use by an\
        \ Proton environment, Proton <i>canâ€™t</i> manage the environment infrastructure\
        \ resources until a new environment account connection is accepted for the\
        \ environment account and associated environment. You're responsible for cleaning\
        \ up provisioned resources that remain without an environment connection.</p>\
        \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html\"\
        >Environment account connections</a> in the <i>Proton User guide</i>.</p>"
      operationId: delete_environment_account_connection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.DeleteEnvironmentAccountConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEnvironmentAccountConnectionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEnvironmentAccountConnectionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.DeleteEnvironmentTemplate:
    post:
      description: "If no other major or minor versions of an environment template\
        \ exist, delete the environment template."
      operationId: delete_environment_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.DeleteEnvironmentTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEnvironmentTemplateInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEnvironmentTemplateOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.DeleteEnvironmentTemplateVersion:
    post:
      description: "<p>If no other minor versions of an environment template exist,\
        \ delete a major version of the environment template if it's not the <code>Recommended</code>\
        \ version. Delete the <code>Recommended</code> version of the environment\
        \ template if no other major versions or minor versions of the environment\
        \ template exist. A major version of an environment template is a version\
        \ that's not backward compatible.</p> <p>Delete a minor version of an environment\
        \ template if it <i>isn't</i> the <code>Recommended</code> version. Delete\
        \ a <code>Recommended</code> minor version of the environment template if\
        \ no other minor versions of the environment template exist. A minor version\
        \ of an environment template is a version that's backward compatible.</p>"
      operationId: delete_environment_template_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.DeleteEnvironmentTemplateVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEnvironmentTemplateVersionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEnvironmentTemplateVersionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.DeleteRepository:
    post:
      description: De-register and unlink your repository.
      operationId: delete_repository
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.DeleteRepository
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRepositoryInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRepositoryOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.DeleteService:
    post:
      description: "<p>Delete a service, with its instances and pipeline.</p> <note>\
        \ <p>You can't delete a service if it has any service instances that have\
        \ components attached to them.</p> <p>For more information about components,\
        \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
        >Proton components</a> in the <i>Proton User Guide</i>.</p> </note>"
      operationId: delete_service
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.DeleteService
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteServiceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.DeleteServiceSyncConfig:
    post:
      description: Delete the Proton Ops file.
      operationId: delete_service_sync_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.DeleteServiceSyncConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteServiceSyncConfigInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceSyncConfigOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.DeleteServiceTemplate:
    post:
      description: "If no other major or minor versions of the service template exist,\
        \ delete the service template."
      operationId: delete_service_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.DeleteServiceTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteServiceTemplateInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceTemplateOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.DeleteServiceTemplateVersion:
    post:
      description: "<p>If no other minor versions of a service template exist, delete\
        \ a major version of the service template if it's not the <code>Recommended</code>\
        \ version. Delete the <code>Recommended</code> version of the service template\
        \ if no other major versions or minor versions of the service template exist.\
        \ A major version of a service template is a version that <i>isn't</i> backwards\
        \ compatible.</p> <p>Delete a minor version of a service template if it's\
        \ not the <code>Recommended</code> version. Delete a <code>Recommended</code>\
        \ minor version of the service template if no other minor versions of the\
        \ service template exist. A minor version of a service template is a version\
        \ that's backwards compatible.</p>"
      operationId: delete_service_template_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.DeleteServiceTemplateVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteServiceTemplateVersionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceTemplateVersionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.DeleteTemplateSyncConfig:
    post:
      description: Delete a template sync configuration.
      operationId: delete_template_sync_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.DeleteTemplateSyncConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTemplateSyncConfigInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTemplateSyncConfigOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetAccountSettings:
    post:
      description: Get detail data for Proton account-wide settings.
      operationId: get_account_settings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetAccountSettings
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccountSettingsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountSettingsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetComponent:
    post:
      description: "<p>Get detailed data for a component.</p> <p>For more information\
        \ about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
        >Proton components</a> in the <i>Proton User Guide</i>.</p>"
      operationId: get_component
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetComponent
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetComponentInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetComponentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetDeployment:
    post:
      description: Get detailed data for a deployment.
      operationId: get_deployment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetDeployment
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDeploymentInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeploymentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetEnvironment:
    post:
      description: Get detailed data for an environment.
      operationId: get_environment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetEnvironment
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEnvironmentInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEnvironmentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetEnvironmentAccountConnection:
    post:
      description: "<p>In an environment account, get the detailed data for an environment\
        \ account connection.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html\"\
        >Environment account connections</a> in the <i>Proton User guide</i>.</p>"
      operationId: get_environment_account_connection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetEnvironmentAccountConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEnvironmentAccountConnectionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEnvironmentAccountConnectionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetEnvironmentTemplate:
    post:
      description: Get detailed data for an environment template.
      operationId: get_environment_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetEnvironmentTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEnvironmentTemplateInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEnvironmentTemplateOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetEnvironmentTemplateVersion:
    post:
      description: Get detailed data for a major or minor version of an environment
        template.
      operationId: get_environment_template_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetEnvironmentTemplateVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEnvironmentTemplateVersionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEnvironmentTemplateVersionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetRepository:
    post:
      description: Get detail data for a linked repository.
      operationId: get_repository
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetRepository
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRepositoryInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRepositoryOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetRepositorySyncStatus:
    post:
      description: "<p>Get the sync status of a repository used for Proton template\
        \ sync. For more information about template sync, see .</p> <note> <p>A repository\
        \ sync status isn't tied to the Proton Repository resource (or any other Proton\
        \ resource). Therefore, tags on an Proton Repository resource have no effect\
        \ on this action. Specifically, you can't use these tags to control access\
        \ to this action using Attribute-based access control (ABAC).</p> <p>For more\
        \ information about ABAC, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/security_iam_service-with-iam.html#security_iam_service-with-iam-tags\"\
        >ABAC</a> in the <i>Proton User Guide</i>.</p> </note>"
      operationId: get_repository_sync_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetRepositorySyncStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRepositorySyncStatusInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRepositorySyncStatusOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetResourcesSummary:
    post:
      description: "<p>Get counts of Proton resources.</p> <p>For infrastructure-provisioning\
        \ resources (environments, services, service instances, pipelines), the action\
        \ returns staleness counts. A resource is stale when it's behind the recommended\
        \ version of the Proton template that it uses and it needs an update to become\
        \ current.</p> <p>The action returns staleness counts (counts of resources\
        \ that are up-to-date, behind a template major version, or behind a template\
        \ minor version), the total number of resources, and the number of resources\
        \ that are in a failed state, grouped by resource type. Components, environments,\
        \ and service templates return less information - see the <code>components</code>,\
        \ <code>environments</code>, and <code>serviceTemplates</code> field descriptions.</p>\
        \ <p>For context, the action also returns the total number of each type of\
        \ Proton template in the Amazon Web Services account.</p> <p>For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/monitoring-dashboard.html\"\
        >Proton dashboard</a> in the <i>Proton User Guide</i>.</p>"
      operationId: get_resources_summary
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetResourcesSummary
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResourcesSummaryInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcesSummaryOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetService:
    post:
      description: Get detailed data for a service.
      operationId: get_service
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetService
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetServiceInstance:
    post:
      description: Get detailed data for a service instance. A service instance is
        an instantiation of service template and it runs in a specific environment.
      operationId: get_service_instance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetServiceInstance
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceInstanceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceInstanceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetServiceInstanceSyncStatus:
    post:
      description: Get the status of the synced service instance.
      operationId: get_service_instance_sync_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetServiceInstanceSyncStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceInstanceSyncStatusInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceInstanceSyncStatusOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetServiceSyncBlockerSummary:
    post:
      description: Get detailed data for the service sync blocker summary.
      operationId: get_service_sync_blocker_summary
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetServiceSyncBlockerSummary
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceSyncBlockerSummaryInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceSyncBlockerSummaryOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetServiceSyncConfig:
    post:
      description: Get detailed information for the service sync configuration.
      operationId: get_service_sync_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetServiceSyncConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceSyncConfigInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceSyncConfigOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetServiceTemplate:
    post:
      description: Get detailed data for a service template.
      operationId: get_service_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetServiceTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceTemplateInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceTemplateOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetServiceTemplateVersion:
    post:
      description: Get detailed data for a major or minor version of a service template.
      operationId: get_service_template_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetServiceTemplateVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceTemplateVersionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceTemplateVersionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetTemplateSyncConfig:
    post:
      description: Get detail data for a template sync configuration.
      operationId: get_template_sync_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetTemplateSyncConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTemplateSyncConfigInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplateSyncConfigOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.GetTemplateSyncStatus:
    post:
      description: Get the status of a template sync.
      operationId: get_template_sync_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.GetTemplateSyncStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTemplateSyncStatusInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplateSyncStatusOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListComponentOutputs:
    post:
      description: "<p>Get a list of component Infrastructure as Code (IaC) outputs.</p>\
        \ <p>For more information about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
        >Proton components</a> in the <i>Proton User Guide</i>.</p>"
      operationId: list_component_outputs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListComponentOutputs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListComponentOutputsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListComponentOutputsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListComponentProvisionedResources:
    post:
      description: "<p>List provisioned resources for a component with details.</p>\
        \ <p>For more information about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
        >Proton components</a> in the <i>Proton User Guide</i>.</p>"
      operationId: list_component_provisioned_resources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListComponentProvisionedResources
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListComponentProvisionedResourcesInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListComponentProvisionedResourcesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListComponents:
    post:
      description: "<p>List components with summary data. You can filter the result\
        \ list by environment, service, or a single service instance.</p> <p>For more\
        \ information about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
        >Proton components</a> in the <i>Proton User Guide</i>.</p>"
      operationId: list_components
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListComponents
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListComponentsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListComponentsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListDeployments:
    post:
      description: "List deployments. You can filter the result list by environment,\
        \ service, or a single service instance."
      operationId: list_deployments
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListDeployments
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDeploymentsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeploymentsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListEnvironmentAccountConnections:
    post:
      description: "<p>View a list of environment account connections.</p> <p>For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html\"\
        >Environment account connections</a> in the <i>Proton User guide</i>.</p>"
      operationId: list_environment_account_connections
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListEnvironmentAccountConnections
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEnvironmentAccountConnectionsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentAccountConnectionsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListEnvironmentOutputs:
    post:
      description: List the infrastructure as code outputs for your environment.
      operationId: list_environment_outputs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListEnvironmentOutputs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEnvironmentOutputsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentOutputsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListEnvironmentProvisionedResources:
    post:
      description: List the provisioned resources for your environment.
      operationId: list_environment_provisioned_resources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListEnvironmentProvisionedResources
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEnvironmentProvisionedResourcesInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentProvisionedResourcesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListEnvironmentTemplateVersions:
    post:
      description: List major or minor versions of an environment template with detail
        data.
      operationId: list_environment_template_versions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListEnvironmentTemplateVersions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEnvironmentTemplateVersionsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentTemplateVersionsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListEnvironmentTemplates:
    post:
      description: List environment templates.
      operationId: list_environment_templates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListEnvironmentTemplates
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEnvironmentTemplatesInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentTemplatesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListEnvironments:
    post:
      description: List environments with detail data summaries.
      operationId: list_environments
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListEnvironments
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEnvironmentsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListRepositories:
    post:
      description: List linked repositories with detail data.
      operationId: list_repositories
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListRepositories
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRepositoriesInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositoriesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListRepositorySyncDefinitions:
    post:
      description: List repository sync definitions with detail data.
      operationId: list_repository_sync_definitions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListRepositorySyncDefinitions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRepositorySyncDefinitionsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositorySyncDefinitionsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListServiceInstanceOutputs:
    post:
      description: Get a list service of instance Infrastructure as Code (IaC) outputs.
      operationId: list_service_instance_outputs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListServiceInstanceOutputs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServiceInstanceOutputsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceInstanceOutputsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListServiceInstanceProvisionedResources:
    post:
      description: List provisioned resources for a service instance with details.
      operationId: list_service_instance_provisioned_resources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListServiceInstanceProvisionedResources
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServiceInstanceProvisionedResourcesInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceInstanceProvisionedResourcesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListServiceInstances:
    post:
      description: List service instances with summary data. This action lists service
        instances of all services in the Amazon Web Services account.
      operationId: list_service_instances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListServiceInstances
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServiceInstancesInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceInstancesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListServicePipelineOutputs:
    post:
      description: Get a list of service pipeline Infrastructure as Code (IaC) outputs.
      operationId: list_service_pipeline_outputs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListServicePipelineOutputs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServicePipelineOutputsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServicePipelineOutputsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListServicePipelineProvisionedResources:
    post:
      description: List provisioned resources for a service and pipeline with details.
      operationId: list_service_pipeline_provisioned_resources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListServicePipelineProvisionedResources
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServicePipelineProvisionedResourcesInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServicePipelineProvisionedResourcesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListServiceTemplateVersions:
    post:
      description: List major or minor versions of a service template with detail
        data.
      operationId: list_service_template_versions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListServiceTemplateVersions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServiceTemplateVersionsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceTemplateVersionsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListServiceTemplates:
    post:
      description: List service templates with detail data.
      operationId: list_service_templates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListServiceTemplates
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServiceTemplatesInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceTemplatesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListServices:
    post:
      description: List services with summaries of detail data.
      operationId: list_services
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListServices
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServicesInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServicesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.ListTagsForResource:
    post:
      description: "List tags for a resource. For more information, see <a href=\"\
        https://docs.aws.amazon.com/proton/latest/userguide/resources.html\">Proton\
        \ resources and tagging</a> in the <i>Proton User Guide</i>."
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.NotifyResourceDeploymentStatusChange:
    post:
      description: "<p>Notify Proton of status changes to a provisioned resource when\
        \ you use self-managed provisioning.</p> <p>For more information, see <a href=\"\
        https://docs.aws.amazon.com/proton/latest/userguide/ag-works-prov-methods.html#ag-works-prov-methods-self\"\
        >Self-managed provisioning</a> in the <i>Proton User Guide</i>.</p>"
      operationId: notify_resource_deployment_status_change
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.NotifyResourceDeploymentStatusChange
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyResourceDeploymentStatusChangeInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyResourceDeploymentStatusChangeOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.RejectEnvironmentAccountConnection:
    post:
      description: "<p>In a management account, reject an environment account connection\
        \ from another environment account.</p> <p>After you reject an environment\
        \ account connection request, you <i>can't</i> accept or use the rejected\
        \ environment account connection.</p> <p>You <i>canâ€™t</i> reject an environment\
        \ account connection that's connected to an environment.</p> <p>For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html\"\
        >Environment account connections</a> in the <i>Proton User guide</i>.</p>"
      operationId: reject_environment_account_connection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.RejectEnvironmentAccountConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectEnvironmentAccountConnectionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectEnvironmentAccountConnectionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.TagResource:
    post:
      description: "<p>Tag a resource. A tag is a key-value pair of metadata that\
        \ you associate with an Proton resource.</p> <p>For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/resources.html\"\
        >Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>"
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.UntagResource:
    post:
      description: "<p>Remove a customer tag from a resource. A tag is a key-value\
        \ pair of metadata associated with an Proton resource.</p> <p>For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/resources.html\"\
        >Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>"
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.UpdateAccountSettings:
    post:
      description: Update Proton settings that are used for multiple services in the
        Amazon Web Services account.
      operationId: update_account_settings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.UpdateAccountSettings
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountSettingsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountSettingsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.UpdateComponent:
    post:
      description: "<p>Update a component.</p> <p>There are a few modes for updating\
        \ a component. The <code>deploymentType</code> field defines the mode.</p>\
        \ <note> <p>You can't update a component while its deployment status, or the\
        \ deployment status of a service instance attached to it, is <code>IN_PROGRESS</code>.</p>\
        \ </note> <p>For more information about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
        >Proton components</a> in the <i>Proton User Guide</i>.</p>"
      operationId: update_component
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.UpdateComponent
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateComponentInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateComponentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.UpdateEnvironment:
    post:
      description: "<p>Update an environment.</p> <p>If the environment is associated\
        \ with an environment account connection, <i>don't</i> update or include the\
        \ <code>protonServiceRoleArn</code> and <code>provisioningRepository</code>\
        \ parameter to update or connect to an environment account connection.</p>\
        \ <p>You can only update to a new environment account connection if that connection\
        \ was created in the same environment account that the current environment\
        \ account connection was created in. The account connection must also be associated\
        \ with the current environment.</p> <p>If the environment <i>isn't</i> associated\
        \ with an environment account connection, <i>don't</i> update or include the\
        \ <code>environmentAccountConnectionId</code> parameter. You <i>can't</i>\
        \ update or connect the environment to an environment account connection if\
        \ it <i>isn't</i> already associated with an environment connection.</p> <p>You\
        \ can update either the <code>environmentAccountConnectionId</code> or <code>protonServiceRoleArn</code>\
        \ parameter and value. You canâ€™t update both.</p> <p>If the environment was\
        \ configured for Amazon Web Services-managed provisioning, omit the <code>provisioningRepository</code>\
        \ parameter.</p> <p>If the environment was configured for self-managed provisioning,\
        \ specify the <code>provisioningRepository</code> parameter and omit the <code>protonServiceRoleArn</code>\
        \ and <code>environmentAccountConnectionId</code> parameters.</p> <p>For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-environments.html\"\
        >Environments</a> and <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-works-prov-methods.html\"\
        >Provisioning methods</a> in the <i>Proton User Guide</i>.</p> <p>There are\
        \ four modes for updating an environment. The <code>deploymentType</code>\
        \ field defines the mode.</p> <dl> <dt/> <dd> <p> <code>NONE</code> </p> <p>In\
        \ this mode, a deployment <i>doesn't</i> occur. Only the requested metadata\
        \ parameters are updated.</p> </dd> <dt/> <dd> <p> <code>CURRENT_VERSION</code>\
        \ </p> <p>In this mode, the environment is deployed and updated with the new\
        \ spec that you provide. Only requested parameters are updated. <i>Donâ€™t</i>\
        \ include minor or major version parameters when you use this <code>deployment-type</code>.</p>\
        \ </dd> <dt/> <dd> <p> <code>MINOR_VERSION</code> </p> <p>In this mode, the\
        \ environment is deployed and updated with the published, recommended (latest)\
        \ minor version of the current major version in use, by default. You can also\
        \ specify a different minor version of the current major version in use.</p>\
        \ </dd> <dt/> <dd> <p> <code>MAJOR_VERSION</code> </p> <p>In this mode, the\
        \ environment is deployed and updated with the published, recommended (latest)\
        \ major and minor version of the current template, by default. You can also\
        \ specify a different major version that's higher than the major version in\
        \ use and a minor version.</p> </dd> </dl>"
      operationId: update_environment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.UpdateEnvironment
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironmentInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEnvironmentOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.UpdateEnvironmentAccountConnection:
    post:
      description: "<p>In an environment account, update an environment account connection\
        \ to use a new IAM role.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html\"\
        >Environment account connections</a> in the <i>Proton User guide</i>.</p>"
      operationId: update_environment_account_connection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.UpdateEnvironmentAccountConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironmentAccountConnectionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEnvironmentAccountConnectionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.UpdateEnvironmentTemplate:
    post:
      description: Update an environment template.
      operationId: update_environment_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.UpdateEnvironmentTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironmentTemplateInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEnvironmentTemplateOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.UpdateEnvironmentTemplateVersion:
    post:
      description: Update a major or minor version of an environment template.
      operationId: update_environment_template_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.UpdateEnvironmentTemplateVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironmentTemplateVersionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEnvironmentTemplateVersionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.UpdateService:
    post:
      description: "<p>Edit a service description or use a spec to add and delete\
        \ service instances.</p> <note> <p>Existing service instances and the service\
        \ pipeline <i>can't</i> be edited using this API. They can only be deleted.</p>\
        \ </note> <p>Use the <code>description</code> parameter to modify the description.</p>\
        \ <p>Edit the <code>spec</code> parameter to add or delete instances.</p>\
        \ <note> <p>You can't delete a service instance (remove it from the spec)\
        \ if it has an attached component.</p> <p>For more information about components,\
        \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
        >Proton components</a> in the <i>Proton User Guide</i>.</p> </note>"
      operationId: update_service
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.UpdateService
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.UpdateServiceInstance:
    post:
      description: "<p>Update a service instance.</p> <p>There are a few modes for\
        \ updating a service instance. The <code>deploymentType</code> field defines\
        \ the mode.</p> <note> <p>You can't update a service instance while its deployment\
        \ status, or the deployment status of a component attached to it, is <code>IN_PROGRESS</code>.</p>\
        \ <p>For more information about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
        >Proton components</a> in the <i>Proton User Guide</i>.</p> </note>"
      operationId: update_service_instance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.UpdateServiceInstance
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceInstanceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceInstanceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.UpdateServicePipeline:
    post:
      description: "<p>Update the service pipeline.</p> <p>There are four modes for\
        \ updating a service pipeline. The <code>deploymentType</code> field defines\
        \ the mode.</p> <dl> <dt/> <dd> <p> <code>NONE</code> </p> <p>In this mode,\
        \ a deployment <i>doesn't</i> occur. Only the requested metadata parameters\
        \ are updated.</p> </dd> <dt/> <dd> <p> <code>CURRENT_VERSION</code> </p>\
        \ <p>In this mode, the service pipeline is deployed and updated with the new\
        \ spec that you provide. Only requested parameters are updated. <i>Donâ€™t</i>\
        \ include major or minor version parameters when you use this <code>deployment-type</code>.</p>\
        \ </dd> <dt/> <dd> <p> <code>MINOR_VERSION</code> </p> <p>In this mode, the\
        \ service pipeline is deployed and updated with the published, recommended\
        \ (latest) minor version of the current major version in use, by default.\
        \ You can specify a different minor version of the current major version in\
        \ use.</p> </dd> <dt/> <dd> <p> <code>MAJOR_VERSION</code> </p> <p>In this\
        \ mode, the service pipeline is deployed and updated with the published, recommended\
        \ (latest) major and minor version of the current template by default. You\
        \ can specify a different major version that's higher than the major version\
        \ in use and a minor version.</p> </dd> </dl>"
      operationId: update_service_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.UpdateServicePipeline
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServicePipelineInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServicePipelineOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.UpdateServiceSyncBlocker:
    post:
      description: Update the service sync blocker by resolving it.
      operationId: update_service_sync_blocker
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.UpdateServiceSyncBlocker
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceSyncBlockerInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceSyncBlockerOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.UpdateServiceSyncConfig:
    post:
      description: Update the Proton Ops config file.
      operationId: update_service_sync_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.UpdateServiceSyncConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceSyncConfigInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceSyncConfigOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.UpdateServiceTemplate:
    post:
      description: Update a service template.
      operationId: update_service_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.UpdateServiceTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceTemplateInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceTemplateOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.UpdateServiceTemplateVersion:
    post:
      description: Update a major or minor version of a service template.
      operationId: update_service_template_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.UpdateServiceTemplateVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceTemplateVersionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceTemplateVersionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AwsProton20200720.UpdateTemplateSyncConfig:
    post:
      description: "Update template sync configuration parameters, except for the\
        \ <code>templateName</code> and <code>templateType</code>. Repository details\
        \ (branch, name, and provider) should be of a linked repository. A linked\
        \ repository is a repository that has been registered with Proton. For more\
        \ information, see <a>CreateRepository</a>."
      operationId: update_template_sync_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AwsProton20200720.UpdateTemplateSyncConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTemplateSyncConfigInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTemplateSyncConfigOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AcceptEnvironmentAccountConnectionOutput:
      example:
        environmentAccountConnection:
          managementAccountId: ""
          codebuildRoleArn: ""
          environmentAccountId: ""
          lastModifiedAt: ""
          requestedAt: ""
          componentRoleArn: ""
          environmentName: ""
          roleArn: ""
          id: ""
          arn: ""
          status: ""
      properties:
        environmentAccountConnection:
          $ref: '#/components/schemas/AcceptEnvironmentAccountConnectionOutput_environmentAccountConnection'
      required:
      - environmentAccountConnection
      title: AcceptEnvironmentAccountConnectionOutput
      type: object
    AcceptEnvironmentAccountConnectionInput:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          - description: The ID of the environment account connection.
          title: id
      required:
      - id
      title: AcceptEnvironmentAccountConnectionInput
      type: object
    ValidationException: {}
    AccessDeniedException: {}
    ThrottlingException: {}
    ConflictException: {}
    ResourceNotFoundException: {}
    InternalServerException: {}
    CancelComponentDeploymentOutput:
      example:
        component:
          lastDeploymentAttemptedAt: ""
          lastDeploymentSucceededAt: ""
          lastModifiedAt: ""
          lastSucceededDeploymentId: ""
          lastClientRequestToken: ""
          description: ""
          serviceInstanceName: ""
          serviceName: ""
          createdAt: ""
          deploymentStatus: ""
          environmentName: ""
          name: ""
          deploymentStatusMessage: ""
          arn: ""
          lastAttemptedDeploymentId: ""
          serviceSpec: ""
      properties:
        component:
          $ref: '#/components/schemas/CancelComponentDeploymentOutput_component'
      required:
      - component
      title: CancelComponentDeploymentOutput
      type: object
    CancelComponentDeploymentInput:
      example:
        componentName: ""
      properties:
        componentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the component with the deployment to cancel.
          title: componentName
      required:
      - componentName
      title: CancelComponentDeploymentInput
      type: object
    CancelEnvironmentDeploymentOutput:
      example:
        environment:
          lastDeploymentAttemptedAt: ""
          templateMajorVersion: ""
          codebuildRoleArn: ""
          lastDeploymentSucceededAt: ""
          environmentAccountId: ""
          componentRoleArn: ""
          lastSucceededDeploymentId: ""
          description: ""
          spec: ""
          environmentAccountConnectionId: ""
          createdAt: ""
          deploymentStatus: ""
          templateName: ""
          name: ""
          templateMinorVersion: ""
          deploymentStatusMessage: ""
          provisioning: ""
          arn: ""
          protonServiceRoleArn: ""
          provisioningRepository:
            provider: ""
            name: ""
            arn: ""
            branch: ""
          lastAttemptedDeploymentId: ""
      properties:
        environment:
          $ref: '#/components/schemas/CancelEnvironmentDeploymentOutput_environment'
      required:
      - environment
      title: CancelEnvironmentDeploymentOutput
      type: object
    CancelEnvironmentDeploymentInput:
      example:
        environmentName: ""
      properties:
        environmentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment with the deployment to cancel.
          title: environmentName
      required:
      - environmentName
      title: CancelEnvironmentDeploymentInput
      type: object
    CancelServiceInstanceDeploymentOutput:
      example:
        serviceInstance:
          lastDeploymentAttemptedAt: ""
          templateMajorVersion: ""
          lastDeploymentSucceededAt: ""
          lastSucceededDeploymentId: ""
          lastClientRequestToken: ""
          serviceName: ""
          spec: ""
          createdAt: ""
          deploymentStatus: ""
          templateName: ""
          environmentName: ""
          name: ""
          templateMinorVersion: ""
          deploymentStatusMessage: ""
          arn: ""
          lastAttemptedDeploymentId: ""
      properties:
        serviceInstance:
          $ref: '#/components/schemas/CancelServiceInstanceDeploymentOutput_serviceInstance'
      required:
      - serviceInstance
      title: CancelServiceInstanceDeploymentOutput
      type: object
    CancelServiceInstanceDeploymentInput:
      example:
        serviceInstanceName: ""
        serviceName: ""
      properties:
        serviceInstanceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service instance with the deployment to cancel.
          title: serviceInstanceName
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service with the service instance deployment
              to cancel.
          title: serviceName
      required:
      - serviceInstanceName
      - serviceName
      title: CancelServiceInstanceDeploymentInput
      type: object
    CancelServicePipelineDeploymentOutput:
      example:
        pipeline:
          lastDeploymentAttemptedAt: ""
          templateMajorVersion: ""
          createdAt: ""
          deploymentStatus: ""
          lastDeploymentSucceededAt: ""
          templateName: ""
          lastSucceededDeploymentId: ""
          templateMinorVersion: ""
          deploymentStatusMessage: ""
          arn: ""
          lastAttemptedDeploymentId: ""
          spec: ""
      properties:
        pipeline:
          $ref: '#/components/schemas/CancelServicePipelineDeploymentOutput_pipeline'
      required:
      - pipeline
      title: CancelServicePipelineDeploymentOutput
      type: object
    CancelServicePipelineDeploymentInput:
      example:
        serviceName: ""
      properties:
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service with the service pipeline deployment
              to cancel.
          title: serviceName
      required:
      - serviceName
      title: CancelServicePipelineDeploymentInput
      type: object
    CreateComponentOutput:
      example:
        component:
          lastDeploymentAttemptedAt: ""
          lastDeploymentSucceededAt: ""
          lastModifiedAt: ""
          lastSucceededDeploymentId: ""
          lastClientRequestToken: ""
          description: ""
          serviceInstanceName: ""
          serviceName: ""
          createdAt: ""
          deploymentStatus: ""
          environmentName: ""
          name: ""
          deploymentStatusMessage: ""
          arn: ""
          lastAttemptedDeploymentId: ""
          serviceSpec: ""
      properties:
        component:
          $ref: '#/components/schemas/CreateComponentOutput_component'
      required:
      - component
      title: CreateComponentOutput
      type: object
    CreateComponentInput:
      example:
        clientToken: ""
        environmentName: ""
        manifest: ""
        name: ""
        description: ""
        serviceInstanceName: ""
        templateFile: ""
        serviceName: ""
        serviceSpec: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: The client token for the created component.
          title: clientToken
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: An optional customer-provided description of the component.
          title: description
        environmentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the Proton environment that you want to associate
              this component with. You must specify this when you don't specify <code>serviceInstanceName</code>
              and <code>serviceName</code>.
          title: environmentName
        manifest:
          allOf:
          - $ref: '#/components/schemas/TemplateManifestContents'
          - description: "A path to a manifest file that lists the Infrastructure\
              \ as Code (IaC) file, template language, and rendering engine for infrastructure\
              \ that a custom component provisions."
          title: manifest
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The customer-provided name of the component.
          title: name
        serviceInstanceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name of the service instance that you want to attach\
              \ this component to. If you don't specify this, the component isn't\
              \ attached to any service instance. Specify both <code>serviceInstanceName</code>\
              \ and <code>serviceName</code> or neither of them."
          title: serviceInstanceName
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name of the service that <code>serviceInstanceName</code>\
              \ is associated with. If you don't specify this, the component isn't\
              \ attached to any service instance. Specify both <code>serviceInstanceName</code>\
              \ and <code>serviceName</code> or neither of them."
          title: serviceName
        serviceSpec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: The service spec that you want the component to use to access
              service inputs. Set this only when you attach the component to a service
              instance.
          title: serviceSpec
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>An optional list of metadata items that you can associate\
              \ with the Proton component. A tag is a key-value pair.</p> <p>For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/resources.html\"\
              >Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>"
          title: tags
        templateFile:
          allOf:
          - $ref: '#/components/schemas/TemplateFileContents'
          - description: "<p>A path to the Infrastructure as Code (IaC) file describing\
              \ infrastructure that a custom component provisions.</p> <note> <p>Components\
              \ support a single IaC file, even if you use Terraform as your template\
              \ language.</p> </note>"
          title: templateFile
      required:
      - manifest
      - name
      - templateFile
      title: CreateComponentInput
      type: object
    ServiceQuotaExceededException: {}
    CreateEnvironmentOutput:
      example:
        environment:
          lastDeploymentAttemptedAt: ""
          templateMajorVersion: ""
          codebuildRoleArn: ""
          lastDeploymentSucceededAt: ""
          environmentAccountId: ""
          componentRoleArn: ""
          lastSucceededDeploymentId: ""
          description: ""
          spec: ""
          environmentAccountConnectionId: ""
          createdAt: ""
          deploymentStatus: ""
          templateName: ""
          name: ""
          templateMinorVersion: ""
          deploymentStatusMessage: ""
          provisioning: ""
          arn: ""
          protonServiceRoleArn: ""
          provisioningRepository:
            provider: ""
            name: ""
            arn: ""
            branch: ""
          lastAttemptedDeploymentId: ""
      properties:
        environment:
          $ref: '#/components/schemas/CreateEnvironmentOutput_environment'
      required:
      - environment
      title: CreateEnvironmentOutput
      type: object
    CreateEnvironmentInput:
      example:
        templateMajorVersion: ""
        codebuildRoleArn: ""
        templateName: ""
        componentRoleArn: ""
        name: ""
        description: ""
        templateMinorVersion: ""
        protonServiceRoleArn: ""
        provisioningRepository:
          provider: ""
          name: ""
          branch: ""
        spec: ""
        environmentAccountConnectionId: ""
        tags: ""
      properties:
        codebuildRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM service role\
              \ that allows Proton to provision infrastructure using CodeBuild-based\
              \ provisioning on your behalf.</p> <p>To use CodeBuild-based provisioning\
              \ for the environment or for any service instance running in the environment,\
              \ specify either the <code>environmentAccountConnectionId</code> or\
              \ <code>codebuildRoleArn</code> parameter.</p>"
          title: codebuildRoleArn
        componentRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM service role\
              \ that Proton uses when provisioning directly defined components in\
              \ this environment. It determines the scope of infrastructure that a\
              \ component can provision.</p> <p>You must specify <code>componentRoleArn</code>\
              \ to allow directly defined components to be associated with this environment.</p>\
              \ <p>For more information about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
              >Proton components</a> in the <i>Proton User Guide</i>.</p>"
          title: componentRoleArn
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the environment that's being created and
              deployed.
          title: description
        environmentAccountConnectionId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          - description: "<p>The ID of the environment account connection that you\
              \ provide if you're provisioning your environment infrastructure resources\
              \ to an environment account. For more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html\"\
              >Environment account connections</a> in the <i>Proton User guide</i>.</p>\
              \ <p>To use Amazon Web Services-managed provisioning for the environment,\
              \ specify either the <code>environmentAccountConnectionId</code> or\
              \ <code>protonServiceRoleArn</code> parameter and omit the <code>provisioningRepository</code>\
              \ parameter.</p>"
          title: environmentAccountConnectionId
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment.
          title: name
        protonServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The Amazon Resource Name (ARN) of the Proton service\
              \ role that allows Proton to make calls to other services on your behalf.</p>\
              \ <p>To use Amazon Web Services-managed provisioning for the environment,\
              \ specify either the <code>environmentAccountConnectionId</code> or\
              \ <code>protonServiceRoleArn</code> parameter and omit the <code>provisioningRepository</code>\
              \ parameter.</p>"
          title: protonServiceRoleArn
        provisioningRepository:
          $ref: '#/components/schemas/CreateEnvironmentInput_provisioningRepository'
        spec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: "A YAML formatted string that provides inputs as defined\
              \ in the environment template bundle schema file. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-environments.html\"\
              >Environments</a> in the <i>Proton User Guide</i>."
          title: spec
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>An optional list of metadata items that you can associate\
              \ with the Proton environment. A tag is a key-value pair.</p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/resources.html\"\
              >Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>"
          title: tags
        templateMajorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The major version of the environment template.
          title: templateMajorVersion
        templateMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The minor version of the environment template.
          title: templateMinorVersion
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name of the environment template. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-templates.html\"\
              >Environment Templates</a> in the <i>Proton User Guide</i>."
          title: templateName
      required:
      - name
      - spec
      - templateMajorVersion
      - templateName
      title: CreateEnvironmentInput
      type: object
    CreateEnvironmentAccountConnectionOutput:
      example:
        environmentAccountConnection:
          managementAccountId: ""
          codebuildRoleArn: ""
          environmentAccountId: ""
          lastModifiedAt: ""
          requestedAt: ""
          componentRoleArn: ""
          environmentName: ""
          roleArn: ""
          id: ""
          arn: ""
          status: ""
      properties:
        environmentAccountConnection:
          $ref: '#/components/schemas/CreateEnvironmentAccountConnectionOutput_environmentAccountConnection'
      required:
      - environmentAccountConnection
      title: CreateEnvironmentAccountConnectionOutput
      type: object
    CreateEnvironmentAccountConnectionInput:
      example:
        managementAccountId: ""
        codebuildRoleArn: ""
        clientToken: ""
        componentRoleArn: ""
        environmentName: ""
        roleArn: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "When included, if two identical requests are made with the\
              \ same client token, Proton returns the environment account connection\
              \ that the first request created."
          title: clientToken
        codebuildRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of an IAM service role in
              the environment account. Proton uses this role to provision infrastructure
              resources using CodeBuild-based provisioning in the associated environment
              account.
          title: codebuildRoleArn
        componentRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM service role\
              \ that Proton uses when provisioning directly defined components in\
              \ the associated environment account. It determines the scope of infrastructure\
              \ that a component can provision in the account.</p> <p>You must specify\
              \ <code>componentRoleArn</code> to allow directly defined components\
              \ to be associated with any environments running in this account.</p>\
              \ <p>For more information about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
              >Proton components</a> in the <i>Proton User Guide</i>.</p>"
          title: componentRoleArn
        environmentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the Proton environment that's created in the
              associated management account.
          title: environmentName
        managementAccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          - description: "The ID of the management account that accepts or rejects\
              \ the environment account connection. You create and manage the Proton\
              \ environment in this account. If the management account accepts the\
              \ environment account connection, Proton can use the associated IAM\
              \ role to provision environment infrastructure resources in the associated\
              \ environment account."
          title: managementAccountId
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of the IAM service role that's
              created in the environment account. Proton uses this role to provision
              infrastructure resources in the associated environment account.
          title: roleArn
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>An optional list of metadata items that you can associate\
              \ with the Proton environment account connection. A tag is a key-value\
              \ pair.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/resources.html\"\
              >Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>"
          title: tags
      required:
      - environmentName
      - managementAccountId
      title: CreateEnvironmentAccountConnectionInput
      type: object
    CreateEnvironmentTemplateOutput:
      example:
        environmentTemplate:
          createdAt: ""
          lastModifiedAt: ""
          recommendedVersion: ""
          displayName: ""
          name: ""
          description: ""
          provisioning: ""
          encryptionKey: ""
          arn: ""
      properties:
        environmentTemplate:
          $ref: '#/components/schemas/CreateEnvironmentTemplateOutput_environmentTemplate'
      required:
      - environmentTemplate
      title: CreateEnvironmentTemplateOutput
      type: object
    CreateEnvironmentTemplateInput:
      example:
        displayName: ""
        name: ""
        description: ""
        provisioning: ""
        encryptionKey: ""
        tags: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the environment template.
          title: description
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The environment template name as displayed in the developer
              interface.
          title: displayName
        encryptionKey:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: A customer provided encryption key that Proton uses to encrypt
              data.
          title: encryptionKey
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment template.
          title: name
        provisioning:
          allOf:
          - $ref: '#/components/schemas/Provisioning'
          - description: "When included, indicates that the environment template is\
              \ for customer provisioned and managed infrastructure."
          title: provisioning
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>An optional list of metadata items that you can associate\
              \ with the Proton environment template. A tag is a key-value pair.</p>\
              \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/resources.html\"\
              >Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>"
          title: tags
      required:
      - name
      title: CreateEnvironmentTemplateInput
      type: object
    CreateEnvironmentTemplateVersionOutput:
      example:
        environmentTemplateVersion:
          schema: ""
          createdAt: ""
          lastModifiedAt: ""
          templateName: ""
          description: ""
          recommendedMinorVersion: ""
          arn: ""
          majorVersion: ""
          minorVersion: ""
          statusMessage: ""
          status: ""
      properties:
        environmentTemplateVersion:
          $ref: '#/components/schemas/CreateEnvironmentTemplateVersionOutput_environmentTemplateVersion'
      required:
      - environmentTemplateVersion
      title: CreateEnvironmentTemplateVersionOutput
      type: object
    CreateEnvironmentTemplateVersionInput:
      example:
        templateName: ""
        clientToken: ""
        description: ""
        source:
          s3:
            bucket: ""
            key: ""
        majorVersion: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "When included, if two identical requests are made with the\
              \ same client token, Proton returns the environment template version\
              \ that the first request created."
          title: clientToken
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the new version of an environment template.
          title: description
        majorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: "<p>To create a new minor version of the environment template,\
              \ include <code>major Version</code>.</p> <p>To create a new major and\
              \ minor version of the environment template, exclude <code>major Version</code>.</p>"
          title: majorVersion
        source:
          $ref: '#/components/schemas/CreateEnvironmentTemplateVersionInput_source'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>An optional list of metadata items that you can associate\
              \ with the Proton environment template version. A tag is a key-value\
              \ pair.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/resources.html\"\
              >Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>"
          title: tags
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment template.
          title: templateName
      required:
      - source
      - templateName
      title: CreateEnvironmentTemplateVersionInput
      type: object
    CreateRepositoryOutput:
      example:
        repository:
          provider: ""
          connectionArn: ""
          name: ""
          encryptionKey: ""
          arn: ""
      properties:
        repository:
          $ref: '#/components/schemas/CreateRepositoryOutput_repository'
      required:
      - repository
      title: CreateRepositoryOutput
      type: object
    CreateRepositoryInput:
      example:
        provider: ""
        connectionArn: ""
        name: ""
        encryptionKey: ""
        tags: ""
      properties:
        connectionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) of your AWS CodeStar connection\
              \ that connects Proton to your repository provider account. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/setting-up-for-service.html\"\
              >Setting up for Proton</a> in the <i>Proton User Guide</i>."
          title: connectionArn
        encryptionKey:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of your customer Amazon Web Services Key Management
              Service (Amazon Web Services KMS) key.
          title: encryptionKey
        name:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: "The repository name (for example, <code>myrepos/myrepo</code>)."
          title: name
        provider:
          allOf:
          - $ref: '#/components/schemas/RepositoryProvider'
          - description: The repository provider.
          title: provider
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>An optional list of metadata items that you can associate\
              \ with the Proton repository. A tag is a key-value pair.</p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/resources.html\"\
              >Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>"
          title: tags
      required:
      - connectionArn
      - name
      - provider
      title: CreateRepositoryInput
      type: object
    CreateServiceOutput:
      example:
        service:
          lastModifiedAt: ""
          branchName: ""
          description: ""
          repositoryConnectionArn: ""
          spec: ""
          statusMessage: ""
          pipeline:
            lastDeploymentAttemptedAt: ""
            templateMajorVersion: ""
            createdAt: ""
            deploymentStatus: ""
            lastDeploymentSucceededAt: ""
            templateName: ""
            lastSucceededDeploymentId: ""
            templateMinorVersion: ""
            deploymentStatusMessage: ""
            arn: ""
            lastAttemptedDeploymentId: ""
            spec: ""
          createdAt: ""
          templateName: ""
          name: ""
          repositoryId: ""
          arn: ""
          status: ""
      properties:
        service:
          $ref: '#/components/schemas/CreateServiceOutput_service'
      required:
      - service
      title: CreateServiceOutput
      type: object
    CreateServiceInput:
      example:
        templateMajorVersion: ""
        templateName: ""
        name: ""
        repositoryId: ""
        branchName: ""
        description: ""
        templateMinorVersion: ""
        repositoryConnectionArn: ""
        spec: ""
        tags: ""
      properties:
        branchName:
          allOf:
          - $ref: '#/components/schemas/GitBranchName'
          - description: The name of the code repository branch that holds the code
              that's deployed in Proton. <i>Don't</i> include this parameter if your
              service template <i>doesn't</i> include a service pipeline.
          title: branchName
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the Proton service.
          title: description
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The service name.
          title: name
        repositoryConnectionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) of the repository connection.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/setting-up-for-service.html#setting-up-vcontrol\"\
              >Setting up an AWS CodeStar connection</a> in the <i>Proton User Guide</i>.\
              \ <i>Don't</i> include this parameter if your service template <i>doesn't</i>\
              \ include a service pipeline."
          title: repositoryConnectionArn
        repositoryId:
          allOf:
          - $ref: '#/components/schemas/RepositoryId'
          - description: The ID of the code repository. <i>Don't</i> include this
              parameter if your service template <i>doesn't</i> include a service
              pipeline.
          title: repositoryId
        spec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: "A link to a spec file that provides inputs as defined in\
              \ the service template bundle schema file. The spec file is in YAML\
              \ format. <i>Donâ€™t</i> include pipeline inputs in the spec if your service\
              \ template <i>doesnâ€™t</i> include a service pipeline. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-create-svc.html\"\
              >Create a service</a> in the <i>Proton User Guide</i>."
          title: spec
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>An optional list of metadata items that you can associate\
              \ with the Proton service. A tag is a key-value pair.</p> <p>For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/resources.html\"\
              >Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>"
          title: tags
        templateMajorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The major version of the service template that was used to
              create the service.
          title: templateMajorVersion
        templateMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The minor version of the service template that was used to
              create the service.
          title: templateMinorVersion
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template that's used to create the
              service.
          title: templateName
      required:
      - name
      - spec
      - templateMajorVersion
      - templateName
      title: CreateServiceInput
      type: object
    CreateServiceInstanceOutput:
      example:
        serviceInstance:
          lastDeploymentAttemptedAt: ""
          templateMajorVersion: ""
          lastDeploymentSucceededAt: ""
          lastSucceededDeploymentId: ""
          lastClientRequestToken: ""
          serviceName: ""
          spec: ""
          createdAt: ""
          deploymentStatus: ""
          templateName: ""
          environmentName: ""
          name: ""
          templateMinorVersion: ""
          deploymentStatusMessage: ""
          arn: ""
          lastAttemptedDeploymentId: ""
      properties:
        serviceInstance:
          $ref: '#/components/schemas/CreateServiceInstanceOutput_serviceInstance'
      required:
      - serviceInstance
      title: CreateServiceInstanceOutput
      type: object
    CreateServiceInstanceInput:
      example:
        templateMajorVersion: ""
        clientToken: ""
        name: ""
        templateMinorVersion: ""
        serviceName: ""
        spec: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: The client token of the service instance to create.
          title: clientToken
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service instance to create.
          title: name
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service the service instance is added to.
          title: serviceName
        spec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: The spec for the service instance you want to create.
          title: spec
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>An optional list of metadata items that you can associate\
              \ with the Proton service instance. A tag is a key-value pair.</p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/resources.html\"\
              >Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>"
          title: tags
        templateMajorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: "To create a new major and minor version of the service template,\
              \ <i>exclude</i> <code>major Version</code>."
          title: templateMajorVersion
        templateMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: "To create a new minor version of the service template, include\
              \ a <code>major Version</code>."
          title: templateMinorVersion
      required:
      - name
      - serviceName
      - spec
      title: CreateServiceInstanceInput
      type: object
    CreateServiceSyncConfigOutput:
      example:
        serviceSyncConfig:
          filePath: ""
          repositoryProvider: ""
          repositoryName: ""
          serviceName: ""
          branch: ""
      properties:
        serviceSyncConfig:
          $ref: '#/components/schemas/CreateServiceSyncConfigOutput_serviceSyncConfig'
      title: CreateServiceSyncConfigOutput
      type: object
    CreateServiceSyncConfigInput:
      example:
        filePath: ""
        repositoryProvider: ""
        repositoryName: ""
        serviceName: ""
        branch: ""
      properties:
        branch:
          allOf:
          - $ref: '#/components/schemas/GitBranchName'
          - description: The repository branch for your Proton Ops file.
          title: branch
        filePath:
          allOf:
          - $ref: '#/components/schemas/OpsFilePath'
          - description: The path to the Proton Ops file.
          title: filePath
        repositoryName:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: The repository name.
          title: repositoryName
        repositoryProvider:
          allOf:
          - $ref: '#/components/schemas/RepositoryProvider'
          - description: The provider type for your repository.
          title: repositoryProvider
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service the Proton Ops file is for.
          title: serviceName
      required:
      - branch
      - filePath
      - repositoryName
      - repositoryProvider
      - serviceName
      title: CreateServiceSyncConfigInput
      type: object
    CreateServiceTemplateOutput:
      example:
        serviceTemplate:
          createdAt: ""
          lastModifiedAt: ""
          recommendedVersion: ""
          displayName: ""
          name: ""
          description: ""
          encryptionKey: ""
          arn: ""
          pipelineProvisioning: ""
      properties:
        serviceTemplate:
          $ref: '#/components/schemas/CreateServiceTemplateOutput_serviceTemplate'
      required:
      - serviceTemplate
      title: CreateServiceTemplateOutput
      type: object
    CreateServiceTemplateInput:
      example:
        displayName: ""
        name: ""
        description: ""
        encryptionKey: ""
        pipelineProvisioning: ""
        tags: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the service template.
          title: description
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The name of the service template as displayed in the developer
              interface.
          title: displayName
        encryptionKey:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: A customer provided encryption key that's used to encrypt
              data.
          title: encryptionKey
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template.
          title: name
        pipelineProvisioning:
          allOf:
          - $ref: '#/components/schemas/Provisioning'
          - description: "By default, Proton provides a service pipeline for your\
              \ service. When this parameter is included, it indicates that an Proton\
              \ service pipeline <i>isn't</i> provided for your service. After it's\
              \ included, it <i>can't</i> be changed. For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-template-authoring.html#ag-template-bundles\"\
              >Template bundles</a> in the <i>Proton User Guide</i>."
          title: pipelineProvisioning
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>An optional list of metadata items that you can associate\
              \ with the Proton service template. A tag is a key-value pair.</p> <p>For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/resources.html\"\
              >Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>"
          title: tags
      required:
      - name
      title: CreateServiceTemplateInput
      type: object
    CreateServiceTemplateVersionOutput:
      example:
        serviceTemplateVersion:
          schema: ""
          lastModifiedAt: ""
          description: ""
          recommendedMinorVersion: ""
          majorVersion: ""
          statusMessage: ""
          createdAt: ""
          supportedComponentSources: ""
          templateName: ""
          compatibleEnvironmentTemplates: ""
          arn: ""
          minorVersion: ""
          status: ""
      properties:
        serviceTemplateVersion:
          $ref: '#/components/schemas/CreateServiceTemplateVersionOutput_serviceTemplateVersion'
      required:
      - serviceTemplateVersion
      title: CreateServiceTemplateVersionOutput
      type: object
    CreateServiceTemplateVersionInput:
      example:
        supportedComponentSources: ""
        templateName: ""
        clientToken: ""
        description: ""
        compatibleEnvironmentTemplates: ""
        source:
          s3:
            bucket: ""
            key: ""
        majorVersion: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "When included, if two identical requests are made with the\
              \ same client token, Proton returns the service template version that\
              \ the first request created."
          title: clientToken
        compatibleEnvironmentTemplates:
          allOf:
          - $ref: '#/components/schemas/CompatibleEnvironmentTemplateInputList'
          - description: An array of environment template objects that are compatible
              with the new service template version. A service instance based on this
              service template version can run in environments based on compatible
              templates.
          title: compatibleEnvironmentTemplates
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the new version of a service template.
          title: description
        majorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: "<p>To create a new minor version of the service template,\
              \ include a <code>major Version</code>.</p> <p>To create a new major\
              \ and minor version of the service template, <i>exclude</i> <code>major\
              \ Version</code>.</p>"
          title: majorVersion
        source:
          $ref: '#/components/schemas/CreateServiceTemplateVersionInput_source'
        supportedComponentSources:
          allOf:
          - $ref: '#/components/schemas/ServiceTemplateSupportedComponentSourceInputList'
          - description: "<p>An array of supported component sources. Components with\
              \ supported sources can be attached to service instances based on this\
              \ service template version.</p> <p>For more information about components,\
              \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
              >Proton components</a> in the <i>Proton User Guide</i>.</p>"
          title: supportedComponentSources
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>An optional list of metadata items that you can associate\
              \ with the Proton service template version. A tag is a key-value pair.</p>\
              \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/resources.html\"\
              >Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>"
          title: tags
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template.
          title: templateName
      required:
      - compatibleEnvironmentTemplates
      - source
      - templateName
      title: CreateServiceTemplateVersionInput
      type: object
    CreateTemplateSyncConfigOutput:
      example:
        templateSyncConfig:
          templateType: ""
          templateName: ""
          repositoryProvider: ""
          repositoryName: ""
          branch: ""
          subdirectory: ""
      properties:
        templateSyncConfig:
          $ref: '#/components/schemas/CreateTemplateSyncConfigOutput_templateSyncConfig'
      title: CreateTemplateSyncConfigOutput
      type: object
    CreateTemplateSyncConfigInput:
      example:
        templateType: ""
        templateName: ""
        repositoryProvider: ""
        repositoryName: ""
        branch: ""
        subdirectory: ""
      properties:
        branch:
          allOf:
          - $ref: '#/components/schemas/GitBranchName'
          - description: The repository branch for your template.
          title: branch
        repositoryName:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: "The repository name (for example, <code>myrepos/myrepo</code>)."
          title: repositoryName
        repositoryProvider:
          allOf:
          - $ref: '#/components/schemas/RepositoryProvider'
          - description: The provider type for your repository.
          title: repositoryProvider
        subdirectory:
          allOf:
          - $ref: '#/components/schemas/Subdirectory'
          - description: "A repository subdirectory path to your template bundle directory.\
              \ When included, Proton limits the template bundle search to this repository\
              \ directory."
          title: subdirectory
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of your registered template.
          title: templateName
        templateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          - description: The type of the registered template.
          title: templateType
      required:
      - branch
      - repositoryName
      - repositoryProvider
      - templateName
      - templateType
      title: CreateTemplateSyncConfigInput
      type: object
    DeleteComponentOutput:
      example:
        component:
          lastDeploymentAttemptedAt: ""
          lastDeploymentSucceededAt: ""
          lastModifiedAt: ""
          lastSucceededDeploymentId: ""
          lastClientRequestToken: ""
          description: ""
          serviceInstanceName: ""
          serviceName: ""
          createdAt: ""
          deploymentStatus: ""
          environmentName: ""
          name: ""
          deploymentStatusMessage: ""
          arn: ""
          lastAttemptedDeploymentId: ""
          serviceSpec: ""
      properties:
        component:
          $ref: '#/components/schemas/DeleteComponentOutput_component'
      title: DeleteComponentOutput
      type: object
    DeleteComponentInput:
      example:
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the component to delete.
          title: name
      required:
      - name
      title: DeleteComponentInput
      type: object
    DeleteDeploymentOutput:
      example:
        deployment:
          completedAt: ""
          initialState:
            component:
              serviceInstanceName: ""
              templateFile: ""
              serviceName: ""
              serviceSpec: ""
            environment:
              templateMajorVersion: ""
              templateName: ""
              templateMinorVersion: ""
              spec: ""
            servicePipeline:
              templateMajorVersion: ""
              templateName: ""
              templateMinorVersion: ""
              spec: ""
            serviceInstance:
              templateMajorVersion: ""
              lastSuccessfulEnvironmentDeploymentId: ""
              templateName: ""
              lastSuccessfulComponentDeploymentIds: ""
              templateMinorVersion: ""
              lastSuccessfulServicePipelineDeploymentId: ""
              spec: ""
          lastModifiedAt: ""
          lastSucceededDeploymentId: ""
          serviceInstanceName: ""
          serviceName: ""
          targetArn: ""
          targetResourceType: ""
          createdAt: ""
          deploymentStatus: ""
          targetResourceCreatedAt: ""
          environmentName: ""
          targetState:
            component:
              serviceInstanceName: ""
              templateFile: ""
              serviceName: ""
              serviceSpec: ""
            environment:
              templateMajorVersion: ""
              templateName: ""
              templateMinorVersion: ""
              spec: ""
            servicePipeline:
              templateMajorVersion: ""
              templateName: ""
              templateMinorVersion: ""
              spec: ""
            serviceInstance:
              templateMajorVersion: ""
              lastSuccessfulEnvironmentDeploymentId: ""
              templateName: ""
              lastSuccessfulComponentDeploymentIds: ""
              templateMinorVersion: ""
              lastSuccessfulServicePipelineDeploymentId: ""
              spec: ""
          deploymentStatusMessage: ""
          componentName: ""
          id: ""
          arn: ""
          lastAttemptedDeploymentId: ""
      properties:
        deployment:
          $ref: '#/components/schemas/DeleteDeploymentOutput_deployment'
      title: DeleteDeploymentOutput
      type: object
    DeleteDeploymentInput:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the deployment to delete.
          title: id
      required:
      - id
      title: DeleteDeploymentInput
      type: object
    DeleteEnvironmentOutput:
      example:
        environment:
          lastDeploymentAttemptedAt: ""
          templateMajorVersion: ""
          codebuildRoleArn: ""
          lastDeploymentSucceededAt: ""
          environmentAccountId: ""
          componentRoleArn: ""
          lastSucceededDeploymentId: ""
          description: ""
          spec: ""
          environmentAccountConnectionId: ""
          createdAt: ""
          deploymentStatus: ""
          templateName: ""
          name: ""
          templateMinorVersion: ""
          deploymentStatusMessage: ""
          provisioning: ""
          arn: ""
          protonServiceRoleArn: ""
          provisioningRepository:
            provider: ""
            name: ""
            arn: ""
            branch: ""
          lastAttemptedDeploymentId: ""
      properties:
        environment:
          $ref: '#/components/schemas/DeleteEnvironmentOutput_environment'
      title: DeleteEnvironmentOutput
      type: object
    DeleteEnvironmentInput:
      example:
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment to delete.
          title: name
      required:
      - name
      title: DeleteEnvironmentInput
      type: object
    DeleteEnvironmentAccountConnectionOutput:
      example:
        environmentAccountConnection:
          managementAccountId: ""
          codebuildRoleArn: ""
          environmentAccountId: ""
          lastModifiedAt: ""
          requestedAt: ""
          componentRoleArn: ""
          environmentName: ""
          roleArn: ""
          id: ""
          arn: ""
          status: ""
      properties:
        environmentAccountConnection:
          $ref: '#/components/schemas/DeleteEnvironmentAccountConnectionOutput_environmentAccountConnection'
      title: DeleteEnvironmentAccountConnectionOutput
      type: object
    DeleteEnvironmentAccountConnectionInput:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          - description: The ID of the environment account connection to delete.
          title: id
      required:
      - id
      title: DeleteEnvironmentAccountConnectionInput
      type: object
    DeleteEnvironmentTemplateOutput:
      example:
        environmentTemplate:
          createdAt: ""
          lastModifiedAt: ""
          recommendedVersion: ""
          displayName: ""
          name: ""
          description: ""
          provisioning: ""
          encryptionKey: ""
          arn: ""
      properties:
        environmentTemplate:
          $ref: '#/components/schemas/DeleteEnvironmentTemplateOutput_environmentTemplate'
      title: DeleteEnvironmentTemplateOutput
      type: object
    DeleteEnvironmentTemplateInput:
      example:
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment template to delete.
          title: name
      required:
      - name
      title: DeleteEnvironmentTemplateInput
      type: object
    DeleteEnvironmentTemplateVersionOutput:
      example:
        environmentTemplateVersion:
          schema: ""
          createdAt: ""
          lastModifiedAt: ""
          templateName: ""
          description: ""
          recommendedMinorVersion: ""
          arn: ""
          majorVersion: ""
          minorVersion: ""
          statusMessage: ""
          status: ""
      properties:
        environmentTemplateVersion:
          $ref: '#/components/schemas/DeleteEnvironmentTemplateVersionOutput_environmentTemplateVersion'
      title: DeleteEnvironmentTemplateVersionOutput
      type: object
    DeleteEnvironmentTemplateVersionInput:
      example:
        templateName: ""
        majorVersion: ""
        minorVersion: ""
      properties:
        majorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The environment template major version to delete.
          title: majorVersion
        minorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The environment template minor version to delete.
          title: minorVersion
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment template.
          title: templateName
      required:
      - majorVersion
      - minorVersion
      - templateName
      title: DeleteEnvironmentTemplateVersionInput
      type: object
    DeleteRepositoryOutput:
      example:
        repository:
          provider: ""
          connectionArn: ""
          name: ""
          encryptionKey: ""
          arn: ""
      properties:
        repository:
          $ref: '#/components/schemas/DeleteRepositoryOutput_repository'
      title: DeleteRepositoryOutput
      type: object
    DeleteRepositoryInput:
      example:
        provider: ""
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: The repository name.
          title: name
        provider:
          allOf:
          - $ref: '#/components/schemas/RepositoryProvider'
          - description: The repository provider.
          title: provider
      required:
      - name
      - provider
      title: DeleteRepositoryInput
      type: object
    DeleteServiceOutput:
      example:
        service:
          lastModifiedAt: ""
          branchName: ""
          description: ""
          repositoryConnectionArn: ""
          spec: ""
          statusMessage: ""
          pipeline:
            lastDeploymentAttemptedAt: ""
            templateMajorVersion: ""
            createdAt: ""
            deploymentStatus: ""
            lastDeploymentSucceededAt: ""
            templateName: ""
            lastSucceededDeploymentId: ""
            templateMinorVersion: ""
            deploymentStatusMessage: ""
            arn: ""
            lastAttemptedDeploymentId: ""
            spec: ""
          createdAt: ""
          templateName: ""
          name: ""
          repositoryId: ""
          arn: ""
          status: ""
      properties:
        service:
          $ref: '#/components/schemas/DeleteServiceOutput_service'
      title: DeleteServiceOutput
      type: object
    DeleteServiceInput:
      example:
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service to delete.
          title: name
      required:
      - name
      title: DeleteServiceInput
      type: object
    DeleteServiceSyncConfigOutput:
      example:
        serviceSyncConfig:
          filePath: ""
          repositoryProvider: ""
          repositoryName: ""
          serviceName: ""
          branch: ""
      properties:
        serviceSyncConfig:
          $ref: '#/components/schemas/DeleteServiceSyncConfigOutput_serviceSyncConfig'
      title: DeleteServiceSyncConfigOutput
      type: object
    DeleteServiceSyncConfigInput:
      example:
        serviceName: ""
      properties:
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service that you want to delete the service
              sync configuration for.
          title: serviceName
      required:
      - serviceName
      title: DeleteServiceSyncConfigInput
      type: object
    DeleteServiceTemplateOutput:
      example:
        serviceTemplate:
          createdAt: ""
          lastModifiedAt: ""
          recommendedVersion: ""
          displayName: ""
          name: ""
          description: ""
          encryptionKey: ""
          arn: ""
          pipelineProvisioning: ""
      properties:
        serviceTemplate:
          $ref: '#/components/schemas/DeleteServiceTemplateOutput_serviceTemplate'
      title: DeleteServiceTemplateOutput
      type: object
    DeleteServiceTemplateInput:
      example:
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template to delete.
          title: name
      required:
      - name
      title: DeleteServiceTemplateInput
      type: object
    DeleteServiceTemplateVersionOutput:
      example:
        serviceTemplateVersion:
          schema: ""
          lastModifiedAt: ""
          description: ""
          recommendedMinorVersion: ""
          majorVersion: ""
          statusMessage: ""
          createdAt: ""
          supportedComponentSources: ""
          templateName: ""
          compatibleEnvironmentTemplates: ""
          arn: ""
          minorVersion: ""
          status: ""
      properties:
        serviceTemplateVersion:
          $ref: '#/components/schemas/DeleteServiceTemplateVersionOutput_serviceTemplateVersion'
      title: DeleteServiceTemplateVersionOutput
      type: object
    DeleteServiceTemplateVersionInput:
      example:
        templateName: ""
        majorVersion: ""
        minorVersion: ""
      properties:
        majorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The service template major version to delete.
          title: majorVersion
        minorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The service template minor version to delete.
          title: minorVersion
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template.
          title: templateName
      required:
      - majorVersion
      - minorVersion
      - templateName
      title: DeleteServiceTemplateVersionInput
      type: object
    DeleteTemplateSyncConfigOutput:
      example:
        templateSyncConfig:
          templateType: ""
          templateName: ""
          repositoryProvider: ""
          repositoryName: ""
          branch: ""
          subdirectory: ""
      properties:
        templateSyncConfig:
          $ref: '#/components/schemas/CreateTemplateSyncConfigOutput_templateSyncConfig'
      title: DeleteTemplateSyncConfigOutput
      type: object
    DeleteTemplateSyncConfigInput:
      example:
        templateType: ""
        templateName: ""
      properties:
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The template name.
          title: templateName
        templateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          - description: The template type.
          title: templateType
      required:
      - templateName
      - templateType
      title: DeleteTemplateSyncConfigInput
      type: object
    GetAccountSettingsOutput:
      example:
        accountSettings:
          pipelineServiceRoleArn: ""
          pipelineProvisioningRepository:
            provider: ""
            name: ""
            arn: ""
            branch: ""
          pipelineCodebuildRoleArn: ""
      properties:
        accountSettings:
          $ref: '#/components/schemas/GetAccountSettingsOutput_accountSettings'
      title: GetAccountSettingsOutput
      type: object
    GetAccountSettingsInput:
      properties: {}
      title: GetAccountSettingsInput
      type: object
    GetComponentOutput:
      example:
        component:
          lastDeploymentAttemptedAt: ""
          lastDeploymentSucceededAt: ""
          lastModifiedAt: ""
          lastSucceededDeploymentId: ""
          lastClientRequestToken: ""
          description: ""
          serviceInstanceName: ""
          serviceName: ""
          createdAt: ""
          deploymentStatus: ""
          environmentName: ""
          name: ""
          deploymentStatusMessage: ""
          arn: ""
          lastAttemptedDeploymentId: ""
          serviceSpec: ""
      properties:
        component:
          $ref: '#/components/schemas/GetComponentOutput_component'
      title: GetComponentOutput
      type: object
    GetComponentInput:
      example:
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the component that you want to get the detailed
              data for.
          title: name
      required:
      - name
      title: GetComponentInput
      type: object
    GetDeploymentOutput:
      example:
        deployment:
          completedAt: ""
          initialState:
            component:
              serviceInstanceName: ""
              templateFile: ""
              serviceName: ""
              serviceSpec: ""
            environment:
              templateMajorVersion: ""
              templateName: ""
              templateMinorVersion: ""
              spec: ""
            servicePipeline:
              templateMajorVersion: ""
              templateName: ""
              templateMinorVersion: ""
              spec: ""
            serviceInstance:
              templateMajorVersion: ""
              lastSuccessfulEnvironmentDeploymentId: ""
              templateName: ""
              lastSuccessfulComponentDeploymentIds: ""
              templateMinorVersion: ""
              lastSuccessfulServicePipelineDeploymentId: ""
              spec: ""
          lastModifiedAt: ""
          lastSucceededDeploymentId: ""
          serviceInstanceName: ""
          serviceName: ""
          targetArn: ""
          targetResourceType: ""
          createdAt: ""
          deploymentStatus: ""
          targetResourceCreatedAt: ""
          environmentName: ""
          targetState:
            component:
              serviceInstanceName: ""
              templateFile: ""
              serviceName: ""
              serviceSpec: ""
            environment:
              templateMajorVersion: ""
              templateName: ""
              templateMinorVersion: ""
              spec: ""
            servicePipeline:
              templateMajorVersion: ""
              templateName: ""
              templateMinorVersion: ""
              spec: ""
            serviceInstance:
              templateMajorVersion: ""
              lastSuccessfulEnvironmentDeploymentId: ""
              templateName: ""
              lastSuccessfulComponentDeploymentIds: ""
              templateMinorVersion: ""
              lastSuccessfulServicePipelineDeploymentId: ""
              spec: ""
          deploymentStatusMessage: ""
          componentName: ""
          id: ""
          arn: ""
          lastAttemptedDeploymentId: ""
      properties:
        deployment:
          $ref: '#/components/schemas/GetDeploymentOutput_deployment'
      title: GetDeploymentOutput
      type: object
    GetDeploymentInput:
      example:
        environmentName: ""
        componentName: ""
        id: ""
        serviceInstanceName: ""
        serviceName: ""
      properties:
        componentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of a component that you want to get the detailed
              data for.
          title: componentName
        environmentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of a environment that you want to get the detailed
              data for.
          title: environmentName
        id:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the deployment that you want to get the detailed
              data for.
          title: id
        serviceInstanceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service instance associated with the given
              deployment ID. <code>serviceName</code> must be specified to identify
              the service instance.
          title: serviceInstanceName
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service associated with the given deployment
              ID.
          title: serviceName
      required:
      - id
      title: GetDeploymentInput
      type: object
    GetEnvironmentOutput:
      example:
        environment:
          lastDeploymentAttemptedAt: ""
          templateMajorVersion: ""
          codebuildRoleArn: ""
          lastDeploymentSucceededAt: ""
          environmentAccountId: ""
          componentRoleArn: ""
          lastSucceededDeploymentId: ""
          description: ""
          spec: ""
          environmentAccountConnectionId: ""
          createdAt: ""
          deploymentStatus: ""
          templateName: ""
          name: ""
          templateMinorVersion: ""
          deploymentStatusMessage: ""
          provisioning: ""
          arn: ""
          protonServiceRoleArn: ""
          provisioningRepository:
            provider: ""
            name: ""
            arn: ""
            branch: ""
          lastAttemptedDeploymentId: ""
      properties:
        environment:
          $ref: '#/components/schemas/GetEnvironmentOutput_environment'
      required:
      - environment
      title: GetEnvironmentOutput
      type: object
    GetEnvironmentInput:
      example:
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment that you want to get the detailed
              data for.
          title: name
      required:
      - name
      title: GetEnvironmentInput
      type: object
    GetEnvironmentAccountConnectionOutput:
      example:
        environmentAccountConnection:
          managementAccountId: ""
          codebuildRoleArn: ""
          environmentAccountId: ""
          lastModifiedAt: ""
          requestedAt: ""
          componentRoleArn: ""
          environmentName: ""
          roleArn: ""
          id: ""
          arn: ""
          status: ""
      properties:
        environmentAccountConnection:
          $ref: '#/components/schemas/GetEnvironmentAccountConnectionOutput_environmentAccountConnection'
      required:
      - environmentAccountConnection
      title: GetEnvironmentAccountConnectionOutput
      type: object
    GetEnvironmentAccountConnectionInput:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          - description: The ID of the environment account connection that you want
              to get the detailed data for.
          title: id
      required:
      - id
      title: GetEnvironmentAccountConnectionInput
      type: object
    GetEnvironmentTemplateOutput:
      example:
        environmentTemplate:
          createdAt: ""
          lastModifiedAt: ""
          recommendedVersion: ""
          displayName: ""
          name: ""
          description: ""
          provisioning: ""
          encryptionKey: ""
          arn: ""
      properties:
        environmentTemplate:
          $ref: '#/components/schemas/GetEnvironmentTemplateOutput_environmentTemplate'
      required:
      - environmentTemplate
      title: GetEnvironmentTemplateOutput
      type: object
    GetEnvironmentTemplateInput:
      example:
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment template that you want to get
              the detailed data for.
          title: name
      required:
      - name
      title: GetEnvironmentTemplateInput
      type: object
    GetEnvironmentTemplateVersionOutput:
      example:
        environmentTemplateVersion:
          schema: ""
          createdAt: ""
          lastModifiedAt: ""
          templateName: ""
          description: ""
          recommendedMinorVersion: ""
          arn: ""
          majorVersion: ""
          minorVersion: ""
          statusMessage: ""
          status: ""
      properties:
        environmentTemplateVersion:
          $ref: '#/components/schemas/GetEnvironmentTemplateVersionOutput_environmentTemplateVersion'
      required:
      - environmentTemplateVersion
      title: GetEnvironmentTemplateVersionOutput
      type: object
    GetEnvironmentTemplateVersionInput:
      example:
        templateName: ""
        majorVersion: ""
        minorVersion: ""
      properties:
        majorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: "To get environment template major version detail data, include\
              \ <code>major Version</code>."
          title: majorVersion
        minorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: "To get environment template minor version detail data, include\
              \ <code>minorVersion</code>."
          title: minorVersion
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment template a version of which you
              want to get detailed data for.
          title: templateName
      required:
      - majorVersion
      - minorVersion
      - templateName
      title: GetEnvironmentTemplateVersionInput
      type: object
    GetRepositoryOutput:
      example:
        repository:
          provider: ""
          connectionArn: ""
          name: ""
          encryptionKey: ""
          arn: ""
      properties:
        repository:
          $ref: '#/components/schemas/CreateRepositoryOutput_repository'
      required:
      - repository
      title: GetRepositoryOutput
      type: object
    GetRepositoryInput:
      example:
        provider: ""
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: "The repository name, for example <code>myrepos/myrepo</code>."
          title: name
        provider:
          allOf:
          - $ref: '#/components/schemas/RepositoryProvider'
          - description: The repository provider.
          title: provider
      required:
      - name
      - provider
      title: GetRepositoryInput
      type: object
    GetRepositorySyncStatusOutput:
      example:
        latestSync:
          startedAt: ""
          events: ""
          status: ""
      properties:
        latestSync:
          $ref: '#/components/schemas/GetRepositorySyncStatusOutput_latestSync'
      title: GetRepositorySyncStatusOutput
      type: object
    GetRepositorySyncStatusInput:
      example:
        repositoryProvider: ""
        repositoryName: ""
        syncType: ""
        branch: ""
      properties:
        branch:
          allOf:
          - $ref: '#/components/schemas/GitBranchName'
          - description: The repository branch.
          title: branch
        repositoryName:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: The repository name.
          title: repositoryName
        repositoryProvider:
          allOf:
          - $ref: '#/components/schemas/RepositoryProvider'
          - description: The repository provider.
          title: repositoryProvider
        syncType:
          allOf:
          - $ref: '#/components/schemas/SyncType'
          - description: The repository sync type.
          title: syncType
      required:
      - branch
      - repositoryName
      - repositoryProvider
      - syncType
      title: GetRepositorySyncStatusInput
      type: object
    GetResourcesSummaryOutput:
      example:
        counts:
          components:
            total: ""
            upToDate: ""
            behindMajor: ""
            behindMinor: ""
            failed: ""
          pipelines:
            total: ""
            upToDate: ""
            behindMajor: ""
            behindMinor: ""
            failed: ""
          environments:
            total: ""
            upToDate: ""
            behindMajor: ""
            behindMinor: ""
            failed: ""
          services:
            total: ""
            upToDate: ""
            behindMajor: ""
            behindMinor: ""
            failed: ""
          serviceTemplates:
            total: ""
            upToDate: ""
            behindMajor: ""
            behindMinor: ""
            failed: ""
          environmentTemplates:
            total: ""
            upToDate: ""
            behindMajor: ""
            behindMinor: ""
            failed: ""
          serviceInstances:
            total: ""
            upToDate: ""
            behindMajor: ""
            behindMinor: ""
            failed: ""
      properties:
        counts:
          $ref: '#/components/schemas/GetResourcesSummaryOutput_counts'
      required:
      - counts
      title: GetResourcesSummaryOutput
      type: object
    GetResourcesSummaryInput:
      properties: {}
      title: GetResourcesSummaryInput
      type: object
    GetServiceOutput:
      example:
        service:
          lastModifiedAt: ""
          branchName: ""
          description: ""
          repositoryConnectionArn: ""
          spec: ""
          statusMessage: ""
          pipeline:
            lastDeploymentAttemptedAt: ""
            templateMajorVersion: ""
            createdAt: ""
            deploymentStatus: ""
            lastDeploymentSucceededAt: ""
            templateName: ""
            lastSucceededDeploymentId: ""
            templateMinorVersion: ""
            deploymentStatusMessage: ""
            arn: ""
            lastAttemptedDeploymentId: ""
            spec: ""
          createdAt: ""
          templateName: ""
          name: ""
          repositoryId: ""
          arn: ""
          status: ""
      properties:
        service:
          $ref: '#/components/schemas/GetServiceOutput_service'
      title: GetServiceOutput
      type: object
    GetServiceInput:
      example:
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service that you want to get the detailed
              data for.
          title: name
      required:
      - name
      title: GetServiceInput
      type: object
    GetServiceInstanceOutput:
      example:
        serviceInstance:
          lastDeploymentAttemptedAt: ""
          templateMajorVersion: ""
          lastDeploymentSucceededAt: ""
          lastSucceededDeploymentId: ""
          lastClientRequestToken: ""
          serviceName: ""
          spec: ""
          createdAt: ""
          deploymentStatus: ""
          templateName: ""
          environmentName: ""
          name: ""
          templateMinorVersion: ""
          deploymentStatusMessage: ""
          arn: ""
          lastAttemptedDeploymentId: ""
      properties:
        serviceInstance:
          $ref: '#/components/schemas/GetServiceInstanceOutput_serviceInstance'
      required:
      - serviceInstance
      title: GetServiceInstanceOutput
      type: object
    GetServiceInstanceInput:
      example:
        name: ""
        serviceName: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of a service instance that you want to get the detailed
              data for.
          title: name
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service that you want the service instance
              input for.
          title: serviceName
      required:
      - name
      - serviceName
      title: GetServiceInstanceInput
      type: object
    GetServiceInstanceSyncStatusOutput:
      example:
        desiredState:
          repositoryProvider: ""
          repositoryName: ""
          branch: ""
          directory: ""
          sha: ""
        latestSuccessfulSync:
          targetRevision:
            repositoryProvider: ""
            repositoryName: ""
            branch: ""
            directory: ""
            sha: ""
          initialRevision:
            repositoryProvider: ""
            repositoryName: ""
            branch: ""
            directory: ""
            sha: ""
          startedAt: ""
          events: ""
          status: ""
          target: ""
        latestSync:
          targetRevision:
            repositoryProvider: ""
            repositoryName: ""
            branch: ""
            directory: ""
            sha: ""
          initialRevision:
            repositoryProvider: ""
            repositoryName: ""
            branch: ""
            directory: ""
            sha: ""
          startedAt: ""
          events: ""
          status: ""
          target: ""
      properties:
        desiredState:
          $ref: '#/components/schemas/GetServiceInstanceSyncStatusOutput_desiredState'
        latestSuccessfulSync:
          $ref: '#/components/schemas/GetServiceInstanceSyncStatusOutput_latestSuccessfulSync'
        latestSync:
          $ref: '#/components/schemas/GetServiceInstanceSyncStatusOutput_latestSync'
      title: GetServiceInstanceSyncStatusOutput
      type: object
    GetServiceInstanceSyncStatusInput:
      example:
        serviceInstanceName: ""
        serviceName: ""
      properties:
        serviceInstanceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service instance that you want the sync status
              input for.
          title: serviceInstanceName
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service that the service instance belongs
              to.
          title: serviceName
      required:
      - serviceInstanceName
      - serviceName
      title: GetServiceInstanceSyncStatusInput
      type: object
    GetServiceSyncBlockerSummaryOutput:
      example:
        serviceSyncBlockerSummary:
          serviceInstanceName: ""
          serviceName: ""
          latestBlockers: ""
      properties:
        serviceSyncBlockerSummary:
          $ref: '#/components/schemas/GetServiceSyncBlockerSummaryOutput_serviceSyncBlockerSummary'
      title: GetServiceSyncBlockerSummaryOutput
      type: object
    GetServiceSyncBlockerSummaryInput:
      example:
        serviceInstanceName: ""
        serviceName: ""
      properties:
        serviceInstanceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name of the service instance that you want to get the\
              \ service sync blocker summary for. If given bothe the instance name\
              \ and the service name, only the instance is blocked."
          title: serviceInstanceName
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name of the service that you want to get the service\
              \ sync blocker summary for. If given only the service name, all instances\
              \ are blocked."
          title: serviceName
      required:
      - serviceName
      title: GetServiceSyncBlockerSummaryInput
      type: object
    GetServiceSyncConfigOutput:
      example:
        serviceSyncConfig:
          filePath: ""
          repositoryProvider: ""
          repositoryName: ""
          serviceName: ""
          branch: ""
      properties:
        serviceSyncConfig:
          $ref: '#/components/schemas/GetServiceSyncConfigOutput_serviceSyncConfig'
      title: GetServiceSyncConfigOutput
      type: object
    GetServiceSyncConfigInput:
      example:
        serviceName: ""
      properties:
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service that you want to get the service
              sync configuration for.
          title: serviceName
      required:
      - serviceName
      title: GetServiceSyncConfigInput
      type: object
    GetServiceTemplateOutput:
      example:
        serviceTemplate:
          createdAt: ""
          lastModifiedAt: ""
          recommendedVersion: ""
          displayName: ""
          name: ""
          description: ""
          encryptionKey: ""
          arn: ""
          pipelineProvisioning: ""
      properties:
        serviceTemplate:
          $ref: '#/components/schemas/GetServiceTemplateOutput_serviceTemplate'
      required:
      - serviceTemplate
      title: GetServiceTemplateOutput
      type: object
    GetServiceTemplateInput:
      example:
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template that you want to get detailed
              data for.
          title: name
      required:
      - name
      title: GetServiceTemplateInput
      type: object
    GetServiceTemplateVersionOutput:
      example:
        serviceTemplateVersion:
          schema: ""
          lastModifiedAt: ""
          description: ""
          recommendedMinorVersion: ""
          majorVersion: ""
          statusMessage: ""
          createdAt: ""
          supportedComponentSources: ""
          templateName: ""
          compatibleEnvironmentTemplates: ""
          arn: ""
          minorVersion: ""
          status: ""
      properties:
        serviceTemplateVersion:
          $ref: '#/components/schemas/GetServiceTemplateVersionOutput_serviceTemplateVersion'
      required:
      - serviceTemplateVersion
      title: GetServiceTemplateVersionOutput
      type: object
    GetServiceTemplateVersionInput:
      example:
        templateName: ""
        majorVersion: ""
        minorVersion: ""
      properties:
        majorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: "To get service template major version detail data, include\
              \ <code>major Version</code>."
          title: majorVersion
        minorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: "To get service template minor version detail data, include\
              \ <code>minorVersion</code>."
          title: minorVersion
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template a version of which you want
              to get detailed data for.
          title: templateName
      required:
      - majorVersion
      - minorVersion
      - templateName
      title: GetServiceTemplateVersionInput
      type: object
    GetTemplateSyncConfigOutput:
      example:
        templateSyncConfig:
          templateType: ""
          templateName: ""
          repositoryProvider: ""
          repositoryName: ""
          branch: ""
          subdirectory: ""
      properties:
        templateSyncConfig:
          $ref: '#/components/schemas/CreateTemplateSyncConfigOutput_templateSyncConfig'
      title: GetTemplateSyncConfigOutput
      type: object
    GetTemplateSyncConfigInput:
      example:
        templateType: ""
        templateName: ""
      properties:
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The template name.
          title: templateName
        templateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          - description: The template type.
          title: templateType
      required:
      - templateName
      - templateType
      title: GetTemplateSyncConfigInput
      type: object
    GetTemplateSyncStatusOutput:
      example:
        desiredState:
          repositoryProvider: ""
          repositoryName: ""
          branch: ""
          directory: ""
          sha: ""
        latestSuccessfulSync:
          targetRevision:
            repositoryProvider: ""
            repositoryName: ""
            branch: ""
            directory: ""
            sha: ""
          initialRevision:
            repositoryProvider: ""
            repositoryName: ""
            branch: ""
            directory: ""
            sha: ""
          startedAt: ""
          events: ""
          status: ""
          target: ""
        latestSync:
          targetRevision:
            repositoryProvider: ""
            repositoryName: ""
            branch: ""
            directory: ""
            sha: ""
          initialRevision:
            repositoryProvider: ""
            repositoryName: ""
            branch: ""
            directory: ""
            sha: ""
          startedAt: ""
          events: ""
          status: ""
          target: ""
      properties:
        desiredState:
          $ref: '#/components/schemas/GetTemplateSyncStatusOutput_desiredState'
        latestSuccessfulSync:
          $ref: '#/components/schemas/GetTemplateSyncStatusOutput_latestSuccessfulSync'
        latestSync:
          $ref: '#/components/schemas/GetTemplateSyncStatusOutput_latestSync'
      title: GetTemplateSyncStatusOutput
      type: object
    GetTemplateSyncStatusInput:
      example:
        templateType: ""
        templateName: ""
        templateVersion: ""
      properties:
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The template name.
          title: templateName
        templateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          - description: The template type.
          title: templateType
        templateVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The template major version.
          title: templateVersion
      required:
      - templateName
      - templateType
      - templateVersion
      title: GetTemplateSyncStatusInput
      type: object
    ListComponentOutputsOutput:
      example:
        outputs: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next output in\
              \ the array of outputs, after the list of outputs that was previously\
              \ requested."
          title: nextToken
        outputs:
          allOf:
          - $ref: '#/components/schemas/OutputsList'
          - description: An array of component Infrastructure as Code (IaC) outputs.
          title: outputs
      required:
      - outputs
      title: ListComponentOutputsOutput
      type: object
    ListComponentOutputsInput:
      example:
        nextToken: ""
        deploymentId: ""
        componentName: ""
      properties:
        componentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the component whose outputs you want.
          title: componentName
        deploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the deployment whose outputs you want.
          title: deploymentId
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next output in\
              \ the array of outputs, after the list of outputs that was previously\
              \ requested."
          title: nextToken
      required:
      - componentName
      title: ListComponentOutputsInput
      type: object
    ListComponentProvisionedResourcesOutput:
      example:
        provisionedResources: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next provisioned\
              \ resource in the array of provisioned resources, after the current\
              \ requested list of provisioned resources."
          title: nextToken
        provisionedResources:
          allOf:
          - $ref: '#/components/schemas/ProvisionedResourceList'
          - description: An array of provisioned resources for a component.
          title: provisionedResources
      required:
      - provisionedResources
      title: ListComponentProvisionedResourcesOutput
      type: object
    ListComponentProvisionedResourcesInput:
      example:
        nextToken: ""
        componentName: ""
      properties:
        componentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the component whose provisioned resources you
              want.
          title: componentName
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next provisioned\
              \ resource in the array of provisioned resources, after the list of\
              \ provisioned resources that was previously requested."
          title: nextToken
      required:
      - componentName
      title: ListComponentProvisionedResourcesInput
      type: object
    ListComponentsOutput:
      example:
        components: ""
        nextToken: ""
      properties:
        components:
          allOf:
          - $ref: '#/components/schemas/ComponentSummaryList'
          - description: An array of components with summary data.
          title: components
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next component\
              \ in the array of components, after the current requested list of components."
          title: nextToken
      required:
      - components
      title: ListComponentsOutput
      type: object
    ListComponentsInput:
      example:
        environmentName: ""
        maxResults: ""
        nextToken: ""
        serviceInstanceName: ""
        serviceName: ""
      properties:
        environmentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of an environment for result list filtering. Proton
              returns components associated with the environment or attached to service
              instances running in it.
          title: environmentName
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxPageResults'
          - description: The maximum number of components to list.
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next component\
              \ in the array of components, after the list of components that was\
              \ previously requested."
          title: nextToken
        serviceInstanceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name of a service instance for result list filtering.\
              \ Proton returns the component attached to the service instance, if\
              \ any."
          title: serviceInstanceName
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of a service for result list filtering. Proton returns
              components attached to service instances of the service.
          title: serviceName
      title: ListComponentsInput
      type: object
    ListDeploymentsOutput:
      example:
        deployments: ""
        nextToken: ""
      properties:
        deployments:
          allOf:
          - $ref: '#/components/schemas/DeploymentSummaryList'
          - description: An array of deployment with summary data.
          title: deployments
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next deployment\
              \ in the array of deployment, after the current requested list of deployment."
          title: nextToken
      required:
      - deployments
      title: ListDeploymentsOutput
      type: object
    ListDeploymentsInput:
      example:
        environmentName: ""
        maxResults: ""
        nextToken: ""
        componentName: ""
        serviceInstanceName: ""
        serviceName: ""
      properties:
        componentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of a component for result list filtering. Proton
              returns deployments associated with that component.
          title: componentName
        environmentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of an environment for result list filtering. Proton
              returns deployments associated with the environment.
          title: environmentName
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxPageResults'
          - description: The maximum number of deployments to list.
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next deployment\
              \ in the array of deployment, after the list of deployment that was\
              \ previously requested."
          title: nextToken
        serviceInstanceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of a service instance for result list filtering.
              Proton returns the deployments associated with the service instance.
          title: serviceInstanceName
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of a service for result list filtering. Proton returns
              deployments associated with service instances of the service.
          title: serviceName
      title: ListDeploymentsInput
      type: object
    ListEnvironmentAccountConnectionsOutput:
      example:
        nextToken: ""
        environmentAccountConnections: ""
      properties:
        environmentAccountConnections:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionSummaryList'
          - description: 'An array of environment account connections with details
              that''s returned by Proton. '
          title: environmentAccountConnections
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next environment\
              \ account connection in the array of environment account connections,\
              \ after the current requested list of environment account connections."
          title: nextToken
      required:
      - environmentAccountConnections
      title: ListEnvironmentAccountConnectionsOutput
      type: object
    ListEnvironmentAccountConnectionsInput:
      example:
        requestedBy: ""
        environmentName: ""
        maxResults: ""
        nextToken: ""
        statuses: ""
      properties:
        environmentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The environment name that's associated with each listed environment
              account connection.
          title: environmentName
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxPageResults'
          - description: The maximum number of environment account connections to
              list.
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next environment\
              \ account connection in the array of environment account connections,\
              \ after the list of environment account connections that was previously\
              \ requested."
          title: nextToken
        requestedBy:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionRequesterAccountType'
          - description: The type of account making the <code>ListEnvironmentAccountConnections</code>
              request.
          title: requestedBy
        statuses:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionStatusList'
          - description: The status details for each listed environment account connection.
          title: statuses
      required:
      - requestedBy
      title: ListEnvironmentAccountConnectionsInput
      type: object
    ListEnvironmentOutputsOutput:
      example:
        outputs: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next environment\
              \ output in the array of environment outputs, after the current requested\
              \ list of environment outputs."
          title: nextToken
        outputs:
          allOf:
          - $ref: '#/components/schemas/OutputsList'
          - description: An array of environment outputs with detail data.
          title: outputs
      required:
      - outputs
      title: ListEnvironmentOutputsOutput
      type: object
    ListEnvironmentOutputsInput:
      example:
        environmentName: ""
        nextToken: ""
        deploymentId: ""
      properties:
        deploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the deployment whose outputs you want.
          title: deploymentId
        environmentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The environment name.
          title: environmentName
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next environment\
              \ output in the array of environment outputs, after the list of environment\
              \ outputs that was previously requested."
          title: nextToken
      required:
      - environmentName
      title: ListEnvironmentOutputsInput
      type: object
    ListEnvironmentProvisionedResourcesOutput:
      example:
        provisionedResources: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next environment\
              \ provisioned resource in the array of provisioned resources, after\
              \ the current requested list of environment provisioned resources."
          title: nextToken
        provisionedResources:
          allOf:
          - $ref: '#/components/schemas/ProvisionedResourceList'
          - description: An array of environment provisioned resources.
          title: provisionedResources
      required:
      - provisionedResources
      title: ListEnvironmentProvisionedResourcesOutput
      type: object
    ListEnvironmentProvisionedResourcesInput:
      example:
        environmentName: ""
        nextToken: ""
      properties:
        environmentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The environment name.
          title: environmentName
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next environment\
              \ provisioned resource in the array of environment provisioned resources,\
              \ after the list of environment provisioned resources that was previously\
              \ requested."
          title: nextToken
      required:
      - environmentName
      title: ListEnvironmentProvisionedResourcesInput
      type: object
    ListEnvironmentTemplateVersionsOutput:
      example:
        templateVersions: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next major or\
              \ minor version in the array of major or minor versions of an environment\
              \ template, after the list of major or minor versions that was previously\
              \ requested."
          title: nextToken
        templateVersions:
          allOf:
          - $ref: '#/components/schemas/EnvironmentTemplateVersionSummaryList'
          - description: An array of major or minor versions of an environment template
              detail data.
          title: templateVersions
      required:
      - templateVersions
      title: ListEnvironmentTemplateVersionsOutput
      type: object
    ListEnvironmentTemplateVersionsInput:
      example:
        templateName: ""
        maxResults: ""
        nextToken: ""
        majorVersion: ""
      properties:
        majorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: "<p>To view a list of minor of versions under a major version\
              \ of an environment template, include <code>major Version</code>.</p>\
              \ <p>To view a list of major versions of an environment template, <i>exclude</i>\
              \ <code>major Version</code>.</p>"
          title: majorVersion
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxPageResults'
          - description: The maximum number of major or minor versions of an environment
              template to list.
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next major or\
              \ minor version in the array of major or minor versions of an environment\
              \ template, after the list of major or minor versions that was previously\
              \ requested."
          title: nextToken
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment template.
          title: templateName
      required:
      - templateName
      title: ListEnvironmentTemplateVersionsInput
      type: object
    ListEnvironmentTemplatesOutput:
      example:
        nextToken: ""
        templates: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next environment\
              \ template in the array of environment templates, after the current\
              \ requested list of environment templates."
          title: nextToken
        templates:
          allOf:
          - $ref: '#/components/schemas/EnvironmentTemplateSummaryList'
          - description: An array of environment templates with detail data.
          title: templates
      required:
      - templates
      title: ListEnvironmentTemplatesOutput
      type: object
    ListEnvironmentTemplatesInput:
      example:
        maxResults: ""
        nextToken: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxPageResults'
          - description: The maximum number of environment templates to list.
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next environment\
              \ template in the array of environment templates, after the list of\
              \ environment templates that was previously requested."
          title: nextToken
      title: ListEnvironmentTemplatesInput
      type: object
    ListEnvironmentsOutput:
      example:
        environments: ""
        nextToken: ""
      properties:
        environments:
          allOf:
          - $ref: '#/components/schemas/EnvironmentSummaryList'
          - description: An array of environment detail data summaries.
          title: environments
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next environment\
              \ in the array of environments, after the current requested list of\
              \ environments."
          title: nextToken
      required:
      - environments
      title: ListEnvironmentsOutput
      type: object
    ListEnvironmentsInput:
      example:
        maxResults: ""
        nextToken: ""
        environmentTemplates: ""
      properties:
        environmentTemplates:
          allOf:
          - $ref: '#/components/schemas/EnvironmentTemplateFilterList'
          - description: An array of the versions of the environment template.
          title: environmentTemplates
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxPageResults'
          - description: The maximum number of environments to list.
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next environment\
              \ in the array of environments, after the list of environments that\
              \ was previously requested."
          title: nextToken
      title: ListEnvironmentsInput
      type: object
    ListRepositoriesOutput:
      example:
        repositories: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next repository\
              \ in the array of repositories, after the current requested list of\
              \ repositories. "
          title: nextToken
        repositories:
          allOf:
          - $ref: '#/components/schemas/RepositorySummaryList'
          - description: An array of repository links.
          title: repositories
      required:
      - repositories
      title: ListRepositoriesOutput
      type: object
    ListRepositoriesInput:
      example:
        maxResults: ""
        nextToken: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxPageResults'
          - description: The maximum number of repositories to list.
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next repository\
              \ in the array of repositories, after the list of repositories previously\
              \ requested."
          title: nextToken
      title: ListRepositoriesInput
      type: object
    ListRepositorySyncDefinitionsOutput:
      example:
        nextToken: ""
        syncDefinitions: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next repository\
              \ sync definition in the array of repository sync definitions, after\
              \ the current requested list of repository sync definitions."
          title: nextToken
        syncDefinitions:
          allOf:
          - $ref: '#/components/schemas/RepositorySyncDefinitionList'
          - description: An array of repository sync definitions.
          title: syncDefinitions
      required:
      - syncDefinitions
      title: ListRepositorySyncDefinitionsOutput
      type: object
    ListRepositorySyncDefinitionsInput:
      example:
        nextToken: ""
        repositoryProvider: ""
        repositoryName: ""
        syncType: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next repository\
              \ sync definition in the array of repository sync definitions, after\
              \ the list of repository sync definitions previously requested."
          title: nextToken
        repositoryName:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: The repository name.
          title: repositoryName
        repositoryProvider:
          allOf:
          - $ref: '#/components/schemas/RepositoryProvider'
          - description: The repository provider.
          title: repositoryProvider
        syncType:
          allOf:
          - $ref: '#/components/schemas/SyncType'
          - description: The sync type. The only supported value is <code>TEMPLATE_SYNC</code>.
          title: syncType
      required:
      - repositoryName
      - repositoryProvider
      - syncType
      title: ListRepositorySyncDefinitionsInput
      type: object
    ListServiceInstanceOutputsOutput:
      example:
        outputs: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next output in\
              \ the array of outputs, after the current requested list of outputs."
          title: nextToken
        outputs:
          allOf:
          - $ref: '#/components/schemas/OutputsList'
          - description: An array of service instance Infrastructure as Code (IaC)
              outputs.
          title: outputs
      required:
      - outputs
      title: ListServiceInstanceOutputsOutput
      type: object
    ListServiceInstanceOutputsInput:
      example:
        nextToken: ""
        deploymentId: ""
        serviceInstanceName: ""
        serviceName: ""
      properties:
        deploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the deployment whose outputs you want.
          title: deploymentId
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next output in\
              \ the array of outputs, after the list of outputs that was previously\
              \ requested."
          title: nextToken
        serviceInstanceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service instance whose outputs you want.
          title: serviceInstanceName
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service that <code>serviceInstanceName</code>
              is associated to.
          title: serviceName
      required:
      - serviceInstanceName
      - serviceName
      title: ListServiceInstanceOutputsInput
      type: object
    ListServiceInstanceProvisionedResourcesOutput:
      example:
        provisionedResources: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next provisioned\
              \ resource in the array of provisioned resources, after the current\
              \ requested list of provisioned resources."
          title: nextToken
        provisionedResources:
          allOf:
          - $ref: '#/components/schemas/ProvisionedResourceList'
          - description: An array of provisioned resources for a service instance.
          title: provisionedResources
      required:
      - provisionedResources
      title: ListServiceInstanceProvisionedResourcesOutput
      type: object
    ListServiceInstanceProvisionedResourcesInput:
      example:
        nextToken: ""
        serviceInstanceName: ""
        serviceName: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next provisioned\
              \ resource in the array of provisioned resources, after the list of\
              \ provisioned resources that was previously requested."
          title: nextToken
        serviceInstanceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service instance whose provisioned resources
              you want.
          title: serviceInstanceName
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service that <code>serviceInstanceName</code>
              is associated to.
          title: serviceName
      required:
      - serviceInstanceName
      - serviceName
      title: ListServiceInstanceProvisionedResourcesInput
      type: object
    ListServiceInstancesOutput:
      example:
        nextToken: ""
        serviceInstances: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next service\
              \ instance in the array of service instances, after the current requested\
              \ list of service instances."
          title: nextToken
        serviceInstances:
          allOf:
          - $ref: '#/components/schemas/ServiceInstanceSummaryList'
          - description: An array of service instances with summary data.
          title: serviceInstances
      required:
      - serviceInstances
      title: ListServiceInstancesOutput
      type: object
    ListServiceInstancesInput:
      example:
        maxResults: ""
        nextToken: ""
        sortOrder: ""
        sortBy: ""
        filters: ""
        serviceName: ""
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/ListServiceInstancesFilterList'
          - description: "An array of filtering criteria that scope down the result\
              \ list. By default, all service instances in the Amazon Web Services\
              \ account are returned."
          title: filters
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxPageResults'
          - description: The maximum number of service instances to list.
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next service\
              \ in the array of service instances, after the list of service instances\
              \ that was previously requested."
          title: nextToken
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service that the service instance belongs
              to.
          title: serviceName
        sortBy:
          allOf:
          - $ref: '#/components/schemas/ListServiceInstancesSortBy'
          - description: "<p>The field that the result list is sorted by.</p> <p>When\
              \ you choose to sort by <code>serviceName</code>, service instances\
              \ within each service are sorted by service instance name.</p> <p>Default:\
              \ <code>serviceName</code> </p>"
          title: sortBy
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: "<p>Result list sort order.</p> <p>Default: <code>ASCENDING</code>\
              \ </p>"
          title: sortOrder
      title: ListServiceInstancesInput
      type: object
    ListServicePipelineOutputsOutput:
      example:
        outputs: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next output in\
              \ the array of outputs, after the current requested list of outputs."
          title: nextToken
        outputs:
          allOf:
          - $ref: '#/components/schemas/OutputsList'
          - description: An array of service pipeline Infrastructure as Code (IaC)
              outputs.
          title: outputs
      required:
      - outputs
      title: ListServicePipelineOutputsOutput
      type: object
    ListServicePipelineOutputsInput:
      example:
        nextToken: ""
        deploymentId: ""
        serviceName: ""
      properties:
        deploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the deployment you want the outputs for.
          title: deploymentId
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next output in\
              \ the array of outputs, after the list of outputs that was previously\
              \ requested."
          title: nextToken
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service whose pipeline's outputs you want.
          title: serviceName
      required:
      - serviceName
      title: ListServicePipelineOutputsInput
      type: object
    ListServicePipelineProvisionedResourcesOutput:
      example:
        provisionedResources: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next provisioned\
              \ resource in the array of provisioned resources, after the current\
              \ requested list of provisioned resources."
          title: nextToken
        provisionedResources:
          allOf:
          - $ref: '#/components/schemas/ProvisionedResourceList'
          - description: An array of provisioned resources for a service and pipeline.
          title: provisionedResources
      required:
      - provisionedResources
      title: ListServicePipelineProvisionedResourcesOutput
      type: object
    ListServicePipelineProvisionedResourcesInput:
      example:
        nextToken: ""
        serviceName: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/EmptyNextToken'
          - description: "A token that indicates the location of the next provisioned\
              \ resource in the array of provisioned resources, after the list of\
              \ provisioned resources that was previously requested."
          title: nextToken
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service whose pipeline's provisioned resources
              you want.
          title: serviceName
      required:
      - serviceName
      title: ListServicePipelineProvisionedResourcesInput
      type: object
    ListServiceTemplateVersionsOutput:
      example:
        templateVersions: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next major or\
              \ minor version in the array of major or minor versions of a service\
              \ template, after the current requested list of service major or minor\
              \ versions."
          title: nextToken
        templateVersions:
          allOf:
          - $ref: '#/components/schemas/ServiceTemplateVersionSummaryList'
          - description: An array of major or minor versions of a service template
              with detail data.
          title: templateVersions
      required:
      - templateVersions
      title: ListServiceTemplateVersionsOutput
      type: object
    ListServiceTemplateVersionsInput:
      example:
        templateName: ""
        maxResults: ""
        nextToken: ""
        majorVersion: ""
      properties:
        majorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: "<p>To view a list of minor of versions under a major version\
              \ of a service template, include <code>major Version</code>.</p> <p>To\
              \ view a list of major versions of a service template, <i>exclude</i>\
              \ <code>major Version</code>.</p>"
          title: majorVersion
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxPageResults'
          - description: The maximum number of major or minor versions of a service
              template to list.
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next major or\
              \ minor version in the array of major or minor versions of a service\
              \ template, after the list of major or minor versions that was previously\
              \ requested."
          title: nextToken
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template.
          title: templateName
      required:
      - templateName
      title: ListServiceTemplateVersionsInput
      type: object
    ListServiceTemplatesOutput:
      example:
        nextToken: ""
        templates: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next service\
              \ template in the array of service templates, after the current requested\
              \ list of service templates."
          title: nextToken
        templates:
          allOf:
          - $ref: '#/components/schemas/ServiceTemplateSummaryList'
          - description: An array of service templates with detail data.
          title: templates
      required:
      - templates
      title: ListServiceTemplatesOutput
      type: object
    ListServiceTemplatesInput:
      example:
        maxResults: ""
        nextToken: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxPageResults'
          - description: The maximum number of service templates to list.
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next service\
              \ template in the array of service templates, after the list of service\
              \ templates previously requested."
          title: nextToken
      title: ListServiceTemplatesInput
      type: object
    ListServicesOutput:
      example:
        nextToken: ""
        services: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next service\
              \ in the array of services, after the current requested list of services."
          title: nextToken
        services:
          allOf:
          - $ref: '#/components/schemas/ServiceSummaryList'
          - description: An array of services with summaries of detail data.
          title: services
      required:
      - services
      title: ListServicesOutput
      type: object
    ListServicesInput:
      example:
        maxResults: ""
        nextToken: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxPageResults'
          - description: The maximum number of services to list.
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates the location of the next service\
              \ in the array of services, after the list of services that was previously\
              \ requested."
          title: nextToken
      title: ListServicesInput
      type: object
    ListTagsForResourceOutput:
      example:
        nextToken: ""
        tags: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A token that indicates the location of the next resource\
              \ tag in the array of resource tags, after the current requested list\
              \ of resource tags."
          title: nextToken
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of resource tags with detail data.
          title: tags
      required:
      - tags
      title: ListTagsForResourceOutput
      type: object
    ListTagsForResourceInput:
      example:
        maxResults: ""
        nextToken: ""
        resourceArn: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxPageResults'
          - description: The maximum number of tags to list.
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A token that indicates the location of the next resource\
              \ tag in the array of resource tags, after the list of resource tags\
              \ that was previously requested."
          title: nextToken
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the resource for the listed
              tags.
          title: resourceArn
      required:
      - resourceArn
      title: ListTagsForResourceInput
      type: object
    NotifyResourceDeploymentStatusChangeOutput:
      properties: {}
      type: object
    NotifyResourceDeploymentStatusChangeInput:
      example:
        outputs: ""
        deploymentId: ""
        resourceArn: ""
        statusMessage: ""
        status: ""
      properties:
        deploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The deployment ID for your provisioned resource.
          title: deploymentId
        outputs:
          allOf:
          - $ref: '#/components/schemas/NotifyResourceDeploymentStatusChangeInputOutputsList'
          - description: The provisioned resource state change detail data that's
              returned by Proton.
          title: outputs
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The provisioned resource Amazon Resource Name (ARN).
          title: resourceArn
        status:
          allOf:
          - $ref: '#/components/schemas/ResourceDeploymentStatus'
          - description: The status of your provisioned resource.
          title: status
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/NotifyResourceDeploymentStatusChangeInputStatusMessageString'
          - description: The deployment status message for your provisioned resource.
          title: statusMessage
      required:
      - resourceArn
      title: NotifyResourceDeploymentStatusChangeInput
      type: object
    RejectEnvironmentAccountConnectionOutput:
      example:
        environmentAccountConnection:
          managementAccountId: ""
          codebuildRoleArn: ""
          environmentAccountId: ""
          lastModifiedAt: ""
          requestedAt: ""
          componentRoleArn: ""
          environmentName: ""
          roleArn: ""
          id: ""
          arn: ""
          status: ""
      properties:
        environmentAccountConnection:
          $ref: '#/components/schemas/RejectEnvironmentAccountConnectionOutput_environmentAccountConnection'
      required:
      - environmentAccountConnection
      title: RejectEnvironmentAccountConnectionOutput
      type: object
    RejectEnvironmentAccountConnectionInput:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          - description: The ID of the environment account connection to reject.
          title: id
      required:
      - id
      title: RejectEnvironmentAccountConnectionInput
      type: object
    TagResourceOutput:
      properties: {}
      type: object
    TagResourceInput:
      example:
        resourceArn: ""
        tags: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Proton resource to
              apply customer tags to.
          title: resourceArn
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of customer tags to apply to the Proton resource.
          title: tags
      required:
      - resourceArn
      - tags
      title: TagResourceInput
      type: object
    UntagResourceOutput:
      properties: {}
      type: object
    UntagResourceInput:
      example:
        tagKeys: ""
        resourceArn: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the resource to remove
              customer tags from.
          title: resourceArn
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: A list of customer tag keys that indicate the customer tags
              to be removed from the resource.
          title: tagKeys
      required:
      - resourceArn
      - tagKeys
      title: UntagResourceInput
      type: object
    UpdateAccountSettingsOutput:
      example:
        accountSettings:
          pipelineServiceRoleArn: ""
          pipelineProvisioningRepository:
            provider: ""
            name: ""
            arn: ""
            branch: ""
          pipelineCodebuildRoleArn: ""
      properties:
        accountSettings:
          $ref: '#/components/schemas/UpdateAccountSettingsOutput_accountSettings'
      required:
      - accountSettings
      title: UpdateAccountSettingsOutput
      type: object
    UpdateAccountSettingsInput:
      example:
        deletePipelineProvisioningRepository: ""
        pipelineServiceRoleArn: ""
        pipelineProvisioningRepository:
          provider: ""
          name: ""
          branch: ""
        pipelineCodebuildRoleArn: ""
      properties:
        deletePipelineProvisioningRepository:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Set to <code>true</code> to remove a configured pipeline
              repository from the account settings. Don't set this field if you are
              updating the configured pipeline repository.
          title: deletePipelineProvisioningRepository
        pipelineCodebuildRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArnOrEmptyString'
          - description: The Amazon Resource Name (ARN) of the service role you want
              to use for provisioning pipelines. Proton assumes this role for CodeBuild-based
              provisioning.
          title: pipelineCodebuildRoleArn
        pipelineProvisioningRepository:
          $ref: '#/components/schemas/UpdateAccountSettingsInput_pipelineProvisioningRepository'
        pipelineServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArnOrEmptyString'
          - description: "<p>The Amazon Resource Name (ARN) of the service role you\
              \ want to use for provisioning pipelines. Assumed by Proton for Amazon\
              \ Web Services-managed provisioning, and by customer-owned automation\
              \ for self-managed provisioning.</p> <p>To remove a previously configured\
              \ ARN, specify an empty string.</p>"
          title: pipelineServiceRoleArn
      title: UpdateAccountSettingsInput
      type: object
    UpdateComponentOutput:
      example:
        component:
          lastDeploymentAttemptedAt: ""
          lastDeploymentSucceededAt: ""
          lastModifiedAt: ""
          lastSucceededDeploymentId: ""
          lastClientRequestToken: ""
          description: ""
          serviceInstanceName: ""
          serviceName: ""
          createdAt: ""
          deploymentStatus: ""
          environmentName: ""
          name: ""
          deploymentStatusMessage: ""
          arn: ""
          lastAttemptedDeploymentId: ""
          serviceSpec: ""
      properties:
        component:
          $ref: '#/components/schemas/UpdateComponentOutput_component'
      required:
      - component
      title: UpdateComponentOutput
      type: object
    UpdateComponentInput:
      example:
        deploymentType: ""
        clientToken: ""
        name: ""
        description: ""
        serviceInstanceName: ""
        templateFile: ""
        serviceName: ""
        serviceSpec: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: The client token for the updated component.
          title: clientToken
        deploymentType:
          allOf:
          - $ref: '#/components/schemas/ComponentDeploymentUpdateType'
          - description: "<p>The deployment type. It defines the mode for updating\
              \ a component, as follows:</p> <dl> <dt/> <dd> <p> <code>NONE</code>\
              \ </p> <p>In this mode, a deployment <i>doesn't</i> occur. Only the\
              \ requested metadata parameters are updated. You can only specify <code>description</code>\
              \ in this mode.</p> </dd> <dt/> <dd> <p> <code>CURRENT_VERSION</code>\
              \ </p> <p>In this mode, the component is deployed and updated with the\
              \ new <code>serviceSpec</code>, <code>templateSource</code>, and/or\
              \ <code>type</code> that you provide. Only requested parameters are\
              \ updated.</p> </dd> </dl>"
          title: deploymentType
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: An optional customer-provided description of the component.
          title: description
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the component to update.
          title: name
        serviceInstanceName:
          allOf:
          - $ref: '#/components/schemas/ResourceNameOrEmpty'
          - description: The name of the service instance that you want to attach
              this component to. Don't specify to keep the component's current service
              instance attachment. Specify an empty string to detach the component
              from the service instance it's attached to. Specify non-empty values
              for both <code>serviceInstanceName</code> and <code>serviceName</code>
              or for neither of them.
          title: serviceInstanceName
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceNameOrEmpty'
          - description: The name of the service that <code>serviceInstanceName</code>
              is associated with. Don't specify to keep the component's current service
              instance attachment. Specify an empty string to detach the component
              from the service instance it's attached to. Specify non-empty values
              for both <code>serviceInstanceName</code> and <code>serviceName</code>
              or for neither of them.
          title: serviceName
        serviceSpec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: The service spec that you want the component to use to access
              service inputs. Set this only when the component is attached to a service
              instance.
          title: serviceSpec
        templateFile:
          allOf:
          - $ref: '#/components/schemas/TemplateFileContents'
          - description: "<p>A path to the Infrastructure as Code (IaC) file describing\
              \ infrastructure that a custom component provisions.</p> <note> <p>Components\
              \ support a single IaC file, even if you use Terraform as your template\
              \ language.</p> </note>"
          title: templateFile
      required:
      - deploymentType
      - name
      title: UpdateComponentInput
      type: object
    UpdateEnvironmentOutput:
      example:
        environment:
          lastDeploymentAttemptedAt: ""
          templateMajorVersion: ""
          codebuildRoleArn: ""
          lastDeploymentSucceededAt: ""
          environmentAccountId: ""
          componentRoleArn: ""
          lastSucceededDeploymentId: ""
          description: ""
          spec: ""
          environmentAccountConnectionId: ""
          createdAt: ""
          deploymentStatus: ""
          templateName: ""
          name: ""
          templateMinorVersion: ""
          deploymentStatusMessage: ""
          provisioning: ""
          arn: ""
          protonServiceRoleArn: ""
          provisioningRepository:
            provider: ""
            name: ""
            arn: ""
            branch: ""
          lastAttemptedDeploymentId: ""
      properties:
        environment:
          $ref: '#/components/schemas/CreateEnvironmentOutput_environment'
      required:
      - environment
      title: UpdateEnvironmentOutput
      type: object
    UpdateEnvironmentInput:
      example:
        templateMajorVersion: ""
        codebuildRoleArn: ""
        deploymentType: ""
        componentRoleArn: ""
        name: ""
        description: ""
        templateMinorVersion: ""
        protonServiceRoleArn: ""
        provisioningRepository:
          provider: ""
          name: ""
          branch: ""
        spec: ""
        environmentAccountConnectionId: ""
      properties:
        codebuildRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of the IAM service role that
              allows Proton to provision infrastructure using CodeBuild-based provisioning
              on your behalf.
          title: codebuildRoleArn
        componentRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM service role\
              \ that Proton uses when provisioning directly defined components in\
              \ this environment. It determines the scope of infrastructure that a\
              \ component can provision.</p> <p>The environment must have a <code>componentRoleArn</code>\
              \ to allow directly defined components to be associated with the environment.</p>\
              \ <p>For more information about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
              >Proton components</a> in the <i>Proton User Guide</i>.</p>"
          title: componentRoleArn
        deploymentType:
          allOf:
          - $ref: '#/components/schemas/DeploymentUpdateType'
          - description: "<p>There are four modes for updating an environment. The\
              \ <code>deploymentType</code> field defines the mode.</p> <dl> <dt/>\
              \ <dd> <p> <code>NONE</code> </p> <p>In this mode, a deployment <i>doesn't</i>\
              \ occur. Only the requested metadata parameters are updated.</p> </dd>\
              \ <dt/> <dd> <p> <code>CURRENT_VERSION</code> </p> <p>In this mode,\
              \ the environment is deployed and updated with the new spec that you\
              \ provide. Only requested parameters are updated. <i>Donâ€™t</i> include\
              \ major or minor version parameters when you use this <code>deployment-type</code>.</p>\
              \ </dd> <dt/> <dd> <p> <code>MINOR_VERSION</code> </p> <p>In this mode,\
              \ the environment is deployed and updated with the published, recommended\
              \ (latest) minor version of the current major version in use, by default.\
              \ You can also specify a different minor version of the current major\
              \ version in use.</p> </dd> <dt/> <dd> <p> <code>MAJOR_VERSION</code>\
              \ </p> <p>In this mode, the environment is deployed and updated with\
              \ the published, recommended (latest) major and minor version of the\
              \ current template, by default. You can also specify a different major\
              \ version that is higher than the major version in use and a minor version\
              \ (optional).</p> </dd> </dl>"
          title: deploymentType
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the environment update.
          title: description
        environmentAccountConnectionId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          - description: <p>The ID of the environment account connection.</p> <p>You
              can only update to a new environment account connection if it was created
              in the same environment account that the current environment account
              connection was created in and is associated with the current environment.</p>
          title: environmentAccountConnectionId
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment to update.
          title: name
        protonServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Proton service role
              that allows Proton to make API calls to other services your behalf.
          title: protonServiceRoleArn
        provisioningRepository:
          $ref: '#/components/schemas/UpdateEnvironmentInput_provisioningRepository'
        spec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: The formatted specification that defines the update.
          title: spec
        templateMajorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The major version of the environment to update.
          title: templateMajorVersion
        templateMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The minor version of the environment to update.
          title: templateMinorVersion
      required:
      - deploymentType
      - name
      title: UpdateEnvironmentInput
      type: object
    UpdateEnvironmentAccountConnectionOutput:
      example:
        environmentAccountConnection:
          managementAccountId: ""
          codebuildRoleArn: ""
          environmentAccountId: ""
          lastModifiedAt: ""
          requestedAt: ""
          componentRoleArn: ""
          environmentName: ""
          roleArn: ""
          id: ""
          arn: ""
          status: ""
      properties:
        environmentAccountConnection:
          $ref: '#/components/schemas/CreateEnvironmentAccountConnectionOutput_environmentAccountConnection'
      required:
      - environmentAccountConnection
      title: UpdateEnvironmentAccountConnectionOutput
      type: object
    UpdateEnvironmentAccountConnectionInput:
      example:
        codebuildRoleArn: ""
        componentRoleArn: ""
        roleArn: ""
        id: ""
      properties:
        codebuildRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of an IAM service role in
              the environment account. Proton uses this role to provision infrastructure
              resources using CodeBuild-based provisioning in the associated environment
              account.
          title: codebuildRoleArn
        componentRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM service role\
              \ that Proton uses when provisioning directly defined components in\
              \ the associated environment account. It determines the scope of infrastructure\
              \ that a component can provision in the account.</p> <p>The environment\
              \ account connection must have a <code>componentRoleArn</code> to allow\
              \ directly defined components to be associated with any environments\
              \ running in the account.</p> <p>For more information about components,\
              \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
              >Proton components</a> in the <i>Proton User Guide</i>.</p>"
          title: componentRoleArn
        id:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          - description: The ID of the environment account connection to update.
          title: id
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of the IAM service role that's
              associated with the environment account connection to update.
          title: roleArn
      required:
      - id
      title: UpdateEnvironmentAccountConnectionInput
      type: object
    UpdateEnvironmentTemplateOutput:
      example:
        environmentTemplate:
          createdAt: ""
          lastModifiedAt: ""
          recommendedVersion: ""
          displayName: ""
          name: ""
          description: ""
          provisioning: ""
          encryptionKey: ""
          arn: ""
      properties:
        environmentTemplate:
          $ref: '#/components/schemas/CreateEnvironmentTemplateOutput_environmentTemplate'
      required:
      - environmentTemplate
      title: UpdateEnvironmentTemplateOutput
      type: object
    UpdateEnvironmentTemplateInput:
      example:
        displayName: ""
        name: ""
        description: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the environment template update.
          title: description
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The name of the environment template to update as displayed
              in the developer interface.
          title: displayName
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment template to update.
          title: name
      required:
      - name
      title: UpdateEnvironmentTemplateInput
      type: object
    UpdateEnvironmentTemplateVersionOutput:
      example:
        environmentTemplateVersion:
          schema: ""
          createdAt: ""
          lastModifiedAt: ""
          templateName: ""
          description: ""
          recommendedMinorVersion: ""
          arn: ""
          majorVersion: ""
          minorVersion: ""
          statusMessage: ""
          status: ""
      properties:
        environmentTemplateVersion:
          $ref: '#/components/schemas/UpdateEnvironmentTemplateVersionOutput_environmentTemplateVersion'
      required:
      - environmentTemplateVersion
      title: UpdateEnvironmentTemplateVersionOutput
      type: object
    UpdateEnvironmentTemplateVersionInput:
      example:
        templateName: ""
        description: ""
        majorVersion: ""
        minorVersion: ""
        status: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of environment template version to update.
          title: description
        majorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: "To update a major version of an environment template, include\
              \ <code>major Version</code>."
          title: majorVersion
        minorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: "To update a minor version of an environment template, include\
              \ <code>minorVersion</code>."
          title: minorVersion
        status:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionStatus'
          - description: The status of the environment template minor version to update.
          title: status
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment template.
          title: templateName
      required:
      - majorVersion
      - minorVersion
      - templateName
      title: UpdateEnvironmentTemplateVersionInput
      type: object
    UpdateServiceOutput:
      example:
        service:
          lastModifiedAt: ""
          branchName: ""
          description: ""
          repositoryConnectionArn: ""
          spec: ""
          statusMessage: ""
          pipeline:
            lastDeploymentAttemptedAt: ""
            templateMajorVersion: ""
            createdAt: ""
            deploymentStatus: ""
            lastDeploymentSucceededAt: ""
            templateName: ""
            lastSucceededDeploymentId: ""
            templateMinorVersion: ""
            deploymentStatusMessage: ""
            arn: ""
            lastAttemptedDeploymentId: ""
            spec: ""
          createdAt: ""
          templateName: ""
          name: ""
          repositoryId: ""
          arn: ""
          status: ""
      properties:
        service:
          $ref: '#/components/schemas/CreateServiceOutput_service'
      required:
      - service
      title: UpdateServiceOutput
      type: object
    UpdateServiceInput:
      example:
        name: ""
        description: ""
        spec: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The edited service description.
          title: description
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service to edit.
          title: name
        spec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: "Lists the service instances to add and the existing service\
              \ instances to remain. Omit the existing service instances to delete\
              \ from the list. <i>Don't</i> include edits to the existing service\
              \ instances or pipeline. For more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-svc-update.html\"\
              >Edit a service</a> in the <i>Proton User Guide</i>."
          title: spec
      required:
      - name
      title: UpdateServiceInput
      type: object
    UpdateServiceInstanceOutput:
      example:
        serviceInstance:
          lastDeploymentAttemptedAt: ""
          templateMajorVersion: ""
          lastDeploymentSucceededAt: ""
          lastSucceededDeploymentId: ""
          lastClientRequestToken: ""
          serviceName: ""
          spec: ""
          createdAt: ""
          deploymentStatus: ""
          templateName: ""
          environmentName: ""
          name: ""
          templateMinorVersion: ""
          deploymentStatusMessage: ""
          arn: ""
          lastAttemptedDeploymentId: ""
      properties:
        serviceInstance:
          $ref: '#/components/schemas/CancelServiceInstanceDeploymentOutput_serviceInstance'
      required:
      - serviceInstance
      title: UpdateServiceInstanceOutput
      type: object
    UpdateServiceInstanceInput:
      example:
        templateMajorVersion: ""
        deploymentType: ""
        clientToken: ""
        name: ""
        templateMinorVersion: ""
        serviceName: ""
        spec: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: The client token of the service instance to update.
          title: clientToken
        deploymentType:
          allOf:
          - $ref: '#/components/schemas/DeploymentUpdateType'
          - description: "<p>The deployment type. It defines the mode for updating\
              \ a service instance, as follows:</p> <dl> <dt/> <dd> <p> <code>NONE</code>\
              \ </p> <p>In this mode, a deployment <i>doesn't</i> occur. Only the\
              \ requested metadata parameters are updated.</p> </dd> <dt/> <dd> <p>\
              \ <code>CURRENT_VERSION</code> </p> <p>In this mode, the service instance\
              \ is deployed and updated with the new spec that you provide. Only requested\
              \ parameters are updated. <i>Donâ€™t</i> include major or minor version\
              \ parameters when you use this deployment type.</p> </dd> <dt/> <dd>\
              \ <p> <code>MINOR_VERSION</code> </p> <p>In this mode, the service instance\
              \ is deployed and updated with the published, recommended (latest) minor\
              \ version of the current major version in use, by default. You can also\
              \ specify a different minor version of the current major version in\
              \ use.</p> </dd> <dt/> <dd> <p> <code>MAJOR_VERSION</code> </p> <p>In\
              \ this mode, the service instance is deployed and updated with the published,\
              \ recommended (latest) major and minor version of the current template,\
              \ by default. You can specify a different major version that's higher\
              \ than the major version in use and a minor version.</p> </dd> </dl>"
          title: deploymentType
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service instance to update.
          title: name
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service that the service instance belongs
              to.
          title: serviceName
        spec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: The formatted specification that defines the service instance
              update.
          title: spec
        templateMajorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The major version of the service template to update.
          title: templateMajorVersion
        templateMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The minor version of the service template to update.
          title: templateMinorVersion
      required:
      - deploymentType
      - name
      - serviceName
      title: UpdateServiceInstanceInput
      type: object
    UpdateServicePipelineOutput:
      example:
        pipeline:
          lastDeploymentAttemptedAt: ""
          templateMajorVersion: ""
          createdAt: ""
          deploymentStatus: ""
          lastDeploymentSucceededAt: ""
          templateName: ""
          lastSucceededDeploymentId: ""
          templateMinorVersion: ""
          deploymentStatusMessage: ""
          arn: ""
          lastAttemptedDeploymentId: ""
          spec: ""
      properties:
        pipeline:
          $ref: '#/components/schemas/UpdateServicePipelineOutput_pipeline'
      required:
      - pipeline
      title: UpdateServicePipelineOutput
      type: object
    UpdateServicePipelineInput:
      example:
        templateMajorVersion: ""
        deploymentType: ""
        templateMinorVersion: ""
        serviceName: ""
        spec: ""
      properties:
        deploymentType:
          allOf:
          - $ref: '#/components/schemas/DeploymentUpdateType'
          - description: "<p>The deployment type.</p> <p>There are four modes for\
              \ updating a service pipeline. The <code>deploymentType</code> field\
              \ defines the mode.</p> <dl> <dt/> <dd> <p> <code>NONE</code> </p> <p>In\
              \ this mode, a deployment <i>doesn't</i> occur. Only the requested metadata\
              \ parameters are updated.</p> </dd> <dt/> <dd> <p> <code>CURRENT_VERSION</code>\
              \ </p> <p>In this mode, the service pipeline is deployed and updated\
              \ with the new spec that you provide. Only requested parameters are\
              \ updated. <i>Donâ€™t</i> include major or minor version parameters when\
              \ you use this <code>deployment-type</code>.</p> </dd> <dt/> <dd> <p>\
              \ <code>MINOR_VERSION</code> </p> <p>In this mode, the service pipeline\
              \ is deployed and updated with the published, recommended (latest) minor\
              \ version of the current major version in use, by default. You can specify\
              \ a different minor version of the current major version in use.</p>\
              \ </dd> <dt/> <dd> <p> <code>MAJOR_VERSION</code> </p> <p>In this mode,\
              \ the service pipeline is deployed and updated with the published, recommended\
              \ (latest) major and minor version of the current template, by default.\
              \ You can specify a different major version that's higher than the major\
              \ version in use and a minor version.</p> </dd> </dl>"
          title: deploymentType
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service to that the pipeline is associated
              with.
          title: serviceName
        spec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: The spec for the service pipeline to update.
          title: spec
        templateMajorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The major version of the service template that was used to
              create the service that the pipeline is associated with.
          title: templateMajorVersion
        templateMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The minor version of the service template that was used to
              create the service that the pipeline is associated with.
          title: templateMinorVersion
      required:
      - deploymentType
      - serviceName
      - spec
      title: UpdateServicePipelineInput
      type: object
    UpdateServiceSyncBlockerOutput:
      example:
        serviceSyncBlocker:
          createdAt: ""
          resolvedAt: ""
          createdReason: ""
          contexts: ""
          id: ""
          type: ""
          resolvedReason: ""
          status: ""
        serviceInstanceName: ""
        serviceName: ""
      properties:
        serviceInstanceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service instance that you want to update
              the service sync blocker for.
          title: serviceInstanceName
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service that you want to update the service
              sync blocker for.
          title: serviceName
        serviceSyncBlocker:
          $ref: '#/components/schemas/UpdateServiceSyncBlockerOutput_serviceSyncBlocker'
      required:
      - serviceName
      - serviceSyncBlocker
      title: UpdateServiceSyncBlockerOutput
      type: object
    UpdateServiceSyncBlockerInput:
      example:
        id: ""
        resolvedReason: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the service sync blocker.
          title: id
        resolvedReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The reason the service sync blocker was resolved.
          title: resolvedReason
      required:
      - id
      - resolvedReason
      title: UpdateServiceSyncBlockerInput
      type: object
    UpdateServiceSyncConfigOutput:
      example:
        serviceSyncConfig:
          filePath: ""
          repositoryProvider: ""
          repositoryName: ""
          serviceName: ""
          branch: ""
      properties:
        serviceSyncConfig:
          $ref: '#/components/schemas/CreateServiceSyncConfigOutput_serviceSyncConfig'
      title: UpdateServiceSyncConfigOutput
      type: object
    UpdateServiceSyncConfigInput:
      example:
        filePath: ""
        repositoryProvider: ""
        repositoryName: ""
        serviceName: ""
        branch: ""
      properties:
        branch:
          allOf:
          - $ref: '#/components/schemas/GitBranchName'
          - description: The name of the code repository branch where the Proton Ops
              file is found.
          title: branch
        filePath:
          allOf:
          - $ref: '#/components/schemas/OpsFilePath'
          - description: The path to the Proton Ops file.
          title: filePath
        repositoryName:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: The name of the repository where the Proton Ops file is found.
          title: repositoryName
        repositoryProvider:
          allOf:
          - $ref: '#/components/schemas/RepositoryProvider'
          - description: The name of the repository provider where the Proton Ops
              file is found.
          title: repositoryProvider
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service the Proton Ops file is for.
          title: serviceName
      required:
      - branch
      - filePath
      - repositoryName
      - repositoryProvider
      - serviceName
      title: UpdateServiceSyncConfigInput
      type: object
    UpdateServiceTemplateOutput:
      example:
        serviceTemplate:
          createdAt: ""
          lastModifiedAt: ""
          recommendedVersion: ""
          displayName: ""
          name: ""
          description: ""
          encryptionKey: ""
          arn: ""
          pipelineProvisioning: ""
      properties:
        serviceTemplate:
          $ref: '#/components/schemas/CreateServiceTemplateOutput_serviceTemplate'
      required:
      - serviceTemplate
      title: UpdateServiceTemplateOutput
      type: object
    UpdateServiceTemplateInput:
      example:
        displayName: ""
        name: ""
        description: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the service template update.
          title: description
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The name of the service template to update that's displayed
              in the developer interface.
          title: displayName
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template to update.
          title: name
      required:
      - name
      title: UpdateServiceTemplateInput
      type: object
    UpdateServiceTemplateVersionOutput:
      example:
        serviceTemplateVersion:
          schema: ""
          lastModifiedAt: ""
          description: ""
          recommendedMinorVersion: ""
          majorVersion: ""
          statusMessage: ""
          createdAt: ""
          supportedComponentSources: ""
          templateName: ""
          compatibleEnvironmentTemplates: ""
          arn: ""
          minorVersion: ""
          status: ""
      properties:
        serviceTemplateVersion:
          $ref: '#/components/schemas/UpdateServiceTemplateVersionOutput_serviceTemplateVersion'
      required:
      - serviceTemplateVersion
      title: UpdateServiceTemplateVersionOutput
      type: object
    UpdateServiceTemplateVersionInput:
      example:
        supportedComponentSources: ""
        templateName: ""
        description: ""
        compatibleEnvironmentTemplates: ""
        majorVersion: ""
        minorVersion: ""
        status: ""
      properties:
        compatibleEnvironmentTemplates:
          allOf:
          - $ref: '#/components/schemas/CompatibleEnvironmentTemplateInputList'
          - description: An array of environment template objects that are compatible
              with this service template version. A service instance based on this
              service template version can run in environments based on compatible
              templates.
          title: compatibleEnvironmentTemplates
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of a service template version to update.
          title: description
        majorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: "To update a major version of a service template, include\
              \ <code>major Version</code>."
          title: majorVersion
        minorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: "To update a minor version of a service template, include\
              \ <code>minorVersion</code>."
          title: minorVersion
        status:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionStatus'
          - description: The status of the service template minor version to update.
          title: status
        supportedComponentSources:
          allOf:
          - $ref: '#/components/schemas/ServiceTemplateSupportedComponentSourceInputList'
          - description: "<p>An array of supported component sources. Components with\
              \ supported sources can be attached to service instances based on this\
              \ service template version.</p> <note> <p>A change to <code>supportedComponentSources</code>\
              \ doesn't impact existing component attachments to instances based on\
              \ this template version. A change only affects later associations.</p>\
              \ </note> <p>For more information about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
              >Proton components</a> in the <i>Proton User Guide</i>.</p>"
          title: supportedComponentSources
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template.
          title: templateName
      required:
      - majorVersion
      - minorVersion
      - templateName
      title: UpdateServiceTemplateVersionInput
      type: object
    UpdateTemplateSyncConfigOutput:
      example:
        templateSyncConfig:
          templateType: ""
          templateName: ""
          repositoryProvider: ""
          repositoryName: ""
          branch: ""
          subdirectory: ""
      properties:
        templateSyncConfig:
          $ref: '#/components/schemas/CreateTemplateSyncConfigOutput_templateSyncConfig'
      title: UpdateTemplateSyncConfigOutput
      type: object
    UpdateTemplateSyncConfigInput:
      example:
        templateType: ""
        templateName: ""
        repositoryProvider: ""
        repositoryName: ""
        branch: ""
        subdirectory: ""
      properties:
        branch:
          allOf:
          - $ref: '#/components/schemas/GitBranchName'
          - description: The repository branch for your template.
          title: branch
        repositoryName:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: "The repository name (for example, <code>myrepos/myrepo</code>)."
          title: repositoryName
        repositoryProvider:
          allOf:
          - $ref: '#/components/schemas/RepositoryProvider'
          - description: The repository provider.
          title: repositoryProvider
        subdirectory:
          allOf:
          - $ref: '#/components/schemas/Subdirectory'
          - description: "A subdirectory path to your template bundle version. When\
              \ included, limits the template bundle search to this repository directory."
          title: subdirectory
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The synced template name.
          title: templateName
        templateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          - description: The synced template type.
          title: templateType
      required:
      - branch
      - repositoryName
      - repositoryProvider
      - templateName
      - templateType
      title: UpdateTemplateSyncConfigInput
      type: object
    EnvironmentAccountConnectionId:
      pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      type: string
    EnvironmentAccountConnection:
      description: Detailed data of an Proton environment account connection resource.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionArn'
          - description: The Amazon Resource Name (ARN) of the environment account
              connection.
          title: arn
        codebuildRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of an IAM service role in
              the environment account. Proton uses this role to provision infrastructure
              resources using CodeBuild-based provisioning in the associated environment
              account.
          title: codebuildRoleArn
        componentRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM service role\
              \ that Proton uses when provisioning directly defined components in\
              \ the associated environment account. It determines the scope of infrastructure\
              \ that a component can provision in the account.</p> <p>The environment\
              \ account connection must have a <code>componentRoleArn</code> to allow\
              \ directly defined components to be associated with any environments\
              \ running in the account.</p> <p>For more information about components,\
              \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
              >Proton components</a> in the <i>Proton User Guide</i>.</p>"
          title: componentRoleArn
        environmentAccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          - description: The environment account that's connected to the environment
              account connection.
          title: environmentAccountId
        environmentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment that's associated with the environment
              account connection.
          title: environmentName
        id:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          - description: The ID of the environment account connection.
          title: id
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the environment account connection was last
              modified.
          title: lastModifiedAt
        managementAccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          - description: The ID of the management account that's connected to the
              environment account connection.
          title: managementAccountId
        requestedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the environment account connection request
              was made.
          title: requestedAt
        roleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The IAM service role that's associated with the environment
              account connection.
          title: roleArn
        status:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionStatus'
          - description: The status of the environment account connection.
          title: status
      required:
      - arn
      - environmentAccountId
      - environmentName
      - id
      - lastModifiedAt
      - managementAccountId
      - requestedAt
      - roleArn
      - status
      title: EnvironmentAccountConnection
      type: object
    RoleArnOrEmptyString:
      maxLength: 2048
      minLength: 0
      pattern: "(^$)|(^arn:(aws|aws-cn|aws-us-gov):iam::\\d{12}:role/([\\w+=,.@-]{1,512}[/:])*([\\\
        w+=,.@-]{1,64})$)"
      type: string
    RepositoryBranch:
      description: Detail data for a linked repository branch.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/RepositoryArn'
          - description: The Amazon Resource Name (ARN) of the linked repository.
          title: arn
        branch:
          allOf:
          - $ref: '#/components/schemas/GitBranchName'
          - description: The repository branch.
          title: branch
        name:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: The repository name.
          title: name
        provider:
          allOf:
          - $ref: '#/components/schemas/RepositoryProvider'
          - description: The repository provider.
          title: provider
      required:
      - arn
      - branch
      - name
      - provider
      title: RepositoryBranch
      type: object
    AccountSettings:
      description: Proton settings that are used for multiple services in the Amazon
        Web Services account.
      properties:
        pipelineCodebuildRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArnOrEmptyString'
          - description: The Amazon Resource Name (ARN) of the service role that Proton
              uses for provisioning pipelines. Proton assumes this role for CodeBuild-based
              provisioning.
          title: pipelineCodebuildRoleArn
        pipelineProvisioningRepository:
          $ref: '#/components/schemas/AccountSettings_pipelineProvisioningRepository'
        pipelineServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArnOrEmptyString'
          - description: "The Amazon Resource Name (ARN) of the service role you want\
              \ to use for provisioning pipelines. Assumed by Proton for Amazon Web\
              \ Services-managed provisioning, and by customer-owned automation for\
              \ self-managed provisioning."
          title: pipelineServiceRoleArn
      title: AccountSettings
      type: object
    Arn:
      maxLength: 200
      minLength: 1
      pattern: "^arn:(aws|aws-cn|aws-us-gov):[a-zA-Z0-9-]+:[a-zA-Z0-9-]*:\\d{12}:([\\\
        w+=,.@-]+[/:])*[\\w+=,.@-]+$"
      type: string
    AwsAccountId:
      pattern: "^\\d{12}$"
      type: string
    BlockerStatus:
      enum:
      - ACTIVE
      - RESOLVED
      title: BlockerStatus
      type: string
    BlockerType:
      enum:
      - AUTOMATED
      title: BlockerType
      type: string
    Boolean:
      type: boolean
    ResourceName:
      maxLength: 100
      minLength: 1
      pattern: "^[0-9A-Za-z]+[0-9A-Za-z_\\-]*$"
      type: string
    Component:
      description: "<p>Detailed data of an Proton component resource.</p> <p>For more\
        \ information about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
        >Proton components</a> in the <i>Proton User Guide</i>.</p>"
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ComponentArn'
          - description: The Amazon Resource Name (ARN) of the component.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the component was created.
          title: createdAt
        deploymentStatus:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          - description: The component deployment status.
          title: deploymentStatus
        deploymentStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: The message associated with the component deployment status.
          title: deploymentStatusMessage
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the component.
          title: description
        environmentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the Proton environment that this component is
              associated with.
          title: environmentName
        lastAttemptedDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last attempted deployment of this component.
          title: lastAttemptedDeploymentId
        lastClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The last token the client requested.
          title: lastClientRequestToken
        lastDeploymentAttemptedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when a deployment of the component was last attempted.
          title: lastDeploymentAttemptedAt
        lastDeploymentSucceededAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the component was last deployed successfully.
          title: lastDeploymentSucceededAt
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the component was last modified.
          title: lastModifiedAt
        lastSucceededDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last successful deployment of this component.
          title: lastSucceededDeploymentId
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the component.
          title: name
        serviceInstanceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service instance that this component is attached
              to. Provided when a component is attached to a service instance.
          title: serviceInstanceName
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service that <code>serviceInstanceName</code>
              is associated with. Provided when a component is attached to a service
              instance.
          title: serviceName
        serviceSpec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: The service spec that the component uses to access service
              inputs. Provided when a component is attached to a service instance.
          title: serviceSpec
      required:
      - arn
      - createdAt
      - deploymentStatus
      - environmentName
      - lastModifiedAt
      - name
      title: Component
      type: object
    Environment:
      description: Detailed data of an Proton environment resource. An Proton environment
        is a set of resources shared across Proton services.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/EnvironmentArn'
          - description: The Amazon Resource Name (ARN) of the environment.
          title: arn
        codebuildRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of the IAM service role that
              allows Proton to provision infrastructure using CodeBuild-based provisioning
              on your behalf.
          title: codebuildRoleArn
        componentRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM service role\
              \ that Proton uses when provisioning directly defined components in\
              \ this environment. It determines the scope of infrastructure that a\
              \ component can provision.</p> <p>The environment must have a <code>componentRoleArn</code>\
              \ to allow directly defined components to be associated with the environment.</p>\
              \ <p>For more information about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
              >Proton components</a> in the <i>Proton User Guide</i>.</p>"
          title: componentRoleArn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the environment was created.
          title: createdAt
        deploymentStatus:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          - description: The environment deployment status.
          title: deploymentStatus
        deploymentStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: An environment deployment status message.
          title: deploymentStatusMessage
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the environment.
          title: description
        environmentAccountConnectionId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          - description: The ID of the environment account connection that's used
              to provision infrastructure resources in an environment account.
          title: environmentAccountConnectionId
        environmentAccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          - description: The ID of the environment account that the environment infrastructure
              resources are provisioned in.
          title: environmentAccountId
        lastAttemptedDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last attempted deployment of this environment.
          title: lastAttemptedDeploymentId
        lastDeploymentAttemptedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when a deployment of the environment was last attempted.
          title: lastDeploymentAttemptedAt
        lastDeploymentSucceededAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the environment was last deployed successfully.
          title: lastDeploymentSucceededAt
        lastSucceededDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last successful deployment of this environment.
          title: lastSucceededDeploymentId
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment.
          title: name
        protonServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Proton service role
              that allows Proton to make calls to other services on your behalf.
          title: protonServiceRoleArn
        provisioning:
          allOf:
          - $ref: '#/components/schemas/Provisioning'
          - description: "When included, indicates that the environment template is\
              \ for customer provisioned and managed infrastructure."
          title: provisioning
        provisioningRepository:
          $ref: '#/components/schemas/Environment_provisioningRepository'
        spec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: The environment spec.
          title: spec
        templateMajorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The major version of the environment template.
          title: templateMajorVersion
        templateMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The minor version of the environment template.
          title: templateMinorVersion
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The Amazon Resource Name (ARN) of the environment template.
          title: templateName
      required:
      - arn
      - createdAt
      - deploymentStatus
      - lastDeploymentAttemptedAt
      - lastDeploymentSucceededAt
      - name
      - templateMajorVersion
      - templateMinorVersion
      - templateName
      title: Environment
      type: object
    ServiceInstance:
      description: Detailed data of an Proton service instance resource.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceInstanceArn'
          - description: The Amazon Resource Name (ARN) of the service instance.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the service instance was created.
          title: createdAt
        deploymentStatus:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          - description: The service instance deployment status.
          title: deploymentStatus
        deploymentStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: The message associated with the service instance deployment
              status.
          title: deploymentStatusMessage
        environmentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment that the service instance was
              deployed into.
          title: environmentName
        lastAttemptedDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last attempted deployment of this service instance.
          title: lastAttemptedDeploymentId
        lastClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The last client request token received.
          title: lastClientRequestToken
        lastDeploymentAttemptedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when a deployment of the service instance was last
              attempted.
          title: lastDeploymentAttemptedAt
        lastDeploymentSucceededAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the service instance was last deployed successfully.
          title: lastDeploymentSucceededAt
        lastSucceededDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last successful deployment of this service
              instance.
          title: lastSucceededDeploymentId
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service instance.
          title: name
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service that the service instance belongs
              to.
          title: serviceName
        spec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: The service spec that was used to create the service instance.
          title: spec
        templateMajorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The major version of the service template that was used to
              create the service instance.
          title: templateMajorVersion
        templateMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The minor version of the service template that was used to
              create the service instance.
          title: templateMinorVersion
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template that was used to create
              the service instance.
          title: templateName
      required:
      - arn
      - createdAt
      - deploymentStatus
      - environmentName
      - lastDeploymentAttemptedAt
      - lastDeploymentSucceededAt
      - name
      - serviceName
      - templateMajorVersion
      - templateMinorVersion
      - templateName
      title: ServiceInstance
      type: object
    ServicePipeline:
      description: Detailed data of an Proton service instance pipeline resource.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the service pipeline.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the service pipeline was created.
          title: createdAt
        deploymentStatus:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          - description: The deployment status of the service pipeline.
          title: deploymentStatus
        deploymentStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: A service pipeline deployment status message.
          title: deploymentStatusMessage
        lastAttemptedDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last attempted deployment of this service pipeline.
          title: lastAttemptedDeploymentId
        lastDeploymentAttemptedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when a deployment of the service pipeline was last
              attempted.
          title: lastDeploymentAttemptedAt
        lastDeploymentSucceededAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the service pipeline was last deployed successfully.
          title: lastDeploymentSucceededAt
        lastSucceededDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last successful deployment of this service
              pipeline.
          title: lastSucceededDeploymentId
        spec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: The service spec that was used to create the service pipeline.
          title: spec
        templateMajorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The major version of the service template that was used to
              create the service pipeline.
          title: templateMajorVersion
        templateMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The minor version of the service template that was used to
              create the service pipeline.
          title: templateMinorVersion
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template that was used to create
              the service pipeline.
          title: templateName
      required:
      - arn
      - createdAt
      - deploymentStatus
      - lastDeploymentAttemptedAt
      - lastDeploymentSucceededAt
      - templateMajorVersion
      - templateMinorVersion
      - templateName
      title: ServicePipeline
      type: object
    ClientToken:
      maxLength: 64
      minLength: 0
      pattern: "^[!-~]*$"
      type: string
    TemplateVersionPart:
      maxLength: 20
      minLength: 1
      pattern: "^(0|([1-9]{1}\\d*))$"
      type: string
    CompatibleEnvironmentTemplate:
      description: Compatible environment template data.
      properties:
        majorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The major version of the compatible environment template.
          title: majorVersion
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The compatible environment template name.
          title: templateName
      required:
      - majorVersion
      - templateName
      title: CompatibleEnvironmentTemplate
      type: object
    CompatibleEnvironmentTemplateInput:
      description: Compatible environment template data.
      properties:
        majorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The major version of the compatible environment template.
          title: majorVersion
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The compatible environment template name.
          title: templateName
      required:
      - majorVersion
      - templateName
      title: CompatibleEnvironmentTemplateInput
      type: object
    CompatibleEnvironmentTemplateInputList:
      items:
        $ref: '#/components/schemas/CompatibleEnvironmentTemplateInput'
      maxItems: 10
      minItems: 1
      type: array
    CompatibleEnvironmentTemplateList:
      items:
        $ref: '#/components/schemas/CompatibleEnvironmentTemplate'
      type: array
    ComponentArn:
      type: string
    Timestamp:
      format: date-time
      type: string
    DeploymentStatus:
      enum:
      - IN_PROGRESS
      - FAILED
      - SUCCEEDED
      - DELETE_IN_PROGRESS
      - DELETE_FAILED
      - DELETE_COMPLETE
      - CANCELLING
      - CANCELLED
      title: DeploymentStatus
      type: string
    StatusMessage:
      format: password
      type: string
    Description:
      format: password
      maxLength: 500
      minLength: 0
      type: string
    DeploymentId:
      pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      title: DeploymentId
      type: string
    String:
      type: string
    SpecContents:
      format: password
      maxLength: 51200
      minLength: 1
      type: string
    ComponentDeploymentIdList:
      items:
        $ref: '#/components/schemas/DeploymentId'
      maxItems: 1
      minItems: 0
      type: array
    ComponentDeploymentUpdateType:
      enum:
      - NONE
      - CURRENT_VERSION
      title: ComponentDeploymentUpdateType
      type: string
    ResourceNameOrEmpty:
      maxLength: 100
      minLength: 0
      pattern: "(^$)|^[0-9A-Za-z]+[0-9A-Za-z_\\-]*$"
      type: string
    TemplateFileContents:
      format: password
      maxLength: 51200
      minLength: 1
      type: string
    ComponentState:
      description: The detailed data about the current state of the component.
      properties:
        serviceInstanceName:
          allOf:
          - $ref: '#/components/schemas/ResourceNameOrEmpty'
          - description: The name of the service instance that this component is attached
              to. Provided when a component is attached to a service instance.
          title: serviceInstanceName
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceNameOrEmpty'
          - description: The name of the service that <code>serviceInstanceName</code>
              is associated with. Provided when a component is attached to a service
              instance.
          title: serviceName
        serviceSpec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: The service spec that the component uses to access service
              inputs. Provided when a component is attached to a service instance.
          title: serviceSpec
        templateFile:
          allOf:
          - $ref: '#/components/schemas/TemplateFileContents'
          - description: The template file used.
          title: templateFile
      title: ComponentState
      type: object
    ComponentSummary:
      description: "<p>Summary data of an Proton component resource.</p> <p>For more\
        \ information about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
        >Proton components</a> in the <i>Proton User Guide</i>.</p>"
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ComponentArn'
          - description: The Amazon Resource Name (ARN) of the component.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the component was created.
          title: createdAt
        deploymentStatus:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          - description: The component deployment status.
          title: deploymentStatus
        deploymentStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: The message associated with the component deployment status.
          title: deploymentStatusMessage
        environmentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the Proton environment that this component is
              associated with.
          title: environmentName
        lastAttemptedDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last attempted deployment of this component.
          title: lastAttemptedDeploymentId
        lastDeploymentAttemptedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when a deployment of the component was last attempted.
          title: lastDeploymentAttemptedAt
        lastDeploymentSucceededAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the component was last deployed successfully.
          title: lastDeploymentSucceededAt
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the component was last modified.
          title: lastModifiedAt
        lastSucceededDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last successful deployment of this component.
          title: lastSucceededDeploymentId
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the component.
          title: name
        serviceInstanceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service instance that this component is attached
              to. Provided when a component is attached to a service instance.
          title: serviceInstanceName
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service that <code>serviceInstanceName</code>
              is associated with. Provided when a component is attached to a service
              instance.
          title: serviceName
      required:
      - arn
      - createdAt
      - deploymentStatus
      - environmentName
      - lastModifiedAt
      - name
      title: ComponentSummary
      type: object
    ComponentSummaryList:
      items:
        $ref: '#/components/schemas/ComponentSummary'
      type: array
    ResourceCountsSummary:
      description: Summary counts of each Proton resource types.
      properties:
        behindMajor:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of resources of this type in the Amazon Web Services
              account that need a major template version update.
          title: behindMajor
        behindMinor:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of resources of this type in the Amazon Web Services
              account that need a minor template version update.
          title: behindMinor
        failed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of resources of this type in the Amazon Web Services
              account that failed to deploy.
          title: failed
        total:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of resources of this type in the Amazon
              Web Services account.
          title: total
        upToDate:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of resources of this type in the Amazon Web Services
              account that are up-to-date with their template.
          title: upToDate
      required:
      - total
      title: ResourceCountsSummary
      type: object
    CountsSummary:
      description: Summary counts of each Proton resource type.
      properties:
        components:
          $ref: '#/components/schemas/CountsSummary_components'
        environmentTemplates:
          $ref: '#/components/schemas/CountsSummary_environmentTemplates'
        environments:
          $ref: '#/components/schemas/CountsSummary_environments'
        pipelines:
          $ref: '#/components/schemas/CountsSummary_pipelines'
        serviceInstances:
          $ref: '#/components/schemas/CountsSummary_serviceInstances'
        serviceTemplates:
          $ref: '#/components/schemas/CountsSummary_serviceTemplates'
        services:
          $ref: '#/components/schemas/CountsSummary_services'
      title: CountsSummary
      type: object
    TemplateManifestContents:
      format: password
      maxLength: 1024
      minLength: 1
      type: string
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 50
      minItems: 0
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 1
      pattern: "^arn:(aws|aws-cn|aws-us-gov):iam::\\d{12}:role/([\\w+=,.@-]{1,512}[/:])*([\\\
        w+=,.@-]{1,64})$"
      type: string
    RepositoryBranchInput:
      description: Detail input data for a linked repository branch.
      properties:
        branch:
          allOf:
          - $ref: '#/components/schemas/GitBranchName'
          - description: The repository branch.
          title: branch
        name:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: The repository name.
          title: name
        provider:
          allOf:
          - $ref: '#/components/schemas/RepositoryProvider'
          - description: The repository provider.
          title: provider
      required:
      - branch
      - name
      - provider
      title: RepositoryBranchInput
      type: object
    DisplayName:
      format: password
      maxLength: 100
      minLength: 1
      type: string
    Provisioning:
      enum:
      - CUSTOMER_MANAGED
      title: Provisioning
      type: string
    EnvironmentTemplate:
      description: The environment template data.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/EnvironmentTemplateArn'
          - description: The Amazon Resource Name (ARN) of the environment template.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the environment template was created.
          title: createdAt
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the environment template.
          title: description
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The name of the environment template as displayed in the
              developer interface.
          title: displayName
        encryptionKey:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The customer provided encryption key for the environment
              template.
          title: encryptionKey
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the environment template was last modified.
          title: lastModifiedAt
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment template.
          title: name
        provisioning:
          allOf:
          - $ref: '#/components/schemas/Provisioning'
          - description: "When included, indicates that the environment template is\
              \ for customer provisioned and managed infrastructure."
          title: provisioning
        recommendedVersion:
          allOf:
          - $ref: '#/components/schemas/FullTemplateVersionNumber'
          - description: The ID of the recommended version of the environment template.
          title: recommendedVersion
      required:
      - arn
      - createdAt
      - lastModifiedAt
      - name
      title: EnvironmentTemplate
      type: object
    TemplateVersionSourceInput:
      description: Template version source data.
      properties:
        s3:
          $ref: '#/components/schemas/TemplateVersionSourceInput_s3'
      title: TemplateVersionSourceInput
      type: object
    EnvironmentTemplateVersion:
      description: The environment template version data.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/EnvironmentTemplateVersionArn'
          - description: The Amazon Resource Name (ARN) of the version of an environment
              template.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the version of an environment template was
              created.
          title: createdAt
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the minor version of an environment template.
          title: description
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the version of an environment template was
              last modified.
          title: lastModifiedAt
        majorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The latest major version that's associated with the version
              of an environment template.
          title: majorVersion
        minorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The minor version of an environment template.
          title: minorVersion
        recommendedMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The recommended minor version of the environment template.
          title: recommendedMinorVersion
        schema:
          allOf:
          - $ref: '#/components/schemas/TemplateSchema'
          - description: The schema of the version of an environment template.
          title: schema
        status:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionStatus'
          - description: The status of the version of an environment template.
          title: status
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: The status message of the version of an environment template.
          title: statusMessage
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the version of an environment template.
          title: templateName
      required:
      - arn
      - createdAt
      - lastModifiedAt
      - majorVersion
      - minorVersion
      - status
      - templateName
      title: EnvironmentTemplateVersion
      type: object
    RepositoryName:
      maxLength: 100
      minLength: 1
      pattern: "[A-Za-z0-9_.-].*/[A-Za-z0-9_.-].*"
      type: string
    RepositoryProvider:
      enum:
      - GITHUB
      - GITHUB_ENTERPRISE
      - BITBUCKET
      title: RepositoryProvider
      type: string
    Repository:
      description: Detailed data of a linked repositoryâ€”a repository that has been
        registered with Proton.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/RepositoryArn'
          - description: The Amazon Resource Name (ARN) of the linked repository.
          title: arn
        connectionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of your AWS CodeStar connection
              that connects Proton to your repository provider account.
          title: connectionArn
        encryptionKey:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Your customer Amazon Web Services KMS encryption key.
          title: encryptionKey
        name:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: The repository name.
          title: name
        provider:
          allOf:
          - $ref: '#/components/schemas/RepositoryProvider'
          - description: The repository provider.
          title: provider
      required:
      - arn
      - connectionArn
      - name
      - provider
      title: Repository
      type: object
    GitBranchName:
      maxLength: 200
      minLength: 1
      type: string
    RepositoryId:
      maxLength: 200
      minLength: 1
      type: string
    Service:
      description: Detailed data of an Proton service resource.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceArn'
          - description: The Amazon Resource Name (ARN) of the service.
          title: arn
        branchName:
          allOf:
          - $ref: '#/components/schemas/GitBranchName'
          - description: The name of the code repository branch that holds the code
              that's deployed in Proton.
          title: branchName
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the service was created.
          title: createdAt
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the service.
          title: description
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the service was last modified.
          title: lastModifiedAt
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service.
          title: name
        pipeline:
          $ref: '#/components/schemas/Service_pipeline'
        repositoryConnectionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) of the repository connection.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/setting-up-for-service.html#setting-up-vcontrol\"\
              >Setting up an AWS CodeStar connection</a> in the <i>Proton User Guide</i>."
          title: repositoryConnectionArn
        repositoryId:
          allOf:
          - $ref: '#/components/schemas/RepositoryId'
          - description: The ID of the source code repository.
          title: repositoryId
        spec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: The formatted specification that defines the service.
          title: spec
        status:
          allOf:
          - $ref: '#/components/schemas/ServiceStatus'
          - description: The status of the service.
          title: status
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: A service status message.
          title: statusMessage
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template.
          title: templateName
      required:
      - arn
      - createdAt
      - lastModifiedAt
      - name
      - spec
      - status
      - templateName
      title: Service
      type: object
    OpsFilePath:
      maxLength: 4096
      minLength: 1
      type: string
    ServiceSyncConfig:
      description: Detailed data of the service sync configuration.
      properties:
        branch:
          allOf:
          - $ref: '#/components/schemas/GitBranchName'
          - description: The name of the code repository branch that holds the service
              code Proton will sync with.
          title: branch
        filePath:
          allOf:
          - $ref: '#/components/schemas/OpsFilePath'
          - description: The file path to the service sync configuration file.
          title: filePath
        repositoryName:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: The name of the code repository that holds the service code
              Proton will sync with.
          title: repositoryName
        repositoryProvider:
          allOf:
          - $ref: '#/components/schemas/RepositoryProvider'
          - description: The name of the repository provider that holds the repository
              Proton will sync with.
          title: repositoryProvider
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service that the service instance is added
              to.
          title: serviceName
      required:
      - branch
      - filePath
      - repositoryName
      - repositoryProvider
      - serviceName
      title: ServiceSyncConfig
      type: object
    ServiceTemplate:
      description: Detailed data of an Proton service template resource.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceTemplateArn'
          - description: The Amazon Resource Name (ARN) of the service template.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the service template was created.
          title: createdAt
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the service template.
          title: description
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The service template name as displayed in the developer interface.
          title: displayName
        encryptionKey:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The customer provided service template encryption key that's
              used to encrypt data.
          title: encryptionKey
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the service template was last modified.
          title: lastModifiedAt
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template.
          title: name
        pipelineProvisioning:
          allOf:
          - $ref: '#/components/schemas/Provisioning'
          - description: "If <code>pipelineProvisioning</code> is <code>true</code>,\
              \ a service pipeline is included in the service template. Otherwise,\
              \ a service pipeline <i>isn't</i> included in the service template."
          title: pipelineProvisioning
        recommendedVersion:
          allOf:
          - $ref: '#/components/schemas/FullTemplateVersionNumber'
          - description: The recommended version of the service template.
          title: recommendedVersion
      required:
      - arn
      - createdAt
      - lastModifiedAt
      - name
      title: ServiceTemplate
      type: object
    ServiceTemplateSupportedComponentSourceInputList:
      items:
        $ref: '#/components/schemas/ServiceTemplateSupportedComponentSourceType'
      type: array
    ServiceTemplateVersion:
      description: Detailed data of an Proton service template version resource.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceTemplateVersionArn'
          - description: The Amazon Resource Name (ARN) of the version of a service
              template.
          title: arn
        compatibleEnvironmentTemplates:
          allOf:
          - $ref: '#/components/schemas/CompatibleEnvironmentTemplateList'
          - description: An array of compatible environment template names for the
              major version of a service template.
          title: compatibleEnvironmentTemplates
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the version of a service template was created.
          title: createdAt
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the version of a service template.
          title: description
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the version of a service template was last
              modified.
          title: lastModifiedAt
        majorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The latest major version that's associated with the version
              of a service template.
          title: majorVersion
        minorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The minor version of a service template.
          title: minorVersion
        recommendedMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The recommended minor version of the service template.
          title: recommendedMinorVersion
        schema:
          allOf:
          - $ref: '#/components/schemas/TemplateSchema'
          - description: The schema of the version of a service template.
          title: schema
        status:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionStatus'
          - description: The service template version status.
          title: status
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: A service template version status message.
          title: statusMessage
        supportedComponentSources:
          allOf:
          - $ref: '#/components/schemas/ServiceTemplateSupportedComponentSourceInputList'
          - description: "<p>An array of supported component sources. Components with\
              \ supported sources can be attached to service instances based on this\
              \ service template version.</p> <p>For more information about components,\
              \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
              >Proton components</a> in the <i>Proton User Guide</i>.</p>"
          title: supportedComponentSources
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the version of a service template.
          title: templateName
      required:
      - arn
      - compatibleEnvironmentTemplates
      - createdAt
      - lastModifiedAt
      - majorVersion
      - minorVersion
      - status
      - templateName
      title: ServiceTemplateVersion
      type: object
    Subdirectory:
      maxLength: 4096
      minLength: 1
      type: string
    TemplateType:
      enum:
      - ENVIRONMENT
      - SERVICE
      title: TemplateType
      type: string
    TemplateSyncConfig:
      description: The detail data for a template sync configuration.
      properties:
        branch:
          allOf:
          - $ref: '#/components/schemas/GitBranchName'
          - description: The repository branch.
          title: branch
        repositoryName:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: "The repository name (for example, <code>myrepos/myrepo</code>)."
          title: repositoryName
        repositoryProvider:
          allOf:
          - $ref: '#/components/schemas/RepositoryProvider'
          - description: The repository provider.
          title: repositoryProvider
        subdirectory:
          allOf:
          - $ref: '#/components/schemas/Subdirectory'
          - description: A subdirectory path to your template bundle version.
          title: subdirectory
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The template name.
          title: templateName
        templateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          - description: The template type.
          title: templateType
      required:
      - branch
      - repositoryName
      - repositoryProvider
      - templateName
      - templateType
      title: TemplateSyncConfig
      type: object
    Deployment:
      description: The detailed information about a deployment.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/DeploymentArn'
          - description: The Amazon Resource Name (ARN) of the deployment.
          title: arn
        completedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the deployment was completed.
          title: completedAt
        componentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the component associated with this deployment.
          title: componentName
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the deployment was created.
          title: createdAt
        deploymentStatus:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          - description: The status of the deployment.
          title: deploymentStatus
        deploymentStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: The deployment status message.
          title: deploymentStatusMessage
        environmentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment associated with this deployment.
          title: environmentName
        id:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the deployment.
          title: id
        initialState:
          $ref: '#/components/schemas/Deployment_initialState'
        lastAttemptedDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last attempted deployment.
          title: lastAttemptedDeploymentId
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the deployment was last modified.
          title: lastModifiedAt
        lastSucceededDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last successful deployment.
          title: lastSucceededDeploymentId
        serviceInstanceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the deployment's service instance.
          title: serviceInstanceName
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service in this deployment.
          title: serviceName
        targetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the target of the deployment.
          title: targetArn
        targetResourceCreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the depoyment target was created.
          title: targetResourceCreatedAt
        targetResourceType:
          allOf:
          - $ref: '#/components/schemas/DeploymentTargetResourceType'
          - description: "The resource type of the deployment target. It can be an\
              \ environment, service, service instance, or component."
          title: targetResourceType
        targetState:
          $ref: '#/components/schemas/Deployment_targetState'
      required:
      - arn
      - createdAt
      - deploymentStatus
      - environmentName
      - id
      - lastModifiedAt
      - targetArn
      - targetResourceCreatedAt
      - targetResourceType
      title: Deployment
      type: object
    DeploymentArn:
      type: string
    DeploymentState:
      description: The detailed data about the current state of the deployment.
      properties:
        component:
          $ref: '#/components/schemas/DeploymentState_component'
        environment:
          $ref: '#/components/schemas/DeploymentState_environment'
        serviceInstance:
          $ref: '#/components/schemas/DeploymentState_serviceInstance'
        servicePipeline:
          $ref: '#/components/schemas/DeploymentState_servicePipeline'
      title: DeploymentState
      type: object
    DeploymentTargetResourceType:
      enum:
      - ENVIRONMENT
      - SERVICE_PIPELINE
      - SERVICE_INSTANCE
      - COMPONENT
      title: DeploymentTargetResourceType
      type: string
    EnvironmentState:
      description: The detailed data about the current state of the environment.
      properties:
        spec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: The environment spec that was used to create the environment.
          title: spec
        templateMajorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The major version of the environment template that was used
              to create the environment.
          title: templateMajorVersion
        templateMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The minor version of the environment template that was used
              to create the environment.
          title: templateMinorVersion
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment template that was used to create
              the environment.
          title: templateName
      required:
      - templateMajorVersion
      - templateMinorVersion
      - templateName
      title: EnvironmentState
      type: object
    ServiceInstanceState:
      description: The detailed data about the current state of this service instance.
      properties:
        lastSuccessfulComponentDeploymentIds:
          allOf:
          - $ref: '#/components/schemas/ComponentDeploymentIdList'
          - description: The IDs for the last successful components deployed for this
              service instance.
          title: lastSuccessfulComponentDeploymentIds
        lastSuccessfulEnvironmentDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID for the last successful environment deployed for this
              service instance.
          title: lastSuccessfulEnvironmentDeploymentId
        lastSuccessfulServicePipelineDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID for the last successful service pipeline deployed
              for this service instance.
          title: lastSuccessfulServicePipelineDeploymentId
        spec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: The service spec that was used to create the service instance.
          title: spec
        templateMajorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The major version of the service template that was used to
              create the service pipeline.
          title: templateMajorVersion
        templateMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The minor version of the service template that was used to
              create the service pipeline.
          title: templateMinorVersion
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template that was used to create
              the service instance.
          title: templateName
      required:
      - spec
      - templateMajorVersion
      - templateMinorVersion
      - templateName
      title: ServiceInstanceState
      type: object
    ServicePipelineState:
      description: The detailed data about the current state of the service pipeline.
      properties:
        spec:
          allOf:
          - $ref: '#/components/schemas/SpecContents'
          - description: The service spec that was used to create the service pipeline.
          title: spec
        templateMajorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The major version of the service template that was used to
              create the service pipeline.
          title: templateMajorVersion
        templateMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The minor version of the service template that was used to
              create the service pipeline.
          title: templateMinorVersion
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template that was used to create
              the service pipeline.
          title: templateName
      required:
      - templateMajorVersion
      - templateMinorVersion
      - templateName
      title: ServicePipelineState
      type: object
    DeploymentSummary:
      description: Summary data of the deployment.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/DeploymentArn'
          - description: The Amazon Resource Name (ARN) of the deployment.
          title: arn
        completedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the deployment was completed.
          title: completedAt
        componentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the component associated with the deployment.
          title: componentName
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the deployment was created.
          title: createdAt
        deploymentStatus:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          - description: The current status of the deployment.
          title: deploymentStatus
        environmentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment associated with the deployment.
          title: environmentName
        id:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the deployment.
          title: id
        lastAttemptedDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last attempted deployment.
          title: lastAttemptedDeploymentId
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the deployment was last modified.
          title: lastModifiedAt
        lastSucceededDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last successful deployment.
          title: lastSucceededDeploymentId
        serviceInstanceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service instance associated with the deployment.
          title: serviceInstanceName
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service associated with the deployment.
          title: serviceName
        targetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the target of the deployment.
          title: targetArn
        targetResourceCreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the target resource was created.
          title: targetResourceCreatedAt
        targetResourceType:
          allOf:
          - $ref: '#/components/schemas/DeploymentTargetResourceType'
          - description: "The resource type of the deployment target. It can be an\
              \ environment, service, service instance, or component."
          title: targetResourceType
      required:
      - arn
      - createdAt
      - deploymentStatus
      - environmentName
      - id
      - lastModifiedAt
      - targetArn
      - targetResourceCreatedAt
      - targetResourceType
      title: DeploymentSummary
      type: object
    DeploymentSummaryList:
      items:
        $ref: '#/components/schemas/DeploymentSummary'
      type: array
    DeploymentUpdateType:
      enum:
      - NONE
      - CURRENT_VERSION
      - MINOR_VERSION
      - MAJOR_VERSION
      title: DeploymentUpdateType
      type: string
    EmptyNextToken:
      maxLength: 0
      minLength: 0
      type: string
    EnvironmentArn:
      type: string
    EnvironmentAccountConnectionArn:
      type: string
    EnvironmentAccountConnectionStatus:
      enum:
      - PENDING
      - CONNECTED
      - REJECTED
      title: EnvironmentAccountConnectionStatus
      type: string
    EnvironmentAccountConnectionRequesterAccountType:
      enum:
      - MANAGEMENT_ACCOUNT
      - ENVIRONMENT_ACCOUNT
      title: EnvironmentAccountConnectionRequesterAccountType
      type: string
    EnvironmentAccountConnectionStatusList:
      items:
        $ref: '#/components/schemas/EnvironmentAccountConnectionStatus'
      type: array
    EnvironmentAccountConnectionSummary:
      description: Summary data of an Proton environment account connection resource.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionArn'
          - description: The Amazon Resource Name (ARN) of the environment account
              connection.
          title: arn
        componentRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM service role\
              \ that Proton uses when provisioning directly defined components in\
              \ the associated environment account. It determines the scope of infrastructure\
              \ that a component can provision in the account.</p> <p>The environment\
              \ account connection must have a <code>componentRoleArn</code> to allow\
              \ directly defined components to be associated with any environments\
              \ running in the account.</p> <p>For more information about components,\
              \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
              >Proton components</a> in the <i>Proton User Guide</i>.</p>"
          title: componentRoleArn
        environmentAccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          - description: The ID of the environment account that's connected to the
              environment account connection.
          title: environmentAccountId
        environmentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment that's associated with the environment
              account connection.
          title: environmentName
        id:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          - description: The ID of the environment account connection.
          title: id
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the environment account connection was last
              modified.
          title: lastModifiedAt
        managementAccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          - description: The ID of the management account that's connected to the
              environment account connection.
          title: managementAccountId
        requestedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the environment account connection request
              was made.
          title: requestedAt
        roleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The IAM service role that's associated with the environment
              account connection.
          title: roleArn
        status:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionStatus'
          - description: The status of the environment account connection.
          title: status
      required:
      - arn
      - environmentAccountId
      - environmentName
      - id
      - lastModifiedAt
      - managementAccountId
      - requestedAt
      - roleArn
      - status
      title: EnvironmentAccountConnectionSummary
      type: object
    EnvironmentAccountConnectionSummaryList:
      items:
        $ref: '#/components/schemas/EnvironmentAccountConnectionSummary'
      type: array
    EnvironmentSummary:
      description: Summary data of an Proton environment resource. An Proton environment
        is a set of resources shared across Proton services.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/EnvironmentArn'
          - description: The Amazon Resource Name (ARN) of the environment.
          title: arn
        componentRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM service role\
              \ that Proton uses when provisioning directly defined components in\
              \ this environment. It determines the scope of infrastructure that a\
              \ component can provision.</p> <p>The environment must have a <code>componentRoleArn</code>\
              \ to allow directly defined components to be associated with the environment.</p>\
              \ <p>For more information about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\"\
              >Proton components</a> in the <i>Proton User Guide</i>.</p>"
          title: componentRoleArn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the environment was created.
          title: createdAt
        deploymentStatus:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          - description: The environment deployment status.
          title: deploymentStatus
        deploymentStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: An environment deployment status message.
          title: deploymentStatusMessage
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the environment.
          title: description
        environmentAccountConnectionId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          - description: The ID of the environment account connection that the environment
              is associated with.
          title: environmentAccountConnectionId
        environmentAccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          - description: The ID of the environment account that the environment infrastructure
              resources are provisioned in.
          title: environmentAccountId
        lastAttemptedDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last attempted deployment of this environment.
          title: lastAttemptedDeploymentId
        lastDeploymentAttemptedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when a deployment of the environment was last attempted.
          title: lastDeploymentAttemptedAt
        lastDeploymentSucceededAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the environment was last deployed successfully.
          title: lastDeploymentSucceededAt
        lastSucceededDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last successful deployment of this environment.
          title: lastSucceededDeploymentId
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment.
          title: name
        protonServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the Proton service role
              that allows Proton to make calls to other services on your behalf.
          title: protonServiceRoleArn
        provisioning:
          allOf:
          - $ref: '#/components/schemas/Provisioning'
          - description: "When included, indicates that the environment template is\
              \ for customer provisioned and managed infrastructure."
          title: provisioning
        templateMajorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The major version of the environment template.
          title: templateMajorVersion
        templateMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The minor version of the environment template.
          title: templateMinorVersion
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment template.
          title: templateName
      required:
      - arn
      - createdAt
      - deploymentStatus
      - lastDeploymentAttemptedAt
      - lastDeploymentSucceededAt
      - name
      - templateMajorVersion
      - templateMinorVersion
      - templateName
      title: EnvironmentSummary
      type: object
    EnvironmentSummaryList:
      items:
        $ref: '#/components/schemas/EnvironmentSummary'
      type: array
    EnvironmentTemplateArn:
      type: string
    FullTemplateVersionNumber:
      maxLength: 10
      minLength: 1
      pattern: "^(0|([1-9]{1}\\d*)).(0|([1-9]{1}\\d*))$"
      type: string
    EnvironmentTemplateFilter:
      description: A search filter for environment templates.
      properties:
        majorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: Include <code>majorVersion</code> to filter search for a
              major version.
          title: majorVersion
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: Include <code>templateName</code> to filter search for a
              template name.
          title: templateName
      required:
      - majorVersion
      - templateName
      title: EnvironmentTemplateFilter
      type: object
    EnvironmentTemplateFilterList:
      items:
        $ref: '#/components/schemas/EnvironmentTemplateFilter'
      type: array
    EnvironmentTemplateSummary:
      description: The environment template data.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/EnvironmentTemplateArn'
          - description: The Amazon Resource Name (ARN) of the environment template.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the environment template was created.
          title: createdAt
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the environment template.
          title: description
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The name of the environment template as displayed in the
              developer interface.
          title: displayName
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the environment template was last modified.
          title: lastModifiedAt
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment template.
          title: name
        provisioning:
          allOf:
          - $ref: '#/components/schemas/Provisioning'
          - description: "When included, indicates that the environment template is\
              \ for customer provisioned and managed infrastructure."
          title: provisioning
        recommendedVersion:
          allOf:
          - $ref: '#/components/schemas/FullTemplateVersionNumber'
          - description: The recommended version of the environment template.
          title: recommendedVersion
      required:
      - arn
      - createdAt
      - lastModifiedAt
      - name
      title: EnvironmentTemplateSummary
      type: object
    EnvironmentTemplateSummaryList:
      items:
        $ref: '#/components/schemas/EnvironmentTemplateSummary'
      type: array
    EnvironmentTemplateVersionArn:
      type: string
    TemplateSchema:
      format: password
      maxLength: 51200
      minLength: 1
      type: string
    TemplateVersionStatus:
      enum:
      - REGISTRATION_IN_PROGRESS
      - REGISTRATION_FAILED
      - DRAFT
      - PUBLISHED
      title: TemplateVersionStatus
      type: string
    EnvironmentTemplateVersionSummary:
      description: A summary of the version of an environment template detail data.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/EnvironmentTemplateVersionArn'
          - description: The Amazon Resource Name (ARN) of the version of an environment
              template.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the version of an environment template was
              created.
          title: createdAt
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the version of an environment template.
          title: description
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the version of an environment template was
              last modified.
          title: lastModifiedAt
        majorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The latest major version that's associated with the version
              of an environment template.
          title: majorVersion
        minorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The version of an environment template.
          title: minorVersion
        recommendedMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The recommended minor version of the environment template.
          title: recommendedMinorVersion
        status:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionStatus'
          - description: The status of the version of an environment template.
          title: status
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: The status message of the version of an environment template.
          title: statusMessage
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment template.
          title: templateName
      required:
      - arn
      - createdAt
      - lastModifiedAt
      - majorVersion
      - minorVersion
      - status
      - templateName
      title: EnvironmentTemplateVersionSummary
      type: object
    EnvironmentTemplateVersionSummaryList:
      items:
        $ref: '#/components/schemas/EnvironmentTemplateVersionSummary'
      type: array
    SyncType:
      enum:
      - TEMPLATE_SYNC
      - SERVICE_SYNC
      title: SyncType
      type: string
    RepositorySyncAttempt:
      description: Detail data for a repository sync attempt activated by a push to
        a repository.
      properties:
        events:
          allOf:
          - $ref: '#/components/schemas/RepositorySyncEvents'
          - description: Detail data for sync attempt events.
          title: events
        startedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the sync attempt started.
          title: startedAt
        status:
          allOf:
          - $ref: '#/components/schemas/RepositorySyncStatus'
          - description: The sync attempt status.
          title: status
      required:
      - events
      - startedAt
      - status
      title: RepositorySyncAttempt
      type: object
    Revision:
      description: Revision detail data for a commit and push that activates a sync
        attempt
      properties:
        branch:
          allOf:
          - $ref: '#/components/schemas/GitBranchName'
          - description: The repository branch.
          title: branch
        directory:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The repository directory changed by a commit and push that
              activated the sync attempt.
          title: directory
        repositoryName:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: The repository name.
          title: repositoryName
        repositoryProvider:
          allOf:
          - $ref: '#/components/schemas/RepositoryProvider'
          - description: The repository provider.
          title: repositoryProvider
        sha:
          allOf:
          - $ref: '#/components/schemas/SHA'
          - description: The secure hash algorithm (SHA) hash for the revision.
          title: sha
      required:
      - branch
      - directory
      - repositoryName
      - repositoryProvider
      - sha
      title: Revision
      type: object
    ResourceSyncAttempt:
      description: Detail data for a resource sync attempt activated by a push to
        a repository.
      properties:
        events:
          allOf:
          - $ref: '#/components/schemas/ResourceSyncEvents'
          - description: An array of events with detail data.
          title: events
        initialRevision:
          $ref: '#/components/schemas/ResourceSyncAttempt_initialRevision'
        startedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the sync attempt started.
          title: startedAt
        status:
          allOf:
          - $ref: '#/components/schemas/ResourceSyncStatus'
          - description: The status of the sync attempt.
          title: status
        target:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The resource that is synced to.
          title: target
        targetRevision:
          $ref: '#/components/schemas/ResourceSyncAttempt_targetRevision'
      required:
      - events
      - initialRevision
      - startedAt
      - status
      - target
      - targetRevision
      title: ResourceSyncAttempt
      type: object
    ServiceSyncBlockerSummary:
      description: "<p>If a service instance is manually updated, Proton wants to\
        \ prevent accidentally overriding a manual change.</p> <p>A blocker is created\
        \ because of the manual update or deletion of a service instance. The summary\
        \ describes the blocker as being active or resolved.</p>"
      properties:
        latestBlockers:
          allOf:
          - $ref: '#/components/schemas/LatestSyncBlockers'
          - description: The latest active blockers for the synced service.
          title: latestBlockers
        serviceInstanceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the service instance that you want sync your
              service configuration with.
          title: serviceInstanceName
        serviceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the service that you want to get the sync\
              \ blocker summary for. If given a service instance name and a service\
              \ name, it will return the blockers only applying to the instance that\
              \ is blocked.</p> <p>If given only a service name, it will return the\
              \ blockers that apply to all of the instances. In order to get the blockers\
              \ for a single instance, you will need to make two distinct calls, one\
              \ to get the sync blocker summary for the service and the other to get\
              \ the sync blocker for the service instance.</p>"
          title: serviceName
      required:
      - serviceName
      title: ServiceSyncBlockerSummary
      type: object
    Integer:
      type: integer
    SyncBlocker:
      description: Detailed data of the sync blocker.
      properties:
        contexts:
          allOf:
          - $ref: '#/components/schemas/SyncBlockerContexts'
          - description: The contexts for the sync blocker.
          title: contexts
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the sync blocker was created.
          title: createdAt
        createdReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The reason why the sync blocker was created.
          title: createdReason
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the sync blocker.
          title: id
        resolvedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the sync blocker was resolved.
          title: resolvedAt
        resolvedReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The reason the sync blocker was resolved.
          title: resolvedReason
        status:
          allOf:
          - $ref: '#/components/schemas/BlockerStatus'
          - description: The status of the sync blocker.
          title: status
        type:
          allOf:
          - $ref: '#/components/schemas/BlockerType'
          - description: The type of the sync blocker.
          title: type
      required:
      - createdAt
      - createdReason
      - id
      - status
      - type
      title: SyncBlocker
      type: object
    LatestSyncBlockers:
      items:
        $ref: '#/components/schemas/SyncBlocker'
      type: array
    OutputsList:
      items:
        $ref: '#/components/schemas/Output'
      type: array
    ProvisionedResourceList:
      items:
        $ref: '#/components/schemas/ProvisionedResource'
      type: array
    MaxPageResults:
      maximum: 100
      minimum: 1
      type: integer
    NextToken:
      pattern: "^[A-Za-z0-9+=/]+$"
      type: string
    RepositorySummaryList:
      items:
        $ref: '#/components/schemas/RepositorySummary'
      type: array
    RepositorySyncDefinitionList:
      items:
        $ref: '#/components/schemas/RepositorySyncDefinition'
      type: array
    ListServiceInstancesFilterBy:
      enum:
      - name
      - deploymentStatus
      - templateName
      - serviceName
      - deployedTemplateVersionStatus
      - environmentName
      - lastDeploymentAttemptedAtBefore
      - lastDeploymentAttemptedAtAfter
      - createdAtBefore
      - createdAtAfter
      title: ListServiceInstancesFilterBy
      type: string
    ListServiceInstancesFilterValue:
      type: string
    ListServiceInstancesFilter:
      description: A filtering criterion to scope down the result list of the <a>ListServiceInstances</a>
        action.
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/ListServiceInstancesFilterBy'
          - description: The name of a filtering criterion.
          title: key
        value:
          allOf:
          - $ref: '#/components/schemas/ListServiceInstancesFilterValue'
          - description: "<p>A value to filter by.</p> <p>With the date/time keys\
              \ (<code>*At{Before,After}</code>), the value is a valid <a href=\"\
              https://datatracker.ietf.org/doc/html/rfc3339.html\">RFC 3339</a> string\
              \ with no UTC offset and with an optional fractional precision (for\
              \ example, <code>1985-04-12T23:20:50.52Z</code>).</p>"
          title: value
      title: ListServiceInstancesFilter
      type: object
    ListServiceInstancesFilterList:
      items:
        $ref: '#/components/schemas/ListServiceInstancesFilter'
      type: array
    ListServiceInstancesSortBy:
      enum:
      - name
      - deploymentStatus
      - templateName
      - serviceName
      - environmentName
      - lastDeploymentAttemptedAt
      - createdAt
      title: ListServiceInstancesSortBy
      type: string
    SortOrder:
      enum:
      - ASCENDING
      - DESCENDING
      title: SortOrder
      type: string
    ServiceInstanceSummaryList:
      items:
        $ref: '#/components/schemas/ServiceInstanceSummary'
      type: array
    ServiceTemplateVersionSummaryList:
      items:
        $ref: '#/components/schemas/ServiceTemplateVersionSummary'
      type: array
    ServiceTemplateSummaryList:
      items:
        $ref: '#/components/schemas/ServiceTemplateSummary'
      type: array
    ServiceSummaryList:
      items:
        $ref: '#/components/schemas/ServiceSummary'
      type: array
    NotifyResourceDeploymentStatusChangeInputOutputsList:
      items:
        $ref: '#/components/schemas/Output'
      maxItems: 50
      minItems: 0
      type: array
    ResourceDeploymentStatus:
      description: The state that a PR-based deployment can be updated to.
      enum:
      - IN_PROGRESS
      - FAILED
      - SUCCEEDED
      title: ResourceDeploymentStatus
      type: string
    NotifyResourceDeploymentStatusChangeInputStatusMessageString:
      format: password
      maxLength: 5000
      minLength: 0
      type: string
    Output:
      description: An infrastructure as code defined resource output.
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/OutputKey'
          - description: The output key.
          title: key
        valueString:
          allOf:
          - $ref: '#/components/schemas/OutputValueString'
          - description: The output value.
          title: valueString
      title: Output
      type: object
    OutputKey:
      maxLength: 1024
      minLength: 1
      type: string
    OutputValueString:
      maxLength: 1024
      minLength: 1
      type: string
    ProvisionedResourceIdentifier:
      maxLength: 200
      minLength: 1
      type: string
    ProvisionedResourceName:
      maxLength: 200
      minLength: 1
      type: string
    ProvisionedResourceEngine:
      description: List of provisioning engines
      enum:
      - CLOUDFORMATION
      - TERRAFORM
      title: ProvisionedResourceEngine
      type: string
    ProvisionedResource:
      description: Detail data for a provisioned resource.
      properties:
        identifier:
          allOf:
          - $ref: '#/components/schemas/ProvisionedResourceIdentifier'
          - description: The provisioned resource identifier.
          title: identifier
        name:
          allOf:
          - $ref: '#/components/schemas/ProvisionedResourceName'
          - description: The provisioned resource name.
          title: name
        provisioningEngine:
          allOf:
          - $ref: '#/components/schemas/ProvisionedResourceEngine'
          - description: "<p>The resource provisioning engine. At this time, <code>CLOUDFORMATION</code>\
              \ can be used for Amazon Web Services-managed provisioning, and <code>TERRAFORM</code>\
              \ can be used for self-managed provisioning.</p> <p>For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-works-prov-methods.html#ag-works-prov-methods-self\"\
              >Self-managed provisioning</a> in the <i>Proton User Guide</i>.</p>"
          title: provisioningEngine
      title: ProvisionedResource
      type: object
    RepositoryArn:
      type: string
    RepositorySummary:
      description: Summary data of a linked repositoryâ€”a repository that has been
        registered with Proton.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/RepositoryArn'
          - description: The Amazon Resource Name (ARN) of the linked repository.
          title: arn
        connectionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the of your connection
              that connects Proton to your repository.
          title: connectionArn
        name:
          allOf:
          - $ref: '#/components/schemas/RepositoryName'
          - description: The repository name.
          title: name
        provider:
          allOf:
          - $ref: '#/components/schemas/RepositoryProvider'
          - description: The repository provider.
          title: provider
      required:
      - arn
      - connectionArn
      - name
      - provider
      title: RepositorySummary
      type: object
    RepositorySyncEvents:
      items:
        $ref: '#/components/schemas/RepositorySyncEvent'
      type: array
    RepositorySyncStatus:
      enum:
      - INITIATED
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      - QUEUED
      title: RepositorySyncStatus
      type: string
    RepositorySyncDefinition:
      description: A repository sync definition.
      properties:
        branch:
          allOf:
          - $ref: '#/components/schemas/GitBranchName'
          - description: The repository branch.
          title: branch
        directory:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The directory in the repository.
          title: directory
        parent:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The resource that is synced from.
          title: parent
        target:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The resource that is synced to.
          title: target
      required:
      - branch
      - directory
      - parent
      - target
      title: RepositorySyncDefinition
      type: object
    RepositorySyncEvent:
      description: Repository sync event detail data for a sync attempt.
      properties:
        event:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Event detail for a repository sync attempt.
          title: event
        externalId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The external ID of the sync event.
          title: externalId
        time:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that the sync event occurred.
          title: time
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The type of event.
          title: type
      required:
      - event
      - time
      - type
      title: RepositorySyncEvent
      type: object
    ResourceSyncEvents:
      items:
        $ref: '#/components/schemas/ResourceSyncEvent'
      type: array
    ResourceSyncStatus:
      enum:
      - INITIATED
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      title: ResourceSyncStatus
      type: string
    ResourceSyncEvent:
      description: Detail data for a resource sync event.
      properties:
        event:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A resource sync event.
          title: event
        externalId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The external ID for the event.
          title: externalId
        time:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the event occurred.
          title: time
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The type of event.
          title: type
      required:
      - event
      - time
      - type
      title: ResourceSyncEvent
      type: object
    SHA:
      maxLength: 255
      minLength: 1
      type: string
    S3Bucket:
      maxLength: 63
      minLength: 3
      pattern: "^[a-z0-9]+[a-z0-9-\\.]+[a-z0-9]+$"
      type: string
    S3Key:
      maxLength: 1024
      minLength: 1
      type: string
    S3ObjectSource:
      description: Template bundle S3 bucket data.
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: The name of the S3 bucket that contains a template bundle.
          title: bucket
        key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: The path to the S3 bucket that contains a template bundle.
          title: key
      required:
      - bucket
      - key
      title: S3ObjectSource
      type: object
    ServiceArn:
      type: string
    ServiceStatus:
      enum:
      - CREATE_IN_PROGRESS
      - CREATE_FAILED_CLEANUP_IN_PROGRESS
      - CREATE_FAILED_CLEANUP_COMPLETE
      - CREATE_FAILED_CLEANUP_FAILED
      - CREATE_FAILED
      - ACTIVE
      - DELETE_IN_PROGRESS
      - DELETE_FAILED
      - UPDATE_IN_PROGRESS
      - UPDATE_FAILED_CLEANUP_IN_PROGRESS
      - UPDATE_FAILED_CLEANUP_COMPLETE
      - UPDATE_FAILED_CLEANUP_FAILED
      - UPDATE_FAILED
      - UPDATE_COMPLETE_CLEANUP_FAILED
      title: ServiceStatus
      type: string
    ServiceInstanceArn:
      type: string
    ServiceInstanceSummary:
      description: Summary data of an Proton service instance resource.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceInstanceArn'
          - description: The Amazon Resource Name (ARN) of the service instance.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the service instance was created.
          title: createdAt
        deploymentStatus:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          - description: The service instance deployment status.
          title: deploymentStatus
        deploymentStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: A service instance deployment status message.
          title: deploymentStatusMessage
        environmentName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the environment that the service instance was
              deployed into.
          title: environmentName
        lastAttemptedDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last attempted deployment of this service instance.
          title: lastAttemptedDeploymentId
        lastDeploymentAttemptedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when a deployment of the service was last attempted.
          title: lastDeploymentAttemptedAt
        lastDeploymentSucceededAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the service was last deployed successfully.
          title: lastDeploymentSucceededAt
        lastSucceededDeploymentId:
          allOf:
          - $ref: '#/components/schemas/DeploymentId'
          - description: The ID of the last successful deployment of this service
              instance.
          title: lastSucceededDeploymentId
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service instance.
          title: name
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service that the service instance belongs
              to.
          title: serviceName
        templateMajorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The service instance template major version.
          title: templateMajorVersion
        templateMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The service instance template minor version.
          title: templateMinorVersion
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template.
          title: templateName
      required:
      - arn
      - createdAt
      - deploymentStatus
      - environmentName
      - lastDeploymentAttemptedAt
      - lastDeploymentSucceededAt
      - name
      - serviceName
      - templateMajorVersion
      - templateMinorVersion
      - templateName
      title: ServiceInstanceSummary
      type: object
    ServiceSummary:
      description: Summary data of an Proton service resource.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceArn'
          - description: The Amazon Resource Name (ARN) of the service.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the service was created.
          title: createdAt
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the service.
          title: description
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the service was last modified.
          title: lastModifiedAt
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/ServiceStatus'
          - description: The status of the service.
          title: status
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: A service status message.
          title: statusMessage
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template.
          title: templateName
      required:
      - arn
      - createdAt
      - lastModifiedAt
      - name
      - status
      - templateName
      title: ServiceSummary
      type: object
    ServiceTemplateArn:
      type: string
    ServiceTemplateSummary:
      description: Summary data of an Proton service template resource.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceTemplateArn'
          - description: The Amazon Resource Name (ARN) of the service template.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the service template was created.
          title: createdAt
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the service template.
          title: description
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The service template name as displayed in the developer interface.
          title: displayName
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the service template was last modified.
          title: lastModifiedAt
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template.
          title: name
        pipelineProvisioning:
          allOf:
          - $ref: '#/components/schemas/Provisioning'
          - description: "If <code>pipelineProvisioning</code> is <code>true</code>,\
              \ a service pipeline is included in the service template, otherwise\
              \ a service pipeline <i>isn't</i> included in the service template."
          title: pipelineProvisioning
        recommendedVersion:
          allOf:
          - $ref: '#/components/schemas/FullTemplateVersionNumber'
          - description: The recommended version of the service template.
          title: recommendedVersion
      required:
      - arn
      - createdAt
      - lastModifiedAt
      - name
      title: ServiceTemplateSummary
      type: object
    ServiceTemplateSupportedComponentSourceType:
      enum:
      - DIRECTLY_DEFINED
      title: ServiceTemplateSupportedComponentSourceType
      type: string
    ServiceTemplateVersionArn:
      type: string
    ServiceTemplateVersionSummary:
      description: Summary data of an Proton service template version resource.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ServiceTemplateVersionArn'
          - description: The Amazon Resource Name (ARN) of the version of a service
              template.
          title: arn
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the version of a service template was created.
          title: createdAt
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the version of a service template.
          title: description
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the version of a service template was last
              modified.
          title: lastModifiedAt
        majorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The latest major version that's associated with the version
              of a service template.
          title: majorVersion
        minorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The minor version of a service template.
          title: minorVersion
        recommendedMinorVersion:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionPart'
          - description: The recommended minor version of the service template.
          title: recommendedMinorVersion
        status:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionStatus'
          - description: The service template minor version status.
          title: status
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: A service template minor version status message.
          title: statusMessage
        templateName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the service template.
          title: templateName
      required:
      - arn
      - createdAt
      - lastModifiedAt
      - majorVersion
      - minorVersion
      - status
      - templateName
      title: ServiceTemplateVersionSummary
      type: object
    SyncBlockerContexts:
      items:
        $ref: '#/components/schemas/SyncBlockerContext'
      type: array
    SyncBlockerContext:
      description: Detailed data of the context of the sync blocker.
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The key for the sync blocker context.
          title: key
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value of the sync blocker context.
          title: value
      required:
      - key
      - value
      title: SyncBlockerContext
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      title: TagKey
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    Tag:
      description: A description of a resource tag.
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key of the resource tag.
          title: key
        value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value of the resource tag.
          title: value
      required:
      - key
      - value
      title: Tag
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 0
      type: array
    AcceptEnvironmentAccountConnectionOutput_environmentAccountConnection:
      allOf:
      - $ref: '#/components/schemas/EnvironmentAccountConnection'
      - description: The environment account connection data that's returned by Proton.
      example:
        managementAccountId: ""
        codebuildRoleArn: ""
        environmentAccountId: ""
        lastModifiedAt: ""
        requestedAt: ""
        componentRoleArn: ""
        environmentName: ""
        roleArn: ""
        id: ""
        arn: ""
        status: ""
      title: AcceptEnvironmentAccountConnectionOutput_environmentAccountConnection
    CancelComponentDeploymentOutput_component:
      allOf:
      - $ref: '#/components/schemas/Component'
      - description: The detailed data of the component with the deployment that is
          being canceled.
      example:
        lastDeploymentAttemptedAt: ""
        lastDeploymentSucceededAt: ""
        lastModifiedAt: ""
        lastSucceededDeploymentId: ""
        lastClientRequestToken: ""
        description: ""
        serviceInstanceName: ""
        serviceName: ""
        createdAt: ""
        deploymentStatus: ""
        environmentName: ""
        name: ""
        deploymentStatusMessage: ""
        arn: ""
        lastAttemptedDeploymentId: ""
        serviceSpec: ""
      title: CancelComponentDeploymentOutput_component
    CancelEnvironmentDeploymentOutput_environment:
      allOf:
      - $ref: '#/components/schemas/Environment'
      - description: The environment summary data that's returned by Proton.
      example:
        lastDeploymentAttemptedAt: ""
        templateMajorVersion: ""
        codebuildRoleArn: ""
        lastDeploymentSucceededAt: ""
        environmentAccountId: ""
        componentRoleArn: ""
        lastSucceededDeploymentId: ""
        description: ""
        spec: ""
        environmentAccountConnectionId: ""
        createdAt: ""
        deploymentStatus: ""
        templateName: ""
        name: ""
        templateMinorVersion: ""
        deploymentStatusMessage: ""
        provisioning: ""
        arn: ""
        protonServiceRoleArn: ""
        provisioningRepository:
          provider: ""
          name: ""
          arn: ""
          branch: ""
        lastAttemptedDeploymentId: ""
      title: CancelEnvironmentDeploymentOutput_environment
    CancelServiceInstanceDeploymentOutput_serviceInstance:
      allOf:
      - $ref: '#/components/schemas/ServiceInstance'
      - description: The service instance summary data that's returned by Proton.
      example:
        lastDeploymentAttemptedAt: ""
        templateMajorVersion: ""
        lastDeploymentSucceededAt: ""
        lastSucceededDeploymentId: ""
        lastClientRequestToken: ""
        serviceName: ""
        spec: ""
        createdAt: ""
        deploymentStatus: ""
        templateName: ""
        environmentName: ""
        name: ""
        templateMinorVersion: ""
        deploymentStatusMessage: ""
        arn: ""
        lastAttemptedDeploymentId: ""
      title: CancelServiceInstanceDeploymentOutput_serviceInstance
    CancelServicePipelineDeploymentOutput_pipeline:
      allOf:
      - $ref: '#/components/schemas/ServicePipeline'
      - description: The service pipeline detail data that's returned by Proton.
      example:
        lastDeploymentAttemptedAt: ""
        templateMajorVersion: ""
        createdAt: ""
        deploymentStatus: ""
        lastDeploymentSucceededAt: ""
        templateName: ""
        lastSucceededDeploymentId: ""
        templateMinorVersion: ""
        deploymentStatusMessage: ""
        arn: ""
        lastAttemptedDeploymentId: ""
        spec: ""
      title: CancelServicePipelineDeploymentOutput_pipeline
    CreateComponentOutput_component:
      allOf:
      - $ref: '#/components/schemas/Component'
      - description: The detailed data of the created component.
      example:
        lastDeploymentAttemptedAt: ""
        lastDeploymentSucceededAt: ""
        lastModifiedAt: ""
        lastSucceededDeploymentId: ""
        lastClientRequestToken: ""
        description: ""
        serviceInstanceName: ""
        serviceName: ""
        createdAt: ""
        deploymentStatus: ""
        environmentName: ""
        name: ""
        deploymentStatusMessage: ""
        arn: ""
        lastAttemptedDeploymentId: ""
        serviceSpec: ""
      title: CreateComponentOutput_component
    CreateEnvironmentOutput_environment:
      allOf:
      - $ref: '#/components/schemas/Environment'
      - description: The environment detail data that's returned by Proton.
      example:
        lastDeploymentAttemptedAt: ""
        templateMajorVersion: ""
        codebuildRoleArn: ""
        lastDeploymentSucceededAt: ""
        environmentAccountId: ""
        componentRoleArn: ""
        lastSucceededDeploymentId: ""
        description: ""
        spec: ""
        environmentAccountConnectionId: ""
        createdAt: ""
        deploymentStatus: ""
        templateName: ""
        name: ""
        templateMinorVersion: ""
        deploymentStatusMessage: ""
        provisioning: ""
        arn: ""
        protonServiceRoleArn: ""
        provisioningRepository:
          provider: ""
          name: ""
          arn: ""
          branch: ""
        lastAttemptedDeploymentId: ""
      title: CreateEnvironmentOutput_environment
    CreateEnvironmentInput_provisioningRepository:
      allOf:
      - $ref: '#/components/schemas/RepositoryBranchInput'
      - description: "<p>The linked repository that you use to host your rendered\
          \ infrastructure templates for self-managed provisioning. A linked repository\
          \ is a repository that has been registered with Proton. For more information,\
          \ see <a>CreateRepository</a>.</p> <p>To use self-managed provisioning for\
          \ the environment, specify this parameter and omit the <code>environmentAccountConnectionId</code>\
          \ and <code>protonServiceRoleArn</code> parameters.</p>"
      example:
        provider: ""
        name: ""
        branch: ""
      title: CreateEnvironmentInput_provisioningRepository
    CreateEnvironmentAccountConnectionOutput_environmentAccountConnection:
      allOf:
      - $ref: '#/components/schemas/EnvironmentAccountConnection'
      - description: The environment account connection detail data that's returned
          by Proton.
      example:
        managementAccountId: ""
        codebuildRoleArn: ""
        environmentAccountId: ""
        lastModifiedAt: ""
        requestedAt: ""
        componentRoleArn: ""
        environmentName: ""
        roleArn: ""
        id: ""
        arn: ""
        status: ""
      title: CreateEnvironmentAccountConnectionOutput_environmentAccountConnection
    CreateEnvironmentTemplateOutput_environmentTemplate:
      allOf:
      - $ref: '#/components/schemas/EnvironmentTemplate'
      - description: The environment template detail data that's returned by Proton.
      example:
        createdAt: ""
        lastModifiedAt: ""
        recommendedVersion: ""
        displayName: ""
        name: ""
        description: ""
        provisioning: ""
        encryptionKey: ""
        arn: ""
      title: CreateEnvironmentTemplateOutput_environmentTemplate
    CreateEnvironmentTemplateVersionOutput_environmentTemplateVersion:
      allOf:
      - $ref: '#/components/schemas/EnvironmentTemplateVersion'
      - description: The environment template detail data that's returned by Proton.
      example:
        schema: ""
        createdAt: ""
        lastModifiedAt: ""
        templateName: ""
        description: ""
        recommendedMinorVersion: ""
        arn: ""
        majorVersion: ""
        minorVersion: ""
        statusMessage: ""
        status: ""
      title: CreateEnvironmentTemplateVersionOutput_environmentTemplateVersion
    CreateEnvironmentTemplateVersionInput_source:
      allOf:
      - $ref: '#/components/schemas/TemplateVersionSourceInput'
      - description: An object that includes the template bundle S3 bucket path and
          name for the new version of an template.
      example:
        s3:
          bucket: ""
          key: ""
      title: CreateEnvironmentTemplateVersionInput_source
    CreateRepositoryOutput_repository:
      allOf:
      - $ref: '#/components/schemas/Repository'
      - description: The repository link's detail data that's returned by Proton.
      example:
        provider: ""
        connectionArn: ""
        name: ""
        encryptionKey: ""
        arn: ""
      title: CreateRepositoryOutput_repository
    CreateServiceOutput_service:
      allOf:
      - $ref: '#/components/schemas/Service'
      - description: The service detail data that's returned by Proton.
      example:
        lastModifiedAt: ""
        branchName: ""
        description: ""
        repositoryConnectionArn: ""
        spec: ""
        statusMessage: ""
        pipeline:
          lastDeploymentAttemptedAt: ""
          templateMajorVersion: ""
          createdAt: ""
          deploymentStatus: ""
          lastDeploymentSucceededAt: ""
          templateName: ""
          lastSucceededDeploymentId: ""
          templateMinorVersion: ""
          deploymentStatusMessage: ""
          arn: ""
          lastAttemptedDeploymentId: ""
          spec: ""
        createdAt: ""
        templateName: ""
        name: ""
        repositoryId: ""
        arn: ""
        status: ""
      title: CreateServiceOutput_service
    CreateServiceInstanceOutput_serviceInstance:
      allOf:
      - $ref: '#/components/schemas/ServiceInstance'
      - description: The detailed data of the service instance being created.
      example:
        lastDeploymentAttemptedAt: ""
        templateMajorVersion: ""
        lastDeploymentSucceededAt: ""
        lastSucceededDeploymentId: ""
        lastClientRequestToken: ""
        serviceName: ""
        spec: ""
        createdAt: ""
        deploymentStatus: ""
        templateName: ""
        environmentName: ""
        name: ""
        templateMinorVersion: ""
        deploymentStatusMessage: ""
        arn: ""
        lastAttemptedDeploymentId: ""
      title: CreateServiceInstanceOutput_serviceInstance
    CreateServiceSyncConfigOutput_serviceSyncConfig:
      allOf:
      - $ref: '#/components/schemas/ServiceSyncConfig'
      - description: The detailed data of the Proton Ops file.
      example:
        filePath: ""
        repositoryProvider: ""
        repositoryName: ""
        serviceName: ""
        branch: ""
      title: CreateServiceSyncConfigOutput_serviceSyncConfig
    CreateServiceTemplateOutput_serviceTemplate:
      allOf:
      - $ref: '#/components/schemas/ServiceTemplate'
      - description: The service template detail data that's returned by Proton.
      example:
        createdAt: ""
        lastModifiedAt: ""
        recommendedVersion: ""
        displayName: ""
        name: ""
        description: ""
        encryptionKey: ""
        arn: ""
        pipelineProvisioning: ""
      title: CreateServiceTemplateOutput_serviceTemplate
    CreateServiceTemplateVersionOutput_serviceTemplateVersion:
      allOf:
      - $ref: '#/components/schemas/ServiceTemplateVersion'
      - description: The service template version summary of detail data that's returned
          by Proton.
      example:
        schema: ""
        lastModifiedAt: ""
        description: ""
        recommendedMinorVersion: ""
        majorVersion: ""
        statusMessage: ""
        createdAt: ""
        supportedComponentSources: ""
        templateName: ""
        compatibleEnvironmentTemplates: ""
        arn: ""
        minorVersion: ""
        status: ""
      title: CreateServiceTemplateVersionOutput_serviceTemplateVersion
    CreateServiceTemplateVersionInput_source:
      allOf:
      - $ref: '#/components/schemas/TemplateVersionSourceInput'
      - description: An object that includes the template bundle S3 bucket path and
          name for the new version of a service template.
      example:
        s3:
          bucket: ""
          key: ""
      title: CreateServiceTemplateVersionInput_source
    CreateTemplateSyncConfigOutput_templateSyncConfig:
      allOf:
      - $ref: '#/components/schemas/TemplateSyncConfig'
      - description: The template sync configuration detail data that's returned by
          Proton.
      example:
        templateType: ""
        templateName: ""
        repositoryProvider: ""
        repositoryName: ""
        branch: ""
        subdirectory: ""
      title: CreateTemplateSyncConfigOutput_templateSyncConfig
    DeleteComponentOutput_component:
      allOf:
      - $ref: '#/components/schemas/Component'
      - description: The detailed data of the component being deleted.
      example:
        lastDeploymentAttemptedAt: ""
        lastDeploymentSucceededAt: ""
        lastModifiedAt: ""
        lastSucceededDeploymentId: ""
        lastClientRequestToken: ""
        description: ""
        serviceInstanceName: ""
        serviceName: ""
        createdAt: ""
        deploymentStatus: ""
        environmentName: ""
        name: ""
        deploymentStatusMessage: ""
        arn: ""
        lastAttemptedDeploymentId: ""
        serviceSpec: ""
      title: DeleteComponentOutput_component
    DeleteDeploymentOutput_deployment:
      allOf:
      - $ref: '#/components/schemas/Deployment'
      - description: The detailed data of the deployment being deleted.
      example:
        completedAt: ""
        initialState:
          component:
            serviceInstanceName: ""
            templateFile: ""
            serviceName: ""
            serviceSpec: ""
          environment:
            templateMajorVersion: ""
            templateName: ""
            templateMinorVersion: ""
            spec: ""
          servicePipeline:
            templateMajorVersion: ""
            templateName: ""
            templateMinorVersion: ""
            spec: ""
          serviceInstance:
            templateMajorVersion: ""
            lastSuccessfulEnvironmentDeploymentId: ""
            templateName: ""
            lastSuccessfulComponentDeploymentIds: ""
            templateMinorVersion: ""
            lastSuccessfulServicePipelineDeploymentId: ""
            spec: ""
        lastModifiedAt: ""
        lastSucceededDeploymentId: ""
        serviceInstanceName: ""
        serviceName: ""
        targetArn: ""
        targetResourceType: ""
        createdAt: ""
        deploymentStatus: ""
        targetResourceCreatedAt: ""
        environmentName: ""
        targetState:
          component:
            serviceInstanceName: ""
            templateFile: ""
            serviceName: ""
            serviceSpec: ""
          environment:
            templateMajorVersion: ""
            templateName: ""
            templateMinorVersion: ""
            spec: ""
          servicePipeline:
            templateMajorVersion: ""
            templateName: ""
            templateMinorVersion: ""
            spec: ""
          serviceInstance:
            templateMajorVersion: ""
            lastSuccessfulEnvironmentDeploymentId: ""
            templateName: ""
            lastSuccessfulComponentDeploymentIds: ""
            templateMinorVersion: ""
            lastSuccessfulServicePipelineDeploymentId: ""
            spec: ""
        deploymentStatusMessage: ""
        componentName: ""
        id: ""
        arn: ""
        lastAttemptedDeploymentId: ""
      title: DeleteDeploymentOutput_deployment
    DeleteEnvironmentOutput_environment:
      allOf:
      - $ref: '#/components/schemas/Environment'
      - description: The detailed data of the environment being deleted.
      example:
        lastDeploymentAttemptedAt: ""
        templateMajorVersion: ""
        codebuildRoleArn: ""
        lastDeploymentSucceededAt: ""
        environmentAccountId: ""
        componentRoleArn: ""
        lastSucceededDeploymentId: ""
        description: ""
        spec: ""
        environmentAccountConnectionId: ""
        createdAt: ""
        deploymentStatus: ""
        templateName: ""
        name: ""
        templateMinorVersion: ""
        deploymentStatusMessage: ""
        provisioning: ""
        arn: ""
        protonServiceRoleArn: ""
        provisioningRepository:
          provider: ""
          name: ""
          arn: ""
          branch: ""
        lastAttemptedDeploymentId: ""
      title: DeleteEnvironmentOutput_environment
    DeleteEnvironmentAccountConnectionOutput_environmentAccountConnection:
      allOf:
      - $ref: '#/components/schemas/EnvironmentAccountConnection'
      - description: The detailed data of the environment account connection being
          deleted.
      example:
        managementAccountId: ""
        codebuildRoleArn: ""
        environmentAccountId: ""
        lastModifiedAt: ""
        requestedAt: ""
        componentRoleArn: ""
        environmentName: ""
        roleArn: ""
        id: ""
        arn: ""
        status: ""
      title: DeleteEnvironmentAccountConnectionOutput_environmentAccountConnection
    DeleteEnvironmentTemplateOutput_environmentTemplate:
      allOf:
      - $ref: '#/components/schemas/EnvironmentTemplate'
      - description: The detailed data of the environment template being deleted.
      example:
        createdAt: ""
        lastModifiedAt: ""
        recommendedVersion: ""
        displayName: ""
        name: ""
        description: ""
        provisioning: ""
        encryptionKey: ""
        arn: ""
      title: DeleteEnvironmentTemplateOutput_environmentTemplate
    DeleteEnvironmentTemplateVersionOutput_environmentTemplateVersion:
      allOf:
      - $ref: '#/components/schemas/EnvironmentTemplateVersion'
      - description: The detailed data of the environment template version being deleted.
      example:
        schema: ""
        createdAt: ""
        lastModifiedAt: ""
        templateName: ""
        description: ""
        recommendedMinorVersion: ""
        arn: ""
        majorVersion: ""
        minorVersion: ""
        statusMessage: ""
        status: ""
      title: DeleteEnvironmentTemplateVersionOutput_environmentTemplateVersion
    DeleteRepositoryOutput_repository:
      allOf:
      - $ref: '#/components/schemas/Repository'
      - description: The deleted repository link's detail data that's returned by
          Proton.
      example:
        provider: ""
        connectionArn: ""
        name: ""
        encryptionKey: ""
        arn: ""
      title: DeleteRepositoryOutput_repository
    DeleteServiceOutput_service:
      allOf:
      - $ref: '#/components/schemas/Service'
      - description: The detailed data of the service being deleted.
      example:
        lastModifiedAt: ""
        branchName: ""
        description: ""
        repositoryConnectionArn: ""
        spec: ""
        statusMessage: ""
        pipeline:
          lastDeploymentAttemptedAt: ""
          templateMajorVersion: ""
          createdAt: ""
          deploymentStatus: ""
          lastDeploymentSucceededAt: ""
          templateName: ""
          lastSucceededDeploymentId: ""
          templateMinorVersion: ""
          deploymentStatusMessage: ""
          arn: ""
          lastAttemptedDeploymentId: ""
          spec: ""
        createdAt: ""
        templateName: ""
        name: ""
        repositoryId: ""
        arn: ""
        status: ""
      title: DeleteServiceOutput_service
    DeleteServiceSyncConfigOutput_serviceSyncConfig:
      allOf:
      - $ref: '#/components/schemas/ServiceSyncConfig'
      - description: The detailed data for the service sync config.
      example:
        filePath: ""
        repositoryProvider: ""
        repositoryName: ""
        serviceName: ""
        branch: ""
      title: DeleteServiceSyncConfigOutput_serviceSyncConfig
    DeleteServiceTemplateOutput_serviceTemplate:
      allOf:
      - $ref: '#/components/schemas/ServiceTemplate'
      - description: The detailed data of the service template being deleted.
      example:
        createdAt: ""
        lastModifiedAt: ""
        recommendedVersion: ""
        displayName: ""
        name: ""
        description: ""
        encryptionKey: ""
        arn: ""
        pipelineProvisioning: ""
      title: DeleteServiceTemplateOutput_serviceTemplate
    DeleteServiceTemplateVersionOutput_serviceTemplateVersion:
      allOf:
      - $ref: '#/components/schemas/ServiceTemplateVersion'
      - description: The detailed data of the service template version being deleted.
      example:
        schema: ""
        lastModifiedAt: ""
        description: ""
        recommendedMinorVersion: ""
        majorVersion: ""
        statusMessage: ""
        createdAt: ""
        supportedComponentSources: ""
        templateName: ""
        compatibleEnvironmentTemplates: ""
        arn: ""
        minorVersion: ""
        status: ""
      title: DeleteServiceTemplateVersionOutput_serviceTemplateVersion
    GetAccountSettingsOutput_accountSettings:
      allOf:
      - $ref: '#/components/schemas/AccountSettings'
      - description: The Proton pipeline service role detail data that's returned
          by Proton.
      example:
        pipelineServiceRoleArn: ""
        pipelineProvisioningRepository:
          provider: ""
          name: ""
          arn: ""
          branch: ""
        pipelineCodebuildRoleArn: ""
      title: GetAccountSettingsOutput_accountSettings
    GetComponentOutput_component:
      allOf:
      - $ref: '#/components/schemas/Component'
      - description: The detailed data of the requested component.
      example:
        lastDeploymentAttemptedAt: ""
        lastDeploymentSucceededAt: ""
        lastModifiedAt: ""
        lastSucceededDeploymentId: ""
        lastClientRequestToken: ""
        description: ""
        serviceInstanceName: ""
        serviceName: ""
        createdAt: ""
        deploymentStatus: ""
        environmentName: ""
        name: ""
        deploymentStatusMessage: ""
        arn: ""
        lastAttemptedDeploymentId: ""
        serviceSpec: ""
      title: GetComponentOutput_component
    GetDeploymentOutput_deployment:
      allOf:
      - $ref: '#/components/schemas/Deployment'
      - description: The detailed data of the requested deployment.
      example:
        completedAt: ""
        initialState:
          component:
            serviceInstanceName: ""
            templateFile: ""
            serviceName: ""
            serviceSpec: ""
          environment:
            templateMajorVersion: ""
            templateName: ""
            templateMinorVersion: ""
            spec: ""
          servicePipeline:
            templateMajorVersion: ""
            templateName: ""
            templateMinorVersion: ""
            spec: ""
          serviceInstance:
            templateMajorVersion: ""
            lastSuccessfulEnvironmentDeploymentId: ""
            templateName: ""
            lastSuccessfulComponentDeploymentIds: ""
            templateMinorVersion: ""
            lastSuccessfulServicePipelineDeploymentId: ""
            spec: ""
        lastModifiedAt: ""
        lastSucceededDeploymentId: ""
        serviceInstanceName: ""
        serviceName: ""
        targetArn: ""
        targetResourceType: ""
        createdAt: ""
        deploymentStatus: ""
        targetResourceCreatedAt: ""
        environmentName: ""
        targetState:
          component:
            serviceInstanceName: ""
            templateFile: ""
            serviceName: ""
            serviceSpec: ""
          environment:
            templateMajorVersion: ""
            templateName: ""
            templateMinorVersion: ""
            spec: ""
          servicePipeline:
            templateMajorVersion: ""
            templateName: ""
            templateMinorVersion: ""
            spec: ""
          serviceInstance:
            templateMajorVersion: ""
            lastSuccessfulEnvironmentDeploymentId: ""
            templateName: ""
            lastSuccessfulComponentDeploymentIds: ""
            templateMinorVersion: ""
            lastSuccessfulServicePipelineDeploymentId: ""
            spec: ""
        deploymentStatusMessage: ""
        componentName: ""
        id: ""
        arn: ""
        lastAttemptedDeploymentId: ""
      title: GetDeploymentOutput_deployment
    GetEnvironmentOutput_environment:
      allOf:
      - $ref: '#/components/schemas/Environment'
      - description: The detailed data of the requested environment.
      example:
        lastDeploymentAttemptedAt: ""
        templateMajorVersion: ""
        codebuildRoleArn: ""
        lastDeploymentSucceededAt: ""
        environmentAccountId: ""
        componentRoleArn: ""
        lastSucceededDeploymentId: ""
        description: ""
        spec: ""
        environmentAccountConnectionId: ""
        createdAt: ""
        deploymentStatus: ""
        templateName: ""
        name: ""
        templateMinorVersion: ""
        deploymentStatusMessage: ""
        provisioning: ""
        arn: ""
        protonServiceRoleArn: ""
        provisioningRepository:
          provider: ""
          name: ""
          arn: ""
          branch: ""
        lastAttemptedDeploymentId: ""
      title: GetEnvironmentOutput_environment
    GetEnvironmentAccountConnectionOutput_environmentAccountConnection:
      allOf:
      - $ref: '#/components/schemas/EnvironmentAccountConnection'
      - description: The detailed data of the requested environment account connection.
      example:
        managementAccountId: ""
        codebuildRoleArn: ""
        environmentAccountId: ""
        lastModifiedAt: ""
        requestedAt: ""
        componentRoleArn: ""
        environmentName: ""
        roleArn: ""
        id: ""
        arn: ""
        status: ""
      title: GetEnvironmentAccountConnectionOutput_environmentAccountConnection
    GetEnvironmentTemplateOutput_environmentTemplate:
      allOf:
      - $ref: '#/components/schemas/EnvironmentTemplate'
      - description: The detailed data of the requested environment template.
      example:
        createdAt: ""
        lastModifiedAt: ""
        recommendedVersion: ""
        displayName: ""
        name: ""
        description: ""
        provisioning: ""
        encryptionKey: ""
        arn: ""
      title: GetEnvironmentTemplateOutput_environmentTemplate
    GetEnvironmentTemplateVersionOutput_environmentTemplateVersion:
      allOf:
      - $ref: '#/components/schemas/EnvironmentTemplateVersion'
      - description: The detailed data of the requested environment template version.
      example:
        schema: ""
        createdAt: ""
        lastModifiedAt: ""
        templateName: ""
        description: ""
        recommendedMinorVersion: ""
        arn: ""
        majorVersion: ""
        minorVersion: ""
        statusMessage: ""
        status: ""
      title: GetEnvironmentTemplateVersionOutput_environmentTemplateVersion
    GetRepositorySyncStatusOutput_latestSync:
      allOf:
      - $ref: '#/components/schemas/RepositorySyncAttempt'
      - description: The repository sync status detail data that's returned by Proton.
      example:
        startedAt: ""
        events: ""
        status: ""
      title: GetRepositorySyncStatusOutput_latestSync
    GetResourcesSummaryOutput_counts:
      allOf:
      - $ref: '#/components/schemas/CountsSummary'
      - description: Summary counts of each Proton resource type.
      example:
        components:
          total: ""
          upToDate: ""
          behindMajor: ""
          behindMinor: ""
          failed: ""
        pipelines:
          total: ""
          upToDate: ""
          behindMajor: ""
          behindMinor: ""
          failed: ""
        environments:
          total: ""
          upToDate: ""
          behindMajor: ""
          behindMinor: ""
          failed: ""
        services:
          total: ""
          upToDate: ""
          behindMajor: ""
          behindMinor: ""
          failed: ""
        serviceTemplates:
          total: ""
          upToDate: ""
          behindMajor: ""
          behindMinor: ""
          failed: ""
        environmentTemplates:
          total: ""
          upToDate: ""
          behindMajor: ""
          behindMinor: ""
          failed: ""
        serviceInstances:
          total: ""
          upToDate: ""
          behindMajor: ""
          behindMinor: ""
          failed: ""
      title: GetResourcesSummaryOutput_counts
    GetServiceOutput_service:
      allOf:
      - $ref: '#/components/schemas/Service'
      - description: The detailed data of the requested service.
      example:
        lastModifiedAt: ""
        branchName: ""
        description: ""
        repositoryConnectionArn: ""
        spec: ""
        statusMessage: ""
        pipeline:
          lastDeploymentAttemptedAt: ""
          templateMajorVersion: ""
          createdAt: ""
          deploymentStatus: ""
          lastDeploymentSucceededAt: ""
          templateName: ""
          lastSucceededDeploymentId: ""
          templateMinorVersion: ""
          deploymentStatusMessage: ""
          arn: ""
          lastAttemptedDeploymentId: ""
          spec: ""
        createdAt: ""
        templateName: ""
        name: ""
        repositoryId: ""
        arn: ""
        status: ""
      title: GetServiceOutput_service
    GetServiceInstanceOutput_serviceInstance:
      allOf:
      - $ref: '#/components/schemas/ServiceInstance'
      - description: The detailed data of the requested service instance.
      example:
        lastDeploymentAttemptedAt: ""
        templateMajorVersion: ""
        lastDeploymentSucceededAt: ""
        lastSucceededDeploymentId: ""
        lastClientRequestToken: ""
        serviceName: ""
        spec: ""
        createdAt: ""
        deploymentStatus: ""
        templateName: ""
        environmentName: ""
        name: ""
        templateMinorVersion: ""
        deploymentStatusMessage: ""
        arn: ""
        lastAttemptedDeploymentId: ""
      title: GetServiceInstanceOutput_serviceInstance
    GetServiceInstanceSyncStatusOutput_desiredState:
      allOf:
      - $ref: '#/components/schemas/Revision'
      - description: The service instance sync desired state that's returned by Proton
      example:
        repositoryProvider: ""
        repositoryName: ""
        branch: ""
        directory: ""
        sha: ""
      title: GetServiceInstanceSyncStatusOutput_desiredState
    GetServiceInstanceSyncStatusOutput_latestSuccessfulSync:
      allOf:
      - $ref: '#/components/schemas/ResourceSyncAttempt'
      - description: The detailed data of the latest successful sync with the service
          instance.
      example:
        targetRevision:
          repositoryProvider: ""
          repositoryName: ""
          branch: ""
          directory: ""
          sha: ""
        initialRevision:
          repositoryProvider: ""
          repositoryName: ""
          branch: ""
          directory: ""
          sha: ""
        startedAt: ""
        events: ""
        status: ""
        target: ""
      title: GetServiceInstanceSyncStatusOutput_latestSuccessfulSync
    GetServiceInstanceSyncStatusOutput_latestSync:
      allOf:
      - $ref: '#/components/schemas/ResourceSyncAttempt'
      - description: The detailed data of the latest sync with the service instance.
      example:
        targetRevision:
          repositoryProvider: ""
          repositoryName: ""
          branch: ""
          directory: ""
          sha: ""
        initialRevision:
          repositoryProvider: ""
          repositoryName: ""
          branch: ""
          directory: ""
          sha: ""
        startedAt: ""
        events: ""
        status: ""
        target: ""
      title: GetServiceInstanceSyncStatusOutput_latestSync
    GetServiceSyncBlockerSummaryOutput_serviceSyncBlockerSummary:
      allOf:
      - $ref: '#/components/schemas/ServiceSyncBlockerSummary'
      - description: The detailed data of the requested service sync blocker summary.
      example:
        serviceInstanceName: ""
        serviceName: ""
        latestBlockers: ""
      title: GetServiceSyncBlockerSummaryOutput_serviceSyncBlockerSummary
    GetServiceSyncConfigOutput_serviceSyncConfig:
      allOf:
      - $ref: '#/components/schemas/ServiceSyncConfig'
      - description: The detailed data of the requested service sync configuration.
      example:
        filePath: ""
        repositoryProvider: ""
        repositoryName: ""
        serviceName: ""
        branch: ""
      title: GetServiceSyncConfigOutput_serviceSyncConfig
    GetServiceTemplateOutput_serviceTemplate:
      allOf:
      - $ref: '#/components/schemas/ServiceTemplate'
      - description: The detailed data of the requested service template.
      example:
        createdAt: ""
        lastModifiedAt: ""
        recommendedVersion: ""
        displayName: ""
        name: ""
        description: ""
        encryptionKey: ""
        arn: ""
        pipelineProvisioning: ""
      title: GetServiceTemplateOutput_serviceTemplate
    GetServiceTemplateVersionOutput_serviceTemplateVersion:
      allOf:
      - $ref: '#/components/schemas/ServiceTemplateVersion'
      - description: The detailed data of the requested service template version.
      example:
        schema: ""
        lastModifiedAt: ""
        description: ""
        recommendedMinorVersion: ""
        majorVersion: ""
        statusMessage: ""
        createdAt: ""
        supportedComponentSources: ""
        templateName: ""
        compatibleEnvironmentTemplates: ""
        arn: ""
        minorVersion: ""
        status: ""
      title: GetServiceTemplateVersionOutput_serviceTemplateVersion
    GetTemplateSyncStatusOutput_desiredState:
      allOf:
      - $ref: '#/components/schemas/Revision'
      - description: The template sync desired state that's returned by Proton.
      example:
        repositoryProvider: ""
        repositoryName: ""
        branch: ""
        directory: ""
        sha: ""
      title: GetTemplateSyncStatusOutput_desiredState
    GetTemplateSyncStatusOutput_latestSuccessfulSync:
      allOf:
      - $ref: '#/components/schemas/ResourceSyncAttempt'
      - description: The details of the last successful sync that's returned by Proton.
      example:
        targetRevision:
          repositoryProvider: ""
          repositoryName: ""
          branch: ""
          directory: ""
          sha: ""
        initialRevision:
          repositoryProvider: ""
          repositoryName: ""
          branch: ""
          directory: ""
          sha: ""
        startedAt: ""
        events: ""
        status: ""
        target: ""
      title: GetTemplateSyncStatusOutput_latestSuccessfulSync
    GetTemplateSyncStatusOutput_latestSync:
      allOf:
      - $ref: '#/components/schemas/ResourceSyncAttempt'
      - description: The details of the last sync that's returned by Proton.
      example:
        targetRevision:
          repositoryProvider: ""
          repositoryName: ""
          branch: ""
          directory: ""
          sha: ""
        initialRevision:
          repositoryProvider: ""
          repositoryName: ""
          branch: ""
          directory: ""
          sha: ""
        startedAt: ""
        events: ""
        status: ""
        target: ""
      title: GetTemplateSyncStatusOutput_latestSync
    RejectEnvironmentAccountConnectionOutput_environmentAccountConnection:
      allOf:
      - $ref: '#/components/schemas/EnvironmentAccountConnection'
      - description: The environment connection account detail data that's returned
          by Proton.
      example:
        managementAccountId: ""
        codebuildRoleArn: ""
        environmentAccountId: ""
        lastModifiedAt: ""
        requestedAt: ""
        componentRoleArn: ""
        environmentName: ""
        roleArn: ""
        id: ""
        arn: ""
        status: ""
      title: RejectEnvironmentAccountConnectionOutput_environmentAccountConnection
    UpdateAccountSettingsOutput_accountSettings:
      allOf:
      - $ref: '#/components/schemas/AccountSettings'
      - description: The Proton pipeline service role and repository data shared across
          the Amazon Web Services account.
      example:
        pipelineServiceRoleArn: ""
        pipelineProvisioningRepository:
          provider: ""
          name: ""
          arn: ""
          branch: ""
        pipelineCodebuildRoleArn: ""
      title: UpdateAccountSettingsOutput_accountSettings
    UpdateAccountSettingsInput_pipelineProvisioningRepository:
      allOf:
      - $ref: '#/components/schemas/RepositoryBranchInput'
      - description: "<p>A linked repository for pipeline provisioning. Specify it\
          \ if you have environments configured for self-managed provisioning with\
          \ services that include pipelines. A linked repository is a repository that\
          \ has been registered with Proton. For more information, see <a>CreateRepository</a>.</p>\
          \ <p>To remove a previously configured repository, set <code>deletePipelineProvisioningRepository</code>\
          \ to <code>true</code>, and don't set <code>pipelineProvisioningRepository</code>.</p>"
      example:
        provider: ""
        name: ""
        branch: ""
      title: UpdateAccountSettingsInput_pipelineProvisioningRepository
    UpdateComponentOutput_component:
      allOf:
      - $ref: '#/components/schemas/Component'
      - description: The detailed data of the updated component.
      example:
        lastDeploymentAttemptedAt: ""
        lastDeploymentSucceededAt: ""
        lastModifiedAt: ""
        lastSucceededDeploymentId: ""
        lastClientRequestToken: ""
        description: ""
        serviceInstanceName: ""
        serviceName: ""
        createdAt: ""
        deploymentStatus: ""
        environmentName: ""
        name: ""
        deploymentStatusMessage: ""
        arn: ""
        lastAttemptedDeploymentId: ""
        serviceSpec: ""
      title: UpdateComponentOutput_component
    UpdateEnvironmentInput_provisioningRepository:
      allOf:
      - $ref: '#/components/schemas/RepositoryBranchInput'
      - description: "The linked repository that you use to host your rendered infrastructure\
          \ templates for self-managed provisioning. A linked repository is a repository\
          \ that has been registered with Proton. For more information, see <a>CreateRepository</a>."
      example:
        provider: ""
        name: ""
        branch: ""
      title: UpdateEnvironmentInput_provisioningRepository
    UpdateEnvironmentTemplateVersionOutput_environmentTemplateVersion:
      allOf:
      - $ref: '#/components/schemas/EnvironmentTemplateVersion'
      - description: The environment template version detail data that's returned
          by Proton.
      example:
        schema: ""
        createdAt: ""
        lastModifiedAt: ""
        templateName: ""
        description: ""
        recommendedMinorVersion: ""
        arn: ""
        majorVersion: ""
        minorVersion: ""
        statusMessage: ""
        status: ""
      title: UpdateEnvironmentTemplateVersionOutput_environmentTemplateVersion
    UpdateServicePipelineOutput_pipeline:
      allOf:
      - $ref: '#/components/schemas/ServicePipeline'
      - description: The pipeline details that are returned by Proton.
      example:
        lastDeploymentAttemptedAt: ""
        templateMajorVersion: ""
        createdAt: ""
        deploymentStatus: ""
        lastDeploymentSucceededAt: ""
        templateName: ""
        lastSucceededDeploymentId: ""
        templateMinorVersion: ""
        deploymentStatusMessage: ""
        arn: ""
        lastAttemptedDeploymentId: ""
        spec: ""
      title: UpdateServicePipelineOutput_pipeline
    UpdateServiceSyncBlockerOutput_serviceSyncBlocker:
      allOf:
      - $ref: '#/components/schemas/SyncBlocker'
      - description: The detailed data on the service sync blocker that was updated.
      example:
        createdAt: ""
        resolvedAt: ""
        createdReason: ""
        contexts: ""
        id: ""
        type: ""
        resolvedReason: ""
        status: ""
      title: UpdateServiceSyncBlockerOutput_serviceSyncBlocker
    UpdateServiceTemplateVersionOutput_serviceTemplateVersion:
      allOf:
      - $ref: '#/components/schemas/ServiceTemplateVersion'
      - description: The service template version detail data that's returned by Proton.
      example:
        schema: ""
        lastModifiedAt: ""
        description: ""
        recommendedMinorVersion: ""
        majorVersion: ""
        statusMessage: ""
        createdAt: ""
        supportedComponentSources: ""
        templateName: ""
        compatibleEnvironmentTemplates: ""
        arn: ""
        minorVersion: ""
        status: ""
      title: UpdateServiceTemplateVersionOutput_serviceTemplateVersion
    AccountSettings_pipelineProvisioningRepository:
      allOf:
      - $ref: '#/components/schemas/RepositoryBranch'
      - description: "The linked repository for pipeline provisioning. Required if\
          \ you have environments configured for self-managed provisioning with services\
          \ that include pipelines. A linked repository is a repository that has been\
          \ registered with Proton. For more information, see <a>CreateRepository</a>."
      example:
        provider: ""
        name: ""
        arn: ""
        branch: ""
      title: AccountSettings_pipelineProvisioningRepository
    Environment_provisioningRepository:
      allOf:
      - $ref: '#/components/schemas/RepositoryBranch'
      - description: "The linked repository that you use to host your rendered infrastructure\
          \ templates for self-managed provisioning. A linked repository is a repository\
          \ that has been registered with Proton. For more information, see <a href=\"\
          https://docs.aws.amazon.com/proton/latest/APIReference/API_CreateRepository.html\"\
          >CreateRepository</a>."
      example:
        provider: ""
        name: ""
        arn: ""
        branch: ""
      title: Environment_provisioningRepository
    CountsSummary_components:
      allOf:
      - $ref: '#/components/schemas/ResourceCountsSummary'
      - description: "<p>The total number of components in the Amazon Web Services\
          \ account.</p> <p>The semantics of the <code>components</code> field are\
          \ different from the semantics of results for other infrastructure-provisioning\
          \ resources. That's because at this time components don't have associated\
          \ templates, therefore they don't have the concept of staleness. The <code>components</code>\
          \ object will only contain <code>total</code> and <code>failed</code> members.</p>"
      example:
        total: ""
        upToDate: ""
        behindMajor: ""
        behindMinor: ""
        failed: ""
      title: CountsSummary_components
    CountsSummary_environmentTemplates:
      allOf:
      - $ref: '#/components/schemas/ResourceCountsSummary'
      - description: The total number of environment templates in the Amazon Web Services
          account. The <code>environmentTemplates</code> object will only contain
          <code>total</code> members.
      example:
        total: ""
        upToDate: ""
        behindMajor: ""
        behindMinor: ""
        failed: ""
      title: CountsSummary_environmentTemplates
    CountsSummary_environments:
      allOf:
      - $ref: '#/components/schemas/ResourceCountsSummary'
      - description: The staleness counts for Proton environments in the Amazon Web
          Services account. The <code>environments</code> object will only contain
          <code>total</code> members.
      example:
        total: ""
        upToDate: ""
        behindMajor: ""
        behindMinor: ""
        failed: ""
      title: CountsSummary_environments
    CountsSummary_pipelines:
      allOf:
      - $ref: '#/components/schemas/ResourceCountsSummary'
      - description: The staleness counts for Proton pipelines in the Amazon Web Services
          account.
      example:
        total: ""
        upToDate: ""
        behindMajor: ""
        behindMinor: ""
        failed: ""
      title: CountsSummary_pipelines
    CountsSummary_serviceInstances:
      allOf:
      - $ref: '#/components/schemas/ResourceCountsSummary'
      - description: The staleness counts for Proton service instances in the Amazon
          Web Services account.
      example:
        total: ""
        upToDate: ""
        behindMajor: ""
        behindMinor: ""
        failed: ""
      title: CountsSummary_serviceInstances
    CountsSummary_serviceTemplates:
      allOf:
      - $ref: '#/components/schemas/ResourceCountsSummary'
      - description: The total number of service templates in the Amazon Web Services
          account. The <code>serviceTemplates</code> object will only contain <code>total</code>
          members.
      example:
        total: ""
        upToDate: ""
        behindMajor: ""
        behindMinor: ""
        failed: ""
      title: CountsSummary_serviceTemplates
    CountsSummary_services:
      allOf:
      - $ref: '#/components/schemas/ResourceCountsSummary'
      - description: The staleness counts for Proton services in the Amazon Web Services
          account.
      example:
        total: ""
        upToDate: ""
        behindMajor: ""
        behindMinor: ""
        failed: ""
      title: CountsSummary_services
    TemplateVersionSourceInput_s3:
      allOf:
      - $ref: '#/components/schemas/S3ObjectSource'
      - description: An S3 source object that includes the template bundle S3 path
          and name for a template minor version.
      example:
        bucket: ""
        key: ""
      title: TemplateVersionSourceInput_s3
    Service_pipeline:
      allOf:
      - $ref: '#/components/schemas/ServicePipeline'
      - description: The service pipeline detail data.
      example:
        lastDeploymentAttemptedAt: ""
        templateMajorVersion: ""
        createdAt: ""
        deploymentStatus: ""
        lastDeploymentSucceededAt: ""
        templateName: ""
        lastSucceededDeploymentId: ""
        templateMinorVersion: ""
        deploymentStatusMessage: ""
        arn: ""
        lastAttemptedDeploymentId: ""
        spec: ""
      title: Service_pipeline
    Deployment_initialState:
      allOf:
      - $ref: '#/components/schemas/DeploymentState'
      - description: The initial state of the target resource at the time of the deployment.
      example:
        component:
          serviceInstanceName: ""
          templateFile: ""
          serviceName: ""
          serviceSpec: ""
        environment:
          templateMajorVersion: ""
          templateName: ""
          templateMinorVersion: ""
          spec: ""
        servicePipeline:
          templateMajorVersion: ""
          templateName: ""
          templateMinorVersion: ""
          spec: ""
        serviceInstance:
          templateMajorVersion: ""
          lastSuccessfulEnvironmentDeploymentId: ""
          templateName: ""
          lastSuccessfulComponentDeploymentIds: ""
          templateMinorVersion: ""
          lastSuccessfulServicePipelineDeploymentId: ""
          spec: ""
      title: Deployment_initialState
    Deployment_targetState:
      allOf:
      - $ref: '#/components/schemas/DeploymentState'
      - description: The target state of the target resource at the time of the deployment.
      example:
        component:
          serviceInstanceName: ""
          templateFile: ""
          serviceName: ""
          serviceSpec: ""
        environment:
          templateMajorVersion: ""
          templateName: ""
          templateMinorVersion: ""
          spec: ""
        servicePipeline:
          templateMajorVersion: ""
          templateName: ""
          templateMinorVersion: ""
          spec: ""
        serviceInstance:
          templateMajorVersion: ""
          lastSuccessfulEnvironmentDeploymentId: ""
          templateName: ""
          lastSuccessfulComponentDeploymentIds: ""
          templateMinorVersion: ""
          lastSuccessfulServicePipelineDeploymentId: ""
          spec: ""
      title: Deployment_targetState
    DeploymentState_component:
      allOf:
      - $ref: '#/components/schemas/ComponentState'
      - description: The state of the component associated with the deployment.
      example:
        serviceInstanceName: ""
        templateFile: ""
        serviceName: ""
        serviceSpec: ""
      title: DeploymentState_component
    DeploymentState_environment:
      allOf:
      - $ref: '#/components/schemas/EnvironmentState'
      - description: The state of the environment associated with the deployment.
      example:
        templateMajorVersion: ""
        templateName: ""
        templateMinorVersion: ""
        spec: ""
      title: DeploymentState_environment
    DeploymentState_serviceInstance:
      allOf:
      - $ref: '#/components/schemas/ServiceInstanceState'
      - description: The state of the service instance associated with the deployment.
      example:
        templateMajorVersion: ""
        lastSuccessfulEnvironmentDeploymentId: ""
        templateName: ""
        lastSuccessfulComponentDeploymentIds: ""
        templateMinorVersion: ""
        lastSuccessfulServicePipelineDeploymentId: ""
        spec: ""
      title: DeploymentState_serviceInstance
    DeploymentState_servicePipeline:
      allOf:
      - $ref: '#/components/schemas/ServicePipelineState'
      - description: The state of the service pipeline associated with the deployment.
      example:
        templateMajorVersion: ""
        templateName: ""
        templateMinorVersion: ""
        spec: ""
      title: DeploymentState_servicePipeline
    ResourceSyncAttempt_initialRevision:
      allOf:
      - $ref: '#/components/schemas/Revision'
      - description: "Detail data for the initial repository commit, path and push."
      example:
        repositoryProvider: ""
        repositoryName: ""
        branch: ""
        directory: ""
        sha: ""
      title: ResourceSyncAttempt_initialRevision
    ResourceSyncAttempt_targetRevision:
      allOf:
      - $ref: '#/components/schemas/Revision'
      - description: Detail data for the target revision.
      example:
        repositoryProvider: ""
        repositoryName: ""
        branch: ""
        directory: ""
        sha: ""
      title: ResourceSyncAttempt_targetRevision
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
