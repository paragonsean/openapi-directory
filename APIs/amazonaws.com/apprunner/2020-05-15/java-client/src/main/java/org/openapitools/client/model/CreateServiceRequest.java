/*
 * AWS App Runner
 * <fullname>App Runner</fullname> <p>App Runner is an application service that provides a fast, simple, and cost-effective way to go directly from an existing container image or source code to a running service in the Amazon Web Services Cloud in seconds. You don't need to learn new technologies, decide which compute service to use, or understand how to provision and configure Amazon Web Services resources.</p> <p>App Runner connects directly to your container registry or source code repository. It provides an automatic delivery pipeline with fully managed operations, high performance, scalability, and security.</p> <p>For more information about App Runner, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/dg/\">App Runner Developer Guide</a>. For release information, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/relnotes/\">App Runner Release Notes</a>.</p> <p> To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that you can use to access the API, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of Region-specific endpoints that App Runner supports, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/apprunner.html\">App Runner endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateServiceRequestEncryptionConfiguration;
import org.openapitools.client.model.CreateServiceRequestHealthCheckConfiguration;
import org.openapitools.client.model.CreateServiceRequestInstanceConfiguration;
import org.openapitools.client.model.CreateServiceRequestNetworkConfiguration;
import org.openapitools.client.model.CreateServiceRequestObservabilityConfiguration;
import org.openapitools.client.model.CreateServiceRequestSourceConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateServiceRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:30.695381-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateServiceRequest {
  public static final String SERIALIZED_NAME_SERVICE_NAME = "ServiceName";
  @SerializedName(SERIALIZED_NAME_SERVICE_NAME)
  private String serviceName;

  public static final String SERIALIZED_NAME_SOURCE_CONFIGURATION = "SourceConfiguration";
  @SerializedName(SERIALIZED_NAME_SOURCE_CONFIGURATION)
  private CreateServiceRequestSourceConfiguration sourceConfiguration;

  public static final String SERIALIZED_NAME_INSTANCE_CONFIGURATION = "InstanceConfiguration";
  @SerializedName(SERIALIZED_NAME_INSTANCE_CONFIGURATION)
  private CreateServiceRequestInstanceConfiguration instanceConfiguration;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_ENCRYPTION_CONFIGURATION = "EncryptionConfiguration";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_CONFIGURATION)
  private CreateServiceRequestEncryptionConfiguration encryptionConfiguration;

  public static final String SERIALIZED_NAME_HEALTH_CHECK_CONFIGURATION = "HealthCheckConfiguration";
  @SerializedName(SERIALIZED_NAME_HEALTH_CHECK_CONFIGURATION)
  private CreateServiceRequestHealthCheckConfiguration healthCheckConfiguration;

  public static final String SERIALIZED_NAME_AUTO_SCALING_CONFIGURATION_ARN = "AutoScalingConfigurationArn";
  @SerializedName(SERIALIZED_NAME_AUTO_SCALING_CONFIGURATION_ARN)
  private String autoScalingConfigurationArn;

  public static final String SERIALIZED_NAME_NETWORK_CONFIGURATION = "NetworkConfiguration";
  @SerializedName(SERIALIZED_NAME_NETWORK_CONFIGURATION)
  private CreateServiceRequestNetworkConfiguration networkConfiguration;

  public static final String SERIALIZED_NAME_OBSERVABILITY_CONFIGURATION = "ObservabilityConfiguration";
  @SerializedName(SERIALIZED_NAME_OBSERVABILITY_CONFIGURATION)
  private CreateServiceRequestObservabilityConfiguration observabilityConfiguration;

  public CreateServiceRequest() {
  }

  public CreateServiceRequest serviceName(String serviceName) {
    this.serviceName = serviceName;
    return this;
  }

  /**
   * Get serviceName
   * @return serviceName
   */
  @javax.annotation.Nonnull
  public String getServiceName() {
    return serviceName;
  }

  public void setServiceName(String serviceName) {
    this.serviceName = serviceName;
  }


  public CreateServiceRequest sourceConfiguration(CreateServiceRequestSourceConfiguration sourceConfiguration) {
    this.sourceConfiguration = sourceConfiguration;
    return this;
  }

  /**
   * Get sourceConfiguration
   * @return sourceConfiguration
   */
  @javax.annotation.Nonnull
  public CreateServiceRequestSourceConfiguration getSourceConfiguration() {
    return sourceConfiguration;
  }

  public void setSourceConfiguration(CreateServiceRequestSourceConfiguration sourceConfiguration) {
    this.sourceConfiguration = sourceConfiguration;
  }


  public CreateServiceRequest instanceConfiguration(CreateServiceRequestInstanceConfiguration instanceConfiguration) {
    this.instanceConfiguration = instanceConfiguration;
    return this;
  }

  /**
   * Get instanceConfiguration
   * @return instanceConfiguration
   */
  @javax.annotation.Nullable
  public CreateServiceRequestInstanceConfiguration getInstanceConfiguration() {
    return instanceConfiguration;
  }

  public void setInstanceConfiguration(CreateServiceRequestInstanceConfiguration instanceConfiguration) {
    this.instanceConfiguration = instanceConfiguration;
  }


  public CreateServiceRequest tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public CreateServiceRequest encryptionConfiguration(CreateServiceRequestEncryptionConfiguration encryptionConfiguration) {
    this.encryptionConfiguration = encryptionConfiguration;
    return this;
  }

  /**
   * Get encryptionConfiguration
   * @return encryptionConfiguration
   */
  @javax.annotation.Nullable
  public CreateServiceRequestEncryptionConfiguration getEncryptionConfiguration() {
    return encryptionConfiguration;
  }

  public void setEncryptionConfiguration(CreateServiceRequestEncryptionConfiguration encryptionConfiguration) {
    this.encryptionConfiguration = encryptionConfiguration;
  }


  public CreateServiceRequest healthCheckConfiguration(CreateServiceRequestHealthCheckConfiguration healthCheckConfiguration) {
    this.healthCheckConfiguration = healthCheckConfiguration;
    return this;
  }

  /**
   * Get healthCheckConfiguration
   * @return healthCheckConfiguration
   */
  @javax.annotation.Nullable
  public CreateServiceRequestHealthCheckConfiguration getHealthCheckConfiguration() {
    return healthCheckConfiguration;
  }

  public void setHealthCheckConfiguration(CreateServiceRequestHealthCheckConfiguration healthCheckConfiguration) {
    this.healthCheckConfiguration = healthCheckConfiguration;
  }


  public CreateServiceRequest autoScalingConfigurationArn(String autoScalingConfigurationArn) {
    this.autoScalingConfigurationArn = autoScalingConfigurationArn;
    return this;
  }

  /**
   * Get autoScalingConfigurationArn
   * @return autoScalingConfigurationArn
   */
  @javax.annotation.Nullable
  public String getAutoScalingConfigurationArn() {
    return autoScalingConfigurationArn;
  }

  public void setAutoScalingConfigurationArn(String autoScalingConfigurationArn) {
    this.autoScalingConfigurationArn = autoScalingConfigurationArn;
  }


  public CreateServiceRequest networkConfiguration(CreateServiceRequestNetworkConfiguration networkConfiguration) {
    this.networkConfiguration = networkConfiguration;
    return this;
  }

  /**
   * Get networkConfiguration
   * @return networkConfiguration
   */
  @javax.annotation.Nullable
  public CreateServiceRequestNetworkConfiguration getNetworkConfiguration() {
    return networkConfiguration;
  }

  public void setNetworkConfiguration(CreateServiceRequestNetworkConfiguration networkConfiguration) {
    this.networkConfiguration = networkConfiguration;
  }


  public CreateServiceRequest observabilityConfiguration(CreateServiceRequestObservabilityConfiguration observabilityConfiguration) {
    this.observabilityConfiguration = observabilityConfiguration;
    return this;
  }

  /**
   * Get observabilityConfiguration
   * @return observabilityConfiguration
   */
  @javax.annotation.Nullable
  public CreateServiceRequestObservabilityConfiguration getObservabilityConfiguration() {
    return observabilityConfiguration;
  }

  public void setObservabilityConfiguration(CreateServiceRequestObservabilityConfiguration observabilityConfiguration) {
    this.observabilityConfiguration = observabilityConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateServiceRequest createServiceRequest = (CreateServiceRequest) o;
    return Objects.equals(this.serviceName, createServiceRequest.serviceName) &&
        Objects.equals(this.sourceConfiguration, createServiceRequest.sourceConfiguration) &&
        Objects.equals(this.instanceConfiguration, createServiceRequest.instanceConfiguration) &&
        Objects.equals(this.tags, createServiceRequest.tags) &&
        Objects.equals(this.encryptionConfiguration, createServiceRequest.encryptionConfiguration) &&
        Objects.equals(this.healthCheckConfiguration, createServiceRequest.healthCheckConfiguration) &&
        Objects.equals(this.autoScalingConfigurationArn, createServiceRequest.autoScalingConfigurationArn) &&
        Objects.equals(this.networkConfiguration, createServiceRequest.networkConfiguration) &&
        Objects.equals(this.observabilityConfiguration, createServiceRequest.observabilityConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serviceName, sourceConfiguration, instanceConfiguration, tags, encryptionConfiguration, healthCheckConfiguration, autoScalingConfigurationArn, networkConfiguration, observabilityConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateServiceRequest {\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    sourceConfiguration: ").append(toIndentedString(sourceConfiguration)).append("\n");
    sb.append("    instanceConfiguration: ").append(toIndentedString(instanceConfiguration)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    encryptionConfiguration: ").append(toIndentedString(encryptionConfiguration)).append("\n");
    sb.append("    healthCheckConfiguration: ").append(toIndentedString(healthCheckConfiguration)).append("\n");
    sb.append("    autoScalingConfigurationArn: ").append(toIndentedString(autoScalingConfigurationArn)).append("\n");
    sb.append("    networkConfiguration: ").append(toIndentedString(networkConfiguration)).append("\n");
    sb.append("    observabilityConfiguration: ").append(toIndentedString(observabilityConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ServiceName");
    openapiFields.add("SourceConfiguration");
    openapiFields.add("InstanceConfiguration");
    openapiFields.add("Tags");
    openapiFields.add("EncryptionConfiguration");
    openapiFields.add("HealthCheckConfiguration");
    openapiFields.add("AutoScalingConfigurationArn");
    openapiFields.add("NetworkConfiguration");
    openapiFields.add("ObservabilityConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ServiceName");
    openapiRequiredFields.add("SourceConfiguration");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateServiceRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateServiceRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateServiceRequest is not found in the empty JSON string", CreateServiceRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateServiceRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateServiceRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateServiceRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ServiceName`
      String.validateJsonElement(jsonObj.get("ServiceName"));
      // validate the required field `SourceConfiguration`
      CreateServiceRequestSourceConfiguration.validateJsonElement(jsonObj.get("SourceConfiguration"));
      // validate the optional field `InstanceConfiguration`
      if (jsonObj.get("InstanceConfiguration") != null && !jsonObj.get("InstanceConfiguration").isJsonNull()) {
        CreateServiceRequestInstanceConfiguration.validateJsonElement(jsonObj.get("InstanceConfiguration"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `EncryptionConfiguration`
      if (jsonObj.get("EncryptionConfiguration") != null && !jsonObj.get("EncryptionConfiguration").isJsonNull()) {
        CreateServiceRequestEncryptionConfiguration.validateJsonElement(jsonObj.get("EncryptionConfiguration"));
      }
      // validate the optional field `HealthCheckConfiguration`
      if (jsonObj.get("HealthCheckConfiguration") != null && !jsonObj.get("HealthCheckConfiguration").isJsonNull()) {
        CreateServiceRequestHealthCheckConfiguration.validateJsonElement(jsonObj.get("HealthCheckConfiguration"));
      }
      // validate the optional field `AutoScalingConfigurationArn`
      if (jsonObj.get("AutoScalingConfigurationArn") != null && !jsonObj.get("AutoScalingConfigurationArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AutoScalingConfigurationArn"));
      }
      // validate the optional field `NetworkConfiguration`
      if (jsonObj.get("NetworkConfiguration") != null && !jsonObj.get("NetworkConfiguration").isJsonNull()) {
        CreateServiceRequestNetworkConfiguration.validateJsonElement(jsonObj.get("NetworkConfiguration"));
      }
      // validate the optional field `ObservabilityConfiguration`
      if (jsonObj.get("ObservabilityConfiguration") != null && !jsonObj.get("ObservabilityConfiguration").isJsonNull()) {
        CreateServiceRequestObservabilityConfiguration.validateJsonElement(jsonObj.get("ObservabilityConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateServiceRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateServiceRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateServiceRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateServiceRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateServiceRequest>() {
           @Override
           public void write(JsonWriter out, CreateServiceRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateServiceRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateServiceRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateServiceRequest
   * @throws IOException if the JSON string is invalid with respect to CreateServiceRequest
   */
  public static CreateServiceRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateServiceRequest.class);
  }

  /**
   * Convert an instance of CreateServiceRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

