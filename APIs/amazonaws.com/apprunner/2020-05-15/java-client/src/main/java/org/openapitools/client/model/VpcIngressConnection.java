/*
 * AWS App Runner
 * <fullname>App Runner</fullname> <p>App Runner is an application service that provides a fast, simple, and cost-effective way to go directly from an existing container image or source code to a running service in the Amazon Web Services Cloud in seconds. You don't need to learn new technologies, decide which compute service to use, or understand how to provision and configure Amazon Web Services resources.</p> <p>App Runner connects directly to your container registry or source code repository. It provides an automatic delivery pipeline with fully managed operations, high performance, scalability, and security.</p> <p>For more information about App Runner, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/dg/\">App Runner Developer Guide</a>. For release information, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/relnotes/\">App Runner Release Notes</a>.</p> <p> To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that you can use to access the API, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of Region-specific endpoints that App Runner supports, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/apprunner.html\">App Runner endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.VpcIngressConnectionIngressVpcConfiguration;
import org.openapitools.client.model.VpcIngressConnectionStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The App Runner resource that specifies an App Runner endpoint for incoming traffic. It establishes a connection between a VPC interface endpoint and a App Runner service, to make your App Runner service accessible from only within an Amazon VPC.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:30.695381-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VpcIngressConnection {
  public static final String SERIALIZED_NAME_VPC_INGRESS_CONNECTION_ARN = "VpcIngressConnectionArn";
  @SerializedName(SERIALIZED_NAME_VPC_INGRESS_CONNECTION_ARN)
  private String vpcIngressConnectionArn;

  public static final String SERIALIZED_NAME_VPC_INGRESS_CONNECTION_NAME = "VpcIngressConnectionName";
  @SerializedName(SERIALIZED_NAME_VPC_INGRESS_CONNECTION_NAME)
  private String vpcIngressConnectionName;

  public static final String SERIALIZED_NAME_SERVICE_ARN = "ServiceArn";
  @SerializedName(SERIALIZED_NAME_SERVICE_ARN)
  private String serviceArn;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private VpcIngressConnectionStatus status;

  public static final String SERIALIZED_NAME_ACCOUNT_ID = "AccountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_DOMAIN_NAME = "DomainName";
  @SerializedName(SERIALIZED_NAME_DOMAIN_NAME)
  private String domainName;

  public static final String SERIALIZED_NAME_INGRESS_VPC_CONFIGURATION = "IngressVpcConfiguration";
  @SerializedName(SERIALIZED_NAME_INGRESS_VPC_CONFIGURATION)
  private VpcIngressConnectionIngressVpcConfiguration ingressVpcConfiguration;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_DELETED_AT = "DeletedAt";
  @SerializedName(SERIALIZED_NAME_DELETED_AT)
  private OffsetDateTime deletedAt;

  public VpcIngressConnection() {
  }

  public VpcIngressConnection vpcIngressConnectionArn(String vpcIngressConnectionArn) {
    this.vpcIngressConnectionArn = vpcIngressConnectionArn;
    return this;
  }

  /**
   * Get vpcIngressConnectionArn
   * @return vpcIngressConnectionArn
   */
  @javax.annotation.Nullable
  public String getVpcIngressConnectionArn() {
    return vpcIngressConnectionArn;
  }

  public void setVpcIngressConnectionArn(String vpcIngressConnectionArn) {
    this.vpcIngressConnectionArn = vpcIngressConnectionArn;
  }


  public VpcIngressConnection vpcIngressConnectionName(String vpcIngressConnectionName) {
    this.vpcIngressConnectionName = vpcIngressConnectionName;
    return this;
  }

  /**
   * Get vpcIngressConnectionName
   * @return vpcIngressConnectionName
   */
  @javax.annotation.Nullable
  public String getVpcIngressConnectionName() {
    return vpcIngressConnectionName;
  }

  public void setVpcIngressConnectionName(String vpcIngressConnectionName) {
    this.vpcIngressConnectionName = vpcIngressConnectionName;
  }


  public VpcIngressConnection serviceArn(String serviceArn) {
    this.serviceArn = serviceArn;
    return this;
  }

  /**
   * Get serviceArn
   * @return serviceArn
   */
  @javax.annotation.Nullable
  public String getServiceArn() {
    return serviceArn;
  }

  public void setServiceArn(String serviceArn) {
    this.serviceArn = serviceArn;
  }


  public VpcIngressConnection status(VpcIngressConnectionStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public VpcIngressConnectionStatus getStatus() {
    return status;
  }

  public void setStatus(VpcIngressConnectionStatus status) {
    this.status = status;
  }


  public VpcIngressConnection accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Get accountId
   * @return accountId
   */
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public VpcIngressConnection domainName(String domainName) {
    this.domainName = domainName;
    return this;
  }

  /**
   * Get domainName
   * @return domainName
   */
  @javax.annotation.Nullable
  public String getDomainName() {
    return domainName;
  }

  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }


  public VpcIngressConnection ingressVpcConfiguration(VpcIngressConnectionIngressVpcConfiguration ingressVpcConfiguration) {
    this.ingressVpcConfiguration = ingressVpcConfiguration;
    return this;
  }

  /**
   * Get ingressVpcConfiguration
   * @return ingressVpcConfiguration
   */
  @javax.annotation.Nullable
  public VpcIngressConnectionIngressVpcConfiguration getIngressVpcConfiguration() {
    return ingressVpcConfiguration;
  }

  public void setIngressVpcConfiguration(VpcIngressConnectionIngressVpcConfiguration ingressVpcConfiguration) {
    this.ingressVpcConfiguration = ingressVpcConfiguration;
  }


  public VpcIngressConnection createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public VpcIngressConnection deletedAt(OffsetDateTime deletedAt) {
    this.deletedAt = deletedAt;
    return this;
  }

  /**
   * Get deletedAt
   * @return deletedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDeletedAt() {
    return deletedAt;
  }

  public void setDeletedAt(OffsetDateTime deletedAt) {
    this.deletedAt = deletedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VpcIngressConnection vpcIngressConnection = (VpcIngressConnection) o;
    return Objects.equals(this.vpcIngressConnectionArn, vpcIngressConnection.vpcIngressConnectionArn) &&
        Objects.equals(this.vpcIngressConnectionName, vpcIngressConnection.vpcIngressConnectionName) &&
        Objects.equals(this.serviceArn, vpcIngressConnection.serviceArn) &&
        Objects.equals(this.status, vpcIngressConnection.status) &&
        Objects.equals(this.accountId, vpcIngressConnection.accountId) &&
        Objects.equals(this.domainName, vpcIngressConnection.domainName) &&
        Objects.equals(this.ingressVpcConfiguration, vpcIngressConnection.ingressVpcConfiguration) &&
        Objects.equals(this.createdAt, vpcIngressConnection.createdAt) &&
        Objects.equals(this.deletedAt, vpcIngressConnection.deletedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vpcIngressConnectionArn, vpcIngressConnectionName, serviceArn, status, accountId, domainName, ingressVpcConfiguration, createdAt, deletedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VpcIngressConnection {\n");
    sb.append("    vpcIngressConnectionArn: ").append(toIndentedString(vpcIngressConnectionArn)).append("\n");
    sb.append("    vpcIngressConnectionName: ").append(toIndentedString(vpcIngressConnectionName)).append("\n");
    sb.append("    serviceArn: ").append(toIndentedString(serviceArn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    ingressVpcConfiguration: ").append(toIndentedString(ingressVpcConfiguration)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("VpcIngressConnectionArn");
    openapiFields.add("VpcIngressConnectionName");
    openapiFields.add("ServiceArn");
    openapiFields.add("Status");
    openapiFields.add("AccountId");
    openapiFields.add("DomainName");
    openapiFields.add("IngressVpcConfiguration");
    openapiFields.add("CreatedAt");
    openapiFields.add("DeletedAt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VpcIngressConnection
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VpcIngressConnection.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VpcIngressConnection is not found in the empty JSON string", VpcIngressConnection.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VpcIngressConnection.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VpcIngressConnection` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `VpcIngressConnectionArn`
      if (jsonObj.get("VpcIngressConnectionArn") != null && !jsonObj.get("VpcIngressConnectionArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VpcIngressConnectionArn"));
      }
      // validate the optional field `VpcIngressConnectionName`
      if (jsonObj.get("VpcIngressConnectionName") != null && !jsonObj.get("VpcIngressConnectionName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VpcIngressConnectionName"));
      }
      // validate the optional field `ServiceArn`
      if (jsonObj.get("ServiceArn") != null && !jsonObj.get("ServiceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServiceArn"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        VpcIngressConnectionStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `AccountId`
      if (jsonObj.get("AccountId") != null && !jsonObj.get("AccountId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AccountId"));
      }
      // validate the optional field `DomainName`
      if (jsonObj.get("DomainName") != null && !jsonObj.get("DomainName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DomainName"));
      }
      // validate the optional field `IngressVpcConfiguration`
      if (jsonObj.get("IngressVpcConfiguration") != null && !jsonObj.get("IngressVpcConfiguration").isJsonNull()) {
        VpcIngressConnectionIngressVpcConfiguration.validateJsonElement(jsonObj.get("IngressVpcConfiguration"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `DeletedAt`
      if (jsonObj.get("DeletedAt") != null && !jsonObj.get("DeletedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("DeletedAt"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VpcIngressConnection.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VpcIngressConnection' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VpcIngressConnection> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VpcIngressConnection.class));

       return (TypeAdapter<T>) new TypeAdapter<VpcIngressConnection>() {
           @Override
           public void write(JsonWriter out, VpcIngressConnection value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VpcIngressConnection read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VpcIngressConnection given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VpcIngressConnection
   * @throws IOException if the JSON string is invalid with respect to VpcIngressConnection
   */
  public static VpcIngressConnection fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VpcIngressConnection.class);
  }

  /**
   * Convert an instance of VpcIngressConnection to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

