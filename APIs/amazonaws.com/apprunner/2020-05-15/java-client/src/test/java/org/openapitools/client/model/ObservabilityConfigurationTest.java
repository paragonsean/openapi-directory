/*
 * AWS App Runner
 * <fullname>App Runner</fullname> <p>App Runner is an application service that provides a fast, simple, and cost-effective way to go directly from an existing container image or source code to a running service in the Amazon Web Services Cloud in seconds. You don't need to learn new technologies, decide which compute service to use, or understand how to provision and configure Amazon Web Services resources.</p> <p>App Runner connects directly to your container registry or source code repository. It provides an automatic delivery pipeline with fully managed operations, high performance, scalability, and security.</p> <p>For more information about App Runner, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/dg/\">App Runner Developer Guide</a>. For release information, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/relnotes/\">App Runner Release Notes</a>.</p> <p> To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that you can use to access the API, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of Region-specific endpoints that App Runner supports, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/apprunner.html\">App Runner endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ObservabilityConfigurationStatus;
import org.openapitools.client.model.ObservabilityConfigurationTraceConfiguration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ObservabilityConfiguration
 */
public class ObservabilityConfigurationTest {
    private final ObservabilityConfiguration model = new ObservabilityConfiguration();

    /**
     * Model tests for ObservabilityConfiguration
     */
    @Test
    public void testObservabilityConfiguration() {
        // TODO: test ObservabilityConfiguration
    }

    /**
     * Test the property 'observabilityConfigurationArn'
     */
    @Test
    public void observabilityConfigurationArnTest() {
        // TODO: test observabilityConfigurationArn
    }

    /**
     * Test the property 'observabilityConfigurationName'
     */
    @Test
    public void observabilityConfigurationNameTest() {
        // TODO: test observabilityConfigurationName
    }

    /**
     * Test the property 'traceConfiguration'
     */
    @Test
    public void traceConfigurationTest() {
        // TODO: test traceConfiguration
    }

    /**
     * Test the property 'observabilityConfigurationRevision'
     */
    @Test
    public void observabilityConfigurationRevisionTest() {
        // TODO: test observabilityConfigurationRevision
    }

    /**
     * Test the property 'latest'
     */
    @Test
    public void latestTest() {
        // TODO: test latest
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'deletedAt'
     */
    @Test
    public void deletedAtTest() {
        // TODO: test deletedAt
    }

}
