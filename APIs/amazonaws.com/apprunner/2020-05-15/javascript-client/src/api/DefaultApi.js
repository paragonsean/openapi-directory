/**
 * AWS App Runner
 * <fullname>App Runner</fullname> <p>App Runner is an application service that provides a fast, simple, and cost-effective way to go directly from an existing container image or source code to a running service in the Amazon Web Services Cloud in seconds. You don't need to learn new technologies, decide which compute service to use, or understand how to provision and configure Amazon Web Services resources.</p> <p>App Runner connects directly to your container registry or source code repository. It provides an automatic delivery pipeline with fully managed operations, high performance, scalability, and security.</p> <p>For more information about App Runner, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/dg/\">App Runner Developer Guide</a>. For release information, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/relnotes/\">App Runner Release Notes</a>.</p> <p> To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that you can use to access the API, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of Region-specific endpoints that App Runner supports, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/apprunner.html\">App Runner endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AssociateCustomDomainRequest from '../model/AssociateCustomDomainRequest';
import AssociateCustomDomainResponse from '../model/AssociateCustomDomainResponse';
import CreateAutoScalingConfigurationRequest from '../model/CreateAutoScalingConfigurationRequest';
import CreateAutoScalingConfigurationResponse from '../model/CreateAutoScalingConfigurationResponse';
import CreateConnectionRequest from '../model/CreateConnectionRequest';
import CreateConnectionResponse from '../model/CreateConnectionResponse';
import CreateObservabilityConfigurationRequest from '../model/CreateObservabilityConfigurationRequest';
import CreateObservabilityConfigurationResponse from '../model/CreateObservabilityConfigurationResponse';
import CreateServiceRequest from '../model/CreateServiceRequest';
import CreateServiceResponse from '../model/CreateServiceResponse';
import CreateVpcConnectorRequest from '../model/CreateVpcConnectorRequest';
import CreateVpcConnectorResponse from '../model/CreateVpcConnectorResponse';
import CreateVpcIngressConnectionRequest from '../model/CreateVpcIngressConnectionRequest';
import CreateVpcIngressConnectionResponse from '../model/CreateVpcIngressConnectionResponse';
import DeleteAutoScalingConfigurationRequest from '../model/DeleteAutoScalingConfigurationRequest';
import DeleteAutoScalingConfigurationResponse from '../model/DeleteAutoScalingConfigurationResponse';
import DeleteConnectionRequest from '../model/DeleteConnectionRequest';
import DeleteConnectionResponse from '../model/DeleteConnectionResponse';
import DeleteObservabilityConfigurationRequest from '../model/DeleteObservabilityConfigurationRequest';
import DeleteObservabilityConfigurationResponse from '../model/DeleteObservabilityConfigurationResponse';
import DeleteServiceRequest from '../model/DeleteServiceRequest';
import DeleteServiceResponse from '../model/DeleteServiceResponse';
import DeleteVpcConnectorRequest from '../model/DeleteVpcConnectorRequest';
import DeleteVpcConnectorResponse from '../model/DeleteVpcConnectorResponse';
import DeleteVpcIngressConnectionRequest from '../model/DeleteVpcIngressConnectionRequest';
import DeleteVpcIngressConnectionResponse from '../model/DeleteVpcIngressConnectionResponse';
import DescribeAutoScalingConfigurationRequest from '../model/DescribeAutoScalingConfigurationRequest';
import DescribeAutoScalingConfigurationResponse from '../model/DescribeAutoScalingConfigurationResponse';
import DescribeCustomDomainsRequest from '../model/DescribeCustomDomainsRequest';
import DescribeCustomDomainsResponse from '../model/DescribeCustomDomainsResponse';
import DescribeObservabilityConfigurationRequest from '../model/DescribeObservabilityConfigurationRequest';
import DescribeObservabilityConfigurationResponse from '../model/DescribeObservabilityConfigurationResponse';
import DescribeServiceRequest from '../model/DescribeServiceRequest';
import DescribeServiceResponse from '../model/DescribeServiceResponse';
import DescribeVpcConnectorRequest from '../model/DescribeVpcConnectorRequest';
import DescribeVpcConnectorResponse from '../model/DescribeVpcConnectorResponse';
import DescribeVpcIngressConnectionRequest from '../model/DescribeVpcIngressConnectionRequest';
import DescribeVpcIngressConnectionResponse from '../model/DescribeVpcIngressConnectionResponse';
import DisassociateCustomDomainRequest from '../model/DisassociateCustomDomainRequest';
import DisassociateCustomDomainResponse from '../model/DisassociateCustomDomainResponse';
import ListAutoScalingConfigurationsRequest from '../model/ListAutoScalingConfigurationsRequest';
import ListAutoScalingConfigurationsResponse from '../model/ListAutoScalingConfigurationsResponse';
import ListConnectionsRequest from '../model/ListConnectionsRequest';
import ListConnectionsResponse from '../model/ListConnectionsResponse';
import ListObservabilityConfigurationsRequest from '../model/ListObservabilityConfigurationsRequest';
import ListObservabilityConfigurationsResponse from '../model/ListObservabilityConfigurationsResponse';
import ListOperationsRequest from '../model/ListOperationsRequest';
import ListOperationsResponse from '../model/ListOperationsResponse';
import ListServicesRequest from '../model/ListServicesRequest';
import ListServicesResponse from '../model/ListServicesResponse';
import ListTagsForResourceRequest from '../model/ListTagsForResourceRequest';
import ListTagsForResourceResponse from '../model/ListTagsForResourceResponse';
import ListVpcConnectorsRequest from '../model/ListVpcConnectorsRequest';
import ListVpcConnectorsResponse from '../model/ListVpcConnectorsResponse';
import ListVpcIngressConnectionsRequest from '../model/ListVpcIngressConnectionsRequest';
import ListVpcIngressConnectionsResponse from '../model/ListVpcIngressConnectionsResponse';
import PauseServiceRequest from '../model/PauseServiceRequest';
import PauseServiceResponse from '../model/PauseServiceResponse';
import ResumeServiceRequest from '../model/ResumeServiceRequest';
import ResumeServiceResponse from '../model/ResumeServiceResponse';
import StartDeploymentRequest from '../model/StartDeploymentRequest';
import StartDeploymentResponse from '../model/StartDeploymentResponse';
import TagResourceRequest from '../model/TagResourceRequest';
import UntagResourceRequest from '../model/UntagResourceRequest';
import UpdateServiceRequest from '../model/UpdateServiceRequest';
import UpdateServiceResponse from '../model/UpdateServiceResponse';
import UpdateVpcIngressConnectionRequest from '../model/UpdateVpcIngressConnectionRequest';
import UpdateVpcIngressConnectionResponse from '../model/UpdateVpcIngressConnectionResponse';

/**
* Default service.
* @module api/DefaultApi
* @version 2020-05-15
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the associateCustomDomain operation.
     * @callback module:api/DefaultApi~associateCustomDomainCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AssociateCustomDomainResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Associate your own domain name with the App Runner subdomain URL of your App Runner service.</p> <p>After you call <code>AssociateCustomDomain</code> and receive a successful response, use the information in the <a>CustomDomain</a> record that's returned to add CNAME records to your Domain Name System (DNS). For each mapped domain name, add a mapping to the target App Runner subdomain and one or more certificate validation records. App Runner then performs DNS validation to verify that you own or control the domain name that you associated. App Runner tracks domain validity in a certificate stored in <a href=\"https://docs.aws.amazon.com/acm/latest/userguide\">AWS Certificate Manager (ACM)</a>.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/AssociateCustomDomainRequest} associateCustomDomainRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~associateCustomDomainCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AssociateCustomDomainResponse}
     */
    associateCustomDomain(xAmzTarget, associateCustomDomainRequest, opts, callback) {
      opts = opts || {};
      let postBody = associateCustomDomainRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling associateCustomDomain");
      }
      // verify the required parameter 'associateCustomDomainRequest' is set
      if (associateCustomDomainRequest === undefined || associateCustomDomainRequest === null) {
        throw new Error("Missing the required parameter 'associateCustomDomainRequest' when calling associateCustomDomain");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AssociateCustomDomainResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.AssociateCustomDomain', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createAutoScalingConfiguration operation.
     * @callback module:api/DefaultApi~createAutoScalingConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAutoScalingConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Create an App Runner automatic scaling configuration resource. App Runner requires this resource when you create or update App Runner services and you require non-default auto scaling settings. You can share an auto scaling configuration across multiple services.</p> <p>Create multiple revisions of a configuration by calling this action multiple times using the same <code>AutoScalingConfigurationName</code>. The call returns incremental <code>AutoScalingConfigurationRevision</code> values. When you create a service and configure an auto scaling configuration resource, the service uses the latest active revision of the auto scaling configuration by default. You can optionally configure the service to use a specific revision.</p> <p>Configure a higher <code>MinSize</code> to increase the spread of your App Runner service over more Availability Zones in the Amazon Web Services Region. The tradeoff is a higher minimal cost.</p> <p>Configure a lower <code>MaxSize</code> to control your cost. The tradeoff is lower responsiveness during peak demand.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/CreateAutoScalingConfigurationRequest} createAutoScalingConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createAutoScalingConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAutoScalingConfigurationResponse}
     */
    createAutoScalingConfiguration(xAmzTarget, createAutoScalingConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = createAutoScalingConfigurationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling createAutoScalingConfiguration");
      }
      // verify the required parameter 'createAutoScalingConfigurationRequest' is set
      if (createAutoScalingConfigurationRequest === undefined || createAutoScalingConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'createAutoScalingConfigurationRequest' when calling createAutoScalingConfiguration");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateAutoScalingConfigurationResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.CreateAutoScalingConfiguration', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createConnection operation.
     * @callback module:api/DefaultApi~createConnectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateConnectionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Create an App Runner connection resource. App Runner requires a connection resource when you create App Runner services that access private repositories from certain third-party providers. You can share a connection across multiple services.</p> <p>A connection resource is needed to access GitHub repositories. GitHub requires a user interface approval process through the App Runner console before you can use the connection.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/CreateConnectionRequest} createConnectionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createConnectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateConnectionResponse}
     */
    createConnection(xAmzTarget, createConnectionRequest, opts, callback) {
      opts = opts || {};
      let postBody = createConnectionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling createConnection");
      }
      // verify the required parameter 'createConnectionRequest' is set
      if (createConnectionRequest === undefined || createConnectionRequest === null) {
        throw new Error("Missing the required parameter 'createConnectionRequest' when calling createConnection");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateConnectionResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.CreateConnection', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createObservabilityConfiguration operation.
     * @callback module:api/DefaultApi~createObservabilityConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateObservabilityConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Create an App Runner observability configuration resource. App Runner requires this resource when you create or update App Runner services and you want to enable non-default observability features. You can share an observability configuration across multiple services.</p> <p>Create multiple revisions of a configuration by calling this action multiple times using the same <code>ObservabilityConfigurationName</code>. The call returns incremental <code>ObservabilityConfigurationRevision</code> values. When you create a service and configure an observability configuration resource, the service uses the latest active revision of the observability configuration by default. You can optionally configure the service to use a specific revision.</p> <p>The observability configuration resource is designed to configure multiple features (currently one feature, tracing). This action takes optional parameters that describe the configuration of these features (currently one parameter, <code>TraceConfiguration</code>). If you don't specify a feature parameter, App Runner doesn't enable the feature.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/CreateObservabilityConfigurationRequest} createObservabilityConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createObservabilityConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateObservabilityConfigurationResponse}
     */
    createObservabilityConfiguration(xAmzTarget, createObservabilityConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = createObservabilityConfigurationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling createObservabilityConfiguration");
      }
      // verify the required parameter 'createObservabilityConfigurationRequest' is set
      if (createObservabilityConfigurationRequest === undefined || createObservabilityConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'createObservabilityConfigurationRequest' when calling createObservabilityConfiguration");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateObservabilityConfigurationResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.CreateObservabilityConfiguration', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createService operation.
     * @callback module:api/DefaultApi~createServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateServiceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Create an App Runner service. After the service is created, the action also automatically starts a deployment.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a href=\"https://docs.aws.amazon.com/apprunner/latest/api/API_ListOperations.html\">ListOperations</a> call to track the operation's progress.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/CreateServiceRequest} createServiceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateServiceResponse}
     */
    createService(xAmzTarget, createServiceRequest, opts, callback) {
      opts = opts || {};
      let postBody = createServiceRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling createService");
      }
      // verify the required parameter 'createServiceRequest' is set
      if (createServiceRequest === undefined || createServiceRequest === null) {
        throw new Error("Missing the required parameter 'createServiceRequest' when calling createService");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateServiceResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.CreateService', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createVpcConnector operation.
     * @callback module:api/DefaultApi~createVpcConnectorCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateVpcConnectorResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an App Runner VPC connector resource. App Runner requires this resource when you want to associate your App Runner service to a custom Amazon Virtual Private Cloud (Amazon VPC).
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/CreateVpcConnectorRequest} createVpcConnectorRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createVpcConnectorCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateVpcConnectorResponse}
     */
    createVpcConnector(xAmzTarget, createVpcConnectorRequest, opts, callback) {
      opts = opts || {};
      let postBody = createVpcConnectorRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling createVpcConnector");
      }
      // verify the required parameter 'createVpcConnectorRequest' is set
      if (createVpcConnectorRequest === undefined || createVpcConnectorRequest === null) {
        throw new Error("Missing the required parameter 'createVpcConnectorRequest' when calling createVpcConnector");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateVpcConnectorResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.CreateVpcConnector', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createVpcIngressConnection operation.
     * @callback module:api/DefaultApi~createVpcIngressConnectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateVpcIngressConnectionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an App Runner VPC Ingress Connection resource. App Runner requires this resource when you want to associate your App Runner service with an Amazon VPC endpoint.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/CreateVpcIngressConnectionRequest} createVpcIngressConnectionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createVpcIngressConnectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateVpcIngressConnectionResponse}
     */
    createVpcIngressConnection(xAmzTarget, createVpcIngressConnectionRequest, opts, callback) {
      opts = opts || {};
      let postBody = createVpcIngressConnectionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling createVpcIngressConnection");
      }
      // verify the required parameter 'createVpcIngressConnectionRequest' is set
      if (createVpcIngressConnectionRequest === undefined || createVpcIngressConnectionRequest === null) {
        throw new Error("Missing the required parameter 'createVpcIngressConnectionRequest' when calling createVpcIngressConnection");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateVpcIngressConnectionResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.CreateVpcIngressConnection', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAutoScalingConfiguration operation.
     * @callback module:api/DefaultApi~deleteAutoScalingConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteAutoScalingConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an App Runner automatic scaling configuration resource. You can delete a specific revision or the latest active revision. You can't delete a configuration that's used by one or more App Runner services.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DeleteAutoScalingConfigurationRequest} deleteAutoScalingConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteAutoScalingConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteAutoScalingConfigurationResponse}
     */
    deleteAutoScalingConfiguration(xAmzTarget, deleteAutoScalingConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteAutoScalingConfigurationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling deleteAutoScalingConfiguration");
      }
      // verify the required parameter 'deleteAutoScalingConfigurationRequest' is set
      if (deleteAutoScalingConfigurationRequest === undefined || deleteAutoScalingConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'deleteAutoScalingConfigurationRequest' when calling deleteAutoScalingConfiguration");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeleteAutoScalingConfigurationResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.DeleteAutoScalingConfiguration', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteConnection operation.
     * @callback module:api/DefaultApi~deleteConnectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteConnectionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an App Runner connection. You must first ensure that there are no running App Runner services that use this connection. If there are any, the <code>DeleteConnection</code> action fails.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DeleteConnectionRequest} deleteConnectionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteConnectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteConnectionResponse}
     */
    deleteConnection(xAmzTarget, deleteConnectionRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteConnectionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling deleteConnection");
      }
      // verify the required parameter 'deleteConnectionRequest' is set
      if (deleteConnectionRequest === undefined || deleteConnectionRequest === null) {
        throw new Error("Missing the required parameter 'deleteConnectionRequest' when calling deleteConnection");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeleteConnectionResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.DeleteConnection', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteObservabilityConfiguration operation.
     * @callback module:api/DefaultApi~deleteObservabilityConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteObservabilityConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an App Runner observability configuration resource. You can delete a specific revision or the latest active revision. You can't delete a configuration that's used by one or more App Runner services.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DeleteObservabilityConfigurationRequest} deleteObservabilityConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteObservabilityConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteObservabilityConfigurationResponse}
     */
    deleteObservabilityConfiguration(xAmzTarget, deleteObservabilityConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteObservabilityConfigurationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling deleteObservabilityConfiguration");
      }
      // verify the required parameter 'deleteObservabilityConfigurationRequest' is set
      if (deleteObservabilityConfigurationRequest === undefined || deleteObservabilityConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'deleteObservabilityConfigurationRequest' when calling deleteObservabilityConfiguration");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeleteObservabilityConfigurationResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.DeleteObservabilityConfiguration', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteService operation.
     * @callback module:api/DefaultApi~deleteServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteServiceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Delete an App Runner service.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p> <note> <p>Make sure that you don't have any active VPCIngressConnections associated with the service you want to delete. </p> </note>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DeleteServiceRequest} deleteServiceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteServiceResponse}
     */
    deleteService(xAmzTarget, deleteServiceRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteServiceRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling deleteService");
      }
      // verify the required parameter 'deleteServiceRequest' is set
      if (deleteServiceRequest === undefined || deleteServiceRequest === null) {
        throw new Error("Missing the required parameter 'deleteServiceRequest' when calling deleteService");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeleteServiceResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.DeleteService', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteVpcConnector operation.
     * @callback module:api/DefaultApi~deleteVpcConnectorCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteVpcConnectorResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an App Runner VPC connector resource. You can't delete a connector that's used by one or more App Runner services.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DeleteVpcConnectorRequest} deleteVpcConnectorRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteVpcConnectorCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteVpcConnectorResponse}
     */
    deleteVpcConnector(xAmzTarget, deleteVpcConnectorRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteVpcConnectorRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling deleteVpcConnector");
      }
      // verify the required parameter 'deleteVpcConnectorRequest' is set
      if (deleteVpcConnectorRequest === undefined || deleteVpcConnectorRequest === null) {
        throw new Error("Missing the required parameter 'deleteVpcConnectorRequest' when calling deleteVpcConnector");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeleteVpcConnectorResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.DeleteVpcConnector', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteVpcIngressConnection operation.
     * @callback module:api/DefaultApi~deleteVpcIngressConnectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteVpcIngressConnectionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Delete an App Runner VPC Ingress Connection resource that's associated with an App Runner service. The VPC Ingress Connection must be in one of the following states to be deleted: </p> <ul> <li> <p> <code>AVAILABLE</code> </p> </li> <li> <p> <code>FAILED_CREATION</code> </p> </li> <li> <p> <code>FAILED_UPDATE</code> </p> </li> <li> <p> <code>FAILED_DELETION</code> </p> </li> </ul>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DeleteVpcIngressConnectionRequest} deleteVpcIngressConnectionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteVpcIngressConnectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteVpcIngressConnectionResponse}
     */
    deleteVpcIngressConnection(xAmzTarget, deleteVpcIngressConnectionRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteVpcIngressConnectionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling deleteVpcIngressConnection");
      }
      // verify the required parameter 'deleteVpcIngressConnectionRequest' is set
      if (deleteVpcIngressConnectionRequest === undefined || deleteVpcIngressConnectionRequest === null) {
        throw new Error("Missing the required parameter 'deleteVpcIngressConnectionRequest' when calling deleteVpcIngressConnection");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeleteVpcIngressConnectionResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.DeleteVpcIngressConnection', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeAutoScalingConfiguration operation.
     * @callback module:api/DefaultApi~describeAutoScalingConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeAutoScalingConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a full description of an App Runner automatic scaling configuration resource.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeAutoScalingConfigurationRequest} describeAutoScalingConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeAutoScalingConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeAutoScalingConfigurationResponse}
     */
    describeAutoScalingConfiguration(xAmzTarget, describeAutoScalingConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeAutoScalingConfigurationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeAutoScalingConfiguration");
      }
      // verify the required parameter 'describeAutoScalingConfigurationRequest' is set
      if (describeAutoScalingConfigurationRequest === undefined || describeAutoScalingConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'describeAutoScalingConfigurationRequest' when calling describeAutoScalingConfiguration");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeAutoScalingConfigurationResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.DescribeAutoScalingConfiguration', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeCustomDomains operation.
     * @callback module:api/DefaultApi~describeCustomDomainsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeCustomDomainsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a description of custom domain names that are associated with an App Runner service.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeCustomDomainsRequest} describeCustomDomainsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~describeCustomDomainsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeCustomDomainsResponse}
     */
    describeCustomDomains(xAmzTarget, describeCustomDomainsRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeCustomDomainsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeCustomDomains");
      }
      // verify the required parameter 'describeCustomDomainsRequest' is set
      if (describeCustomDomainsRequest === undefined || describeCustomDomainsRequest === null) {
        throw new Error("Missing the required parameter 'describeCustomDomainsRequest' when calling describeCustomDomains");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeCustomDomainsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.DescribeCustomDomains', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeObservabilityConfiguration operation.
     * @callback module:api/DefaultApi~describeObservabilityConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeObservabilityConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a full description of an App Runner observability configuration resource.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeObservabilityConfigurationRequest} describeObservabilityConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeObservabilityConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeObservabilityConfigurationResponse}
     */
    describeObservabilityConfiguration(xAmzTarget, describeObservabilityConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeObservabilityConfigurationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeObservabilityConfiguration");
      }
      // verify the required parameter 'describeObservabilityConfigurationRequest' is set
      if (describeObservabilityConfigurationRequest === undefined || describeObservabilityConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'describeObservabilityConfigurationRequest' when calling describeObservabilityConfiguration");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeObservabilityConfigurationResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.DescribeObservabilityConfiguration', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeService operation.
     * @callback module:api/DefaultApi~describeServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeServiceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a full description of an App Runner service.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeServiceRequest} describeServiceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeServiceResponse}
     */
    describeService(xAmzTarget, describeServiceRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeServiceRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeService");
      }
      // verify the required parameter 'describeServiceRequest' is set
      if (describeServiceRequest === undefined || describeServiceRequest === null) {
        throw new Error("Missing the required parameter 'describeServiceRequest' when calling describeService");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeServiceResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.DescribeService', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeVpcConnector operation.
     * @callback module:api/DefaultApi~describeVpcConnectorCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeVpcConnectorResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a description of an App Runner VPC connector resource.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeVpcConnectorRequest} describeVpcConnectorRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeVpcConnectorCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeVpcConnectorResponse}
     */
    describeVpcConnector(xAmzTarget, describeVpcConnectorRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeVpcConnectorRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeVpcConnector");
      }
      // verify the required parameter 'describeVpcConnectorRequest' is set
      if (describeVpcConnectorRequest === undefined || describeVpcConnectorRequest === null) {
        throw new Error("Missing the required parameter 'describeVpcConnectorRequest' when calling describeVpcConnector");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeVpcConnectorResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.DescribeVpcConnector', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeVpcIngressConnection operation.
     * @callback module:api/DefaultApi~describeVpcIngressConnectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeVpcIngressConnectionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a full description of an App Runner VPC Ingress Connection resource.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeVpcIngressConnectionRequest} describeVpcIngressConnectionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeVpcIngressConnectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeVpcIngressConnectionResponse}
     */
    describeVpcIngressConnection(xAmzTarget, describeVpcIngressConnectionRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeVpcIngressConnectionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeVpcIngressConnection");
      }
      // verify the required parameter 'describeVpcIngressConnectionRequest' is set
      if (describeVpcIngressConnectionRequest === undefined || describeVpcIngressConnectionRequest === null) {
        throw new Error("Missing the required parameter 'describeVpcIngressConnectionRequest' when calling describeVpcIngressConnection");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeVpcIngressConnectionResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.DescribeVpcIngressConnection', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disassociateCustomDomain operation.
     * @callback module:api/DefaultApi~disassociateCustomDomainCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DisassociateCustomDomainResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Disassociate a custom domain name from an App Runner service.</p> <p>Certificates tracking domain validity are associated with a custom domain and are stored in <a href=\"https://docs.aws.amazon.com/acm/latest/userguide\">AWS Certificate Manager (ACM)</a>. These certificates aren't deleted as part of this action. App Runner delays certificate deletion for 30 days after a domain is disassociated from your service.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DisassociateCustomDomainRequest} disassociateCustomDomainRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~disassociateCustomDomainCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DisassociateCustomDomainResponse}
     */
    disassociateCustomDomain(xAmzTarget, disassociateCustomDomainRequest, opts, callback) {
      opts = opts || {};
      let postBody = disassociateCustomDomainRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling disassociateCustomDomain");
      }
      // verify the required parameter 'disassociateCustomDomainRequest' is set
      if (disassociateCustomDomainRequest === undefined || disassociateCustomDomainRequest === null) {
        throw new Error("Missing the required parameter 'disassociateCustomDomainRequest' when calling disassociateCustomDomain");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DisassociateCustomDomainResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.DisassociateCustomDomain', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAutoScalingConfigurations operation.
     * @callback module:api/DefaultApi~listAutoScalingConfigurationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAutoScalingConfigurationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns a list of active App Runner automatic scaling configurations in your Amazon Web Services account. You can query the revisions for a specific configuration name or the revisions for all active configurations in your account. You can optionally query only the latest revision of each requested name.</p> <p>To retrieve a full description of a particular configuration revision, call and provide one of the ARNs returned by <code>ListAutoScalingConfigurations</code>.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListAutoScalingConfigurationsRequest} listAutoScalingConfigurationsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listAutoScalingConfigurationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAutoScalingConfigurationsResponse}
     */
    listAutoScalingConfigurations(xAmzTarget, listAutoScalingConfigurationsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listAutoScalingConfigurationsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listAutoScalingConfigurations");
      }
      // verify the required parameter 'listAutoScalingConfigurationsRequest' is set
      if (listAutoScalingConfigurationsRequest === undefined || listAutoScalingConfigurationsRequest === null) {
        throw new Error("Missing the required parameter 'listAutoScalingConfigurationsRequest' when calling listAutoScalingConfigurations");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListAutoScalingConfigurationsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.ListAutoScalingConfigurations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listConnections operation.
     * @callback module:api/DefaultApi~listConnectionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListConnectionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of App Runner connections that are associated with your Amazon Web Services account.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListConnectionsRequest} listConnectionsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listConnectionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListConnectionsResponse}
     */
    listConnections(xAmzTarget, listConnectionsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listConnectionsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listConnections");
      }
      // verify the required parameter 'listConnectionsRequest' is set
      if (listConnectionsRequest === undefined || listConnectionsRequest === null) {
        throw new Error("Missing the required parameter 'listConnectionsRequest' when calling listConnections");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListConnectionsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.ListConnections', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listObservabilityConfigurations operation.
     * @callback module:api/DefaultApi~listObservabilityConfigurationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListObservabilityConfigurationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns a list of active App Runner observability configurations in your Amazon Web Services account. You can query the revisions for a specific configuration name or the revisions for all active configurations in your account. You can optionally query only the latest revision of each requested name.</p> <p>To retrieve a full description of a particular configuration revision, call and provide one of the ARNs returned by <code>ListObservabilityConfigurations</code>.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListObservabilityConfigurationsRequest} listObservabilityConfigurationsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listObservabilityConfigurationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListObservabilityConfigurationsResponse}
     */
    listObservabilityConfigurations(xAmzTarget, listObservabilityConfigurationsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listObservabilityConfigurationsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listObservabilityConfigurations");
      }
      // verify the required parameter 'listObservabilityConfigurationsRequest' is set
      if (listObservabilityConfigurationsRequest === undefined || listObservabilityConfigurationsRequest === null) {
        throw new Error("Missing the required parameter 'listObservabilityConfigurationsRequest' when calling listObservabilityConfigurations");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListObservabilityConfigurationsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.ListObservabilityConfigurations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listOperations operation.
     * @callback module:api/DefaultApi~listOperationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListOperationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Return a list of operations that occurred on an App Runner service.</p> <p>The resulting list of <a>OperationSummary</a> objects is sorted in reverse chronological order. The first object on the list represents the last started operation.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListOperationsRequest} listOperationsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listOperationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListOperationsResponse}
     */
    listOperations(xAmzTarget, listOperationsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listOperationsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listOperations");
      }
      // verify the required parameter 'listOperationsRequest' is set
      if (listOperationsRequest === undefined || listOperationsRequest === null) {
        throw new Error("Missing the required parameter 'listOperationsRequest' when calling listOperations");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListOperationsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.ListOperations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listServices operation.
     * @callback module:api/DefaultApi~listServicesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListServicesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of running App Runner services in your Amazon Web Services account.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListServicesRequest} listServicesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listServicesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListServicesResponse}
     */
    listServices(xAmzTarget, listServicesRequest, opts, callback) {
      opts = opts || {};
      let postBody = listServicesRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listServices");
      }
      // verify the required parameter 'listServicesRequest' is set
      if (listServicesRequest === undefined || listServicesRequest === null) {
        throw new Error("Missing the required parameter 'listServicesRequest' when calling listServices");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListServicesResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.ListServices', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listTagsForResource operation.
     * @callback module:api/DefaultApi~listTagsForResourceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTagsForResourceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List tags that are associated with for an App Runner resource. The response contains a list of tag key-value pairs.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListTagsForResourceRequest} listTagsForResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~listTagsForResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTagsForResourceResponse}
     */
    listTagsForResource(xAmzTarget, listTagsForResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = listTagsForResourceRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listTagsForResource");
      }
      // verify the required parameter 'listTagsForResourceRequest' is set
      if (listTagsForResourceRequest === undefined || listTagsForResourceRequest === null) {
        throw new Error("Missing the required parameter 'listTagsForResourceRequest' when calling listTagsForResource");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListTagsForResourceResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.ListTagsForResource', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listVpcConnectors operation.
     * @callback module:api/DefaultApi~listVpcConnectorsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListVpcConnectorsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of App Runner VPC connectors in your Amazon Web Services account.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListVpcConnectorsRequest} listVpcConnectorsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listVpcConnectorsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListVpcConnectorsResponse}
     */
    listVpcConnectors(xAmzTarget, listVpcConnectorsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listVpcConnectorsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listVpcConnectors");
      }
      // verify the required parameter 'listVpcConnectorsRequest' is set
      if (listVpcConnectorsRequest === undefined || listVpcConnectorsRequest === null) {
        throw new Error("Missing the required parameter 'listVpcConnectorsRequest' when calling listVpcConnectors");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListVpcConnectorsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.ListVpcConnectors', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listVpcIngressConnections operation.
     * @callback module:api/DefaultApi~listVpcIngressConnectionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListVpcIngressConnectionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a list of App Runner VPC Ingress Connections in your Amazon Web Services account.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListVpcIngressConnectionsRequest} listVpcIngressConnectionsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listVpcIngressConnectionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListVpcIngressConnectionsResponse}
     */
    listVpcIngressConnections(xAmzTarget, listVpcIngressConnectionsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listVpcIngressConnectionsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listVpcIngressConnections");
      }
      // verify the required parameter 'listVpcIngressConnectionsRequest' is set
      if (listVpcIngressConnectionsRequest === undefined || listVpcIngressConnectionsRequest === null) {
        throw new Error("Missing the required parameter 'listVpcIngressConnectionsRequest' when calling listVpcIngressConnections");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListVpcIngressConnectionsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.ListVpcIngressConnections', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the pauseService operation.
     * @callback module:api/DefaultApi~pauseServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PauseServiceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Pause an active App Runner service. App Runner reduces compute capacity for the service to zero and loses state (for example, ephemeral storage is removed).</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/PauseServiceRequest} pauseServiceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~pauseServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PauseServiceResponse}
     */
    pauseService(xAmzTarget, pauseServiceRequest, opts, callback) {
      opts = opts || {};
      let postBody = pauseServiceRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling pauseService");
      }
      // verify the required parameter 'pauseServiceRequest' is set
      if (pauseServiceRequest === undefined || pauseServiceRequest === null) {
        throw new Error("Missing the required parameter 'pauseServiceRequest' when calling pauseService");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PauseServiceResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.PauseService', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resumeService operation.
     * @callback module:api/DefaultApi~resumeServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResumeServiceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Resume an active App Runner service. App Runner provisions compute capacity for the service.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ResumeServiceRequest} resumeServiceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~resumeServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResumeServiceResponse}
     */
    resumeService(xAmzTarget, resumeServiceRequest, opts, callback) {
      opts = opts || {};
      let postBody = resumeServiceRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling resumeService");
      }
      // verify the required parameter 'resumeServiceRequest' is set
      if (resumeServiceRequest === undefined || resumeServiceRequest === null) {
        throw new Error("Missing the required parameter 'resumeServiceRequest' when calling resumeService");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ResumeServiceResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.ResumeService', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the startDeployment operation.
     * @callback module:api/DefaultApi~startDeploymentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StartDeploymentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Initiate a manual deployment of the latest commit in a source code repository or the latest image in a source image repository to an App Runner service.</p> <p>For a source code repository, App Runner retrieves the commit and builds a Docker image. For a source image repository, App Runner retrieves the latest Docker image. In both cases, App Runner then deploys the new image to your service and starts a new container instance.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/StartDeploymentRequest} startDeploymentRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~startDeploymentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StartDeploymentResponse}
     */
    startDeployment(xAmzTarget, startDeploymentRequest, opts, callback) {
      opts = opts || {};
      let postBody = startDeploymentRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling startDeployment");
      }
      // verify the required parameter 'startDeploymentRequest' is set
      if (startDeploymentRequest === undefined || startDeploymentRequest === null) {
        throw new Error("Missing the required parameter 'startDeploymentRequest' when calling startDeployment");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = StartDeploymentResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.StartDeployment', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tagResource operation.
     * @callback module:api/DefaultApi~tagResourceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add tags to, or update the tag values of, an App Runner resource. A tag is a key-value pair.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/TagResourceRequest} tagResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~tagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    tagResource(xAmzTarget, tagResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = tagResourceRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling tagResource");
      }
      // verify the required parameter 'tagResourceRequest' is set
      if (tagResourceRequest === undefined || tagResourceRequest === null) {
        throw new Error("Missing the required parameter 'tagResourceRequest' when calling tagResource");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.TagResource', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the untagResource operation.
     * @callback module:api/DefaultApi~untagResourceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove tags from an App Runner resource.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/UntagResourceRequest} untagResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~untagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    untagResource(xAmzTarget, untagResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = untagResourceRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling untagResource");
      }
      // verify the required parameter 'untagResourceRequest' is set
      if (untagResourceRequest === undefined || untagResourceRequest === null) {
        throw new Error("Missing the required parameter 'untagResourceRequest' when calling untagResource");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.UntagResource', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateService operation.
     * @callback module:api/DefaultApi~updateServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateServiceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Update an App Runner service. You can update the source configuration and instance configuration of the service. You can also update the ARN of the auto scaling configuration resource that's associated with the service. However, you can't change the name or the encryption configuration of the service. These can be set only when you create the service.</p> <p>To update the tags applied to your service, use the separate actions <a>TagResource</a> and <a>UntagResource</a>.</p> <p>This is an asynchronous operation. On a successful call, you can use the returned <code>OperationId</code> and the <a>ListOperations</a> call to track the operation's progress.</p>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/UpdateServiceRequest} updateServiceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateServiceResponse}
     */
    updateService(xAmzTarget, updateServiceRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateServiceRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling updateService");
      }
      // verify the required parameter 'updateServiceRequest' is set
      if (updateServiceRequest === undefined || updateServiceRequest === null) {
        throw new Error("Missing the required parameter 'updateServiceRequest' when calling updateService");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateServiceResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.UpdateService', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateVpcIngressConnection operation.
     * @callback module:api/DefaultApi~updateVpcIngressConnectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateVpcIngressConnectionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Update an existing App Runner VPC Ingress Connection resource. The VPC Ingress Connection must be in one of the following states to be updated:</p> <ul> <li> <p> AVAILABLE </p> </li> <li> <p> FAILED_CREATION </p> </li> <li> <p> FAILED_UPDATE </p> </li> </ul>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/UpdateVpcIngressConnectionRequest} updateVpcIngressConnectionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateVpcIngressConnectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateVpcIngressConnectionResponse}
     */
    updateVpcIngressConnection(xAmzTarget, updateVpcIngressConnectionRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateVpcIngressConnectionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling updateVpcIngressConnection");
      }
      // verify the required parameter 'updateVpcIngressConnectionRequest' is set
      if (updateVpcIngressConnectionRequest === undefined || updateVpcIngressConnectionRequest === null) {
        throw new Error("Missing the required parameter 'updateVpcIngressConnectionRequest' when calling updateVpcIngressConnection");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateVpcIngressConnectionResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AppRunner.UpdateVpcIngressConnection', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
