/**
 * AWS App Runner
 * <fullname>App Runner</fullname> <p>App Runner is an application service that provides a fast, simple, and cost-effective way to go directly from an existing container image or source code to a running service in the Amazon Web Services Cloud in seconds. You don't need to learn new technologies, decide which compute service to use, or understand how to provision and configure Amazon Web Services resources.</p> <p>App Runner connects directly to your container registry or source code repository. It provides an automatic delivery pipeline with fully managed operations, high performance, scalability, and security.</p> <p>For more information about App Runner, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/dg/\">App Runner Developer Guide</a>. For release information, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/relnotes/\">App Runner Release Notes</a>.</p> <p> To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that you can use to access the API, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of Region-specific endpoints that App Runner supports, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/apprunner.html\">App Runner endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsAppRunner);
  }
}(this, function(expect, AwsAppRunner) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsAppRunner.CreateVpcIngressConnectionRequestIngressVpcConfiguration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateVpcIngressConnectionRequestIngressVpcConfiguration', function() {
    it('should create an instance of CreateVpcIngressConnectionRequestIngressVpcConfiguration', function() {
      // uncomment below and update the code to test CreateVpcIngressConnectionRequestIngressVpcConfiguration
      //var instance = new AwsAppRunner.CreateVpcIngressConnectionRequestIngressVpcConfiguration();
      //expect(instance).to.be.a(AwsAppRunner.CreateVpcIngressConnectionRequestIngressVpcConfiguration);
    });

    it('should have the property vpcId (base name: "VpcId")', function() {
      // uncomment below and update the code to test the property vpcId
      //var instance = new AwsAppRunner.CreateVpcIngressConnectionRequestIngressVpcConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property vpcEndpointId (base name: "VpcEndpointId")', function() {
      // uncomment below and update the code to test the property vpcEndpointId
      //var instance = new AwsAppRunner.CreateVpcIngressConnectionRequestIngressVpcConfiguration();
      //expect(instance).to.be();
    });

  });

}));
