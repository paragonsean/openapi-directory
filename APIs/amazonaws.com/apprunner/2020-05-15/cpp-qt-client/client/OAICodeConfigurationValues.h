/**
 * AWS App Runner
 * <fullname>App Runner</fullname> <p>App Runner is an application service that provides a fast, simple, and cost-effective way to go directly from an existing container image or source code to a running service in the Amazon Web Services Cloud in seconds. You don't need to learn new technologies, decide which compute service to use, or understand how to provision and configure Amazon Web Services resources.</p> <p>App Runner connects directly to your container registry or source code repository. It provides an automatic delivery pipeline with fully managed operations, high performance, scalability, and security.</p> <p>For more information about App Runner, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/dg/\">App Runner Developer Guide</a>. For release information, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/relnotes/\">App Runner Release Notes</a>.</p> <p> To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that you can use to access the API, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of Region-specific endpoints that App Runner supports, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/apprunner.html\">App Runner endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICodeConfigurationValues.h
 *
 * Describes the basic configuration needed for building and running an App Runner service. This type doesn&#39;t support the full set of possible configuration options. Fur full configuration capabilities, use a &lt;code&gt;apprunner.yaml&lt;/code&gt; file in the source code repository.
 */

#ifndef OAICodeConfigurationValues_H
#define OAICodeConfigurationValues_H

#include <QJsonObject>

#include "OAIRuntime.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICodeConfigurationValues : public OAIObject {
public:
    OAICodeConfigurationValues();
    OAICodeConfigurationValues(QString json);
    ~OAICodeConfigurationValues() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRuntime getRuntime() const;
    void setRuntime(const OAIRuntime &runtime);
    bool is_runtime_Set() const;
    bool is_runtime_Valid() const;

    QString getBuildCommand() const;
    void setBuildCommand(const QString &build_command);
    bool is_build_command_Set() const;
    bool is_build_command_Valid() const;

    QString getStartCommand() const;
    void setStartCommand(const QString &start_command);
    bool is_start_command_Set() const;
    bool is_start_command_Valid() const;

    QString getPort() const;
    void setPort(const QString &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    QMap getRuntimeEnvironmentVariables() const;
    void setRuntimeEnvironmentVariables(const QMap &runtime_environment_variables);
    bool is_runtime_environment_variables_Set() const;
    bool is_runtime_environment_variables_Valid() const;

    QMap getRuntimeEnvironmentSecrets() const;
    void setRuntimeEnvironmentSecrets(const QMap &runtime_environment_secrets);
    bool is_runtime_environment_secrets_Set() const;
    bool is_runtime_environment_secrets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRuntime m_runtime;
    bool m_runtime_isSet;
    bool m_runtime_isValid;

    QString m_build_command;
    bool m_build_command_isSet;
    bool m_build_command_isValid;

    QString m_start_command;
    bool m_start_command_isSet;
    bool m_start_command_isValid;

    QString m_port;
    bool m_port_isSet;
    bool m_port_isValid;

    QMap m_runtime_environment_variables;
    bool m_runtime_environment_variables_isSet;
    bool m_runtime_environment_variables_isValid;

    QMap m_runtime_environment_secrets;
    bool m_runtime_environment_secrets_isSet;
    bool m_runtime_environment_secrets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICodeConfigurationValues)

#endif // OAICodeConfigurationValues_H
