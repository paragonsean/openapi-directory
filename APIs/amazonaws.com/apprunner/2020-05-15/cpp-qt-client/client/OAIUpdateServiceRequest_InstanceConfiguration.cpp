/**
 * AWS App Runner
 * <fullname>App Runner</fullname> <p>App Runner is an application service that provides a fast, simple, and cost-effective way to go directly from an existing container image or source code to a running service in the Amazon Web Services Cloud in seconds. You don't need to learn new technologies, decide which compute service to use, or understand how to provision and configure Amazon Web Services resources.</p> <p>App Runner connects directly to your container registry or source code repository. It provides an automatic delivery pipeline with fully managed operations, high performance, scalability, and security.</p> <p>For more information about App Runner, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/dg/\">App Runner Developer Guide</a>. For release information, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/relnotes/\">App Runner Release Notes</a>.</p> <p> To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that you can use to access the API, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of Region-specific endpoints that App Runner supports, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/apprunner.html\">App Runner endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateServiceRequest_InstanceConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateServiceRequest_InstanceConfiguration::OAIUpdateServiceRequest_InstanceConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateServiceRequest_InstanceConfiguration::OAIUpdateServiceRequest_InstanceConfiguration() {
    this->initializeModel();
}

OAIUpdateServiceRequest_InstanceConfiguration::~OAIUpdateServiceRequest_InstanceConfiguration() {}

void OAIUpdateServiceRequest_InstanceConfiguration::initializeModel() {

    m_cpu_isSet = false;
    m_cpu_isValid = false;

    m_memory_isSet = false;
    m_memory_isValid = false;

    m_instance_role_arn_isSet = false;
    m_instance_role_arn_isValid = false;
}

void OAIUpdateServiceRequest_InstanceConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateServiceRequest_InstanceConfiguration::fromJsonObject(QJsonObject json) {

    m_cpu_isValid = ::OpenAPI::fromJsonValue(m_cpu, json[QString("Cpu")]);
    m_cpu_isSet = !json[QString("Cpu")].isNull() && m_cpu_isValid;

    m_memory_isValid = ::OpenAPI::fromJsonValue(m_memory, json[QString("Memory")]);
    m_memory_isSet = !json[QString("Memory")].isNull() && m_memory_isValid;

    m_instance_role_arn_isValid = ::OpenAPI::fromJsonValue(m_instance_role_arn, json[QString("InstanceRoleArn")]);
    m_instance_role_arn_isSet = !json[QString("InstanceRoleArn")].isNull() && m_instance_role_arn_isValid;
}

QString OAIUpdateServiceRequest_InstanceConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateServiceRequest_InstanceConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_cpu_isSet) {
        obj.insert(QString("Cpu"), ::OpenAPI::toJsonValue(m_cpu));
    }
    if (m_memory_isSet) {
        obj.insert(QString("Memory"), ::OpenAPI::toJsonValue(m_memory));
    }
    if (m_instance_role_arn_isSet) {
        obj.insert(QString("InstanceRoleArn"), ::OpenAPI::toJsonValue(m_instance_role_arn));
    }
    return obj;
}

QString OAIUpdateServiceRequest_InstanceConfiguration::getCpu() const {
    return m_cpu;
}
void OAIUpdateServiceRequest_InstanceConfiguration::setCpu(const QString &cpu) {
    m_cpu = cpu;
    m_cpu_isSet = true;
}

bool OAIUpdateServiceRequest_InstanceConfiguration::is_cpu_Set() const{
    return m_cpu_isSet;
}

bool OAIUpdateServiceRequest_InstanceConfiguration::is_cpu_Valid() const{
    return m_cpu_isValid;
}

QString OAIUpdateServiceRequest_InstanceConfiguration::getMemory() const {
    return m_memory;
}
void OAIUpdateServiceRequest_InstanceConfiguration::setMemory(const QString &memory) {
    m_memory = memory;
    m_memory_isSet = true;
}

bool OAIUpdateServiceRequest_InstanceConfiguration::is_memory_Set() const{
    return m_memory_isSet;
}

bool OAIUpdateServiceRequest_InstanceConfiguration::is_memory_Valid() const{
    return m_memory_isValid;
}

QString OAIUpdateServiceRequest_InstanceConfiguration::getInstanceRoleArn() const {
    return m_instance_role_arn;
}
void OAIUpdateServiceRequest_InstanceConfiguration::setInstanceRoleArn(const QString &instance_role_arn) {
    m_instance_role_arn = instance_role_arn;
    m_instance_role_arn_isSet = true;
}

bool OAIUpdateServiceRequest_InstanceConfiguration::is_instance_role_arn_Set() const{
    return m_instance_role_arn_isSet;
}

bool OAIUpdateServiceRequest_InstanceConfiguration::is_instance_role_arn_Valid() const{
    return m_instance_role_arn_isValid;
}

bool OAIUpdateServiceRequest_InstanceConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cpu_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_memory_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateServiceRequest_InstanceConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
