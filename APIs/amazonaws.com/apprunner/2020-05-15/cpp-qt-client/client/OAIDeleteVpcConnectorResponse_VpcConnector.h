/**
 * AWS App Runner
 * <fullname>App Runner</fullname> <p>App Runner is an application service that provides a fast, simple, and cost-effective way to go directly from an existing container image or source code to a running service in the Amazon Web Services Cloud in seconds. You don't need to learn new technologies, decide which compute service to use, or understand how to provision and configure Amazon Web Services resources.</p> <p>App Runner connects directly to your container registry or source code repository. It provides an automatic delivery pipeline with fully managed operations, high performance, scalability, and security.</p> <p>For more information about App Runner, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/dg/\">App Runner Developer Guide</a>. For release information, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/relnotes/\">App Runner Release Notes</a>.</p> <p> To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that you can use to access the API, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of Region-specific endpoints that App Runner supports, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/apprunner.html\">App Runner endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteVpcConnectorResponse_VpcConnector.h
 *
 * 
 */

#ifndef OAIDeleteVpcConnectorResponse_VpcConnector_H
#define OAIDeleteVpcConnectorResponse_VpcConnector_H

#include <QJsonObject>

#include "OAIVpcConnectorStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeleteVpcConnectorResponse_VpcConnector : public OAIObject {
public:
    OAIDeleteVpcConnectorResponse_VpcConnector();
    OAIDeleteVpcConnectorResponse_VpcConnector(QString json);
    ~OAIDeleteVpcConnectorResponse_VpcConnector() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getVpcConnectorName() const;
    void setVpcConnectorName(const QString &vpc_connector_name);
    bool is_vpc_connector_name_Set() const;
    bool is_vpc_connector_name_Valid() const;

    QString getVpcConnectorArn() const;
    void setVpcConnectorArn(const QString &vpc_connector_arn);
    bool is_vpc_connector_arn_Set() const;
    bool is_vpc_connector_arn_Valid() const;

    qint32 getVpcConnectorRevision() const;
    void setVpcConnectorRevision(const qint32 &vpc_connector_revision);
    bool is_vpc_connector_revision_Set() const;
    bool is_vpc_connector_revision_Valid() const;

    QList getSubnets() const;
    void setSubnets(const QList &subnets);
    bool is_subnets_Set() const;
    bool is_subnets_Valid() const;

    QList getSecurityGroups() const;
    void setSecurityGroups(const QList &security_groups);
    bool is_security_groups_Set() const;
    bool is_security_groups_Valid() const;

    OAIVpcConnectorStatus getStatus() const;
    void setStatus(const OAIVpcConnectorStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getDeletedAt() const;
    void setDeletedAt(const QDateTime &deleted_at);
    bool is_deleted_at_Set() const;
    bool is_deleted_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_vpc_connector_name;
    bool m_vpc_connector_name_isSet;
    bool m_vpc_connector_name_isValid;

    QString m_vpc_connector_arn;
    bool m_vpc_connector_arn_isSet;
    bool m_vpc_connector_arn_isValid;

    qint32 m_vpc_connector_revision;
    bool m_vpc_connector_revision_isSet;
    bool m_vpc_connector_revision_isValid;

    QList m_subnets;
    bool m_subnets_isSet;
    bool m_subnets_isValid;

    QList m_security_groups;
    bool m_security_groups_isSet;
    bool m_security_groups_isValid;

    OAIVpcConnectorStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_deleted_at;
    bool m_deleted_at_isSet;
    bool m_deleted_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteVpcConnectorResponse_VpcConnector)

#endif // OAIDeleteVpcConnectorResponse_VpcConnector_H
