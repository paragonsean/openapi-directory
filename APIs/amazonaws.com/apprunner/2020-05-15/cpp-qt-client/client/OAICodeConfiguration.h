/**
 * AWS App Runner
 * <fullname>App Runner</fullname> <p>App Runner is an application service that provides a fast, simple, and cost-effective way to go directly from an existing container image or source code to a running service in the Amazon Web Services Cloud in seconds. You don't need to learn new technologies, decide which compute service to use, or understand how to provision and configure Amazon Web Services resources.</p> <p>App Runner connects directly to your container registry or source code repository. It provides an automatic delivery pipeline with fully managed operations, high performance, scalability, and security.</p> <p>For more information about App Runner, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/dg/\">App Runner Developer Guide</a>. For release information, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/relnotes/\">App Runner Release Notes</a>.</p> <p> To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that you can use to access the API, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of Region-specific endpoints that App Runner supports, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/apprunner.html\">App Runner endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICodeConfiguration.h
 *
 * Describes the configuration that App Runner uses to build and run an App Runner service from a source code repository.
 */

#ifndef OAICodeConfiguration_H
#define OAICodeConfiguration_H

#include <QJsonObject>

#include "OAICodeConfiguration_CodeConfigurationValues.h"
#include "OAIConfigurationSource.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICodeConfiguration_CodeConfigurationValues;

class OAICodeConfiguration : public OAIObject {
public:
    OAICodeConfiguration();
    OAICodeConfiguration(QString json);
    ~OAICodeConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigurationSource getConfigurationSource() const;
    void setConfigurationSource(const OAIConfigurationSource &configuration_source);
    bool is_configuration_source_Set() const;
    bool is_configuration_source_Valid() const;

    OAICodeConfiguration_CodeConfigurationValues getCodeConfigurationValues() const;
    void setCodeConfigurationValues(const OAICodeConfiguration_CodeConfigurationValues &code_configuration_values);
    bool is_code_configuration_values_Set() const;
    bool is_code_configuration_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConfigurationSource m_configuration_source;
    bool m_configuration_source_isSet;
    bool m_configuration_source_isValid;

    OAICodeConfiguration_CodeConfigurationValues m_code_configuration_values;
    bool m_code_configuration_values_isSet;
    bool m_code_configuration_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICodeConfiguration)

#endif // OAICodeConfiguration_H
