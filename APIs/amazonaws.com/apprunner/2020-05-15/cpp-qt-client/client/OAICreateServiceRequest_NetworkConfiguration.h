/**
 * AWS App Runner
 * <fullname>App Runner</fullname> <p>App Runner is an application service that provides a fast, simple, and cost-effective way to go directly from an existing container image or source code to a running service in the Amazon Web Services Cloud in seconds. You don't need to learn new technologies, decide which compute service to use, or understand how to provision and configure Amazon Web Services resources.</p> <p>App Runner connects directly to your container registry or source code repository. It provides an automatic delivery pipeline with fully managed operations, high performance, scalability, and security.</p> <p>For more information about App Runner, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/dg/\">App Runner Developer Guide</a>. For release information, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/relnotes/\">App Runner Release Notes</a>.</p> <p> To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that you can use to access the API, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of Region-specific endpoints that App Runner supports, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/apprunner.html\">App Runner endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateServiceRequest_NetworkConfiguration.h
 *
 * 
 */

#ifndef OAICreateServiceRequest_NetworkConfiguration_H
#define OAICreateServiceRequest_NetworkConfiguration_H

#include <QJsonObject>

#include "OAINetworkConfiguration_EgressConfiguration.h"
#include "OAINetworkConfiguration_IngressConfiguration.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINetworkConfiguration_EgressConfiguration;
class OAINetworkConfiguration_IngressConfiguration;

class OAICreateServiceRequest_NetworkConfiguration : public OAIObject {
public:
    OAICreateServiceRequest_NetworkConfiguration();
    OAICreateServiceRequest_NetworkConfiguration(QString json);
    ~OAICreateServiceRequest_NetworkConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAINetworkConfiguration_EgressConfiguration getEgressConfiguration() const;
    void setEgressConfiguration(const OAINetworkConfiguration_EgressConfiguration &egress_configuration);
    bool is_egress_configuration_Set() const;
    bool is_egress_configuration_Valid() const;

    OAINetworkConfiguration_IngressConfiguration getIngressConfiguration() const;
    void setIngressConfiguration(const OAINetworkConfiguration_IngressConfiguration &ingress_configuration);
    bool is_ingress_configuration_Set() const;
    bool is_ingress_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAINetworkConfiguration_EgressConfiguration m_egress_configuration;
    bool m_egress_configuration_isSet;
    bool m_egress_configuration_isValid;

    OAINetworkConfiguration_IngressConfiguration m_ingress_configuration;
    bool m_ingress_configuration_isSet;
    bool m_ingress_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateServiceRequest_NetworkConfiguration)

#endif // OAICreateServiceRequest_NetworkConfiguration_H
