/**
 * AWS App Runner
 * <fullname>App Runner</fullname> <p>App Runner is an application service that provides a fast, simple, and cost-effective way to go directly from an existing container image or source code to a running service in the Amazon Web Services Cloud in seconds. You don't need to learn new technologies, decide which compute service to use, or understand how to provision and configure Amazon Web Services resources.</p> <p>App Runner connects directly to your container registry or source code repository. It provides an automatic delivery pipeline with fully managed operations, high performance, scalability, and security.</p> <p>For more information about App Runner, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/dg/\">App Runner Developer Guide</a>. For release information, see the <a href=\"https://docs.aws.amazon.com/apprunner/latest/relnotes/\">App Runner Release Notes</a>.</p> <p> To install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that you can use to access the API, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of Region-specific endpoints that App Runner supports, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/apprunner.html\">App Runner endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateServiceRequest.h
 *
 * 
 */

#ifndef OAIUpdateServiceRequest_H
#define OAIUpdateServiceRequest_H

#include <QJsonObject>

#include "OAICreateServiceRequest_HealthCheckConfiguration.h"
#include "OAICreateServiceRequest_NetworkConfiguration.h"
#include "OAICreateServiceRequest_ObservabilityConfiguration.h"
#include "OAIUpdateServiceRequest_InstanceConfiguration.h"
#include "OAIUpdateServiceRequest_SourceConfiguration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateServiceRequest_SourceConfiguration;
class OAIUpdateServiceRequest_InstanceConfiguration;
class OAICreateServiceRequest_HealthCheckConfiguration;
class OAICreateServiceRequest_NetworkConfiguration;
class OAICreateServiceRequest_ObservabilityConfiguration;

class OAIUpdateServiceRequest : public OAIObject {
public:
    OAIUpdateServiceRequest();
    OAIUpdateServiceRequest(QString json);
    ~OAIUpdateServiceRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getServiceArn() const;
    void setServiceArn(const QString &service_arn);
    bool is_service_arn_Set() const;
    bool is_service_arn_Valid() const;

    OAIUpdateServiceRequest_SourceConfiguration getSourceConfiguration() const;
    void setSourceConfiguration(const OAIUpdateServiceRequest_SourceConfiguration &source_configuration);
    bool is_source_configuration_Set() const;
    bool is_source_configuration_Valid() const;

    OAIUpdateServiceRequest_InstanceConfiguration getInstanceConfiguration() const;
    void setInstanceConfiguration(const OAIUpdateServiceRequest_InstanceConfiguration &instance_configuration);
    bool is_instance_configuration_Set() const;
    bool is_instance_configuration_Valid() const;

    QString getAutoScalingConfigurationArn() const;
    void setAutoScalingConfigurationArn(const QString &auto_scaling_configuration_arn);
    bool is_auto_scaling_configuration_arn_Set() const;
    bool is_auto_scaling_configuration_arn_Valid() const;

    OAICreateServiceRequest_HealthCheckConfiguration getHealthCheckConfiguration() const;
    void setHealthCheckConfiguration(const OAICreateServiceRequest_HealthCheckConfiguration &health_check_configuration);
    bool is_health_check_configuration_Set() const;
    bool is_health_check_configuration_Valid() const;

    OAICreateServiceRequest_NetworkConfiguration getNetworkConfiguration() const;
    void setNetworkConfiguration(const OAICreateServiceRequest_NetworkConfiguration &network_configuration);
    bool is_network_configuration_Set() const;
    bool is_network_configuration_Valid() const;

    OAICreateServiceRequest_ObservabilityConfiguration getObservabilityConfiguration() const;
    void setObservabilityConfiguration(const OAICreateServiceRequest_ObservabilityConfiguration &observability_configuration);
    bool is_observability_configuration_Set() const;
    bool is_observability_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_service_arn;
    bool m_service_arn_isSet;
    bool m_service_arn_isValid;

    OAIUpdateServiceRequest_SourceConfiguration m_source_configuration;
    bool m_source_configuration_isSet;
    bool m_source_configuration_isValid;

    OAIUpdateServiceRequest_InstanceConfiguration m_instance_configuration;
    bool m_instance_configuration_isSet;
    bool m_instance_configuration_isValid;

    QString m_auto_scaling_configuration_arn;
    bool m_auto_scaling_configuration_arn_isSet;
    bool m_auto_scaling_configuration_arn_isValid;

    OAICreateServiceRequest_HealthCheckConfiguration m_health_check_configuration;
    bool m_health_check_configuration_isSet;
    bool m_health_check_configuration_isValid;

    OAICreateServiceRequest_NetworkConfiguration m_network_configuration;
    bool m_network_configuration_isSet;
    bool m_network_configuration_isValid;

    OAICreateServiceRequest_ObservabilityConfiguration m_observability_configuration;
    bool m_observability_configuration_isSet;
    bool m_observability_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateServiceRequest)

#endif // OAIUpdateServiceRequest_H
