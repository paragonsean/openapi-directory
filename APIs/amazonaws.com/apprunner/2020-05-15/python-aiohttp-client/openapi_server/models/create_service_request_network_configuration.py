# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.network_configuration_egress_configuration import NetworkConfigurationEgressConfiguration
from openapi_server.models.network_configuration_ingress_configuration import NetworkConfigurationIngressConfiguration
from openapi_server import util


class CreateServiceRequestNetworkConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, egress_configuration: NetworkConfigurationEgressConfiguration=None, ingress_configuration: NetworkConfigurationIngressConfiguration=None):
        """CreateServiceRequestNetworkConfiguration - a model defined in OpenAPI

        :param egress_configuration: The egress_configuration of this CreateServiceRequestNetworkConfiguration.
        :param ingress_configuration: The ingress_configuration of this CreateServiceRequestNetworkConfiguration.
        """
        self.openapi_types = {
            'egress_configuration': NetworkConfigurationEgressConfiguration,
            'ingress_configuration': NetworkConfigurationIngressConfiguration
        }

        self.attribute_map = {
            'egress_configuration': 'EgressConfiguration',
            'ingress_configuration': 'IngressConfiguration'
        }

        self._egress_configuration = egress_configuration
        self._ingress_configuration = ingress_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateServiceRequestNetworkConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateServiceRequest_NetworkConfiguration of this CreateServiceRequestNetworkConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def egress_configuration(self):
        """Gets the egress_configuration of this CreateServiceRequestNetworkConfiguration.


        :return: The egress_configuration of this CreateServiceRequestNetworkConfiguration.
        :rtype: NetworkConfigurationEgressConfiguration
        """
        return self._egress_configuration

    @egress_configuration.setter
    def egress_configuration(self, egress_configuration):
        """Sets the egress_configuration of this CreateServiceRequestNetworkConfiguration.


        :param egress_configuration: The egress_configuration of this CreateServiceRequestNetworkConfiguration.
        :type egress_configuration: NetworkConfigurationEgressConfiguration
        """

        self._egress_configuration = egress_configuration

    @property
    def ingress_configuration(self):
        """Gets the ingress_configuration of this CreateServiceRequestNetworkConfiguration.


        :return: The ingress_configuration of this CreateServiceRequestNetworkConfiguration.
        :rtype: NetworkConfigurationIngressConfiguration
        """
        return self._ingress_configuration

    @ingress_configuration.setter
    def ingress_configuration(self, ingress_configuration):
        """Sets the ingress_configuration of this CreateServiceRequestNetworkConfiguration.


        :param ingress_configuration: The ingress_configuration of this CreateServiceRequestNetworkConfiguration.
        :type ingress_configuration: NetworkConfigurationIngressConfiguration
        """

        self._ingress_configuration = ingress_configuration
