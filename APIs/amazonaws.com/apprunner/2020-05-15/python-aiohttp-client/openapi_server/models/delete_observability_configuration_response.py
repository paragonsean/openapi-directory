# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.delete_observability_configuration_response_observability_configuration import DeleteObservabilityConfigurationResponseObservabilityConfiguration
from openapi_server import util


class DeleteObservabilityConfigurationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, observability_configuration: DeleteObservabilityConfigurationResponseObservabilityConfiguration=None):
        """DeleteObservabilityConfigurationResponse - a model defined in OpenAPI

        :param observability_configuration: The observability_configuration of this DeleteObservabilityConfigurationResponse.
        """
        self.openapi_types = {
            'observability_configuration': DeleteObservabilityConfigurationResponseObservabilityConfiguration
        }

        self.attribute_map = {
            'observability_configuration': 'ObservabilityConfiguration'
        }

        self._observability_configuration = observability_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteObservabilityConfigurationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteObservabilityConfigurationResponse of this DeleteObservabilityConfigurationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def observability_configuration(self):
        """Gets the observability_configuration of this DeleteObservabilityConfigurationResponse.


        :return: The observability_configuration of this DeleteObservabilityConfigurationResponse.
        :rtype: DeleteObservabilityConfigurationResponseObservabilityConfiguration
        """
        return self._observability_configuration

    @observability_configuration.setter
    def observability_configuration(self, observability_configuration):
        """Sets the observability_configuration of this DeleteObservabilityConfigurationResponse.


        :param observability_configuration: The observability_configuration of this DeleteObservabilityConfigurationResponse.
        :type observability_configuration: DeleteObservabilityConfigurationResponseObservabilityConfiguration
        """
        if observability_configuration is None:
            raise ValueError("Invalid value for `observability_configuration`, must not be `None`")

        self._observability_configuration = observability_configuration
