# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListConnectionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connection_name: str=None, max_results: int=None, next_token: str=None):
        """ListConnectionsRequest - a model defined in OpenAPI

        :param connection_name: The connection_name of this ListConnectionsRequest.
        :param max_results: The max_results of this ListConnectionsRequest.
        :param next_token: The next_token of this ListConnectionsRequest.
        """
        self.openapi_types = {
            'connection_name': str,
            'max_results': int,
            'next_token': str
        }

        self.attribute_map = {
            'connection_name': 'ConnectionName',
            'max_results': 'MaxResults',
            'next_token': 'NextToken'
        }

        self._connection_name = connection_name
        self._max_results = max_results
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListConnectionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListConnectionsRequest of this ListConnectionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_name(self):
        """Gets the connection_name of this ListConnectionsRequest.


        :return: The connection_name of this ListConnectionsRequest.
        :rtype: str
        """
        return self._connection_name

    @connection_name.setter
    def connection_name(self, connection_name):
        """Sets the connection_name of this ListConnectionsRequest.


        :param connection_name: The connection_name of this ListConnectionsRequest.
        :type connection_name: str
        """

        self._connection_name = connection_name

    @property
    def max_results(self):
        """Gets the max_results of this ListConnectionsRequest.


        :return: The max_results of this ListConnectionsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListConnectionsRequest.


        :param max_results: The max_results of this ListConnectionsRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this ListConnectionsRequest.


        :return: The next_token of this ListConnectionsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListConnectionsRequest.


        :param next_token: The next_token of this ListConnectionsRequest.
        :type next_token: str
        """

        self._next_token = next_token
