# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.health_check_protocol import HealthCheckProtocol
from openapi_server import util


class ServiceHealthCheckConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, protocol: HealthCheckProtocol=None, path: str=None, interval: int=None, timeout: int=None, healthy_threshold: int=None, unhealthy_threshold: int=None):
        """ServiceHealthCheckConfiguration - a model defined in OpenAPI

        :param protocol: The protocol of this ServiceHealthCheckConfiguration.
        :param path: The path of this ServiceHealthCheckConfiguration.
        :param interval: The interval of this ServiceHealthCheckConfiguration.
        :param timeout: The timeout of this ServiceHealthCheckConfiguration.
        :param healthy_threshold: The healthy_threshold of this ServiceHealthCheckConfiguration.
        :param unhealthy_threshold: The unhealthy_threshold of this ServiceHealthCheckConfiguration.
        """
        self.openapi_types = {
            'protocol': HealthCheckProtocol,
            'path': str,
            'interval': int,
            'timeout': int,
            'healthy_threshold': int,
            'unhealthy_threshold': int
        }

        self.attribute_map = {
            'protocol': 'Protocol',
            'path': 'Path',
            'interval': 'Interval',
            'timeout': 'Timeout',
            'healthy_threshold': 'HealthyThreshold',
            'unhealthy_threshold': 'UnhealthyThreshold'
        }

        self._protocol = protocol
        self._path = path
        self._interval = interval
        self._timeout = timeout
        self._healthy_threshold = healthy_threshold
        self._unhealthy_threshold = unhealthy_threshold

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceHealthCheckConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Service_HealthCheckConfiguration of this ServiceHealthCheckConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def protocol(self):
        """Gets the protocol of this ServiceHealthCheckConfiguration.


        :return: The protocol of this ServiceHealthCheckConfiguration.
        :rtype: HealthCheckProtocol
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this ServiceHealthCheckConfiguration.


        :param protocol: The protocol of this ServiceHealthCheckConfiguration.
        :type protocol: HealthCheckProtocol
        """

        self._protocol = protocol

    @property
    def path(self):
        """Gets the path of this ServiceHealthCheckConfiguration.


        :return: The path of this ServiceHealthCheckConfiguration.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ServiceHealthCheckConfiguration.


        :param path: The path of this ServiceHealthCheckConfiguration.
        :type path: str
        """

        self._path = path

    @property
    def interval(self):
        """Gets the interval of this ServiceHealthCheckConfiguration.


        :return: The interval of this ServiceHealthCheckConfiguration.
        :rtype: int
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this ServiceHealthCheckConfiguration.


        :param interval: The interval of this ServiceHealthCheckConfiguration.
        :type interval: int
        """

        self._interval = interval

    @property
    def timeout(self):
        """Gets the timeout of this ServiceHealthCheckConfiguration.


        :return: The timeout of this ServiceHealthCheckConfiguration.
        :rtype: int
        """
        return self._timeout

    @timeout.setter
    def timeout(self, timeout):
        """Sets the timeout of this ServiceHealthCheckConfiguration.


        :param timeout: The timeout of this ServiceHealthCheckConfiguration.
        :type timeout: int
        """

        self._timeout = timeout

    @property
    def healthy_threshold(self):
        """Gets the healthy_threshold of this ServiceHealthCheckConfiguration.


        :return: The healthy_threshold of this ServiceHealthCheckConfiguration.
        :rtype: int
        """
        return self._healthy_threshold

    @healthy_threshold.setter
    def healthy_threshold(self, healthy_threshold):
        """Sets the healthy_threshold of this ServiceHealthCheckConfiguration.


        :param healthy_threshold: The healthy_threshold of this ServiceHealthCheckConfiguration.
        :type healthy_threshold: int
        """

        self._healthy_threshold = healthy_threshold

    @property
    def unhealthy_threshold(self):
        """Gets the unhealthy_threshold of this ServiceHealthCheckConfiguration.


        :return: The unhealthy_threshold of this ServiceHealthCheckConfiguration.
        :rtype: int
        """
        return self._unhealthy_threshold

    @unhealthy_threshold.setter
    def unhealthy_threshold(self, unhealthy_threshold):
        """Sets the unhealthy_threshold of this ServiceHealthCheckConfiguration.


        :param unhealthy_threshold: The unhealthy_threshold of this ServiceHealthCheckConfiguration.
        :type unhealthy_threshold: int
        """

        self._unhealthy_threshold = unhealthy_threshold
