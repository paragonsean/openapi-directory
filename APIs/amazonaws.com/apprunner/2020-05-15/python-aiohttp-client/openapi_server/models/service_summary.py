# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_status import ServiceStatus
from openapi_server import util


class ServiceSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_name: str=None, service_id: str=None, service_arn: str=None, service_url: str=None, created_at: datetime=None, updated_at: datetime=None, status: ServiceStatus=None):
        """ServiceSummary - a model defined in OpenAPI

        :param service_name: The service_name of this ServiceSummary.
        :param service_id: The service_id of this ServiceSummary.
        :param service_arn: The service_arn of this ServiceSummary.
        :param service_url: The service_url of this ServiceSummary.
        :param created_at: The created_at of this ServiceSummary.
        :param updated_at: The updated_at of this ServiceSummary.
        :param status: The status of this ServiceSummary.
        """
        self.openapi_types = {
            'service_name': str,
            'service_id': str,
            'service_arn': str,
            'service_url': str,
            'created_at': datetime,
            'updated_at': datetime,
            'status': ServiceStatus
        }

        self.attribute_map = {
            'service_name': 'ServiceName',
            'service_id': 'ServiceId',
            'service_arn': 'ServiceArn',
            'service_url': 'ServiceUrl',
            'created_at': 'CreatedAt',
            'updated_at': 'UpdatedAt',
            'status': 'Status'
        }

        self._service_name = service_name
        self._service_id = service_id
        self._service_arn = service_arn
        self._service_url = service_url
        self._created_at = created_at
        self._updated_at = updated_at
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceSummary of this ServiceSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_name(self):
        """Gets the service_name of this ServiceSummary.


        :return: The service_name of this ServiceSummary.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this ServiceSummary.


        :param service_name: The service_name of this ServiceSummary.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def service_id(self):
        """Gets the service_id of this ServiceSummary.


        :return: The service_id of this ServiceSummary.
        :rtype: str
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id):
        """Sets the service_id of this ServiceSummary.


        :param service_id: The service_id of this ServiceSummary.
        :type service_id: str
        """

        self._service_id = service_id

    @property
    def service_arn(self):
        """Gets the service_arn of this ServiceSummary.


        :return: The service_arn of this ServiceSummary.
        :rtype: str
        """
        return self._service_arn

    @service_arn.setter
    def service_arn(self, service_arn):
        """Sets the service_arn of this ServiceSummary.


        :param service_arn: The service_arn of this ServiceSummary.
        :type service_arn: str
        """

        self._service_arn = service_arn

    @property
    def service_url(self):
        """Gets the service_url of this ServiceSummary.


        :return: The service_url of this ServiceSummary.
        :rtype: str
        """
        return self._service_url

    @service_url.setter
    def service_url(self, service_url):
        """Sets the service_url of this ServiceSummary.


        :param service_url: The service_url of this ServiceSummary.
        :type service_url: str
        """

        self._service_url = service_url

    @property
    def created_at(self):
        """Gets the created_at of this ServiceSummary.


        :return: The created_at of this ServiceSummary.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ServiceSummary.


        :param created_at: The created_at of this ServiceSummary.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this ServiceSummary.


        :return: The updated_at of this ServiceSummary.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this ServiceSummary.


        :param updated_at: The updated_at of this ServiceSummary.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def status(self):
        """Gets the status of this ServiceSummary.


        :return: The status of this ServiceSummary.
        :rtype: ServiceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ServiceSummary.


        :param status: The status of this ServiceSummary.
        :type status: ServiceStatus
        """

        self._status = status
