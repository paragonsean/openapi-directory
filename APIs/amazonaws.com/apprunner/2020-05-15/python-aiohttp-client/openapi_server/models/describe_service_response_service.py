# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_auto_scaling_configuration_summary import ServiceAutoScalingConfigurationSummary
from openapi_server.models.service_encryption_configuration import ServiceEncryptionConfiguration
from openapi_server.models.service_health_check_configuration import ServiceHealthCheckConfiguration
from openapi_server.models.service_instance_configuration import ServiceInstanceConfiguration
from openapi_server.models.service_network_configuration import ServiceNetworkConfiguration
from openapi_server.models.service_observability_configuration import ServiceObservabilityConfiguration
from openapi_server.models.service_source_configuration import ServiceSourceConfiguration
from openapi_server.models.service_status import ServiceStatus
from openapi_server import util


class DescribeServiceResponseService(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_name: str=None, service_id: str=None, service_arn: str=None, service_url: str=None, created_at: datetime=None, updated_at: datetime=None, deleted_at: datetime=None, status: ServiceStatus=None, source_configuration: ServiceSourceConfiguration=None, instance_configuration: ServiceInstanceConfiguration=None, encryption_configuration: ServiceEncryptionConfiguration=None, health_check_configuration: ServiceHealthCheckConfiguration=None, auto_scaling_configuration_summary: ServiceAutoScalingConfigurationSummary=None, network_configuration: ServiceNetworkConfiguration=None, observability_configuration: ServiceObservabilityConfiguration=None):
        """DescribeServiceResponseService - a model defined in OpenAPI

        :param service_name: The service_name of this DescribeServiceResponseService.
        :param service_id: The service_id of this DescribeServiceResponseService.
        :param service_arn: The service_arn of this DescribeServiceResponseService.
        :param service_url: The service_url of this DescribeServiceResponseService.
        :param created_at: The created_at of this DescribeServiceResponseService.
        :param updated_at: The updated_at of this DescribeServiceResponseService.
        :param deleted_at: The deleted_at of this DescribeServiceResponseService.
        :param status: The status of this DescribeServiceResponseService.
        :param source_configuration: The source_configuration of this DescribeServiceResponseService.
        :param instance_configuration: The instance_configuration of this DescribeServiceResponseService.
        :param encryption_configuration: The encryption_configuration of this DescribeServiceResponseService.
        :param health_check_configuration: The health_check_configuration of this DescribeServiceResponseService.
        :param auto_scaling_configuration_summary: The auto_scaling_configuration_summary of this DescribeServiceResponseService.
        :param network_configuration: The network_configuration of this DescribeServiceResponseService.
        :param observability_configuration: The observability_configuration of this DescribeServiceResponseService.
        """
        self.openapi_types = {
            'service_name': str,
            'service_id': str,
            'service_arn': str,
            'service_url': str,
            'created_at': datetime,
            'updated_at': datetime,
            'deleted_at': datetime,
            'status': ServiceStatus,
            'source_configuration': ServiceSourceConfiguration,
            'instance_configuration': ServiceInstanceConfiguration,
            'encryption_configuration': ServiceEncryptionConfiguration,
            'health_check_configuration': ServiceHealthCheckConfiguration,
            'auto_scaling_configuration_summary': ServiceAutoScalingConfigurationSummary,
            'network_configuration': ServiceNetworkConfiguration,
            'observability_configuration': ServiceObservabilityConfiguration
        }

        self.attribute_map = {
            'service_name': 'ServiceName',
            'service_id': 'ServiceId',
            'service_arn': 'ServiceArn',
            'service_url': 'ServiceUrl',
            'created_at': 'CreatedAt',
            'updated_at': 'UpdatedAt',
            'deleted_at': 'DeletedAt',
            'status': 'Status',
            'source_configuration': 'SourceConfiguration',
            'instance_configuration': 'InstanceConfiguration',
            'encryption_configuration': 'EncryptionConfiguration',
            'health_check_configuration': 'HealthCheckConfiguration',
            'auto_scaling_configuration_summary': 'AutoScalingConfigurationSummary',
            'network_configuration': 'NetworkConfiguration',
            'observability_configuration': 'ObservabilityConfiguration'
        }

        self._service_name = service_name
        self._service_id = service_id
        self._service_arn = service_arn
        self._service_url = service_url
        self._created_at = created_at
        self._updated_at = updated_at
        self._deleted_at = deleted_at
        self._status = status
        self._source_configuration = source_configuration
        self._instance_configuration = instance_configuration
        self._encryption_configuration = encryption_configuration
        self._health_check_configuration = health_check_configuration
        self._auto_scaling_configuration_summary = auto_scaling_configuration_summary
        self._network_configuration = network_configuration
        self._observability_configuration = observability_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeServiceResponseService':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeServiceResponse_Service of this DescribeServiceResponseService.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_name(self):
        """Gets the service_name of this DescribeServiceResponseService.


        :return: The service_name of this DescribeServiceResponseService.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this DescribeServiceResponseService.


        :param service_name: The service_name of this DescribeServiceResponseService.
        :type service_name: str
        """
        if service_name is None:
            raise ValueError("Invalid value for `service_name`, must not be `None`")

        self._service_name = service_name

    @property
    def service_id(self):
        """Gets the service_id of this DescribeServiceResponseService.


        :return: The service_id of this DescribeServiceResponseService.
        :rtype: str
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id):
        """Sets the service_id of this DescribeServiceResponseService.


        :param service_id: The service_id of this DescribeServiceResponseService.
        :type service_id: str
        """
        if service_id is None:
            raise ValueError("Invalid value for `service_id`, must not be `None`")

        self._service_id = service_id

    @property
    def service_arn(self):
        """Gets the service_arn of this DescribeServiceResponseService.


        :return: The service_arn of this DescribeServiceResponseService.
        :rtype: str
        """
        return self._service_arn

    @service_arn.setter
    def service_arn(self, service_arn):
        """Sets the service_arn of this DescribeServiceResponseService.


        :param service_arn: The service_arn of this DescribeServiceResponseService.
        :type service_arn: str
        """
        if service_arn is None:
            raise ValueError("Invalid value for `service_arn`, must not be `None`")

        self._service_arn = service_arn

    @property
    def service_url(self):
        """Gets the service_url of this DescribeServiceResponseService.


        :return: The service_url of this DescribeServiceResponseService.
        :rtype: str
        """
        return self._service_url

    @service_url.setter
    def service_url(self, service_url):
        """Sets the service_url of this DescribeServiceResponseService.


        :param service_url: The service_url of this DescribeServiceResponseService.
        :type service_url: str
        """

        self._service_url = service_url

    @property
    def created_at(self):
        """Gets the created_at of this DescribeServiceResponseService.


        :return: The created_at of this DescribeServiceResponseService.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this DescribeServiceResponseService.


        :param created_at: The created_at of this DescribeServiceResponseService.
        :type created_at: datetime
        """
        if created_at is None:
            raise ValueError("Invalid value for `created_at`, must not be `None`")

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this DescribeServiceResponseService.


        :return: The updated_at of this DescribeServiceResponseService.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this DescribeServiceResponseService.


        :param updated_at: The updated_at of this DescribeServiceResponseService.
        :type updated_at: datetime
        """
        if updated_at is None:
            raise ValueError("Invalid value for `updated_at`, must not be `None`")

        self._updated_at = updated_at

    @property
    def deleted_at(self):
        """Gets the deleted_at of this DescribeServiceResponseService.


        :return: The deleted_at of this DescribeServiceResponseService.
        :rtype: datetime
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at):
        """Sets the deleted_at of this DescribeServiceResponseService.


        :param deleted_at: The deleted_at of this DescribeServiceResponseService.
        :type deleted_at: datetime
        """

        self._deleted_at = deleted_at

    @property
    def status(self):
        """Gets the status of this DescribeServiceResponseService.


        :return: The status of this DescribeServiceResponseService.
        :rtype: ServiceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeServiceResponseService.


        :param status: The status of this DescribeServiceResponseService.
        :type status: ServiceStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def source_configuration(self):
        """Gets the source_configuration of this DescribeServiceResponseService.


        :return: The source_configuration of this DescribeServiceResponseService.
        :rtype: ServiceSourceConfiguration
        """
        return self._source_configuration

    @source_configuration.setter
    def source_configuration(self, source_configuration):
        """Sets the source_configuration of this DescribeServiceResponseService.


        :param source_configuration: The source_configuration of this DescribeServiceResponseService.
        :type source_configuration: ServiceSourceConfiguration
        """
        if source_configuration is None:
            raise ValueError("Invalid value for `source_configuration`, must not be `None`")

        self._source_configuration = source_configuration

    @property
    def instance_configuration(self):
        """Gets the instance_configuration of this DescribeServiceResponseService.


        :return: The instance_configuration of this DescribeServiceResponseService.
        :rtype: ServiceInstanceConfiguration
        """
        return self._instance_configuration

    @instance_configuration.setter
    def instance_configuration(self, instance_configuration):
        """Sets the instance_configuration of this DescribeServiceResponseService.


        :param instance_configuration: The instance_configuration of this DescribeServiceResponseService.
        :type instance_configuration: ServiceInstanceConfiguration
        """
        if instance_configuration is None:
            raise ValueError("Invalid value for `instance_configuration`, must not be `None`")

        self._instance_configuration = instance_configuration

    @property
    def encryption_configuration(self):
        """Gets the encryption_configuration of this DescribeServiceResponseService.


        :return: The encryption_configuration of this DescribeServiceResponseService.
        :rtype: ServiceEncryptionConfiguration
        """
        return self._encryption_configuration

    @encryption_configuration.setter
    def encryption_configuration(self, encryption_configuration):
        """Sets the encryption_configuration of this DescribeServiceResponseService.


        :param encryption_configuration: The encryption_configuration of this DescribeServiceResponseService.
        :type encryption_configuration: ServiceEncryptionConfiguration
        """

        self._encryption_configuration = encryption_configuration

    @property
    def health_check_configuration(self):
        """Gets the health_check_configuration of this DescribeServiceResponseService.


        :return: The health_check_configuration of this DescribeServiceResponseService.
        :rtype: ServiceHealthCheckConfiguration
        """
        return self._health_check_configuration

    @health_check_configuration.setter
    def health_check_configuration(self, health_check_configuration):
        """Sets the health_check_configuration of this DescribeServiceResponseService.


        :param health_check_configuration: The health_check_configuration of this DescribeServiceResponseService.
        :type health_check_configuration: ServiceHealthCheckConfiguration
        """

        self._health_check_configuration = health_check_configuration

    @property
    def auto_scaling_configuration_summary(self):
        """Gets the auto_scaling_configuration_summary of this DescribeServiceResponseService.


        :return: The auto_scaling_configuration_summary of this DescribeServiceResponseService.
        :rtype: ServiceAutoScalingConfigurationSummary
        """
        return self._auto_scaling_configuration_summary

    @auto_scaling_configuration_summary.setter
    def auto_scaling_configuration_summary(self, auto_scaling_configuration_summary):
        """Sets the auto_scaling_configuration_summary of this DescribeServiceResponseService.


        :param auto_scaling_configuration_summary: The auto_scaling_configuration_summary of this DescribeServiceResponseService.
        :type auto_scaling_configuration_summary: ServiceAutoScalingConfigurationSummary
        """
        if auto_scaling_configuration_summary is None:
            raise ValueError("Invalid value for `auto_scaling_configuration_summary`, must not be `None`")

        self._auto_scaling_configuration_summary = auto_scaling_configuration_summary

    @property
    def network_configuration(self):
        """Gets the network_configuration of this DescribeServiceResponseService.


        :return: The network_configuration of this DescribeServiceResponseService.
        :rtype: ServiceNetworkConfiguration
        """
        return self._network_configuration

    @network_configuration.setter
    def network_configuration(self, network_configuration):
        """Sets the network_configuration of this DescribeServiceResponseService.


        :param network_configuration: The network_configuration of this DescribeServiceResponseService.
        :type network_configuration: ServiceNetworkConfiguration
        """
        if network_configuration is None:
            raise ValueError("Invalid value for `network_configuration`, must not be `None`")

        self._network_configuration = network_configuration

    @property
    def observability_configuration(self):
        """Gets the observability_configuration of this DescribeServiceResponseService.


        :return: The observability_configuration of this DescribeServiceResponseService.
        :rtype: ServiceObservabilityConfiguration
        """
        return self._observability_configuration

    @observability_configuration.setter
    def observability_configuration(self, observability_configuration):
        """Sets the observability_configuration of this DescribeServiceResponseService.


        :param observability_configuration: The observability_configuration of this DescribeServiceResponseService.
        :type observability_configuration: ServiceObservabilityConfiguration
        """

        self._observability_configuration = observability_configuration
