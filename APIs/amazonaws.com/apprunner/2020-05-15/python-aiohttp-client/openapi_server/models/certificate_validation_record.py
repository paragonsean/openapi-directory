# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.certificate_validation_record_status import CertificateValidationRecordStatus
from openapi_server import util


class CertificateValidationRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, type: str=None, value: str=None, status: CertificateValidationRecordStatus=None):
        """CertificateValidationRecord - a model defined in OpenAPI

        :param name: The name of this CertificateValidationRecord.
        :param type: The type of this CertificateValidationRecord.
        :param value: The value of this CertificateValidationRecord.
        :param status: The status of this CertificateValidationRecord.
        """
        self.openapi_types = {
            'name': str,
            'type': str,
            'value': str,
            'status': CertificateValidationRecordStatus
        }

        self.attribute_map = {
            'name': 'Name',
            'type': 'Type',
            'value': 'Value',
            'status': 'Status'
        }

        self._name = name
        self._type = type
        self._value = value
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CertificateValidationRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CertificateValidationRecord of this CertificateValidationRecord.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CertificateValidationRecord.


        :return: The name of this CertificateValidationRecord.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CertificateValidationRecord.


        :param name: The name of this CertificateValidationRecord.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this CertificateValidationRecord.


        :return: The type of this CertificateValidationRecord.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CertificateValidationRecord.


        :param type: The type of this CertificateValidationRecord.
        :type type: str
        """

        self._type = type

    @property
    def value(self):
        """Gets the value of this CertificateValidationRecord.


        :return: The value of this CertificateValidationRecord.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this CertificateValidationRecord.


        :param value: The value of this CertificateValidationRecord.
        :type value: str
        """

        self._value = value

    @property
    def status(self):
        """Gets the status of this CertificateValidationRecord.


        :return: The status of this CertificateValidationRecord.
        :rtype: CertificateValidationRecordStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CertificateValidationRecord.


        :param status: The status of this CertificateValidationRecord.
        :type status: CertificateValidationRecordStatus
        """

        self._status = status
