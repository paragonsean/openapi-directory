# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateAutoScalingConfigurationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_scaling_configuration_name: str=None, max_concurrency: int=None, min_size: int=None, max_size: int=None, tags: List=None):
        """CreateAutoScalingConfigurationRequest - a model defined in OpenAPI

        :param auto_scaling_configuration_name: The auto_scaling_configuration_name of this CreateAutoScalingConfigurationRequest.
        :param max_concurrency: The max_concurrency of this CreateAutoScalingConfigurationRequest.
        :param min_size: The min_size of this CreateAutoScalingConfigurationRequest.
        :param max_size: The max_size of this CreateAutoScalingConfigurationRequest.
        :param tags: The tags of this CreateAutoScalingConfigurationRequest.
        """
        self.openapi_types = {
            'auto_scaling_configuration_name': str,
            'max_concurrency': int,
            'min_size': int,
            'max_size': int,
            'tags': List
        }

        self.attribute_map = {
            'auto_scaling_configuration_name': 'AutoScalingConfigurationName',
            'max_concurrency': 'MaxConcurrency',
            'min_size': 'MinSize',
            'max_size': 'MaxSize',
            'tags': 'Tags'
        }

        self._auto_scaling_configuration_name = auto_scaling_configuration_name
        self._max_concurrency = max_concurrency
        self._min_size = min_size
        self._max_size = max_size
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAutoScalingConfigurationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAutoScalingConfigurationRequest of this CreateAutoScalingConfigurationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_scaling_configuration_name(self):
        """Gets the auto_scaling_configuration_name of this CreateAutoScalingConfigurationRequest.


        :return: The auto_scaling_configuration_name of this CreateAutoScalingConfigurationRequest.
        :rtype: str
        """
        return self._auto_scaling_configuration_name

    @auto_scaling_configuration_name.setter
    def auto_scaling_configuration_name(self, auto_scaling_configuration_name):
        """Sets the auto_scaling_configuration_name of this CreateAutoScalingConfigurationRequest.


        :param auto_scaling_configuration_name: The auto_scaling_configuration_name of this CreateAutoScalingConfigurationRequest.
        :type auto_scaling_configuration_name: str
        """
        if auto_scaling_configuration_name is None:
            raise ValueError("Invalid value for `auto_scaling_configuration_name`, must not be `None`")

        self._auto_scaling_configuration_name = auto_scaling_configuration_name

    @property
    def max_concurrency(self):
        """Gets the max_concurrency of this CreateAutoScalingConfigurationRequest.


        :return: The max_concurrency of this CreateAutoScalingConfigurationRequest.
        :rtype: int
        """
        return self._max_concurrency

    @max_concurrency.setter
    def max_concurrency(self, max_concurrency):
        """Sets the max_concurrency of this CreateAutoScalingConfigurationRequest.


        :param max_concurrency: The max_concurrency of this CreateAutoScalingConfigurationRequest.
        :type max_concurrency: int
        """

        self._max_concurrency = max_concurrency

    @property
    def min_size(self):
        """Gets the min_size of this CreateAutoScalingConfigurationRequest.


        :return: The min_size of this CreateAutoScalingConfigurationRequest.
        :rtype: int
        """
        return self._min_size

    @min_size.setter
    def min_size(self, min_size):
        """Sets the min_size of this CreateAutoScalingConfigurationRequest.


        :param min_size: The min_size of this CreateAutoScalingConfigurationRequest.
        :type min_size: int
        """

        self._min_size = min_size

    @property
    def max_size(self):
        """Gets the max_size of this CreateAutoScalingConfigurationRequest.


        :return: The max_size of this CreateAutoScalingConfigurationRequest.
        :rtype: int
        """
        return self._max_size

    @max_size.setter
    def max_size(self, max_size):
        """Sets the max_size of this CreateAutoScalingConfigurationRequest.


        :param max_size: The max_size of this CreateAutoScalingConfigurationRequest.
        :type max_size: int
        """

        self._max_size = max_size

    @property
    def tags(self):
        """Gets the tags of this CreateAutoScalingConfigurationRequest.


        :return: The tags of this CreateAutoScalingConfigurationRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateAutoScalingConfigurationRequest.


        :param tags: The tags of this CreateAutoScalingConfigurationRequest.
        :type tags: List
        """

        self._tags = tags
