# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_vpc_ingress_connection_request_ingress_vpc_configuration import UpdateVpcIngressConnectionRequestIngressVpcConfiguration
from openapi_server import util


class UpdateVpcIngressConnectionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vpc_ingress_connection_arn: str=None, ingress_vpc_configuration: UpdateVpcIngressConnectionRequestIngressVpcConfiguration=None):
        """UpdateVpcIngressConnectionRequest - a model defined in OpenAPI

        :param vpc_ingress_connection_arn: The vpc_ingress_connection_arn of this UpdateVpcIngressConnectionRequest.
        :param ingress_vpc_configuration: The ingress_vpc_configuration of this UpdateVpcIngressConnectionRequest.
        """
        self.openapi_types = {
            'vpc_ingress_connection_arn': str,
            'ingress_vpc_configuration': UpdateVpcIngressConnectionRequestIngressVpcConfiguration
        }

        self.attribute_map = {
            'vpc_ingress_connection_arn': 'VpcIngressConnectionArn',
            'ingress_vpc_configuration': 'IngressVpcConfiguration'
        }

        self._vpc_ingress_connection_arn = vpc_ingress_connection_arn
        self._ingress_vpc_configuration = ingress_vpc_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateVpcIngressConnectionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateVpcIngressConnectionRequest of this UpdateVpcIngressConnectionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vpc_ingress_connection_arn(self):
        """Gets the vpc_ingress_connection_arn of this UpdateVpcIngressConnectionRequest.


        :return: The vpc_ingress_connection_arn of this UpdateVpcIngressConnectionRequest.
        :rtype: str
        """
        return self._vpc_ingress_connection_arn

    @vpc_ingress_connection_arn.setter
    def vpc_ingress_connection_arn(self, vpc_ingress_connection_arn):
        """Sets the vpc_ingress_connection_arn of this UpdateVpcIngressConnectionRequest.


        :param vpc_ingress_connection_arn: The vpc_ingress_connection_arn of this UpdateVpcIngressConnectionRequest.
        :type vpc_ingress_connection_arn: str
        """
        if vpc_ingress_connection_arn is None:
            raise ValueError("Invalid value for `vpc_ingress_connection_arn`, must not be `None`")

        self._vpc_ingress_connection_arn = vpc_ingress_connection_arn

    @property
    def ingress_vpc_configuration(self):
        """Gets the ingress_vpc_configuration of this UpdateVpcIngressConnectionRequest.


        :return: The ingress_vpc_configuration of this UpdateVpcIngressConnectionRequest.
        :rtype: UpdateVpcIngressConnectionRequestIngressVpcConfiguration
        """
        return self._ingress_vpc_configuration

    @ingress_vpc_configuration.setter
    def ingress_vpc_configuration(self, ingress_vpc_configuration):
        """Sets the ingress_vpc_configuration of this UpdateVpcIngressConnectionRequest.


        :param ingress_vpc_configuration: The ingress_vpc_configuration of this UpdateVpcIngressConnectionRequest.
        :type ingress_vpc_configuration: UpdateVpcIngressConnectionRequestIngressVpcConfiguration
        """
        if ingress_vpc_configuration is None:
            raise ValueError("Invalid value for `ingress_vpc_configuration`, must not be `None`")

        self._ingress_vpc_configuration = ingress_vpc_configuration
