# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_vpc_ingress_connections_request_filter import ListVpcIngressConnectionsRequestFilter
from openapi_server import util


class ListVpcIngressConnectionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter: ListVpcIngressConnectionsRequestFilter=None, max_results: int=None, next_token: str=None):
        """ListVpcIngressConnectionsRequest - a model defined in OpenAPI

        :param filter: The filter of this ListVpcIngressConnectionsRequest.
        :param max_results: The max_results of this ListVpcIngressConnectionsRequest.
        :param next_token: The next_token of this ListVpcIngressConnectionsRequest.
        """
        self.openapi_types = {
            'filter': ListVpcIngressConnectionsRequestFilter,
            'max_results': int,
            'next_token': str
        }

        self.attribute_map = {
            'filter': 'Filter',
            'max_results': 'MaxResults',
            'next_token': 'NextToken'
        }

        self._filter = filter
        self._max_results = max_results
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListVpcIngressConnectionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListVpcIngressConnectionsRequest of this ListVpcIngressConnectionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter(self):
        """Gets the filter of this ListVpcIngressConnectionsRequest.


        :return: The filter of this ListVpcIngressConnectionsRequest.
        :rtype: ListVpcIngressConnectionsRequestFilter
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this ListVpcIngressConnectionsRequest.


        :param filter: The filter of this ListVpcIngressConnectionsRequest.
        :type filter: ListVpcIngressConnectionsRequestFilter
        """

        self._filter = filter

    @property
    def max_results(self):
        """Gets the max_results of this ListVpcIngressConnectionsRequest.


        :return: The max_results of this ListVpcIngressConnectionsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListVpcIngressConnectionsRequest.


        :param max_results: The max_results of this ListVpcIngressConnectionsRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this ListVpcIngressConnectionsRequest.


        :return: The next_token of this ListVpcIngressConnectionsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListVpcIngressConnectionsRequest.


        :param next_token: The next_token of this ListVpcIngressConnectionsRequest.
        :type next_token: str
        """

        self._next_token = next_token
