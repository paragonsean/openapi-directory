# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source_configuration_authentication_configuration import SourceConfigurationAuthenticationConfiguration
from openapi_server.models.source_configuration_code_repository import SourceConfigurationCodeRepository
from openapi_server.models.source_configuration_image_repository import SourceConfigurationImageRepository
from openapi_server import util


class SourceConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code_repository: SourceConfigurationCodeRepository=None, image_repository: SourceConfigurationImageRepository=None, auto_deployments_enabled: bool=None, authentication_configuration: SourceConfigurationAuthenticationConfiguration=None):
        """SourceConfiguration - a model defined in OpenAPI

        :param code_repository: The code_repository of this SourceConfiguration.
        :param image_repository: The image_repository of this SourceConfiguration.
        :param auto_deployments_enabled: The auto_deployments_enabled of this SourceConfiguration.
        :param authentication_configuration: The authentication_configuration of this SourceConfiguration.
        """
        self.openapi_types = {
            'code_repository': SourceConfigurationCodeRepository,
            'image_repository': SourceConfigurationImageRepository,
            'auto_deployments_enabled': bool,
            'authentication_configuration': SourceConfigurationAuthenticationConfiguration
        }

        self.attribute_map = {
            'code_repository': 'CodeRepository',
            'image_repository': 'ImageRepository',
            'auto_deployments_enabled': 'AutoDeploymentsEnabled',
            'authentication_configuration': 'AuthenticationConfiguration'
        }

        self._code_repository = code_repository
        self._image_repository = image_repository
        self._auto_deployments_enabled = auto_deployments_enabled
        self._authentication_configuration = authentication_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceConfiguration of this SourceConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code_repository(self):
        """Gets the code_repository of this SourceConfiguration.


        :return: The code_repository of this SourceConfiguration.
        :rtype: SourceConfigurationCodeRepository
        """
        return self._code_repository

    @code_repository.setter
    def code_repository(self, code_repository):
        """Sets the code_repository of this SourceConfiguration.


        :param code_repository: The code_repository of this SourceConfiguration.
        :type code_repository: SourceConfigurationCodeRepository
        """

        self._code_repository = code_repository

    @property
    def image_repository(self):
        """Gets the image_repository of this SourceConfiguration.


        :return: The image_repository of this SourceConfiguration.
        :rtype: SourceConfigurationImageRepository
        """
        return self._image_repository

    @image_repository.setter
    def image_repository(self, image_repository):
        """Sets the image_repository of this SourceConfiguration.


        :param image_repository: The image_repository of this SourceConfiguration.
        :type image_repository: SourceConfigurationImageRepository
        """

        self._image_repository = image_repository

    @property
    def auto_deployments_enabled(self):
        """Gets the auto_deployments_enabled of this SourceConfiguration.


        :return: The auto_deployments_enabled of this SourceConfiguration.
        :rtype: bool
        """
        return self._auto_deployments_enabled

    @auto_deployments_enabled.setter
    def auto_deployments_enabled(self, auto_deployments_enabled):
        """Sets the auto_deployments_enabled of this SourceConfiguration.


        :param auto_deployments_enabled: The auto_deployments_enabled of this SourceConfiguration.
        :type auto_deployments_enabled: bool
        """

        self._auto_deployments_enabled = auto_deployments_enabled

    @property
    def authentication_configuration(self):
        """Gets the authentication_configuration of this SourceConfiguration.


        :return: The authentication_configuration of this SourceConfiguration.
        :rtype: SourceConfigurationAuthenticationConfiguration
        """
        return self._authentication_configuration

    @authentication_configuration.setter
    def authentication_configuration(self, authentication_configuration):
        """Sets the authentication_configuration of this SourceConfiguration.


        :param authentication_configuration: The authentication_configuration of this SourceConfiguration.
        :type authentication_configuration: SourceConfigurationAuthenticationConfiguration
        """

        self._authentication_configuration = authentication_configuration
