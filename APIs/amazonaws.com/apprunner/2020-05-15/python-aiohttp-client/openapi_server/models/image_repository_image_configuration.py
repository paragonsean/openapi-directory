# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImageRepositoryImageConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, runtime_environment_variables: Dict=None, start_command: str=None, port: str=None, runtime_environment_secrets: Dict=None):
        """ImageRepositoryImageConfiguration - a model defined in OpenAPI

        :param runtime_environment_variables: The runtime_environment_variables of this ImageRepositoryImageConfiguration.
        :param start_command: The start_command of this ImageRepositoryImageConfiguration.
        :param port: The port of this ImageRepositoryImageConfiguration.
        :param runtime_environment_secrets: The runtime_environment_secrets of this ImageRepositoryImageConfiguration.
        """
        self.openapi_types = {
            'runtime_environment_variables': Dict,
            'start_command': str,
            'port': str,
            'runtime_environment_secrets': Dict
        }

        self.attribute_map = {
            'runtime_environment_variables': 'RuntimeEnvironmentVariables',
            'start_command': 'StartCommand',
            'port': 'Port',
            'runtime_environment_secrets': 'RuntimeEnvironmentSecrets'
        }

        self._runtime_environment_variables = runtime_environment_variables
        self._start_command = start_command
        self._port = port
        self._runtime_environment_secrets = runtime_environment_secrets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageRepositoryImageConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageRepository_ImageConfiguration of this ImageRepositoryImageConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def runtime_environment_variables(self):
        """Gets the runtime_environment_variables of this ImageRepositoryImageConfiguration.


        :return: The runtime_environment_variables of this ImageRepositoryImageConfiguration.
        :rtype: Dict
        """
        return self._runtime_environment_variables

    @runtime_environment_variables.setter
    def runtime_environment_variables(self, runtime_environment_variables):
        """Sets the runtime_environment_variables of this ImageRepositoryImageConfiguration.


        :param runtime_environment_variables: The runtime_environment_variables of this ImageRepositoryImageConfiguration.
        :type runtime_environment_variables: Dict
        """

        self._runtime_environment_variables = runtime_environment_variables

    @property
    def start_command(self):
        """Gets the start_command of this ImageRepositoryImageConfiguration.


        :return: The start_command of this ImageRepositoryImageConfiguration.
        :rtype: str
        """
        return self._start_command

    @start_command.setter
    def start_command(self, start_command):
        """Sets the start_command of this ImageRepositoryImageConfiguration.


        :param start_command: The start_command of this ImageRepositoryImageConfiguration.
        :type start_command: str
        """

        self._start_command = start_command

    @property
    def port(self):
        """Gets the port of this ImageRepositoryImageConfiguration.


        :return: The port of this ImageRepositoryImageConfiguration.
        :rtype: str
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this ImageRepositoryImageConfiguration.


        :param port: The port of this ImageRepositoryImageConfiguration.
        :type port: str
        """

        self._port = port

    @property
    def runtime_environment_secrets(self):
        """Gets the runtime_environment_secrets of this ImageRepositoryImageConfiguration.


        :return: The runtime_environment_secrets of this ImageRepositoryImageConfiguration.
        :rtype: Dict
        """
        return self._runtime_environment_secrets

    @runtime_environment_secrets.setter
    def runtime_environment_secrets(self, runtime_environment_secrets):
        """Sets the runtime_environment_secrets of this ImageRepositoryImageConfiguration.


        :param runtime_environment_secrets: The runtime_environment_secrets of this ImageRepositoryImageConfiguration.
        :type runtime_environment_secrets: Dict
        """

        self._runtime_environment_secrets = runtime_environment_secrets
