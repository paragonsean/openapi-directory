# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.operation_status import OperationStatus
from openapi_server.models.operation_type import OperationType
from openapi_server import util


class OperationSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, type: OperationType=None, status: OperationStatus=None, target_arn: str=None, started_at: datetime=None, ended_at: datetime=None, updated_at: datetime=None):
        """OperationSummary - a model defined in OpenAPI

        :param id: The id of this OperationSummary.
        :param type: The type of this OperationSummary.
        :param status: The status of this OperationSummary.
        :param target_arn: The target_arn of this OperationSummary.
        :param started_at: The started_at of this OperationSummary.
        :param ended_at: The ended_at of this OperationSummary.
        :param updated_at: The updated_at of this OperationSummary.
        """
        self.openapi_types = {
            'id': str,
            'type': OperationType,
            'status': OperationStatus,
            'target_arn': str,
            'started_at': datetime,
            'ended_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'id': 'Id',
            'type': 'Type',
            'status': 'Status',
            'target_arn': 'TargetArn',
            'started_at': 'StartedAt',
            'ended_at': 'EndedAt',
            'updated_at': 'UpdatedAt'
        }

        self._id = id
        self._type = type
        self._status = status
        self._target_arn = target_arn
        self._started_at = started_at
        self._ended_at = ended_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OperationSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OperationSummary of this OperationSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this OperationSummary.


        :return: The id of this OperationSummary.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OperationSummary.


        :param id: The id of this OperationSummary.
        :type id: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this OperationSummary.


        :return: The type of this OperationSummary.
        :rtype: OperationType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OperationSummary.


        :param type: The type of this OperationSummary.
        :type type: OperationType
        """

        self._type = type

    @property
    def status(self):
        """Gets the status of this OperationSummary.


        :return: The status of this OperationSummary.
        :rtype: OperationStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this OperationSummary.


        :param status: The status of this OperationSummary.
        :type status: OperationStatus
        """

        self._status = status

    @property
    def target_arn(self):
        """Gets the target_arn of this OperationSummary.


        :return: The target_arn of this OperationSummary.
        :rtype: str
        """
        return self._target_arn

    @target_arn.setter
    def target_arn(self, target_arn):
        """Sets the target_arn of this OperationSummary.


        :param target_arn: The target_arn of this OperationSummary.
        :type target_arn: str
        """

        self._target_arn = target_arn

    @property
    def started_at(self):
        """Gets the started_at of this OperationSummary.


        :return: The started_at of this OperationSummary.
        :rtype: datetime
        """
        return self._started_at

    @started_at.setter
    def started_at(self, started_at):
        """Sets the started_at of this OperationSummary.


        :param started_at: The started_at of this OperationSummary.
        :type started_at: datetime
        """

        self._started_at = started_at

    @property
    def ended_at(self):
        """Gets the ended_at of this OperationSummary.


        :return: The ended_at of this OperationSummary.
        :rtype: datetime
        """
        return self._ended_at

    @ended_at.setter
    def ended_at(self, ended_at):
        """Sets the ended_at of this OperationSummary.


        :param ended_at: The ended_at of this OperationSummary.
        :type ended_at: datetime
        """

        self._ended_at = ended_at

    @property
    def updated_at(self):
        """Gets the updated_at of this OperationSummary.


        :return: The updated_at of this OperationSummary.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this OperationSummary.


        :param updated_at: The updated_at of this OperationSummary.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
