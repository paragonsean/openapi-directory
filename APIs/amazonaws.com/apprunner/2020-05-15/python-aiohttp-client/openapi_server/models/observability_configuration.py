# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.observability_configuration_status import ObservabilityConfigurationStatus
from openapi_server.models.observability_configuration_trace_configuration import ObservabilityConfigurationTraceConfiguration
from openapi_server import util


class ObservabilityConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, observability_configuration_arn: str=None, observability_configuration_name: str=None, trace_configuration: ObservabilityConfigurationTraceConfiguration=None, observability_configuration_revision: int=None, latest: bool=None, status: ObservabilityConfigurationStatus=None, created_at: datetime=None, deleted_at: datetime=None):
        """ObservabilityConfiguration - a model defined in OpenAPI

        :param observability_configuration_arn: The observability_configuration_arn of this ObservabilityConfiguration.
        :param observability_configuration_name: The observability_configuration_name of this ObservabilityConfiguration.
        :param trace_configuration: The trace_configuration of this ObservabilityConfiguration.
        :param observability_configuration_revision: The observability_configuration_revision of this ObservabilityConfiguration.
        :param latest: The latest of this ObservabilityConfiguration.
        :param status: The status of this ObservabilityConfiguration.
        :param created_at: The created_at of this ObservabilityConfiguration.
        :param deleted_at: The deleted_at of this ObservabilityConfiguration.
        """
        self.openapi_types = {
            'observability_configuration_arn': str,
            'observability_configuration_name': str,
            'trace_configuration': ObservabilityConfigurationTraceConfiguration,
            'observability_configuration_revision': int,
            'latest': bool,
            'status': ObservabilityConfigurationStatus,
            'created_at': datetime,
            'deleted_at': datetime
        }

        self.attribute_map = {
            'observability_configuration_arn': 'ObservabilityConfigurationArn',
            'observability_configuration_name': 'ObservabilityConfigurationName',
            'trace_configuration': 'TraceConfiguration',
            'observability_configuration_revision': 'ObservabilityConfigurationRevision',
            'latest': 'Latest',
            'status': 'Status',
            'created_at': 'CreatedAt',
            'deleted_at': 'DeletedAt'
        }

        self._observability_configuration_arn = observability_configuration_arn
        self._observability_configuration_name = observability_configuration_name
        self._trace_configuration = trace_configuration
        self._observability_configuration_revision = observability_configuration_revision
        self._latest = latest
        self._status = status
        self._created_at = created_at
        self._deleted_at = deleted_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObservabilityConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ObservabilityConfiguration of this ObservabilityConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def observability_configuration_arn(self):
        """Gets the observability_configuration_arn of this ObservabilityConfiguration.


        :return: The observability_configuration_arn of this ObservabilityConfiguration.
        :rtype: str
        """
        return self._observability_configuration_arn

    @observability_configuration_arn.setter
    def observability_configuration_arn(self, observability_configuration_arn):
        """Sets the observability_configuration_arn of this ObservabilityConfiguration.


        :param observability_configuration_arn: The observability_configuration_arn of this ObservabilityConfiguration.
        :type observability_configuration_arn: str
        """

        self._observability_configuration_arn = observability_configuration_arn

    @property
    def observability_configuration_name(self):
        """Gets the observability_configuration_name of this ObservabilityConfiguration.


        :return: The observability_configuration_name of this ObservabilityConfiguration.
        :rtype: str
        """
        return self._observability_configuration_name

    @observability_configuration_name.setter
    def observability_configuration_name(self, observability_configuration_name):
        """Sets the observability_configuration_name of this ObservabilityConfiguration.


        :param observability_configuration_name: The observability_configuration_name of this ObservabilityConfiguration.
        :type observability_configuration_name: str
        """

        self._observability_configuration_name = observability_configuration_name

    @property
    def trace_configuration(self):
        """Gets the trace_configuration of this ObservabilityConfiguration.


        :return: The trace_configuration of this ObservabilityConfiguration.
        :rtype: ObservabilityConfigurationTraceConfiguration
        """
        return self._trace_configuration

    @trace_configuration.setter
    def trace_configuration(self, trace_configuration):
        """Sets the trace_configuration of this ObservabilityConfiguration.


        :param trace_configuration: The trace_configuration of this ObservabilityConfiguration.
        :type trace_configuration: ObservabilityConfigurationTraceConfiguration
        """

        self._trace_configuration = trace_configuration

    @property
    def observability_configuration_revision(self):
        """Gets the observability_configuration_revision of this ObservabilityConfiguration.


        :return: The observability_configuration_revision of this ObservabilityConfiguration.
        :rtype: int
        """
        return self._observability_configuration_revision

    @observability_configuration_revision.setter
    def observability_configuration_revision(self, observability_configuration_revision):
        """Sets the observability_configuration_revision of this ObservabilityConfiguration.


        :param observability_configuration_revision: The observability_configuration_revision of this ObservabilityConfiguration.
        :type observability_configuration_revision: int
        """

        self._observability_configuration_revision = observability_configuration_revision

    @property
    def latest(self):
        """Gets the latest of this ObservabilityConfiguration.


        :return: The latest of this ObservabilityConfiguration.
        :rtype: bool
        """
        return self._latest

    @latest.setter
    def latest(self, latest):
        """Sets the latest of this ObservabilityConfiguration.


        :param latest: The latest of this ObservabilityConfiguration.
        :type latest: bool
        """

        self._latest = latest

    @property
    def status(self):
        """Gets the status of this ObservabilityConfiguration.


        :return: The status of this ObservabilityConfiguration.
        :rtype: ObservabilityConfigurationStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ObservabilityConfiguration.


        :param status: The status of this ObservabilityConfiguration.
        :type status: ObservabilityConfigurationStatus
        """

        self._status = status

    @property
    def created_at(self):
        """Gets the created_at of this ObservabilityConfiguration.


        :return: The created_at of this ObservabilityConfiguration.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ObservabilityConfiguration.


        :param created_at: The created_at of this ObservabilityConfiguration.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def deleted_at(self):
        """Gets the deleted_at of this ObservabilityConfiguration.


        :return: The deleted_at of this ObservabilityConfiguration.
        :rtype: datetime
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at):
        """Sets the deleted_at of this ObservabilityConfiguration.


        :param deleted_at: The deleted_at of this ObservabilityConfiguration.
        :type deleted_at: datetime
        """

        self._deleted_at = deleted_at
