# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.delete_vpc_connector_response_vpc_connector import DeleteVpcConnectorResponseVpcConnector
from openapi_server import util


class DeleteVpcConnectorResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vpc_connector: DeleteVpcConnectorResponseVpcConnector=None):
        """DeleteVpcConnectorResponse - a model defined in OpenAPI

        :param vpc_connector: The vpc_connector of this DeleteVpcConnectorResponse.
        """
        self.openapi_types = {
            'vpc_connector': DeleteVpcConnectorResponseVpcConnector
        }

        self.attribute_map = {
            'vpc_connector': 'VpcConnector'
        }

        self._vpc_connector = vpc_connector

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteVpcConnectorResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteVpcConnectorResponse of this DeleteVpcConnectorResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vpc_connector(self):
        """Gets the vpc_connector of this DeleteVpcConnectorResponse.


        :return: The vpc_connector of this DeleteVpcConnectorResponse.
        :rtype: DeleteVpcConnectorResponseVpcConnector
        """
        return self._vpc_connector

    @vpc_connector.setter
    def vpc_connector(self, vpc_connector):
        """Sets the vpc_connector of this DeleteVpcConnectorResponse.


        :param vpc_connector: The vpc_connector of this DeleteVpcConnectorResponse.
        :type vpc_connector: DeleteVpcConnectorResponseVpcConnector
        """
        if vpc_connector is None:
            raise ValueError("Invalid value for `vpc_connector`, must not be `None`")

        self._vpc_connector = vpc_connector
