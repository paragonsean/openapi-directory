# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vocabulary_state import VocabularyState
from openapi_server import util


class ListVocabulariesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: VocabularyState=None, next_token: str=None, vocabularies: List=None):
        """ListVocabulariesResponse - a model defined in OpenAPI

        :param status: The status of this ListVocabulariesResponse.
        :param next_token: The next_token of this ListVocabulariesResponse.
        :param vocabularies: The vocabularies of this ListVocabulariesResponse.
        """
        self.openapi_types = {
            'status': VocabularyState,
            'next_token': str,
            'vocabularies': List
        }

        self.attribute_map = {
            'status': 'Status',
            'next_token': 'NextToken',
            'vocabularies': 'Vocabularies'
        }

        self._status = status
        self._next_token = next_token
        self._vocabularies = vocabularies

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListVocabulariesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListVocabulariesResponse of this ListVocabulariesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this ListVocabulariesResponse.


        :return: The status of this ListVocabulariesResponse.
        :rtype: VocabularyState
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ListVocabulariesResponse.


        :param status: The status of this ListVocabulariesResponse.
        :type status: VocabularyState
        """

        self._status = status

    @property
    def next_token(self):
        """Gets the next_token of this ListVocabulariesResponse.


        :return: The next_token of this ListVocabulariesResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListVocabulariesResponse.


        :param next_token: The next_token of this ListVocabulariesResponse.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def vocabularies(self):
        """Gets the vocabularies of this ListVocabulariesResponse.


        :return: The vocabularies of this ListVocabulariesResponse.
        :rtype: List
        """
        return self._vocabularies

    @vocabularies.setter
    def vocabularies(self, vocabularies):
        """Sets the vocabularies of this ListVocabulariesResponse.


        :param vocabularies: The vocabularies of this ListVocabulariesResponse.
        :type vocabularies: List
        """

        self._vocabularies = vocabularies
