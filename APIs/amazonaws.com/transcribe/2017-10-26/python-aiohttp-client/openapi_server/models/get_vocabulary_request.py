# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetVocabularyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vocabulary_name: str=None):
        """GetVocabularyRequest - a model defined in OpenAPI

        :param vocabulary_name: The vocabulary_name of this GetVocabularyRequest.
        """
        self.openapi_types = {
            'vocabulary_name': str
        }

        self.attribute_map = {
            'vocabulary_name': 'VocabularyName'
        }

        self._vocabulary_name = vocabulary_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetVocabularyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetVocabularyRequest of this GetVocabularyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vocabulary_name(self):
        """Gets the vocabulary_name of this GetVocabularyRequest.


        :return: The vocabulary_name of this GetVocabularyRequest.
        :rtype: str
        """
        return self._vocabulary_name

    @vocabulary_name.setter
    def vocabulary_name(self, vocabulary_name):
        """Sets the vocabulary_name of this GetVocabularyRequest.


        :param vocabulary_name: The vocabulary_name of this GetVocabularyRequest.
        :type vocabulary_name: str
        """
        if vocabulary_name is None:
            raise ValueError("Invalid value for `vocabulary_name`, must not be `None`")

        self._vocabulary_name = vocabulary_name
