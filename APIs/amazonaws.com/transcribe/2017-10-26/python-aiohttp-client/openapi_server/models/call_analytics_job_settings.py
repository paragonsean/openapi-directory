# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.content_redaction import ContentRedaction
from openapi_server.models.vocabulary_filter_method import VocabularyFilterMethod
from openapi_server import util


class CallAnalyticsJobSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vocabulary_name: str=None, vocabulary_filter_name: str=None, vocabulary_filter_method: VocabularyFilterMethod=None, language_model_name: str=None, content_redaction: ContentRedaction=None, language_options: List=None, language_id_settings: Dict=None):
        """CallAnalyticsJobSettings - a model defined in OpenAPI

        :param vocabulary_name: The vocabulary_name of this CallAnalyticsJobSettings.
        :param vocabulary_filter_name: The vocabulary_filter_name of this CallAnalyticsJobSettings.
        :param vocabulary_filter_method: The vocabulary_filter_method of this CallAnalyticsJobSettings.
        :param language_model_name: The language_model_name of this CallAnalyticsJobSettings.
        :param content_redaction: The content_redaction of this CallAnalyticsJobSettings.
        :param language_options: The language_options of this CallAnalyticsJobSettings.
        :param language_id_settings: The language_id_settings of this CallAnalyticsJobSettings.
        """
        self.openapi_types = {
            'vocabulary_name': str,
            'vocabulary_filter_name': str,
            'vocabulary_filter_method': VocabularyFilterMethod,
            'language_model_name': str,
            'content_redaction': ContentRedaction,
            'language_options': List,
            'language_id_settings': Dict
        }

        self.attribute_map = {
            'vocabulary_name': 'VocabularyName',
            'vocabulary_filter_name': 'VocabularyFilterName',
            'vocabulary_filter_method': 'VocabularyFilterMethod',
            'language_model_name': 'LanguageModelName',
            'content_redaction': 'ContentRedaction',
            'language_options': 'LanguageOptions',
            'language_id_settings': 'LanguageIdSettings'
        }

        self._vocabulary_name = vocabulary_name
        self._vocabulary_filter_name = vocabulary_filter_name
        self._vocabulary_filter_method = vocabulary_filter_method
        self._language_model_name = language_model_name
        self._content_redaction = content_redaction
        self._language_options = language_options
        self._language_id_settings = language_id_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CallAnalyticsJobSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CallAnalyticsJob_Settings of this CallAnalyticsJobSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vocabulary_name(self):
        """Gets the vocabulary_name of this CallAnalyticsJobSettings.


        :return: The vocabulary_name of this CallAnalyticsJobSettings.
        :rtype: str
        """
        return self._vocabulary_name

    @vocabulary_name.setter
    def vocabulary_name(self, vocabulary_name):
        """Sets the vocabulary_name of this CallAnalyticsJobSettings.


        :param vocabulary_name: The vocabulary_name of this CallAnalyticsJobSettings.
        :type vocabulary_name: str
        """

        self._vocabulary_name = vocabulary_name

    @property
    def vocabulary_filter_name(self):
        """Gets the vocabulary_filter_name of this CallAnalyticsJobSettings.


        :return: The vocabulary_filter_name of this CallAnalyticsJobSettings.
        :rtype: str
        """
        return self._vocabulary_filter_name

    @vocabulary_filter_name.setter
    def vocabulary_filter_name(self, vocabulary_filter_name):
        """Sets the vocabulary_filter_name of this CallAnalyticsJobSettings.


        :param vocabulary_filter_name: The vocabulary_filter_name of this CallAnalyticsJobSettings.
        :type vocabulary_filter_name: str
        """

        self._vocabulary_filter_name = vocabulary_filter_name

    @property
    def vocabulary_filter_method(self):
        """Gets the vocabulary_filter_method of this CallAnalyticsJobSettings.


        :return: The vocabulary_filter_method of this CallAnalyticsJobSettings.
        :rtype: VocabularyFilterMethod
        """
        return self._vocabulary_filter_method

    @vocabulary_filter_method.setter
    def vocabulary_filter_method(self, vocabulary_filter_method):
        """Sets the vocabulary_filter_method of this CallAnalyticsJobSettings.


        :param vocabulary_filter_method: The vocabulary_filter_method of this CallAnalyticsJobSettings.
        :type vocabulary_filter_method: VocabularyFilterMethod
        """

        self._vocabulary_filter_method = vocabulary_filter_method

    @property
    def language_model_name(self):
        """Gets the language_model_name of this CallAnalyticsJobSettings.


        :return: The language_model_name of this CallAnalyticsJobSettings.
        :rtype: str
        """
        return self._language_model_name

    @language_model_name.setter
    def language_model_name(self, language_model_name):
        """Sets the language_model_name of this CallAnalyticsJobSettings.


        :param language_model_name: The language_model_name of this CallAnalyticsJobSettings.
        :type language_model_name: str
        """

        self._language_model_name = language_model_name

    @property
    def content_redaction(self):
        """Gets the content_redaction of this CallAnalyticsJobSettings.


        :return: The content_redaction of this CallAnalyticsJobSettings.
        :rtype: ContentRedaction
        """
        return self._content_redaction

    @content_redaction.setter
    def content_redaction(self, content_redaction):
        """Sets the content_redaction of this CallAnalyticsJobSettings.


        :param content_redaction: The content_redaction of this CallAnalyticsJobSettings.
        :type content_redaction: ContentRedaction
        """

        self._content_redaction = content_redaction

    @property
    def language_options(self):
        """Gets the language_options of this CallAnalyticsJobSettings.


        :return: The language_options of this CallAnalyticsJobSettings.
        :rtype: List
        """
        return self._language_options

    @language_options.setter
    def language_options(self, language_options):
        """Sets the language_options of this CallAnalyticsJobSettings.


        :param language_options: The language_options of this CallAnalyticsJobSettings.
        :type language_options: List
        """

        self._language_options = language_options

    @property
    def language_id_settings(self):
        """Gets the language_id_settings of this CallAnalyticsJobSettings.


        :return: The language_id_settings of this CallAnalyticsJobSettings.
        :rtype: Dict
        """
        return self._language_id_settings

    @language_id_settings.setter
    def language_id_settings(self, language_id_settings):
        """Sets the language_id_settings of this CallAnalyticsJobSettings.


        :param language_id_settings: The language_id_settings of this CallAnalyticsJobSettings.
        :type language_id_settings: Dict
        """

        self._language_id_settings = language_id_settings
