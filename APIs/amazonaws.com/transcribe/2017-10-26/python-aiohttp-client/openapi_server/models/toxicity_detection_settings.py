# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ToxicityDetectionSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, toxicity_categories: List=None):
        """ToxicityDetectionSettings - a model defined in OpenAPI

        :param toxicity_categories: The toxicity_categories of this ToxicityDetectionSettings.
        """
        self.openapi_types = {
            'toxicity_categories': List
        }

        self.attribute_map = {
            'toxicity_categories': 'ToxicityCategories'
        }

        self._toxicity_categories = toxicity_categories

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ToxicityDetectionSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ToxicityDetectionSettings of this ToxicityDetectionSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def toxicity_categories(self):
        """Gets the toxicity_categories of this ToxicityDetectionSettings.


        :return: The toxicity_categories of this ToxicityDetectionSettings.
        :rtype: List
        """
        return self._toxicity_categories

    @toxicity_categories.setter
    def toxicity_categories(self, toxicity_categories):
        """Sets the toxicity_categories of this ToxicityDetectionSettings.


        :param toxicity_categories: The toxicity_categories of this ToxicityDetectionSettings.
        :type toxicity_categories: List
        """
        if toxicity_categories is None:
            raise ValueError("Invalid value for `toxicity_categories`, must not be `None`")

        self._toxicity_categories = toxicity_categories
