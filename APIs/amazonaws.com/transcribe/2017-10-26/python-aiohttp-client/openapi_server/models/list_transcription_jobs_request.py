# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.transcription_job_status import TranscriptionJobStatus
from openapi_server import util


class ListTranscriptionJobsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: TranscriptionJobStatus=None, job_name_contains: str=None, next_token: str=None, max_results: int=None):
        """ListTranscriptionJobsRequest - a model defined in OpenAPI

        :param status: The status of this ListTranscriptionJobsRequest.
        :param job_name_contains: The job_name_contains of this ListTranscriptionJobsRequest.
        :param next_token: The next_token of this ListTranscriptionJobsRequest.
        :param max_results: The max_results of this ListTranscriptionJobsRequest.
        """
        self.openapi_types = {
            'status': TranscriptionJobStatus,
            'job_name_contains': str,
            'next_token': str,
            'max_results': int
        }

        self.attribute_map = {
            'status': 'Status',
            'job_name_contains': 'JobNameContains',
            'next_token': 'NextToken',
            'max_results': 'MaxResults'
        }

        self._status = status
        self._job_name_contains = job_name_contains
        self._next_token = next_token
        self._max_results = max_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListTranscriptionJobsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListTranscriptionJobsRequest of this ListTranscriptionJobsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this ListTranscriptionJobsRequest.


        :return: The status of this ListTranscriptionJobsRequest.
        :rtype: TranscriptionJobStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ListTranscriptionJobsRequest.


        :param status: The status of this ListTranscriptionJobsRequest.
        :type status: TranscriptionJobStatus
        """

        self._status = status

    @property
    def job_name_contains(self):
        """Gets the job_name_contains of this ListTranscriptionJobsRequest.


        :return: The job_name_contains of this ListTranscriptionJobsRequest.
        :rtype: str
        """
        return self._job_name_contains

    @job_name_contains.setter
    def job_name_contains(self, job_name_contains):
        """Sets the job_name_contains of this ListTranscriptionJobsRequest.


        :param job_name_contains: The job_name_contains of this ListTranscriptionJobsRequest.
        :type job_name_contains: str
        """

        self._job_name_contains = job_name_contains

    @property
    def next_token(self):
        """Gets the next_token of this ListTranscriptionJobsRequest.


        :return: The next_token of this ListTranscriptionJobsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListTranscriptionJobsRequest.


        :param next_token: The next_token of this ListTranscriptionJobsRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListTranscriptionJobsRequest.


        :return: The max_results of this ListTranscriptionJobsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListTranscriptionJobsRequest.


        :param max_results: The max_results of this ListTranscriptionJobsRequest.
        :type max_results: int
        """

        self._max_results = max_results
