# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.base_model_name import BaseModelName
from openapi_server.models.clm_language_code import CLMLanguageCode
from openapi_server.models.language_model_input_data_config import LanguageModelInputDataConfig
from openapi_server.models.model_status import ModelStatus
from openapi_server import util


class LanguageModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_name: str=None, create_time: datetime=None, last_modified_time: datetime=None, language_code: CLMLanguageCode=None, base_model_name: BaseModelName=None, model_status: ModelStatus=None, upgrade_availability: bool=None, failure_reason: str=None, input_data_config: LanguageModelInputDataConfig=None):
        """LanguageModel - a model defined in OpenAPI

        :param model_name: The model_name of this LanguageModel.
        :param create_time: The create_time of this LanguageModel.
        :param last_modified_time: The last_modified_time of this LanguageModel.
        :param language_code: The language_code of this LanguageModel.
        :param base_model_name: The base_model_name of this LanguageModel.
        :param model_status: The model_status of this LanguageModel.
        :param upgrade_availability: The upgrade_availability of this LanguageModel.
        :param failure_reason: The failure_reason of this LanguageModel.
        :param input_data_config: The input_data_config of this LanguageModel.
        """
        self.openapi_types = {
            'model_name': str,
            'create_time': datetime,
            'last_modified_time': datetime,
            'language_code': CLMLanguageCode,
            'base_model_name': BaseModelName,
            'model_status': ModelStatus,
            'upgrade_availability': bool,
            'failure_reason': str,
            'input_data_config': LanguageModelInputDataConfig
        }

        self.attribute_map = {
            'model_name': 'ModelName',
            'create_time': 'CreateTime',
            'last_modified_time': 'LastModifiedTime',
            'language_code': 'LanguageCode',
            'base_model_name': 'BaseModelName',
            'model_status': 'ModelStatus',
            'upgrade_availability': 'UpgradeAvailability',
            'failure_reason': 'FailureReason',
            'input_data_config': 'InputDataConfig'
        }

        self._model_name = model_name
        self._create_time = create_time
        self._last_modified_time = last_modified_time
        self._language_code = language_code
        self._base_model_name = base_model_name
        self._model_status = model_status
        self._upgrade_availability = upgrade_availability
        self._failure_reason = failure_reason
        self._input_data_config = input_data_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LanguageModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LanguageModel of this LanguageModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_name(self):
        """Gets the model_name of this LanguageModel.


        :return: The model_name of this LanguageModel.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name):
        """Sets the model_name of this LanguageModel.


        :param model_name: The model_name of this LanguageModel.
        :type model_name: str
        """

        self._model_name = model_name

    @property
    def create_time(self):
        """Gets the create_time of this LanguageModel.


        :return: The create_time of this LanguageModel.
        :rtype: datetime
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this LanguageModel.


        :param create_time: The create_time of this LanguageModel.
        :type create_time: datetime
        """

        self._create_time = create_time

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this LanguageModel.


        :return: The last_modified_time of this LanguageModel.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this LanguageModel.


        :param last_modified_time: The last_modified_time of this LanguageModel.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time

    @property
    def language_code(self):
        """Gets the language_code of this LanguageModel.


        :return: The language_code of this LanguageModel.
        :rtype: CLMLanguageCode
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this LanguageModel.


        :param language_code: The language_code of this LanguageModel.
        :type language_code: CLMLanguageCode
        """

        self._language_code = language_code

    @property
    def base_model_name(self):
        """Gets the base_model_name of this LanguageModel.


        :return: The base_model_name of this LanguageModel.
        :rtype: BaseModelName
        """
        return self._base_model_name

    @base_model_name.setter
    def base_model_name(self, base_model_name):
        """Sets the base_model_name of this LanguageModel.


        :param base_model_name: The base_model_name of this LanguageModel.
        :type base_model_name: BaseModelName
        """

        self._base_model_name = base_model_name

    @property
    def model_status(self):
        """Gets the model_status of this LanguageModel.


        :return: The model_status of this LanguageModel.
        :rtype: ModelStatus
        """
        return self._model_status

    @model_status.setter
    def model_status(self, model_status):
        """Sets the model_status of this LanguageModel.


        :param model_status: The model_status of this LanguageModel.
        :type model_status: ModelStatus
        """

        self._model_status = model_status

    @property
    def upgrade_availability(self):
        """Gets the upgrade_availability of this LanguageModel.


        :return: The upgrade_availability of this LanguageModel.
        :rtype: bool
        """
        return self._upgrade_availability

    @upgrade_availability.setter
    def upgrade_availability(self, upgrade_availability):
        """Sets the upgrade_availability of this LanguageModel.


        :param upgrade_availability: The upgrade_availability of this LanguageModel.
        :type upgrade_availability: bool
        """

        self._upgrade_availability = upgrade_availability

    @property
    def failure_reason(self):
        """Gets the failure_reason of this LanguageModel.


        :return: The failure_reason of this LanguageModel.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this LanguageModel.


        :param failure_reason: The failure_reason of this LanguageModel.
        :type failure_reason: str
        """

        self._failure_reason = failure_reason

    @property
    def input_data_config(self):
        """Gets the input_data_config of this LanguageModel.


        :return: The input_data_config of this LanguageModel.
        :rtype: LanguageModelInputDataConfig
        """
        return self._input_data_config

    @input_data_config.setter
    def input_data_config(self, input_data_config):
        """Sets the input_data_config of this LanguageModel.


        :param input_data_config: The input_data_config of this LanguageModel.
        :type input_data_config: LanguageModelInputDataConfig
        """

        self._input_data_config = input_data_config
