# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateLanguageModelResponseInputDataConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s3_uri: str=None, tuning_data_s3_uri: str=None, data_access_role_arn: str=None):
        """CreateLanguageModelResponseInputDataConfig - a model defined in OpenAPI

        :param s3_uri: The s3_uri of this CreateLanguageModelResponseInputDataConfig.
        :param tuning_data_s3_uri: The tuning_data_s3_uri of this CreateLanguageModelResponseInputDataConfig.
        :param data_access_role_arn: The data_access_role_arn of this CreateLanguageModelResponseInputDataConfig.
        """
        self.openapi_types = {
            's3_uri': str,
            'tuning_data_s3_uri': str,
            'data_access_role_arn': str
        }

        self.attribute_map = {
            's3_uri': 'S3Uri',
            'tuning_data_s3_uri': 'TuningDataS3Uri',
            'data_access_role_arn': 'DataAccessRoleArn'
        }

        self._s3_uri = s3_uri
        self._tuning_data_s3_uri = tuning_data_s3_uri
        self._data_access_role_arn = data_access_role_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateLanguageModelResponseInputDataConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateLanguageModelResponse_InputDataConfig of this CreateLanguageModelResponseInputDataConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_uri(self):
        """Gets the s3_uri of this CreateLanguageModelResponseInputDataConfig.


        :return: The s3_uri of this CreateLanguageModelResponseInputDataConfig.
        :rtype: str
        """
        return self._s3_uri

    @s3_uri.setter
    def s3_uri(self, s3_uri):
        """Sets the s3_uri of this CreateLanguageModelResponseInputDataConfig.


        :param s3_uri: The s3_uri of this CreateLanguageModelResponseInputDataConfig.
        :type s3_uri: str
        """
        if s3_uri is None:
            raise ValueError("Invalid value for `s3_uri`, must not be `None`")

        self._s3_uri = s3_uri

    @property
    def tuning_data_s3_uri(self):
        """Gets the tuning_data_s3_uri of this CreateLanguageModelResponseInputDataConfig.


        :return: The tuning_data_s3_uri of this CreateLanguageModelResponseInputDataConfig.
        :rtype: str
        """
        return self._tuning_data_s3_uri

    @tuning_data_s3_uri.setter
    def tuning_data_s3_uri(self, tuning_data_s3_uri):
        """Sets the tuning_data_s3_uri of this CreateLanguageModelResponseInputDataConfig.


        :param tuning_data_s3_uri: The tuning_data_s3_uri of this CreateLanguageModelResponseInputDataConfig.
        :type tuning_data_s3_uri: str
        """

        self._tuning_data_s3_uri = tuning_data_s3_uri

    @property
    def data_access_role_arn(self):
        """Gets the data_access_role_arn of this CreateLanguageModelResponseInputDataConfig.


        :return: The data_access_role_arn of this CreateLanguageModelResponseInputDataConfig.
        :rtype: str
        """
        return self._data_access_role_arn

    @data_access_role_arn.setter
    def data_access_role_arn(self, data_access_role_arn):
        """Sets the data_access_role_arn of this CreateLanguageModelResponseInputDataConfig.


        :param data_access_role_arn: The data_access_role_arn of this CreateLanguageModelResponseInputDataConfig.
        :type data_access_role_arn: str
        """
        if data_access_role_arn is None:
            raise ValueError("Invalid value for `data_access_role_arn`, must not be `None`")

        self._data_access_role_arn = data_access_role_arn
