# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.transcription_job_status import TranscriptionJobStatus
from openapi_server import util


class ListTranscriptionJobsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: TranscriptionJobStatus=None, next_token: str=None, transcription_job_summaries: List=None):
        """ListTranscriptionJobsResponse - a model defined in OpenAPI

        :param status: The status of this ListTranscriptionJobsResponse.
        :param next_token: The next_token of this ListTranscriptionJobsResponse.
        :param transcription_job_summaries: The transcription_job_summaries of this ListTranscriptionJobsResponse.
        """
        self.openapi_types = {
            'status': TranscriptionJobStatus,
            'next_token': str,
            'transcription_job_summaries': List
        }

        self.attribute_map = {
            'status': 'Status',
            'next_token': 'NextToken',
            'transcription_job_summaries': 'TranscriptionJobSummaries'
        }

        self._status = status
        self._next_token = next_token
        self._transcription_job_summaries = transcription_job_summaries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListTranscriptionJobsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListTranscriptionJobsResponse of this ListTranscriptionJobsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this ListTranscriptionJobsResponse.


        :return: The status of this ListTranscriptionJobsResponse.
        :rtype: TranscriptionJobStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ListTranscriptionJobsResponse.


        :param status: The status of this ListTranscriptionJobsResponse.
        :type status: TranscriptionJobStatus
        """

        self._status = status

    @property
    def next_token(self):
        """Gets the next_token of this ListTranscriptionJobsResponse.


        :return: The next_token of this ListTranscriptionJobsResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListTranscriptionJobsResponse.


        :param next_token: The next_token of this ListTranscriptionJobsResponse.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def transcription_job_summaries(self):
        """Gets the transcription_job_summaries of this ListTranscriptionJobsResponse.


        :return: The transcription_job_summaries of this ListTranscriptionJobsResponse.
        :rtype: List
        """
        return self._transcription_job_summaries

    @transcription_job_summaries.setter
    def transcription_job_summaries(self, transcription_job_summaries):
        """Sets the transcription_job_summaries of this ListTranscriptionJobsResponse.


        :param transcription_job_summaries: The transcription_job_summaries of this ListTranscriptionJobsResponse.
        :type transcription_job_summaries: List
        """

        self._transcription_job_summaries = transcription_job_summaries
