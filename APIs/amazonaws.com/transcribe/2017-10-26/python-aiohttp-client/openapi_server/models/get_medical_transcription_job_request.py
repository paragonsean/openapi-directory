# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetMedicalTranscriptionJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, medical_transcription_job_name: str=None):
        """GetMedicalTranscriptionJobRequest - a model defined in OpenAPI

        :param medical_transcription_job_name: The medical_transcription_job_name of this GetMedicalTranscriptionJobRequest.
        """
        self.openapi_types = {
            'medical_transcription_job_name': str
        }

        self.attribute_map = {
            'medical_transcription_job_name': 'MedicalTranscriptionJobName'
        }

        self._medical_transcription_job_name = medical_transcription_job_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetMedicalTranscriptionJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetMedicalTranscriptionJobRequest of this GetMedicalTranscriptionJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def medical_transcription_job_name(self):
        """Gets the medical_transcription_job_name of this GetMedicalTranscriptionJobRequest.


        :return: The medical_transcription_job_name of this GetMedicalTranscriptionJobRequest.
        :rtype: str
        """
        return self._medical_transcription_job_name

    @medical_transcription_job_name.setter
    def medical_transcription_job_name(self, medical_transcription_job_name):
        """Sets the medical_transcription_job_name of this GetMedicalTranscriptionJobRequest.


        :param medical_transcription_job_name: The medical_transcription_job_name of this GetMedicalTranscriptionJobRequest.
        :type medical_transcription_job_name: str
        """
        if medical_transcription_job_name is None:
            raise ValueError("Invalid value for `medical_transcription_job_name`, must not be `None`")

        self._medical_transcription_job_name = medical_transcription_job_name
