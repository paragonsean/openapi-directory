# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TranscriptFilterAbsoluteTimeRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, start_time: int=None, end_time: int=None, first: int=None, last: int=None):
        """TranscriptFilterAbsoluteTimeRange - a model defined in OpenAPI

        :param start_time: The start_time of this TranscriptFilterAbsoluteTimeRange.
        :param end_time: The end_time of this TranscriptFilterAbsoluteTimeRange.
        :param first: The first of this TranscriptFilterAbsoluteTimeRange.
        :param last: The last of this TranscriptFilterAbsoluteTimeRange.
        """
        self.openapi_types = {
            'start_time': int,
            'end_time': int,
            'first': int,
            'last': int
        }

        self.attribute_map = {
            'start_time': 'StartTime',
            'end_time': 'EndTime',
            'first': 'First',
            'last': 'Last'
        }

        self._start_time = start_time
        self._end_time = end_time
        self._first = first
        self._last = last

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TranscriptFilterAbsoluteTimeRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TranscriptFilter_AbsoluteTimeRange of this TranscriptFilterAbsoluteTimeRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def start_time(self):
        """Gets the start_time of this TranscriptFilterAbsoluteTimeRange.


        :return: The start_time of this TranscriptFilterAbsoluteTimeRange.
        :rtype: int
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this TranscriptFilterAbsoluteTimeRange.


        :param start_time: The start_time of this TranscriptFilterAbsoluteTimeRange.
        :type start_time: int
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this TranscriptFilterAbsoluteTimeRange.


        :return: The end_time of this TranscriptFilterAbsoluteTimeRange.
        :rtype: int
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this TranscriptFilterAbsoluteTimeRange.


        :param end_time: The end_time of this TranscriptFilterAbsoluteTimeRange.
        :type end_time: int
        """

        self._end_time = end_time

    @property
    def first(self):
        """Gets the first of this TranscriptFilterAbsoluteTimeRange.


        :return: The first of this TranscriptFilterAbsoluteTimeRange.
        :rtype: int
        """
        return self._first

    @first.setter
    def first(self, first):
        """Sets the first of this TranscriptFilterAbsoluteTimeRange.


        :param first: The first of this TranscriptFilterAbsoluteTimeRange.
        :type first: int
        """

        self._first = first

    @property
    def last(self):
        """Gets the last of this TranscriptFilterAbsoluteTimeRange.


        :return: The last of this TranscriptFilterAbsoluteTimeRange.
        :rtype: int
        """
        return self._last

    @last.setter
    def last(self, last):
        """Sets the last of this TranscriptFilterAbsoluteTimeRange.


        :param last: The last of this TranscriptFilterAbsoluteTimeRange.
        :type last: int
        """

        self._last = last
