# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.language_code import LanguageCode
from openapi_server.models.model_settings import ModelSettings
from openapi_server.models.output_location_type import OutputLocationType
from openapi_server.models.transcription_job_status import TranscriptionJobStatus
from openapi_server.models.transcription_job_summary_content_redaction import TranscriptionJobSummaryContentRedaction
from openapi_server import util


class TranscriptionJobSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, transcription_job_name: str=None, creation_time: datetime=None, start_time: datetime=None, completion_time: datetime=None, language_code: LanguageCode=None, transcription_job_status: TranscriptionJobStatus=None, failure_reason: str=None, output_location_type: OutputLocationType=None, content_redaction: TranscriptionJobSummaryContentRedaction=None, model_settings: ModelSettings=None, identify_language: bool=None, identify_multiple_languages: bool=None, identified_language_score: float=None, language_codes: List=None, toxicity_detection: List=None):
        """TranscriptionJobSummary - a model defined in OpenAPI

        :param transcription_job_name: The transcription_job_name of this TranscriptionJobSummary.
        :param creation_time: The creation_time of this TranscriptionJobSummary.
        :param start_time: The start_time of this TranscriptionJobSummary.
        :param completion_time: The completion_time of this TranscriptionJobSummary.
        :param language_code: The language_code of this TranscriptionJobSummary.
        :param transcription_job_status: The transcription_job_status of this TranscriptionJobSummary.
        :param failure_reason: The failure_reason of this TranscriptionJobSummary.
        :param output_location_type: The output_location_type of this TranscriptionJobSummary.
        :param content_redaction: The content_redaction of this TranscriptionJobSummary.
        :param model_settings: The model_settings of this TranscriptionJobSummary.
        :param identify_language: The identify_language of this TranscriptionJobSummary.
        :param identify_multiple_languages: The identify_multiple_languages of this TranscriptionJobSummary.
        :param identified_language_score: The identified_language_score of this TranscriptionJobSummary.
        :param language_codes: The language_codes of this TranscriptionJobSummary.
        :param toxicity_detection: The toxicity_detection of this TranscriptionJobSummary.
        """
        self.openapi_types = {
            'transcription_job_name': str,
            'creation_time': datetime,
            'start_time': datetime,
            'completion_time': datetime,
            'language_code': LanguageCode,
            'transcription_job_status': TranscriptionJobStatus,
            'failure_reason': str,
            'output_location_type': OutputLocationType,
            'content_redaction': TranscriptionJobSummaryContentRedaction,
            'model_settings': ModelSettings,
            'identify_language': bool,
            'identify_multiple_languages': bool,
            'identified_language_score': float,
            'language_codes': List,
            'toxicity_detection': List
        }

        self.attribute_map = {
            'transcription_job_name': 'TranscriptionJobName',
            'creation_time': 'CreationTime',
            'start_time': 'StartTime',
            'completion_time': 'CompletionTime',
            'language_code': 'LanguageCode',
            'transcription_job_status': 'TranscriptionJobStatus',
            'failure_reason': 'FailureReason',
            'output_location_type': 'OutputLocationType',
            'content_redaction': 'ContentRedaction',
            'model_settings': 'ModelSettings',
            'identify_language': 'IdentifyLanguage',
            'identify_multiple_languages': 'IdentifyMultipleLanguages',
            'identified_language_score': 'IdentifiedLanguageScore',
            'language_codes': 'LanguageCodes',
            'toxicity_detection': 'ToxicityDetection'
        }

        self._transcription_job_name = transcription_job_name
        self._creation_time = creation_time
        self._start_time = start_time
        self._completion_time = completion_time
        self._language_code = language_code
        self._transcription_job_status = transcription_job_status
        self._failure_reason = failure_reason
        self._output_location_type = output_location_type
        self._content_redaction = content_redaction
        self._model_settings = model_settings
        self._identify_language = identify_language
        self._identify_multiple_languages = identify_multiple_languages
        self._identified_language_score = identified_language_score
        self._language_codes = language_codes
        self._toxicity_detection = toxicity_detection

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TranscriptionJobSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TranscriptionJobSummary of this TranscriptionJobSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def transcription_job_name(self):
        """Gets the transcription_job_name of this TranscriptionJobSummary.


        :return: The transcription_job_name of this TranscriptionJobSummary.
        :rtype: str
        """
        return self._transcription_job_name

    @transcription_job_name.setter
    def transcription_job_name(self, transcription_job_name):
        """Sets the transcription_job_name of this TranscriptionJobSummary.


        :param transcription_job_name: The transcription_job_name of this TranscriptionJobSummary.
        :type transcription_job_name: str
        """

        self._transcription_job_name = transcription_job_name

    @property
    def creation_time(self):
        """Gets the creation_time of this TranscriptionJobSummary.


        :return: The creation_time of this TranscriptionJobSummary.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this TranscriptionJobSummary.


        :param creation_time: The creation_time of this TranscriptionJobSummary.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def start_time(self):
        """Gets the start_time of this TranscriptionJobSummary.


        :return: The start_time of this TranscriptionJobSummary.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this TranscriptionJobSummary.


        :param start_time: The start_time of this TranscriptionJobSummary.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def completion_time(self):
        """Gets the completion_time of this TranscriptionJobSummary.


        :return: The completion_time of this TranscriptionJobSummary.
        :rtype: datetime
        """
        return self._completion_time

    @completion_time.setter
    def completion_time(self, completion_time):
        """Sets the completion_time of this TranscriptionJobSummary.


        :param completion_time: The completion_time of this TranscriptionJobSummary.
        :type completion_time: datetime
        """

        self._completion_time = completion_time

    @property
    def language_code(self):
        """Gets the language_code of this TranscriptionJobSummary.


        :return: The language_code of this TranscriptionJobSummary.
        :rtype: LanguageCode
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this TranscriptionJobSummary.


        :param language_code: The language_code of this TranscriptionJobSummary.
        :type language_code: LanguageCode
        """

        self._language_code = language_code

    @property
    def transcription_job_status(self):
        """Gets the transcription_job_status of this TranscriptionJobSummary.


        :return: The transcription_job_status of this TranscriptionJobSummary.
        :rtype: TranscriptionJobStatus
        """
        return self._transcription_job_status

    @transcription_job_status.setter
    def transcription_job_status(self, transcription_job_status):
        """Sets the transcription_job_status of this TranscriptionJobSummary.


        :param transcription_job_status: The transcription_job_status of this TranscriptionJobSummary.
        :type transcription_job_status: TranscriptionJobStatus
        """

        self._transcription_job_status = transcription_job_status

    @property
    def failure_reason(self):
        """Gets the failure_reason of this TranscriptionJobSummary.


        :return: The failure_reason of this TranscriptionJobSummary.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this TranscriptionJobSummary.


        :param failure_reason: The failure_reason of this TranscriptionJobSummary.
        :type failure_reason: str
        """

        self._failure_reason = failure_reason

    @property
    def output_location_type(self):
        """Gets the output_location_type of this TranscriptionJobSummary.


        :return: The output_location_type of this TranscriptionJobSummary.
        :rtype: OutputLocationType
        """
        return self._output_location_type

    @output_location_type.setter
    def output_location_type(self, output_location_type):
        """Sets the output_location_type of this TranscriptionJobSummary.


        :param output_location_type: The output_location_type of this TranscriptionJobSummary.
        :type output_location_type: OutputLocationType
        """

        self._output_location_type = output_location_type

    @property
    def content_redaction(self):
        """Gets the content_redaction of this TranscriptionJobSummary.


        :return: The content_redaction of this TranscriptionJobSummary.
        :rtype: TranscriptionJobSummaryContentRedaction
        """
        return self._content_redaction

    @content_redaction.setter
    def content_redaction(self, content_redaction):
        """Sets the content_redaction of this TranscriptionJobSummary.


        :param content_redaction: The content_redaction of this TranscriptionJobSummary.
        :type content_redaction: TranscriptionJobSummaryContentRedaction
        """

        self._content_redaction = content_redaction

    @property
    def model_settings(self):
        """Gets the model_settings of this TranscriptionJobSummary.


        :return: The model_settings of this TranscriptionJobSummary.
        :rtype: ModelSettings
        """
        return self._model_settings

    @model_settings.setter
    def model_settings(self, model_settings):
        """Sets the model_settings of this TranscriptionJobSummary.


        :param model_settings: The model_settings of this TranscriptionJobSummary.
        :type model_settings: ModelSettings
        """

        self._model_settings = model_settings

    @property
    def identify_language(self):
        """Gets the identify_language of this TranscriptionJobSummary.


        :return: The identify_language of this TranscriptionJobSummary.
        :rtype: bool
        """
        return self._identify_language

    @identify_language.setter
    def identify_language(self, identify_language):
        """Sets the identify_language of this TranscriptionJobSummary.


        :param identify_language: The identify_language of this TranscriptionJobSummary.
        :type identify_language: bool
        """

        self._identify_language = identify_language

    @property
    def identify_multiple_languages(self):
        """Gets the identify_multiple_languages of this TranscriptionJobSummary.


        :return: The identify_multiple_languages of this TranscriptionJobSummary.
        :rtype: bool
        """
        return self._identify_multiple_languages

    @identify_multiple_languages.setter
    def identify_multiple_languages(self, identify_multiple_languages):
        """Sets the identify_multiple_languages of this TranscriptionJobSummary.


        :param identify_multiple_languages: The identify_multiple_languages of this TranscriptionJobSummary.
        :type identify_multiple_languages: bool
        """

        self._identify_multiple_languages = identify_multiple_languages

    @property
    def identified_language_score(self):
        """Gets the identified_language_score of this TranscriptionJobSummary.


        :return: The identified_language_score of this TranscriptionJobSummary.
        :rtype: float
        """
        return self._identified_language_score

    @identified_language_score.setter
    def identified_language_score(self, identified_language_score):
        """Sets the identified_language_score of this TranscriptionJobSummary.


        :param identified_language_score: The identified_language_score of this TranscriptionJobSummary.
        :type identified_language_score: float
        """

        self._identified_language_score = identified_language_score

    @property
    def language_codes(self):
        """Gets the language_codes of this TranscriptionJobSummary.


        :return: The language_codes of this TranscriptionJobSummary.
        :rtype: List
        """
        return self._language_codes

    @language_codes.setter
    def language_codes(self, language_codes):
        """Sets the language_codes of this TranscriptionJobSummary.


        :param language_codes: The language_codes of this TranscriptionJobSummary.
        :type language_codes: List
        """

        self._language_codes = language_codes

    @property
    def toxicity_detection(self):
        """Gets the toxicity_detection of this TranscriptionJobSummary.


        :return: The toxicity_detection of this TranscriptionJobSummary.
        :rtype: List
        """
        return self._toxicity_detection

    @toxicity_detection.setter
    def toxicity_detection(self, toxicity_detection):
        """Sets the toxicity_detection of this TranscriptionJobSummary.


        :param toxicity_detection: The toxicity_detection of this TranscriptionJobSummary.
        :type toxicity_detection: List
        """

        self._toxicity_detection = toxicity_detection
