/*
 * Amazon Transcribe Service
 * <p>Amazon Transcribe offers three main types of batch transcription: <b>Standard</b>, <b>Medical</b>, and <b>Call Analytics</b>.</p> <ul> <li> <p> <b>Standard transcriptions</b> are the most common option. Refer to for details.</p> </li> <li> <p> <b>Medical transcriptions</b> are tailored to medical professionals and incorporate medical terms. A common use case for this service is transcribing doctor-patient dialogue into after-visit notes. Refer to for details.</p> </li> <li> <p> <b>Call Analytics transcriptions</b> are designed for use with call center audio on two different channels; if you're looking for insight into customer service calls, use this option. Refer to for details.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CallAnalyticsJobMedia;
import org.openapitools.client.model.CallAnalyticsJobSettings;
import org.openapitools.client.model.CallAnalyticsJobStatus;
import org.openapitools.client.model.LanguageCode;
import org.openapitools.client.model.MediaFormat;
import org.openapitools.client.model.Transcript;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Provides detailed information about a Call Analytics job.&lt;/p&gt; &lt;p&gt;To view the job&#39;s status, refer to &lt;code&gt;CallAnalyticsJobStatus&lt;/code&gt;. If the status is &lt;code&gt;COMPLETED&lt;/code&gt;, the job is finished. You can find your completed transcript at the URI specified in &lt;code&gt;TranscriptFileUri&lt;/code&gt;. If the status is &lt;code&gt;FAILED&lt;/code&gt;, &lt;code&gt;FailureReason&lt;/code&gt; provides details on why your transcription job failed.&lt;/p&gt; &lt;p&gt;If you enabled personally identifiable information (PII) redaction, the redacted transcript appears at the location specified in &lt;code&gt;RedactedTranscriptFileUri&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If you chose to redact the audio in your media file, you can find your redacted media file at the location specified in the &lt;code&gt;RedactedMediaFileUri&lt;/code&gt; field of your response.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:23:53.580792-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CallAnalyticsJob {
  public static final String SERIALIZED_NAME_CALL_ANALYTICS_JOB_NAME = "CallAnalyticsJobName";
  @SerializedName(SERIALIZED_NAME_CALL_ANALYTICS_JOB_NAME)
  private String callAnalyticsJobName;

  public static final String SERIALIZED_NAME_CALL_ANALYTICS_JOB_STATUS = "CallAnalyticsJobStatus";
  @SerializedName(SERIALIZED_NAME_CALL_ANALYTICS_JOB_STATUS)
  private CallAnalyticsJobStatus callAnalyticsJobStatus;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "LanguageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private LanguageCode languageCode;

  public static final String SERIALIZED_NAME_MEDIA_SAMPLE_RATE_HERTZ = "MediaSampleRateHertz";
  @SerializedName(SERIALIZED_NAME_MEDIA_SAMPLE_RATE_HERTZ)
  private Integer mediaSampleRateHertz;

  public static final String SERIALIZED_NAME_MEDIA_FORMAT = "MediaFormat";
  @SerializedName(SERIALIZED_NAME_MEDIA_FORMAT)
  private MediaFormat mediaFormat;

  public static final String SERIALIZED_NAME_MEDIA = "Media";
  @SerializedName(SERIALIZED_NAME_MEDIA)
  private CallAnalyticsJobMedia media;

  public static final String SERIALIZED_NAME_TRANSCRIPT = "Transcript";
  @SerializedName(SERIALIZED_NAME_TRANSCRIPT)
  private Transcript transcript;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_COMPLETION_TIME = "CompletionTime";
  @SerializedName(SERIALIZED_NAME_COMPLETION_TIME)
  private OffsetDateTime completionTime;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_DATA_ACCESS_ROLE_ARN = "DataAccessRoleArn";
  @SerializedName(SERIALIZED_NAME_DATA_ACCESS_ROLE_ARN)
  private String dataAccessRoleArn;

  public static final String SERIALIZED_NAME_IDENTIFIED_LANGUAGE_SCORE = "IdentifiedLanguageScore";
  @SerializedName(SERIALIZED_NAME_IDENTIFIED_LANGUAGE_SCORE)
  private Float identifiedLanguageScore;

  public static final String SERIALIZED_NAME_SETTINGS = "Settings";
  @SerializedName(SERIALIZED_NAME_SETTINGS)
  private CallAnalyticsJobSettings settings;

  public static final String SERIALIZED_NAME_CHANNEL_DEFINITIONS = "ChannelDefinitions";
  @SerializedName(SERIALIZED_NAME_CHANNEL_DEFINITIONS)
  private List channelDefinitions;

  public CallAnalyticsJob() {
  }

  public CallAnalyticsJob callAnalyticsJobName(String callAnalyticsJobName) {
    this.callAnalyticsJobName = callAnalyticsJobName;
    return this;
  }

  /**
   * Get callAnalyticsJobName
   * @return callAnalyticsJobName
   */
  @javax.annotation.Nullable
  public String getCallAnalyticsJobName() {
    return callAnalyticsJobName;
  }

  public void setCallAnalyticsJobName(String callAnalyticsJobName) {
    this.callAnalyticsJobName = callAnalyticsJobName;
  }


  public CallAnalyticsJob callAnalyticsJobStatus(CallAnalyticsJobStatus callAnalyticsJobStatus) {
    this.callAnalyticsJobStatus = callAnalyticsJobStatus;
    return this;
  }

  /**
   * Get callAnalyticsJobStatus
   * @return callAnalyticsJobStatus
   */
  @javax.annotation.Nullable
  public CallAnalyticsJobStatus getCallAnalyticsJobStatus() {
    return callAnalyticsJobStatus;
  }

  public void setCallAnalyticsJobStatus(CallAnalyticsJobStatus callAnalyticsJobStatus) {
    this.callAnalyticsJobStatus = callAnalyticsJobStatus;
  }


  public CallAnalyticsJob languageCode(LanguageCode languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Get languageCode
   * @return languageCode
   */
  @javax.annotation.Nullable
  public LanguageCode getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(LanguageCode languageCode) {
    this.languageCode = languageCode;
  }


  public CallAnalyticsJob mediaSampleRateHertz(Integer mediaSampleRateHertz) {
    this.mediaSampleRateHertz = mediaSampleRateHertz;
    return this;
  }

  /**
   * Get mediaSampleRateHertz
   * @return mediaSampleRateHertz
   */
  @javax.annotation.Nullable
  public Integer getMediaSampleRateHertz() {
    return mediaSampleRateHertz;
  }

  public void setMediaSampleRateHertz(Integer mediaSampleRateHertz) {
    this.mediaSampleRateHertz = mediaSampleRateHertz;
  }


  public CallAnalyticsJob mediaFormat(MediaFormat mediaFormat) {
    this.mediaFormat = mediaFormat;
    return this;
  }

  /**
   * Get mediaFormat
   * @return mediaFormat
   */
  @javax.annotation.Nullable
  public MediaFormat getMediaFormat() {
    return mediaFormat;
  }

  public void setMediaFormat(MediaFormat mediaFormat) {
    this.mediaFormat = mediaFormat;
  }


  public CallAnalyticsJob media(CallAnalyticsJobMedia media) {
    this.media = media;
    return this;
  }

  /**
   * Get media
   * @return media
   */
  @javax.annotation.Nullable
  public CallAnalyticsJobMedia getMedia() {
    return media;
  }

  public void setMedia(CallAnalyticsJobMedia media) {
    this.media = media;
  }


  public CallAnalyticsJob transcript(Transcript transcript) {
    this.transcript = transcript;
    return this;
  }

  /**
   * Get transcript
   * @return transcript
   */
  @javax.annotation.Nullable
  public Transcript getTranscript() {
    return transcript;
  }

  public void setTranscript(Transcript transcript) {
    this.transcript = transcript;
  }


  public CallAnalyticsJob startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public CallAnalyticsJob creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public CallAnalyticsJob completionTime(OffsetDateTime completionTime) {
    this.completionTime = completionTime;
    return this;
  }

  /**
   * Get completionTime
   * @return completionTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCompletionTime() {
    return completionTime;
  }

  public void setCompletionTime(OffsetDateTime completionTime) {
    this.completionTime = completionTime;
  }


  public CallAnalyticsJob failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public CallAnalyticsJob dataAccessRoleArn(String dataAccessRoleArn) {
    this.dataAccessRoleArn = dataAccessRoleArn;
    return this;
  }

  /**
   * Get dataAccessRoleArn
   * @return dataAccessRoleArn
   */
  @javax.annotation.Nullable
  public String getDataAccessRoleArn() {
    return dataAccessRoleArn;
  }

  public void setDataAccessRoleArn(String dataAccessRoleArn) {
    this.dataAccessRoleArn = dataAccessRoleArn;
  }


  public CallAnalyticsJob identifiedLanguageScore(Float identifiedLanguageScore) {
    this.identifiedLanguageScore = identifiedLanguageScore;
    return this;
  }

  /**
   * Get identifiedLanguageScore
   * @return identifiedLanguageScore
   */
  @javax.annotation.Nullable
  public Float getIdentifiedLanguageScore() {
    return identifiedLanguageScore;
  }

  public void setIdentifiedLanguageScore(Float identifiedLanguageScore) {
    this.identifiedLanguageScore = identifiedLanguageScore;
  }


  public CallAnalyticsJob settings(CallAnalyticsJobSettings settings) {
    this.settings = settings;
    return this;
  }

  /**
   * Get settings
   * @return settings
   */
  @javax.annotation.Nullable
  public CallAnalyticsJobSettings getSettings() {
    return settings;
  }

  public void setSettings(CallAnalyticsJobSettings settings) {
    this.settings = settings;
  }


  public CallAnalyticsJob channelDefinitions(List channelDefinitions) {
    this.channelDefinitions = channelDefinitions;
    return this;
  }

  /**
   * Get channelDefinitions
   * @return channelDefinitions
   */
  @javax.annotation.Nullable
  public List getChannelDefinitions() {
    return channelDefinitions;
  }

  public void setChannelDefinitions(List channelDefinitions) {
    this.channelDefinitions = channelDefinitions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CallAnalyticsJob callAnalyticsJob = (CallAnalyticsJob) o;
    return Objects.equals(this.callAnalyticsJobName, callAnalyticsJob.callAnalyticsJobName) &&
        Objects.equals(this.callAnalyticsJobStatus, callAnalyticsJob.callAnalyticsJobStatus) &&
        Objects.equals(this.languageCode, callAnalyticsJob.languageCode) &&
        Objects.equals(this.mediaSampleRateHertz, callAnalyticsJob.mediaSampleRateHertz) &&
        Objects.equals(this.mediaFormat, callAnalyticsJob.mediaFormat) &&
        Objects.equals(this.media, callAnalyticsJob.media) &&
        Objects.equals(this.transcript, callAnalyticsJob.transcript) &&
        Objects.equals(this.startTime, callAnalyticsJob.startTime) &&
        Objects.equals(this.creationTime, callAnalyticsJob.creationTime) &&
        Objects.equals(this.completionTime, callAnalyticsJob.completionTime) &&
        Objects.equals(this.failureReason, callAnalyticsJob.failureReason) &&
        Objects.equals(this.dataAccessRoleArn, callAnalyticsJob.dataAccessRoleArn) &&
        Objects.equals(this.identifiedLanguageScore, callAnalyticsJob.identifiedLanguageScore) &&
        Objects.equals(this.settings, callAnalyticsJob.settings) &&
        Objects.equals(this.channelDefinitions, callAnalyticsJob.channelDefinitions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callAnalyticsJobName, callAnalyticsJobStatus, languageCode, mediaSampleRateHertz, mediaFormat, media, transcript, startTime, creationTime, completionTime, failureReason, dataAccessRoleArn, identifiedLanguageScore, settings, channelDefinitions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CallAnalyticsJob {\n");
    sb.append("    callAnalyticsJobName: ").append(toIndentedString(callAnalyticsJobName)).append("\n");
    sb.append("    callAnalyticsJobStatus: ").append(toIndentedString(callAnalyticsJobStatus)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    mediaSampleRateHertz: ").append(toIndentedString(mediaSampleRateHertz)).append("\n");
    sb.append("    mediaFormat: ").append(toIndentedString(mediaFormat)).append("\n");
    sb.append("    media: ").append(toIndentedString(media)).append("\n");
    sb.append("    transcript: ").append(toIndentedString(transcript)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    completionTime: ").append(toIndentedString(completionTime)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    dataAccessRoleArn: ").append(toIndentedString(dataAccessRoleArn)).append("\n");
    sb.append("    identifiedLanguageScore: ").append(toIndentedString(identifiedLanguageScore)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    channelDefinitions: ").append(toIndentedString(channelDefinitions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CallAnalyticsJobName");
    openapiFields.add("CallAnalyticsJobStatus");
    openapiFields.add("LanguageCode");
    openapiFields.add("MediaSampleRateHertz");
    openapiFields.add("MediaFormat");
    openapiFields.add("Media");
    openapiFields.add("Transcript");
    openapiFields.add("StartTime");
    openapiFields.add("CreationTime");
    openapiFields.add("CompletionTime");
    openapiFields.add("FailureReason");
    openapiFields.add("DataAccessRoleArn");
    openapiFields.add("IdentifiedLanguageScore");
    openapiFields.add("Settings");
    openapiFields.add("ChannelDefinitions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CallAnalyticsJob
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CallAnalyticsJob.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CallAnalyticsJob is not found in the empty JSON string", CallAnalyticsJob.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CallAnalyticsJob.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CallAnalyticsJob` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `CallAnalyticsJobName`
      if (jsonObj.get("CallAnalyticsJobName") != null && !jsonObj.get("CallAnalyticsJobName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CallAnalyticsJobName"));
      }
      // validate the optional field `CallAnalyticsJobStatus`
      if (jsonObj.get("CallAnalyticsJobStatus") != null && !jsonObj.get("CallAnalyticsJobStatus").isJsonNull()) {
        CallAnalyticsJobStatus.validateJsonElement(jsonObj.get("CallAnalyticsJobStatus"));
      }
      // validate the optional field `LanguageCode`
      if (jsonObj.get("LanguageCode") != null && !jsonObj.get("LanguageCode").isJsonNull()) {
        LanguageCode.validateJsonElement(jsonObj.get("LanguageCode"));
      }
      // validate the optional field `MediaSampleRateHertz`
      if (jsonObj.get("MediaSampleRateHertz") != null && !jsonObj.get("MediaSampleRateHertz").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MediaSampleRateHertz"));
      }
      // validate the optional field `MediaFormat`
      if (jsonObj.get("MediaFormat") != null && !jsonObj.get("MediaFormat").isJsonNull()) {
        MediaFormat.validateJsonElement(jsonObj.get("MediaFormat"));
      }
      // validate the optional field `Media`
      if (jsonObj.get("Media") != null && !jsonObj.get("Media").isJsonNull()) {
        CallAnalyticsJobMedia.validateJsonElement(jsonObj.get("Media"));
      }
      // validate the optional field `Transcript`
      if (jsonObj.get("Transcript") != null && !jsonObj.get("Transcript").isJsonNull()) {
        Transcript.validateJsonElement(jsonObj.get("Transcript"));
      }
      // validate the optional field `StartTime`
      if (jsonObj.get("StartTime") != null && !jsonObj.get("StartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartTime"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `CompletionTime`
      if (jsonObj.get("CompletionTime") != null && !jsonObj.get("CompletionTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CompletionTime"));
      }
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the optional field `DataAccessRoleArn`
      if (jsonObj.get("DataAccessRoleArn") != null && !jsonObj.get("DataAccessRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DataAccessRoleArn"));
      }
      // validate the optional field `IdentifiedLanguageScore`
      if (jsonObj.get("IdentifiedLanguageScore") != null && !jsonObj.get("IdentifiedLanguageScore").isJsonNull()) {
        Float.validateJsonElement(jsonObj.get("IdentifiedLanguageScore"));
      }
      // validate the optional field `Settings`
      if (jsonObj.get("Settings") != null && !jsonObj.get("Settings").isJsonNull()) {
        CallAnalyticsJobSettings.validateJsonElement(jsonObj.get("Settings"));
      }
      // validate the optional field `ChannelDefinitions`
      if (jsonObj.get("ChannelDefinitions") != null && !jsonObj.get("ChannelDefinitions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ChannelDefinitions"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CallAnalyticsJob.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CallAnalyticsJob' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CallAnalyticsJob> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CallAnalyticsJob.class));

       return (TypeAdapter<T>) new TypeAdapter<CallAnalyticsJob>() {
           @Override
           public void write(JsonWriter out, CallAnalyticsJob value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CallAnalyticsJob read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CallAnalyticsJob given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CallAnalyticsJob
   * @throws IOException if the JSON string is invalid with respect to CallAnalyticsJob
   */
  public static CallAnalyticsJob fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CallAnalyticsJob.class);
  }

  /**
   * Convert an instance of CallAnalyticsJob to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

