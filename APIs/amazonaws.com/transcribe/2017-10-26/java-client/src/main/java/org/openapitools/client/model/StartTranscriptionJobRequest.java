/*
 * Amazon Transcribe Service
 * <p>Amazon Transcribe offers three main types of batch transcription: <b>Standard</b>, <b>Medical</b>, and <b>Call Analytics</b>.</p> <ul> <li> <p> <b>Standard transcriptions</b> are the most common option. Refer to for details.</p> </li> <li> <p> <b>Medical transcriptions</b> are tailored to medical professionals and incorporate medical terms. A common use case for this service is transcribing doctor-patient dialogue into after-visit notes. Refer to for details.</p> </li> <li> <p> <b>Call Analytics transcriptions</b> are designed for use with call center audio on two different channels; if you're looking for insight into customer service calls, use this option. Refer to for details.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.LanguageCode;
import org.openapitools.client.model.MediaFormat;
import org.openapitools.client.model.StartTranscriptionJobRequestContentRedaction;
import org.openapitools.client.model.StartTranscriptionJobRequestJobExecutionSettings;
import org.openapitools.client.model.StartTranscriptionJobRequestMedia;
import org.openapitools.client.model.StartTranscriptionJobRequestModelSettings;
import org.openapitools.client.model.StartTranscriptionJobRequestSettings;
import org.openapitools.client.model.StartTranscriptionJobRequestSubtitles;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StartTranscriptionJobRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:23:53.580792-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StartTranscriptionJobRequest {
  public static final String SERIALIZED_NAME_TRANSCRIPTION_JOB_NAME = "TranscriptionJobName";
  @SerializedName(SERIALIZED_NAME_TRANSCRIPTION_JOB_NAME)
  private String transcriptionJobName;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "LanguageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private LanguageCode languageCode;

  public static final String SERIALIZED_NAME_MEDIA_SAMPLE_RATE_HERTZ = "MediaSampleRateHertz";
  @SerializedName(SERIALIZED_NAME_MEDIA_SAMPLE_RATE_HERTZ)
  private Integer mediaSampleRateHertz;

  public static final String SERIALIZED_NAME_MEDIA_FORMAT = "MediaFormat";
  @SerializedName(SERIALIZED_NAME_MEDIA_FORMAT)
  private MediaFormat mediaFormat;

  public static final String SERIALIZED_NAME_MEDIA = "Media";
  @SerializedName(SERIALIZED_NAME_MEDIA)
  private StartTranscriptionJobRequestMedia media;

  public static final String SERIALIZED_NAME_OUTPUT_BUCKET_NAME = "OutputBucketName";
  @SerializedName(SERIALIZED_NAME_OUTPUT_BUCKET_NAME)
  private String outputBucketName;

  public static final String SERIALIZED_NAME_OUTPUT_KEY = "OutputKey";
  @SerializedName(SERIALIZED_NAME_OUTPUT_KEY)
  private String outputKey;

  public static final String SERIALIZED_NAME_OUTPUT_ENCRYPTION_K_M_S_KEY_ID = "OutputEncryptionKMSKeyId";
  @SerializedName(SERIALIZED_NAME_OUTPUT_ENCRYPTION_K_M_S_KEY_ID)
  private String outputEncryptionKMSKeyId;

  public static final String SERIALIZED_NAME_KM_S_ENCRYPTION_CONTEXT = "KMSEncryptionContext";
  @SerializedName(SERIALIZED_NAME_KM_S_ENCRYPTION_CONTEXT)
  private Map kmSEncryptionContext;

  public static final String SERIALIZED_NAME_SETTINGS = "Settings";
  @SerializedName(SERIALIZED_NAME_SETTINGS)
  private StartTranscriptionJobRequestSettings settings;

  public static final String SERIALIZED_NAME_MODEL_SETTINGS = "ModelSettings";
  @SerializedName(SERIALIZED_NAME_MODEL_SETTINGS)
  private StartTranscriptionJobRequestModelSettings modelSettings;

  public static final String SERIALIZED_NAME_JOB_EXECUTION_SETTINGS = "JobExecutionSettings";
  @SerializedName(SERIALIZED_NAME_JOB_EXECUTION_SETTINGS)
  private StartTranscriptionJobRequestJobExecutionSettings jobExecutionSettings;

  public static final String SERIALIZED_NAME_CONTENT_REDACTION = "ContentRedaction";
  @SerializedName(SERIALIZED_NAME_CONTENT_REDACTION)
  private StartTranscriptionJobRequestContentRedaction contentRedaction;

  public static final String SERIALIZED_NAME_IDENTIFY_LANGUAGE = "IdentifyLanguage";
  @SerializedName(SERIALIZED_NAME_IDENTIFY_LANGUAGE)
  private Boolean identifyLanguage;

  public static final String SERIALIZED_NAME_IDENTIFY_MULTIPLE_LANGUAGES = "IdentifyMultipleLanguages";
  @SerializedName(SERIALIZED_NAME_IDENTIFY_MULTIPLE_LANGUAGES)
  private Boolean identifyMultipleLanguages;

  public static final String SERIALIZED_NAME_LANGUAGE_OPTIONS = "LanguageOptions";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_OPTIONS)
  private List languageOptions;

  public static final String SERIALIZED_NAME_SUBTITLES = "Subtitles";
  @SerializedName(SERIALIZED_NAME_SUBTITLES)
  private StartTranscriptionJobRequestSubtitles subtitles;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_LANGUAGE_ID_SETTINGS = "LanguageIdSettings";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_ID_SETTINGS)
  private Map languageIdSettings;

  public static final String SERIALIZED_NAME_TOXICITY_DETECTION = "ToxicityDetection";
  @SerializedName(SERIALIZED_NAME_TOXICITY_DETECTION)
  private List toxicityDetection;

  public StartTranscriptionJobRequest() {
  }

  public StartTranscriptionJobRequest transcriptionJobName(String transcriptionJobName) {
    this.transcriptionJobName = transcriptionJobName;
    return this;
  }

  /**
   * Get transcriptionJobName
   * @return transcriptionJobName
   */
  @javax.annotation.Nonnull
  public String getTranscriptionJobName() {
    return transcriptionJobName;
  }

  public void setTranscriptionJobName(String transcriptionJobName) {
    this.transcriptionJobName = transcriptionJobName;
  }


  public StartTranscriptionJobRequest languageCode(LanguageCode languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Get languageCode
   * @return languageCode
   */
  @javax.annotation.Nullable
  public LanguageCode getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(LanguageCode languageCode) {
    this.languageCode = languageCode;
  }


  public StartTranscriptionJobRequest mediaSampleRateHertz(Integer mediaSampleRateHertz) {
    this.mediaSampleRateHertz = mediaSampleRateHertz;
    return this;
  }

  /**
   * Get mediaSampleRateHertz
   * @return mediaSampleRateHertz
   */
  @javax.annotation.Nullable
  public Integer getMediaSampleRateHertz() {
    return mediaSampleRateHertz;
  }

  public void setMediaSampleRateHertz(Integer mediaSampleRateHertz) {
    this.mediaSampleRateHertz = mediaSampleRateHertz;
  }


  public StartTranscriptionJobRequest mediaFormat(MediaFormat mediaFormat) {
    this.mediaFormat = mediaFormat;
    return this;
  }

  /**
   * Get mediaFormat
   * @return mediaFormat
   */
  @javax.annotation.Nullable
  public MediaFormat getMediaFormat() {
    return mediaFormat;
  }

  public void setMediaFormat(MediaFormat mediaFormat) {
    this.mediaFormat = mediaFormat;
  }


  public StartTranscriptionJobRequest media(StartTranscriptionJobRequestMedia media) {
    this.media = media;
    return this;
  }

  /**
   * Get media
   * @return media
   */
  @javax.annotation.Nonnull
  public StartTranscriptionJobRequestMedia getMedia() {
    return media;
  }

  public void setMedia(StartTranscriptionJobRequestMedia media) {
    this.media = media;
  }


  public StartTranscriptionJobRequest outputBucketName(String outputBucketName) {
    this.outputBucketName = outputBucketName;
    return this;
  }

  /**
   * Get outputBucketName
   * @return outputBucketName
   */
  @javax.annotation.Nullable
  public String getOutputBucketName() {
    return outputBucketName;
  }

  public void setOutputBucketName(String outputBucketName) {
    this.outputBucketName = outputBucketName;
  }


  public StartTranscriptionJobRequest outputKey(String outputKey) {
    this.outputKey = outputKey;
    return this;
  }

  /**
   * Get outputKey
   * @return outputKey
   */
  @javax.annotation.Nullable
  public String getOutputKey() {
    return outputKey;
  }

  public void setOutputKey(String outputKey) {
    this.outputKey = outputKey;
  }


  public StartTranscriptionJobRequest outputEncryptionKMSKeyId(String outputEncryptionKMSKeyId) {
    this.outputEncryptionKMSKeyId = outputEncryptionKMSKeyId;
    return this;
  }

  /**
   * Get outputEncryptionKMSKeyId
   * @return outputEncryptionKMSKeyId
   */
  @javax.annotation.Nullable
  public String getOutputEncryptionKMSKeyId() {
    return outputEncryptionKMSKeyId;
  }

  public void setOutputEncryptionKMSKeyId(String outputEncryptionKMSKeyId) {
    this.outputEncryptionKMSKeyId = outputEncryptionKMSKeyId;
  }


  public StartTranscriptionJobRequest kmSEncryptionContext(Map kmSEncryptionContext) {
    this.kmSEncryptionContext = kmSEncryptionContext;
    return this;
  }

  /**
   * Get kmSEncryptionContext
   * @return kmSEncryptionContext
   */
  @javax.annotation.Nullable
  public Map getKmSEncryptionContext() {
    return kmSEncryptionContext;
  }

  public void setKmSEncryptionContext(Map kmSEncryptionContext) {
    this.kmSEncryptionContext = kmSEncryptionContext;
  }


  public StartTranscriptionJobRequest settings(StartTranscriptionJobRequestSettings settings) {
    this.settings = settings;
    return this;
  }

  /**
   * Get settings
   * @return settings
   */
  @javax.annotation.Nullable
  public StartTranscriptionJobRequestSettings getSettings() {
    return settings;
  }

  public void setSettings(StartTranscriptionJobRequestSettings settings) {
    this.settings = settings;
  }


  public StartTranscriptionJobRequest modelSettings(StartTranscriptionJobRequestModelSettings modelSettings) {
    this.modelSettings = modelSettings;
    return this;
  }

  /**
   * Get modelSettings
   * @return modelSettings
   */
  @javax.annotation.Nullable
  public StartTranscriptionJobRequestModelSettings getModelSettings() {
    return modelSettings;
  }

  public void setModelSettings(StartTranscriptionJobRequestModelSettings modelSettings) {
    this.modelSettings = modelSettings;
  }


  public StartTranscriptionJobRequest jobExecutionSettings(StartTranscriptionJobRequestJobExecutionSettings jobExecutionSettings) {
    this.jobExecutionSettings = jobExecutionSettings;
    return this;
  }

  /**
   * Get jobExecutionSettings
   * @return jobExecutionSettings
   */
  @javax.annotation.Nullable
  public StartTranscriptionJobRequestJobExecutionSettings getJobExecutionSettings() {
    return jobExecutionSettings;
  }

  public void setJobExecutionSettings(StartTranscriptionJobRequestJobExecutionSettings jobExecutionSettings) {
    this.jobExecutionSettings = jobExecutionSettings;
  }


  public StartTranscriptionJobRequest contentRedaction(StartTranscriptionJobRequestContentRedaction contentRedaction) {
    this.contentRedaction = contentRedaction;
    return this;
  }

  /**
   * Get contentRedaction
   * @return contentRedaction
   */
  @javax.annotation.Nullable
  public StartTranscriptionJobRequestContentRedaction getContentRedaction() {
    return contentRedaction;
  }

  public void setContentRedaction(StartTranscriptionJobRequestContentRedaction contentRedaction) {
    this.contentRedaction = contentRedaction;
  }


  public StartTranscriptionJobRequest identifyLanguage(Boolean identifyLanguage) {
    this.identifyLanguage = identifyLanguage;
    return this;
  }

  /**
   * Get identifyLanguage
   * @return identifyLanguage
   */
  @javax.annotation.Nullable
  public Boolean getIdentifyLanguage() {
    return identifyLanguage;
  }

  public void setIdentifyLanguage(Boolean identifyLanguage) {
    this.identifyLanguage = identifyLanguage;
  }


  public StartTranscriptionJobRequest identifyMultipleLanguages(Boolean identifyMultipleLanguages) {
    this.identifyMultipleLanguages = identifyMultipleLanguages;
    return this;
  }

  /**
   * Get identifyMultipleLanguages
   * @return identifyMultipleLanguages
   */
  @javax.annotation.Nullable
  public Boolean getIdentifyMultipleLanguages() {
    return identifyMultipleLanguages;
  }

  public void setIdentifyMultipleLanguages(Boolean identifyMultipleLanguages) {
    this.identifyMultipleLanguages = identifyMultipleLanguages;
  }


  public StartTranscriptionJobRequest languageOptions(List languageOptions) {
    this.languageOptions = languageOptions;
    return this;
  }

  /**
   * Get languageOptions
   * @return languageOptions
   */
  @javax.annotation.Nullable
  public List getLanguageOptions() {
    return languageOptions;
  }

  public void setLanguageOptions(List languageOptions) {
    this.languageOptions = languageOptions;
  }


  public StartTranscriptionJobRequest subtitles(StartTranscriptionJobRequestSubtitles subtitles) {
    this.subtitles = subtitles;
    return this;
  }

  /**
   * Get subtitles
   * @return subtitles
   */
  @javax.annotation.Nullable
  public StartTranscriptionJobRequestSubtitles getSubtitles() {
    return subtitles;
  }

  public void setSubtitles(StartTranscriptionJobRequestSubtitles subtitles) {
    this.subtitles = subtitles;
  }


  public StartTranscriptionJobRequest tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public StartTranscriptionJobRequest languageIdSettings(Map languageIdSettings) {
    this.languageIdSettings = languageIdSettings;
    return this;
  }

  /**
   * Get languageIdSettings
   * @return languageIdSettings
   */
  @javax.annotation.Nullable
  public Map getLanguageIdSettings() {
    return languageIdSettings;
  }

  public void setLanguageIdSettings(Map languageIdSettings) {
    this.languageIdSettings = languageIdSettings;
  }


  public StartTranscriptionJobRequest toxicityDetection(List toxicityDetection) {
    this.toxicityDetection = toxicityDetection;
    return this;
  }

  /**
   * Get toxicityDetection
   * @return toxicityDetection
   */
  @javax.annotation.Nullable
  public List getToxicityDetection() {
    return toxicityDetection;
  }

  public void setToxicityDetection(List toxicityDetection) {
    this.toxicityDetection = toxicityDetection;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartTranscriptionJobRequest startTranscriptionJobRequest = (StartTranscriptionJobRequest) o;
    return Objects.equals(this.transcriptionJobName, startTranscriptionJobRequest.transcriptionJobName) &&
        Objects.equals(this.languageCode, startTranscriptionJobRequest.languageCode) &&
        Objects.equals(this.mediaSampleRateHertz, startTranscriptionJobRequest.mediaSampleRateHertz) &&
        Objects.equals(this.mediaFormat, startTranscriptionJobRequest.mediaFormat) &&
        Objects.equals(this.media, startTranscriptionJobRequest.media) &&
        Objects.equals(this.outputBucketName, startTranscriptionJobRequest.outputBucketName) &&
        Objects.equals(this.outputKey, startTranscriptionJobRequest.outputKey) &&
        Objects.equals(this.outputEncryptionKMSKeyId, startTranscriptionJobRequest.outputEncryptionKMSKeyId) &&
        Objects.equals(this.kmSEncryptionContext, startTranscriptionJobRequest.kmSEncryptionContext) &&
        Objects.equals(this.settings, startTranscriptionJobRequest.settings) &&
        Objects.equals(this.modelSettings, startTranscriptionJobRequest.modelSettings) &&
        Objects.equals(this.jobExecutionSettings, startTranscriptionJobRequest.jobExecutionSettings) &&
        Objects.equals(this.contentRedaction, startTranscriptionJobRequest.contentRedaction) &&
        Objects.equals(this.identifyLanguage, startTranscriptionJobRequest.identifyLanguage) &&
        Objects.equals(this.identifyMultipleLanguages, startTranscriptionJobRequest.identifyMultipleLanguages) &&
        Objects.equals(this.languageOptions, startTranscriptionJobRequest.languageOptions) &&
        Objects.equals(this.subtitles, startTranscriptionJobRequest.subtitles) &&
        Objects.equals(this.tags, startTranscriptionJobRequest.tags) &&
        Objects.equals(this.languageIdSettings, startTranscriptionJobRequest.languageIdSettings) &&
        Objects.equals(this.toxicityDetection, startTranscriptionJobRequest.toxicityDetection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transcriptionJobName, languageCode, mediaSampleRateHertz, mediaFormat, media, outputBucketName, outputKey, outputEncryptionKMSKeyId, kmSEncryptionContext, settings, modelSettings, jobExecutionSettings, contentRedaction, identifyLanguage, identifyMultipleLanguages, languageOptions, subtitles, tags, languageIdSettings, toxicityDetection);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartTranscriptionJobRequest {\n");
    sb.append("    transcriptionJobName: ").append(toIndentedString(transcriptionJobName)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    mediaSampleRateHertz: ").append(toIndentedString(mediaSampleRateHertz)).append("\n");
    sb.append("    mediaFormat: ").append(toIndentedString(mediaFormat)).append("\n");
    sb.append("    media: ").append(toIndentedString(media)).append("\n");
    sb.append("    outputBucketName: ").append(toIndentedString(outputBucketName)).append("\n");
    sb.append("    outputKey: ").append(toIndentedString(outputKey)).append("\n");
    sb.append("    outputEncryptionKMSKeyId: ").append(toIndentedString(outputEncryptionKMSKeyId)).append("\n");
    sb.append("    kmSEncryptionContext: ").append(toIndentedString(kmSEncryptionContext)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    modelSettings: ").append(toIndentedString(modelSettings)).append("\n");
    sb.append("    jobExecutionSettings: ").append(toIndentedString(jobExecutionSettings)).append("\n");
    sb.append("    contentRedaction: ").append(toIndentedString(contentRedaction)).append("\n");
    sb.append("    identifyLanguage: ").append(toIndentedString(identifyLanguage)).append("\n");
    sb.append("    identifyMultipleLanguages: ").append(toIndentedString(identifyMultipleLanguages)).append("\n");
    sb.append("    languageOptions: ").append(toIndentedString(languageOptions)).append("\n");
    sb.append("    subtitles: ").append(toIndentedString(subtitles)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    languageIdSettings: ").append(toIndentedString(languageIdSettings)).append("\n");
    sb.append("    toxicityDetection: ").append(toIndentedString(toxicityDetection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TranscriptionJobName");
    openapiFields.add("LanguageCode");
    openapiFields.add("MediaSampleRateHertz");
    openapiFields.add("MediaFormat");
    openapiFields.add("Media");
    openapiFields.add("OutputBucketName");
    openapiFields.add("OutputKey");
    openapiFields.add("OutputEncryptionKMSKeyId");
    openapiFields.add("KMSEncryptionContext");
    openapiFields.add("Settings");
    openapiFields.add("ModelSettings");
    openapiFields.add("JobExecutionSettings");
    openapiFields.add("ContentRedaction");
    openapiFields.add("IdentifyLanguage");
    openapiFields.add("IdentifyMultipleLanguages");
    openapiFields.add("LanguageOptions");
    openapiFields.add("Subtitles");
    openapiFields.add("Tags");
    openapiFields.add("LanguageIdSettings");
    openapiFields.add("ToxicityDetection");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("TranscriptionJobName");
    openapiRequiredFields.add("Media");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StartTranscriptionJobRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StartTranscriptionJobRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StartTranscriptionJobRequest is not found in the empty JSON string", StartTranscriptionJobRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StartTranscriptionJobRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StartTranscriptionJobRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StartTranscriptionJobRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `TranscriptionJobName`
      String.validateJsonElement(jsonObj.get("TranscriptionJobName"));
      // validate the optional field `LanguageCode`
      if (jsonObj.get("LanguageCode") != null && !jsonObj.get("LanguageCode").isJsonNull()) {
        LanguageCode.validateJsonElement(jsonObj.get("LanguageCode"));
      }
      // validate the optional field `MediaSampleRateHertz`
      if (jsonObj.get("MediaSampleRateHertz") != null && !jsonObj.get("MediaSampleRateHertz").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MediaSampleRateHertz"));
      }
      // validate the optional field `MediaFormat`
      if (jsonObj.get("MediaFormat") != null && !jsonObj.get("MediaFormat").isJsonNull()) {
        MediaFormat.validateJsonElement(jsonObj.get("MediaFormat"));
      }
      // validate the required field `Media`
      StartTranscriptionJobRequestMedia.validateJsonElement(jsonObj.get("Media"));
      // validate the optional field `OutputBucketName`
      if (jsonObj.get("OutputBucketName") != null && !jsonObj.get("OutputBucketName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OutputBucketName"));
      }
      // validate the optional field `OutputKey`
      if (jsonObj.get("OutputKey") != null && !jsonObj.get("OutputKey").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OutputKey"));
      }
      // validate the optional field `OutputEncryptionKMSKeyId`
      if (jsonObj.get("OutputEncryptionKMSKeyId") != null && !jsonObj.get("OutputEncryptionKMSKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OutputEncryptionKMSKeyId"));
      }
      // validate the optional field `KMSEncryptionContext`
      if (jsonObj.get("KMSEncryptionContext") != null && !jsonObj.get("KMSEncryptionContext").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("KMSEncryptionContext"));
      }
      // validate the optional field `Settings`
      if (jsonObj.get("Settings") != null && !jsonObj.get("Settings").isJsonNull()) {
        StartTranscriptionJobRequestSettings.validateJsonElement(jsonObj.get("Settings"));
      }
      // validate the optional field `ModelSettings`
      if (jsonObj.get("ModelSettings") != null && !jsonObj.get("ModelSettings").isJsonNull()) {
        StartTranscriptionJobRequestModelSettings.validateJsonElement(jsonObj.get("ModelSettings"));
      }
      // validate the optional field `JobExecutionSettings`
      if (jsonObj.get("JobExecutionSettings") != null && !jsonObj.get("JobExecutionSettings").isJsonNull()) {
        StartTranscriptionJobRequestJobExecutionSettings.validateJsonElement(jsonObj.get("JobExecutionSettings"));
      }
      // validate the optional field `ContentRedaction`
      if (jsonObj.get("ContentRedaction") != null && !jsonObj.get("ContentRedaction").isJsonNull()) {
        StartTranscriptionJobRequestContentRedaction.validateJsonElement(jsonObj.get("ContentRedaction"));
      }
      // validate the optional field `IdentifyLanguage`
      if (jsonObj.get("IdentifyLanguage") != null && !jsonObj.get("IdentifyLanguage").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IdentifyLanguage"));
      }
      // validate the optional field `IdentifyMultipleLanguages`
      if (jsonObj.get("IdentifyMultipleLanguages") != null && !jsonObj.get("IdentifyMultipleLanguages").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IdentifyMultipleLanguages"));
      }
      // validate the optional field `LanguageOptions`
      if (jsonObj.get("LanguageOptions") != null && !jsonObj.get("LanguageOptions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("LanguageOptions"));
      }
      // validate the optional field `Subtitles`
      if (jsonObj.get("Subtitles") != null && !jsonObj.get("Subtitles").isJsonNull()) {
        StartTranscriptionJobRequestSubtitles.validateJsonElement(jsonObj.get("Subtitles"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `LanguageIdSettings`
      if (jsonObj.get("LanguageIdSettings") != null && !jsonObj.get("LanguageIdSettings").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("LanguageIdSettings"));
      }
      // validate the optional field `ToxicityDetection`
      if (jsonObj.get("ToxicityDetection") != null && !jsonObj.get("ToxicityDetection").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ToxicityDetection"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StartTranscriptionJobRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StartTranscriptionJobRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StartTranscriptionJobRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StartTranscriptionJobRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<StartTranscriptionJobRequest>() {
           @Override
           public void write(JsonWriter out, StartTranscriptionJobRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StartTranscriptionJobRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StartTranscriptionJobRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StartTranscriptionJobRequest
   * @throws IOException if the JSON string is invalid with respect to StartTranscriptionJobRequest
   */
  public static StartTranscriptionJobRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StartTranscriptionJobRequest.class);
  }

  /**
   * Convert an instance of StartTranscriptionJobRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

