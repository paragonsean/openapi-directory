/*
 * Amazon Transcribe Service
 * <p>Amazon Transcribe offers three main types of batch transcription: <b>Standard</b>, <b>Medical</b>, and <b>Call Analytics</b>.</p> <ul> <li> <p> <b>Standard transcriptions</b> are the most common option. Refer to for details.</p> </li> <li> <p> <b>Medical transcriptions</b> are tailored to medical professionals and incorporate medical terms. A common use case for this service is transcribing doctor-patient dialogue into after-visit notes. Refer to for details.</p> </li> <li> <p> <b>Call Analytics transcriptions</b> are designed for use with call center audio on two different channels; if you're looking for insight into customer service calls, use this option. Refer to for details.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.StartCallAnalyticsJobRequestMedia;
import org.openapitools.client.model.StartCallAnalyticsJobRequestSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StartCallAnalyticsJobRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:23:53.580792-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StartCallAnalyticsJobRequest {
  public static final String SERIALIZED_NAME_CALL_ANALYTICS_JOB_NAME = "CallAnalyticsJobName";
  @SerializedName(SERIALIZED_NAME_CALL_ANALYTICS_JOB_NAME)
  private String callAnalyticsJobName;

  public static final String SERIALIZED_NAME_MEDIA = "Media";
  @SerializedName(SERIALIZED_NAME_MEDIA)
  private StartCallAnalyticsJobRequestMedia media;

  public static final String SERIALIZED_NAME_OUTPUT_LOCATION = "OutputLocation";
  @SerializedName(SERIALIZED_NAME_OUTPUT_LOCATION)
  private String outputLocation;

  public static final String SERIALIZED_NAME_OUTPUT_ENCRYPTION_K_M_S_KEY_ID = "OutputEncryptionKMSKeyId";
  @SerializedName(SERIALIZED_NAME_OUTPUT_ENCRYPTION_K_M_S_KEY_ID)
  private String outputEncryptionKMSKeyId;

  public static final String SERIALIZED_NAME_DATA_ACCESS_ROLE_ARN = "DataAccessRoleArn";
  @SerializedName(SERIALIZED_NAME_DATA_ACCESS_ROLE_ARN)
  private String dataAccessRoleArn;

  public static final String SERIALIZED_NAME_SETTINGS = "Settings";
  @SerializedName(SERIALIZED_NAME_SETTINGS)
  private StartCallAnalyticsJobRequestSettings settings;

  public static final String SERIALIZED_NAME_CHANNEL_DEFINITIONS = "ChannelDefinitions";
  @SerializedName(SERIALIZED_NAME_CHANNEL_DEFINITIONS)
  private List channelDefinitions;

  public StartCallAnalyticsJobRequest() {
  }

  public StartCallAnalyticsJobRequest callAnalyticsJobName(String callAnalyticsJobName) {
    this.callAnalyticsJobName = callAnalyticsJobName;
    return this;
  }

  /**
   * Get callAnalyticsJobName
   * @return callAnalyticsJobName
   */
  @javax.annotation.Nonnull
  public String getCallAnalyticsJobName() {
    return callAnalyticsJobName;
  }

  public void setCallAnalyticsJobName(String callAnalyticsJobName) {
    this.callAnalyticsJobName = callAnalyticsJobName;
  }


  public StartCallAnalyticsJobRequest media(StartCallAnalyticsJobRequestMedia media) {
    this.media = media;
    return this;
  }

  /**
   * Get media
   * @return media
   */
  @javax.annotation.Nonnull
  public StartCallAnalyticsJobRequestMedia getMedia() {
    return media;
  }

  public void setMedia(StartCallAnalyticsJobRequestMedia media) {
    this.media = media;
  }


  public StartCallAnalyticsJobRequest outputLocation(String outputLocation) {
    this.outputLocation = outputLocation;
    return this;
  }

  /**
   * Get outputLocation
   * @return outputLocation
   */
  @javax.annotation.Nullable
  public String getOutputLocation() {
    return outputLocation;
  }

  public void setOutputLocation(String outputLocation) {
    this.outputLocation = outputLocation;
  }


  public StartCallAnalyticsJobRequest outputEncryptionKMSKeyId(String outputEncryptionKMSKeyId) {
    this.outputEncryptionKMSKeyId = outputEncryptionKMSKeyId;
    return this;
  }

  /**
   * Get outputEncryptionKMSKeyId
   * @return outputEncryptionKMSKeyId
   */
  @javax.annotation.Nullable
  public String getOutputEncryptionKMSKeyId() {
    return outputEncryptionKMSKeyId;
  }

  public void setOutputEncryptionKMSKeyId(String outputEncryptionKMSKeyId) {
    this.outputEncryptionKMSKeyId = outputEncryptionKMSKeyId;
  }


  public StartCallAnalyticsJobRequest dataAccessRoleArn(String dataAccessRoleArn) {
    this.dataAccessRoleArn = dataAccessRoleArn;
    return this;
  }

  /**
   * Get dataAccessRoleArn
   * @return dataAccessRoleArn
   */
  @javax.annotation.Nullable
  public String getDataAccessRoleArn() {
    return dataAccessRoleArn;
  }

  public void setDataAccessRoleArn(String dataAccessRoleArn) {
    this.dataAccessRoleArn = dataAccessRoleArn;
  }


  public StartCallAnalyticsJobRequest settings(StartCallAnalyticsJobRequestSettings settings) {
    this.settings = settings;
    return this;
  }

  /**
   * Get settings
   * @return settings
   */
  @javax.annotation.Nullable
  public StartCallAnalyticsJobRequestSettings getSettings() {
    return settings;
  }

  public void setSettings(StartCallAnalyticsJobRequestSettings settings) {
    this.settings = settings;
  }


  public StartCallAnalyticsJobRequest channelDefinitions(List channelDefinitions) {
    this.channelDefinitions = channelDefinitions;
    return this;
  }

  /**
   * Get channelDefinitions
   * @return channelDefinitions
   */
  @javax.annotation.Nullable
  public List getChannelDefinitions() {
    return channelDefinitions;
  }

  public void setChannelDefinitions(List channelDefinitions) {
    this.channelDefinitions = channelDefinitions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartCallAnalyticsJobRequest startCallAnalyticsJobRequest = (StartCallAnalyticsJobRequest) o;
    return Objects.equals(this.callAnalyticsJobName, startCallAnalyticsJobRequest.callAnalyticsJobName) &&
        Objects.equals(this.media, startCallAnalyticsJobRequest.media) &&
        Objects.equals(this.outputLocation, startCallAnalyticsJobRequest.outputLocation) &&
        Objects.equals(this.outputEncryptionKMSKeyId, startCallAnalyticsJobRequest.outputEncryptionKMSKeyId) &&
        Objects.equals(this.dataAccessRoleArn, startCallAnalyticsJobRequest.dataAccessRoleArn) &&
        Objects.equals(this.settings, startCallAnalyticsJobRequest.settings) &&
        Objects.equals(this.channelDefinitions, startCallAnalyticsJobRequest.channelDefinitions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callAnalyticsJobName, media, outputLocation, outputEncryptionKMSKeyId, dataAccessRoleArn, settings, channelDefinitions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartCallAnalyticsJobRequest {\n");
    sb.append("    callAnalyticsJobName: ").append(toIndentedString(callAnalyticsJobName)).append("\n");
    sb.append("    media: ").append(toIndentedString(media)).append("\n");
    sb.append("    outputLocation: ").append(toIndentedString(outputLocation)).append("\n");
    sb.append("    outputEncryptionKMSKeyId: ").append(toIndentedString(outputEncryptionKMSKeyId)).append("\n");
    sb.append("    dataAccessRoleArn: ").append(toIndentedString(dataAccessRoleArn)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    channelDefinitions: ").append(toIndentedString(channelDefinitions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CallAnalyticsJobName");
    openapiFields.add("Media");
    openapiFields.add("OutputLocation");
    openapiFields.add("OutputEncryptionKMSKeyId");
    openapiFields.add("DataAccessRoleArn");
    openapiFields.add("Settings");
    openapiFields.add("ChannelDefinitions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("CallAnalyticsJobName");
    openapiRequiredFields.add("Media");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StartCallAnalyticsJobRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StartCallAnalyticsJobRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StartCallAnalyticsJobRequest is not found in the empty JSON string", StartCallAnalyticsJobRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StartCallAnalyticsJobRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StartCallAnalyticsJobRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StartCallAnalyticsJobRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `CallAnalyticsJobName`
      String.validateJsonElement(jsonObj.get("CallAnalyticsJobName"));
      // validate the required field `Media`
      StartCallAnalyticsJobRequestMedia.validateJsonElement(jsonObj.get("Media"));
      // validate the optional field `OutputLocation`
      if (jsonObj.get("OutputLocation") != null && !jsonObj.get("OutputLocation").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OutputLocation"));
      }
      // validate the optional field `OutputEncryptionKMSKeyId`
      if (jsonObj.get("OutputEncryptionKMSKeyId") != null && !jsonObj.get("OutputEncryptionKMSKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OutputEncryptionKMSKeyId"));
      }
      // validate the optional field `DataAccessRoleArn`
      if (jsonObj.get("DataAccessRoleArn") != null && !jsonObj.get("DataAccessRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DataAccessRoleArn"));
      }
      // validate the optional field `Settings`
      if (jsonObj.get("Settings") != null && !jsonObj.get("Settings").isJsonNull()) {
        StartCallAnalyticsJobRequestSettings.validateJsonElement(jsonObj.get("Settings"));
      }
      // validate the optional field `ChannelDefinitions`
      if (jsonObj.get("ChannelDefinitions") != null && !jsonObj.get("ChannelDefinitions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ChannelDefinitions"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StartCallAnalyticsJobRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StartCallAnalyticsJobRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StartCallAnalyticsJobRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StartCallAnalyticsJobRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<StartCallAnalyticsJobRequest>() {
           @Override
           public void write(JsonWriter out, StartCallAnalyticsJobRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StartCallAnalyticsJobRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StartCallAnalyticsJobRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StartCallAnalyticsJobRequest
   * @throws IOException if the JSON string is invalid with respect to StartCallAnalyticsJobRequest
   */
  public static StartCallAnalyticsJobRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StartCallAnalyticsJobRequest.class);
  }

  /**
   * Convert an instance of StartCallAnalyticsJobRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

