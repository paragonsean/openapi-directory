/*
 * Amazon Transcribe Service
 * <p>Amazon Transcribe offers three main types of batch transcription: <b>Standard</b>, <b>Medical</b>, and <b>Call Analytics</b>.</p> <ul> <li> <p> <b>Standard transcriptions</b> are the most common option. Refer to for details.</p> </li> <li> <p> <b>Medical transcriptions</b> are tailored to medical professionals and incorporate medical terms. A common use case for this service is transcribing doctor-patient dialogue into after-visit notes. Refer to for details.</p> </li> <li> <p> <b>Call Analytics transcriptions</b> are designed for use with call center audio on two different channels; if you're looking for insight into customer service calls, use this option. Refer to for details.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ParticipantRole;
import org.openapitools.client.model.SentimentFilterAbsoluteTimeRange;
import org.openapitools.client.model.SentimentFilterRelativeTimeRange;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for RuleSentimentFilter
 */
public class RuleSentimentFilterTest {
    private final RuleSentimentFilter model = new RuleSentimentFilter();

    /**
     * Model tests for RuleSentimentFilter
     */
    @Test
    public void testRuleSentimentFilter() {
        // TODO: test RuleSentimentFilter
    }

    /**
     * Test the property 'sentiments'
     */
    @Test
    public void sentimentsTest() {
        // TODO: test sentiments
    }

    /**
     * Test the property 'absoluteTimeRange'
     */
    @Test
    public void absoluteTimeRangeTest() {
        // TODO: test absoluteTimeRange
    }

    /**
     * Test the property 'relativeTimeRange'
     */
    @Test
    public void relativeTimeRangeTest() {
        // TODO: test relativeTimeRange
    }

    /**
     * Test the property 'participantRole'
     */
    @Test
    public void participantRoleTest() {
        // TODO: test participantRole
    }

    /**
     * Test the property 'negate'
     */
    @Test
    public void negateTest() {
        // TODO: test negate
    }

}
