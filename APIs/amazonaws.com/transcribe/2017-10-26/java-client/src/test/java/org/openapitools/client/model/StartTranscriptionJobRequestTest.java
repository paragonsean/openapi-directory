/*
 * Amazon Transcribe Service
 * <p>Amazon Transcribe offers three main types of batch transcription: <b>Standard</b>, <b>Medical</b>, and <b>Call Analytics</b>.</p> <ul> <li> <p> <b>Standard transcriptions</b> are the most common option. Refer to for details.</p> </li> <li> <p> <b>Medical transcriptions</b> are tailored to medical professionals and incorporate medical terms. A common use case for this service is transcribing doctor-patient dialogue into after-visit notes. Refer to for details.</p> </li> <li> <p> <b>Call Analytics transcriptions</b> are designed for use with call center audio on two different channels; if you're looking for insight into customer service calls, use this option. Refer to for details.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.LanguageCode;
import org.openapitools.client.model.MediaFormat;
import org.openapitools.client.model.StartTranscriptionJobRequestContentRedaction;
import org.openapitools.client.model.StartTranscriptionJobRequestJobExecutionSettings;
import org.openapitools.client.model.StartTranscriptionJobRequestMedia;
import org.openapitools.client.model.StartTranscriptionJobRequestModelSettings;
import org.openapitools.client.model.StartTranscriptionJobRequestSettings;
import org.openapitools.client.model.StartTranscriptionJobRequestSubtitles;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for StartTranscriptionJobRequest
 */
public class StartTranscriptionJobRequestTest {
    private final StartTranscriptionJobRequest model = new StartTranscriptionJobRequest();

    /**
     * Model tests for StartTranscriptionJobRequest
     */
    @Test
    public void testStartTranscriptionJobRequest() {
        // TODO: test StartTranscriptionJobRequest
    }

    /**
     * Test the property 'transcriptionJobName'
     */
    @Test
    public void transcriptionJobNameTest() {
        // TODO: test transcriptionJobName
    }

    /**
     * Test the property 'languageCode'
     */
    @Test
    public void languageCodeTest() {
        // TODO: test languageCode
    }

    /**
     * Test the property 'mediaSampleRateHertz'
     */
    @Test
    public void mediaSampleRateHertzTest() {
        // TODO: test mediaSampleRateHertz
    }

    /**
     * Test the property 'mediaFormat'
     */
    @Test
    public void mediaFormatTest() {
        // TODO: test mediaFormat
    }

    /**
     * Test the property 'media'
     */
    @Test
    public void mediaTest() {
        // TODO: test media
    }

    /**
     * Test the property 'outputBucketName'
     */
    @Test
    public void outputBucketNameTest() {
        // TODO: test outputBucketName
    }

    /**
     * Test the property 'outputKey'
     */
    @Test
    public void outputKeyTest() {
        // TODO: test outputKey
    }

    /**
     * Test the property 'outputEncryptionKMSKeyId'
     */
    @Test
    public void outputEncryptionKMSKeyIdTest() {
        // TODO: test outputEncryptionKMSKeyId
    }

    /**
     * Test the property 'kmSEncryptionContext'
     */
    @Test
    public void kmSEncryptionContextTest() {
        // TODO: test kmSEncryptionContext
    }

    /**
     * Test the property 'settings'
     */
    @Test
    public void settingsTest() {
        // TODO: test settings
    }

    /**
     * Test the property 'modelSettings'
     */
    @Test
    public void modelSettingsTest() {
        // TODO: test modelSettings
    }

    /**
     * Test the property 'jobExecutionSettings'
     */
    @Test
    public void jobExecutionSettingsTest() {
        // TODO: test jobExecutionSettings
    }

    /**
     * Test the property 'contentRedaction'
     */
    @Test
    public void contentRedactionTest() {
        // TODO: test contentRedaction
    }

    /**
     * Test the property 'identifyLanguage'
     */
    @Test
    public void identifyLanguageTest() {
        // TODO: test identifyLanguage
    }

    /**
     * Test the property 'identifyMultipleLanguages'
     */
    @Test
    public void identifyMultipleLanguagesTest() {
        // TODO: test identifyMultipleLanguages
    }

    /**
     * Test the property 'languageOptions'
     */
    @Test
    public void languageOptionsTest() {
        // TODO: test languageOptions
    }

    /**
     * Test the property 'subtitles'
     */
    @Test
    public void subtitlesTest() {
        // TODO: test subtitles
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'languageIdSettings'
     */
    @Test
    public void languageIdSettingsTest() {
        // TODO: test languageIdSettings
    }

    /**
     * Test the property 'toxicityDetection'
     */
    @Test
    public void toxicityDetectionTest() {
        // TODO: test toxicityDetection
    }

}
