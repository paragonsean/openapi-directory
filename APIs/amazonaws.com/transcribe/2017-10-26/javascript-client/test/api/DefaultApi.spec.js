/**
 * Amazon Transcribe Service
 * <p>Amazon Transcribe offers three main types of batch transcription: <b>Standard</b>, <b>Medical</b>, and <b>Call Analytics</b>.</p> <ul> <li> <p> <b>Standard transcriptions</b> are the most common option. Refer to for details.</p> </li> <li> <p> <b>Medical transcriptions</b> are tailored to medical professionals and incorporate medical terms. A common use case for this service is transcribing doctor-patient dialogue into after-visit notes. Refer to for details.</p> </li> <li> <p> <b>Call Analytics transcriptions</b> are designed for use with call center audio on two different channels; if you're looking for insight into customer service calls, use this option. Refer to for details.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonTranscribeService);
  }
}(this, function(expect, AmazonTranscribeService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonTranscribeService.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('createCallAnalyticsCategory', function() {
      it('should call createCallAnalyticsCategory successfully', function(done) {
        //uncomment below and update the code to test createCallAnalyticsCategory
        //instance.createCallAnalyticsCategory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLanguageModel', function() {
      it('should call createLanguageModel successfully', function(done) {
        //uncomment below and update the code to test createLanguageModel
        //instance.createLanguageModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMedicalVocabulary', function() {
      it('should call createMedicalVocabulary successfully', function(done) {
        //uncomment below and update the code to test createMedicalVocabulary
        //instance.createMedicalVocabulary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createVocabulary', function() {
      it('should call createVocabulary successfully', function(done) {
        //uncomment below and update the code to test createVocabulary
        //instance.createVocabulary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createVocabularyFilter', function() {
      it('should call createVocabularyFilter successfully', function(done) {
        //uncomment below and update the code to test createVocabularyFilter
        //instance.createVocabularyFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCallAnalyticsCategory', function() {
      it('should call deleteCallAnalyticsCategory successfully', function(done) {
        //uncomment below and update the code to test deleteCallAnalyticsCategory
        //instance.deleteCallAnalyticsCategory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCallAnalyticsJob', function() {
      it('should call deleteCallAnalyticsJob successfully', function(done) {
        //uncomment below and update the code to test deleteCallAnalyticsJob
        //instance.deleteCallAnalyticsJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLanguageModel', function() {
      it('should call deleteLanguageModel successfully', function(done) {
        //uncomment below and update the code to test deleteLanguageModel
        //instance.deleteLanguageModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMedicalTranscriptionJob', function() {
      it('should call deleteMedicalTranscriptionJob successfully', function(done) {
        //uncomment below and update the code to test deleteMedicalTranscriptionJob
        //instance.deleteMedicalTranscriptionJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMedicalVocabulary', function() {
      it('should call deleteMedicalVocabulary successfully', function(done) {
        //uncomment below and update the code to test deleteMedicalVocabulary
        //instance.deleteMedicalVocabulary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTranscriptionJob', function() {
      it('should call deleteTranscriptionJob successfully', function(done) {
        //uncomment below and update the code to test deleteTranscriptionJob
        //instance.deleteTranscriptionJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVocabulary', function() {
      it('should call deleteVocabulary successfully', function(done) {
        //uncomment below and update the code to test deleteVocabulary
        //instance.deleteVocabulary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVocabularyFilter', function() {
      it('should call deleteVocabularyFilter successfully', function(done) {
        //uncomment below and update the code to test deleteVocabularyFilter
        //instance.deleteVocabularyFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeLanguageModel', function() {
      it('should call describeLanguageModel successfully', function(done) {
        //uncomment below and update the code to test describeLanguageModel
        //instance.describeLanguageModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCallAnalyticsCategory', function() {
      it('should call getCallAnalyticsCategory successfully', function(done) {
        //uncomment below and update the code to test getCallAnalyticsCategory
        //instance.getCallAnalyticsCategory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCallAnalyticsJob', function() {
      it('should call getCallAnalyticsJob successfully', function(done) {
        //uncomment below and update the code to test getCallAnalyticsJob
        //instance.getCallAnalyticsJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMedicalTranscriptionJob', function() {
      it('should call getMedicalTranscriptionJob successfully', function(done) {
        //uncomment below and update the code to test getMedicalTranscriptionJob
        //instance.getMedicalTranscriptionJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMedicalVocabulary', function() {
      it('should call getMedicalVocabulary successfully', function(done) {
        //uncomment below and update the code to test getMedicalVocabulary
        //instance.getMedicalVocabulary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTranscriptionJob', function() {
      it('should call getTranscriptionJob successfully', function(done) {
        //uncomment below and update the code to test getTranscriptionJob
        //instance.getTranscriptionJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVocabulary', function() {
      it('should call getVocabulary successfully', function(done) {
        //uncomment below and update the code to test getVocabulary
        //instance.getVocabulary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVocabularyFilter', function() {
      it('should call getVocabularyFilter successfully', function(done) {
        //uncomment below and update the code to test getVocabularyFilter
        //instance.getVocabularyFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCallAnalyticsCategories', function() {
      it('should call listCallAnalyticsCategories successfully', function(done) {
        //uncomment below and update the code to test listCallAnalyticsCategories
        //instance.listCallAnalyticsCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCallAnalyticsJobs', function() {
      it('should call listCallAnalyticsJobs successfully', function(done) {
        //uncomment below and update the code to test listCallAnalyticsJobs
        //instance.listCallAnalyticsJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLanguageModels', function() {
      it('should call listLanguageModels successfully', function(done) {
        //uncomment below and update the code to test listLanguageModels
        //instance.listLanguageModels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMedicalTranscriptionJobs', function() {
      it('should call listMedicalTranscriptionJobs successfully', function(done) {
        //uncomment below and update the code to test listMedicalTranscriptionJobs
        //instance.listMedicalTranscriptionJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMedicalVocabularies', function() {
      it('should call listMedicalVocabularies successfully', function(done) {
        //uncomment below and update the code to test listMedicalVocabularies
        //instance.listMedicalVocabularies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTranscriptionJobs', function() {
      it('should call listTranscriptionJobs successfully', function(done) {
        //uncomment below and update the code to test listTranscriptionJobs
        //instance.listTranscriptionJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listVocabularies', function() {
      it('should call listVocabularies successfully', function(done) {
        //uncomment below and update the code to test listVocabularies
        //instance.listVocabularies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listVocabularyFilters', function() {
      it('should call listVocabularyFilters successfully', function(done) {
        //uncomment below and update the code to test listVocabularyFilters
        //instance.listVocabularyFilters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startCallAnalyticsJob', function() {
      it('should call startCallAnalyticsJob successfully', function(done) {
        //uncomment below and update the code to test startCallAnalyticsJob
        //instance.startCallAnalyticsJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startMedicalTranscriptionJob', function() {
      it('should call startMedicalTranscriptionJob successfully', function(done) {
        //uncomment below and update the code to test startMedicalTranscriptionJob
        //instance.startMedicalTranscriptionJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startTranscriptionJob', function() {
      it('should call startTranscriptionJob successfully', function(done) {
        //uncomment below and update the code to test startTranscriptionJob
        //instance.startTranscriptionJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCallAnalyticsCategory', function() {
      it('should call updateCallAnalyticsCategory successfully', function(done) {
        //uncomment below and update the code to test updateCallAnalyticsCategory
        //instance.updateCallAnalyticsCategory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMedicalVocabulary', function() {
      it('should call updateMedicalVocabulary successfully', function(done) {
        //uncomment below and update the code to test updateMedicalVocabulary
        //instance.updateMedicalVocabulary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVocabulary', function() {
      it('should call updateVocabulary successfully', function(done) {
        //uncomment below and update the code to test updateVocabulary
        //instance.updateVocabulary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVocabularyFilter', function() {
      it('should call updateVocabularyFilter successfully', function(done) {
        //uncomment below and update the code to test updateVocabularyFilter
        //instance.updateVocabularyFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
