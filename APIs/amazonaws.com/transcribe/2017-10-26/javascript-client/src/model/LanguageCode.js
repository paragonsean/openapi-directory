/**
 * Amazon Transcribe Service
 * <p>Amazon Transcribe offers three main types of batch transcription: <b>Standard</b>, <b>Medical</b>, and <b>Call Analytics</b>.</p> <ul> <li> <p> <b>Standard transcriptions</b> are the most common option. Refer to for details.</p> </li> <li> <p> <b>Medical transcriptions</b> are tailored to medical professionals and incorporate medical terms. A common use case for this service is transcribing doctor-patient dialogue into after-visit notes. Refer to for details.</p> </li> <li> <p> <b>Call Analytics transcriptions</b> are designed for use with call center audio on two different channels; if you're looking for insight into customer service calls, use this option. Refer to for details.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class LanguageCode.
* @enum {}
* @readonly
*/
export default class LanguageCode {
    
        /**
         * value: "af-ZA"
         * @const
         */
        "af-ZA" = "af-ZA";

    
        /**
         * value: "ar-AE"
         * @const
         */
        "ar-AE" = "ar-AE";

    
        /**
         * value: "ar-SA"
         * @const
         */
        "ar-SA" = "ar-SA";

    
        /**
         * value: "da-DK"
         * @const
         */
        "da-DK" = "da-DK";

    
        /**
         * value: "de-CH"
         * @const
         */
        "de-CH" = "de-CH";

    
        /**
         * value: "de-DE"
         * @const
         */
        "de-DE" = "de-DE";

    
        /**
         * value: "en-AB"
         * @const
         */
        "en-AB" = "en-AB";

    
        /**
         * value: "en-AU"
         * @const
         */
        "en-AU" = "en-AU";

    
        /**
         * value: "en-GB"
         * @const
         */
        "en-GB" = "en-GB";

    
        /**
         * value: "en-IE"
         * @const
         */
        "en-IE" = "en-IE";

    
        /**
         * value: "en-IN"
         * @const
         */
        "en-IN" = "en-IN";

    
        /**
         * value: "en-US"
         * @const
         */
        "en-US" = "en-US";

    
        /**
         * value: "en-WL"
         * @const
         */
        "en-WL" = "en-WL";

    
        /**
         * value: "es-ES"
         * @const
         */
        "es-ES" = "es-ES";

    
        /**
         * value: "es-US"
         * @const
         */
        "es-US" = "es-US";

    
        /**
         * value: "fa-IR"
         * @const
         */
        "fa-IR" = "fa-IR";

    
        /**
         * value: "fr-CA"
         * @const
         */
        "fr-CA" = "fr-CA";

    
        /**
         * value: "fr-FR"
         * @const
         */
        "fr-FR" = "fr-FR";

    
        /**
         * value: "he-IL"
         * @const
         */
        "he-IL" = "he-IL";

    
        /**
         * value: "hi-IN"
         * @const
         */
        "hi-IN" = "hi-IN";

    
        /**
         * value: "id-ID"
         * @const
         */
        "id-ID" = "id-ID";

    
        /**
         * value: "it-IT"
         * @const
         */
        "it-IT" = "it-IT";

    
        /**
         * value: "ja-JP"
         * @const
         */
        "ja-JP" = "ja-JP";

    
        /**
         * value: "ko-KR"
         * @const
         */
        "ko-KR" = "ko-KR";

    
        /**
         * value: "ms-MY"
         * @const
         */
        "ms-MY" = "ms-MY";

    
        /**
         * value: "nl-NL"
         * @const
         */
        "nl-NL" = "nl-NL";

    
        /**
         * value: "pt-BR"
         * @const
         */
        "pt-BR" = "pt-BR";

    
        /**
         * value: "pt-PT"
         * @const
         */
        "pt-PT" = "pt-PT";

    
        /**
         * value: "ru-RU"
         * @const
         */
        "ru-RU" = "ru-RU";

    
        /**
         * value: "ta-IN"
         * @const
         */
        "ta-IN" = "ta-IN";

    
        /**
         * value: "te-IN"
         * @const
         */
        "te-IN" = "te-IN";

    
        /**
         * value: "tr-TR"
         * @const
         */
        "tr-TR" = "tr-TR";

    
        /**
         * value: "zh-CN"
         * @const
         */
        "zh-CN" = "zh-CN";

    
        /**
         * value: "zh-TW"
         * @const
         */
        "zh-TW" = "zh-TW";

    
        /**
         * value: "th-TH"
         * @const
         */
        "th-TH" = "th-TH";

    
        /**
         * value: "en-ZA"
         * @const
         */
        "en-ZA" = "en-ZA";

    
        /**
         * value: "en-NZ"
         * @const
         */
        "en-NZ" = "en-NZ";

    
        /**
         * value: "vi-VN"
         * @const
         */
        "vi-VN" = "vi-VN";

    
        /**
         * value: "sv-SE"
         * @const
         */
        "sv-SE" = "sv-SE";

    

    /**
    * Returns a <code>LanguageCode</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/LanguageCode} The enum <code>LanguageCode</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

