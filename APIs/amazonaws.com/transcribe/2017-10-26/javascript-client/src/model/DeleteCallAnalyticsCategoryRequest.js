/**
 * Amazon Transcribe Service
 * <p>Amazon Transcribe offers three main types of batch transcription: <b>Standard</b>, <b>Medical</b>, and <b>Call Analytics</b>.</p> <ul> <li> <p> <b>Standard transcriptions</b> are the most common option. Refer to for details.</p> </li> <li> <p> <b>Medical transcriptions</b> are tailored to medical professionals and incorporate medical terms. A common use case for this service is transcribing doctor-patient dialogue into after-visit notes. Refer to for details.</p> </li> <li> <p> <b>Call Analytics transcriptions</b> are designed for use with call center audio on two different channels; if you're looking for insight into customer service calls, use this option. Refer to for details.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeleteCallAnalyticsCategoryRequest model module.
 * @module model/DeleteCallAnalyticsCategoryRequest
 * @version 2017-10-26
 */
class DeleteCallAnalyticsCategoryRequest {
    /**
     * Constructs a new <code>DeleteCallAnalyticsCategoryRequest</code>.
     * @alias module:model/DeleteCallAnalyticsCategoryRequest
     * @param categoryName {String} 
     */
    constructor(categoryName) { 
        
        DeleteCallAnalyticsCategoryRequest.initialize(this, categoryName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, categoryName) { 
        obj['CategoryName'] = categoryName;
    }

    /**
     * Constructs a <code>DeleteCallAnalyticsCategoryRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeleteCallAnalyticsCategoryRequest} obj Optional instance to populate.
     * @return {module:model/DeleteCallAnalyticsCategoryRequest} The populated <code>DeleteCallAnalyticsCategoryRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeleteCallAnalyticsCategoryRequest();

            if (data.hasOwnProperty('CategoryName')) {
                obj['CategoryName'] = ApiClient.convertToType(data['CategoryName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeleteCallAnalyticsCategoryRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeleteCallAnalyticsCategoryRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeleteCallAnalyticsCategoryRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CategoryName`
        if (data['CategoryName']) { // data not null
          String.validateJSON(data['CategoryName']);
        }

        return true;
    }


}

DeleteCallAnalyticsCategoryRequest.RequiredProperties = ["CategoryName"];

/**
 * @member {String} CategoryName
 */
DeleteCallAnalyticsCategoryRequest.prototype['CategoryName'] = undefined;






export default DeleteCallAnalyticsCategoryRequest;

