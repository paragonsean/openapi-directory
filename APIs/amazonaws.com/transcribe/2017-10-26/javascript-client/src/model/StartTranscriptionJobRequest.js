/**
 * Amazon Transcribe Service
 * <p>Amazon Transcribe offers three main types of batch transcription: <b>Standard</b>, <b>Medical</b>, and <b>Call Analytics</b>.</p> <ul> <li> <p> <b>Standard transcriptions</b> are the most common option. Refer to for details.</p> </li> <li> <p> <b>Medical transcriptions</b> are tailored to medical professionals and incorporate medical terms. A common use case for this service is transcribing doctor-patient dialogue into after-visit notes. Refer to for details.</p> </li> <li> <p> <b>Call Analytics transcriptions</b> are designed for use with call center audio on two different channels; if you're looking for insight into customer service calls, use this option. Refer to for details.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LanguageCode from './LanguageCode';
import MediaFormat from './MediaFormat';
import StartTranscriptionJobRequestContentRedaction from './StartTranscriptionJobRequestContentRedaction';
import StartTranscriptionJobRequestJobExecutionSettings from './StartTranscriptionJobRequestJobExecutionSettings';
import StartTranscriptionJobRequestMedia from './StartTranscriptionJobRequestMedia';
import StartTranscriptionJobRequestModelSettings from './StartTranscriptionJobRequestModelSettings';
import StartTranscriptionJobRequestSettings from './StartTranscriptionJobRequestSettings';
import StartTranscriptionJobRequestSubtitles from './StartTranscriptionJobRequestSubtitles';

/**
 * The StartTranscriptionJobRequest model module.
 * @module model/StartTranscriptionJobRequest
 * @version 2017-10-26
 */
class StartTranscriptionJobRequest {
    /**
     * Constructs a new <code>StartTranscriptionJobRequest</code>.
     * @alias module:model/StartTranscriptionJobRequest
     * @param transcriptionJobName {String} 
     * @param media {module:model/StartTranscriptionJobRequestMedia} 
     */
    constructor(transcriptionJobName, media) { 
        
        StartTranscriptionJobRequest.initialize(this, transcriptionJobName, media);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, transcriptionJobName, media) { 
        obj['TranscriptionJobName'] = transcriptionJobName;
        obj['Media'] = media;
    }

    /**
     * Constructs a <code>StartTranscriptionJobRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StartTranscriptionJobRequest} obj Optional instance to populate.
     * @return {module:model/StartTranscriptionJobRequest} The populated <code>StartTranscriptionJobRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StartTranscriptionJobRequest();

            if (data.hasOwnProperty('TranscriptionJobName')) {
                obj['TranscriptionJobName'] = ApiClient.convertToType(data['TranscriptionJobName'], 'String');
            }
            if (data.hasOwnProperty('LanguageCode')) {
                obj['LanguageCode'] = ApiClient.convertToType(data['LanguageCode'], LanguageCode);
            }
            if (data.hasOwnProperty('MediaSampleRateHertz')) {
                obj['MediaSampleRateHertz'] = ApiClient.convertToType(data['MediaSampleRateHertz'], 'Number');
            }
            if (data.hasOwnProperty('MediaFormat')) {
                obj['MediaFormat'] = ApiClient.convertToType(data['MediaFormat'], MediaFormat);
            }
            if (data.hasOwnProperty('Media')) {
                obj['Media'] = StartTranscriptionJobRequestMedia.constructFromObject(data['Media']);
            }
            if (data.hasOwnProperty('OutputBucketName')) {
                obj['OutputBucketName'] = ApiClient.convertToType(data['OutputBucketName'], 'String');
            }
            if (data.hasOwnProperty('OutputKey')) {
                obj['OutputKey'] = ApiClient.convertToType(data['OutputKey'], 'String');
            }
            if (data.hasOwnProperty('OutputEncryptionKMSKeyId')) {
                obj['OutputEncryptionKMSKeyId'] = ApiClient.convertToType(data['OutputEncryptionKMSKeyId'], 'String');
            }
            if (data.hasOwnProperty('KMSEncryptionContext')) {
                obj['KMSEncryptionContext'] = ApiClient.convertToType(data['KMSEncryptionContext'], Object);
            }
            if (data.hasOwnProperty('Settings')) {
                obj['Settings'] = StartTranscriptionJobRequestSettings.constructFromObject(data['Settings']);
            }
            if (data.hasOwnProperty('ModelSettings')) {
                obj['ModelSettings'] = StartTranscriptionJobRequestModelSettings.constructFromObject(data['ModelSettings']);
            }
            if (data.hasOwnProperty('JobExecutionSettings')) {
                obj['JobExecutionSettings'] = StartTranscriptionJobRequestJobExecutionSettings.constructFromObject(data['JobExecutionSettings']);
            }
            if (data.hasOwnProperty('ContentRedaction')) {
                obj['ContentRedaction'] = StartTranscriptionJobRequestContentRedaction.constructFromObject(data['ContentRedaction']);
            }
            if (data.hasOwnProperty('IdentifyLanguage')) {
                obj['IdentifyLanguage'] = ApiClient.convertToType(data['IdentifyLanguage'], 'Boolean');
            }
            if (data.hasOwnProperty('IdentifyMultipleLanguages')) {
                obj['IdentifyMultipleLanguages'] = ApiClient.convertToType(data['IdentifyMultipleLanguages'], 'Boolean');
            }
            if (data.hasOwnProperty('LanguageOptions')) {
                obj['LanguageOptions'] = ApiClient.convertToType(data['LanguageOptions'], Array);
            }
            if (data.hasOwnProperty('Subtitles')) {
                obj['Subtitles'] = StartTranscriptionJobRequestSubtitles.constructFromObject(data['Subtitles']);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
            if (data.hasOwnProperty('LanguageIdSettings')) {
                obj['LanguageIdSettings'] = ApiClient.convertToType(data['LanguageIdSettings'], Object);
            }
            if (data.hasOwnProperty('ToxicityDetection')) {
                obj['ToxicityDetection'] = ApiClient.convertToType(data['ToxicityDetection'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StartTranscriptionJobRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StartTranscriptionJobRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StartTranscriptionJobRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `TranscriptionJobName`
        if (data['TranscriptionJobName']) { // data not null
          String.validateJSON(data['TranscriptionJobName']);
        }
        // validate the optional field `LanguageCode`
        if (data['LanguageCode']) { // data not null
          LanguageCode.validateJSON(data['LanguageCode']);
        }
        // validate the optional field `MediaSampleRateHertz`
        if (data['MediaSampleRateHertz']) { // data not null
          Number.validateJSON(data['MediaSampleRateHertz']);
        }
        // validate the optional field `MediaFormat`
        if (data['MediaFormat']) { // data not null
          MediaFormat.validateJSON(data['MediaFormat']);
        }
        // validate the optional field `Media`
        if (data['Media']) { // data not null
          StartTranscriptionJobRequestMedia.validateJSON(data['Media']);
        }
        // validate the optional field `OutputBucketName`
        if (data['OutputBucketName']) { // data not null
          String.validateJSON(data['OutputBucketName']);
        }
        // validate the optional field `OutputKey`
        if (data['OutputKey']) { // data not null
          String.validateJSON(data['OutputKey']);
        }
        // validate the optional field `OutputEncryptionKMSKeyId`
        if (data['OutputEncryptionKMSKeyId']) { // data not null
          String.validateJSON(data['OutputEncryptionKMSKeyId']);
        }
        // validate the optional field `KMSEncryptionContext`
        if (data['KMSEncryptionContext']) { // data not null
          Object.validateJSON(data['KMSEncryptionContext']);
        }
        // validate the optional field `Settings`
        if (data['Settings']) { // data not null
          StartTranscriptionJobRequestSettings.validateJSON(data['Settings']);
        }
        // validate the optional field `ModelSettings`
        if (data['ModelSettings']) { // data not null
          StartTranscriptionJobRequestModelSettings.validateJSON(data['ModelSettings']);
        }
        // validate the optional field `JobExecutionSettings`
        if (data['JobExecutionSettings']) { // data not null
          StartTranscriptionJobRequestJobExecutionSettings.validateJSON(data['JobExecutionSettings']);
        }
        // validate the optional field `ContentRedaction`
        if (data['ContentRedaction']) { // data not null
          StartTranscriptionJobRequestContentRedaction.validateJSON(data['ContentRedaction']);
        }
        // validate the optional field `IdentifyLanguage`
        if (data['IdentifyLanguage']) { // data not null
          Boolean.validateJSON(data['IdentifyLanguage']);
        }
        // validate the optional field `IdentifyMultipleLanguages`
        if (data['IdentifyMultipleLanguages']) { // data not null
          Boolean.validateJSON(data['IdentifyMultipleLanguages']);
        }
        // validate the optional field `LanguageOptions`
        if (data['LanguageOptions']) { // data not null
          Array.validateJSON(data['LanguageOptions']);
        }
        // validate the optional field `Subtitles`
        if (data['Subtitles']) { // data not null
          StartTranscriptionJobRequestSubtitles.validateJSON(data['Subtitles']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }
        // validate the optional field `LanguageIdSettings`
        if (data['LanguageIdSettings']) { // data not null
          Object.validateJSON(data['LanguageIdSettings']);
        }
        // validate the optional field `ToxicityDetection`
        if (data['ToxicityDetection']) { // data not null
          Array.validateJSON(data['ToxicityDetection']);
        }

        return true;
    }


}

StartTranscriptionJobRequest.RequiredProperties = ["TranscriptionJobName", "Media"];

/**
 * @member {String} TranscriptionJobName
 */
StartTranscriptionJobRequest.prototype['TranscriptionJobName'] = undefined;

/**
 * @member {module:model/LanguageCode} LanguageCode
 */
StartTranscriptionJobRequest.prototype['LanguageCode'] = undefined;

/**
 * @member {Number} MediaSampleRateHertz
 */
StartTranscriptionJobRequest.prototype['MediaSampleRateHertz'] = undefined;

/**
 * @member {module:model/MediaFormat} MediaFormat
 */
StartTranscriptionJobRequest.prototype['MediaFormat'] = undefined;

/**
 * @member {module:model/StartTranscriptionJobRequestMedia} Media
 */
StartTranscriptionJobRequest.prototype['Media'] = undefined;

/**
 * @member {String} OutputBucketName
 */
StartTranscriptionJobRequest.prototype['OutputBucketName'] = undefined;

/**
 * @member {String} OutputKey
 */
StartTranscriptionJobRequest.prototype['OutputKey'] = undefined;

/**
 * @member {String} OutputEncryptionKMSKeyId
 */
StartTranscriptionJobRequest.prototype['OutputEncryptionKMSKeyId'] = undefined;

/**
 * @member {Object} KMSEncryptionContext
 */
StartTranscriptionJobRequest.prototype['KMSEncryptionContext'] = undefined;

/**
 * @member {module:model/StartTranscriptionJobRequestSettings} Settings
 */
StartTranscriptionJobRequest.prototype['Settings'] = undefined;

/**
 * @member {module:model/StartTranscriptionJobRequestModelSettings} ModelSettings
 */
StartTranscriptionJobRequest.prototype['ModelSettings'] = undefined;

/**
 * @member {module:model/StartTranscriptionJobRequestJobExecutionSettings} JobExecutionSettings
 */
StartTranscriptionJobRequest.prototype['JobExecutionSettings'] = undefined;

/**
 * @member {module:model/StartTranscriptionJobRequestContentRedaction} ContentRedaction
 */
StartTranscriptionJobRequest.prototype['ContentRedaction'] = undefined;

/**
 * @member {Boolean} IdentifyLanguage
 */
StartTranscriptionJobRequest.prototype['IdentifyLanguage'] = undefined;

/**
 * @member {Boolean} IdentifyMultipleLanguages
 */
StartTranscriptionJobRequest.prototype['IdentifyMultipleLanguages'] = undefined;

/**
 * @member {Array} LanguageOptions
 */
StartTranscriptionJobRequest.prototype['LanguageOptions'] = undefined;

/**
 * @member {module:model/StartTranscriptionJobRequestSubtitles} Subtitles
 */
StartTranscriptionJobRequest.prototype['Subtitles'] = undefined;

/**
 * @member {Array} Tags
 */
StartTranscriptionJobRequest.prototype['Tags'] = undefined;

/**
 * @member {Object} LanguageIdSettings
 */
StartTranscriptionJobRequest.prototype['LanguageIdSettings'] = undefined;

/**
 * @member {Array} ToxicityDetection
 */
StartTranscriptionJobRequest.prototype['ToxicityDetection'] = undefined;






export default StartTranscriptionJobRequest;

