/**
 * Amazon Transcribe Service
 * <p>Amazon Transcribe offers three main types of batch transcription: <b>Standard</b>, <b>Medical</b>, and <b>Call Analytics</b>.</p> <ul> <li> <p> <b>Standard transcriptions</b> are the most common option. Refer to for details.</p> </li> <li> <p> <b>Medical transcriptions</b> are tailored to medical professionals and incorporate medical terms. A common use case for this service is transcribing doctor-patient dialogue into after-visit notes. Refer to for details.</p> </li> <li> <p> <b>Call Analytics transcriptions</b> are designed for use with call center audio on two different channels; if you're looking for insight into customer service calls, use this option. Refer to for details.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobExecutionSettings from './JobExecutionSettings';

/**
 * The TranscriptionJobJobExecutionSettings model module.
 * @module model/TranscriptionJobJobExecutionSettings
 * @version 2017-10-26
 */
class TranscriptionJobJobExecutionSettings {
    /**
     * Constructs a new <code>TranscriptionJobJobExecutionSettings</code>.
     * @alias module:model/TranscriptionJobJobExecutionSettings
     * @implements module:model/JobExecutionSettings
     */
    constructor() { 
        JobExecutionSettings.initialize(this);
        TranscriptionJobJobExecutionSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TranscriptionJobJobExecutionSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TranscriptionJobJobExecutionSettings} obj Optional instance to populate.
     * @return {module:model/TranscriptionJobJobExecutionSettings} The populated <code>TranscriptionJobJobExecutionSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TranscriptionJobJobExecutionSettings();
            JobExecutionSettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('AllowDeferredExecution')) {
                obj['AllowDeferredExecution'] = ApiClient.convertToType(data['AllowDeferredExecution'], 'Boolean');
            }
            if (data.hasOwnProperty('DataAccessRoleArn')) {
                obj['DataAccessRoleArn'] = ApiClient.convertToType(data['DataAccessRoleArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TranscriptionJobJobExecutionSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TranscriptionJobJobExecutionSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AllowDeferredExecution`
        if (data['AllowDeferredExecution']) { // data not null
          Boolean.validateJSON(data['AllowDeferredExecution']);
        }
        // validate the optional field `DataAccessRoleArn`
        if (data['DataAccessRoleArn']) { // data not null
          String.validateJSON(data['DataAccessRoleArn']);
        }

        return true;
    }


}



/**
 * @member {Boolean} AllowDeferredExecution
 */
TranscriptionJobJobExecutionSettings.prototype['AllowDeferredExecution'] = undefined;

/**
 * @member {String} DataAccessRoleArn
 */
TranscriptionJobJobExecutionSettings.prototype['DataAccessRoleArn'] = undefined;


// Implement JobExecutionSettings interface:
/**
 * @member {Boolean} AllowDeferredExecution
 */
JobExecutionSettings.prototype['AllowDeferredExecution'] = undefined;
/**
 * @member {String} DataAccessRoleArn
 */
JobExecutionSettings.prototype['DataAccessRoleArn'] = undefined;




export default TranscriptionJobJobExecutionSettings;

