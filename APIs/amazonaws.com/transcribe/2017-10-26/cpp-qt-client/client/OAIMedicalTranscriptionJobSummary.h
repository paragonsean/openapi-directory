/**
 * Amazon Transcribe Service
 * <p>Amazon Transcribe offers three main types of batch transcription: <b>Standard</b>, <b>Medical</b>, and <b>Call Analytics</b>.</p> <ul> <li> <p> <b>Standard transcriptions</b> are the most common option. Refer to for details.</p> </li> <li> <p> <b>Medical transcriptions</b> are tailored to medical professionals and incorporate medical terms. A common use case for this service is transcribing doctor-patient dialogue into after-visit notes. Refer to for details.</p> </li> <li> <p> <b>Call Analytics transcriptions</b> are designed for use with call center audio on two different channels; if you're looking for insight into customer service calls, use this option. Refer to for details.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMedicalTranscriptionJobSummary.h
 *
 * Provides detailed information about a specific medical transcription job.
 */

#ifndef OAIMedicalTranscriptionJobSummary_H
#define OAIMedicalTranscriptionJobSummary_H

#include <QJsonObject>

#include "OAILanguageCode.h"
#include "OAIMedicalContentIdentificationType.h"
#include "OAIOutputLocationType.h"
#include "OAISpecialty.h"
#include "OAITranscriptionJobStatus.h"
#include "OAIType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMedicalTranscriptionJobSummary : public OAIObject {
public:
    OAIMedicalTranscriptionJobSummary();
    OAIMedicalTranscriptionJobSummary(QString json);
    ~OAIMedicalTranscriptionJobSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMedicalTranscriptionJobName() const;
    void setMedicalTranscriptionJobName(const QString &medical_transcription_job_name);
    bool is_medical_transcription_job_name_Set() const;
    bool is_medical_transcription_job_name_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QDateTime getCompletionTime() const;
    void setCompletionTime(const QDateTime &completion_time);
    bool is_completion_time_Set() const;
    bool is_completion_time_Valid() const;

    OAILanguageCode getLanguageCode() const;
    void setLanguageCode(const OAILanguageCode &language_code);
    bool is_language_code_Set() const;
    bool is_language_code_Valid() const;

    OAITranscriptionJobStatus getTranscriptionJobStatus() const;
    void setTranscriptionJobStatus(const OAITranscriptionJobStatus &transcription_job_status);
    bool is_transcription_job_status_Set() const;
    bool is_transcription_job_status_Valid() const;

    QString getFailureReason() const;
    void setFailureReason(const QString &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    OAIOutputLocationType getOutputLocationType() const;
    void setOutputLocationType(const OAIOutputLocationType &output_location_type);
    bool is_output_location_type_Set() const;
    bool is_output_location_type_Valid() const;

    OAISpecialty getSpecialty() const;
    void setSpecialty(const OAISpecialty &specialty);
    bool is_specialty_Set() const;
    bool is_specialty_Valid() const;

    OAIMedicalContentIdentificationType getContentIdentificationType() const;
    void setContentIdentificationType(const OAIMedicalContentIdentificationType &content_identification_type);
    bool is_content_identification_type_Set() const;
    bool is_content_identification_type_Valid() const;

    OAIType getType() const;
    void setType(const OAIType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_medical_transcription_job_name;
    bool m_medical_transcription_job_name_isSet;
    bool m_medical_transcription_job_name_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QDateTime m_completion_time;
    bool m_completion_time_isSet;
    bool m_completion_time_isValid;

    OAILanguageCode m_language_code;
    bool m_language_code_isSet;
    bool m_language_code_isValid;

    OAITranscriptionJobStatus m_transcription_job_status;
    bool m_transcription_job_status_isSet;
    bool m_transcription_job_status_isValid;

    QString m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;

    OAIOutputLocationType m_output_location_type;
    bool m_output_location_type_isSet;
    bool m_output_location_type_isValid;

    OAISpecialty m_specialty;
    bool m_specialty_isSet;
    bool m_specialty_isValid;

    OAIMedicalContentIdentificationType m_content_identification_type;
    bool m_content_identification_type_isSet;
    bool m_content_identification_type_isValid;

    OAIType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMedicalTranscriptionJobSummary)

#endif // OAIMedicalTranscriptionJobSummary_H
