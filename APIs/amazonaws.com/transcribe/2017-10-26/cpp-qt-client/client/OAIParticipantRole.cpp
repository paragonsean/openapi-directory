/**
 * Amazon Transcribe Service
 * <p>Amazon Transcribe offers three main types of batch transcription: <b>Standard</b>, <b>Medical</b>, and <b>Call Analytics</b>.</p> <ul> <li> <p> <b>Standard transcriptions</b> are the most common option. Refer to for details.</p> </li> <li> <p> <b>Medical transcriptions</b> are tailored to medical professionals and incorporate medical terms. A common use case for this service is transcribing doctor-patient dialogue into after-visit notes. Refer to for details.</p> </li> <li> <p> <b>Call Analytics transcriptions</b> are designed for use with call center audio on two different channels; if you're looking for insight into customer service calls, use this option. Refer to for details.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIParticipantRole.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIParticipantRole::OAIParticipantRole(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIParticipantRole::OAIParticipantRole() {
    this->initializeModel();
}

OAIParticipantRole::~OAIParticipantRole() {}

void OAIParticipantRole::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIParticipantRole::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIParticipantRole::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AGENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIParticipantRole::AGENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CUSTOMER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIParticipantRole::CUSTOMER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIParticipantRole::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIParticipantRole::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIParticipantRole::AGENT:
            val = "AGENT";
            break;
        case eOAIParticipantRole::CUSTOMER:
            val = "CUSTOMER";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIParticipantRole::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIParticipantRole::eOAIParticipantRole OAIParticipantRole::getValue() const {
    return m_value;
}

void OAIParticipantRole::setValue(const OAIParticipantRole::eOAIParticipantRole& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIParticipantRole::isSet() const {
    
    return m_value_isSet;
}

bool OAIParticipantRole::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
