/**
 * Amazon Personalize Runtime
 * <p/>
 *
 * The version of the OpenAPI document: 2018-05-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetPersonalizedRankingRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetPersonalizedRankingRequest::OAIGetPersonalizedRankingRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetPersonalizedRankingRequest::OAIGetPersonalizedRankingRequest() {
    this->initializeModel();
}

OAIGetPersonalizedRankingRequest::~OAIGetPersonalizedRankingRequest() {}

void OAIGetPersonalizedRankingRequest::initializeModel() {

    m_campaign_arn_isSet = false;
    m_campaign_arn_isValid = false;

    m_input_list_isSet = false;
    m_input_list_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_context_isSet = false;
    m_context_isValid = false;

    m_filter_arn_isSet = false;
    m_filter_arn_isValid = false;

    m_filter_values_isSet = false;
    m_filter_values_isValid = false;
}

void OAIGetPersonalizedRankingRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetPersonalizedRankingRequest::fromJsonObject(QJsonObject json) {

    m_campaign_arn_isValid = ::OpenAPI::fromJsonValue(m_campaign_arn, json[QString("campaignArn")]);
    m_campaign_arn_isSet = !json[QString("campaignArn")].isNull() && m_campaign_arn_isValid;

    m_input_list_isValid = ::OpenAPI::fromJsonValue(m_input_list, json[QString("inputList")]);
    m_input_list_isSet = !json[QString("inputList")].isNull() && m_input_list_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;

    m_context_isValid = ::OpenAPI::fromJsonValue(m_context, json[QString("context")]);
    m_context_isSet = !json[QString("context")].isNull() && m_context_isValid;

    m_filter_arn_isValid = ::OpenAPI::fromJsonValue(m_filter_arn, json[QString("filterArn")]);
    m_filter_arn_isSet = !json[QString("filterArn")].isNull() && m_filter_arn_isValid;

    m_filter_values_isValid = ::OpenAPI::fromJsonValue(m_filter_values, json[QString("filterValues")]);
    m_filter_values_isSet = !json[QString("filterValues")].isNull() && m_filter_values_isValid;
}

QString OAIGetPersonalizedRankingRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetPersonalizedRankingRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_campaign_arn_isSet) {
        obj.insert(QString("campaignArn"), ::OpenAPI::toJsonValue(m_campaign_arn));
    }
    if (m_input_list.isSet()) {
        obj.insert(QString("inputList"), ::OpenAPI::toJsonValue(m_input_list));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    if (m_context.isSet()) {
        obj.insert(QString("context"), ::OpenAPI::toJsonValue(m_context));
    }
    if (m_filter_arn_isSet) {
        obj.insert(QString("filterArn"), ::OpenAPI::toJsonValue(m_filter_arn));
    }
    if (m_filter_values.isSet()) {
        obj.insert(QString("filterValues"), ::OpenAPI::toJsonValue(m_filter_values));
    }
    return obj;
}

QString OAIGetPersonalizedRankingRequest::getCampaignArn() const {
    return m_campaign_arn;
}
void OAIGetPersonalizedRankingRequest::setCampaignArn(const QString &campaign_arn) {
    m_campaign_arn = campaign_arn;
    m_campaign_arn_isSet = true;
}

bool OAIGetPersonalizedRankingRequest::is_campaign_arn_Set() const{
    return m_campaign_arn_isSet;
}

bool OAIGetPersonalizedRankingRequest::is_campaign_arn_Valid() const{
    return m_campaign_arn_isValid;
}

QList OAIGetPersonalizedRankingRequest::getInputList() const {
    return m_input_list;
}
void OAIGetPersonalizedRankingRequest::setInputList(const QList &input_list) {
    m_input_list = input_list;
    m_input_list_isSet = true;
}

bool OAIGetPersonalizedRankingRequest::is_input_list_Set() const{
    return m_input_list_isSet;
}

bool OAIGetPersonalizedRankingRequest::is_input_list_Valid() const{
    return m_input_list_isValid;
}

QString OAIGetPersonalizedRankingRequest::getUserId() const {
    return m_user_id;
}
void OAIGetPersonalizedRankingRequest::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIGetPersonalizedRankingRequest::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIGetPersonalizedRankingRequest::is_user_id_Valid() const{
    return m_user_id_isValid;
}

QMap OAIGetPersonalizedRankingRequest::getContext() const {
    return m_context;
}
void OAIGetPersonalizedRankingRequest::setContext(const QMap &context) {
    m_context = context;
    m_context_isSet = true;
}

bool OAIGetPersonalizedRankingRequest::is_context_Set() const{
    return m_context_isSet;
}

bool OAIGetPersonalizedRankingRequest::is_context_Valid() const{
    return m_context_isValid;
}

QString OAIGetPersonalizedRankingRequest::getFilterArn() const {
    return m_filter_arn;
}
void OAIGetPersonalizedRankingRequest::setFilterArn(const QString &filter_arn) {
    m_filter_arn = filter_arn;
    m_filter_arn_isSet = true;
}

bool OAIGetPersonalizedRankingRequest::is_filter_arn_Set() const{
    return m_filter_arn_isSet;
}

bool OAIGetPersonalizedRankingRequest::is_filter_arn_Valid() const{
    return m_filter_arn_isValid;
}

QMap OAIGetPersonalizedRankingRequest::getFilterValues() const {
    return m_filter_values;
}
void OAIGetPersonalizedRankingRequest::setFilterValues(const QMap &filter_values) {
    m_filter_values = filter_values;
    m_filter_values_isSet = true;
}

bool OAIGetPersonalizedRankingRequest::is_filter_values_Set() const{
    return m_filter_values_isSet;
}

bool OAIGetPersonalizedRankingRequest::is_filter_values_Valid() const{
    return m_filter_values_isValid;
}

bool OAIGetPersonalizedRankingRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_campaign_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_list.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_context.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_values.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetPersonalizedRankingRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_campaign_arn_isValid && m_input_list_isValid && m_user_id_isValid && true;
}

} // namespace OpenAPI
