/**
 * Amazon Personalize Runtime
 * <p/>
 *
 * The version of the OpenAPI document: 2018-05-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPredictedItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPredictedItem::OAIPredictedItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPredictedItem::OAIPredictedItem() {
    this->initializeModel();
}

OAIPredictedItem::~OAIPredictedItem() {}

void OAIPredictedItem::initializeModel() {

    m_item_id_isSet = false;
    m_item_id_isValid = false;

    m_score_isSet = false;
    m_score_isValid = false;

    m_promotion_name_isSet = false;
    m_promotion_name_isValid = false;
}

void OAIPredictedItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPredictedItem::fromJsonObject(QJsonObject json) {

    m_item_id_isValid = ::OpenAPI::fromJsonValue(m_item_id, json[QString("itemId")]);
    m_item_id_isSet = !json[QString("itemId")].isNull() && m_item_id_isValid;

    m_score_isValid = ::OpenAPI::fromJsonValue(m_score, json[QString("score")]);
    m_score_isSet = !json[QString("score")].isNull() && m_score_isValid;

    m_promotion_name_isValid = ::OpenAPI::fromJsonValue(m_promotion_name, json[QString("promotionName")]);
    m_promotion_name_isSet = !json[QString("promotionName")].isNull() && m_promotion_name_isValid;
}

QString OAIPredictedItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPredictedItem::asJsonObject() const {
    QJsonObject obj;
    if (m_item_id_isSet) {
        obj.insert(QString("itemId"), ::OpenAPI::toJsonValue(m_item_id));
    }
    if (m_score_isSet) {
        obj.insert(QString("score"), ::OpenAPI::toJsonValue(m_score));
    }
    if (m_promotion_name_isSet) {
        obj.insert(QString("promotionName"), ::OpenAPI::toJsonValue(m_promotion_name));
    }
    return obj;
}

QString OAIPredictedItem::getItemId() const {
    return m_item_id;
}
void OAIPredictedItem::setItemId(const QString &item_id) {
    m_item_id = item_id;
    m_item_id_isSet = true;
}

bool OAIPredictedItem::is_item_id_Set() const{
    return m_item_id_isSet;
}

bool OAIPredictedItem::is_item_id_Valid() const{
    return m_item_id_isValid;
}

double OAIPredictedItem::getScore() const {
    return m_score;
}
void OAIPredictedItem::setScore(const double &score) {
    m_score = score;
    m_score_isSet = true;
}

bool OAIPredictedItem::is_score_Set() const{
    return m_score_isSet;
}

bool OAIPredictedItem::is_score_Valid() const{
    return m_score_isValid;
}

QString OAIPredictedItem::getPromotionName() const {
    return m_promotion_name;
}
void OAIPredictedItem::setPromotionName(const QString &promotion_name) {
    m_promotion_name = promotion_name;
    m_promotion_name_isSet = true;
}

bool OAIPredictedItem::is_promotion_name_Set() const{
    return m_promotion_name_isSet;
}

bool OAIPredictedItem::is_promotion_name_Valid() const{
    return m_promotion_name_isValid;
}

bool OAIPredictedItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotion_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPredictedItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
