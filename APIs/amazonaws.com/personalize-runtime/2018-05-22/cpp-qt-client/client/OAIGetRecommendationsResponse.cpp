/**
 * Amazon Personalize Runtime
 * <p/>
 *
 * The version of the OpenAPI document: 2018-05-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetRecommendationsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetRecommendationsResponse::OAIGetRecommendationsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetRecommendationsResponse::OAIGetRecommendationsResponse() {
    this->initializeModel();
}

OAIGetRecommendationsResponse::~OAIGetRecommendationsResponse() {}

void OAIGetRecommendationsResponse::initializeModel() {

    m_item_list_isSet = false;
    m_item_list_isValid = false;

    m_recommendation_id_isSet = false;
    m_recommendation_id_isValid = false;
}

void OAIGetRecommendationsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetRecommendationsResponse::fromJsonObject(QJsonObject json) {

    m_item_list_isValid = ::OpenAPI::fromJsonValue(m_item_list, json[QString("itemList")]);
    m_item_list_isSet = !json[QString("itemList")].isNull() && m_item_list_isValid;

    m_recommendation_id_isValid = ::OpenAPI::fromJsonValue(m_recommendation_id, json[QString("recommendationId")]);
    m_recommendation_id_isSet = !json[QString("recommendationId")].isNull() && m_recommendation_id_isValid;
}

QString OAIGetRecommendationsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetRecommendationsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_item_list.isSet()) {
        obj.insert(QString("itemList"), ::OpenAPI::toJsonValue(m_item_list));
    }
    if (m_recommendation_id_isSet) {
        obj.insert(QString("recommendationId"), ::OpenAPI::toJsonValue(m_recommendation_id));
    }
    return obj;
}

QList OAIGetRecommendationsResponse::getItemList() const {
    return m_item_list;
}
void OAIGetRecommendationsResponse::setItemList(const QList &item_list) {
    m_item_list = item_list;
    m_item_list_isSet = true;
}

bool OAIGetRecommendationsResponse::is_item_list_Set() const{
    return m_item_list_isSet;
}

bool OAIGetRecommendationsResponse::is_item_list_Valid() const{
    return m_item_list_isValid;
}

QString OAIGetRecommendationsResponse::getRecommendationId() const {
    return m_recommendation_id;
}
void OAIGetRecommendationsResponse::setRecommendationId(const QString &recommendation_id) {
    m_recommendation_id = recommendation_id;
    m_recommendation_id_isSet = true;
}

bool OAIGetRecommendationsResponse::is_recommendation_id_Set() const{
    return m_recommendation_id_isSet;
}

bool OAIGetRecommendationsResponse::is_recommendation_id_Valid() const{
    return m_recommendation_id_isValid;
}

bool OAIGetRecommendationsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_item_list.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetRecommendationsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
