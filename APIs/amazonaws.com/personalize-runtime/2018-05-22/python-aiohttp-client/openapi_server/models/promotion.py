# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Promotion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, percent_promoted_items: int=None, filter_arn: str=None, filter_values: Dict=None):
        """Promotion - a model defined in OpenAPI

        :param name: The name of this Promotion.
        :param percent_promoted_items: The percent_promoted_items of this Promotion.
        :param filter_arn: The filter_arn of this Promotion.
        :param filter_values: The filter_values of this Promotion.
        """
        self.openapi_types = {
            'name': str,
            'percent_promoted_items': int,
            'filter_arn': str,
            'filter_values': Dict
        }

        self.attribute_map = {
            'name': 'name',
            'percent_promoted_items': 'percentPromotedItems',
            'filter_arn': 'filterArn',
            'filter_values': 'filterValues'
        }

        self._name = name
        self._percent_promoted_items = percent_promoted_items
        self._filter_arn = filter_arn
        self._filter_values = filter_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Promotion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Promotion of this Promotion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Promotion.


        :return: The name of this Promotion.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Promotion.


        :param name: The name of this Promotion.
        :type name: str
        """

        self._name = name

    @property
    def percent_promoted_items(self):
        """Gets the percent_promoted_items of this Promotion.


        :return: The percent_promoted_items of this Promotion.
        :rtype: int
        """
        return self._percent_promoted_items

    @percent_promoted_items.setter
    def percent_promoted_items(self, percent_promoted_items):
        """Sets the percent_promoted_items of this Promotion.


        :param percent_promoted_items: The percent_promoted_items of this Promotion.
        :type percent_promoted_items: int
        """

        self._percent_promoted_items = percent_promoted_items

    @property
    def filter_arn(self):
        """Gets the filter_arn of this Promotion.


        :return: The filter_arn of this Promotion.
        :rtype: str
        """
        return self._filter_arn

    @filter_arn.setter
    def filter_arn(self, filter_arn):
        """Sets the filter_arn of this Promotion.


        :param filter_arn: The filter_arn of this Promotion.
        :type filter_arn: str
        """

        self._filter_arn = filter_arn

    @property
    def filter_values(self):
        """Gets the filter_values of this Promotion.


        :return: The filter_values of this Promotion.
        :rtype: Dict
        """
        return self._filter_values

    @filter_values.setter
    def filter_values(self, filter_values):
        """Sets the filter_values of this Promotion.


        :param filter_values: The filter_values of this Promotion.
        :type filter_values: Dict
        """

        self._filter_values = filter_values
