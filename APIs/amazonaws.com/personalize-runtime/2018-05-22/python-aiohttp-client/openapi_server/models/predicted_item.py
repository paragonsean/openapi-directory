# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PredictedItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, item_id: str=None, score: float=None, promotion_name: str=None):
        """PredictedItem - a model defined in OpenAPI

        :param item_id: The item_id of this PredictedItem.
        :param score: The score of this PredictedItem.
        :param promotion_name: The promotion_name of this PredictedItem.
        """
        self.openapi_types = {
            'item_id': str,
            'score': float,
            'promotion_name': str
        }

        self.attribute_map = {
            'item_id': 'itemId',
            'score': 'score',
            'promotion_name': 'promotionName'
        }

        self._item_id = item_id
        self._score = score
        self._promotion_name = promotion_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PredictedItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PredictedItem of this PredictedItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def item_id(self):
        """Gets the item_id of this PredictedItem.


        :return: The item_id of this PredictedItem.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this PredictedItem.


        :param item_id: The item_id of this PredictedItem.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def score(self):
        """Gets the score of this PredictedItem.


        :return: The score of this PredictedItem.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this PredictedItem.


        :param score: The score of this PredictedItem.
        :type score: float
        """

        self._score = score

    @property
    def promotion_name(self):
        """Gets the promotion_name of this PredictedItem.


        :return: The promotion_name of this PredictedItem.
        :rtype: str
        """
        return self._promotion_name

    @promotion_name.setter
    def promotion_name(self, promotion_name):
        """Sets the promotion_name of this PredictedItem.


        :param promotion_name: The promotion_name of this PredictedItem.
        :type promotion_name: str
        """

        self._promotion_name = promotion_name
