/**
 * Amazon Personalize Runtime
 * <p/>
 *
 * The version of the OpenAPI document: 2018-05-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetPersonalizedRankingRequest model module.
 * @module model/GetPersonalizedRankingRequest
 * @version 2018-05-22
 */
class GetPersonalizedRankingRequest {
    /**
     * Constructs a new <code>GetPersonalizedRankingRequest</code>.
     * @alias module:model/GetPersonalizedRankingRequest
     * @param campaignArn {String} The Amazon Resource Name (ARN) of the campaign to use for generating the personalized ranking.
     * @param inputList {Array.<String>} A list of items (by <code>itemId</code>) to rank. If an item was not included in the training dataset, the item is appended to the end of the reranked list. The maximum is 500.
     * @param userId {String} The user for which you want the campaign to provide a personalized ranking.
     */
    constructor(campaignArn, inputList, userId) { 
        
        GetPersonalizedRankingRequest.initialize(this, campaignArn, inputList, userId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, campaignArn, inputList, userId) { 
        obj['campaignArn'] = campaignArn;
        obj['inputList'] = inputList;
        obj['userId'] = userId;
    }

    /**
     * Constructs a <code>GetPersonalizedRankingRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetPersonalizedRankingRequest} obj Optional instance to populate.
     * @return {module:model/GetPersonalizedRankingRequest} The populated <code>GetPersonalizedRankingRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetPersonalizedRankingRequest();

            if (data.hasOwnProperty('campaignArn')) {
                obj['campaignArn'] = ApiClient.convertToType(data['campaignArn'], 'String');
            }
            if (data.hasOwnProperty('inputList')) {
                obj['inputList'] = ApiClient.convertToType(data['inputList'], ['String']);
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
            if (data.hasOwnProperty('context')) {
                obj['context'] = ApiClient.convertToType(data['context'], {'String': 'String'});
            }
            if (data.hasOwnProperty('filterArn')) {
                obj['filterArn'] = ApiClient.convertToType(data['filterArn'], 'String');
            }
            if (data.hasOwnProperty('filterValues')) {
                obj['filterValues'] = ApiClient.convertToType(data['filterValues'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetPersonalizedRankingRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetPersonalizedRankingRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetPersonalizedRankingRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['campaignArn'] && !(typeof data['campaignArn'] === 'string' || data['campaignArn'] instanceof String)) {
            throw new Error("Expected the field `campaignArn` to be a primitive type in the JSON string but got " + data['campaignArn']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['inputList'])) {
            throw new Error("Expected the field `inputList` to be an array in the JSON data but got " + data['inputList']);
        }
        // ensure the json data is a string
        if (data['userId'] && !(typeof data['userId'] === 'string' || data['userId'] instanceof String)) {
            throw new Error("Expected the field `userId` to be a primitive type in the JSON string but got " + data['userId']);
        }
        // ensure the json data is a string
        if (data['filterArn'] && !(typeof data['filterArn'] === 'string' || data['filterArn'] instanceof String)) {
            throw new Error("Expected the field `filterArn` to be a primitive type in the JSON string but got " + data['filterArn']);
        }

        return true;
    }


}

GetPersonalizedRankingRequest.RequiredProperties = ["campaignArn", "inputList", "userId"];

/**
 * The Amazon Resource Name (ARN) of the campaign to use for generating the personalized ranking.
 * @member {String} campaignArn
 */
GetPersonalizedRankingRequest.prototype['campaignArn'] = undefined;

/**
 * A list of items (by <code>itemId</code>) to rank. If an item was not included in the training dataset, the item is appended to the end of the reranked list. The maximum is 500.
 * @member {Array.<String>} inputList
 */
GetPersonalizedRankingRequest.prototype['inputList'] = undefined;

/**
 * The user for which you want the campaign to provide a personalized ranking.
 * @member {String} userId
 */
GetPersonalizedRankingRequest.prototype['userId'] = undefined;

/**
 * The contextual metadata to use when getting recommendations. Contextual metadata includes any interaction information that might be relevant when getting a user's recommendations, such as the user's current location or device type.
 * @member {Object.<String, String>} context
 */
GetPersonalizedRankingRequest.prototype['context'] = undefined;

/**
 * The Amazon Resource Name (ARN) of a filter you created to include items or exclude items from recommendations for a given user. For more information, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\">Filtering Recommendations</a>.
 * @member {String} filterArn
 */
GetPersonalizedRankingRequest.prototype['filterArn'] = undefined;

/**
 * <p>The values to use when filtering recommendations. For each placeholder parameter in your filter expression, provide the parameter name (in matching case) as a key and the filter value(s) as the corresponding value. Separate multiple values for one parameter with a comma. </p> <p>For filter expressions that use an <code>INCLUDE</code> element to include items, you must provide values for all parameters that are defined in the expression. For filters with expressions that use an <code>EXCLUDE</code> element to exclude items, you can omit the <code>filter-values</code>.In this case, Amazon Personalize doesn't use that portion of the expression to filter recommendations.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\">Filtering Recommendations</a>.</p>
 * @member {Object.<String, String>} filterValues
 */
GetPersonalizedRankingRequest.prototype['filterValues'] = undefined;






export default GetPersonalizedRankingRequest;

