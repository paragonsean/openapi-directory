openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: <p/>
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Personalize Runtime
  version: 2018-05-22
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: personalize-runtime
  x-aws-signingName: personalize
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/personalize-runtime-2018-05-22.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/personalize-runtime/
servers:
- description: The Amazon Personalize Runtime multi-region endpoint
  url: "http://personalize-runtime.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Personalize Runtime multi-region endpoint
  url: "https://personalize-runtime.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Personalize Runtime endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://personalize-runtime.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Personalize Runtime endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://personalize-runtime.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /personalize-ranking:
    post:
      description: <p>Re-ranks a list of recommended items for the given user. The
        first item in the list is deemed the most likely item to be of interest to
        the user.</p> <note> <p>The solution backing the campaign must have been created
        using a recipe of type PERSONALIZED_RANKING.</p> </note>
      operationId: GetPersonalizedRanking
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPersonalizedRanking_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonalizedRankingResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /recommendations:
    post:
      description: "<p>Returns a list of recommended items. For campaigns, the campaign's\
        \ Amazon Resource Name (ARN) is required and the required user and item input\
        \ depends on the recipe type used to create the solution backing the campaign\
        \ as follows:</p> <ul> <li> <p>USER_PERSONALIZATION - <code>userId</code>\
        \ required, <code>itemId</code> not used</p> </li> <li> <p>RELATED_ITEMS -\
        \ <code>itemId</code> required, <code>userId</code> not used</p> </li> </ul>\
        \ <note> <p>Campaigns that are backed by a solution created using a recipe\
        \ of type PERSONALIZED_RANKING use the API.</p> </note> <p> For recommenders,\
        \ the recommender's ARN is required and the required item and user input depends\
        \ on the use case (domain-based recipe) backing the recommender. For information\
        \ on use case requirements see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/domain-use-cases.html\"\
        >Choosing recommender use cases</a>. </p>"
      operationId: GetRecommendations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRecommendations_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecommendationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    GetPersonalizedRankingResponse:
      example:
        personalizedRanking: ""
        recommendationId: ""
      properties:
        personalizedRanking:
          allOf:
          - $ref: '#/components/schemas/ItemList'
          - description: A list of items in order of most likely interest to the user.
              The maximum is 500.
        recommendationId:
          allOf:
          - $ref: '#/components/schemas/RecommendationID'
          - description: The ID of the recommendation.
      type: object
    ItemID:
      maxLength: 256
      type: string
    AttributeValue:
      format: password
      maxLength: 1000
      type: string
    FilterAttributeValue:
      format: password
      maxLength: 1000
      type: string
    InvalidInputException: {}
    ResourceNotFoundException: {}
    GetRecommendationsResponse:
      example:
        itemList: ""
        recommendationId: ""
      properties:
        itemList:
          allOf:
          - $ref: '#/components/schemas/ItemList'
          - description: A list of recommendations sorted in descending order by prediction
              score. There can be a maximum of 500 items in the list.
        recommendationId:
          allOf:
          - $ref: '#/components/schemas/RecommendationID'
          - description: The ID of the recommendation.
      type: object
    Promotion:
      description: Contains information on a promotion. A promotion defines additional
        business rules that apply to a configurable subset of recommended items.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the promotion.
        percentPromotedItems:
          allOf:
          - $ref: '#/components/schemas/PercentPromotedItems'
          - description: The percentage of recommended items to apply the promotion
              to.
        filterArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) of the filter used by the\
              \ promotion. This filter defines the criteria for promoted items. For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/promoting-items.html#promotion-filters\"\
              >Promotion filters</a>."
        filterValues:
          allOf:
          - $ref: '#/components/schemas/FilterValues'
          - description: "<p>The values to use when promoting items. For each placeholder\
              \ parameter in your promotion's filter expression, provide the parameter\
              \ name (in matching case) as a key and the filter value(s) as the corresponding\
              \ value. Separate multiple values for one parameter with a comma. </p>\
              \ <p>For filter expressions that use an <code>INCLUDE</code> element\
              \ to include items, you must provide values for all parameters that\
              \ are defined in the expression. For filters with expressions that use\
              \ an <code>EXCLUDE</code> element to exclude items, you can omit the\
              \ <code>filter-values</code>. In this case, Amazon Personalize doesn't\
              \ use that portion of the expression to filter recommendations.</p>\
              \ <p>For more information on creating filters, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\"\
              >Filtering recommendations and user segments</a>.</p>"
      type: object
    Arn:
      maxLength: 256
      pattern: "arn:([a-z\\d-]+):personalize:.*:.*:.+"
      type: string
    AttributeName:
      maxLength: 150
      pattern: "[A-Za-z\\d_]+"
      type: string
    Context:
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
      maxProperties: 150
      type: object
    FilterAttributeName:
      maxLength: 50
      pattern: "[A-Za-z0-9_]+"
      type: string
    FilterValues:
      additionalProperties:
        $ref: '#/components/schemas/FilterAttributeValue'
      maxProperties: 25
      type: object
    InputList:
      items:
        $ref: '#/components/schemas/ItemID'
      type: array
    UserID:
      maxLength: 256
      type: string
    GetPersonalizedRankingRequest:
      example:
        filterValues: ""
        inputList: ""
        filterArn: ""
        context: ""
        userId: ""
        campaignArn: ""
      properties:
        campaignArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the campaign to use for
              generating the personalized ranking.
        inputList:
          allOf:
          - $ref: '#/components/schemas/InputList'
          - description: "A list of items (by <code>itemId</code>) to rank. If an\
              \ item was not included in the training dataset, the item is appended\
              \ to the end of the reranked list. The maximum is 500."
        userId:
          allOf:
          - $ref: '#/components/schemas/UserID'
          - description: The user for which you want the campaign to provide a personalized
              ranking.
        context:
          allOf:
          - $ref: '#/components/schemas/Context'
          - description: "The contextual metadata to use when getting recommendations.\
              \ Contextual metadata includes any interaction information that might\
              \ be relevant when getting a user's recommendations, such as the user's\
              \ current location or device type."
        filterArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) of a filter you created to\
              \ include items or exclude items from recommendations for a given user.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\"\
              >Filtering Recommendations</a>."
        filterValues:
          allOf:
          - $ref: '#/components/schemas/FilterValues'
          - description: "<p>The values to use when filtering recommendations. For\
              \ each placeholder parameter in your filter expression, provide the\
              \ parameter name (in matching case) as a key and the filter value(s)\
              \ as the corresponding value. Separate multiple values for one parameter\
              \ with a comma. </p> <p>For filter expressions that use an <code>INCLUDE</code>\
              \ element to include items, you must provide values for all parameters\
              \ that are defined in the expression. For filters with expressions that\
              \ use an <code>EXCLUDE</code> element to exclude items, you can omit\
              \ the <code>filter-values</code>.In this case, Amazon Personalize doesn't\
              \ use that portion of the expression to filter recommendations.</p>\
              \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\"\
              >Filtering Recommendations</a>.</p>"
      required:
      - campaignArn
      - inputList
      - userId
      title: GetPersonalizedRankingRequest
      type: object
    ItemList:
      items:
        $ref: '#/components/schemas/PredictedItem'
      type: array
    RecommendationID:
      type: string
    NumResults:
      minimum: 0
      type: integer
    PromotionList:
      items:
        $ref: '#/components/schemas/Promotion'
      maxItems: 1
      type: array
    GetRecommendationsRequest:
      example:
        filterValues: ""
        itemId: ""
        promotions: ""
        filterArn: ""
        recommenderArn: ""
        context: ""
        numResults: ""
        userId: ""
        campaignArn: ""
      properties:
        campaignArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the campaign to use for
              getting recommendations.
        itemId:
          allOf:
          - $ref: '#/components/schemas/ItemID'
          - description: <p>The item ID to provide recommendations for.</p> <p>Required
              for <code>RELATED_ITEMS</code> recipe type.</p>
        userId:
          allOf:
          - $ref: '#/components/schemas/UserID'
          - description: <p>The user ID to provide recommendations for.</p> <p>Required
              for <code>USER_PERSONALIZATION</code> recipe type.</p>
        numResults:
          allOf:
          - $ref: '#/components/schemas/NumResults'
          - description: The number of results to return. The default is 25. The maximum
              is 500.
        context:
          allOf:
          - $ref: '#/components/schemas/Context'
          - description: "The contextual metadata to use when getting recommendations.\
              \ Contextual metadata includes any interaction information that might\
              \ be relevant when getting a user's recommendations, such as the user's\
              \ current location or device type."
        filterArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The ARN of the filter to apply to the returned recommendations.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\"\
              >Filtering Recommendations</a>.</p> <p>When using this parameter, be\
              \ sure the filter resource is <code>ACTIVE</code>.</p>"
        filterValues:
          allOf:
          - $ref: '#/components/schemas/FilterValues'
          - description: "<p>The values to use when filtering recommendations. For\
              \ each placeholder parameter in your filter expression, provide the\
              \ parameter name (in matching case) as a key and the filter value(s)\
              \ as the corresponding value. Separate multiple values for one parameter\
              \ with a comma. </p> <p>For filter expressions that use an <code>INCLUDE</code>\
              \ element to include items, you must provide values for all parameters\
              \ that are defined in the expression. For filters with expressions that\
              \ use an <code>EXCLUDE</code> element to exclude items, you can omit\
              \ the <code>filter-values</code>.In this case, Amazon Personalize doesn't\
              \ use that portion of the expression to filter recommendations.</p>\
              \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\"\
              >Filtering recommendations and user segments</a>.</p>"
        recommenderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the recommender to use
              to get recommendations. Provide a recommender ARN if you created a Domain
              dataset group with a recommender for a domain use case.
        promotions:
          allOf:
          - $ref: '#/components/schemas/PromotionList'
          - description: The promotions to apply to the recommendation request. A
              promotion defines additional business rules that apply to a configurable
              subset of recommended items.
      title: GetRecommendationsRequest
      type: object
    PredictedItem:
      description: <p>An object that identifies an item.</p> <p>The and APIs return
        a list of <code>PredictedItem</code>s.</p>
      properties:
        itemId:
          allOf:
          - $ref: '#/components/schemas/ItemID'
          - description: The recommended item ID.
        score:
          allOf:
          - $ref: '#/components/schemas/Score'
          - description: "A numeric representation of the model's certainty that the\
              \ item will be the next user selection. For more information on scoring\
              \ logic, see <a>how-scores-work</a>."
        promotionName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the promotion that included the predicted item.
      type: object
    Name:
      maxLength: 63
      minLength: 1
      pattern: "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*"
      type: string
    PercentPromotedItems:
      maximum: 100
      minimum: 1
      type: integer
    Score:
      format: double
      type: number
    GetPersonalizedRanking_request:
      properties:
        campaignArn:
          description: The Amazon Resource Name (ARN) of the campaign to use for generating
            the personalized ranking.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):personalize:.*:.*:.+"
          type: string
        inputList:
          description: "A list of items (by <code>itemId</code>) to rank. If an item\
            \ was not included in the training dataset, the item is appended to the\
            \ end of the reranked list. The maximum is 500."
          items:
            $ref: '#/components/schemas/ItemID'
          type: array
        userId:
          description: The user for which you want the campaign to provide a personalized
            ranking.
          maxLength: 256
          type: string
        context:
          additionalProperties:
            $ref: '#/components/schemas/AttributeValue'
          description: "The contextual metadata to use when getting recommendations.\
            \ Contextual metadata includes any interaction information that might\
            \ be relevant when getting a user's recommendations, such as the user's\
            \ current location or device type."
          maxProperties: 150
          type: object
        filterArn:
          description: "The Amazon Resource Name (ARN) of a filter you created to\
            \ include items or exclude items from recommendations for a given user.\
            \ For more information, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\"\
            >Filtering Recommendations</a>."
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):personalize:.*:.*:.+"
          type: string
        filterValues:
          additionalProperties:
            $ref: '#/components/schemas/FilterAttributeValue'
          description: "<p>The values to use when filtering recommendations. For each\
            \ placeholder parameter in your filter expression, provide the parameter\
            \ name (in matching case) as a key and the filter value(s) as the corresponding\
            \ value. Separate multiple values for one parameter with a comma. </p>\
            \ <p>For filter expressions that use an <code>INCLUDE</code> element to\
            \ include items, you must provide values for all parameters that are defined\
            \ in the expression. For filters with expressions that use an <code>EXCLUDE</code>\
            \ element to exclude items, you can omit the <code>filter-values</code>.In\
            \ this case, Amazon Personalize doesn't use that portion of the expression\
            \ to filter recommendations.</p> <p>For more information, see <a href=\"\
            https://docs.aws.amazon.com/personalize/latest/dg/filter.html\">Filtering\
            \ Recommendations</a>.</p>"
          maxProperties: 25
          type: object
      required:
      - campaignArn
      - inputList
      - userId
      type: object
    GetRecommendations_request:
      properties:
        campaignArn:
          description: The Amazon Resource Name (ARN) of the campaign to use for getting
            recommendations.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):personalize:.*:.*:.+"
          type: string
        itemId:
          description: <p>The item ID to provide recommendations for.</p> <p>Required
            for <code>RELATED_ITEMS</code> recipe type.</p>
          maxLength: 256
          type: string
        userId:
          description: <p>The user ID to provide recommendations for.</p> <p>Required
            for <code>USER_PERSONALIZATION</code> recipe type.</p>
          maxLength: 256
          type: string
        numResults:
          description: The number of results to return. The default is 25. The maximum
            is 500.
          minimum: 0
          type: integer
        context:
          additionalProperties:
            $ref: '#/components/schemas/AttributeValue'
          description: "The contextual metadata to use when getting recommendations.\
            \ Contextual metadata includes any interaction information that might\
            \ be relevant when getting a user's recommendations, such as the user's\
            \ current location or device type."
          maxProperties: 150
          type: object
        filterArn:
          description: "<p>The ARN of the filter to apply to the returned recommendations.\
            \ For more information, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\"\
            >Filtering Recommendations</a>.</p> <p>When using this parameter, be sure\
            \ the filter resource is <code>ACTIVE</code>.</p>"
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):personalize:.*:.*:.+"
          type: string
        filterValues:
          additionalProperties:
            $ref: '#/components/schemas/FilterAttributeValue'
          description: "<p>The values to use when filtering recommendations. For each\
            \ placeholder parameter in your filter expression, provide the parameter\
            \ name (in matching case) as a key and the filter value(s) as the corresponding\
            \ value. Separate multiple values for one parameter with a comma. </p>\
            \ <p>For filter expressions that use an <code>INCLUDE</code> element to\
            \ include items, you must provide values for all parameters that are defined\
            \ in the expression. For filters with expressions that use an <code>EXCLUDE</code>\
            \ element to exclude items, you can omit the <code>filter-values</code>.In\
            \ this case, Amazon Personalize doesn't use that portion of the expression\
            \ to filter recommendations.</p> <p>For more information, see <a href=\"\
            https://docs.aws.amazon.com/personalize/latest/dg/filter.html\">Filtering\
            \ recommendations and user segments</a>.</p>"
          maxProperties: 25
          type: object
        recommenderArn:
          description: The Amazon Resource Name (ARN) of the recommender to use to
            get recommendations. Provide a recommender ARN if you created a Domain
            dataset group with a recommender for a domain use case.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):personalize:.*:.*:.+"
          type: string
        promotions:
          description: The promotions to apply to the recommendation request. A promotion
            defines additional business rules that apply to a configurable subset
            of recommended items.
          items:
            $ref: '#/components/schemas/Promotion'
          maxItems: 1
          type: array
      type: object
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4

