/*
 * Amazon Personalize Runtime
 * <p/>
 *
 * The version of the OpenAPI document: 2018-05-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetPersonalizedRankingRequest;
import org.openapitools.client.model.GetPersonalizedRankingResponse;
import org.openapitools.client.model.GetRecommendationsRequest;
import org.openapitools.client.model.GetRecommendationsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * &lt;p&gt;Re-ranks a list of recommended items for the given user. The first item in the list is deemed the most likely item to be of interest to the user.&lt;/p&gt; &lt;note&gt; &lt;p&gt;The solution backing the campaign must have been created using a recipe of type PERSONALIZED_RANKING.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPersonalizedRankingTest() throws ApiException {
        GetPersonalizedRankingRequest getPersonalizedRankingRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetPersonalizedRankingResponse response = api.getPersonalizedRanking(getPersonalizedRankingRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns a list of recommended items. For campaigns, the campaign&#39;s Amazon Resource Name (ARN) is required and the required user and item input depends on the recipe type used to create the solution backing the campaign as follows:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;USER_PERSONALIZATION - &lt;code&gt;userId&lt;/code&gt; required, &lt;code&gt;itemId&lt;/code&gt; not used&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;RELATED_ITEMS - &lt;code&gt;itemId&lt;/code&gt; required, &lt;code&gt;userId&lt;/code&gt; not used&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;p&gt;Campaigns that are backed by a solution created using a recipe of type PERSONALIZED_RANKING use the API.&lt;/p&gt; &lt;/note&gt; &lt;p&gt; For recommenders, the recommender&#39;s ARN is required and the required item and user input depends on the use case (domain-based recipe) backing the recommender. For information on use case requirements see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/personalize/latest/dg/domain-use-cases.html\&quot;&gt;Choosing recommender use cases&lt;/a&gt;. &lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRecommendationsTest() throws ApiException {
        GetRecommendationsRequest getRecommendationsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetRecommendationsResponse response = api.getRecommendations(getRecommendationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
