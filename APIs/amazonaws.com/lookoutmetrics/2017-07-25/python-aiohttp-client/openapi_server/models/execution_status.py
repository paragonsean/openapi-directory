# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.anomaly_detection_task_status import AnomalyDetectionTaskStatus
from openapi_server import util


class ExecutionStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, timestamp: str=None, status: AnomalyDetectionTaskStatus=None, failure_reason: str=None):
        """ExecutionStatus - a model defined in OpenAPI

        :param timestamp: The timestamp of this ExecutionStatus.
        :param status: The status of this ExecutionStatus.
        :param failure_reason: The failure_reason of this ExecutionStatus.
        """
        self.openapi_types = {
            'timestamp': str,
            'status': AnomalyDetectionTaskStatus,
            'failure_reason': str
        }

        self.attribute_map = {
            'timestamp': 'Timestamp',
            'status': 'Status',
            'failure_reason': 'FailureReason'
        }

        self._timestamp = timestamp
        self._status = status
        self._failure_reason = failure_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExecutionStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExecutionStatus of this ExecutionStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def timestamp(self):
        """Gets the timestamp of this ExecutionStatus.


        :return: The timestamp of this ExecutionStatus.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this ExecutionStatus.


        :param timestamp: The timestamp of this ExecutionStatus.
        :type timestamp: str
        """

        self._timestamp = timestamp

    @property
    def status(self):
        """Gets the status of this ExecutionStatus.


        :return: The status of this ExecutionStatus.
        :rtype: AnomalyDetectionTaskStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ExecutionStatus.


        :param status: The status of this ExecutionStatus.
        :type status: AnomalyDetectionTaskStatus
        """

        self._status = status

    @property
    def failure_reason(self):
        """Gets the failure_reason of this ExecutionStatus.


        :return: The failure_reason of this ExecutionStatus.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this ExecutionStatus.


        :param failure_reason: The failure_reason of this ExecutionStatus.
        :type failure_reason: str
        """

        self._failure_reason = failure_reason
