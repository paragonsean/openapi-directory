# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.anomaly_detector_status import AnomalyDetectorStatus
from openapi_server import util


class AnomalyDetectorSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, anomaly_detector_arn: str=None, anomaly_detector_name: str=None, anomaly_detector_description: str=None, creation_time: datetime=None, last_modification_time: datetime=None, status: AnomalyDetectorStatus=None, tags: Dict=None):
        """AnomalyDetectorSummary - a model defined in OpenAPI

        :param anomaly_detector_arn: The anomaly_detector_arn of this AnomalyDetectorSummary.
        :param anomaly_detector_name: The anomaly_detector_name of this AnomalyDetectorSummary.
        :param anomaly_detector_description: The anomaly_detector_description of this AnomalyDetectorSummary.
        :param creation_time: The creation_time of this AnomalyDetectorSummary.
        :param last_modification_time: The last_modification_time of this AnomalyDetectorSummary.
        :param status: The status of this AnomalyDetectorSummary.
        :param tags: The tags of this AnomalyDetectorSummary.
        """
        self.openapi_types = {
            'anomaly_detector_arn': str,
            'anomaly_detector_name': str,
            'anomaly_detector_description': str,
            'creation_time': datetime,
            'last_modification_time': datetime,
            'status': AnomalyDetectorStatus,
            'tags': Dict
        }

        self.attribute_map = {
            'anomaly_detector_arn': 'AnomalyDetectorArn',
            'anomaly_detector_name': 'AnomalyDetectorName',
            'anomaly_detector_description': 'AnomalyDetectorDescription',
            'creation_time': 'CreationTime',
            'last_modification_time': 'LastModificationTime',
            'status': 'Status',
            'tags': 'Tags'
        }

        self._anomaly_detector_arn = anomaly_detector_arn
        self._anomaly_detector_name = anomaly_detector_name
        self._anomaly_detector_description = anomaly_detector_description
        self._creation_time = creation_time
        self._last_modification_time = last_modification_time
        self._status = status
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnomalyDetectorSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnomalyDetectorSummary of this AnomalyDetectorSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def anomaly_detector_arn(self):
        """Gets the anomaly_detector_arn of this AnomalyDetectorSummary.


        :return: The anomaly_detector_arn of this AnomalyDetectorSummary.
        :rtype: str
        """
        return self._anomaly_detector_arn

    @anomaly_detector_arn.setter
    def anomaly_detector_arn(self, anomaly_detector_arn):
        """Sets the anomaly_detector_arn of this AnomalyDetectorSummary.


        :param anomaly_detector_arn: The anomaly_detector_arn of this AnomalyDetectorSummary.
        :type anomaly_detector_arn: str
        """

        self._anomaly_detector_arn = anomaly_detector_arn

    @property
    def anomaly_detector_name(self):
        """Gets the anomaly_detector_name of this AnomalyDetectorSummary.


        :return: The anomaly_detector_name of this AnomalyDetectorSummary.
        :rtype: str
        """
        return self._anomaly_detector_name

    @anomaly_detector_name.setter
    def anomaly_detector_name(self, anomaly_detector_name):
        """Sets the anomaly_detector_name of this AnomalyDetectorSummary.


        :param anomaly_detector_name: The anomaly_detector_name of this AnomalyDetectorSummary.
        :type anomaly_detector_name: str
        """

        self._anomaly_detector_name = anomaly_detector_name

    @property
    def anomaly_detector_description(self):
        """Gets the anomaly_detector_description of this AnomalyDetectorSummary.


        :return: The anomaly_detector_description of this AnomalyDetectorSummary.
        :rtype: str
        """
        return self._anomaly_detector_description

    @anomaly_detector_description.setter
    def anomaly_detector_description(self, anomaly_detector_description):
        """Sets the anomaly_detector_description of this AnomalyDetectorSummary.


        :param anomaly_detector_description: The anomaly_detector_description of this AnomalyDetectorSummary.
        :type anomaly_detector_description: str
        """

        self._anomaly_detector_description = anomaly_detector_description

    @property
    def creation_time(self):
        """Gets the creation_time of this AnomalyDetectorSummary.


        :return: The creation_time of this AnomalyDetectorSummary.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this AnomalyDetectorSummary.


        :param creation_time: The creation_time of this AnomalyDetectorSummary.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def last_modification_time(self):
        """Gets the last_modification_time of this AnomalyDetectorSummary.


        :return: The last_modification_time of this AnomalyDetectorSummary.
        :rtype: datetime
        """
        return self._last_modification_time

    @last_modification_time.setter
    def last_modification_time(self, last_modification_time):
        """Sets the last_modification_time of this AnomalyDetectorSummary.


        :param last_modification_time: The last_modification_time of this AnomalyDetectorSummary.
        :type last_modification_time: datetime
        """

        self._last_modification_time = last_modification_time

    @property
    def status(self):
        """Gets the status of this AnomalyDetectorSummary.


        :return: The status of this AnomalyDetectorSummary.
        :rtype: AnomalyDetectorStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AnomalyDetectorSummary.


        :param status: The status of this AnomalyDetectorSummary.
        :type status: AnomalyDetectorStatus
        """

        self._status = status

    @property
    def tags(self):
        """Gets the tags of this AnomalyDetectorSummary.


        :return: The tags of this AnomalyDetectorSummary.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this AnomalyDetectorSummary.


        :param tags: The tags of this AnomalyDetectorSummary.
        :type tags: Dict
        """

        self._tags = tags
