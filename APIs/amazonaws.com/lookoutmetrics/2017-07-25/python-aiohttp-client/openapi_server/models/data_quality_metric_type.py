# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataQualityMetricType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    COLUMN_COMPLETENESS = 'COLUMN_COMPLETENESS'
    DIMENSION_UNIQUENESS = 'DIMENSION_UNIQUENESS'
    TIME_SERIES_COUNT = 'TIME_SERIES_COUNT'
    ROWS_PROCESSED = 'ROWS_PROCESSED'
    ROWS_PARTIAL_COMPLIANCE = 'ROWS_PARTIAL_COMPLIANCE'
    INVALID_ROWS_COMPLIANCE = 'INVALID_ROWS_COMPLIANCE'
    BACKTEST_TRAINING_DATA_START_TIME_STAMP = 'BACKTEST_TRAINING_DATA_START_TIME_STAMP'
    BACKTEST_TRAINING_DATA_END_TIME_STAMP = 'BACKTEST_TRAINING_DATA_END_TIME_STAMP'
    BACKTEST_INFERENCE_DATA_START_TIME_STAMP = 'BACKTEST_INFERENCE_DATA_START_TIME_STAMP'
    BACKTEST_INFERENCE_DATA_END_TIME_STAMP = 'BACKTEST_INFERENCE_DATA_END_TIME_STAMP'

    def __init__(self):
        """DataQualityMetricType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataQualityMetricType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataQualityMetricType of this DataQualityMetricType.
        """
        return util.deserialize_model(dikt, cls)
