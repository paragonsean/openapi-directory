# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.detected_metric_source_s3_source_config import DetectedMetricSourceS3SourceConfig
from openapi_server import util


class DetectedMetricSetConfigMetricSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s3_source_config: DetectedMetricSourceS3SourceConfig=None):
        """DetectedMetricSetConfigMetricSource - a model defined in OpenAPI

        :param s3_source_config: The s3_source_config of this DetectedMetricSetConfigMetricSource.
        """
        self.openapi_types = {
            's3_source_config': DetectedMetricSourceS3SourceConfig
        }

        self.attribute_map = {
            's3_source_config': 'S3SourceConfig'
        }

        self._s3_source_config = s3_source_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DetectedMetricSetConfigMetricSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DetectedMetricSetConfig_MetricSource of this DetectedMetricSetConfigMetricSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_source_config(self):
        """Gets the s3_source_config of this DetectedMetricSetConfigMetricSource.


        :return: The s3_source_config of this DetectedMetricSetConfigMetricSource.
        :rtype: DetectedMetricSourceS3SourceConfig
        """
        return self._s3_source_config

    @s3_source_config.setter
    def s3_source_config(self, s3_source_config):
        """Sets the s3_source_config of this DetectedMetricSetConfigMetricSource.


        :param s3_source_config: The s3_source_config of this DetectedMetricSetConfigMetricSource.
        :type s3_source_config: DetectedMetricSourceS3SourceConfig
        """

        self._s3_source_config = s3_source_config
