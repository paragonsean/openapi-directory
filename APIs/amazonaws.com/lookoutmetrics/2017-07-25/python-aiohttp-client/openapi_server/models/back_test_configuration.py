# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BackTestConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, run_back_test_mode: bool=None):
        """BackTestConfiguration - a model defined in OpenAPI

        :param run_back_test_mode: The run_back_test_mode of this BackTestConfiguration.
        """
        self.openapi_types = {
            'run_back_test_mode': bool
        }

        self.attribute_map = {
            'run_back_test_mode': 'RunBackTestMode'
        }

        self._run_back_test_mode = run_back_test_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BackTestConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BackTestConfiguration of this BackTestConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def run_back_test_mode(self):
        """Gets the run_back_test_mode of this BackTestConfiguration.


        :return: The run_back_test_mode of this BackTestConfiguration.
        :rtype: bool
        """
        return self._run_back_test_mode

    @run_back_test_mode.setter
    def run_back_test_mode(self, run_back_test_mode):
        """Sets the run_back_test_mode of this BackTestConfiguration.


        :param run_back_test_mode: The run_back_test_mode of this BackTestConfiguration.
        :type run_back_test_mode: bool
        """
        if run_back_test_mode is None:
            raise ValueError("Invalid value for `run_back_test_mode`, must not be `None`")

        self._run_back_test_mode = run_back_test_mode
