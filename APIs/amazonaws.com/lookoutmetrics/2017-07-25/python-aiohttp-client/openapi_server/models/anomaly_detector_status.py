# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnomalyDetectorStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ACTIVE = 'ACTIVE'
    ACTIVATING = 'ACTIVATING'
    DELETING = 'DELETING'
    FAILED = 'FAILED'
    INACTIVE = 'INACTIVE'
    LEARNING = 'LEARNING'
    BACK_TEST_ACTIVATING = 'BACK_TEST_ACTIVATING'
    BACK_TEST_ACTIVE = 'BACK_TEST_ACTIVE'
    BACK_TEST_COMPLETE = 'BACK_TEST_COMPLETE'
    DEACTIVATED = 'DEACTIVATED'
    DEACTIVATING = 'DEACTIVATING'

    def __init__(self):
        """AnomalyDetectorStatus - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnomalyDetectorStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnomalyDetectorStatus of this AnomalyDetectorStatus.
        """
        return util.deserialize_model(dikt, cls)
