# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RedshiftSourceConfigVpcConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subnet_id_list: List=None, security_group_id_list: List=None):
        """RedshiftSourceConfigVpcConfiguration - a model defined in OpenAPI

        :param subnet_id_list: The subnet_id_list of this RedshiftSourceConfigVpcConfiguration.
        :param security_group_id_list: The security_group_id_list of this RedshiftSourceConfigVpcConfiguration.
        """
        self.openapi_types = {
            'subnet_id_list': List,
            'security_group_id_list': List
        }

        self.attribute_map = {
            'subnet_id_list': 'SubnetIdList',
            'security_group_id_list': 'SecurityGroupIdList'
        }

        self._subnet_id_list = subnet_id_list
        self._security_group_id_list = security_group_id_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RedshiftSourceConfigVpcConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RedshiftSourceConfig_VpcConfiguration of this RedshiftSourceConfigVpcConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subnet_id_list(self):
        """Gets the subnet_id_list of this RedshiftSourceConfigVpcConfiguration.


        :return: The subnet_id_list of this RedshiftSourceConfigVpcConfiguration.
        :rtype: List
        """
        return self._subnet_id_list

    @subnet_id_list.setter
    def subnet_id_list(self, subnet_id_list):
        """Sets the subnet_id_list of this RedshiftSourceConfigVpcConfiguration.


        :param subnet_id_list: The subnet_id_list of this RedshiftSourceConfigVpcConfiguration.
        :type subnet_id_list: List
        """
        if subnet_id_list is None:
            raise ValueError("Invalid value for `subnet_id_list`, must not be `None`")

        self._subnet_id_list = subnet_id_list

    @property
    def security_group_id_list(self):
        """Gets the security_group_id_list of this RedshiftSourceConfigVpcConfiguration.


        :return: The security_group_id_list of this RedshiftSourceConfigVpcConfiguration.
        :rtype: List
        """
        return self._security_group_id_list

    @security_group_id_list.setter
    def security_group_id_list(self, security_group_id_list):
        """Sets the security_group_id_list of this RedshiftSourceConfigVpcConfiguration.


        :param security_group_id_list: The security_group_id_list of this RedshiftSourceConfigVpcConfiguration.
        :type security_group_id_list: List
        """
        if security_group_id_list is None:
            raise ValueError("Invalid value for `security_group_id_list`, must not be `None`")

        self._security_group_id_list = security_group_id_list
