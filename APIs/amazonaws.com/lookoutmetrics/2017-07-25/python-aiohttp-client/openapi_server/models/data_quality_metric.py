# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_quality_metric_type import DataQualityMetricType
from openapi_server import util


class DataQualityMetric(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metric_type: DataQualityMetricType=None, metric_description: str=None, related_column_name: str=None, metric_value: float=None):
        """DataQualityMetric - a model defined in OpenAPI

        :param metric_type: The metric_type of this DataQualityMetric.
        :param metric_description: The metric_description of this DataQualityMetric.
        :param related_column_name: The related_column_name of this DataQualityMetric.
        :param metric_value: The metric_value of this DataQualityMetric.
        """
        self.openapi_types = {
            'metric_type': DataQualityMetricType,
            'metric_description': str,
            'related_column_name': str,
            'metric_value': float
        }

        self.attribute_map = {
            'metric_type': 'MetricType',
            'metric_description': 'MetricDescription',
            'related_column_name': 'RelatedColumnName',
            'metric_value': 'MetricValue'
        }

        self._metric_type = metric_type
        self._metric_description = metric_description
        self._related_column_name = related_column_name
        self._metric_value = metric_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataQualityMetric':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataQualityMetric of this DataQualityMetric.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metric_type(self):
        """Gets the metric_type of this DataQualityMetric.


        :return: The metric_type of this DataQualityMetric.
        :rtype: DataQualityMetricType
        """
        return self._metric_type

    @metric_type.setter
    def metric_type(self, metric_type):
        """Sets the metric_type of this DataQualityMetric.


        :param metric_type: The metric_type of this DataQualityMetric.
        :type metric_type: DataQualityMetricType
        """

        self._metric_type = metric_type

    @property
    def metric_description(self):
        """Gets the metric_description of this DataQualityMetric.


        :return: The metric_description of this DataQualityMetric.
        :rtype: str
        """
        return self._metric_description

    @metric_description.setter
    def metric_description(self, metric_description):
        """Sets the metric_description of this DataQualityMetric.


        :param metric_description: The metric_description of this DataQualityMetric.
        :type metric_description: str
        """

        self._metric_description = metric_description

    @property
    def related_column_name(self):
        """Gets the related_column_name of this DataQualityMetric.


        :return: The related_column_name of this DataQualityMetric.
        :rtype: str
        """
        return self._related_column_name

    @related_column_name.setter
    def related_column_name(self, related_column_name):
        """Sets the related_column_name of this DataQualityMetric.


        :param related_column_name: The related_column_name of this DataQualityMetric.
        :type related_column_name: str
        """

        self._related_column_name = related_column_name

    @property
    def metric_value(self):
        """Gets the metric_value of this DataQualityMetric.


        :return: The metric_value of this DataQualityMetric.
        :rtype: float
        """
        return self._metric_value

    @metric_value.setter
    def metric_value(self, metric_value):
        """Sets the metric_value of this DataQualityMetric.


        :param metric_value: The metric_value of this DataQualityMetric.
        :type metric_value: float
        """

        self._metric_value = metric_value
