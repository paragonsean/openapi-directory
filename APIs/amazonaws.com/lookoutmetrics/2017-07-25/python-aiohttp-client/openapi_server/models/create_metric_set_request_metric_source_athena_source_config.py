# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cloud_watch_config_back_test_configuration import CloudWatchConfigBackTestConfiguration
from openapi_server import util


class CreateMetricSetRequestMetricSourceAthenaSourceConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, role_arn: str=None, database_name: str=None, data_catalog: str=None, table_name: str=None, work_group_name: str=None, s3_results_path: str=None, back_test_configuration: CloudWatchConfigBackTestConfiguration=None):
        """CreateMetricSetRequestMetricSourceAthenaSourceConfig - a model defined in OpenAPI

        :param role_arn: The role_arn of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :param database_name: The database_name of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :param data_catalog: The data_catalog of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :param table_name: The table_name of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :param work_group_name: The work_group_name of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :param s3_results_path: The s3_results_path of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :param back_test_configuration: The back_test_configuration of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        """
        self.openapi_types = {
            'role_arn': str,
            'database_name': str,
            'data_catalog': str,
            'table_name': str,
            'work_group_name': str,
            's3_results_path': str,
            'back_test_configuration': CloudWatchConfigBackTestConfiguration
        }

        self.attribute_map = {
            'role_arn': 'RoleArn',
            'database_name': 'DatabaseName',
            'data_catalog': 'DataCatalog',
            'table_name': 'TableName',
            'work_group_name': 'WorkGroupName',
            's3_results_path': 'S3ResultsPath',
            'back_test_configuration': 'BackTestConfiguration'
        }

        self._role_arn = role_arn
        self._database_name = database_name
        self._data_catalog = data_catalog
        self._table_name = table_name
        self._work_group_name = work_group_name
        self._s3_results_path = s3_results_path
        self._back_test_configuration = back_test_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateMetricSetRequestMetricSourceAthenaSourceConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateMetricSet_request_MetricSource_AthenaSourceConfig of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def role_arn(self):
        """Gets the role_arn of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.


        :return: The role_arn of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.


        :param role_arn: The role_arn of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def database_name(self):
        """Gets the database_name of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.


        :return: The database_name of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :rtype: str
        """
        return self._database_name

    @database_name.setter
    def database_name(self, database_name):
        """Sets the database_name of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.


        :param database_name: The database_name of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :type database_name: str
        """

        self._database_name = database_name

    @property
    def data_catalog(self):
        """Gets the data_catalog of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.


        :return: The data_catalog of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :rtype: str
        """
        return self._data_catalog

    @data_catalog.setter
    def data_catalog(self, data_catalog):
        """Sets the data_catalog of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.


        :param data_catalog: The data_catalog of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :type data_catalog: str
        """

        self._data_catalog = data_catalog

    @property
    def table_name(self):
        """Gets the table_name of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.


        :return: The table_name of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :rtype: str
        """
        return self._table_name

    @table_name.setter
    def table_name(self, table_name):
        """Sets the table_name of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.


        :param table_name: The table_name of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :type table_name: str
        """

        self._table_name = table_name

    @property
    def work_group_name(self):
        """Gets the work_group_name of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.


        :return: The work_group_name of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :rtype: str
        """
        return self._work_group_name

    @work_group_name.setter
    def work_group_name(self, work_group_name):
        """Sets the work_group_name of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.


        :param work_group_name: The work_group_name of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :type work_group_name: str
        """

        self._work_group_name = work_group_name

    @property
    def s3_results_path(self):
        """Gets the s3_results_path of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.


        :return: The s3_results_path of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :rtype: str
        """
        return self._s3_results_path

    @s3_results_path.setter
    def s3_results_path(self, s3_results_path):
        """Sets the s3_results_path of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.


        :param s3_results_path: The s3_results_path of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :type s3_results_path: str
        """

        self._s3_results_path = s3_results_path

    @property
    def back_test_configuration(self):
        """Gets the back_test_configuration of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.


        :return: The back_test_configuration of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :rtype: CloudWatchConfigBackTestConfiguration
        """
        return self._back_test_configuration

    @back_test_configuration.setter
    def back_test_configuration(self, back_test_configuration):
        """Sets the back_test_configuration of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.


        :param back_test_configuration: The back_test_configuration of this CreateMetricSetRequestMetricSourceAthenaSourceConfig.
        :type back_test_configuration: CloudWatchConfigBackTestConfiguration
        """

        self._back_test_configuration = back_test_configuration
