# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DimensionValueContribution(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dimension_value: str=None, contribution_score: float=None):
        """DimensionValueContribution - a model defined in OpenAPI

        :param dimension_value: The dimension_value of this DimensionValueContribution.
        :param contribution_score: The contribution_score of this DimensionValueContribution.
        """
        self.openapi_types = {
            'dimension_value': str,
            'contribution_score': float
        }

        self.attribute_map = {
            'dimension_value': 'DimensionValue',
            'contribution_score': 'ContributionScore'
        }

        self._dimension_value = dimension_value
        self._contribution_score = contribution_score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DimensionValueContribution':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DimensionValueContribution of this DimensionValueContribution.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dimension_value(self):
        """Gets the dimension_value of this DimensionValueContribution.


        :return: The dimension_value of this DimensionValueContribution.
        :rtype: str
        """
        return self._dimension_value

    @dimension_value.setter
    def dimension_value(self, dimension_value):
        """Sets the dimension_value of this DimensionValueContribution.


        :param dimension_value: The dimension_value of this DimensionValueContribution.
        :type dimension_value: str
        """

        self._dimension_value = dimension_value

    @property
    def contribution_score(self):
        """Gets the contribution_score of this DimensionValueContribution.


        :return: The contribution_score of this DimensionValueContribution.
        :rtype: float
        """
        return self._contribution_score

    @contribution_score.setter
    def contribution_score(self, contribution_score):
        """Sets the contribution_score of this DimensionValueContribution.


        :param contribution_score: The contribution_score of this DimensionValueContribution.
        :type contribution_score: float
        """

        self._contribution_score = contribution_score
