# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.filter_operation import FilterOperation
from openapi_server import util


class Filter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dimension_value: str=None, filter_operation: FilterOperation=None):
        """Filter - a model defined in OpenAPI

        :param dimension_value: The dimension_value of this Filter.
        :param filter_operation: The filter_operation of this Filter.
        """
        self.openapi_types = {
            'dimension_value': str,
            'filter_operation': FilterOperation
        }

        self.attribute_map = {
            'dimension_value': 'DimensionValue',
            'filter_operation': 'FilterOperation'
        }

        self._dimension_value = dimension_value
        self._filter_operation = filter_operation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Filter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Filter of this Filter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dimension_value(self):
        """Gets the dimension_value of this Filter.


        :return: The dimension_value of this Filter.
        :rtype: str
        """
        return self._dimension_value

    @dimension_value.setter
    def dimension_value(self, dimension_value):
        """Sets the dimension_value of this Filter.


        :param dimension_value: The dimension_value of this Filter.
        :type dimension_value: str
        """

        self._dimension_value = dimension_value

    @property
    def filter_operation(self):
        """Gets the filter_operation of this Filter.


        :return: The filter_operation of this Filter.
        :rtype: FilterOperation
        """
        return self._filter_operation

    @filter_operation.setter
    def filter_operation(self, filter_operation):
        """Sets the filter_operation of this Filter.


        :param filter_operation: The filter_operation of this Filter.
        :type filter_operation: FilterOperation
        """

        self._filter_operation = filter_operation
