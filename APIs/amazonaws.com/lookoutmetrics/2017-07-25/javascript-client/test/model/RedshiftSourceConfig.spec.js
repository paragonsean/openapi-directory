/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonLookoutForMetrics);
  }
}(this, function(expect, AmazonLookoutForMetrics) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonLookoutForMetrics.RedshiftSourceConfig();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RedshiftSourceConfig', function() {
    it('should create an instance of RedshiftSourceConfig', function() {
      // uncomment below and update the code to test RedshiftSourceConfig
      //var instance = new AmazonLookoutForMetrics.RedshiftSourceConfig();
      //expect(instance).to.be.a(AmazonLookoutForMetrics.RedshiftSourceConfig);
    });

    it('should have the property clusterIdentifier (base name: "ClusterIdentifier")', function() {
      // uncomment below and update the code to test the property clusterIdentifier
      //var instance = new AmazonLookoutForMetrics.RedshiftSourceConfig();
      //expect(instance).to.be();
    });

    it('should have the property databaseHost (base name: "DatabaseHost")', function() {
      // uncomment below and update the code to test the property databaseHost
      //var instance = new AmazonLookoutForMetrics.RedshiftSourceConfig();
      //expect(instance).to.be();
    });

    it('should have the property databasePort (base name: "DatabasePort")', function() {
      // uncomment below and update the code to test the property databasePort
      //var instance = new AmazonLookoutForMetrics.RedshiftSourceConfig();
      //expect(instance).to.be();
    });

    it('should have the property secretManagerArn (base name: "SecretManagerArn")', function() {
      // uncomment below and update the code to test the property secretManagerArn
      //var instance = new AmazonLookoutForMetrics.RedshiftSourceConfig();
      //expect(instance).to.be();
    });

    it('should have the property databaseName (base name: "DatabaseName")', function() {
      // uncomment below and update the code to test the property databaseName
      //var instance = new AmazonLookoutForMetrics.RedshiftSourceConfig();
      //expect(instance).to.be();
    });

    it('should have the property tableName (base name: "TableName")', function() {
      // uncomment below and update the code to test the property tableName
      //var instance = new AmazonLookoutForMetrics.RedshiftSourceConfig();
      //expect(instance).to.be();
    });

    it('should have the property roleArn (base name: "RoleArn")', function() {
      // uncomment below and update the code to test the property roleArn
      //var instance = new AmazonLookoutForMetrics.RedshiftSourceConfig();
      //expect(instance).to.be();
    });

    it('should have the property vpcConfiguration (base name: "VpcConfiguration")', function() {
      // uncomment below and update the code to test the property vpcConfiguration
      //var instance = new AmazonLookoutForMetrics.RedshiftSourceConfig();
      //expect(instance).to.be();
    });

  });

}));
