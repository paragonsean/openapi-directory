/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateMetricSetRequestMetricSourceAppFlowConfig from './CreateMetricSetRequestMetricSourceAppFlowConfig';
import CreateMetricSetRequestMetricSourceAthenaSourceConfig from './CreateMetricSetRequestMetricSourceAthenaSourceConfig';
import CreateMetricSetRequestMetricSourceCloudWatchConfig from './CreateMetricSetRequestMetricSourceCloudWatchConfig';
import CreateMetricSetRequestMetricSourceRDSSourceConfig from './CreateMetricSetRequestMetricSourceRDSSourceConfig';
import CreateMetricSetRequestMetricSourceRedshiftSourceConfig from './CreateMetricSetRequestMetricSourceRedshiftSourceConfig';
import MetricSource from './MetricSource';
import S3SourceConfig from './S3SourceConfig';

/**
 * The DescribeMetricSetResponseMetricSource model module.
 * @module model/DescribeMetricSetResponseMetricSource
 * @version 2017-07-25
 */
class DescribeMetricSetResponseMetricSource {
    /**
     * Constructs a new <code>DescribeMetricSetResponseMetricSource</code>.
     * @alias module:model/DescribeMetricSetResponseMetricSource
     * @implements module:model/MetricSource
     */
    constructor() { 
        MetricSource.initialize(this);
        DescribeMetricSetResponseMetricSource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeMetricSetResponseMetricSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeMetricSetResponseMetricSource} obj Optional instance to populate.
     * @return {module:model/DescribeMetricSetResponseMetricSource} The populated <code>DescribeMetricSetResponseMetricSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeMetricSetResponseMetricSource();
            MetricSource.constructFromObject(data, obj);

            if (data.hasOwnProperty('S3SourceConfig')) {
                obj['S3SourceConfig'] = S3SourceConfig.constructFromObject(data['S3SourceConfig']);
            }
            if (data.hasOwnProperty('AppFlowConfig')) {
                obj['AppFlowConfig'] = CreateMetricSetRequestMetricSourceAppFlowConfig.constructFromObject(data['AppFlowConfig']);
            }
            if (data.hasOwnProperty('CloudWatchConfig')) {
                obj['CloudWatchConfig'] = CreateMetricSetRequestMetricSourceCloudWatchConfig.constructFromObject(data['CloudWatchConfig']);
            }
            if (data.hasOwnProperty('RDSSourceConfig')) {
                obj['RDSSourceConfig'] = CreateMetricSetRequestMetricSourceRDSSourceConfig.constructFromObject(data['RDSSourceConfig']);
            }
            if (data.hasOwnProperty('RedshiftSourceConfig')) {
                obj['RedshiftSourceConfig'] = CreateMetricSetRequestMetricSourceRedshiftSourceConfig.constructFromObject(data['RedshiftSourceConfig']);
            }
            if (data.hasOwnProperty('AthenaSourceConfig')) {
                obj['AthenaSourceConfig'] = CreateMetricSetRequestMetricSourceAthenaSourceConfig.constructFromObject(data['AthenaSourceConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeMetricSetResponseMetricSource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeMetricSetResponseMetricSource</code>.
     */
    static validateJSON(data) {
        // validate the optional field `S3SourceConfig`
        if (data['S3SourceConfig']) { // data not null
          S3SourceConfig.validateJSON(data['S3SourceConfig']);
        }
        // validate the optional field `AppFlowConfig`
        if (data['AppFlowConfig']) { // data not null
          CreateMetricSetRequestMetricSourceAppFlowConfig.validateJSON(data['AppFlowConfig']);
        }
        // validate the optional field `CloudWatchConfig`
        if (data['CloudWatchConfig']) { // data not null
          CreateMetricSetRequestMetricSourceCloudWatchConfig.validateJSON(data['CloudWatchConfig']);
        }
        // validate the optional field `RDSSourceConfig`
        if (data['RDSSourceConfig']) { // data not null
          CreateMetricSetRequestMetricSourceRDSSourceConfig.validateJSON(data['RDSSourceConfig']);
        }
        // validate the optional field `RedshiftSourceConfig`
        if (data['RedshiftSourceConfig']) { // data not null
          CreateMetricSetRequestMetricSourceRedshiftSourceConfig.validateJSON(data['RedshiftSourceConfig']);
        }
        // validate the optional field `AthenaSourceConfig`
        if (data['AthenaSourceConfig']) { // data not null
          CreateMetricSetRequestMetricSourceAthenaSourceConfig.validateJSON(data['AthenaSourceConfig']);
        }

        return true;
    }


}



/**
 * @member {module:model/S3SourceConfig} S3SourceConfig
 */
DescribeMetricSetResponseMetricSource.prototype['S3SourceConfig'] = undefined;

/**
 * @member {module:model/CreateMetricSetRequestMetricSourceAppFlowConfig} AppFlowConfig
 */
DescribeMetricSetResponseMetricSource.prototype['AppFlowConfig'] = undefined;

/**
 * @member {module:model/CreateMetricSetRequestMetricSourceCloudWatchConfig} CloudWatchConfig
 */
DescribeMetricSetResponseMetricSource.prototype['CloudWatchConfig'] = undefined;

/**
 * @member {module:model/CreateMetricSetRequestMetricSourceRDSSourceConfig} RDSSourceConfig
 */
DescribeMetricSetResponseMetricSource.prototype['RDSSourceConfig'] = undefined;

/**
 * @member {module:model/CreateMetricSetRequestMetricSourceRedshiftSourceConfig} RedshiftSourceConfig
 */
DescribeMetricSetResponseMetricSource.prototype['RedshiftSourceConfig'] = undefined;

/**
 * @member {module:model/CreateMetricSetRequestMetricSourceAthenaSourceConfig} AthenaSourceConfig
 */
DescribeMetricSetResponseMetricSource.prototype['AthenaSourceConfig'] = undefined;


// Implement MetricSource interface:
/**
 * @member {module:model/S3SourceConfig} S3SourceConfig
 */
MetricSource.prototype['S3SourceConfig'] = undefined;
/**
 * @member {module:model/CreateMetricSetRequestMetricSourceAppFlowConfig} AppFlowConfig
 */
MetricSource.prototype['AppFlowConfig'] = undefined;
/**
 * @member {module:model/CreateMetricSetRequestMetricSourceCloudWatchConfig} CloudWatchConfig
 */
MetricSource.prototype['CloudWatchConfig'] = undefined;
/**
 * @member {module:model/CreateMetricSetRequestMetricSourceRDSSourceConfig} RDSSourceConfig
 */
MetricSource.prototype['RDSSourceConfig'] = undefined;
/**
 * @member {module:model/CreateMetricSetRequestMetricSourceRedshiftSourceConfig} RedshiftSourceConfig
 */
MetricSource.prototype['RedshiftSourceConfig'] = undefined;
/**
 * @member {module:model/CreateMetricSetRequestMetricSourceAthenaSourceConfig} AthenaSourceConfig
 */
MetricSource.prototype['AthenaSourceConfig'] = undefined;




export default DescribeMetricSetResponseMetricSource;

