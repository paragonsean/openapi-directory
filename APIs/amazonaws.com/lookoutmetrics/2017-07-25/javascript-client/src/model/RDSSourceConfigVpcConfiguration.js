/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VpcConfiguration from './VpcConfiguration';

/**
 * The RDSSourceConfigVpcConfiguration model module.
 * @module model/RDSSourceConfigVpcConfiguration
 * @version 2017-07-25
 */
class RDSSourceConfigVpcConfiguration {
    /**
     * Constructs a new <code>RDSSourceConfigVpcConfiguration</code>.
     * @alias module:model/RDSSourceConfigVpcConfiguration
     * @implements module:model/VpcConfiguration
     * @param subnetIdList {Array} 
     * @param securityGroupIdList {Array} 
     */
    constructor(subnetIdList, securityGroupIdList) { 
        VpcConfiguration.initialize(this, subnetIdList, securityGroupIdList);
        RDSSourceConfigVpcConfiguration.initialize(this, subnetIdList, securityGroupIdList);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, subnetIdList, securityGroupIdList) { 
        obj['SubnetIdList'] = subnetIdList;
        obj['SecurityGroupIdList'] = securityGroupIdList;
    }

    /**
     * Constructs a <code>RDSSourceConfigVpcConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RDSSourceConfigVpcConfiguration} obj Optional instance to populate.
     * @return {module:model/RDSSourceConfigVpcConfiguration} The populated <code>RDSSourceConfigVpcConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RDSSourceConfigVpcConfiguration();
            VpcConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('SubnetIdList')) {
                obj['SubnetIdList'] = ApiClient.convertToType(data['SubnetIdList'], Array);
            }
            if (data.hasOwnProperty('SecurityGroupIdList')) {
                obj['SecurityGroupIdList'] = ApiClient.convertToType(data['SecurityGroupIdList'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RDSSourceConfigVpcConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RDSSourceConfigVpcConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RDSSourceConfigVpcConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `SubnetIdList`
        if (data['SubnetIdList']) { // data not null
          Array.validateJSON(data['SubnetIdList']);
        }
        // validate the optional field `SecurityGroupIdList`
        if (data['SecurityGroupIdList']) { // data not null
          Array.validateJSON(data['SecurityGroupIdList']);
        }

        return true;
    }


}

RDSSourceConfigVpcConfiguration.RequiredProperties = ["SubnetIdList", "SecurityGroupIdList"];

/**
 * @member {Array} SubnetIdList
 */
RDSSourceConfigVpcConfiguration.prototype['SubnetIdList'] = undefined;

/**
 * @member {Array} SecurityGroupIdList
 */
RDSSourceConfigVpcConfiguration.prototype['SecurityGroupIdList'] = undefined;


// Implement VpcConfiguration interface:
/**
 * @member {Array} SubnetIdList
 */
VpcConfiguration.prototype['SubnetIdList'] = undefined;
/**
 * @member {Array} SecurityGroupIdList
 */
VpcConfiguration.prototype['SecurityGroupIdList'] = undefined;




export default RDSSourceConfigVpcConfiguration;

