/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TimeSeries model module.
 * @module model/TimeSeries
 * @version 2017-07-25
 */
class TimeSeries {
    /**
     * Constructs a new <code>TimeSeries</code>.
     * Details about a metric. A metric is an aggregation of the values of a measure for a dimension value, such as &lt;i&gt;availability&lt;/i&gt; in the &lt;i&gt;us-east-1&lt;/i&gt; Region.
     * @alias module:model/TimeSeries
     * @param timeSeriesId {String} 
     * @param dimensionList {Array} 
     * @param metricValueList {Array} 
     */
    constructor(timeSeriesId, dimensionList, metricValueList) { 
        
        TimeSeries.initialize(this, timeSeriesId, dimensionList, metricValueList);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, timeSeriesId, dimensionList, metricValueList) { 
        obj['TimeSeriesId'] = timeSeriesId;
        obj['DimensionList'] = dimensionList;
        obj['MetricValueList'] = metricValueList;
    }

    /**
     * Constructs a <code>TimeSeries</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimeSeries} obj Optional instance to populate.
     * @return {module:model/TimeSeries} The populated <code>TimeSeries</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimeSeries();

            if (data.hasOwnProperty('TimeSeriesId')) {
                obj['TimeSeriesId'] = ApiClient.convertToType(data['TimeSeriesId'], 'String');
            }
            if (data.hasOwnProperty('DimensionList')) {
                obj['DimensionList'] = ApiClient.convertToType(data['DimensionList'], Array);
            }
            if (data.hasOwnProperty('MetricValueList')) {
                obj['MetricValueList'] = ApiClient.convertToType(data['MetricValueList'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimeSeries</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimeSeries</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TimeSeries.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `TimeSeriesId`
        if (data['TimeSeriesId']) { // data not null
          String.validateJSON(data['TimeSeriesId']);
        }
        // validate the optional field `DimensionList`
        if (data['DimensionList']) { // data not null
          Array.validateJSON(data['DimensionList']);
        }
        // validate the optional field `MetricValueList`
        if (data['MetricValueList']) { // data not null
          Array.validateJSON(data['MetricValueList']);
        }

        return true;
    }


}

TimeSeries.RequiredProperties = ["TimeSeriesId", "DimensionList", "MetricValueList"];

/**
 * @member {String} TimeSeriesId
 */
TimeSeries.prototype['TimeSeriesId'] = undefined;

/**
 * @member {Array} DimensionList
 */
TimeSeries.prototype['DimensionList'] = undefined;

/**
 * @member {Array} MetricValueList
 */
TimeSeries.prototype['MetricValueList'] = undefined;






export default TimeSeries;

