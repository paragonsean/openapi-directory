/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AutoDetectionS3SourceConfig model module.
 * @module model/AutoDetectionS3SourceConfig
 * @version 2017-07-25
 */
class AutoDetectionS3SourceConfig {
    /**
     * Constructs a new <code>AutoDetectionS3SourceConfig</code>.
     * An auto detection source config.
     * @alias module:model/AutoDetectionS3SourceConfig
     */
    constructor() { 
        
        AutoDetectionS3SourceConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutoDetectionS3SourceConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutoDetectionS3SourceConfig} obj Optional instance to populate.
     * @return {module:model/AutoDetectionS3SourceConfig} The populated <code>AutoDetectionS3SourceConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutoDetectionS3SourceConfig();

            if (data.hasOwnProperty('TemplatedPathList')) {
                obj['TemplatedPathList'] = ApiClient.convertToType(data['TemplatedPathList'], Array);
            }
            if (data.hasOwnProperty('HistoricalDataPathList')) {
                obj['HistoricalDataPathList'] = ApiClient.convertToType(data['HistoricalDataPathList'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutoDetectionS3SourceConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutoDetectionS3SourceConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `TemplatedPathList`
        if (data['TemplatedPathList']) { // data not null
          Array.validateJSON(data['TemplatedPathList']);
        }
        // validate the optional field `HistoricalDataPathList`
        if (data['HistoricalDataPathList']) { // data not null
          Array.validateJSON(data['HistoricalDataPathList']);
        }

        return true;
    }


}



/**
 * @member {Array} TemplatedPathList
 */
AutoDetectionS3SourceConfig.prototype['TemplatedPathList'] = undefined;

/**
 * @member {Array} HistoricalDataPathList
 */
AutoDetectionS3SourceConfig.prototype['HistoricalDataPathList'] = undefined;






export default AutoDetectionS3SourceConfig;

