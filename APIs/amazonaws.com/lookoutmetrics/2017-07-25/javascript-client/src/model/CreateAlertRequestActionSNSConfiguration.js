/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SNSConfiguration from './SNSConfiguration';
import SnsFormat from './SnsFormat';

/**
 * The CreateAlertRequestActionSNSConfiguration model module.
 * @module model/CreateAlertRequestActionSNSConfiguration
 * @version 2017-07-25
 */
class CreateAlertRequestActionSNSConfiguration {
    /**
     * Constructs a new <code>CreateAlertRequestActionSNSConfiguration</code>.
     * @alias module:model/CreateAlertRequestActionSNSConfiguration
     * @implements module:model/SNSConfiguration
     * @param roleArn {String} 
     * @param snsTopicArn {String} 
     */
    constructor(roleArn, snsTopicArn) { 
        SNSConfiguration.initialize(this, roleArn, snsTopicArn);
        CreateAlertRequestActionSNSConfiguration.initialize(this, roleArn, snsTopicArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, roleArn, snsTopicArn) { 
        obj['RoleArn'] = roleArn;
        obj['SnsTopicArn'] = snsTopicArn;
    }

    /**
     * Constructs a <code>CreateAlertRequestActionSNSConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateAlertRequestActionSNSConfiguration} obj Optional instance to populate.
     * @return {module:model/CreateAlertRequestActionSNSConfiguration} The populated <code>CreateAlertRequestActionSNSConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAlertRequestActionSNSConfiguration();
            SNSConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('SnsTopicArn')) {
                obj['SnsTopicArn'] = ApiClient.convertToType(data['SnsTopicArn'], 'String');
            }
            if (data.hasOwnProperty('SnsFormat')) {
                obj['SnsFormat'] = ApiClient.convertToType(data['SnsFormat'], SnsFormat);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateAlertRequestActionSNSConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateAlertRequestActionSNSConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateAlertRequestActionSNSConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }
        // validate the optional field `SnsTopicArn`
        if (data['SnsTopicArn']) { // data not null
          String.validateJSON(data['SnsTopicArn']);
        }
        // validate the optional field `SnsFormat`
        if (data['SnsFormat']) { // data not null
          SnsFormat.validateJSON(data['SnsFormat']);
        }

        return true;
    }


}

CreateAlertRequestActionSNSConfiguration.RequiredProperties = ["RoleArn", "SnsTopicArn"];

/**
 * @member {String} RoleArn
 */
CreateAlertRequestActionSNSConfiguration.prototype['RoleArn'] = undefined;

/**
 * @member {String} SnsTopicArn
 */
CreateAlertRequestActionSNSConfiguration.prototype['SnsTopicArn'] = undefined;

/**
 * @member {module:model/SnsFormat} SnsFormat
 */
CreateAlertRequestActionSNSConfiguration.prototype['SnsFormat'] = undefined;


// Implement SNSConfiguration interface:
/**
 * @member {String} RoleArn
 */
SNSConfiguration.prototype['RoleArn'] = undefined;
/**
 * @member {String} SnsTopicArn
 */
SNSConfiguration.prototype['SnsTopicArn'] = undefined;
/**
 * @member {module:model/SnsFormat} SnsFormat
 */
SNSConfiguration.prototype['SnsFormat'] = undefined;




export default CreateAlertRequestActionSNSConfiguration;

