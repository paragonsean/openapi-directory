/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataQualityMetricType from './DataQualityMetricType';

/**
 * The DataQualityMetric model module.
 * @module model/DataQualityMetric
 * @version 2017-07-25
 */
class DataQualityMetric {
    /**
     * Constructs a new <code>DataQualityMetric</code>.
     * An array that describes a data quality metric. Each &lt;code&gt;DataQualityMetric&lt;/code&gt; object contains the data quality metric name, its value, a description of the metric, and the affected column.
     * @alias module:model/DataQualityMetric
     */
    constructor() { 
        
        DataQualityMetric.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataQualityMetric</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataQualityMetric} obj Optional instance to populate.
     * @return {module:model/DataQualityMetric} The populated <code>DataQualityMetric</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataQualityMetric();

            if (data.hasOwnProperty('MetricType')) {
                obj['MetricType'] = ApiClient.convertToType(data['MetricType'], DataQualityMetricType);
            }
            if (data.hasOwnProperty('MetricDescription')) {
                obj['MetricDescription'] = ApiClient.convertToType(data['MetricDescription'], 'String');
            }
            if (data.hasOwnProperty('RelatedColumnName')) {
                obj['RelatedColumnName'] = ApiClient.convertToType(data['RelatedColumnName'], 'String');
            }
            if (data.hasOwnProperty('MetricValue')) {
                obj['MetricValue'] = ApiClient.convertToType(data['MetricValue'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataQualityMetric</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataQualityMetric</code>.
     */
    static validateJSON(data) {
        // validate the optional field `MetricType`
        if (data['MetricType']) { // data not null
          DataQualityMetricType.validateJSON(data['MetricType']);
        }
        // validate the optional field `MetricDescription`
        if (data['MetricDescription']) { // data not null
          String.validateJSON(data['MetricDescription']);
        }
        // validate the optional field `RelatedColumnName`
        if (data['RelatedColumnName']) { // data not null
          String.validateJSON(data['RelatedColumnName']);
        }
        // validate the optional field `MetricValue`
        if (data['MetricValue']) { // data not null
          Number.validateJSON(data['MetricValue']);
        }

        return true;
    }


}



/**
 * @member {module:model/DataQualityMetricType} MetricType
 */
DataQualityMetric.prototype['MetricType'] = undefined;

/**
 * @member {String} MetricDescription
 */
DataQualityMetric.prototype['MetricDescription'] = undefined;

/**
 * @member {String} RelatedColumnName
 */
DataQualityMetric.prototype['RelatedColumnName'] = undefined;

/**
 * @member {Number} MetricValue
 */
DataQualityMetric.prototype['MetricValue'] = undefined;






export default DataQualityMetric;

