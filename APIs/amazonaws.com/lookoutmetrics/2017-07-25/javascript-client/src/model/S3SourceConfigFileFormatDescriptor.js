/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FileFormatDescriptor from './FileFormatDescriptor';
import FileFormatDescriptorCsvFormatDescriptor from './FileFormatDescriptorCsvFormatDescriptor';
import FileFormatDescriptorJsonFormatDescriptor from './FileFormatDescriptorJsonFormatDescriptor';

/**
 * The S3SourceConfigFileFormatDescriptor model module.
 * @module model/S3SourceConfigFileFormatDescriptor
 * @version 2017-07-25
 */
class S3SourceConfigFileFormatDescriptor {
    /**
     * Constructs a new <code>S3SourceConfigFileFormatDescriptor</code>.
     * @alias module:model/S3SourceConfigFileFormatDescriptor
     * @implements module:model/FileFormatDescriptor
     */
    constructor() { 
        FileFormatDescriptor.initialize(this);
        S3SourceConfigFileFormatDescriptor.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>S3SourceConfigFileFormatDescriptor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/S3SourceConfigFileFormatDescriptor} obj Optional instance to populate.
     * @return {module:model/S3SourceConfigFileFormatDescriptor} The populated <code>S3SourceConfigFileFormatDescriptor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new S3SourceConfigFileFormatDescriptor();
            FileFormatDescriptor.constructFromObject(data, obj);

            if (data.hasOwnProperty('CsvFormatDescriptor')) {
                obj['CsvFormatDescriptor'] = FileFormatDescriptorCsvFormatDescriptor.constructFromObject(data['CsvFormatDescriptor']);
            }
            if (data.hasOwnProperty('JsonFormatDescriptor')) {
                obj['JsonFormatDescriptor'] = FileFormatDescriptorJsonFormatDescriptor.constructFromObject(data['JsonFormatDescriptor']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>S3SourceConfigFileFormatDescriptor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>S3SourceConfigFileFormatDescriptor</code>.
     */
    static validateJSON(data) {
        // validate the optional field `CsvFormatDescriptor`
        if (data['CsvFormatDescriptor']) { // data not null
          FileFormatDescriptorCsvFormatDescriptor.validateJSON(data['CsvFormatDescriptor']);
        }
        // validate the optional field `JsonFormatDescriptor`
        if (data['JsonFormatDescriptor']) { // data not null
          FileFormatDescriptorJsonFormatDescriptor.validateJSON(data['JsonFormatDescriptor']);
        }

        return true;
    }


}



/**
 * @member {module:model/FileFormatDescriptorCsvFormatDescriptor} CsvFormatDescriptor
 */
S3SourceConfigFileFormatDescriptor.prototype['CsvFormatDescriptor'] = undefined;

/**
 * @member {module:model/FileFormatDescriptorJsonFormatDescriptor} JsonFormatDescriptor
 */
S3SourceConfigFileFormatDescriptor.prototype['JsonFormatDescriptor'] = undefined;


// Implement FileFormatDescriptor interface:
/**
 * @member {module:model/FileFormatDescriptorCsvFormatDescriptor} CsvFormatDescriptor
 */
FileFormatDescriptor.prototype['CsvFormatDescriptor'] = undefined;
/**
 * @member {module:model/FileFormatDescriptorJsonFormatDescriptor} JsonFormatDescriptor
 */
FileFormatDescriptor.prototype['JsonFormatDescriptor'] = undefined;




export default S3SourceConfigFileFormatDescriptor;

