openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "This is the <i>Amazon Lookout for Metrics API Reference</i>. For an\
    \ introduction to the service with tutorials for getting started, visit <a href=\"\
    https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics\
    \ Developer Guide</a>."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Lookout for Metrics
  version: 2017-07-25
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: lookoutmetrics
  x-aws-signingName: lookoutmetrics
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lookoutmetrics-2017-07-25.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/lookoutmetrics/
servers:
- description: The LookoutMetrics multi-region endpoint
  url: "http://lookoutmetrics.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The LookoutMetrics multi-region endpoint
  url: "https://lookoutmetrics.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The LookoutMetrics endpoint for China (Beijing) and China (Ningxia)
  url: "http://lookoutmetrics.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The LookoutMetrics endpoint for China (Beijing) and China (Ningxia)
  url: "https://lookoutmetrics.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /ActivateAnomalyDetector:
    post:
      description: Activates an anomaly detector.
      operationId: ActivateAnomalyDetector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateAnomalyDetector_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateAnomalyDetectorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /BackTestAnomalyDetector:
    post:
      description: Runs a backtest for anomaly detection for the specified resource.
      operationId: BackTestAnomalyDetector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackTestAnomalyDetector_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackTestAnomalyDetectorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /CreateAlert:
    post:
      description: Creates an alert for an anomaly detector.
      operationId: CreateAlert
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlert_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAlertResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /CreateAnomalyDetector:
    post:
      description: Creates an anomaly detector.
      operationId: CreateAnomalyDetector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAnomalyDetector_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAnomalyDetectorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /CreateMetricSet:
    post:
      description: Creates a dataset.
      operationId: CreateMetricSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMetricSet_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMetricSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DeactivateAnomalyDetector:
    post:
      description: Deactivates an anomaly detector.
      operationId: DeactivateAnomalyDetector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackTestAnomalyDetector_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeactivateAnomalyDetectorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DeleteAlert:
    post:
      description: Deletes an alert.
      operationId: DeleteAlert
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAlert_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAlertResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DeleteAnomalyDetector:
    post:
      description: Deletes a detector. Deleting an anomaly detector will delete all
        of its corresponding resources including any configured datasets and alerts.
      operationId: DeleteAnomalyDetector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAnomalyDetector_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAnomalyDetectorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DescribeAlert:
    post:
      description: "<p>Describes an alert.</p> <p>Amazon Lookout for Metrics API actions\
        \ are eventually consistent. If you do a read operation on a resource immediately\
        \ after creating or modifying it, use retries to allow time for the write\
        \ operation to complete.</p>"
      operationId: DescribeAlert
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAlert_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAlertResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DescribeAnomalyDetectionExecutions:
    post:
      description: Returns information about the status of the specified anomaly detection
        jobs.
      operationId: DescribeAnomalyDetectionExecutions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAnomalyDetectionExecutions_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAnomalyDetectionExecutionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DescribeAnomalyDetector:
    post:
      description: "<p>Describes a detector.</p> <p>Amazon Lookout for Metrics API\
        \ actions are eventually consistent. If you do a read operation on a resource\
        \ immediately after creating or modifying it, use retries to allow time for\
        \ the write operation to complete.</p>"
      operationId: DescribeAnomalyDetector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAnomalyDetector_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAnomalyDetectorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DescribeMetricSet:
    post:
      description: "<p>Describes a dataset.</p> <p>Amazon Lookout for Metrics API\
        \ actions are eventually consistent. If you do a read operation on a resource\
        \ immediately after creating or modifying it, use retries to allow time for\
        \ the write operation to complete.</p>"
      operationId: DescribeMetricSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMetricSet_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMetricSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DetectMetricSetConfig:
    post:
      description: "Detects an Amazon S3 dataset's file format, interval, and offset."
      operationId: DetectMetricSetConfig
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectMetricSetConfig_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectMetricSetConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /GetAnomalyGroup:
    post:
      description: Returns details about a group of anomalous metrics.
      operationId: GetAnomalyGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAnomalyGroup_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnomalyGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /GetDataQualityMetrics:
    post:
      description: Returns details about the requested data quality metrics.
      operationId: GetDataQualityMetrics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDataQualityMetrics_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataQualityMetricsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /GetFeedback:
    post:
      description: Get feedback for an anomaly group.
      operationId: GetFeedback
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFeedback_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeedbackResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /GetSampleData:
    post:
      description: Returns a selection of sample records from an Amazon S3 datasource.
      operationId: GetSampleData
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSampleData_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSampleDataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListAlerts:
    post:
      description: "<p>Lists the alerts attached to a detector.</p> <p>Amazon Lookout\
        \ for Metrics API actions are eventually consistent. If you do a read operation\
        \ on a resource immediately after creating or modifying it, use retries to\
        \ allow time for the write operation to complete.</p>"
      operationId: ListAlerts
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAlerts_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAlertsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListAnomalyDetectors:
    post:
      description: "<p>Lists the detectors in the current AWS Region.</p> <p>Amazon\
        \ Lookout for Metrics API actions are eventually consistent. If you do a read\
        \ operation on a resource immediately after creating or modifying it, use\
        \ retries to allow time for the write operation to complete.</p>"
      operationId: ListAnomalyDetectors
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAnomalyDetectors_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnomalyDetectorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListAnomalyGroupRelatedMetrics:
    post:
      description: Returns a list of measures that are potential causes or effects
        of an anomaly group.
      operationId: ListAnomalyGroupRelatedMetrics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAnomalyGroupRelatedMetrics_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnomalyGroupRelatedMetricsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListAnomalyGroupSummaries:
    post:
      description: Returns a list of anomaly groups.
      operationId: ListAnomalyGroupSummaries
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAnomalyGroupSummaries_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnomalyGroupSummariesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListAnomalyGroupTimeSeries:
    post:
      description: Gets a list of anomalous metrics for a measure in an anomaly group.
      operationId: ListAnomalyGroupTimeSeries
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAnomalyGroupTimeSeries_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnomalyGroupTimeSeriesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListMetricSets:
    post:
      description: "<p>Lists the datasets in the current AWS Region.</p> <p>Amazon\
        \ Lookout for Metrics API actions are eventually consistent. If you do a read\
        \ operation on a resource immediately after creating or modifying it, use\
        \ retries to allow time for the write operation to complete.</p>"
      operationId: ListMetricSets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMetricSets_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMetricSetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    get:
      description: "Gets a list of <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html\"\
        >tags</a> for a detector, dataset, or alert."
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The resource's Amazon Resource Name (ARN).
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    post:
      description: "Adds <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html\"\
        >tags</a> to a detector, dataset, or alert."
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The resource's Amazon Resource Name (ARN).
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /PutFeedback:
    post:
      description: Add feedback for an anomalous metric.
      operationId: PutFeedback
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutFeedback_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutFeedbackResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}#tagKeys:
    delete:
      description: "Removes <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html\"\
        >tags</a> from a detector, dataset, or alert."
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The resource's Amazon Resource Name (ARN).
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        style: simple
      - description: Keys to remove from the resource's tags.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 1
          type: array
        style: form
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /UpdateAlert:
    post:
      description: Make changes to an existing alert.
      operationId: UpdateAlert
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlert_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAlertResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /UpdateAnomalyDetector:
    post:
      description: "Updates a detector. After activation, you can only change a detector's\
        \ ingestion delay and description."
      operationId: UpdateAnomalyDetector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAnomalyDetector_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAnomalyDetectorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /UpdateMetricSet:
    post:
      description: Updates a dataset.
      operationId: UpdateMetricSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMetricSet_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMetricSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    ActivateAnomalyDetectorResponse:
      properties: {}
      type: object
    ValidationException: {}
    ResourceNotFoundException: {}
    AccessDeniedException: {}
    TooManyRequestsException: {}
    InternalServerException: {}
    ConflictException: {}
    BackTestAnomalyDetectorResponse:
      properties: {}
      type: object
    CreateAlertResponse:
      example:
        AlertArn: ""
      properties:
        AlertArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the alert.
      type: object
    SNSConfiguration:
      description: Contains information about the SNS topic to which you want to send
        your alerts and the IAM role that has access to that topic.
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the IAM role that has access to the target SNS
              topic.
        SnsTopicArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the target SNS topic.
        SnsFormat:
          allOf:
          - $ref: '#/components/schemas/SnsFormat'
          - description: <p>The format of the SNS topic.</p> <ul> <li> <p> <code>JSON</code>
              – Send JSON alerts with an anomaly ID and a link to the anomaly detail
              page. This is the default.</p> </li> <li> <p> <code>LONG_TEXT</code>
              – Send human-readable alerts with information about the impacted timeseries
              and a link to the anomaly detail page. We recommend this for email.</p>
              </li> <li> <p> <code>SHORT_TEXT</code> – Send human-readable alerts
              with a link to the anomaly detail page. We recommend this for SMS.</p>
              </li> </ul>
      required:
      - RoleArn
      - SnsTopicArn
      type: object
    LambdaConfiguration:
      description: Contains information about a Lambda configuration.
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of an IAM role that has permission to invoke the
              Lambda function.
        LambdaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the Lambda function.
      required:
      - LambdaArn
      - RoleArn
      type: object
    TagValue:
      maxLength: 256
      type: string
    MetricNameList:
      items:
        $ref: '#/components/schemas/MetricName'
      maxItems: 5
      minItems: 1
      type: array
    DimensionFilterList:
      items:
        $ref: '#/components/schemas/DimensionFilter'
      maxItems: 5
      minItems: 1
      type: array
    ServiceQuotaExceededException: {}
    CreateAnomalyDetectorResponse:
      example:
        AnomalyDetectorArn: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the detector.
      type: object
    Frequency:
      enum:
      - P1D
      - PT1H
      - PT10M
      - PT5M
      type: string
    CreateMetricSetResponse:
      example:
        MetricSetArn: ""
      properties:
        MetricSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset.
      type: object
    Metric:
      description: A calculation made by contrasting a measure and a dimension from
        your source data.
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          - description: The name of the metric.
        AggregationFunction:
          allOf:
          - $ref: '#/components/schemas/AggregationFunction'
          - description: The function with which the metric is calculated.
        Namespace:
          allOf:
          - $ref: '#/components/schemas/Namespace'
          - description: The namespace for the metric.
      required:
      - AggregationFunction
      - MetricName
      type: object
    ColumnName:
      maxLength: 63
      minLength: 1
      pattern: "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*"
      type: string
    DateTimeFormat:
      maxLength: 63
      pattern: .*\S.*
      type: string
    S3SourceConfig:
      description: Contains information about the configuration of the S3 bucket that
        contains source files.
      example:
        TemplatedPathList: ""
        HistoricalDataPathList: ""
        RoleArn: ""
        FileFormatDescriptor:
          JsonFormatDescriptor:
            Charset: ""
            FileCompression: ""
          CsvFormatDescriptor:
            QuoteSymbol: ""
            ContainsHeader: ""
            Delimiter: ""
            HeaderList: ""
            Charset: ""
            FileCompression: ""
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of an IAM role that has read and write access permissions
              to the source S3 bucket.
        TemplatedPathList:
          allOf:
          - $ref: '#/components/schemas/TemplatedPathList'
          - description: A list of templated paths to the source files.
        HistoricalDataPathList:
          allOf:
          - $ref: '#/components/schemas/HistoricalDataPathList'
          - description: A list of paths to the historical data files.
        FileFormatDescriptor:
          $ref: '#/components/schemas/S3SourceConfig_FileFormatDescriptor'
      type: object
    AppFlowConfig:
      description: Details about an Amazon AppFlow flow datasource.
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: An IAM role that gives Amazon Lookout for Metrics permission
              to access the flow.
        FlowName:
          allOf:
          - $ref: '#/components/schemas/FlowName'
          - description: ' name of the flow.'
      type: object
    CloudWatchConfig:
      description: Details about an Amazon CloudWatch datasource.
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: An IAM role that gives Amazon Lookout for Metrics permission
              to access data in Amazon CloudWatch.
        BackTestConfiguration:
          $ref: '#/components/schemas/CloudWatchConfig_BackTestConfiguration'
      type: object
    RDSSourceConfig:
      description: Contains information about the Amazon Relational Database Service
        (RDS) configuration.
      properties:
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/RDSDatabaseIdentifier'
          - description: A string identifying the database instance.
        DatabaseHost:
          allOf:
          - $ref: '#/components/schemas/DatabaseHost'
          - description: The host name of the database.
        DatabasePort:
          allOf:
          - $ref: '#/components/schemas/DatabasePort'
          - description: The port number where the database can be accessed.
        SecretManagerArn:
          allOf:
          - $ref: '#/components/schemas/PoirotSecretManagerArn'
          - description: The Amazon Resource Name (ARN) of the AWS Secrets Manager
              role.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/RDSDatabaseName'
          - description: The name of the RDS database.
        TableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          - description: The name of the table in the database.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the role.
        VpcConfiguration:
          $ref: '#/components/schemas/RDSSourceConfig_VpcConfiguration'
      type: object
    RedshiftSourceConfig:
      description: Provides information about the Amazon Redshift database configuration.
      properties:
        ClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/RedshiftClusterIdentifier'
          - description: A string identifying the Redshift cluster.
        DatabaseHost:
          allOf:
          - $ref: '#/components/schemas/DatabaseHost'
          - description: The name of the database host.
        DatabasePort:
          allOf:
          - $ref: '#/components/schemas/DatabasePort'
          - description: The port number where the database can be accessed.
        SecretManagerArn:
          allOf:
          - $ref: '#/components/schemas/PoirotSecretManagerArn'
          - description: The Amazon Resource Name (ARN) of the AWS Secrets Manager
              role.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/RedshiftDatabaseName'
          - description: The Redshift database name.
        TableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          - description: The table name of the Redshift database.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the role providing access
              to the database.
        VpcConfiguration:
          $ref: '#/components/schemas/RedshiftSourceConfig_VpcConfiguration'
      type: object
    AthenaSourceConfig:
      description: Details about an Amazon Athena datasource.
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: An IAM role that gives Amazon Lookout for Metrics permission
              to access the data.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/AthenaDatabaseName'
          - description: The database's name.
        DataCatalog:
          allOf:
          - $ref: '#/components/schemas/AthenaDataCatalog'
          - description: The database's data catalog.
        TableName:
          allOf:
          - $ref: '#/components/schemas/AthenaTableName'
          - description: The database's table name.
        WorkGroupName:
          allOf:
          - $ref: '#/components/schemas/AthenaWorkGroupName'
          - description: The database's work group name.
        S3ResultsPath:
          allOf:
          - $ref: '#/components/schemas/AthenaS3ResultsPath'
          - description: The database's results path.
        BackTestConfiguration:
          $ref: '#/components/schemas/CloudWatchConfig_BackTestConfiguration'
      type: object
    MetricSetDimensionFilter:
      description: "Describes a list of filters for choosing a subset of dimension\
        \ values. Each filter consists of the dimension and one of its values that\
        \ you want to include. When multiple dimensions or values are specified, the\
        \ dimensions are joined with an AND operation and the values are joined with\
        \ an OR operation. "
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          - description: The dimension that you want to filter on.
        FilterList:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: The list of filters that you are applying.
      type: object
    DeactivateAnomalyDetectorResponse:
      properties: {}
      type: object
    DeleteAlertResponse:
      properties: {}
      type: object
    DeleteAnomalyDetectorResponse:
      properties: {}
      type: object
    DescribeAlertResponse:
      example:
        Alert:
          LastModificationTime: ""
          AlertDescription: ""
          AlertType: ""
          Action:
            LambdaConfiguration:
              LambdaArn: ""
              RoleArn: ""
            SNSConfiguration:
              SnsTopicArn: ""
              SnsFormat: ""
              RoleArn: ""
          AlertArn: ""
          AlertName: ""
          AlertFilters:
            MetricList: ""
            DimensionFilterList: ""
          AlertSensitivityThreshold: ""
          AlertStatus: ""
          CreationTime: ""
          AnomalyDetectorArn: ""
      properties:
        Alert:
          $ref: '#/components/schemas/DescribeAlertResponse_Alert'
      type: object
    DescribeAnomalyDetectionExecutionsResponse:
      example:
        NextToken: ""
        ExecutionList: ""
      properties:
        ExecutionList:
          allOf:
          - $ref: '#/components/schemas/ExecutionList'
          - description: A list of detection jobs.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token that's included if more results are
              available.
      type: object
    DescribeAnomalyDetectorResponse:
      example:
        LastModificationTime: ""
        Status: ""
        AnomalyDetectorName: ""
        FailureType: ""
        KmsKeyArn: ""
        AnomalyDetectorDescription: ""
        FailureReason: ""
        CreationTime: ""
        AnomalyDetectorArn: ""
        AnomalyDetectorConfig:
          AnomalyDetectorFrequency: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the detector.
        AnomalyDetectorName:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorName'
          - description: The name of the detector.
        AnomalyDetectorDescription:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorDescription'
          - description: A description of the detector.
        AnomalyDetectorConfig:
          $ref: '#/components/schemas/DescribeAnomalyDetectorResponse_AnomalyDetectorConfig'
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the detector was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the detector was last modified.
        Status:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorStatus'
          - description: The status of the detector.
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: The reason that the detector failed.
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: The ARN of the KMS key to use to encrypt your data.
        FailureType:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorFailureType'
          - description: The process that caused the detector to fail.
      type: object
    DescribeMetricSetResponse:
      example:
        LastModificationTime: ""
        Timezone: ""
        MetricSetDescription: ""
        MetricList: ""
        MetricSource:
          S3SourceConfig:
            TemplatedPathList: ""
            HistoricalDataPathList: ""
            RoleArn: ""
            FileFormatDescriptor:
              JsonFormatDescriptor:
                Charset: ""
                FileCompression: ""
              CsvFormatDescriptor:
                QuoteSymbol: ""
                ContainsHeader: ""
                Delimiter: ""
                HeaderList: ""
                Charset: ""
                FileCompression: ""
          CloudWatchConfig:
            BackTestConfiguration:
              RunBackTestMode: ""
            RoleArn: ""
          AthenaSourceConfig:
            DataCatalog: ""
            TableName: ""
            S3ResultsPath: ""
            BackTestConfiguration:
              RunBackTestMode: ""
            DatabaseName: ""
            WorkGroupName: ""
            RoleArn: ""
          RDSSourceConfig:
            TableName: ""
            DatabasePort: ""
            DatabaseHost: ""
            DatabaseName: ""
            SecretManagerArn: ""
            VpcConfiguration:
              SubnetIdList: ""
              SecurityGroupIdList: ""
            DBInstanceIdentifier: ""
            RoleArn: ""
          AppFlowConfig:
            FlowName: ""
            RoleArn: ""
          RedshiftSourceConfig:
            TableName: ""
            DatabasePort: ""
            DatabaseHost: ""
            DatabaseName: ""
            SecretManagerArn: ""
            VpcConfiguration:
              SubnetIdList: ""
              SecurityGroupIdList: ""
            ClusterIdentifier: ""
            RoleArn: ""
        TimestampColumn:
          ColumnName: ""
          ColumnFormat: ""
        AnomalyDetectorArn: ""
        Offset: ""
        CreationTime: ""
        DimensionList: ""
        DimensionFilterList: ""
        MetricSetFrequency: ""
        MetricSetName: ""
        MetricSetArn: ""
      properties:
        MetricSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset.
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the detector that contains the dataset.
        MetricSetName:
          allOf:
          - $ref: '#/components/schemas/MetricSetName'
          - description: The name of the dataset.
        MetricSetDescription:
          allOf:
          - $ref: '#/components/schemas/MetricSetDescription'
          - description: The dataset's description.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the dataset was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the dataset was last modified.
        Offset:
          allOf:
          - $ref: '#/components/schemas/Offset'
          - description: "After an interval ends, the amount of seconds that the detector\
              \ waits before importing data. Offset is only supported for S3, Redshift,\
              \ Athena and datasources."
        MetricList:
          allOf:
          - $ref: '#/components/schemas/MetricList'
          - description: A list of the metrics defined by the dataset.
        TimestampColumn:
          $ref: '#/components/schemas/DescribeMetricSetResponse_TimestampColumn'
        DimensionList:
          allOf:
          - $ref: '#/components/schemas/DimensionList'
          - description: A list of the dimensions chosen for analysis.
        MetricSetFrequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          - description: The interval at which the data will be analyzed for anomalies.
        Timezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          - description: The time zone in which the dataset's data was recorded.
        MetricSource:
          $ref: '#/components/schemas/DescribeMetricSetResponse_MetricSource'
        DimensionFilterList:
          allOf:
          - $ref: '#/components/schemas/MetricSetDimensionFilterList'
          - description: The dimensions and their values that were used to filter
              the dataset.
      type: object
    DetectMetricSetConfigResponse:
      example:
        DetectedMetricSetConfig:
          MetricSource:
            S3SourceConfig:
              FileFormatDescriptor:
                JsonFormatDescriptor:
                  Charset:
                    Message: ""
                    Confidence: ""
                    Value:
                      SS: ""
                      BS: ""
                      B: ""
                      S: ""
                      NS: ""
                      "N": ""
                  FileCompression:
                    Message: ""
                    Confidence: ""
                    Value:
                      SS: ""
                      BS: ""
                      B: ""
                      S: ""
                      NS: ""
                      "N": ""
                CsvFormatDescriptor:
                  QuoteSymbol:
                    Message: ""
                    Confidence: ""
                    Value:
                      SS: ""
                      BS: ""
                      B: ""
                      S: ""
                      NS: ""
                      "N": ""
                  ContainsHeader:
                    Message: ""
                    Confidence: ""
                    Value:
                      SS: ""
                      BS: ""
                      B: ""
                      S: ""
                      NS: ""
                      "N": ""
                  Delimiter:
                    Message: ""
                    Confidence: ""
                    Value:
                      SS: ""
                      BS: ""
                      B: ""
                      S: ""
                      NS: ""
                      "N": ""
                  HeaderList:
                    Message: ""
                    Confidence: ""
                    Value:
                      SS: ""
                      BS: ""
                      B: ""
                      S: ""
                      NS: ""
                      "N": ""
                  Charset:
                    Message: ""
                    Confidence: ""
                    Value:
                      SS: ""
                      BS: ""
                      B: ""
                      S: ""
                      NS: ""
                      "N": ""
                  FileCompression:
                    Message: ""
                    Confidence: ""
                    Value:
                      SS: ""
                      BS: ""
                      B: ""
                      S: ""
                      NS: ""
                      "N": ""
          MetricSetFrequency:
            Message: ""
            Confidence: ""
            Value:
              SS: ""
              BS: ""
              B: ""
              S: ""
              NS: ""
              "N": ""
          Offset:
            Message: ""
            Confidence: ""
            Value:
              SS: ""
              BS: ""
              B: ""
              S: ""
              NS: ""
              "N": ""
      properties:
        DetectedMetricSetConfig:
          $ref: '#/components/schemas/DetectMetricSetConfigResponse_DetectedMetricSetConfig'
      type: object
    AutoDetectionS3SourceConfig:
      description: An auto detection source config.
      properties:
        TemplatedPathList:
          allOf:
          - $ref: '#/components/schemas/TemplatedPathList'
          - description: The config's templated path list.
        HistoricalDataPathList:
          allOf:
          - $ref: '#/components/schemas/HistoricalDataPathList'
          - description: The config's historical data path list.
      type: object
    GetAnomalyGroupResponse:
      example:
        AnomalyGroup:
          EndTime: ""
          AnomalyGroupScore: ""
          PrimaryMetricName: ""
          StartTime: ""
          MetricLevelImpactList: ""
          AnomalyGroupId: ""
      properties:
        AnomalyGroup:
          $ref: '#/components/schemas/GetAnomalyGroupResponse_AnomalyGroup'
      type: object
    GetDataQualityMetricsResponse:
      example:
        AnomalyDetectorDataQualityMetricList: ""
      properties:
        AnomalyDetectorDataQualityMetricList:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorDataQualityMetricList'
          - description: A list of the data quality metrics for the <code>AnomalyDetectorArn</code>
              that you requested.
      type: object
    GetFeedbackResponse:
      example:
        NextToken: ""
        AnomalyGroupTimeSeriesFeedback: ""
      properties:
        AnomalyGroupTimeSeriesFeedback:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesFeedbackList'
          - description: Feedback for an anomalous metric.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token that's included if more results are
              available.
      type: object
    UUID:
      maxLength: 63
      pattern: "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
      type: string
    TimeSeriesId:
      maxLength: 520
      pattern: .*\S.*
      type: string
    GetSampleDataResponse:
      example:
        HeaderValues: ""
        SampleRows: ""
      properties:
        HeaderValues:
          allOf:
          - $ref: '#/components/schemas/HeaderValueList'
          - description: A list of header labels for the records.
        SampleRows:
          allOf:
          - $ref: '#/components/schemas/SampleRows'
          - description: A list of records.
      type: object
    Arn:
      maxLength: 256
      pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
      type: string
    TemplatedPathList:
      items:
        $ref: '#/components/schemas/TemplatedPath'
      maxItems: 1
      minItems: 1
      type: array
    HistoricalDataPathList:
      items:
        $ref: '#/components/schemas/HistoricalDataPath'
      maxItems: 1
      minItems: 1
      type: array
    FileFormatDescriptor:
      description: Contains information about a source file's formatting.
      example:
        JsonFormatDescriptor:
          Charset: ""
          FileCompression: ""
        CsvFormatDescriptor:
          QuoteSymbol: ""
          ContainsHeader: ""
          Delimiter: ""
          HeaderList: ""
          Charset: ""
          FileCompression: ""
      properties:
        CsvFormatDescriptor:
          $ref: '#/components/schemas/FileFormatDescriptor_CsvFormatDescriptor'
        JsonFormatDescriptor:
          $ref: '#/components/schemas/FileFormatDescriptor_JsonFormatDescriptor'
      type: object
    ListAlertsResponse:
      example:
        NextToken: ""
        AlertSummaryList: ""
      properties:
        AlertSummaryList:
          allOf:
          - $ref: '#/components/schemas/AlertSummaryList'
          - description: Contains information about an alert.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the response is truncated, the service returns this token.\
              \ To retrieve the next set of results, use this token in the next request."
      type: object
    ListAnomalyDetectorsResponse:
      example:
        NextToken: ""
        AnomalyDetectorSummaryList: ""
      properties:
        AnomalyDetectorSummaryList:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorSummaryList'
          - description: A list of anomaly detectors in the account in the current
              region.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the response is truncated, the service returns this token.\
              \ To retrieve the next set of results, use the token in the next request."
      type: object
    ListAnomalyGroupRelatedMetricsResponse:
      example:
        InterMetricImpactList: ""
        NextToken: ""
      properties:
        InterMetricImpactList:
          allOf:
          - $ref: '#/components/schemas/InterMetricImpactList'
          - description: "Aggregated details about the measures contributing to the\
              \ anomaly group, and the measures potentially impacted by the anomaly\
              \ group."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token that's included if more results are
              available.
      type: object
    ListAnomalyGroupSummariesResponse:
      example:
        NextToken: ""
        AnomalyGroupStatistics:
          EvaluationStartDate: ""
          TotalCount: ""
          ItemizedMetricStatsList: ""
        AnomalyGroupSummaryList: ""
      properties:
        AnomalyGroupSummaryList:
          allOf:
          - $ref: '#/components/schemas/AnomalyGroupSummaryList'
          - description: A list of anomaly group summaries.
        AnomalyGroupStatistics:
          $ref: '#/components/schemas/ListAnomalyGroupSummariesResponse_AnomalyGroupStatistics'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token that's included if more results are
              available.
      type: object
    ListAnomalyGroupTimeSeriesResponse:
      example:
        MetricName: ""
        TimestampList: ""
        NextToken: ""
        TimeSeriesList: ""
        AnomalyGroupId: ""
      properties:
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID of the anomaly group.
        MetricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          - description: The name of the measure field.
        TimestampList:
          allOf:
          - $ref: '#/components/schemas/TimestampList'
          - description: Timestamps for the anomalous metrics.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token that's included if more results are
              available.
        TimeSeriesList:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesList'
          - description: A list of anomalous metrics.
      type: object
    ListMetricSetsResponse:
      example:
        NextToken: ""
        MetricSetSummaryList: ""
      properties:
        MetricSetSummaryList:
          allOf:
          - $ref: '#/components/schemas/MetricSetSummaryList'
          - description: "A list of the datasets in the AWS Region, with configuration\
              \ details for each."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the response is truncated, the list call returns this\
              \ token. To retrieve the next set of results, use the token in the next\
              \ list request. "
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The resource's tags.
      type: object
    PutFeedbackResponse:
      properties: {}
      type: object
    Boolean:
      type: boolean
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      type: string
    UpdateAlertResponse:
      example:
        AlertArn: ""
      properties:
        AlertArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the updated alert.
      type: object
    UpdateAnomalyDetectorResponse:
      example:
        AnomalyDetectorArn: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the updated detector.
      type: object
    UpdateMetricSetResponse:
      example:
        MetricSetArn: ""
      properties:
        MetricSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset.
      type: object
    Action:
      description: A configuration that specifies the action to perform when anomalies
        are detected.
      properties:
        SNSConfiguration:
          $ref: '#/components/schemas/CreateAlert_request_Action_SNSConfiguration'
        LambdaConfiguration:
          $ref: '#/components/schemas/CreateAlert_request_Action_LambdaConfiguration'
      type: object
    ActivateAnomalyDetectorRequest:
      example:
        AnomalyDetectorArn: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the anomaly detector.
      required:
      - AnomalyDetectorArn
      title: ActivateAnomalyDetectorRequest
      type: object
    AggregationFunction:
      enum:
      - AVG
      - SUM
      type: string
    AlertDescription:
      maxLength: 256
      pattern: .*\S.*
      type: string
    AlertName:
      maxLength: 63
      minLength: 1
      pattern: "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*"
      type: string
    SensitivityThreshold:
      maximum: 100
      minimum: 0
      type: integer
    AlertType:
      enum:
      - SNS
      - LAMBDA
      type: string
    AlertStatus:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
    Timestamp:
      format: date-time
      type: string
    AlertFilters:
      description: The configuration of the alert filters.
      properties:
        MetricList:
          allOf:
          - $ref: '#/components/schemas/MetricNameList'
          - description: The list of measures that you want to get alerts for.
        DimensionFilterList:
          allOf:
          - $ref: '#/components/schemas/DimensionFilterList'
          - description: The list of DimensionFilter objects that are used for dimension-based
              filtering.
      type: object
    Alert:
      description: A configuration for Amazon SNS-integrated notifications.
      properties:
        Action:
          $ref: '#/components/schemas/Alert_Action'
        AlertDescription:
          allOf:
          - $ref: '#/components/schemas/AlertDescription'
          - description: A description of the alert.
        AlertArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the alert.
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the detector to which the alert is attached.
        AlertName:
          allOf:
          - $ref: '#/components/schemas/AlertName'
          - description: The name of the alert.
        AlertSensitivityThreshold:
          allOf:
          - $ref: '#/components/schemas/SensitivityThreshold'
          - description: The minimum severity for an anomaly to trigger the alert.
        AlertType:
          allOf:
          - $ref: '#/components/schemas/AlertType'
          - description: The type of the alert.
        AlertStatus:
          allOf:
          - $ref: '#/components/schemas/AlertStatus'
          - description: The status of the alert.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the alert was last modified.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the alert was created.
        AlertFilters:
          $ref: '#/components/schemas/Alert_AlertFilters'
      type: object
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 1
      type: object
    AlertSummary:
      description: Provides a summary of an alert's configuration.
      properties:
        AlertArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the alert.
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the detector to which the alert is attached.
        AlertName:
          allOf:
          - $ref: '#/components/schemas/AlertName'
          - description: The name of the alert.
        AlertSensitivityThreshold:
          allOf:
          - $ref: '#/components/schemas/SensitivityThreshold'
          - description: The minimum severity for an anomaly to trigger the alert.
        AlertType:
          allOf:
          - $ref: '#/components/schemas/AlertType'
          - description: The type of the alert.
        AlertStatus:
          allOf:
          - $ref: '#/components/schemas/AlertStatus'
          - description: The status of the alert.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the alert was last modified.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the alert was created.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The alert's <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>.
      type: object
    AlertSummaryList:
      items:
        $ref: '#/components/schemas/AlertSummary'
      type: array
    AnomalyDetectionTaskStatus:
      enum:
      - PENDING
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      - FAILED_TO_SCHEDULE
      type: string
    AnomalyDetectionTaskStatusMessage:
      maxLength: 256
      minLength: 1
      pattern: .*\S.*
      type: string
    AnomalyDetectorConfig:
      description: Contains information about a detector's configuration.
      properties:
        AnomalyDetectorFrequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          - description: The frequency at which the detector analyzes its source data.
      type: object
    AnomalyDetectorConfigSummary:
      description: Contains information about a detector's configuration.
      properties:
        AnomalyDetectorFrequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          - description: The interval at which the detector analyzes its source data.
      type: object
    MetricSetDataQualityMetricList:
      items:
        $ref: '#/components/schemas/MetricSetDataQualityMetric'
      type: array
    AnomalyDetectorDataQualityMetric:
      description: Aggregated details about the data quality metrics collected for
        the <code>AnomalyDetectorArn</code> provided in the <a>GetDataQualityMetrics</a>
        object.
      properties:
        StartTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The start time for the data quality metrics collection.
        MetricSetDataQualityMetricList:
          allOf:
          - $ref: '#/components/schemas/MetricSetDataQualityMetricList'
          - description: An array of <code>DataQualityMetricList</code> objects. Each
              object in the array contains information about a data quality metric.
      type: object
    AnomalyDetectorDataQualityMetricList:
      items:
        $ref: '#/components/schemas/AnomalyDetectorDataQualityMetric'
      type: array
    AnomalyDetectorDescription:
      maxLength: 256
      minLength: 1
      pattern: .*\S.*
      type: string
    AnomalyDetectorFailureType:
      enum:
      - ACTIVATION_FAILURE
      - BACK_TEST_ACTIVATION_FAILURE
      - DELETION_FAILURE
      - DEACTIVATION_FAILURE
      type: string
    AnomalyDetectorName:
      maxLength: 63
      minLength: 1
      pattern: "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*"
      type: string
    AnomalyDetectorStatus:
      enum:
      - ACTIVE
      - ACTIVATING
      - DELETING
      - FAILED
      - INACTIVE
      - LEARNING
      - BACK_TEST_ACTIVATING
      - BACK_TEST_ACTIVE
      - BACK_TEST_COMPLETE
      - DEACTIVATED
      - DEACTIVATING
      type: string
    AnomalyDetectorSummary:
      description: Contains information about an an anomaly detector.
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the detector.
        AnomalyDetectorName:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorName'
          - description: The name of the detector.
        AnomalyDetectorDescription:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorDescription'
          - description: A description of the detector.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the detector was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the detector was last modified.
        Status:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorStatus'
          - description: The status of detector.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The detector's <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>.
      type: object
    AnomalyDetectorSummaryList:
      items:
        $ref: '#/components/schemas/AnomalyDetectorSummary'
      type: array
    TimestampString:
      maxLength: 60
      pattern: "^([12]\\d{3})-(1[0-2]|0[1-9])-(0[1-9]|[12]\\d|3[01])T([01]\\d|2[0-3]):([0-5]\\\
        d):([0-5]\\d)(Z|(\\+|\\-)(0\\d|1[0-2]):([0-5]\\d)(\\[[[:alnum:]\\/\\_]+\\\
        ])?)$"
      type: string
    Score:
      format: double
      maximum: 100
      minimum: 0
      type: number
    MetricName:
      maxLength: 256
      pattern: "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*"
      type: string
    MetricLevelImpactList:
      items:
        $ref: '#/components/schemas/MetricLevelImpact'
      type: array
    AnomalyGroup:
      description: A group of anomalous metrics
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/TimestampString'
          - description: The start time for the group.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/TimestampString'
          - description: The end time for the group.
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID of the anomaly group.
        AnomalyGroupScore:
          allOf:
          - $ref: '#/components/schemas/Score'
          - description: The severity score of the group.
        PrimaryMetricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          - description: The name of the primary affected measure for the group.
        MetricLevelImpactList:
          allOf:
          - $ref: '#/components/schemas/MetricLevelImpactList'
          - description: A list of measures affected by the anomaly.
      type: object
    Integer:
      type: integer
    ItemizedMetricStatsList:
      items:
        $ref: '#/components/schemas/ItemizedMetricStats'
      type: array
    AnomalyGroupStatistics:
      description: Aggregated statistics for a group of anomalous metrics.
      properties:
        EvaluationStartDate:
          allOf:
          - $ref: '#/components/schemas/TimestampString'
          - description: The start of the time range that was searched.
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of groups found.
        ItemizedMetricStatsList:
          allOf:
          - $ref: '#/components/schemas/ItemizedMetricStatsList'
          - description: Statistics for individual metrics within the group.
      type: object
    AnomalyGroupSummary:
      description: Details about a group of anomalous metrics.
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/TimestampString'
          - description: The start time for the group.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/TimestampString'
          - description: The end time for the group.
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID of the anomaly group.
        AnomalyGroupScore:
          allOf:
          - $ref: '#/components/schemas/Score'
          - description: The severity score of the group.
        PrimaryMetricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          - description: The name of the primary affected measure for the group.
      type: object
    AnomalyGroupSummaryList:
      items:
        $ref: '#/components/schemas/AnomalyGroupSummary'
      type: array
    AnomalyGroupTimeSeries:
      description: An anomalous metric in an anomaly group.
      properties:
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID of the anomaly group.
        TimeSeriesId:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesId'
          - description: The ID of the metric.
      required:
      - AnomalyGroupId
      type: object
    AnomalyGroupTimeSeriesFeedback:
      description: Feedback for an anomalous metric.
      properties:
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID of the anomaly group.
        TimeSeriesId:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesId'
          - description: The ID of the metric.
        IsAnomaly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Feedback on whether the metric is a legitimate anomaly.
      required:
      - AnomalyGroupId
      - IsAnomaly
      - TimeSeriesId
      type: object
    FlowName:
      maxLength: 256
      pattern: "[a-zA-Z0-9][\\w!@#.-]+"
      type: string
    AthenaDataCatalog:
      maxLength: 256
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    AthenaDatabaseName:
      maxLength: 255
      minLength: 1
      pattern: "[a-zA-Z0-9_]+"
      type: string
    AthenaS3ResultsPath:
      maxLength: 1024
      pattern: "^s3://[a-z0-9].+$"
      type: string
    AthenaTableName:
      maxLength: 128
      minLength: 1
      pattern: "[a-zA-Z0-9_]+"
      type: string
    AthenaWorkGroupName:
      maxLength: 128
      minLength: 1
      pattern: "[a-zA-Z0-9._-]{1,128}"
      type: string
    BackTestConfiguration:
      description: Settings for backtest mode.
      properties:
        RunBackTestMode:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Run a backtest instead of monitoring new data.
      required:
      - RunBackTestMode
      type: object
    StringAttributeValue:
      type: string
    NumberAttributeValue:
      type: string
    BinaryAttributeValue:
      type: string
    StringListAttributeValue:
      items:
        $ref: '#/components/schemas/StringAttributeValue'
      type: array
    NumberListAttributeValue:
      items:
        $ref: '#/components/schemas/NumberAttributeValue'
      type: array
    BinaryListAttributeValue:
      items:
        $ref: '#/components/schemas/BinaryAttributeValue'
      type: array
    AttributeValue:
      description: An attribute value.
      properties:
        S:
          allOf:
          - $ref: '#/components/schemas/StringAttributeValue'
          - description: A string.
        "N":
          allOf:
          - $ref: '#/components/schemas/NumberAttributeValue'
          - description: A number.
        B:
          allOf:
          - $ref: '#/components/schemas/BinaryAttributeValue'
          - description: A binary value.
        SS:
          allOf:
          - $ref: '#/components/schemas/StringListAttributeValue'
          - description: A list of strings.
        NS:
          allOf:
          - $ref: '#/components/schemas/NumberListAttributeValue'
          - description: A list of numbers.
        BS:
          allOf:
          - $ref: '#/components/schemas/BinaryListAttributeValue'
          - description: A list of binary values.
      type: object
    AutoDetectionMetricSource:
      description: An auto detection metric source.
      properties:
        S3SourceConfig:
          $ref: '#/components/schemas/DetectMetricSetConfig_request_AutoDetectionMetricSource_S3SourceConfig'
      type: object
    BackTestAnomalyDetectorRequest:
      example:
        AnomalyDetectorArn: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the anomaly detector.
      required:
      - AnomalyDetectorArn
      title: BackTestAnomalyDetectorRequest
      type: object
    CSVFileCompression:
      enum:
      - NONE
      - GZIP
      type: string
    Charset:
      maxLength: 63
      pattern: "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*"
      type: string
    Confidence:
      enum:
      - HIGH
      - LOW
      - NONE
      type: string
    DimensionContributionList:
      items:
        $ref: '#/components/schemas/DimensionContribution'
      type: array
    ContributionMatrix:
      description: Details about dimensions that contributed to an anomaly.
      properties:
        DimensionContributionList:
          allOf:
          - $ref: '#/components/schemas/DimensionContributionList'
          - description: A list of contributing dimensions.
      type: object
    CreateAlertRequest:
      example:
        AlertDescription: ""
        Action:
          LambdaConfiguration:
            LambdaArn: ""
            RoleArn: ""
          SNSConfiguration:
            SnsTopicArn: ""
            SnsFormat: ""
            RoleArn: ""
        AlertName: ""
        AlertFilters:
          MetricList: ""
          DimensionFilterList: ""
        AlertSensitivityThreshold: ""
        AnomalyDetectorArn: ""
        Tags: ""
      properties:
        AlertName:
          allOf:
          - $ref: '#/components/schemas/AlertName'
          - description: The name of the alert.
        AlertSensitivityThreshold:
          allOf:
          - $ref: '#/components/schemas/SensitivityThreshold'
          - description: An integer from 0 to 100 specifying the alert sensitivity
              threshold.
        AlertDescription:
          allOf:
          - $ref: '#/components/schemas/AlertDescription'
          - description: A description of the alert.
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the detector to which the alert is attached.
        Action:
          $ref: '#/components/schemas/Alert_Action'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>
              to apply to the alert.
        AlertFilters:
          $ref: '#/components/schemas/CreateAlertRequest_AlertFilters'
      required:
      - Action
      - AlertName
      - AnomalyDetectorArn
      title: CreateAlertRequest
      type: object
    KmsKeyArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:aws.*:kms:.*:[0-9]{12}:key/[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
      type: string
    CreateAnomalyDetectorRequest:
      example:
        AnomalyDetectorName: ""
        KmsKeyArn: ""
        AnomalyDetectorDescription: ""
        Tags: ""
        AnomalyDetectorConfig:
          AnomalyDetectorFrequency: ""
      properties:
        AnomalyDetectorName:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorName'
          - description: The name of the detector.
        AnomalyDetectorDescription:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorDescription'
          - description: A description of the detector.
        AnomalyDetectorConfig:
          $ref: '#/components/schemas/CreateAnomalyDetectorRequest_AnomalyDetectorConfig'
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: The ARN of the KMS key to use to encrypt your data.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>
              to apply to the anomaly detector.
      required:
      - AnomalyDetectorConfig
      - AnomalyDetectorName
      title: CreateAnomalyDetectorRequest
      type: object
    MetricSetName:
      maxLength: 63
      minLength: 1
      pattern: "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*"
      type: string
    MetricSetDescription:
      maxLength: 256
      minLength: 1
      pattern: .*\S.*
      type: string
    MetricList:
      items:
        $ref: '#/components/schemas/Metric'
      minItems: 1
      type: array
    Offset:
      maximum: 432000
      minimum: 0
      type: integer
    TimestampColumn:
      description: Contains information about the column used to track time in a source
        data file.
      properties:
        ColumnName:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          - description: The name of the timestamp column.
        ColumnFormat:
          allOf:
          - $ref: '#/components/schemas/DateTimeFormat'
          - description: The format of the timestamp column.
      type: object
    DimensionList:
      items:
        $ref: '#/components/schemas/ColumnName'
      minItems: 1
      type: array
    MetricSource:
      description: Contains information about source data used to generate metrics.
      example:
        S3SourceConfig:
          TemplatedPathList: ""
          HistoricalDataPathList: ""
          RoleArn: ""
          FileFormatDescriptor:
            JsonFormatDescriptor:
              Charset: ""
              FileCompression: ""
            CsvFormatDescriptor:
              QuoteSymbol: ""
              ContainsHeader: ""
              Delimiter: ""
              HeaderList: ""
              Charset: ""
              FileCompression: ""
        CloudWatchConfig:
          BackTestConfiguration:
            RunBackTestMode: ""
          RoleArn: ""
        AthenaSourceConfig:
          DataCatalog: ""
          TableName: ""
          S3ResultsPath: ""
          BackTestConfiguration:
            RunBackTestMode: ""
          DatabaseName: ""
          WorkGroupName: ""
          RoleArn: ""
        RDSSourceConfig:
          TableName: ""
          DatabasePort: ""
          DatabaseHost: ""
          DatabaseName: ""
          SecretManagerArn: ""
          VpcConfiguration:
            SubnetIdList: ""
            SecurityGroupIdList: ""
          DBInstanceIdentifier: ""
          RoleArn: ""
        AppFlowConfig:
          FlowName: ""
          RoleArn: ""
        RedshiftSourceConfig:
          TableName: ""
          DatabasePort: ""
          DatabaseHost: ""
          DatabaseName: ""
          SecretManagerArn: ""
          VpcConfiguration:
            SubnetIdList: ""
            SecurityGroupIdList: ""
          ClusterIdentifier: ""
          RoleArn: ""
      properties:
        S3SourceConfig:
          $ref: '#/components/schemas/S3SourceConfig'
        AppFlowConfig:
          $ref: '#/components/schemas/CreateMetricSet_request_MetricSource_AppFlowConfig'
        CloudWatchConfig:
          $ref: '#/components/schemas/CreateMetricSet_request_MetricSource_CloudWatchConfig'
        RDSSourceConfig:
          $ref: '#/components/schemas/CreateMetricSet_request_MetricSource_RDSSourceConfig'
        RedshiftSourceConfig:
          $ref: '#/components/schemas/CreateMetricSet_request_MetricSource_RedshiftSourceConfig'
        AthenaSourceConfig:
          $ref: '#/components/schemas/CreateMetricSet_request_MetricSource_AthenaSourceConfig'
      type: object
    Timezone:
      maxLength: 60
      pattern: .*\S.*
      type: string
    MetricSetDimensionFilterList:
      items:
        $ref: '#/components/schemas/MetricSetDimensionFilter'
      type: array
    CreateMetricSetRequest:
      example:
        Timezone: ""
        MetricSetDescription: ""
        MetricList: ""
        MetricSource:
          S3SourceConfig:
            TemplatedPathList: ""
            HistoricalDataPathList: ""
            RoleArn: ""
            FileFormatDescriptor:
              JsonFormatDescriptor:
                Charset: ""
                FileCompression: ""
              CsvFormatDescriptor:
                QuoteSymbol: ""
                ContainsHeader: ""
                Delimiter: ""
                HeaderList: ""
                Charset: ""
                FileCompression: ""
          CloudWatchConfig:
            BackTestConfiguration:
              RunBackTestMode: ""
            RoleArn: ""
          AthenaSourceConfig:
            DataCatalog: ""
            TableName: ""
            S3ResultsPath: ""
            BackTestConfiguration:
              RunBackTestMode: ""
            DatabaseName: ""
            WorkGroupName: ""
            RoleArn: ""
          RDSSourceConfig:
            TableName: ""
            DatabasePort: ""
            DatabaseHost: ""
            DatabaseName: ""
            SecretManagerArn: ""
            VpcConfiguration:
              SubnetIdList: ""
              SecurityGroupIdList: ""
            DBInstanceIdentifier: ""
            RoleArn: ""
          AppFlowConfig:
            FlowName: ""
            RoleArn: ""
          RedshiftSourceConfig:
            TableName: ""
            DatabasePort: ""
            DatabaseHost: ""
            DatabaseName: ""
            SecretManagerArn: ""
            VpcConfiguration:
              SubnetIdList: ""
              SecurityGroupIdList: ""
            ClusterIdentifier: ""
            RoleArn: ""
        TimestampColumn:
          ColumnName: ""
          ColumnFormat: ""
        DimensionList: ""
        DimensionFilterList: ""
        AnomalyDetectorArn: ""
        MetricSetFrequency: ""
        MetricSetName: ""
        Tags: ""
        Offset: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the anomaly detector that will use the dataset.
        MetricSetName:
          allOf:
          - $ref: '#/components/schemas/MetricSetName'
          - description: The name of the dataset.
        MetricSetDescription:
          allOf:
          - $ref: '#/components/schemas/MetricSetDescription'
          - description: A description of the dataset you are creating.
        MetricList:
          allOf:
          - $ref: '#/components/schemas/MetricList'
          - description: A list of metrics that the dataset will contain.
        Offset:
          allOf:
          - $ref: '#/components/schemas/Offset'
          - description: "After an interval ends, the amount of seconds that the detector\
              \ waits before importing data. Offset is only supported for S3, Redshift,\
              \ Athena and datasources."
        TimestampColumn:
          $ref: '#/components/schemas/DescribeMetricSetResponse_TimestampColumn'
        DimensionList:
          allOf:
          - $ref: '#/components/schemas/DimensionList'
          - description: A list of the fields you want to treat as dimensions.
        MetricSetFrequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          - description: The frequency with which the source data will be analyzed
              for anomalies.
        MetricSource:
          $ref: '#/components/schemas/CreateMetricSetRequest_MetricSource'
        Timezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          - description: The time zone in which your source data was recorded.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>
              to apply to the dataset.
        DimensionFilterList:
          allOf:
          - $ref: '#/components/schemas/MetricSetDimensionFilterList'
          - description: A list of filters that specify which data is kept for anomaly
              detection.
      required:
      - AnomalyDetectorArn
      - MetricList
      - MetricSetName
      - MetricSource
      title: CreateMetricSetRequest
      type: object
    Delimiter:
      maxLength: 1
      pattern: "[^\\r\\n]"
      type: string
    HeaderList:
      items:
        $ref: '#/components/schemas/ColumnName'
      type: array
    QuoteSymbol:
      maxLength: 1
      pattern: "[^\\r\\n]|^$"
      type: string
    CsvFormatDescriptor:
      description: Contains information about how a source CSV data file should be
        analyzed.
      properties:
        FileCompression:
          allOf:
          - $ref: '#/components/schemas/CSVFileCompression'
          - description: The level of compression of the source CSV file.
        Charset:
          allOf:
          - $ref: '#/components/schemas/Charset'
          - description: The character set in which the source CSV file is written.
        ContainsHeader:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether or not the source CSV file contains a header.
        Delimiter:
          allOf:
          - $ref: '#/components/schemas/Delimiter'
          - description: The character used to delimit the source CSV file.
        HeaderList:
          allOf:
          - $ref: '#/components/schemas/HeaderList'
          - description: "A list of the source CSV file's headers, if any."
        QuoteSymbol:
          allOf:
          - $ref: '#/components/schemas/QuoteSymbol'
          - description: The character used as a quote character.
      type: object
    DataItem:
      type: string
    DataQualityMetricType:
      enum:
      - COLUMN_COMPLETENESS
      - DIMENSION_UNIQUENESS
      - TIME_SERIES_COUNT
      - ROWS_PROCESSED
      - ROWS_PARTIAL_COMPLIANCE
      - INVALID_ROWS_COMPLIANCE
      - BACKTEST_TRAINING_DATA_START_TIME_STAMP
      - BACKTEST_TRAINING_DATA_END_TIME_STAMP
      - BACKTEST_INFERENCE_DATA_START_TIME_STAMP
      - BACKTEST_INFERENCE_DATA_END_TIME_STAMP
      type: string
    DataQualityMetricDescription:
      maxLength: 256
      minLength: 1
      pattern: .*\S.*
      type: string
    RelatedColumnName:
      maxLength: 256
      minLength: 1
      pattern: .*\S.*
      type: string
    Double:
      format: double
      type: number
    DataQualityMetric:
      description: "An array that describes a data quality metric. Each <code>DataQualityMetric</code>\
        \ object contains the data quality metric name, its value, a description of\
        \ the metric, and the affected column."
      properties:
        MetricType:
          allOf:
          - $ref: '#/components/schemas/DataQualityMetricType'
          - description: The name of the data quality metric.
        MetricDescription:
          allOf:
          - $ref: '#/components/schemas/DataQualityMetricDescription'
          - description: A description of the data quality metric.
        RelatedColumnName:
          allOf:
          - $ref: '#/components/schemas/RelatedColumnName'
          - description: The column that is being monitored.
        MetricValue:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The value of the data quality metric.
      type: object
    DataQualityMetricList:
      items:
        $ref: '#/components/schemas/DataQualityMetric'
      type: array
    DatabaseHost:
      maxLength: 253
      minLength: 1
      pattern: .*\S.*
      type: string
    DatabasePort:
      maximum: 65535
      minimum: 1
      type: integer
    DeactivateAnomalyDetectorRequest:
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the anomaly detector.
      required:
      - AnomalyDetectorArn
      title: DeactivateAnomalyDetectorRequest
      type: object
    DeleteAlertRequest:
      example:
        AlertArn: ""
      properties:
        AlertArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the alert to delete.
      required:
      - AlertArn
      title: DeleteAlertRequest
      type: object
    DeleteAnomalyDetectorRequest:
      example:
        AnomalyDetectorArn: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the detector to delete.
      required:
      - AnomalyDetectorArn
      title: DeleteAnomalyDetectorRequest
      type: object
    DescribeAlertRequest:
      example:
        AlertArn: ""
      properties:
        AlertArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the alert to describe.
      required:
      - AlertArn
      title: DescribeAlertRequest
      type: object
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NextToken:
      maxLength: 3000
      minLength: 1
      pattern: .*\S.*
      type: string
    DescribeAnomalyDetectionExecutionsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        AnomalyDetectorArn: ""
        Timestamp: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the anomaly detector.
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampString'
          - description: The timestamp of the anomaly detection job.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The number of items to return in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: Specify the pagination token that's returned by a previous
              request to retrieve the next page of results.
      required:
      - AnomalyDetectorArn
      title: DescribeAnomalyDetectionExecutionsRequest
      type: object
    ExecutionList:
      items:
        $ref: '#/components/schemas/ExecutionStatus'
      type: array
    DescribeAnomalyDetectorRequest:
      example:
        AnomalyDetectorArn: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the detector to describe.
      required:
      - AnomalyDetectorArn
      title: DescribeAnomalyDetectorRequest
      type: object
    ErrorMessage:
      maxLength: 256
      type: string
    DescribeMetricSetRequest:
      example:
        MetricSetArn: ""
      properties:
        MetricSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset.
      required:
      - MetricSetArn
      title: DescribeMetricSetRequest
      type: object
    DetectMetricSetConfigRequest:
      example:
        AnomalyDetectorArn: ""
        AutoDetectionMetricSource:
          S3SourceConfig:
            TemplatedPathList: ""
            HistoricalDataPathList: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: An anomaly detector ARN.
        AutoDetectionMetricSource:
          $ref: '#/components/schemas/DetectMetricSetConfigRequest_AutoDetectionMetricSource'
      required:
      - AnomalyDetectorArn
      - AutoDetectionMetricSource
      title: DetectMetricSetConfigRequest
      type: object
    DetectedMetricSetConfig:
      description: An inferred dataset configuration.
      properties:
        Offset:
          $ref: '#/components/schemas/DetectedMetricSetConfig_Offset'
        MetricSetFrequency:
          $ref: '#/components/schemas/DetectedMetricSetConfig_MetricSetFrequency'
        MetricSource:
          $ref: '#/components/schemas/DetectedMetricSetConfig_MetricSource'
      type: object
    DetectedField:
      description: An inferred field.
      properties:
        Value:
          $ref: '#/components/schemas/DetectedField_Value'
        Confidence:
          allOf:
          - $ref: '#/components/schemas/Confidence'
          - description: The field's confidence.
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The field's message.
      type: object
    DetectedCsvFormatDescriptor:
      description: Properties of an inferred CSV format.
      properties:
        FileCompression:
          $ref: '#/components/schemas/DetectedCsvFormatDescriptor_FileCompression'
        Charset:
          $ref: '#/components/schemas/DetectedCsvFormatDescriptor_Charset'
        ContainsHeader:
          $ref: '#/components/schemas/DetectedCsvFormatDescriptor_ContainsHeader'
        Delimiter:
          $ref: '#/components/schemas/DetectedCsvFormatDescriptor_Delimiter'
        HeaderList:
          $ref: '#/components/schemas/DetectedCsvFormatDescriptor_HeaderList'
        QuoteSymbol:
          $ref: '#/components/schemas/DetectedCsvFormatDescriptor_QuoteSymbol'
      type: object
    Message:
      type: string
    DetectedJsonFormatDescriptor:
      description: A detected JSON format descriptor.
      properties:
        FileCompression:
          $ref: '#/components/schemas/DetectedCsvFormatDescriptor_FileCompression'
        Charset:
          $ref: '#/components/schemas/DetectedJsonFormatDescriptor_Charset'
      type: object
    DetectedFileFormatDescriptor:
      description: Properties of an inferred data format.
      properties:
        CsvFormatDescriptor:
          $ref: '#/components/schemas/DetectedFileFormatDescriptor_CsvFormatDescriptor'
        JsonFormatDescriptor:
          $ref: '#/components/schemas/DetectedFileFormatDescriptor_JsonFormatDescriptor'
      type: object
    DetectedMetricSource:
      description: An inferred data source.
      properties:
        S3SourceConfig:
          $ref: '#/components/schemas/DetectedMetricSource_S3SourceConfig'
      type: object
    DetectedS3SourceConfig:
      description: An inferred source configuration.
      properties:
        FileFormatDescriptor:
          $ref: '#/components/schemas/DetectedS3SourceConfig_FileFormatDescriptor'
      type: object
    DimensionValueContributionList:
      items:
        $ref: '#/components/schemas/DimensionValueContribution'
      type: array
    DimensionContribution:
      description: Details about a dimension that contributed to an anomaly.
      properties:
        DimensionName:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          - description: The name of the dimension.
        DimensionValueContributionList:
          allOf:
          - $ref: '#/components/schemas/DimensionValueContributionList'
          - description: A list of dimension values that contributed to the anomaly.
      type: object
    DimensionValueList:
      items:
        $ref: '#/components/schemas/DimensionValue'
      maxItems: 10
      minItems: 1
      type: array
    DimensionFilter:
      description: "The dimension filter, containing DimensionName and DimensionValueList."
      properties:
        DimensionName:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          - description: The name of the dimension to filter on.
        DimensionValueList:
          allOf:
          - $ref: '#/components/schemas/DimensionValueList'
          - description: The list of values for the dimension specified in DimensionName
              that you want to filter on.
      type: object
    DimensionValue:
      type: string
    DimensionNameValue:
      description: A dimension name and value.
      properties:
        DimensionName:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          - description: The name of the dimension.
        DimensionValue:
          allOf:
          - $ref: '#/components/schemas/DimensionValue'
          - description: The value of the dimension.
      required:
      - DimensionName
      - DimensionValue
      type: object
    DimensionNameValueList:
      items:
        $ref: '#/components/schemas/DimensionNameValue'
      type: array
    DimensionValueContribution:
      description: The severity of a value of a dimension that contributed to an anomaly.
      properties:
        DimensionValue:
          allOf:
          - $ref: '#/components/schemas/DimensionValue'
          - description: The value of the dimension.
        ContributionScore:
          allOf:
          - $ref: '#/components/schemas/Score'
          - description: The severity score of the value.
      type: object
    ExecutionStatus:
      description: The status of an anomaly detector run.
      properties:
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampString'
          - description: The run's timestamp.
        Status:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectionTaskStatus'
          - description: The run's status.
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectionTaskStatusMessage'
          - description: "The reason that the run failed, if applicable."
      type: object
    JsonFormatDescriptor:
      description: Contains information about how a source JSON data file should be
        analyzed.
      properties:
        FileCompression:
          allOf:
          - $ref: '#/components/schemas/JsonFileCompression'
          - description: The level of compression of the source CSV file.
        Charset:
          allOf:
          - $ref: '#/components/schemas/Charset'
          - description: The character set in which the source JSON file is written.
      type: object
    FilterOperation:
      enum:
      - EQUALS
      type: string
    Filter:
      description: Describes a filter for choosing a subset of dimension values. Each
        filter consists of the dimension that you want to include and the condition
        statement. The condition statement is specified in the <code>FilterOperation</code>
        object.
      properties:
        DimensionValue:
          allOf:
          - $ref: '#/components/schemas/DimensionValue'
          - description: The value that you want to include in the filter.
        FilterOperation:
          allOf:
          - $ref: '#/components/schemas/FilterOperation'
          - description: The condition to apply.
      type: object
    FilterList:
      items:
        $ref: '#/components/schemas/Filter'
      minItems: 1
      type: array
    GetAnomalyGroupRequest:
      example:
        AnomalyDetectorArn: ""
        AnomalyGroupId: ""
      properties:
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID of the anomaly group.
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the anomaly detector.
      required:
      - AnomalyDetectorArn
      - AnomalyGroupId
      title: GetAnomalyGroupRequest
      type: object
    GetDataQualityMetricsRequest:
      example:
        AnomalyDetectorArn: ""
        MetricSetArn: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the anomaly detector that
              you want to investigate.
        MetricSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of a specific data quality
              metric set.
      required:
      - AnomalyDetectorArn
      title: GetDataQualityMetricsRequest
      type: object
    GetFeedbackRequest:
      example:
        NextToken: ""
        MaxResults: ""
        AnomalyDetectorArn: ""
        AnomalyGroupTimeSeriesFeedback:
          TimeSeriesId: ""
          AnomalyGroupId: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the anomaly detector.
        AnomalyGroupTimeSeriesFeedback:
          $ref: '#/components/schemas/GetFeedbackRequest_AnomalyGroupTimeSeriesFeedback'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: Specify the pagination token that's returned by a previous
              request to retrieve the next page of results.
      required:
      - AnomalyDetectorArn
      - AnomalyGroupTimeSeriesFeedback
      title: GetFeedbackRequest
      type: object
    TimeSeriesFeedbackList:
      items:
        $ref: '#/components/schemas/TimeSeriesFeedback'
      type: array
    SampleDataS3SourceConfig:
      description: Contains information about the source configuration in Amazon S3.
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the role.
        TemplatedPathList:
          allOf:
          - $ref: '#/components/schemas/TemplatedPathList'
          - description: An array of strings containing the list of templated paths.
        HistoricalDataPathList:
          allOf:
          - $ref: '#/components/schemas/HistoricalDataPathList'
          - description: An array of strings containing the historical set of data
              paths.
        FileFormatDescriptor:
          $ref: '#/components/schemas/FileFormatDescriptor'
      required:
      - FileFormatDescriptor
      - RoleArn
      type: object
    GetSampleDataRequest:
      example:
        S3SourceConfig:
          TemplatedPathList: ""
          HistoricalDataPathList: ""
          RoleArn: ""
          FileFormatDescriptor:
            JsonFormatDescriptor:
              Charset: ""
              FileCompression: ""
            CsvFormatDescriptor:
              QuoteSymbol: ""
              ContainsHeader: ""
              Delimiter: ""
              HeaderList: ""
              Charset: ""
              FileCompression: ""
      properties:
        S3SourceConfig:
          $ref: '#/components/schemas/GetSampleDataRequest_S3SourceConfig'
      title: GetSampleDataRequest
      type: object
    HeaderValueList:
      items:
        $ref: '#/components/schemas/HeaderValue'
      type: array
    SampleRows:
      items:
        $ref: '#/components/schemas/SampleRow'
      type: array
    HeaderValue:
      type: string
    HistoricalDataPath:
      maxLength: 1024
      pattern: "^s3://[a-z0-9].+$"
      type: string
    RelationshipType:
      enum:
      - CAUSE_OF_INPUT_ANOMALY_GROUP
      - EFFECT_OF_INPUT_ANOMALY_GROUP
      type: string
    MetricChangePercentage:
      format: double
      maximum: 100
      minimum: 0
      type: number
    InterMetricImpactDetails:
      description: "<p>Aggregated details about the measures contributing to the anomaly\
        \ group, and the measures potentially impacted by the anomaly group.</p> <p/>"
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          - description: The name of the measure.
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID of the anomaly group.
        RelationshipType:
          allOf:
          - $ref: '#/components/schemas/RelationshipType'
          - description: "Whether a measure is a potential cause of the anomaly group\
              \ (<code>CAUSE_OF_INPUT_ANOMALY_GROUP</code>), or whether the measure\
              \ is impacted by the anomaly group (<code>EFFECT_OF_INPUT_ANOMALY_GROUP</code>)."
        ContributionPercentage:
          allOf:
          - $ref: '#/components/schemas/MetricChangePercentage'
          - description: "For potential causes (<code>CAUSE_OF_INPUT_ANOMALY_GROUP</code>),\
              \ the percentage contribution the measure has in causing the anomalies."
      type: object
    InterMetricImpactList:
      items:
        $ref: '#/components/schemas/InterMetricImpactDetails'
      type: array
    ItemizedMetricStats:
      description: Aggregated statistics about a measure affected by an anomaly.
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          - description: The name of the measure.
        OccurrenceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of times that the measure appears.
      type: object
    JsonFileCompression:
      enum:
      - NONE
      - GZIP
      type: string
    ListAlertsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        AnomalyDetectorArn: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the alert's detector.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request is truncated, the\
              \ response includes a <code>NextToken</code>. To retrieve the next set\
              \ of results, use the token in the next request. Tokens expire after\
              \ 24 hours."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results that will be displayed by the
              request.
      title: ListAlertsRequest
      type: object
    ListAnomalyDetectorsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request was truncated, the\
              \ response includes a <code>NextToken</code>. To retrieve the next set\
              \ of results, use the token in the next request. Tokens expire after\
              \ 24 hours."
      title: ListAnomalyDetectorsRequest
      type: object
    ListAnomalyGroupRelatedMetricsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        RelationshipTypeFilter: ""
        AnomalyDetectorArn: ""
        AnomalyGroupId: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the anomaly detector.
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID of the anomaly group.
        RelationshipTypeFilter:
          allOf:
          - $ref: '#/components/schemas/RelationshipType'
          - description: Filter for potential causes (<code>CAUSE_OF_INPUT_ANOMALY_GROUP</code>)
              or downstream effects (<code>EFFECT_OF_INPUT_ANOMALY_GROUP</code>) of
              the anomaly group.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: Specify the pagination token that's returned by a previous
              request to retrieve the next page of results.
      required:
      - AnomalyDetectorArn
      - AnomalyGroupId
      title: ListAnomalyGroupRelatedMetricsRequest
      type: object
    ListAnomalyGroupSummariesRequest:
      example:
        NextToken: ""
        MaxResults: ""
        SensitivityThreshold: ""
        AnomalyDetectorArn: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the anomaly detector.
        SensitivityThreshold:
          allOf:
          - $ref: '#/components/schemas/SensitivityThreshold'
          - description: The minimum severity score for inclusion in the output.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: Specify the pagination token that's returned by a previous
              request to retrieve the next page of results.
      required:
      - AnomalyDetectorArn
      - SensitivityThreshold
      title: ListAnomalyGroupSummariesRequest
      type: object
    ListAnomalyGroupTimeSeriesRequest:
      example:
        MetricName: ""
        NextToken: ""
        MaxResults: ""
        AnomalyDetectorArn: ""
        AnomalyGroupId: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the anomaly detector.
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID of the anomaly group.
        MetricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          - description: The name of the measure field.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: Specify the pagination token that's returned by a previous
              request to retrieve the next page of results.
      required:
      - AnomalyDetectorArn
      - AnomalyGroupId
      - MetricName
      title: ListAnomalyGroupTimeSeriesRequest
      type: object
    TimestampList:
      items:
        $ref: '#/components/schemas/TimestampString'
      type: array
    TimeSeriesList:
      items:
        $ref: '#/components/schemas/TimeSeries'
      type: array
    ListMetricSetsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        AnomalyDetectorArn: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the anomaly detector containing the metrics sets
              to list.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the result of the previous request was truncated, the\
              \ response includes a <code>NextToken</code>. To retrieve the next set\
              \ of results, use the token in the next request. Tokens expire after\
              \ 24 hours."
      title: ListMetricSetsRequest
      type: object
    MetricSetSummaryList:
      items:
        $ref: '#/components/schemas/MetricSetSummary'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    Namespace:
      maxLength: 255
      minLength: 1
      pattern: "[^:].*"
      type: string
    MetricLevelImpact:
      description: Details about a measure affected by an anomaly.
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          - description: The name of the measure.
        NumTimeSeries:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of anomalous metrics for the measure.
        ContributionMatrix:
          $ref: '#/components/schemas/MetricLevelImpact_ContributionMatrix'
      type: object
    MetricSetDataQualityMetric:
      description: An array of <code>DataQualityMetric</code> objects that describes
        one or more data quality metrics.
      properties:
        MetricSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the data quality metric
              array.
        DataQualityMetricList:
          allOf:
          - $ref: '#/components/schemas/DataQualityMetricList'
          - description: The array of data quality metrics contained in the data quality
              metric set.
      type: object
    MetricSetSummary:
      description: Contains information about a dataset.
      properties:
        MetricSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset.
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the detector to which the dataset belongs.
        MetricSetDescription:
          allOf:
          - $ref: '#/components/schemas/MetricSetDescription'
          - description: The description of the dataset.
        MetricSetName:
          allOf:
          - $ref: '#/components/schemas/MetricSetName'
          - description: The name of the dataset.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the dataset was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the dataset was last modified.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The dataset's <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>.
      type: object
    MetricValue:
      format: double
      type: number
    MetricValueList:
      items:
        $ref: '#/components/schemas/MetricValue'
      type: array
    PoirotSecretManagerArn:
      maxLength: 256
      pattern: "arn:([a-z\\d-]+):.*:.*:secret:AmazonLookoutMetrics-.+"
      type: string
    PutFeedbackRequest:
      example:
        AnomalyDetectorArn: ""
        AnomalyGroupTimeSeriesFeedback:
          TimeSeriesId: ""
          AnomalyGroupId: ""
          IsAnomaly: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the anomaly detector.
        AnomalyGroupTimeSeriesFeedback:
          $ref: '#/components/schemas/PutFeedbackRequest_AnomalyGroupTimeSeriesFeedback'
      required:
      - AnomalyDetectorArn
      - AnomalyGroupTimeSeriesFeedback
      title: PutFeedbackRequest
      type: object
    RDSDatabaseIdentifier:
      maxLength: 63
      minLength: 1
      pattern: "^[a-zA-Z](?!.*--)(?!.*-$)[0-9a-zA-Z\\-]*$"
      type: string
    RDSDatabaseName:
      maxLength: 64
      minLength: 1
      pattern: "[a-zA-Z0-9_.]+"
      type: string
    TableName:
      maxLength: 100
      minLength: 1
      pattern: "^[a-zA-Z][a-zA-Z0-9_.]*$"
      type: string
    VpcConfiguration:
      description: Contains configuration information about the Amazon Virtual Private
        Cloud (VPC).
      properties:
        SubnetIdList:
          allOf:
          - $ref: '#/components/schemas/SubnetIdList'
          - description: "An array of strings containing the Amazon VPC subnet IDs\
              \ (e.g., <code>subnet-0bb1c79de3EXAMPLE</code>."
        SecurityGroupIdList:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdList'
          - description: An array of strings containing the list of security groups.
      required:
      - SecurityGroupIdList
      - SubnetIdList
      type: object
    RedshiftClusterIdentifier:
      maxLength: 63
      minLength: 1
      pattern: "^[a-z](?!.*--)(?!.*-$)[0-9a-z\\-]*$"
      type: string
    RedshiftDatabaseName:
      maxLength: 100
      minLength: 1
      pattern: "[a-zA-Z0-9_.]+"
      type: string
    SnsFormat:
      enum:
      - LONG_TEXT
      - SHORT_TEXT
      - JSON
      type: string
    SampleRow:
      items:
        $ref: '#/components/schemas/DataItem'
      type: array
    SecurityGroupId:
      maxLength: 255
      minLength: 1
      pattern: "[-0-9a-zA-Z]+"
      type: string
    SecurityGroupIdList:
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      type: array
    SubnetId:
      maxLength: 255
      pattern: "[\\-0-9a-zA-Z]+"
      type: string
    SubnetIdList:
      items:
        $ref: '#/components/schemas/SubnetId'
      type: array
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "Tags to apply to the resource. Tag keys and values can contain\
              \ letters, numbers, spaces, and the following symbols: <code>_.:/=+@-</code> "
            xml:
              name: tags
      required:
      - Tags
      title: TagResourceRequest
      type: object
    TemplatedPath:
      maxLength: 1024
      pattern: "^s3://[a-zA-Z0-9_\\-\\/ {}=]+$"
      type: string
    TimeSeries:
      description: "Details about a metric. A metric is an aggregation of the values\
        \ of a measure for a dimension value, such as <i>availability</i> in the <i>us-east-1</i>\
        \ Region."
      properties:
        TimeSeriesId:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesId'
          - description: The ID of the metric.
        DimensionList:
          allOf:
          - $ref: '#/components/schemas/DimensionNameValueList'
          - description: The dimensions of the metric.
        MetricValueList:
          allOf:
          - $ref: '#/components/schemas/MetricValueList'
          - description: The values for the metric.
      required:
      - DimensionList
      - MetricValueList
      - TimeSeriesId
      type: object
    TimeSeriesFeedback:
      description: Details about feedback submitted for an anomalous metric.
      properties:
        TimeSeriesId:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesId'
          - description: The ID of the metric.
        IsAnomaly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Feedback on whether the metric is a legitimate anomaly.
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateAlertRequest:
      example:
        AlertDescription: ""
        AlertArn: ""
        Action:
          LambdaConfiguration:
            LambdaArn: ""
            RoleArn: ""
          SNSConfiguration:
            SnsTopicArn: ""
            SnsFormat: ""
            RoleArn: ""
        AlertFilters:
          MetricList: ""
          DimensionFilterList: ""
        AlertSensitivityThreshold: ""
      properties:
        AlertArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the alert to update.
        AlertDescription:
          allOf:
          - $ref: '#/components/schemas/AlertDescription'
          - description: A description of the alert.
        AlertSensitivityThreshold:
          allOf:
          - $ref: '#/components/schemas/SensitivityThreshold'
          - description: An integer from 0 to 100 specifying the alert sensitivity
              threshold.
        Action:
          $ref: '#/components/schemas/Alert_Action'
        AlertFilters:
          $ref: '#/components/schemas/CreateAlertRequest_AlertFilters'
      required:
      - AlertArn
      title: UpdateAlertRequest
      type: object
    UpdateAnomalyDetectorRequest:
      example:
        KmsKeyArn: ""
        AnomalyDetectorDescription: ""
        AnomalyDetectorArn: ""
        AnomalyDetectorConfig:
          AnomalyDetectorFrequency: ""
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the detector to update.
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: The Amazon Resource Name (ARN) of an AWS KMS encryption key.
        AnomalyDetectorDescription:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorDescription'
          - description: The updated detector description.
        AnomalyDetectorConfig:
          $ref: '#/components/schemas/UpdateAnomalyDetectorRequest_AnomalyDetectorConfig'
      required:
      - AnomalyDetectorArn
      title: UpdateAnomalyDetectorRequest
      type: object
    UpdateMetricSetRequest:
      example:
        MetricSetDescription: ""
        MetricList: ""
        MetricSource:
          S3SourceConfig:
            TemplatedPathList: ""
            HistoricalDataPathList: ""
            RoleArn: ""
            FileFormatDescriptor:
              JsonFormatDescriptor:
                Charset: ""
                FileCompression: ""
              CsvFormatDescriptor:
                QuoteSymbol: ""
                ContainsHeader: ""
                Delimiter: ""
                HeaderList: ""
                Charset: ""
                FileCompression: ""
          CloudWatchConfig:
            BackTestConfiguration:
              RunBackTestMode: ""
            RoleArn: ""
          AthenaSourceConfig:
            DataCatalog: ""
            TableName: ""
            S3ResultsPath: ""
            BackTestConfiguration:
              RunBackTestMode: ""
            DatabaseName: ""
            WorkGroupName: ""
            RoleArn: ""
          RDSSourceConfig:
            TableName: ""
            DatabasePort: ""
            DatabaseHost: ""
            DatabaseName: ""
            SecretManagerArn: ""
            VpcConfiguration:
              SubnetIdList: ""
              SecurityGroupIdList: ""
            DBInstanceIdentifier: ""
            RoleArn: ""
          AppFlowConfig:
            FlowName: ""
            RoleArn: ""
          RedshiftSourceConfig:
            TableName: ""
            DatabasePort: ""
            DatabaseHost: ""
            DatabaseName: ""
            SecretManagerArn: ""
            VpcConfiguration:
              SubnetIdList: ""
              SecurityGroupIdList: ""
            ClusterIdentifier: ""
            RoleArn: ""
        TimestampColumn:
          ColumnName: ""
          ColumnFormat: ""
        DimensionList: ""
        DimensionFilterList: ""
        MetricSetFrequency: ""
        MetricSetArn: ""
        Offset: ""
      properties:
        MetricSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the dataset to update.
        MetricSetDescription:
          allOf:
          - $ref: '#/components/schemas/MetricSetDescription'
          - description: The dataset's description.
        MetricList:
          allOf:
          - $ref: '#/components/schemas/MetricList'
          - description: The metric list.
        Offset:
          allOf:
          - $ref: '#/components/schemas/Offset'
          - description: "After an interval ends, the amount of seconds that the detector\
              \ waits before importing data. Offset is only supported for S3, Redshift,\
              \ Athena and datasources."
        TimestampColumn:
          $ref: '#/components/schemas/UpdateMetricSetRequest_TimestampColumn'
        DimensionList:
          allOf:
          - $ref: '#/components/schemas/DimensionList'
          - description: The dimension list.
        MetricSetFrequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          - description: The dataset's interval.
        MetricSource:
          $ref: '#/components/schemas/MetricSource'
        DimensionFilterList:
          allOf:
          - $ref: '#/components/schemas/MetricSetDimensionFilterList'
          - description: "Describes a list of filters for choosing specific dimensions\
              \ and specific values. Each filter consists of the dimension and one\
              \ of its values that you want to include. When multiple dimensions or\
              \ values are specified, the dimensions are joined with an AND operation\
              \ and the values are joined with an OR operation."
      required:
      - MetricSetArn
      title: UpdateMetricSetRequest
      type: object
    ActivateAnomalyDetector_request:
      properties:
        AnomalyDetectorArn:
          description: The ARN of the anomaly detector.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
      required:
      - AnomalyDetectorArn
      type: object
    BackTestAnomalyDetector_request:
      properties:
        AnomalyDetectorArn:
          description: The Amazon Resource Name (ARN) of the anomaly detector.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
      required:
      - AnomalyDetectorArn
      type: object
    CreateAlert_request_Action_SNSConfiguration:
      allOf:
      - $ref: '#/components/schemas/SNSConfiguration'
      - description: A configuration for an Amazon SNS channel.
      example:
        SnsTopicArn: ""
        SnsFormat: ""
        RoleArn: ""
    CreateAlert_request_Action_LambdaConfiguration:
      allOf:
      - $ref: '#/components/schemas/LambdaConfiguration'
      - description: A configuration for an AWS Lambda channel.
      example:
        LambdaArn: ""
        RoleArn: ""
    CreateAlert_request_Action:
      description: A configuration that specifies the action to perform when anomalies
        are detected.
      properties:
        SNSConfiguration:
          $ref: '#/components/schemas/CreateAlert_request_Action_SNSConfiguration'
        LambdaConfiguration:
          $ref: '#/components/schemas/CreateAlert_request_Action_LambdaConfiguration'
      type: object
    CreateAlert_request_AlertFilters:
      description: The configuration of the alert filters.
      properties:
        MetricList:
          allOf:
          - $ref: '#/components/schemas/MetricNameList'
          - description: The list of measures that you want to get alerts for.
        DimensionFilterList:
          allOf:
          - $ref: '#/components/schemas/DimensionFilterList'
          - description: The list of DimensionFilter objects that are used for dimension-based
              filtering.
      type: object
    CreateAlert_request:
      properties:
        AlertName:
          description: The name of the alert.
          maxLength: 63
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*"
          type: string
        AlertSensitivityThreshold:
          description: An integer from 0 to 100 specifying the alert sensitivity threshold.
          maximum: 100
          minimum: 0
          type: integer
        AlertDescription:
          description: A description of the alert.
          maxLength: 256
          pattern: .*\S.*
          type: string
        AnomalyDetectorArn:
          description: The ARN of the detector to which the alert is attached.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        Action:
          $ref: '#/components/schemas/CreateAlert_request_Action'
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>
            to apply to the alert.
          maxProperties: 50
          minProperties: 1
          type: object
        AlertFilters:
          $ref: '#/components/schemas/CreateAlert_request_AlertFilters'
      required:
      - Action
      - AlertName
      - AnomalyDetectorArn
      type: object
    CreateAnomalyDetector_request_AnomalyDetectorConfig:
      description: Contains information about a detector's configuration.
      properties:
        AnomalyDetectorFrequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          - description: The frequency at which the detector analyzes its source data.
      type: object
    CreateAnomalyDetector_request:
      properties:
        AnomalyDetectorName:
          description: The name of the detector.
          maxLength: 63
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*"
          type: string
        AnomalyDetectorDescription:
          description: A description of the detector.
          maxLength: 256
          minLength: 1
          pattern: .*\S.*
          type: string
        AnomalyDetectorConfig:
          $ref: '#/components/schemas/CreateAnomalyDetector_request_AnomalyDetectorConfig'
        KmsKeyArn:
          description: The ARN of the KMS key to use to encrypt your data.
          maxLength: 2048
          minLength: 20
          pattern: "arn:aws.*:kms:.*:[0-9]{12}:key/[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>
            to apply to the anomaly detector.
          maxProperties: 50
          minProperties: 1
          type: object
      required:
      - AnomalyDetectorConfig
      - AnomalyDetectorName
      type: object
    CreateMetricSet_request_TimestampColumn:
      description: Contains information about the column used to track time in a source
        data file.
      properties:
        ColumnName:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          - description: The name of the timestamp column.
        ColumnFormat:
          allOf:
          - $ref: '#/components/schemas/DateTimeFormat'
          - description: The format of the timestamp column.
      type: object
    CreateMetricSet_request_MetricSource_AppFlowConfig:
      allOf:
      - $ref: '#/components/schemas/AppFlowConfig'
      - description: Details about an AppFlow datasource.
      example:
        FlowName: ""
        RoleArn: ""
    CreateMetricSet_request_MetricSource_CloudWatchConfig:
      allOf:
      - $ref: '#/components/schemas/CloudWatchConfig'
      - description: Details about an Amazon CloudWatch monitoring datasource.
      example:
        BackTestConfiguration:
          RunBackTestMode: ""
        RoleArn: ""
    CreateMetricSet_request_MetricSource_RDSSourceConfig:
      allOf:
      - $ref: '#/components/schemas/RDSSourceConfig'
      - description: Details about an Amazon Relational Database Service (RDS) datasource.
      example:
        TableName: ""
        DatabasePort: ""
        DatabaseHost: ""
        DatabaseName: ""
        SecretManagerArn: ""
        VpcConfiguration:
          SubnetIdList: ""
          SecurityGroupIdList: ""
        DBInstanceIdentifier: ""
        RoleArn: ""
    CreateMetricSet_request_MetricSource_RedshiftSourceConfig:
      allOf:
      - $ref: '#/components/schemas/RedshiftSourceConfig'
      - description: Details about an Amazon Redshift database datasource.
      example:
        TableName: ""
        DatabasePort: ""
        DatabaseHost: ""
        DatabaseName: ""
        SecretManagerArn: ""
        VpcConfiguration:
          SubnetIdList: ""
          SecurityGroupIdList: ""
        ClusterIdentifier: ""
        RoleArn: ""
    CreateMetricSet_request_MetricSource_AthenaSourceConfig:
      allOf:
      - $ref: '#/components/schemas/AthenaSourceConfig'
      - description: Details about an Amazon Athena datasource.
      example:
        DataCatalog: ""
        TableName: ""
        S3ResultsPath: ""
        BackTestConfiguration:
          RunBackTestMode: ""
        DatabaseName: ""
        WorkGroupName: ""
        RoleArn: ""
    CreateMetricSet_request_MetricSource:
      description: Contains information about source data used to generate metrics.
      properties:
        S3SourceConfig:
          $ref: '#/components/schemas/S3SourceConfig'
        AppFlowConfig:
          $ref: '#/components/schemas/CreateMetricSet_request_MetricSource_AppFlowConfig'
        CloudWatchConfig:
          $ref: '#/components/schemas/CreateMetricSet_request_MetricSource_CloudWatchConfig'
        RDSSourceConfig:
          $ref: '#/components/schemas/CreateMetricSet_request_MetricSource_RDSSourceConfig'
        RedshiftSourceConfig:
          $ref: '#/components/schemas/CreateMetricSet_request_MetricSource_RedshiftSourceConfig'
        AthenaSourceConfig:
          $ref: '#/components/schemas/CreateMetricSet_request_MetricSource_AthenaSourceConfig'
      type: object
    CreateMetricSet_request:
      properties:
        AnomalyDetectorArn:
          description: The ARN of the anomaly detector that will use the dataset.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        MetricSetName:
          description: The name of the dataset.
          maxLength: 63
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*"
          type: string
        MetricSetDescription:
          description: A description of the dataset you are creating.
          maxLength: 256
          minLength: 1
          pattern: .*\S.*
          type: string
        MetricList:
          description: A list of metrics that the dataset will contain.
          items:
            $ref: '#/components/schemas/Metric'
          minItems: 1
          type: array
        Offset:
          description: "After an interval ends, the amount of seconds that the detector\
            \ waits before importing data. Offset is only supported for S3, Redshift,\
            \ Athena and datasources."
          maximum: 432000
          minimum: 0
          type: integer
        TimestampColumn:
          $ref: '#/components/schemas/CreateMetricSet_request_TimestampColumn'
        DimensionList:
          description: A list of the fields you want to treat as dimensions.
          items:
            $ref: '#/components/schemas/ColumnName'
          minItems: 1
          type: array
        MetricSetFrequency:
          description: The frequency with which the source data will be analyzed for
            anomalies.
          enum:
          - P1D
          - PT1H
          - PT10M
          - PT5M
          type: string
        MetricSource:
          $ref: '#/components/schemas/CreateMetricSet_request_MetricSource'
        Timezone:
          description: The time zone in which your source data was recorded.
          maxLength: 60
          pattern: .*\S.*
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a>
            to apply to the dataset.
          maxProperties: 50
          minProperties: 1
          type: object
        DimensionFilterList:
          description: A list of filters that specify which data is kept for anomaly
            detection.
          items:
            $ref: '#/components/schemas/MetricSetDimensionFilter'
          type: array
      required:
      - AnomalyDetectorArn
      - MetricList
      - MetricSetName
      - MetricSource
      type: object
    DeleteAlert_request:
      properties:
        AlertArn:
          description: The ARN of the alert to delete.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
      required:
      - AlertArn
      type: object
    DeleteAnomalyDetector_request:
      properties:
        AnomalyDetectorArn:
          description: The ARN of the detector to delete.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
      required:
      - AnomalyDetectorArn
      type: object
    DescribeAlert_request:
      properties:
        AlertArn:
          description: The ARN of the alert to describe.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
      required:
      - AlertArn
      type: object
    DescribeAnomalyDetectionExecutions_request:
      properties:
        AnomalyDetectorArn:
          description: The Amazon Resource Name (ARN) of the anomaly detector.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        Timestamp:
          description: The timestamp of the anomaly detection job.
          maxLength: 60
          pattern: "^([12]\\d{3})-(1[0-2]|0[1-9])-(0[1-9]|[12]\\d|3[01])T([01]\\d|2[0-3]):([0-5]\\\
            d):([0-5]\\d)(Z|(\\+|\\-)(0\\d|1[0-2]):([0-5]\\d)(\\[[[:alnum:]\\/\\_]+\\\
            ])?)$"
          type: string
        MaxResults:
          description: The number of items to return in the response.
          maximum: 100
          minimum: 1
          type: integer
        NextToken:
          description: Specify the pagination token that's returned by a previous
            request to retrieve the next page of results.
          maxLength: 3000
          minLength: 1
          pattern: .*\S.*
          type: string
      required:
      - AnomalyDetectorArn
      type: object
    DescribeAnomalyDetector_request:
      properties:
        AnomalyDetectorArn:
          description: The ARN of the detector to describe.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
      required:
      - AnomalyDetectorArn
      type: object
    DescribeMetricSet_request:
      properties:
        MetricSetArn:
          description: The ARN of the dataset.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
      required:
      - MetricSetArn
      type: object
    DetectMetricSetConfig_request_AutoDetectionMetricSource_S3SourceConfig:
      allOf:
      - $ref: '#/components/schemas/AutoDetectionS3SourceConfig'
      - description: The source's source config.
      example:
        TemplatedPathList: ""
        HistoricalDataPathList: ""
    DetectMetricSetConfig_request_AutoDetectionMetricSource:
      description: An auto detection metric source.
      properties:
        S3SourceConfig:
          $ref: '#/components/schemas/DetectMetricSetConfig_request_AutoDetectionMetricSource_S3SourceConfig'
      type: object
    DetectMetricSetConfig_request:
      properties:
        AnomalyDetectorArn:
          description: An anomaly detector ARN.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        AutoDetectionMetricSource:
          $ref: '#/components/schemas/DetectMetricSetConfig_request_AutoDetectionMetricSource'
      required:
      - AnomalyDetectorArn
      - AutoDetectionMetricSource
      type: object
    GetAnomalyGroup_request:
      properties:
        AnomalyGroupId:
          description: The ID of the anomaly group.
          maxLength: 63
          pattern: "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
          type: string
        AnomalyDetectorArn:
          description: The Amazon Resource Name (ARN) of the anomaly detector.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
      required:
      - AnomalyDetectorArn
      - AnomalyGroupId
      type: object
    GetDataQualityMetrics_request:
      properties:
        AnomalyDetectorArn:
          description: The Amazon Resource Name (ARN) of the anomaly detector that
            you want to investigate.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        MetricSetArn:
          description: The Amazon Resource Name (ARN) of a specific data quality metric
            set.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
      required:
      - AnomalyDetectorArn
      type: object
    GetFeedback_request_AnomalyGroupTimeSeriesFeedback:
      description: An anomalous metric in an anomaly group.
      properties:
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID of the anomaly group.
        TimeSeriesId:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesId'
          - description: The ID of the metric.
      type: object
    GetFeedback_request:
      properties:
        AnomalyDetectorArn:
          description: The Amazon Resource Name (ARN) of the anomaly detector.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        AnomalyGroupTimeSeriesFeedback:
          $ref: '#/components/schemas/GetFeedback_request_AnomalyGroupTimeSeriesFeedback'
        MaxResults:
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        NextToken:
          description: Specify the pagination token that's returned by a previous
            request to retrieve the next page of results.
          maxLength: 3000
          minLength: 1
          pattern: .*\S.*
          type: string
      required:
      - AnomalyDetectorArn
      - AnomalyGroupTimeSeriesFeedback
      type: object
    GetSampleData_request_S3SourceConfig:
      description: Contains information about the source configuration in Amazon S3.
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the role.
        TemplatedPathList:
          allOf:
          - $ref: '#/components/schemas/TemplatedPathList'
          - description: An array of strings containing the list of templated paths.
        HistoricalDataPathList:
          allOf:
          - $ref: '#/components/schemas/HistoricalDataPathList'
          - description: An array of strings containing the historical set of data
              paths.
        FileFormatDescriptor:
          $ref: '#/components/schemas/FileFormatDescriptor'
      type: object
    GetSampleData_request:
      properties:
        S3SourceConfig:
          $ref: '#/components/schemas/GetSampleData_request_S3SourceConfig'
      type: object
    ListAlerts_request:
      properties:
        AnomalyDetectorArn:
          description: The ARN of the alert's detector.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        NextToken:
          description: "If the result of the previous request is truncated, the response\
            \ includes a <code>NextToken</code>. To retrieve the next set of results,\
            \ use the token in the next request. Tokens expire after 24 hours."
          maxLength: 3000
          minLength: 1
          pattern: .*\S.*
          type: string
        MaxResults:
          description: The maximum number of results that will be displayed by the
            request.
          maximum: 100
          minimum: 1
          type: integer
      type: object
    ListAnomalyDetectors_request:
      properties:
        MaxResults:
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        NextToken:
          description: "If the result of the previous request was truncated, the response\
            \ includes a <code>NextToken</code>. To retrieve the next set of results,\
            \ use the token in the next request. Tokens expire after 24 hours."
          maxLength: 3000
          minLength: 1
          pattern: .*\S.*
          type: string
      type: object
    ListAnomalyGroupRelatedMetrics_request:
      properties:
        AnomalyDetectorArn:
          description: The Amazon Resource Name (ARN) of the anomaly detector.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        AnomalyGroupId:
          description: The ID of the anomaly group.
          maxLength: 63
          pattern: "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
          type: string
        RelationshipTypeFilter:
          description: Filter for potential causes (<code>CAUSE_OF_INPUT_ANOMALY_GROUP</code>)
            or downstream effects (<code>EFFECT_OF_INPUT_ANOMALY_GROUP</code>) of
            the anomaly group.
          enum:
          - CAUSE_OF_INPUT_ANOMALY_GROUP
          - EFFECT_OF_INPUT_ANOMALY_GROUP
          type: string
        MaxResults:
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        NextToken:
          description: Specify the pagination token that's returned by a previous
            request to retrieve the next page of results.
          maxLength: 3000
          minLength: 1
          pattern: .*\S.*
          type: string
      required:
      - AnomalyDetectorArn
      - AnomalyGroupId
      type: object
    ListAnomalyGroupSummaries_request:
      properties:
        AnomalyDetectorArn:
          description: The Amazon Resource Name (ARN) of the anomaly detector.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        SensitivityThreshold:
          description: The minimum severity score for inclusion in the output.
          maximum: 100
          minimum: 0
          type: integer
        MaxResults:
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        NextToken:
          description: Specify the pagination token that's returned by a previous
            request to retrieve the next page of results.
          maxLength: 3000
          minLength: 1
          pattern: .*\S.*
          type: string
      required:
      - AnomalyDetectorArn
      - SensitivityThreshold
      type: object
    ListAnomalyGroupTimeSeries_request:
      properties:
        AnomalyDetectorArn:
          description: The Amazon Resource Name (ARN) of the anomaly detector.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        AnomalyGroupId:
          description: The ID of the anomaly group.
          maxLength: 63
          pattern: "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
          type: string
        MetricName:
          description: The name of the measure field.
          maxLength: 256
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*"
          type: string
        MaxResults:
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        NextToken:
          description: Specify the pagination token that's returned by a previous
            request to retrieve the next page of results.
          maxLength: 3000
          minLength: 1
          pattern: .*\S.*
          type: string
      required:
      - AnomalyDetectorArn
      - AnomalyGroupId
      - MetricName
      type: object
    ListMetricSets_request:
      properties:
        AnomalyDetectorArn:
          description: The ARN of the anomaly detector containing the metrics sets
            to list.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        MaxResults:
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        NextToken:
          description: "If the result of the previous request was truncated, the response\
            \ includes a <code>NextToken</code>. To retrieve the next set of results,\
            \ use the token in the next request. Tokens expire after 24 hours."
          maxLength: 3000
          minLength: 1
          pattern: .*\S.*
          type: string
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "Tags to apply to the resource. Tag keys and values can contain\
            \ letters, numbers, spaces, and the following symbols: <code>_.:/=+@-</code> "
          maxProperties: 50
          minProperties: 1
          type: object
      required:
      - tags
      type: object
    PutFeedback_request_AnomalyGroupTimeSeriesFeedback:
      description: Feedback for an anomalous metric.
      properties:
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The ID of the anomaly group.
        TimeSeriesId:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesId'
          - description: The ID of the metric.
        IsAnomaly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Feedback on whether the metric is a legitimate anomaly.
      type: object
    PutFeedback_request:
      properties:
        AnomalyDetectorArn:
          description: The Amazon Resource Name (ARN) of the anomaly detector.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        AnomalyGroupTimeSeriesFeedback:
          $ref: '#/components/schemas/PutFeedback_request_AnomalyGroupTimeSeriesFeedback'
      required:
      - AnomalyDetectorArn
      - AnomalyGroupTimeSeriesFeedback
      type: object
    UpdateAlert_request:
      properties:
        AlertArn:
          description: The ARN of the alert to update.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        AlertDescription:
          description: A description of the alert.
          maxLength: 256
          pattern: .*\S.*
          type: string
        AlertSensitivityThreshold:
          description: An integer from 0 to 100 specifying the alert sensitivity threshold.
          maximum: 100
          minimum: 0
          type: integer
        Action:
          $ref: '#/components/schemas/CreateAlert_request_Action'
        AlertFilters:
          $ref: '#/components/schemas/CreateAlert_request_AlertFilters'
      required:
      - AlertArn
      type: object
    UpdateAnomalyDetector_request:
      properties:
        AnomalyDetectorArn:
          description: The ARN of the detector to update.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        KmsKeyArn:
          description: The Amazon Resource Name (ARN) of an AWS KMS encryption key.
          maxLength: 2048
          minLength: 20
          pattern: "arn:aws.*:kms:.*:[0-9]{12}:key/[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}"
          type: string
        AnomalyDetectorDescription:
          description: The updated detector description.
          maxLength: 256
          minLength: 1
          pattern: .*\S.*
          type: string
        AnomalyDetectorConfig:
          $ref: '#/components/schemas/CreateAnomalyDetector_request_AnomalyDetectorConfig'
      required:
      - AnomalyDetectorArn
      type: object
    UpdateMetricSet_request:
      properties:
        MetricSetArn:
          description: The ARN of the dataset to update.
          maxLength: 256
          pattern: "arn:([a-z\\d-]+):.*:.*:.*:.+"
          type: string
        MetricSetDescription:
          description: The dataset's description.
          maxLength: 256
          minLength: 1
          pattern: .*\S.*
          type: string
        MetricList:
          description: The metric list.
          items:
            $ref: '#/components/schemas/Metric'
          minItems: 1
          type: array
        Offset:
          description: "After an interval ends, the amount of seconds that the detector\
            \ waits before importing data. Offset is only supported for S3, Redshift,\
            \ Athena and datasources."
          maximum: 432000
          minimum: 0
          type: integer
        TimestampColumn:
          $ref: '#/components/schemas/CreateMetricSet_request_TimestampColumn'
        DimensionList:
          description: The dimension list.
          items:
            $ref: '#/components/schemas/ColumnName'
          minItems: 1
          type: array
        MetricSetFrequency:
          description: The dataset's interval.
          enum:
          - P1D
          - PT1H
          - PT10M
          - PT5M
          type: string
        MetricSource:
          $ref: '#/components/schemas/CreateMetricSet_request_MetricSource'
        DimensionFilterList:
          description: "Describes a list of filters for choosing specific dimensions\
            \ and specific values. Each filter consists of the dimension and one of\
            \ its values that you want to include. When multiple dimensions or values\
            \ are specified, the dimensions are joined with an AND operation and the\
            \ values are joined with an OR operation."
          items:
            $ref: '#/components/schemas/MetricSetDimensionFilter'
          type: array
      required:
      - MetricSetArn
      type: object
    S3SourceConfig_FileFormatDescriptor:
      allOf:
      - $ref: '#/components/schemas/FileFormatDescriptor'
      - description: Contains information about a source file's formatting.
      example:
        JsonFormatDescriptor:
          Charset: ""
          FileCompression: ""
        CsvFormatDescriptor:
          QuoteSymbol: ""
          ContainsHeader: ""
          Delimiter: ""
          HeaderList: ""
          Charset: ""
          FileCompression: ""
    CloudWatchConfig_BackTestConfiguration:
      allOf:
      - $ref: '#/components/schemas/BackTestConfiguration'
      - description: Settings for backtest mode.
      example:
        RunBackTestMode: ""
    RDSSourceConfig_VpcConfiguration:
      allOf:
      - $ref: '#/components/schemas/VpcConfiguration'
      - description: An object containing information about the Amazon Virtual Private
          Cloud (VPC) configuration.
      example:
        SubnetIdList: ""
        SecurityGroupIdList: ""
    RedshiftSourceConfig_VpcConfiguration:
      allOf:
      - $ref: '#/components/schemas/VpcConfiguration'
      - description: Contains information about the Amazon Virtual Private Cloud (VPC)
          configuration.
      example:
        SubnetIdList: ""
        SecurityGroupIdList: ""
    DescribeAlertResponse_Alert:
      allOf:
      - $ref: '#/components/schemas/Alert'
      - description: Contains information about an alert.
      example:
        LastModificationTime: ""
        AlertDescription: ""
        AlertType: ""
        Action:
          LambdaConfiguration:
            LambdaArn: ""
            RoleArn: ""
          SNSConfiguration:
            SnsTopicArn: ""
            SnsFormat: ""
            RoleArn: ""
        AlertArn: ""
        AlertName: ""
        AlertFilters:
          MetricList: ""
          DimensionFilterList: ""
        AlertSensitivityThreshold: ""
        AlertStatus: ""
        CreationTime: ""
        AnomalyDetectorArn: ""
    DescribeAnomalyDetectorResponse_AnomalyDetectorConfig:
      allOf:
      - $ref: '#/components/schemas/AnomalyDetectorConfigSummary'
      - description: Contains information about the detector's configuration.
      example:
        AnomalyDetectorFrequency: ""
    DescribeMetricSetResponse_TimestampColumn:
      allOf:
      - $ref: '#/components/schemas/TimestampColumn'
      - description: Contains information about the column used for tracking time
          in your source data.
      example:
        ColumnName: ""
        ColumnFormat: ""
    DescribeMetricSetResponse_MetricSource:
      allOf:
      - $ref: '#/components/schemas/MetricSource'
      - description: Contains information about the dataset's source data.
      example:
        S3SourceConfig:
          TemplatedPathList: ""
          HistoricalDataPathList: ""
          RoleArn: ""
          FileFormatDescriptor:
            JsonFormatDescriptor:
              Charset: ""
              FileCompression: ""
            CsvFormatDescriptor:
              QuoteSymbol: ""
              ContainsHeader: ""
              Delimiter: ""
              HeaderList: ""
              Charset: ""
              FileCompression: ""
        CloudWatchConfig:
          BackTestConfiguration:
            RunBackTestMode: ""
          RoleArn: ""
        AthenaSourceConfig:
          DataCatalog: ""
          TableName: ""
          S3ResultsPath: ""
          BackTestConfiguration:
            RunBackTestMode: ""
          DatabaseName: ""
          WorkGroupName: ""
          RoleArn: ""
        RDSSourceConfig:
          TableName: ""
          DatabasePort: ""
          DatabaseHost: ""
          DatabaseName: ""
          SecretManagerArn: ""
          VpcConfiguration:
            SubnetIdList: ""
            SecurityGroupIdList: ""
          DBInstanceIdentifier: ""
          RoleArn: ""
        AppFlowConfig:
          FlowName: ""
          RoleArn: ""
        RedshiftSourceConfig:
          TableName: ""
          DatabasePort: ""
          DatabaseHost: ""
          DatabaseName: ""
          SecretManagerArn: ""
          VpcConfiguration:
            SubnetIdList: ""
            SecurityGroupIdList: ""
          ClusterIdentifier: ""
          RoleArn: ""
    DetectMetricSetConfigResponse_DetectedMetricSetConfig:
      allOf:
      - $ref: '#/components/schemas/DetectedMetricSetConfig'
      - description: The inferred dataset configuration for the datasource.
      example:
        MetricSource:
          S3SourceConfig:
            FileFormatDescriptor:
              JsonFormatDescriptor:
                Charset:
                  Message: ""
                  Confidence: ""
                  Value:
                    SS: ""
                    BS: ""
                    B: ""
                    S: ""
                    NS: ""
                    "N": ""
                FileCompression:
                  Message: ""
                  Confidence: ""
                  Value:
                    SS: ""
                    BS: ""
                    B: ""
                    S: ""
                    NS: ""
                    "N": ""
              CsvFormatDescriptor:
                QuoteSymbol:
                  Message: ""
                  Confidence: ""
                  Value:
                    SS: ""
                    BS: ""
                    B: ""
                    S: ""
                    NS: ""
                    "N": ""
                ContainsHeader:
                  Message: ""
                  Confidence: ""
                  Value:
                    SS: ""
                    BS: ""
                    B: ""
                    S: ""
                    NS: ""
                    "N": ""
                Delimiter:
                  Message: ""
                  Confidence: ""
                  Value:
                    SS: ""
                    BS: ""
                    B: ""
                    S: ""
                    NS: ""
                    "N": ""
                HeaderList:
                  Message: ""
                  Confidence: ""
                  Value:
                    SS: ""
                    BS: ""
                    B: ""
                    S: ""
                    NS: ""
                    "N": ""
                Charset:
                  Message: ""
                  Confidence: ""
                  Value:
                    SS: ""
                    BS: ""
                    B: ""
                    S: ""
                    NS: ""
                    "N": ""
                FileCompression:
                  Message: ""
                  Confidence: ""
                  Value:
                    SS: ""
                    BS: ""
                    B: ""
                    S: ""
                    NS: ""
                    "N": ""
        MetricSetFrequency:
          Message: ""
          Confidence: ""
          Value:
            SS: ""
            BS: ""
            B: ""
            S: ""
            NS: ""
            "N": ""
        Offset:
          Message: ""
          Confidence: ""
          Value:
            SS: ""
            BS: ""
            B: ""
            S: ""
            NS: ""
            "N": ""
    GetAnomalyGroupResponse_AnomalyGroup:
      allOf:
      - $ref: '#/components/schemas/AnomalyGroup'
      - description: Details about the anomaly group.
      example:
        EndTime: ""
        AnomalyGroupScore: ""
        PrimaryMetricName: ""
        StartTime: ""
        MetricLevelImpactList: ""
        AnomalyGroupId: ""
    FileFormatDescriptor_CsvFormatDescriptor:
      allOf:
      - $ref: '#/components/schemas/CsvFormatDescriptor'
      - description: Contains information about how a source CSV data file should
          be analyzed.
      example:
        QuoteSymbol: ""
        ContainsHeader: ""
        Delimiter: ""
        HeaderList: ""
        Charset: ""
        FileCompression: ""
    FileFormatDescriptor_JsonFormatDescriptor:
      allOf:
      - $ref: '#/components/schemas/JsonFormatDescriptor'
      - description: Contains information about how a source JSON data file should
          be analyzed.
      example:
        Charset: ""
        FileCompression: ""
    ListAnomalyGroupSummariesResponse_AnomalyGroupStatistics:
      allOf:
      - $ref: '#/components/schemas/AnomalyGroupStatistics'
      - description: Aggregated details about the anomaly groups.
      example:
        EvaluationStartDate: ""
        TotalCount: ""
        ItemizedMetricStatsList: ""
    Alert_Action:
      allOf:
      - $ref: '#/components/schemas/Action'
      - description: Action that will be triggered when there is an alert.
      example:
        LambdaConfiguration:
          LambdaArn: ""
          RoleArn: ""
        SNSConfiguration:
          SnsTopicArn: ""
          SnsFormat: ""
          RoleArn: ""
    Alert_AlertFilters:
      allOf:
      - $ref: '#/components/schemas/AlertFilters'
      - description: "The configuration of the alert filters, containing MetricList\
          \ and DimensionFilter."
      example:
        MetricList: ""
        DimensionFilterList: ""
    CreateAlertRequest_AlertFilters:
      allOf:
      - $ref: '#/components/schemas/AlertFilters'
      - description: "The configuration of the alert filters, containing MetricList\
          \ and DimensionFilterList."
      example:
        MetricList: ""
        DimensionFilterList: ""
    CreateAnomalyDetectorRequest_AnomalyDetectorConfig:
      allOf:
      - $ref: '#/components/schemas/AnomalyDetectorConfig'
      - description: Contains information about the configuration of the anomaly detector.
      example:
        AnomalyDetectorFrequency: ""
    CreateMetricSetRequest_MetricSource:
      allOf:
      - $ref: '#/components/schemas/MetricSource'
      - description: Contains information about how the source data should be interpreted.
      example:
        S3SourceConfig:
          TemplatedPathList: ""
          HistoricalDataPathList: ""
          RoleArn: ""
          FileFormatDescriptor:
            JsonFormatDescriptor:
              Charset: ""
              FileCompression: ""
            CsvFormatDescriptor:
              QuoteSymbol: ""
              ContainsHeader: ""
              Delimiter: ""
              HeaderList: ""
              Charset: ""
              FileCompression: ""
        CloudWatchConfig:
          BackTestConfiguration:
            RunBackTestMode: ""
          RoleArn: ""
        AthenaSourceConfig:
          DataCatalog: ""
          TableName: ""
          S3ResultsPath: ""
          BackTestConfiguration:
            RunBackTestMode: ""
          DatabaseName: ""
          WorkGroupName: ""
          RoleArn: ""
        RDSSourceConfig:
          TableName: ""
          DatabasePort: ""
          DatabaseHost: ""
          DatabaseName: ""
          SecretManagerArn: ""
          VpcConfiguration:
            SubnetIdList: ""
            SecurityGroupIdList: ""
          DBInstanceIdentifier: ""
          RoleArn: ""
        AppFlowConfig:
          FlowName: ""
          RoleArn: ""
        RedshiftSourceConfig:
          TableName: ""
          DatabasePort: ""
          DatabaseHost: ""
          DatabaseName: ""
          SecretManagerArn: ""
          VpcConfiguration:
            SubnetIdList: ""
            SecurityGroupIdList: ""
          ClusterIdentifier: ""
          RoleArn: ""
    DetectMetricSetConfigRequest_AutoDetectionMetricSource:
      allOf:
      - $ref: '#/components/schemas/AutoDetectionMetricSource'
      - description: A data source.
      example:
        S3SourceConfig:
          TemplatedPathList: ""
          HistoricalDataPathList: ""
    DetectedMetricSetConfig_Offset:
      allOf:
      - $ref: '#/components/schemas/DetectedField'
      - description: The dataset's offset.
      example:
        Message: ""
        Confidence: ""
        Value:
          SS: ""
          BS: ""
          B: ""
          S: ""
          NS: ""
          "N": ""
    DetectedMetricSetConfig_MetricSetFrequency:
      allOf:
      - $ref: '#/components/schemas/DetectedField'
      - description: The dataset's interval.
      example:
        Message: ""
        Confidence: ""
        Value:
          SS: ""
          BS: ""
          B: ""
          S: ""
          NS: ""
          "N": ""
    DetectedMetricSetConfig_MetricSource:
      allOf:
      - $ref: '#/components/schemas/DetectedMetricSource'
      - description: The dataset's data source.
      example:
        S3SourceConfig:
          FileFormatDescriptor:
            JsonFormatDescriptor:
              Charset:
                Message: ""
                Confidence: ""
                Value:
                  SS: ""
                  BS: ""
                  B: ""
                  S: ""
                  NS: ""
                  "N": ""
              FileCompression:
                Message: ""
                Confidence: ""
                Value:
                  SS: ""
                  BS: ""
                  B: ""
                  S: ""
                  NS: ""
                  "N": ""
            CsvFormatDescriptor:
              QuoteSymbol:
                Message: ""
                Confidence: ""
                Value:
                  SS: ""
                  BS: ""
                  B: ""
                  S: ""
                  NS: ""
                  "N": ""
              ContainsHeader:
                Message: ""
                Confidence: ""
                Value:
                  SS: ""
                  BS: ""
                  B: ""
                  S: ""
                  NS: ""
                  "N": ""
              Delimiter:
                Message: ""
                Confidence: ""
                Value:
                  SS: ""
                  BS: ""
                  B: ""
                  S: ""
                  NS: ""
                  "N": ""
              HeaderList:
                Message: ""
                Confidence: ""
                Value:
                  SS: ""
                  BS: ""
                  B: ""
                  S: ""
                  NS: ""
                  "N": ""
              Charset:
                Message: ""
                Confidence: ""
                Value:
                  SS: ""
                  BS: ""
                  B: ""
                  S: ""
                  NS: ""
                  "N": ""
              FileCompression:
                Message: ""
                Confidence: ""
                Value:
                  SS: ""
                  BS: ""
                  B: ""
                  S: ""
                  NS: ""
                  "N": ""
    DetectedField_Value:
      allOf:
      - $ref: '#/components/schemas/AttributeValue'
      - description: The field's value.
      example:
        SS: ""
        BS: ""
        B: ""
        S: ""
        NS: ""
        "N": ""
    DetectedCsvFormatDescriptor_FileCompression:
      allOf:
      - $ref: '#/components/schemas/DetectedField'
      - description: The format's file compression.
      example:
        Message: ""
        Confidence: ""
        Value:
          SS: ""
          BS: ""
          B: ""
          S: ""
          NS: ""
          "N": ""
    DetectedCsvFormatDescriptor_Charset:
      allOf:
      - $ref: '#/components/schemas/DetectedField'
      - description: The format's charset.
      example:
        Message: ""
        Confidence: ""
        Value:
          SS: ""
          BS: ""
          B: ""
          S: ""
          NS: ""
          "N": ""
    DetectedCsvFormatDescriptor_ContainsHeader:
      allOf:
      - $ref: '#/components/schemas/DetectedField'
      - description: Whether the format includes a header.
      example:
        Message: ""
        Confidence: ""
        Value:
          SS: ""
          BS: ""
          B: ""
          S: ""
          NS: ""
          "N": ""
    DetectedCsvFormatDescriptor_Delimiter:
      allOf:
      - $ref: '#/components/schemas/DetectedField'
      - description: The format's delimiter.
      example:
        Message: ""
        Confidence: ""
        Value:
          SS: ""
          BS: ""
          B: ""
          S: ""
          NS: ""
          "N": ""
    DetectedCsvFormatDescriptor_HeaderList:
      allOf:
      - $ref: '#/components/schemas/DetectedField'
      - description: The format's header list.
      example:
        Message: ""
        Confidence: ""
        Value:
          SS: ""
          BS: ""
          B: ""
          S: ""
          NS: ""
          "N": ""
    DetectedCsvFormatDescriptor_QuoteSymbol:
      allOf:
      - $ref: '#/components/schemas/DetectedField'
      - description: The format's quote symbol.
      example:
        Message: ""
        Confidence: ""
        Value:
          SS: ""
          BS: ""
          B: ""
          S: ""
          NS: ""
          "N": ""
    DetectedJsonFormatDescriptor_Charset:
      allOf:
      - $ref: '#/components/schemas/DetectedField'
      - description: The format's character set.
      example:
        Message: ""
        Confidence: ""
        Value:
          SS: ""
          BS: ""
          B: ""
          S: ""
          NS: ""
          "N": ""
    DetectedFileFormatDescriptor_CsvFormatDescriptor:
      allOf:
      - $ref: '#/components/schemas/DetectedCsvFormatDescriptor'
      - description: Details about a CSV format.
      example:
        QuoteSymbol:
          Message: ""
          Confidence: ""
          Value:
            SS: ""
            BS: ""
            B: ""
            S: ""
            NS: ""
            "N": ""
        ContainsHeader:
          Message: ""
          Confidence: ""
          Value:
            SS: ""
            BS: ""
            B: ""
            S: ""
            NS: ""
            "N": ""
        Delimiter:
          Message: ""
          Confidence: ""
          Value:
            SS: ""
            BS: ""
            B: ""
            S: ""
            NS: ""
            "N": ""
        HeaderList:
          Message: ""
          Confidence: ""
          Value:
            SS: ""
            BS: ""
            B: ""
            S: ""
            NS: ""
            "N": ""
        Charset:
          Message: ""
          Confidence: ""
          Value:
            SS: ""
            BS: ""
            B: ""
            S: ""
            NS: ""
            "N": ""
        FileCompression:
          Message: ""
          Confidence: ""
          Value:
            SS: ""
            BS: ""
            B: ""
            S: ""
            NS: ""
            "N": ""
    DetectedFileFormatDescriptor_JsonFormatDescriptor:
      allOf:
      - $ref: '#/components/schemas/DetectedJsonFormatDescriptor'
      - description: Details about a JSON format.
      example:
        Charset:
          Message: ""
          Confidence: ""
          Value:
            SS: ""
            BS: ""
            B: ""
            S: ""
            NS: ""
            "N": ""
        FileCompression:
          Message: ""
          Confidence: ""
          Value:
            SS: ""
            BS: ""
            B: ""
            S: ""
            NS: ""
            "N": ""
    DetectedMetricSource_S3SourceConfig:
      allOf:
      - $ref: '#/components/schemas/DetectedS3SourceConfig'
      - description: The data source's source configuration.
      example:
        FileFormatDescriptor:
          JsonFormatDescriptor:
            Charset:
              Message: ""
              Confidence: ""
              Value:
                SS: ""
                BS: ""
                B: ""
                S: ""
                NS: ""
                "N": ""
            FileCompression:
              Message: ""
              Confidence: ""
              Value:
                SS: ""
                BS: ""
                B: ""
                S: ""
                NS: ""
                "N": ""
          CsvFormatDescriptor:
            QuoteSymbol:
              Message: ""
              Confidence: ""
              Value:
                SS: ""
                BS: ""
                B: ""
                S: ""
                NS: ""
                "N": ""
            ContainsHeader:
              Message: ""
              Confidence: ""
              Value:
                SS: ""
                BS: ""
                B: ""
                S: ""
                NS: ""
                "N": ""
            Delimiter:
              Message: ""
              Confidence: ""
              Value:
                SS: ""
                BS: ""
                B: ""
                S: ""
                NS: ""
                "N": ""
            HeaderList:
              Message: ""
              Confidence: ""
              Value:
                SS: ""
                BS: ""
                B: ""
                S: ""
                NS: ""
                "N": ""
            Charset:
              Message: ""
              Confidence: ""
              Value:
                SS: ""
                BS: ""
                B: ""
                S: ""
                NS: ""
                "N": ""
            FileCompression:
              Message: ""
              Confidence: ""
              Value:
                SS: ""
                BS: ""
                B: ""
                S: ""
                NS: ""
                "N": ""
    DetectedS3SourceConfig_FileFormatDescriptor:
      allOf:
      - $ref: '#/components/schemas/DetectedFileFormatDescriptor'
      - description: The source's file format descriptor.
      example:
        JsonFormatDescriptor:
          Charset:
            Message: ""
            Confidence: ""
            Value:
              SS: ""
              BS: ""
              B: ""
              S: ""
              NS: ""
              "N": ""
          FileCompression:
            Message: ""
            Confidence: ""
            Value:
              SS: ""
              BS: ""
              B: ""
              S: ""
              NS: ""
              "N": ""
        CsvFormatDescriptor:
          QuoteSymbol:
            Message: ""
            Confidence: ""
            Value:
              SS: ""
              BS: ""
              B: ""
              S: ""
              NS: ""
              "N": ""
          ContainsHeader:
            Message: ""
            Confidence: ""
            Value:
              SS: ""
              BS: ""
              B: ""
              S: ""
              NS: ""
              "N": ""
          Delimiter:
            Message: ""
            Confidence: ""
            Value:
              SS: ""
              BS: ""
              B: ""
              S: ""
              NS: ""
              "N": ""
          HeaderList:
            Message: ""
            Confidence: ""
            Value:
              SS: ""
              BS: ""
              B: ""
              S: ""
              NS: ""
              "N": ""
          Charset:
            Message: ""
            Confidence: ""
            Value:
              SS: ""
              BS: ""
              B: ""
              S: ""
              NS: ""
              "N": ""
          FileCompression:
            Message: ""
            Confidence: ""
            Value:
              SS: ""
              BS: ""
              B: ""
              S: ""
              NS: ""
              "N": ""
    GetFeedbackRequest_AnomalyGroupTimeSeriesFeedback:
      allOf:
      - $ref: '#/components/schemas/AnomalyGroupTimeSeries'
      - description: The anomalous metric and group ID.
      example:
        TimeSeriesId: ""
        AnomalyGroupId: ""
    GetSampleDataRequest_S3SourceConfig:
      allOf:
      - $ref: '#/components/schemas/SampleDataS3SourceConfig'
      - description: A datasource bucket in Amazon S3.
      example:
        TemplatedPathList: ""
        HistoricalDataPathList: ""
        RoleArn: ""
        FileFormatDescriptor:
          JsonFormatDescriptor:
            Charset: ""
            FileCompression: ""
          CsvFormatDescriptor:
            QuoteSymbol: ""
            ContainsHeader: ""
            Delimiter: ""
            HeaderList: ""
            Charset: ""
            FileCompression: ""
    MetricLevelImpact_ContributionMatrix:
      allOf:
      - $ref: '#/components/schemas/ContributionMatrix'
      - description: Details about the dimensions that contributed to the anomaly.
    PutFeedbackRequest_AnomalyGroupTimeSeriesFeedback:
      allOf:
      - $ref: '#/components/schemas/AnomalyGroupTimeSeriesFeedback'
      - description: Feedback for an anomalous metric.
      example:
        TimeSeriesId: ""
        AnomalyGroupId: ""
        IsAnomaly: ""
    UpdateAnomalyDetectorRequest_AnomalyDetectorConfig:
      allOf:
      - $ref: '#/components/schemas/AnomalyDetectorConfig'
      - description: Contains information about the configuration to which the detector
          will be updated.
      example:
        AnomalyDetectorFrequency: ""
    UpdateMetricSetRequest_TimestampColumn:
      allOf:
      - $ref: '#/components/schemas/TimestampColumn'
      - description: The timestamp column.
      example:
        ColumnName: ""
        ColumnFormat: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

