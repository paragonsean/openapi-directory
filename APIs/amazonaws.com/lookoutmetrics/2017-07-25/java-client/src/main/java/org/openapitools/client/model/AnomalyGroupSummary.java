/*
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Details about a group of anomalous metrics.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:15.433600-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AnomalyGroupSummary {
  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_ANOMALY_GROUP_ID = "AnomalyGroupId";
  @SerializedName(SERIALIZED_NAME_ANOMALY_GROUP_ID)
  private String anomalyGroupId;

  public static final String SERIALIZED_NAME_ANOMALY_GROUP_SCORE = "AnomalyGroupScore";
  @SerializedName(SERIALIZED_NAME_ANOMALY_GROUP_SCORE)
  private Double anomalyGroupScore;

  public static final String SERIALIZED_NAME_PRIMARY_METRIC_NAME = "PrimaryMetricName";
  @SerializedName(SERIALIZED_NAME_PRIMARY_METRIC_NAME)
  private String primaryMetricName;

  public AnomalyGroupSummary() {
  }

  public AnomalyGroupSummary startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public AnomalyGroupSummary endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  public AnomalyGroupSummary anomalyGroupId(String anomalyGroupId) {
    this.anomalyGroupId = anomalyGroupId;
    return this;
  }

  /**
   * Get anomalyGroupId
   * @return anomalyGroupId
   */
  @javax.annotation.Nullable
  public String getAnomalyGroupId() {
    return anomalyGroupId;
  }

  public void setAnomalyGroupId(String anomalyGroupId) {
    this.anomalyGroupId = anomalyGroupId;
  }


  public AnomalyGroupSummary anomalyGroupScore(Double anomalyGroupScore) {
    this.anomalyGroupScore = anomalyGroupScore;
    return this;
  }

  /**
   * Get anomalyGroupScore
   * @return anomalyGroupScore
   */
  @javax.annotation.Nullable
  public Double getAnomalyGroupScore() {
    return anomalyGroupScore;
  }

  public void setAnomalyGroupScore(Double anomalyGroupScore) {
    this.anomalyGroupScore = anomalyGroupScore;
  }


  public AnomalyGroupSummary primaryMetricName(String primaryMetricName) {
    this.primaryMetricName = primaryMetricName;
    return this;
  }

  /**
   * Get primaryMetricName
   * @return primaryMetricName
   */
  @javax.annotation.Nullable
  public String getPrimaryMetricName() {
    return primaryMetricName;
  }

  public void setPrimaryMetricName(String primaryMetricName) {
    this.primaryMetricName = primaryMetricName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnomalyGroupSummary anomalyGroupSummary = (AnomalyGroupSummary) o;
    return Objects.equals(this.startTime, anomalyGroupSummary.startTime) &&
        Objects.equals(this.endTime, anomalyGroupSummary.endTime) &&
        Objects.equals(this.anomalyGroupId, anomalyGroupSummary.anomalyGroupId) &&
        Objects.equals(this.anomalyGroupScore, anomalyGroupSummary.anomalyGroupScore) &&
        Objects.equals(this.primaryMetricName, anomalyGroupSummary.primaryMetricName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(startTime, endTime, anomalyGroupId, anomalyGroupScore, primaryMetricName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnomalyGroupSummary {\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    anomalyGroupId: ").append(toIndentedString(anomalyGroupId)).append("\n");
    sb.append("    anomalyGroupScore: ").append(toIndentedString(anomalyGroupScore)).append("\n");
    sb.append("    primaryMetricName: ").append(toIndentedString(primaryMetricName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");
    openapiFields.add("AnomalyGroupId");
    openapiFields.add("AnomalyGroupScore");
    openapiFields.add("PrimaryMetricName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AnomalyGroupSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AnomalyGroupSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AnomalyGroupSummary is not found in the empty JSON string", AnomalyGroupSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AnomalyGroupSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AnomalyGroupSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `StartTime`
      if (jsonObj.get("StartTime") != null && !jsonObj.get("StartTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StartTime"));
      }
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the optional field `AnomalyGroupId`
      if (jsonObj.get("AnomalyGroupId") != null && !jsonObj.get("AnomalyGroupId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AnomalyGroupId"));
      }
      // validate the optional field `AnomalyGroupScore`
      if (jsonObj.get("AnomalyGroupScore") != null && !jsonObj.get("AnomalyGroupScore").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("AnomalyGroupScore"));
      }
      // validate the optional field `PrimaryMetricName`
      if (jsonObj.get("PrimaryMetricName") != null && !jsonObj.get("PrimaryMetricName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PrimaryMetricName"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AnomalyGroupSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AnomalyGroupSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AnomalyGroupSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AnomalyGroupSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<AnomalyGroupSummary>() {
           @Override
           public void write(JsonWriter out, AnomalyGroupSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AnomalyGroupSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AnomalyGroupSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AnomalyGroupSummary
   * @throws IOException if the JSON string is invalid with respect to AnomalyGroupSummary
   */
  public static AnomalyGroupSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AnomalyGroupSummary.class);
  }

  /**
   * Convert an instance of AnomalyGroupSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

