/*
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CloudWatchConfigBackTestConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateMetricSetRequestMetricSourceAthenaSourceConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:15.433600-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateMetricSetRequestMetricSourceAthenaSourceConfig {
  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_DATABASE_NAME = "DatabaseName";
  @SerializedName(SERIALIZED_NAME_DATABASE_NAME)
  private String databaseName;

  public static final String SERIALIZED_NAME_DATA_CATALOG = "DataCatalog";
  @SerializedName(SERIALIZED_NAME_DATA_CATALOG)
  private String dataCatalog;

  public static final String SERIALIZED_NAME_TABLE_NAME = "TableName";
  @SerializedName(SERIALIZED_NAME_TABLE_NAME)
  private String tableName;

  public static final String SERIALIZED_NAME_WORK_GROUP_NAME = "WorkGroupName";
  @SerializedName(SERIALIZED_NAME_WORK_GROUP_NAME)
  private String workGroupName;

  public static final String SERIALIZED_NAME_S3_RESULTS_PATH = "S3ResultsPath";
  @SerializedName(SERIALIZED_NAME_S3_RESULTS_PATH)
  private String s3ResultsPath;

  public static final String SERIALIZED_NAME_BACK_TEST_CONFIGURATION = "BackTestConfiguration";
  @SerializedName(SERIALIZED_NAME_BACK_TEST_CONFIGURATION)
  private CloudWatchConfigBackTestConfiguration backTestConfiguration;

  public CreateMetricSetRequestMetricSourceAthenaSourceConfig() {
  }

  public CreateMetricSetRequestMetricSourceAthenaSourceConfig roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public CreateMetricSetRequestMetricSourceAthenaSourceConfig databaseName(String databaseName) {
    this.databaseName = databaseName;
    return this;
  }

  /**
   * Get databaseName
   * @return databaseName
   */
  @javax.annotation.Nullable
  public String getDatabaseName() {
    return databaseName;
  }

  public void setDatabaseName(String databaseName) {
    this.databaseName = databaseName;
  }


  public CreateMetricSetRequestMetricSourceAthenaSourceConfig dataCatalog(String dataCatalog) {
    this.dataCatalog = dataCatalog;
    return this;
  }

  /**
   * Get dataCatalog
   * @return dataCatalog
   */
  @javax.annotation.Nullable
  public String getDataCatalog() {
    return dataCatalog;
  }

  public void setDataCatalog(String dataCatalog) {
    this.dataCatalog = dataCatalog;
  }


  public CreateMetricSetRequestMetricSourceAthenaSourceConfig tableName(String tableName) {
    this.tableName = tableName;
    return this;
  }

  /**
   * Get tableName
   * @return tableName
   */
  @javax.annotation.Nullable
  public String getTableName() {
    return tableName;
  }

  public void setTableName(String tableName) {
    this.tableName = tableName;
  }


  public CreateMetricSetRequestMetricSourceAthenaSourceConfig workGroupName(String workGroupName) {
    this.workGroupName = workGroupName;
    return this;
  }

  /**
   * Get workGroupName
   * @return workGroupName
   */
  @javax.annotation.Nullable
  public String getWorkGroupName() {
    return workGroupName;
  }

  public void setWorkGroupName(String workGroupName) {
    this.workGroupName = workGroupName;
  }


  public CreateMetricSetRequestMetricSourceAthenaSourceConfig s3ResultsPath(String s3ResultsPath) {
    this.s3ResultsPath = s3ResultsPath;
    return this;
  }

  /**
   * Get s3ResultsPath
   * @return s3ResultsPath
   */
  @javax.annotation.Nullable
  public String getS3ResultsPath() {
    return s3ResultsPath;
  }

  public void setS3ResultsPath(String s3ResultsPath) {
    this.s3ResultsPath = s3ResultsPath;
  }


  public CreateMetricSetRequestMetricSourceAthenaSourceConfig backTestConfiguration(CloudWatchConfigBackTestConfiguration backTestConfiguration) {
    this.backTestConfiguration = backTestConfiguration;
    return this;
  }

  /**
   * Get backTestConfiguration
   * @return backTestConfiguration
   */
  @javax.annotation.Nullable
  public CloudWatchConfigBackTestConfiguration getBackTestConfiguration() {
    return backTestConfiguration;
  }

  public void setBackTestConfiguration(CloudWatchConfigBackTestConfiguration backTestConfiguration) {
    this.backTestConfiguration = backTestConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateMetricSetRequestMetricSourceAthenaSourceConfig createMetricSetRequestMetricSourceAthenaSourceConfig = (CreateMetricSetRequestMetricSourceAthenaSourceConfig) o;
    return Objects.equals(this.roleArn, createMetricSetRequestMetricSourceAthenaSourceConfig.roleArn) &&
        Objects.equals(this.databaseName, createMetricSetRequestMetricSourceAthenaSourceConfig.databaseName) &&
        Objects.equals(this.dataCatalog, createMetricSetRequestMetricSourceAthenaSourceConfig.dataCatalog) &&
        Objects.equals(this.tableName, createMetricSetRequestMetricSourceAthenaSourceConfig.tableName) &&
        Objects.equals(this.workGroupName, createMetricSetRequestMetricSourceAthenaSourceConfig.workGroupName) &&
        Objects.equals(this.s3ResultsPath, createMetricSetRequestMetricSourceAthenaSourceConfig.s3ResultsPath) &&
        Objects.equals(this.backTestConfiguration, createMetricSetRequestMetricSourceAthenaSourceConfig.backTestConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(roleArn, databaseName, dataCatalog, tableName, workGroupName, s3ResultsPath, backTestConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateMetricSetRequestMetricSourceAthenaSourceConfig {\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    databaseName: ").append(toIndentedString(databaseName)).append("\n");
    sb.append("    dataCatalog: ").append(toIndentedString(dataCatalog)).append("\n");
    sb.append("    tableName: ").append(toIndentedString(tableName)).append("\n");
    sb.append("    workGroupName: ").append(toIndentedString(workGroupName)).append("\n");
    sb.append("    s3ResultsPath: ").append(toIndentedString(s3ResultsPath)).append("\n");
    sb.append("    backTestConfiguration: ").append(toIndentedString(backTestConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("RoleArn");
    openapiFields.add("DatabaseName");
    openapiFields.add("DataCatalog");
    openapiFields.add("TableName");
    openapiFields.add("WorkGroupName");
    openapiFields.add("S3ResultsPath");
    openapiFields.add("BackTestConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateMetricSetRequestMetricSourceAthenaSourceConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateMetricSetRequestMetricSourceAthenaSourceConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateMetricSetRequestMetricSourceAthenaSourceConfig is not found in the empty JSON string", CreateMetricSetRequestMetricSourceAthenaSourceConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateMetricSetRequestMetricSourceAthenaSourceConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateMetricSetRequestMetricSourceAthenaSourceConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `RoleArn`
      if (jsonObj.get("RoleArn") != null && !jsonObj.get("RoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleArn"));
      }
      // validate the optional field `DatabaseName`
      if (jsonObj.get("DatabaseName") != null && !jsonObj.get("DatabaseName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DatabaseName"));
      }
      // validate the optional field `DataCatalog`
      if (jsonObj.get("DataCatalog") != null && !jsonObj.get("DataCatalog").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DataCatalog"));
      }
      // validate the optional field `TableName`
      if (jsonObj.get("TableName") != null && !jsonObj.get("TableName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TableName"));
      }
      // validate the optional field `WorkGroupName`
      if (jsonObj.get("WorkGroupName") != null && !jsonObj.get("WorkGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("WorkGroupName"));
      }
      // validate the optional field `S3ResultsPath`
      if (jsonObj.get("S3ResultsPath") != null && !jsonObj.get("S3ResultsPath").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("S3ResultsPath"));
      }
      // validate the optional field `BackTestConfiguration`
      if (jsonObj.get("BackTestConfiguration") != null && !jsonObj.get("BackTestConfiguration").isJsonNull()) {
        CloudWatchConfigBackTestConfiguration.validateJsonElement(jsonObj.get("BackTestConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateMetricSetRequestMetricSourceAthenaSourceConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateMetricSetRequestMetricSourceAthenaSourceConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateMetricSetRequestMetricSourceAthenaSourceConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateMetricSetRequestMetricSourceAthenaSourceConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateMetricSetRequestMetricSourceAthenaSourceConfig>() {
           @Override
           public void write(JsonWriter out, CreateMetricSetRequestMetricSourceAthenaSourceConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateMetricSetRequestMetricSourceAthenaSourceConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateMetricSetRequestMetricSourceAthenaSourceConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateMetricSetRequestMetricSourceAthenaSourceConfig
   * @throws IOException if the JSON string is invalid with respect to CreateMetricSetRequestMetricSourceAthenaSourceConfig
   */
  public static CreateMetricSetRequestMetricSourceAthenaSourceConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateMetricSetRequestMetricSourceAthenaSourceConfig.class);
  }

  /**
   * Convert an instance of CreateMetricSetRequestMetricSourceAthenaSourceConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

