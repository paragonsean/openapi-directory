/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlertStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlertStatus::OAIAlertStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlertStatus::OAIAlertStatus() {
    this->initializeModel();
}

OAIAlertStatus::~OAIAlertStatus() {}

void OAIAlertStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAlertStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAlertStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ACTIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlertStatus::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INACTIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlertStatus::INACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAlertStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAlertStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAlertStatus::ACTIVE:
            val = "ACTIVE";
            break;
        case eOAIAlertStatus::INACTIVE:
            val = "INACTIVE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAlertStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAlertStatus::eOAIAlertStatus OAIAlertStatus::getValue() const {
    return m_value;
}

void OAIAlertStatus::setValue(const OAIAlertStatus::eOAIAlertStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAlertStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIAlertStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
