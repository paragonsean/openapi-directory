/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAthenaSourceConfig.h
 *
 * Details about an Amazon Athena datasource.
 */

#ifndef OAIAthenaSourceConfig_H
#define OAIAthenaSourceConfig_H

#include <QJsonObject>

#include "OAICloudWatchConfig_BackTestConfiguration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICloudWatchConfig_BackTestConfiguration;

class OAIAthenaSourceConfig : public OAIObject {
public:
    OAIAthenaSourceConfig();
    OAIAthenaSourceConfig(QString json);
    ~OAIAthenaSourceConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QString getDatabaseName() const;
    void setDatabaseName(const QString &database_name);
    bool is_database_name_Set() const;
    bool is_database_name_Valid() const;

    QString getDataCatalog() const;
    void setDataCatalog(const QString &data_catalog);
    bool is_data_catalog_Set() const;
    bool is_data_catalog_Valid() const;

    QString getTableName() const;
    void setTableName(const QString &table_name);
    bool is_table_name_Set() const;
    bool is_table_name_Valid() const;

    QString getWorkGroupName() const;
    void setWorkGroupName(const QString &work_group_name);
    bool is_work_group_name_Set() const;
    bool is_work_group_name_Valid() const;

    QString getS3ResultsPath() const;
    void setS3ResultsPath(const QString &s3_results_path);
    bool is_s3_results_path_Set() const;
    bool is_s3_results_path_Valid() const;

    OAICloudWatchConfig_BackTestConfiguration getBackTestConfiguration() const;
    void setBackTestConfiguration(const OAICloudWatchConfig_BackTestConfiguration &back_test_configuration);
    bool is_back_test_configuration_Set() const;
    bool is_back_test_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QString m_database_name;
    bool m_database_name_isSet;
    bool m_database_name_isValid;

    QString m_data_catalog;
    bool m_data_catalog_isSet;
    bool m_data_catalog_isValid;

    QString m_table_name;
    bool m_table_name_isSet;
    bool m_table_name_isValid;

    QString m_work_group_name;
    bool m_work_group_name_isSet;
    bool m_work_group_name_isValid;

    QString m_s3_results_path;
    bool m_s3_results_path_isSet;
    bool m_s3_results_path_isValid;

    OAICloudWatchConfig_BackTestConfiguration m_back_test_configuration;
    bool m_back_test_configuration_isSet;
    bool m_back_test_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAthenaSourceConfig)

#endif // OAIAthenaSourceConfig_H
