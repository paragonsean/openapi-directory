/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAnomalyDetectorResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAnomalyDetectorResponse::OAICreateAnomalyDetectorResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAnomalyDetectorResponse::OAICreateAnomalyDetectorResponse() {
    this->initializeModel();
}

OAICreateAnomalyDetectorResponse::~OAICreateAnomalyDetectorResponse() {}

void OAICreateAnomalyDetectorResponse::initializeModel() {

    m_anomaly_detector_arn_isSet = false;
    m_anomaly_detector_arn_isValid = false;
}

void OAICreateAnomalyDetectorResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAnomalyDetectorResponse::fromJsonObject(QJsonObject json) {

    m_anomaly_detector_arn_isValid = ::OpenAPI::fromJsonValue(m_anomaly_detector_arn, json[QString("AnomalyDetectorArn")]);
    m_anomaly_detector_arn_isSet = !json[QString("AnomalyDetectorArn")].isNull() && m_anomaly_detector_arn_isValid;
}

QString OAICreateAnomalyDetectorResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAnomalyDetectorResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_anomaly_detector_arn_isSet) {
        obj.insert(QString("AnomalyDetectorArn"), ::OpenAPI::toJsonValue(m_anomaly_detector_arn));
    }
    return obj;
}

QString OAICreateAnomalyDetectorResponse::getAnomalyDetectorArn() const {
    return m_anomaly_detector_arn;
}
void OAICreateAnomalyDetectorResponse::setAnomalyDetectorArn(const QString &anomaly_detector_arn) {
    m_anomaly_detector_arn = anomaly_detector_arn;
    m_anomaly_detector_arn_isSet = true;
}

bool OAICreateAnomalyDetectorResponse::is_anomaly_detector_arn_Set() const{
    return m_anomaly_detector_arn_isSet;
}

bool OAICreateAnomalyDetectorResponse::is_anomaly_detector_arn_Valid() const{
    return m_anomaly_detector_arn_isValid;
}

bool OAICreateAnomalyDetectorResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_anomaly_detector_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAnomalyDetectorResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
