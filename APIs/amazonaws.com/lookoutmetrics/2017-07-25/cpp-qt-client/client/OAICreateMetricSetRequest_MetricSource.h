/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateMetricSetRequest_MetricSource.h
 *
 * 
 */

#ifndef OAICreateMetricSetRequest_MetricSource_H
#define OAICreateMetricSetRequest_MetricSource_H

#include <QJsonObject>

#include "OAICreateMetricSet_request_MetricSource_AppFlowConfig.h"
#include "OAICreateMetricSet_request_MetricSource_AthenaSourceConfig.h"
#include "OAICreateMetricSet_request_MetricSource_CloudWatchConfig.h"
#include "OAICreateMetricSet_request_MetricSource_RDSSourceConfig.h"
#include "OAICreateMetricSet_request_MetricSource_RedshiftSourceConfig.h"
#include "OAIS3SourceConfig.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIS3SourceConfig;
class OAICreateMetricSet_request_MetricSource_AppFlowConfig;
class OAICreateMetricSet_request_MetricSource_CloudWatchConfig;
class OAICreateMetricSet_request_MetricSource_RDSSourceConfig;
class OAICreateMetricSet_request_MetricSource_RedshiftSourceConfig;
class OAICreateMetricSet_request_MetricSource_AthenaSourceConfig;

class OAICreateMetricSetRequest_MetricSource : public OAIObject {
public:
    OAICreateMetricSetRequest_MetricSource();
    OAICreateMetricSetRequest_MetricSource(QString json);
    ~OAICreateMetricSetRequest_MetricSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIS3SourceConfig getS3SourceConfig() const;
    void setS3SourceConfig(const OAIS3SourceConfig &s3_source_config);
    bool is_s3_source_config_Set() const;
    bool is_s3_source_config_Valid() const;

    OAICreateMetricSet_request_MetricSource_AppFlowConfig getAppFlowConfig() const;
    void setAppFlowConfig(const OAICreateMetricSet_request_MetricSource_AppFlowConfig &app_flow_config);
    bool is_app_flow_config_Set() const;
    bool is_app_flow_config_Valid() const;

    OAICreateMetricSet_request_MetricSource_CloudWatchConfig getCloudWatchConfig() const;
    void setCloudWatchConfig(const OAICreateMetricSet_request_MetricSource_CloudWatchConfig &cloud_watch_config);
    bool is_cloud_watch_config_Set() const;
    bool is_cloud_watch_config_Valid() const;

    OAICreateMetricSet_request_MetricSource_RDSSourceConfig getRdsSourceConfig() const;
    void setRdsSourceConfig(const OAICreateMetricSet_request_MetricSource_RDSSourceConfig &rds_source_config);
    bool is_rds_source_config_Set() const;
    bool is_rds_source_config_Valid() const;

    OAICreateMetricSet_request_MetricSource_RedshiftSourceConfig getRedshiftSourceConfig() const;
    void setRedshiftSourceConfig(const OAICreateMetricSet_request_MetricSource_RedshiftSourceConfig &redshift_source_config);
    bool is_redshift_source_config_Set() const;
    bool is_redshift_source_config_Valid() const;

    OAICreateMetricSet_request_MetricSource_AthenaSourceConfig getAthenaSourceConfig() const;
    void setAthenaSourceConfig(const OAICreateMetricSet_request_MetricSource_AthenaSourceConfig &athena_source_config);
    bool is_athena_source_config_Set() const;
    bool is_athena_source_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIS3SourceConfig m_s3_source_config;
    bool m_s3_source_config_isSet;
    bool m_s3_source_config_isValid;

    OAICreateMetricSet_request_MetricSource_AppFlowConfig m_app_flow_config;
    bool m_app_flow_config_isSet;
    bool m_app_flow_config_isValid;

    OAICreateMetricSet_request_MetricSource_CloudWatchConfig m_cloud_watch_config;
    bool m_cloud_watch_config_isSet;
    bool m_cloud_watch_config_isValid;

    OAICreateMetricSet_request_MetricSource_RDSSourceConfig m_rds_source_config;
    bool m_rds_source_config_isSet;
    bool m_rds_source_config_isValid;

    OAICreateMetricSet_request_MetricSource_RedshiftSourceConfig m_redshift_source_config;
    bool m_redshift_source_config_isSet;
    bool m_redshift_source_config_isValid;

    OAICreateMetricSet_request_MetricSource_AthenaSourceConfig m_athena_source_config;
    bool m_athena_source_config_isSet;
    bool m_athena_source_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateMetricSetRequest_MetricSource)

#endif // OAICreateMetricSetRequest_MetricSource_H
