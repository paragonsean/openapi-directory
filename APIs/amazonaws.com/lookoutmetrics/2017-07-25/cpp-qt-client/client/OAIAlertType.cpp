/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlertType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlertType::OAIAlertType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlertType::OAIAlertType() {
    this->initializeModel();
}

OAIAlertType::~OAIAlertType() {}

void OAIAlertType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAlertType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAlertType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SNS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlertType::SNS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LAMBDA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlertType::LAMBDA;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAlertType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAlertType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAlertType::SNS:
            val = "SNS";
            break;
        case eOAIAlertType::LAMBDA:
            val = "LAMBDA";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAlertType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAlertType::eOAIAlertType OAIAlertType::getValue() const {
    return m_value;
}

void OAIAlertType::setValue(const OAIAlertType::eOAIAlertType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAlertType::isSet() const {
    
    return m_value_isSet;
}

bool OAIAlertType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
