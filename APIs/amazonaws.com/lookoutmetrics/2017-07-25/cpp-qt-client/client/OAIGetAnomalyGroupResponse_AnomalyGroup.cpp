/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetAnomalyGroupResponse_AnomalyGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetAnomalyGroupResponse_AnomalyGroup::OAIGetAnomalyGroupResponse_AnomalyGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetAnomalyGroupResponse_AnomalyGroup::OAIGetAnomalyGroupResponse_AnomalyGroup() {
    this->initializeModel();
}

OAIGetAnomalyGroupResponse_AnomalyGroup::~OAIGetAnomalyGroupResponse_AnomalyGroup() {}

void OAIGetAnomalyGroupResponse_AnomalyGroup::initializeModel() {

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_anomaly_group_id_isSet = false;
    m_anomaly_group_id_isValid = false;

    m_anomaly_group_score_isSet = false;
    m_anomaly_group_score_isValid = false;

    m_primary_metric_name_isSet = false;
    m_primary_metric_name_isValid = false;

    m_metric_level_impact_list_isSet = false;
    m_metric_level_impact_list_isValid = false;
}

void OAIGetAnomalyGroupResponse_AnomalyGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetAnomalyGroupResponse_AnomalyGroup::fromJsonObject(QJsonObject json) {

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("StartTime")]);
    m_start_time_isSet = !json[QString("StartTime")].isNull() && m_start_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("EndTime")]);
    m_end_time_isSet = !json[QString("EndTime")].isNull() && m_end_time_isValid;

    m_anomaly_group_id_isValid = ::OpenAPI::fromJsonValue(m_anomaly_group_id, json[QString("AnomalyGroupId")]);
    m_anomaly_group_id_isSet = !json[QString("AnomalyGroupId")].isNull() && m_anomaly_group_id_isValid;

    m_anomaly_group_score_isValid = ::OpenAPI::fromJsonValue(m_anomaly_group_score, json[QString("AnomalyGroupScore")]);
    m_anomaly_group_score_isSet = !json[QString("AnomalyGroupScore")].isNull() && m_anomaly_group_score_isValid;

    m_primary_metric_name_isValid = ::OpenAPI::fromJsonValue(m_primary_metric_name, json[QString("PrimaryMetricName")]);
    m_primary_metric_name_isSet = !json[QString("PrimaryMetricName")].isNull() && m_primary_metric_name_isValid;

    m_metric_level_impact_list_isValid = ::OpenAPI::fromJsonValue(m_metric_level_impact_list, json[QString("MetricLevelImpactList")]);
    m_metric_level_impact_list_isSet = !json[QString("MetricLevelImpactList")].isNull() && m_metric_level_impact_list_isValid;
}

QString OAIGetAnomalyGroupResponse_AnomalyGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetAnomalyGroupResponse_AnomalyGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_start_time_isSet) {
        obj.insert(QString("StartTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("EndTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_anomaly_group_id_isSet) {
        obj.insert(QString("AnomalyGroupId"), ::OpenAPI::toJsonValue(m_anomaly_group_id));
    }
    if (m_anomaly_group_score_isSet) {
        obj.insert(QString("AnomalyGroupScore"), ::OpenAPI::toJsonValue(m_anomaly_group_score));
    }
    if (m_primary_metric_name_isSet) {
        obj.insert(QString("PrimaryMetricName"), ::OpenAPI::toJsonValue(m_primary_metric_name));
    }
    if (m_metric_level_impact_list.isSet()) {
        obj.insert(QString("MetricLevelImpactList"), ::OpenAPI::toJsonValue(m_metric_level_impact_list));
    }
    return obj;
}

QString OAIGetAnomalyGroupResponse_AnomalyGroup::getStartTime() const {
    return m_start_time;
}
void OAIGetAnomalyGroupResponse_AnomalyGroup::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGetAnomalyGroupResponse_AnomalyGroup::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGetAnomalyGroupResponse_AnomalyGroup::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIGetAnomalyGroupResponse_AnomalyGroup::getEndTime() const {
    return m_end_time;
}
void OAIGetAnomalyGroupResponse_AnomalyGroup::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGetAnomalyGroupResponse_AnomalyGroup::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGetAnomalyGroupResponse_AnomalyGroup::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIGetAnomalyGroupResponse_AnomalyGroup::getAnomalyGroupId() const {
    return m_anomaly_group_id;
}
void OAIGetAnomalyGroupResponse_AnomalyGroup::setAnomalyGroupId(const QString &anomaly_group_id) {
    m_anomaly_group_id = anomaly_group_id;
    m_anomaly_group_id_isSet = true;
}

bool OAIGetAnomalyGroupResponse_AnomalyGroup::is_anomaly_group_id_Set() const{
    return m_anomaly_group_id_isSet;
}

bool OAIGetAnomalyGroupResponse_AnomalyGroup::is_anomaly_group_id_Valid() const{
    return m_anomaly_group_id_isValid;
}

double OAIGetAnomalyGroupResponse_AnomalyGroup::getAnomalyGroupScore() const {
    return m_anomaly_group_score;
}
void OAIGetAnomalyGroupResponse_AnomalyGroup::setAnomalyGroupScore(const double &anomaly_group_score) {
    m_anomaly_group_score = anomaly_group_score;
    m_anomaly_group_score_isSet = true;
}

bool OAIGetAnomalyGroupResponse_AnomalyGroup::is_anomaly_group_score_Set() const{
    return m_anomaly_group_score_isSet;
}

bool OAIGetAnomalyGroupResponse_AnomalyGroup::is_anomaly_group_score_Valid() const{
    return m_anomaly_group_score_isValid;
}

QString OAIGetAnomalyGroupResponse_AnomalyGroup::getPrimaryMetricName() const {
    return m_primary_metric_name;
}
void OAIGetAnomalyGroupResponse_AnomalyGroup::setPrimaryMetricName(const QString &primary_metric_name) {
    m_primary_metric_name = primary_metric_name;
    m_primary_metric_name_isSet = true;
}

bool OAIGetAnomalyGroupResponse_AnomalyGroup::is_primary_metric_name_Set() const{
    return m_primary_metric_name_isSet;
}

bool OAIGetAnomalyGroupResponse_AnomalyGroup::is_primary_metric_name_Valid() const{
    return m_primary_metric_name_isValid;
}

QList OAIGetAnomalyGroupResponse_AnomalyGroup::getMetricLevelImpactList() const {
    return m_metric_level_impact_list;
}
void OAIGetAnomalyGroupResponse_AnomalyGroup::setMetricLevelImpactList(const QList &metric_level_impact_list) {
    m_metric_level_impact_list = metric_level_impact_list;
    m_metric_level_impact_list_isSet = true;
}

bool OAIGetAnomalyGroupResponse_AnomalyGroup::is_metric_level_impact_list_Set() const{
    return m_metric_level_impact_list_isSet;
}

bool OAIGetAnomalyGroupResponse_AnomalyGroup::is_metric_level_impact_list_Valid() const{
    return m_metric_level_impact_list_isValid;
}

bool OAIGetAnomalyGroupResponse_AnomalyGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_anomaly_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_anomaly_group_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_metric_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_level_impact_list.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetAnomalyGroupResponse_AnomalyGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
