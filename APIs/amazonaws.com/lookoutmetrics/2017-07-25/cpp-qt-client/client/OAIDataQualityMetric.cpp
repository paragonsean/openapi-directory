/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataQualityMetric.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataQualityMetric::OAIDataQualityMetric(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataQualityMetric::OAIDataQualityMetric() {
    this->initializeModel();
}

OAIDataQualityMetric::~OAIDataQualityMetric() {}

void OAIDataQualityMetric::initializeModel() {

    m_metric_type_isSet = false;
    m_metric_type_isValid = false;

    m_metric_description_isSet = false;
    m_metric_description_isValid = false;

    m_related_column_name_isSet = false;
    m_related_column_name_isValid = false;

    m_metric_value_isSet = false;
    m_metric_value_isValid = false;
}

void OAIDataQualityMetric::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataQualityMetric::fromJsonObject(QJsonObject json) {

    m_metric_type_isValid = ::OpenAPI::fromJsonValue(m_metric_type, json[QString("MetricType")]);
    m_metric_type_isSet = !json[QString("MetricType")].isNull() && m_metric_type_isValid;

    m_metric_description_isValid = ::OpenAPI::fromJsonValue(m_metric_description, json[QString("MetricDescription")]);
    m_metric_description_isSet = !json[QString("MetricDescription")].isNull() && m_metric_description_isValid;

    m_related_column_name_isValid = ::OpenAPI::fromJsonValue(m_related_column_name, json[QString("RelatedColumnName")]);
    m_related_column_name_isSet = !json[QString("RelatedColumnName")].isNull() && m_related_column_name_isValid;

    m_metric_value_isValid = ::OpenAPI::fromJsonValue(m_metric_value, json[QString("MetricValue")]);
    m_metric_value_isSet = !json[QString("MetricValue")].isNull() && m_metric_value_isValid;
}

QString OAIDataQualityMetric::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataQualityMetric::asJsonObject() const {
    QJsonObject obj;
    if (m_metric_type.isSet()) {
        obj.insert(QString("MetricType"), ::OpenAPI::toJsonValue(m_metric_type));
    }
    if (m_metric_description_isSet) {
        obj.insert(QString("MetricDescription"), ::OpenAPI::toJsonValue(m_metric_description));
    }
    if (m_related_column_name_isSet) {
        obj.insert(QString("RelatedColumnName"), ::OpenAPI::toJsonValue(m_related_column_name));
    }
    if (m_metric_value_isSet) {
        obj.insert(QString("MetricValue"), ::OpenAPI::toJsonValue(m_metric_value));
    }
    return obj;
}

OAIDataQualityMetricType OAIDataQualityMetric::getMetricType() const {
    return m_metric_type;
}
void OAIDataQualityMetric::setMetricType(const OAIDataQualityMetricType &metric_type) {
    m_metric_type = metric_type;
    m_metric_type_isSet = true;
}

bool OAIDataQualityMetric::is_metric_type_Set() const{
    return m_metric_type_isSet;
}

bool OAIDataQualityMetric::is_metric_type_Valid() const{
    return m_metric_type_isValid;
}

QString OAIDataQualityMetric::getMetricDescription() const {
    return m_metric_description;
}
void OAIDataQualityMetric::setMetricDescription(const QString &metric_description) {
    m_metric_description = metric_description;
    m_metric_description_isSet = true;
}

bool OAIDataQualityMetric::is_metric_description_Set() const{
    return m_metric_description_isSet;
}

bool OAIDataQualityMetric::is_metric_description_Valid() const{
    return m_metric_description_isValid;
}

QString OAIDataQualityMetric::getRelatedColumnName() const {
    return m_related_column_name;
}
void OAIDataQualityMetric::setRelatedColumnName(const QString &related_column_name) {
    m_related_column_name = related_column_name;
    m_related_column_name_isSet = true;
}

bool OAIDataQualityMetric::is_related_column_name_Set() const{
    return m_related_column_name_isSet;
}

bool OAIDataQualityMetric::is_related_column_name_Valid() const{
    return m_related_column_name_isValid;
}

double OAIDataQualityMetric::getMetricValue() const {
    return m_metric_value;
}
void OAIDataQualityMetric::setMetricValue(const double &metric_value) {
    m_metric_value = metric_value;
    m_metric_value_isSet = true;
}

bool OAIDataQualityMetric::is_metric_value_Set() const{
    return m_metric_value_isSet;
}

bool OAIDataQualityMetric::is_metric_value_Valid() const{
    return m_metric_value_isValid;
}

bool OAIDataQualityMetric::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metric_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_related_column_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataQualityMetric::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
