/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateMetricSetRequest.h
 *
 * 
 */

#ifndef OAIUpdateMetricSetRequest_H
#define OAIUpdateMetricSetRequest_H

#include <QJsonObject>

#include "OAIFrequency.h"
#include "OAIMetricSource.h"
#include "OAIUpdateMetricSetRequest_TimestampColumn.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateMetricSetRequest_TimestampColumn;
class OAIMetricSource;

class OAIUpdateMetricSetRequest : public OAIObject {
public:
    OAIUpdateMetricSetRequest();
    OAIUpdateMetricSetRequest(QString json);
    ~OAIUpdateMetricSetRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMetricSetArn() const;
    void setMetricSetArn(const QString &metric_set_arn);
    bool is_metric_set_arn_Set() const;
    bool is_metric_set_arn_Valid() const;

    QString getMetricSetDescription() const;
    void setMetricSetDescription(const QString &metric_set_description);
    bool is_metric_set_description_Set() const;
    bool is_metric_set_description_Valid() const;

    QList getMetricList() const;
    void setMetricList(const QList &metric_list);
    bool is_metric_list_Set() const;
    bool is_metric_list_Valid() const;

    qint32 getOffset() const;
    void setOffset(const qint32 &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    OAIUpdateMetricSetRequest_TimestampColumn getTimestampColumn() const;
    void setTimestampColumn(const OAIUpdateMetricSetRequest_TimestampColumn &timestamp_column);
    bool is_timestamp_column_Set() const;
    bool is_timestamp_column_Valid() const;

    QList getDimensionList() const;
    void setDimensionList(const QList &dimension_list);
    bool is_dimension_list_Set() const;
    bool is_dimension_list_Valid() const;

    OAIFrequency getMetricSetFrequency() const;
    void setMetricSetFrequency(const OAIFrequency &metric_set_frequency);
    bool is_metric_set_frequency_Set() const;
    bool is_metric_set_frequency_Valid() const;

    OAIMetricSource getMetricSource() const;
    void setMetricSource(const OAIMetricSource &metric_source);
    bool is_metric_source_Set() const;
    bool is_metric_source_Valid() const;

    QList getDimensionFilterList() const;
    void setDimensionFilterList(const QList &dimension_filter_list);
    bool is_dimension_filter_list_Set() const;
    bool is_dimension_filter_list_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_metric_set_arn;
    bool m_metric_set_arn_isSet;
    bool m_metric_set_arn_isValid;

    QString m_metric_set_description;
    bool m_metric_set_description_isSet;
    bool m_metric_set_description_isValid;

    QList m_metric_list;
    bool m_metric_list_isSet;
    bool m_metric_list_isValid;

    qint32 m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;

    OAIUpdateMetricSetRequest_TimestampColumn m_timestamp_column;
    bool m_timestamp_column_isSet;
    bool m_timestamp_column_isValid;

    QList m_dimension_list;
    bool m_dimension_list_isSet;
    bool m_dimension_list_isValid;

    OAIFrequency m_metric_set_frequency;
    bool m_metric_set_frequency_isSet;
    bool m_metric_set_frequency_isValid;

    OAIMetricSource m_metric_source;
    bool m_metric_source_isSet;
    bool m_metric_source_isValid;

    QList m_dimension_filter_list;
    bool m_dimension_filter_list_isSet;
    bool m_dimension_filter_list_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateMetricSetRequest)

#endif // OAIUpdateMetricSetRequest_H
