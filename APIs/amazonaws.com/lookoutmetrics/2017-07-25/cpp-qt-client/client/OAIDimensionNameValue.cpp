/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDimensionNameValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDimensionNameValue::OAIDimensionNameValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDimensionNameValue::OAIDimensionNameValue() {
    this->initializeModel();
}

OAIDimensionNameValue::~OAIDimensionNameValue() {}

void OAIDimensionNameValue::initializeModel() {

    m_dimension_name_isSet = false;
    m_dimension_name_isValid = false;

    m_dimension_value_isSet = false;
    m_dimension_value_isValid = false;
}

void OAIDimensionNameValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDimensionNameValue::fromJsonObject(QJsonObject json) {

    m_dimension_name_isValid = ::OpenAPI::fromJsonValue(m_dimension_name, json[QString("DimensionName")]);
    m_dimension_name_isSet = !json[QString("DimensionName")].isNull() && m_dimension_name_isValid;

    m_dimension_value_isValid = ::OpenAPI::fromJsonValue(m_dimension_value, json[QString("DimensionValue")]);
    m_dimension_value_isSet = !json[QString("DimensionValue")].isNull() && m_dimension_value_isValid;
}

QString OAIDimensionNameValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDimensionNameValue::asJsonObject() const {
    QJsonObject obj;
    if (m_dimension_name_isSet) {
        obj.insert(QString("DimensionName"), ::OpenAPI::toJsonValue(m_dimension_name));
    }
    if (m_dimension_value_isSet) {
        obj.insert(QString("DimensionValue"), ::OpenAPI::toJsonValue(m_dimension_value));
    }
    return obj;
}

QString OAIDimensionNameValue::getDimensionName() const {
    return m_dimension_name;
}
void OAIDimensionNameValue::setDimensionName(const QString &dimension_name) {
    m_dimension_name = dimension_name;
    m_dimension_name_isSet = true;
}

bool OAIDimensionNameValue::is_dimension_name_Set() const{
    return m_dimension_name_isSet;
}

bool OAIDimensionNameValue::is_dimension_name_Valid() const{
    return m_dimension_name_isValid;
}

QString OAIDimensionNameValue::getDimensionValue() const {
    return m_dimension_value;
}
void OAIDimensionNameValue::setDimensionValue(const QString &dimension_value) {
    m_dimension_value = dimension_value;
    m_dimension_value_isSet = true;
}

bool OAIDimensionNameValue::is_dimension_value_Set() const{
    return m_dimension_value_isSet;
}

bool OAIDimensionNameValue::is_dimension_value_Valid() const{
    return m_dimension_value_isValid;
}

bool OAIDimensionNameValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dimension_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimension_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDimensionNameValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_dimension_name_isValid && m_dimension_value_isValid && true;
}

} // namespace OpenAPI
