/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDetectedMetricSetConfig.h
 *
 * An inferred dataset configuration.
 */

#ifndef OAIDetectedMetricSetConfig_H
#define OAIDetectedMetricSetConfig_H

#include <QJsonObject>

#include "OAIDetectedMetricSetConfig_MetricSetFrequency.h"
#include "OAIDetectedMetricSetConfig_MetricSource.h"
#include "OAIDetectedMetricSetConfig_Offset.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDetectedMetricSetConfig_Offset;
class OAIDetectedMetricSetConfig_MetricSetFrequency;
class OAIDetectedMetricSetConfig_MetricSource;

class OAIDetectedMetricSetConfig : public OAIObject {
public:
    OAIDetectedMetricSetConfig();
    OAIDetectedMetricSetConfig(QString json);
    ~OAIDetectedMetricSetConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDetectedMetricSetConfig_Offset getOffset() const;
    void setOffset(const OAIDetectedMetricSetConfig_Offset &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    OAIDetectedMetricSetConfig_MetricSetFrequency getMetricSetFrequency() const;
    void setMetricSetFrequency(const OAIDetectedMetricSetConfig_MetricSetFrequency &metric_set_frequency);
    bool is_metric_set_frequency_Set() const;
    bool is_metric_set_frequency_Valid() const;

    OAIDetectedMetricSetConfig_MetricSource getMetricSource() const;
    void setMetricSource(const OAIDetectedMetricSetConfig_MetricSource &metric_source);
    bool is_metric_source_Set() const;
    bool is_metric_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDetectedMetricSetConfig_Offset m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;

    OAIDetectedMetricSetConfig_MetricSetFrequency m_metric_set_frequency;
    bool m_metric_set_frequency_isSet;
    bool m_metric_set_frequency_isValid;

    OAIDetectedMetricSetConfig_MetricSource m_metric_source;
    bool m_metric_source_isSet;
    bool m_metric_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDetectedMetricSetConfig)

#endif // OAIDetectedMetricSetConfig_H
