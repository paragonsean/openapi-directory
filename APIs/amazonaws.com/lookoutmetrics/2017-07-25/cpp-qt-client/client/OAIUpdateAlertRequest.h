/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateAlertRequest.h
 *
 * 
 */

#ifndef OAIUpdateAlertRequest_H
#define OAIUpdateAlertRequest_H

#include <QJsonObject>

#include "OAIAlert_Action.h"
#include "OAICreateAlertRequest_AlertFilters.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAlert_Action;
class OAICreateAlertRequest_AlertFilters;

class OAIUpdateAlertRequest : public OAIObject {
public:
    OAIUpdateAlertRequest();
    OAIUpdateAlertRequest(QString json);
    ~OAIUpdateAlertRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlertArn() const;
    void setAlertArn(const QString &alert_arn);
    bool is_alert_arn_Set() const;
    bool is_alert_arn_Valid() const;

    QString getAlertDescription() const;
    void setAlertDescription(const QString &alert_description);
    bool is_alert_description_Set() const;
    bool is_alert_description_Valid() const;

    qint32 getAlertSensitivityThreshold() const;
    void setAlertSensitivityThreshold(const qint32 &alert_sensitivity_threshold);
    bool is_alert_sensitivity_threshold_Set() const;
    bool is_alert_sensitivity_threshold_Valid() const;

    OAIAlert_Action getAction() const;
    void setAction(const OAIAlert_Action &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    OAICreateAlertRequest_AlertFilters getAlertFilters() const;
    void setAlertFilters(const OAICreateAlertRequest_AlertFilters &alert_filters);
    bool is_alert_filters_Set() const;
    bool is_alert_filters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alert_arn;
    bool m_alert_arn_isSet;
    bool m_alert_arn_isValid;

    QString m_alert_description;
    bool m_alert_description_isSet;
    bool m_alert_description_isValid;

    qint32 m_alert_sensitivity_threshold;
    bool m_alert_sensitivity_threshold_isSet;
    bool m_alert_sensitivity_threshold_isValid;

    OAIAlert_Action m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    OAICreateAlertRequest_AlertFilters m_alert_filters;
    bool m_alert_filters_isSet;
    bool m_alert_filters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateAlertRequest)

#endif // OAIUpdateAlertRequest_H
