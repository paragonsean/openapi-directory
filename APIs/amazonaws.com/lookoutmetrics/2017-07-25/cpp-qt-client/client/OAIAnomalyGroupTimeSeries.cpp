/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAnomalyGroupTimeSeries.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAnomalyGroupTimeSeries::OAIAnomalyGroupTimeSeries(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAnomalyGroupTimeSeries::OAIAnomalyGroupTimeSeries() {
    this->initializeModel();
}

OAIAnomalyGroupTimeSeries::~OAIAnomalyGroupTimeSeries() {}

void OAIAnomalyGroupTimeSeries::initializeModel() {

    m_anomaly_group_id_isSet = false;
    m_anomaly_group_id_isValid = false;

    m_time_series_id_isSet = false;
    m_time_series_id_isValid = false;
}

void OAIAnomalyGroupTimeSeries::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAnomalyGroupTimeSeries::fromJsonObject(QJsonObject json) {

    m_anomaly_group_id_isValid = ::OpenAPI::fromJsonValue(m_anomaly_group_id, json[QString("AnomalyGroupId")]);
    m_anomaly_group_id_isSet = !json[QString("AnomalyGroupId")].isNull() && m_anomaly_group_id_isValid;

    m_time_series_id_isValid = ::OpenAPI::fromJsonValue(m_time_series_id, json[QString("TimeSeriesId")]);
    m_time_series_id_isSet = !json[QString("TimeSeriesId")].isNull() && m_time_series_id_isValid;
}

QString OAIAnomalyGroupTimeSeries::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAnomalyGroupTimeSeries::asJsonObject() const {
    QJsonObject obj;
    if (m_anomaly_group_id_isSet) {
        obj.insert(QString("AnomalyGroupId"), ::OpenAPI::toJsonValue(m_anomaly_group_id));
    }
    if (m_time_series_id_isSet) {
        obj.insert(QString("TimeSeriesId"), ::OpenAPI::toJsonValue(m_time_series_id));
    }
    return obj;
}

QString OAIAnomalyGroupTimeSeries::getAnomalyGroupId() const {
    return m_anomaly_group_id;
}
void OAIAnomalyGroupTimeSeries::setAnomalyGroupId(const QString &anomaly_group_id) {
    m_anomaly_group_id = anomaly_group_id;
    m_anomaly_group_id_isSet = true;
}

bool OAIAnomalyGroupTimeSeries::is_anomaly_group_id_Set() const{
    return m_anomaly_group_id_isSet;
}

bool OAIAnomalyGroupTimeSeries::is_anomaly_group_id_Valid() const{
    return m_anomaly_group_id_isValid;
}

QString OAIAnomalyGroupTimeSeries::getTimeSeriesId() const {
    return m_time_series_id;
}
void OAIAnomalyGroupTimeSeries::setTimeSeriesId(const QString &time_series_id) {
    m_time_series_id = time_series_id;
    m_time_series_id_isSet = true;
}

bool OAIAnomalyGroupTimeSeries::is_time_series_id_Set() const{
    return m_time_series_id_isSet;
}

bool OAIAnomalyGroupTimeSeries::is_time_series_id_Valid() const{
    return m_time_series_id_isValid;
}

bool OAIAnomalyGroupTimeSeries::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_anomaly_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_series_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAnomalyGroupTimeSeries::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_anomaly_group_id_isValid && true;
}

} // namespace OpenAPI
