/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAnomalyDetector_request_AnomalyDetectorConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAnomalyDetector_request_AnomalyDetectorConfig::OAICreateAnomalyDetector_request_AnomalyDetectorConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAnomalyDetector_request_AnomalyDetectorConfig::OAICreateAnomalyDetector_request_AnomalyDetectorConfig() {
    this->initializeModel();
}

OAICreateAnomalyDetector_request_AnomalyDetectorConfig::~OAICreateAnomalyDetector_request_AnomalyDetectorConfig() {}

void OAICreateAnomalyDetector_request_AnomalyDetectorConfig::initializeModel() {

    m_anomaly_detector_frequency_isSet = false;
    m_anomaly_detector_frequency_isValid = false;
}

void OAICreateAnomalyDetector_request_AnomalyDetectorConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAnomalyDetector_request_AnomalyDetectorConfig::fromJsonObject(QJsonObject json) {

    m_anomaly_detector_frequency_isValid = ::OpenAPI::fromJsonValue(m_anomaly_detector_frequency, json[QString("AnomalyDetectorFrequency")]);
    m_anomaly_detector_frequency_isSet = !json[QString("AnomalyDetectorFrequency")].isNull() && m_anomaly_detector_frequency_isValid;
}

QString OAICreateAnomalyDetector_request_AnomalyDetectorConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAnomalyDetector_request_AnomalyDetectorConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_anomaly_detector_frequency.isSet()) {
        obj.insert(QString("AnomalyDetectorFrequency"), ::OpenAPI::toJsonValue(m_anomaly_detector_frequency));
    }
    return obj;
}

OAIFrequency OAICreateAnomalyDetector_request_AnomalyDetectorConfig::getAnomalyDetectorFrequency() const {
    return m_anomaly_detector_frequency;
}
void OAICreateAnomalyDetector_request_AnomalyDetectorConfig::setAnomalyDetectorFrequency(const OAIFrequency &anomaly_detector_frequency) {
    m_anomaly_detector_frequency = anomaly_detector_frequency;
    m_anomaly_detector_frequency_isSet = true;
}

bool OAICreateAnomalyDetector_request_AnomalyDetectorConfig::is_anomaly_detector_frequency_Set() const{
    return m_anomaly_detector_frequency_isSet;
}

bool OAICreateAnomalyDetector_request_AnomalyDetectorConfig::is_anomaly_detector_frequency_Valid() const{
    return m_anomaly_detector_frequency_isValid;
}

bool OAICreateAnomalyDetector_request_AnomalyDetectorConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_anomaly_detector_frequency.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAnomalyDetector_request_AnomalyDetectorConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
