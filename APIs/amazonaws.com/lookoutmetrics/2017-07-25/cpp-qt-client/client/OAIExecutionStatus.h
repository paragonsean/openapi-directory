/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExecutionStatus.h
 *
 * The status of an anomaly detector run.
 */

#ifndef OAIExecutionStatus_H
#define OAIExecutionStatus_H

#include <QJsonObject>

#include "OAIAnomalyDetectionTaskStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExecutionStatus : public OAIObject {
public:
    OAIExecutionStatus();
    OAIExecutionStatus(QString json);
    ~OAIExecutionStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTimestamp() const;
    void setTimestamp(const QString &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    OAIAnomalyDetectionTaskStatus getStatus() const;
    void setStatus(const OAIAnomalyDetectionTaskStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getFailureReason() const;
    void setFailureReason(const QString &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    OAIAnomalyDetectionTaskStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExecutionStatus)

#endif // OAIExecutionStatus_H
