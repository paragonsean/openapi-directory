/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetric.h
 *
 * A calculation made by contrasting a measure and a dimension from your source data.
 */

#ifndef OAIMetric_H
#define OAIMetric_H

#include <QJsonObject>

#include "OAIAggregationFunction.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMetric : public OAIObject {
public:
    OAIMetric();
    OAIMetric(QString json);
    ~OAIMetric() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMetricName() const;
    void setMetricName(const QString &metric_name);
    bool is_metric_name_Set() const;
    bool is_metric_name_Valid() const;

    OAIAggregationFunction getAggregationFunction() const;
    void setAggregationFunction(const OAIAggregationFunction &aggregation_function);
    bool is_aggregation_function_Set() const;
    bool is_aggregation_function_Valid() const;

    QString getRNamespace() const;
    void setRNamespace(const QString &r_namespace);
    bool is_r_namespace_Set() const;
    bool is_r_namespace_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_metric_name;
    bool m_metric_name_isSet;
    bool m_metric_name_isValid;

    OAIAggregationFunction m_aggregation_function;
    bool m_aggregation_function_isSet;
    bool m_aggregation_function_isValid;

    QString m_r_namespace;
    bool m_r_namespace_isSet;
    bool m_r_namespace_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetric)

#endif // OAIMetric_H
