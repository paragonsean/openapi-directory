/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateAnomalyDetector_request.h
 *
 * 
 */

#ifndef OAICreateAnomalyDetector_request_H
#define OAICreateAnomalyDetector_request_H

#include <QJsonObject>

#include "OAICreateAnomalyDetector_request_AnomalyDetectorConfig.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateAnomalyDetector_request_AnomalyDetectorConfig;

class OAICreateAnomalyDetector_request : public OAIObject {
public:
    OAICreateAnomalyDetector_request();
    OAICreateAnomalyDetector_request(QString json);
    ~OAICreateAnomalyDetector_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnomalyDetectorName() const;
    void setAnomalyDetectorName(const QString &anomaly_detector_name);
    bool is_anomaly_detector_name_Set() const;
    bool is_anomaly_detector_name_Valid() const;

    QString getAnomalyDetectorDescription() const;
    void setAnomalyDetectorDescription(const QString &anomaly_detector_description);
    bool is_anomaly_detector_description_Set() const;
    bool is_anomaly_detector_description_Valid() const;

    OAICreateAnomalyDetector_request_AnomalyDetectorConfig getAnomalyDetectorConfig() const;
    void setAnomalyDetectorConfig(const OAICreateAnomalyDetector_request_AnomalyDetectorConfig &anomaly_detector_config);
    bool is_anomaly_detector_config_Set() const;
    bool is_anomaly_detector_config_Valid() const;

    QString getKmsKeyArn() const;
    void setKmsKeyArn(const QString &kms_key_arn);
    bool is_kms_key_arn_Set() const;
    bool is_kms_key_arn_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_anomaly_detector_name;
    bool m_anomaly_detector_name_isSet;
    bool m_anomaly_detector_name_isValid;

    QString m_anomaly_detector_description;
    bool m_anomaly_detector_description_isSet;
    bool m_anomaly_detector_description_isValid;

    OAICreateAnomalyDetector_request_AnomalyDetectorConfig m_anomaly_detector_config;
    bool m_anomaly_detector_config_isSet;
    bool m_anomaly_detector_config_isValid;

    QString m_kms_key_arn;
    bool m_kms_key_arn_isSet;
    bool m_kms_key_arn_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateAnomalyDetector_request)

#endif // OAICreateAnomalyDetector_request_H
