/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAlert_request_Action.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAlert_request_Action::OAICreateAlert_request_Action(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAlert_request_Action::OAICreateAlert_request_Action() {
    this->initializeModel();
}

OAICreateAlert_request_Action::~OAICreateAlert_request_Action() {}

void OAICreateAlert_request_Action::initializeModel() {

    m_sns_configuration_isSet = false;
    m_sns_configuration_isValid = false;

    m_lambda_configuration_isSet = false;
    m_lambda_configuration_isValid = false;
}

void OAICreateAlert_request_Action::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAlert_request_Action::fromJsonObject(QJsonObject json) {

    m_sns_configuration_isValid = ::OpenAPI::fromJsonValue(m_sns_configuration, json[QString("SNSConfiguration")]);
    m_sns_configuration_isSet = !json[QString("SNSConfiguration")].isNull() && m_sns_configuration_isValid;

    m_lambda_configuration_isValid = ::OpenAPI::fromJsonValue(m_lambda_configuration, json[QString("LambdaConfiguration")]);
    m_lambda_configuration_isSet = !json[QString("LambdaConfiguration")].isNull() && m_lambda_configuration_isValid;
}

QString OAICreateAlert_request_Action::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAlert_request_Action::asJsonObject() const {
    QJsonObject obj;
    if (m_sns_configuration.isSet()) {
        obj.insert(QString("SNSConfiguration"), ::OpenAPI::toJsonValue(m_sns_configuration));
    }
    if (m_lambda_configuration.isSet()) {
        obj.insert(QString("LambdaConfiguration"), ::OpenAPI::toJsonValue(m_lambda_configuration));
    }
    return obj;
}

OAICreateAlert_request_Action_SNSConfiguration OAICreateAlert_request_Action::getSnsConfiguration() const {
    return m_sns_configuration;
}
void OAICreateAlert_request_Action::setSnsConfiguration(const OAICreateAlert_request_Action_SNSConfiguration &sns_configuration) {
    m_sns_configuration = sns_configuration;
    m_sns_configuration_isSet = true;
}

bool OAICreateAlert_request_Action::is_sns_configuration_Set() const{
    return m_sns_configuration_isSet;
}

bool OAICreateAlert_request_Action::is_sns_configuration_Valid() const{
    return m_sns_configuration_isValid;
}

OAICreateAlert_request_Action_LambdaConfiguration OAICreateAlert_request_Action::getLambdaConfiguration() const {
    return m_lambda_configuration;
}
void OAICreateAlert_request_Action::setLambdaConfiguration(const OAICreateAlert_request_Action_LambdaConfiguration &lambda_configuration) {
    m_lambda_configuration = lambda_configuration;
    m_lambda_configuration_isSet = true;
}

bool OAICreateAlert_request_Action::is_lambda_configuration_Set() const{
    return m_lambda_configuration_isSet;
}

bool OAICreateAlert_request_Action::is_lambda_configuration_Valid() const{
    return m_lambda_configuration_isValid;
}

bool OAICreateAlert_request_Action::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sns_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lambda_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAlert_request_Action::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
