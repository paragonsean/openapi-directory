/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeAlertResponse_Alert.h
 *
 * 
 */

#ifndef OAIDescribeAlertResponse_Alert_H
#define OAIDescribeAlertResponse_Alert_H

#include <QJsonObject>

#include "OAIAlertStatus.h"
#include "OAIAlertType.h"
#include "OAIAlert_Action.h"
#include "OAIAlert_AlertFilters.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAlert_Action;
class OAIAlert_AlertFilters;

class OAIDescribeAlertResponse_Alert : public OAIObject {
public:
    OAIDescribeAlertResponse_Alert();
    OAIDescribeAlertResponse_Alert(QString json);
    ~OAIDescribeAlertResponse_Alert() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAlert_Action getAction() const;
    void setAction(const OAIAlert_Action &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QString getAlertDescription() const;
    void setAlertDescription(const QString &alert_description);
    bool is_alert_description_Set() const;
    bool is_alert_description_Valid() const;

    QString getAlertArn() const;
    void setAlertArn(const QString &alert_arn);
    bool is_alert_arn_Set() const;
    bool is_alert_arn_Valid() const;

    QString getAnomalyDetectorArn() const;
    void setAnomalyDetectorArn(const QString &anomaly_detector_arn);
    bool is_anomaly_detector_arn_Set() const;
    bool is_anomaly_detector_arn_Valid() const;

    QString getAlertName() const;
    void setAlertName(const QString &alert_name);
    bool is_alert_name_Set() const;
    bool is_alert_name_Valid() const;

    qint32 getAlertSensitivityThreshold() const;
    void setAlertSensitivityThreshold(const qint32 &alert_sensitivity_threshold);
    bool is_alert_sensitivity_threshold_Set() const;
    bool is_alert_sensitivity_threshold_Valid() const;

    OAIAlertType getAlertType() const;
    void setAlertType(const OAIAlertType &alert_type);
    bool is_alert_type_Set() const;
    bool is_alert_type_Valid() const;

    OAIAlertStatus getAlertStatus() const;
    void setAlertStatus(const OAIAlertStatus &alert_status);
    bool is_alert_status_Set() const;
    bool is_alert_status_Valid() const;

    QDateTime getLastModificationTime() const;
    void setLastModificationTime(const QDateTime &last_modification_time);
    bool is_last_modification_time_Set() const;
    bool is_last_modification_time_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    OAIAlert_AlertFilters getAlertFilters() const;
    void setAlertFilters(const OAIAlert_AlertFilters &alert_filters);
    bool is_alert_filters_Set() const;
    bool is_alert_filters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAlert_Action m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QString m_alert_description;
    bool m_alert_description_isSet;
    bool m_alert_description_isValid;

    QString m_alert_arn;
    bool m_alert_arn_isSet;
    bool m_alert_arn_isValid;

    QString m_anomaly_detector_arn;
    bool m_anomaly_detector_arn_isSet;
    bool m_anomaly_detector_arn_isValid;

    QString m_alert_name;
    bool m_alert_name_isSet;
    bool m_alert_name_isValid;

    qint32 m_alert_sensitivity_threshold;
    bool m_alert_sensitivity_threshold_isSet;
    bool m_alert_sensitivity_threshold_isValid;

    OAIAlertType m_alert_type;
    bool m_alert_type_isSet;
    bool m_alert_type_isValid;

    OAIAlertStatus m_alert_status;
    bool m_alert_status_isSet;
    bool m_alert_status_isValid;

    QDateTime m_last_modification_time;
    bool m_last_modification_time_isSet;
    bool m_last_modification_time_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    OAIAlert_AlertFilters m_alert_filters;
    bool m_alert_filters_isSet;
    bool m_alert_filters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeAlertResponse_Alert)

#endif // OAIDescribeAlertResponse_Alert_H
