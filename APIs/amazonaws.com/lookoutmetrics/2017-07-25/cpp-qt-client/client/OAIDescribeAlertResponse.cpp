/**
 * Amazon Lookout for Metrics
 * This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAlertResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAlertResponse::OAIDescribeAlertResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAlertResponse::OAIDescribeAlertResponse() {
    this->initializeModel();
}

OAIDescribeAlertResponse::~OAIDescribeAlertResponse() {}

void OAIDescribeAlertResponse::initializeModel() {

    m_alert_isSet = false;
    m_alert_isValid = false;
}

void OAIDescribeAlertResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAlertResponse::fromJsonObject(QJsonObject json) {

    m_alert_isValid = ::OpenAPI::fromJsonValue(m_alert, json[QString("Alert")]);
    m_alert_isSet = !json[QString("Alert")].isNull() && m_alert_isValid;
}

QString OAIDescribeAlertResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAlertResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_alert.isSet()) {
        obj.insert(QString("Alert"), ::OpenAPI::toJsonValue(m_alert));
    }
    return obj;
}

OAIDescribeAlertResponse_Alert OAIDescribeAlertResponse::getAlert() const {
    return m_alert;
}
void OAIDescribeAlertResponse::setAlert(const OAIDescribeAlertResponse_Alert &alert) {
    m_alert = alert;
    m_alert_isSet = true;
}

bool OAIDescribeAlertResponse::is_alert_Set() const{
    return m_alert_isSet;
}

bool OAIDescribeAlertResponse::is_alert_Valid() const{
    return m_alert_isValid;
}

bool OAIDescribeAlertResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alert.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAlertResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
