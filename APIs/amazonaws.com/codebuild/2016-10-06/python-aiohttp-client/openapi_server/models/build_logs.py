# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.logs_location_cloud_watch_logs import LogsLocationCloudWatchLogs
from openapi_server.models.logs_location_s3_logs import LogsLocationS3Logs
from openapi_server import util


class BuildLogs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group_name: str=None, stream_name: str=None, deep_link: str=None, s3_deep_link: str=None, cloud_watch_logs_arn: str=None, s3_logs_arn: str=None, cloud_watch_logs: LogsLocationCloudWatchLogs=None, s3_logs: LogsLocationS3Logs=None):
        """BuildLogs - a model defined in OpenAPI

        :param group_name: The group_name of this BuildLogs.
        :param stream_name: The stream_name of this BuildLogs.
        :param deep_link: The deep_link of this BuildLogs.
        :param s3_deep_link: The s3_deep_link of this BuildLogs.
        :param cloud_watch_logs_arn: The cloud_watch_logs_arn of this BuildLogs.
        :param s3_logs_arn: The s3_logs_arn of this BuildLogs.
        :param cloud_watch_logs: The cloud_watch_logs of this BuildLogs.
        :param s3_logs: The s3_logs of this BuildLogs.
        """
        self.openapi_types = {
            'group_name': str,
            'stream_name': str,
            'deep_link': str,
            's3_deep_link': str,
            'cloud_watch_logs_arn': str,
            's3_logs_arn': str,
            'cloud_watch_logs': LogsLocationCloudWatchLogs,
            's3_logs': LogsLocationS3Logs
        }

        self.attribute_map = {
            'group_name': 'groupName',
            'stream_name': 'streamName',
            'deep_link': 'deepLink',
            's3_deep_link': 's3DeepLink',
            'cloud_watch_logs_arn': 'cloudWatchLogsArn',
            's3_logs_arn': 's3LogsArn',
            'cloud_watch_logs': 'cloudWatchLogs',
            's3_logs': 's3Logs'
        }

        self._group_name = group_name
        self._stream_name = stream_name
        self._deep_link = deep_link
        self._s3_deep_link = s3_deep_link
        self._cloud_watch_logs_arn = cloud_watch_logs_arn
        self._s3_logs_arn = s3_logs_arn
        self._cloud_watch_logs = cloud_watch_logs
        self._s3_logs = s3_logs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuildLogs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Build_logs of this BuildLogs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group_name(self):
        """Gets the group_name of this BuildLogs.


        :return: The group_name of this BuildLogs.
        :rtype: str
        """
        return self._group_name

    @group_name.setter
    def group_name(self, group_name):
        """Sets the group_name of this BuildLogs.


        :param group_name: The group_name of this BuildLogs.
        :type group_name: str
        """

        self._group_name = group_name

    @property
    def stream_name(self):
        """Gets the stream_name of this BuildLogs.


        :return: The stream_name of this BuildLogs.
        :rtype: str
        """
        return self._stream_name

    @stream_name.setter
    def stream_name(self, stream_name):
        """Sets the stream_name of this BuildLogs.


        :param stream_name: The stream_name of this BuildLogs.
        :type stream_name: str
        """

        self._stream_name = stream_name

    @property
    def deep_link(self):
        """Gets the deep_link of this BuildLogs.


        :return: The deep_link of this BuildLogs.
        :rtype: str
        """
        return self._deep_link

    @deep_link.setter
    def deep_link(self, deep_link):
        """Sets the deep_link of this BuildLogs.


        :param deep_link: The deep_link of this BuildLogs.
        :type deep_link: str
        """

        self._deep_link = deep_link

    @property
    def s3_deep_link(self):
        """Gets the s3_deep_link of this BuildLogs.


        :return: The s3_deep_link of this BuildLogs.
        :rtype: str
        """
        return self._s3_deep_link

    @s3_deep_link.setter
    def s3_deep_link(self, s3_deep_link):
        """Sets the s3_deep_link of this BuildLogs.


        :param s3_deep_link: The s3_deep_link of this BuildLogs.
        :type s3_deep_link: str
        """

        self._s3_deep_link = s3_deep_link

    @property
    def cloud_watch_logs_arn(self):
        """Gets the cloud_watch_logs_arn of this BuildLogs.


        :return: The cloud_watch_logs_arn of this BuildLogs.
        :rtype: str
        """
        return self._cloud_watch_logs_arn

    @cloud_watch_logs_arn.setter
    def cloud_watch_logs_arn(self, cloud_watch_logs_arn):
        """Sets the cloud_watch_logs_arn of this BuildLogs.


        :param cloud_watch_logs_arn: The cloud_watch_logs_arn of this BuildLogs.
        :type cloud_watch_logs_arn: str
        """

        self._cloud_watch_logs_arn = cloud_watch_logs_arn

    @property
    def s3_logs_arn(self):
        """Gets the s3_logs_arn of this BuildLogs.


        :return: The s3_logs_arn of this BuildLogs.
        :rtype: str
        """
        return self._s3_logs_arn

    @s3_logs_arn.setter
    def s3_logs_arn(self, s3_logs_arn):
        """Sets the s3_logs_arn of this BuildLogs.


        :param s3_logs_arn: The s3_logs_arn of this BuildLogs.
        :type s3_logs_arn: str
        """

        self._s3_logs_arn = s3_logs_arn

    @property
    def cloud_watch_logs(self):
        """Gets the cloud_watch_logs of this BuildLogs.


        :return: The cloud_watch_logs of this BuildLogs.
        :rtype: LogsLocationCloudWatchLogs
        """
        return self._cloud_watch_logs

    @cloud_watch_logs.setter
    def cloud_watch_logs(self, cloud_watch_logs):
        """Sets the cloud_watch_logs of this BuildLogs.


        :param cloud_watch_logs: The cloud_watch_logs of this BuildLogs.
        :type cloud_watch_logs: LogsLocationCloudWatchLogs
        """

        self._cloud_watch_logs = cloud_watch_logs

    @property
    def s3_logs(self):
        """Gets the s3_logs of this BuildLogs.


        :return: The s3_logs of this BuildLogs.
        :rtype: LogsLocationS3Logs
        """
        return self._s3_logs

    @s3_logs.setter
    def s3_logs(self, s3_logs):
        """Sets the s3_logs of this BuildLogs.


        :param s3_logs: The s3_logs of this BuildLogs.
        :type s3_logs: LogsLocationS3Logs
        """

        self._s3_logs = s3_logs
