# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DebugSession(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, session_enabled: bool=None, session_target: str=None):
        """DebugSession - a model defined in OpenAPI

        :param session_enabled: The session_enabled of this DebugSession.
        :param session_target: The session_target of this DebugSession.
        """
        self.openapi_types = {
            'session_enabled': bool,
            'session_target': str
        }

        self.attribute_map = {
            'session_enabled': 'sessionEnabled',
            'session_target': 'sessionTarget'
        }

        self._session_enabled = session_enabled
        self._session_target = session_target

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DebugSession':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DebugSession of this DebugSession.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def session_enabled(self):
        """Gets the session_enabled of this DebugSession.


        :return: The session_enabled of this DebugSession.
        :rtype: bool
        """
        return self._session_enabled

    @session_enabled.setter
    def session_enabled(self, session_enabled):
        """Sets the session_enabled of this DebugSession.


        :param session_enabled: The session_enabled of this DebugSession.
        :type session_enabled: bool
        """

        self._session_enabled = session_enabled

    @property
    def session_target(self):
        """Gets the session_target of this DebugSession.


        :return: The session_target of this DebugSession.
        :rtype: str
        """
        return self._session_target

    @session_target.setter
    def session_target(self, session_target):
        """Sets the session_target of this DebugSession.


        :param session_target: The session_target of this DebugSession.
        :type session_target: str
        """

        self._session_target = session_target
