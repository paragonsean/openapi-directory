# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.build_batch import BuildBatch
from openapi_server import util


class RetryBuildBatchOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, build_batch: BuildBatch=None):
        """RetryBuildBatchOutput - a model defined in OpenAPI

        :param build_batch: The build_batch of this RetryBuildBatchOutput.
        """
        self.openapi_types = {
            'build_batch': BuildBatch
        }

        self.attribute_map = {
            'build_batch': 'buildBatch'
        }

        self._build_batch = build_batch

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RetryBuildBatchOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RetryBuildBatchOutput of this RetryBuildBatchOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def build_batch(self):
        """Gets the build_batch of this RetryBuildBatchOutput.


        :return: The build_batch of this RetryBuildBatchOutput.
        :rtype: BuildBatch
        """
        return self._build_batch

    @build_batch.setter
    def build_batch(self, build_batch):
        """Sets the build_batch of this RetryBuildBatchOutput.


        :param build_batch: The build_batch of this RetryBuildBatchOutput.
        :type build_batch: BuildBatch
        """

        self._build_batch = build_batch
