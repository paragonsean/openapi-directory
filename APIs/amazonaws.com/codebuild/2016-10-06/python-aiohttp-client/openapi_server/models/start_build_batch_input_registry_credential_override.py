# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.credential_provider_type import CredentialProviderType
from openapi_server import util


class StartBuildBatchInputRegistryCredentialOverride(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, credential: str=None, credential_provider: CredentialProviderType=None):
        """StartBuildBatchInputRegistryCredentialOverride - a model defined in OpenAPI

        :param credential: The credential of this StartBuildBatchInputRegistryCredentialOverride.
        :param credential_provider: The credential_provider of this StartBuildBatchInputRegistryCredentialOverride.
        """
        self.openapi_types = {
            'credential': str,
            'credential_provider': CredentialProviderType
        }

        self.attribute_map = {
            'credential': 'credential',
            'credential_provider': 'credentialProvider'
        }

        self._credential = credential
        self._credential_provider = credential_provider

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartBuildBatchInputRegistryCredentialOverride':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartBuildBatchInput_registryCredentialOverride of this StartBuildBatchInputRegistryCredentialOverride.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def credential(self):
        """Gets the credential of this StartBuildBatchInputRegistryCredentialOverride.


        :return: The credential of this StartBuildBatchInputRegistryCredentialOverride.
        :rtype: str
        """
        return self._credential

    @credential.setter
    def credential(self, credential):
        """Sets the credential of this StartBuildBatchInputRegistryCredentialOverride.


        :param credential: The credential of this StartBuildBatchInputRegistryCredentialOverride.
        :type credential: str
        """
        if credential is None:
            raise ValueError("Invalid value for `credential`, must not be `None`")

        self._credential = credential

    @property
    def credential_provider(self):
        """Gets the credential_provider of this StartBuildBatchInputRegistryCredentialOverride.


        :return: The credential_provider of this StartBuildBatchInputRegistryCredentialOverride.
        :rtype: CredentialProviderType
        """
        return self._credential_provider

    @credential_provider.setter
    def credential_provider(self, credential_provider):
        """Sets the credential_provider of this StartBuildBatchInputRegistryCredentialOverride.


        :param credential_provider: The credential_provider of this StartBuildBatchInputRegistryCredentialOverride.
        :type credential_provider: CredentialProviderType
        """
        if credential_provider is None:
            raise ValueError("Invalid value for `credential_provider`, must not be `None`")

        self._credential_provider = credential_provider
