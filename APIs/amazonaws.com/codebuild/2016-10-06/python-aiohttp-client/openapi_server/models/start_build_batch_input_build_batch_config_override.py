# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.batch_report_mode_type import BatchReportModeType
from openapi_server.models.project_build_batch_config_restrictions import ProjectBuildBatchConfigRestrictions
from openapi_server import util


class StartBuildBatchInputBuildBatchConfigOverride(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_role: str=None, combine_artifacts: bool=None, restrictions: ProjectBuildBatchConfigRestrictions=None, timeout_in_mins: int=None, batch_report_mode: BatchReportModeType=None):
        """StartBuildBatchInputBuildBatchConfigOverride - a model defined in OpenAPI

        :param service_role: The service_role of this StartBuildBatchInputBuildBatchConfigOverride.
        :param combine_artifacts: The combine_artifacts of this StartBuildBatchInputBuildBatchConfigOverride.
        :param restrictions: The restrictions of this StartBuildBatchInputBuildBatchConfigOverride.
        :param timeout_in_mins: The timeout_in_mins of this StartBuildBatchInputBuildBatchConfigOverride.
        :param batch_report_mode: The batch_report_mode of this StartBuildBatchInputBuildBatchConfigOverride.
        """
        self.openapi_types = {
            'service_role': str,
            'combine_artifacts': bool,
            'restrictions': ProjectBuildBatchConfigRestrictions,
            'timeout_in_mins': int,
            'batch_report_mode': BatchReportModeType
        }

        self.attribute_map = {
            'service_role': 'serviceRole',
            'combine_artifacts': 'combineArtifacts',
            'restrictions': 'restrictions',
            'timeout_in_mins': 'timeoutInMins',
            'batch_report_mode': 'batchReportMode'
        }

        self._service_role = service_role
        self._combine_artifacts = combine_artifacts
        self._restrictions = restrictions
        self._timeout_in_mins = timeout_in_mins
        self._batch_report_mode = batch_report_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartBuildBatchInputBuildBatchConfigOverride':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartBuildBatchInput_buildBatchConfigOverride of this StartBuildBatchInputBuildBatchConfigOverride.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_role(self):
        """Gets the service_role of this StartBuildBatchInputBuildBatchConfigOverride.


        :return: The service_role of this StartBuildBatchInputBuildBatchConfigOverride.
        :rtype: str
        """
        return self._service_role

    @service_role.setter
    def service_role(self, service_role):
        """Sets the service_role of this StartBuildBatchInputBuildBatchConfigOverride.


        :param service_role: The service_role of this StartBuildBatchInputBuildBatchConfigOverride.
        :type service_role: str
        """

        self._service_role = service_role

    @property
    def combine_artifacts(self):
        """Gets the combine_artifacts of this StartBuildBatchInputBuildBatchConfigOverride.


        :return: The combine_artifacts of this StartBuildBatchInputBuildBatchConfigOverride.
        :rtype: bool
        """
        return self._combine_artifacts

    @combine_artifacts.setter
    def combine_artifacts(self, combine_artifacts):
        """Sets the combine_artifacts of this StartBuildBatchInputBuildBatchConfigOverride.


        :param combine_artifacts: The combine_artifacts of this StartBuildBatchInputBuildBatchConfigOverride.
        :type combine_artifacts: bool
        """

        self._combine_artifacts = combine_artifacts

    @property
    def restrictions(self):
        """Gets the restrictions of this StartBuildBatchInputBuildBatchConfigOverride.


        :return: The restrictions of this StartBuildBatchInputBuildBatchConfigOverride.
        :rtype: ProjectBuildBatchConfigRestrictions
        """
        return self._restrictions

    @restrictions.setter
    def restrictions(self, restrictions):
        """Sets the restrictions of this StartBuildBatchInputBuildBatchConfigOverride.


        :param restrictions: The restrictions of this StartBuildBatchInputBuildBatchConfigOverride.
        :type restrictions: ProjectBuildBatchConfigRestrictions
        """

        self._restrictions = restrictions

    @property
    def timeout_in_mins(self):
        """Gets the timeout_in_mins of this StartBuildBatchInputBuildBatchConfigOverride.


        :return: The timeout_in_mins of this StartBuildBatchInputBuildBatchConfigOverride.
        :rtype: int
        """
        return self._timeout_in_mins

    @timeout_in_mins.setter
    def timeout_in_mins(self, timeout_in_mins):
        """Sets the timeout_in_mins of this StartBuildBatchInputBuildBatchConfigOverride.


        :param timeout_in_mins: The timeout_in_mins of this StartBuildBatchInputBuildBatchConfigOverride.
        :type timeout_in_mins: int
        """

        self._timeout_in_mins = timeout_in_mins

    @property
    def batch_report_mode(self):
        """Gets the batch_report_mode of this StartBuildBatchInputBuildBatchConfigOverride.


        :return: The batch_report_mode of this StartBuildBatchInputBuildBatchConfigOverride.
        :rtype: BatchReportModeType
        """
        return self._batch_report_mode

    @batch_report_mode.setter
    def batch_report_mode(self, batch_report_mode):
        """Sets the batch_report_mode of this StartBuildBatchInputBuildBatchConfigOverride.


        :param batch_report_mode: The batch_report_mode of this StartBuildBatchInputBuildBatchConfigOverride.
        :type batch_report_mode: BatchReportModeType
        """

        self._batch_report_mode = batch_report_mode
