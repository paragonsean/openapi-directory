# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.build_batch_phase_type import BuildBatchPhaseType
from openapi_server.models.status_type import StatusType
from openapi_server import util


class BuildBatchPhase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, phase_type: BuildBatchPhaseType=None, phase_status: StatusType=None, start_time: datetime=None, end_time: datetime=None, duration_in_seconds: int=None, contexts: List=None):
        """BuildBatchPhase - a model defined in OpenAPI

        :param phase_type: The phase_type of this BuildBatchPhase.
        :param phase_status: The phase_status of this BuildBatchPhase.
        :param start_time: The start_time of this BuildBatchPhase.
        :param end_time: The end_time of this BuildBatchPhase.
        :param duration_in_seconds: The duration_in_seconds of this BuildBatchPhase.
        :param contexts: The contexts of this BuildBatchPhase.
        """
        self.openapi_types = {
            'phase_type': BuildBatchPhaseType,
            'phase_status': StatusType,
            'start_time': datetime,
            'end_time': datetime,
            'duration_in_seconds': int,
            'contexts': List
        }

        self.attribute_map = {
            'phase_type': 'phaseType',
            'phase_status': 'phaseStatus',
            'start_time': 'startTime',
            'end_time': 'endTime',
            'duration_in_seconds': 'durationInSeconds',
            'contexts': 'contexts'
        }

        self._phase_type = phase_type
        self._phase_status = phase_status
        self._start_time = start_time
        self._end_time = end_time
        self._duration_in_seconds = duration_in_seconds
        self._contexts = contexts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuildBatchPhase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BuildBatchPhase of this BuildBatchPhase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def phase_type(self):
        """Gets the phase_type of this BuildBatchPhase.


        :return: The phase_type of this BuildBatchPhase.
        :rtype: BuildBatchPhaseType
        """
        return self._phase_type

    @phase_type.setter
    def phase_type(self, phase_type):
        """Sets the phase_type of this BuildBatchPhase.


        :param phase_type: The phase_type of this BuildBatchPhase.
        :type phase_type: BuildBatchPhaseType
        """

        self._phase_type = phase_type

    @property
    def phase_status(self):
        """Gets the phase_status of this BuildBatchPhase.


        :return: The phase_status of this BuildBatchPhase.
        :rtype: StatusType
        """
        return self._phase_status

    @phase_status.setter
    def phase_status(self, phase_status):
        """Sets the phase_status of this BuildBatchPhase.


        :param phase_status: The phase_status of this BuildBatchPhase.
        :type phase_status: StatusType
        """

        self._phase_status = phase_status

    @property
    def start_time(self):
        """Gets the start_time of this BuildBatchPhase.


        :return: The start_time of this BuildBatchPhase.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this BuildBatchPhase.


        :param start_time: The start_time of this BuildBatchPhase.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this BuildBatchPhase.


        :return: The end_time of this BuildBatchPhase.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this BuildBatchPhase.


        :param end_time: The end_time of this BuildBatchPhase.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def duration_in_seconds(self):
        """Gets the duration_in_seconds of this BuildBatchPhase.


        :return: The duration_in_seconds of this BuildBatchPhase.
        :rtype: int
        """
        return self._duration_in_seconds

    @duration_in_seconds.setter
    def duration_in_seconds(self, duration_in_seconds):
        """Sets the duration_in_seconds of this BuildBatchPhase.


        :param duration_in_seconds: The duration_in_seconds of this BuildBatchPhase.
        :type duration_in_seconds: int
        """

        self._duration_in_seconds = duration_in_seconds

    @property
    def contexts(self):
        """Gets the contexts of this BuildBatchPhase.


        :return: The contexts of this BuildBatchPhase.
        :rtype: List
        """
        return self._contexts

    @contexts.setter
    def contexts(self, contexts):
        """Sets the contexts of this BuildBatchPhase.


        :param contexts: The contexts of this BuildBatchPhase.
        :type contexts: List
        """

        self._contexts = contexts
