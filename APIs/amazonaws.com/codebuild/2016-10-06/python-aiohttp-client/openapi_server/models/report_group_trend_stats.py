# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportGroupTrendStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average: str=None, max: str=None, min: str=None):
        """ReportGroupTrendStats - a model defined in OpenAPI

        :param average: The average of this ReportGroupTrendStats.
        :param max: The max of this ReportGroupTrendStats.
        :param min: The min of this ReportGroupTrendStats.
        """
        self.openapi_types = {
            'average': str,
            'max': str,
            'min': str
        }

        self.attribute_map = {
            'average': 'average',
            'max': 'max',
            'min': 'min'
        }

        self._average = average
        self._max = max
        self._min = min

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportGroupTrendStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportGroupTrendStats of this ReportGroupTrendStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average(self):
        """Gets the average of this ReportGroupTrendStats.


        :return: The average of this ReportGroupTrendStats.
        :rtype: str
        """
        return self._average

    @average.setter
    def average(self, average):
        """Sets the average of this ReportGroupTrendStats.


        :param average: The average of this ReportGroupTrendStats.
        :type average: str
        """

        self._average = average

    @property
    def max(self):
        """Gets the max of this ReportGroupTrendStats.


        :return: The max of this ReportGroupTrendStats.
        :rtype: str
        """
        return self._max

    @max.setter
    def max(self, max):
        """Sets the max of this ReportGroupTrendStats.


        :param max: The max of this ReportGroupTrendStats.
        :type max: str
        """

        self._max = max

    @property
    def min(self):
        """Gets the min of this ReportGroupTrendStats.


        :return: The min of this ReportGroupTrendStats.
        :rtype: str
        """
        return self._min

    @min.setter
    def min(self, min):
        """Sets the min of this ReportGroupTrendStats.


        :param min: The min of this ReportGroupTrendStats.
        :type min: str
        """

        self._min = min
