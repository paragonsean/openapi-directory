# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source_auth_type import SourceAuthType
from openapi_server import util


class StartBuildBatchInputSourceAuthOverride(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: SourceAuthType=None, resource: str=None):
        """StartBuildBatchInputSourceAuthOverride - a model defined in OpenAPI

        :param type: The type of this StartBuildBatchInputSourceAuthOverride.
        :param resource: The resource of this StartBuildBatchInputSourceAuthOverride.
        """
        self.openapi_types = {
            'type': SourceAuthType,
            'resource': str
        }

        self.attribute_map = {
            'type': 'type',
            'resource': 'resource'
        }

        self._type = type
        self._resource = resource

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartBuildBatchInputSourceAuthOverride':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartBuildBatchInput_sourceAuthOverride of this StartBuildBatchInputSourceAuthOverride.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this StartBuildBatchInputSourceAuthOverride.


        :return: The type of this StartBuildBatchInputSourceAuthOverride.
        :rtype: SourceAuthType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this StartBuildBatchInputSourceAuthOverride.


        :param type: The type of this StartBuildBatchInputSourceAuthOverride.
        :type type: SourceAuthType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def resource(self):
        """Gets the resource of this StartBuildBatchInputSourceAuthOverride.


        :return: The resource of this StartBuildBatchInputSourceAuthOverride.
        :rtype: str
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this StartBuildBatchInputSourceAuthOverride.


        :param resource: The resource of this StartBuildBatchInputSourceAuthOverride.
        :type resource: str
        """

        self._resource = resource
