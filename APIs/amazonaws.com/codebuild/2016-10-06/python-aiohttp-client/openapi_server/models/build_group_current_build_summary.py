# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.build_summary_primary_artifact import BuildSummaryPrimaryArtifact
from openapi_server.models.status_type import StatusType
from openapi_server import util


class BuildGroupCurrentBuildSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, requested_on: datetime=None, build_status: StatusType=None, primary_artifact: BuildSummaryPrimaryArtifact=None, secondary_artifacts: List=None):
        """BuildGroupCurrentBuildSummary - a model defined in OpenAPI

        :param arn: The arn of this BuildGroupCurrentBuildSummary.
        :param requested_on: The requested_on of this BuildGroupCurrentBuildSummary.
        :param build_status: The build_status of this BuildGroupCurrentBuildSummary.
        :param primary_artifact: The primary_artifact of this BuildGroupCurrentBuildSummary.
        :param secondary_artifacts: The secondary_artifacts of this BuildGroupCurrentBuildSummary.
        """
        self.openapi_types = {
            'arn': str,
            'requested_on': datetime,
            'build_status': StatusType,
            'primary_artifact': BuildSummaryPrimaryArtifact,
            'secondary_artifacts': List
        }

        self.attribute_map = {
            'arn': 'arn',
            'requested_on': 'requestedOn',
            'build_status': 'buildStatus',
            'primary_artifact': 'primaryArtifact',
            'secondary_artifacts': 'secondaryArtifacts'
        }

        self._arn = arn
        self._requested_on = requested_on
        self._build_status = build_status
        self._primary_artifact = primary_artifact
        self._secondary_artifacts = secondary_artifacts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuildGroupCurrentBuildSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BuildGroup_currentBuildSummary of this BuildGroupCurrentBuildSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this BuildGroupCurrentBuildSummary.


        :return: The arn of this BuildGroupCurrentBuildSummary.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this BuildGroupCurrentBuildSummary.


        :param arn: The arn of this BuildGroupCurrentBuildSummary.
        :type arn: str
        """

        self._arn = arn

    @property
    def requested_on(self):
        """Gets the requested_on of this BuildGroupCurrentBuildSummary.


        :return: The requested_on of this BuildGroupCurrentBuildSummary.
        :rtype: datetime
        """
        return self._requested_on

    @requested_on.setter
    def requested_on(self, requested_on):
        """Sets the requested_on of this BuildGroupCurrentBuildSummary.


        :param requested_on: The requested_on of this BuildGroupCurrentBuildSummary.
        :type requested_on: datetime
        """

        self._requested_on = requested_on

    @property
    def build_status(self):
        """Gets the build_status of this BuildGroupCurrentBuildSummary.


        :return: The build_status of this BuildGroupCurrentBuildSummary.
        :rtype: StatusType
        """
        return self._build_status

    @build_status.setter
    def build_status(self, build_status):
        """Sets the build_status of this BuildGroupCurrentBuildSummary.


        :param build_status: The build_status of this BuildGroupCurrentBuildSummary.
        :type build_status: StatusType
        """

        self._build_status = build_status

    @property
    def primary_artifact(self):
        """Gets the primary_artifact of this BuildGroupCurrentBuildSummary.


        :return: The primary_artifact of this BuildGroupCurrentBuildSummary.
        :rtype: BuildSummaryPrimaryArtifact
        """
        return self._primary_artifact

    @primary_artifact.setter
    def primary_artifact(self, primary_artifact):
        """Sets the primary_artifact of this BuildGroupCurrentBuildSummary.


        :param primary_artifact: The primary_artifact of this BuildGroupCurrentBuildSummary.
        :type primary_artifact: BuildSummaryPrimaryArtifact
        """

        self._primary_artifact = primary_artifact

    @property
    def secondary_artifacts(self):
        """Gets the secondary_artifacts of this BuildGroupCurrentBuildSummary.


        :return: The secondary_artifacts of this BuildGroupCurrentBuildSummary.
        :rtype: List
        """
        return self._secondary_artifacts

    @secondary_artifacts.setter
    def secondary_artifacts(self, secondary_artifacts):
        """Sets the secondary_artifacts of this BuildGroupCurrentBuildSummary.


        :param secondary_artifacts: The secondary_artifacts of this BuildGroupCurrentBuildSummary.
        :type secondary_artifacts: List
        """

        self._secondary_artifacts = secondary_artifacts
