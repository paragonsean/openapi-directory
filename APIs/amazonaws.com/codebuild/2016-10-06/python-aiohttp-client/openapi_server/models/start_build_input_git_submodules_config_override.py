# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartBuildInputGitSubmodulesConfigOverride(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fetch_submodules: bool=None):
        """StartBuildInputGitSubmodulesConfigOverride - a model defined in OpenAPI

        :param fetch_submodules: The fetch_submodules of this StartBuildInputGitSubmodulesConfigOverride.
        """
        self.openapi_types = {
            'fetch_submodules': bool
        }

        self.attribute_map = {
            'fetch_submodules': 'fetchSubmodules'
        }

        self._fetch_submodules = fetch_submodules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartBuildInputGitSubmodulesConfigOverride':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartBuildInput_gitSubmodulesConfigOverride of this StartBuildInputGitSubmodulesConfigOverride.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fetch_submodules(self):
        """Gets the fetch_submodules of this StartBuildInputGitSubmodulesConfigOverride.


        :return: The fetch_submodules of this StartBuildInputGitSubmodulesConfigOverride.
        :rtype: bool
        """
        return self._fetch_submodules

    @fetch_submodules.setter
    def fetch_submodules(self, fetch_submodules):
        """Sets the fetch_submodules of this StartBuildInputGitSubmodulesConfigOverride.


        :param fetch_submodules: The fetch_submodules of this StartBuildInputGitSubmodulesConfigOverride.
        :type fetch_submodules: bool
        """
        if fetch_submodules is None:
            raise ValueError("Invalid value for `fetch_submodules`, must not be `None`")

        self._fetch_submodules = fetch_submodules
