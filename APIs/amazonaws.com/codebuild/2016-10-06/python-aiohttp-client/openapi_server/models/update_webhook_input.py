# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.webhook_build_type import WebhookBuildType
from openapi_server import util


class UpdateWebhookInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project_name: str=None, branch_filter: str=None, rotate_secret: bool=None, filter_groups: List=None, build_type: WebhookBuildType=None):
        """UpdateWebhookInput - a model defined in OpenAPI

        :param project_name: The project_name of this UpdateWebhookInput.
        :param branch_filter: The branch_filter of this UpdateWebhookInput.
        :param rotate_secret: The rotate_secret of this UpdateWebhookInput.
        :param filter_groups: The filter_groups of this UpdateWebhookInput.
        :param build_type: The build_type of this UpdateWebhookInput.
        """
        self.openapi_types = {
            'project_name': str,
            'branch_filter': str,
            'rotate_secret': bool,
            'filter_groups': List,
            'build_type': WebhookBuildType
        }

        self.attribute_map = {
            'project_name': 'projectName',
            'branch_filter': 'branchFilter',
            'rotate_secret': 'rotateSecret',
            'filter_groups': 'filterGroups',
            'build_type': 'buildType'
        }

        self._project_name = project_name
        self._branch_filter = branch_filter
        self._rotate_secret = rotate_secret
        self._filter_groups = filter_groups
        self._build_type = build_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateWebhookInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateWebhookInput of this UpdateWebhookInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_name(self):
        """Gets the project_name of this UpdateWebhookInput.


        :return: The project_name of this UpdateWebhookInput.
        :rtype: str
        """
        return self._project_name

    @project_name.setter
    def project_name(self, project_name):
        """Sets the project_name of this UpdateWebhookInput.


        :param project_name: The project_name of this UpdateWebhookInput.
        :type project_name: str
        """
        if project_name is None:
            raise ValueError("Invalid value for `project_name`, must not be `None`")

        self._project_name = project_name

    @property
    def branch_filter(self):
        """Gets the branch_filter of this UpdateWebhookInput.


        :return: The branch_filter of this UpdateWebhookInput.
        :rtype: str
        """
        return self._branch_filter

    @branch_filter.setter
    def branch_filter(self, branch_filter):
        """Sets the branch_filter of this UpdateWebhookInput.


        :param branch_filter: The branch_filter of this UpdateWebhookInput.
        :type branch_filter: str
        """

        self._branch_filter = branch_filter

    @property
    def rotate_secret(self):
        """Gets the rotate_secret of this UpdateWebhookInput.


        :return: The rotate_secret of this UpdateWebhookInput.
        :rtype: bool
        """
        return self._rotate_secret

    @rotate_secret.setter
    def rotate_secret(self, rotate_secret):
        """Sets the rotate_secret of this UpdateWebhookInput.


        :param rotate_secret: The rotate_secret of this UpdateWebhookInput.
        :type rotate_secret: bool
        """

        self._rotate_secret = rotate_secret

    @property
    def filter_groups(self):
        """Gets the filter_groups of this UpdateWebhookInput.


        :return: The filter_groups of this UpdateWebhookInput.
        :rtype: List
        """
        return self._filter_groups

    @filter_groups.setter
    def filter_groups(self, filter_groups):
        """Sets the filter_groups of this UpdateWebhookInput.


        :param filter_groups: The filter_groups of this UpdateWebhookInput.
        :type filter_groups: List
        """

        self._filter_groups = filter_groups

    @property
    def build_type(self):
        """Gets the build_type of this UpdateWebhookInput.


        :return: The build_type of this UpdateWebhookInput.
        :rtype: WebhookBuildType
        """
        return self._build_type

    @build_type.setter
    def build_type(self, build_type):
        """Sets the build_type of this UpdateWebhookInput.


        :param build_type: The build_type of this UpdateWebhookInput.
        :type build_type: WebhookBuildType
        """

        self._build_type = build_type
