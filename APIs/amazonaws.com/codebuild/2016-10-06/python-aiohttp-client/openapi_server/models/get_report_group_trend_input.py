# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.report_group_trend_field_type import ReportGroupTrendFieldType
from openapi_server import util


class GetReportGroupTrendInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, report_group_arn: str=None, num_of_reports: int=None, trend_field: ReportGroupTrendFieldType=None):
        """GetReportGroupTrendInput - a model defined in OpenAPI

        :param report_group_arn: The report_group_arn of this GetReportGroupTrendInput.
        :param num_of_reports: The num_of_reports of this GetReportGroupTrendInput.
        :param trend_field: The trend_field of this GetReportGroupTrendInput.
        """
        self.openapi_types = {
            'report_group_arn': str,
            'num_of_reports': int,
            'trend_field': ReportGroupTrendFieldType
        }

        self.attribute_map = {
            'report_group_arn': 'reportGroupArn',
            'num_of_reports': 'numOfReports',
            'trend_field': 'trendField'
        }

        self._report_group_arn = report_group_arn
        self._num_of_reports = num_of_reports
        self._trend_field = trend_field

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetReportGroupTrendInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetReportGroupTrendInput of this GetReportGroupTrendInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def report_group_arn(self):
        """Gets the report_group_arn of this GetReportGroupTrendInput.


        :return: The report_group_arn of this GetReportGroupTrendInput.
        :rtype: str
        """
        return self._report_group_arn

    @report_group_arn.setter
    def report_group_arn(self, report_group_arn):
        """Sets the report_group_arn of this GetReportGroupTrendInput.


        :param report_group_arn: The report_group_arn of this GetReportGroupTrendInput.
        :type report_group_arn: str
        """
        if report_group_arn is None:
            raise ValueError("Invalid value for `report_group_arn`, must not be `None`")

        self._report_group_arn = report_group_arn

    @property
    def num_of_reports(self):
        """Gets the num_of_reports of this GetReportGroupTrendInput.


        :return: The num_of_reports of this GetReportGroupTrendInput.
        :rtype: int
        """
        return self._num_of_reports

    @num_of_reports.setter
    def num_of_reports(self, num_of_reports):
        """Sets the num_of_reports of this GetReportGroupTrendInput.


        :param num_of_reports: The num_of_reports of this GetReportGroupTrendInput.
        :type num_of_reports: int
        """

        self._num_of_reports = num_of_reports

    @property
    def trend_field(self):
        """Gets the trend_field of this GetReportGroupTrendInput.


        :return: The trend_field of this GetReportGroupTrendInput.
        :rtype: ReportGroupTrendFieldType
        """
        return self._trend_field

    @trend_field.setter
    def trend_field(self, trend_field):
        """Sets the trend_field of this GetReportGroupTrendInput.


        :param trend_field: The trend_field of this GetReportGroupTrendInput.
        :type trend_field: ReportGroupTrendFieldType
        """
        if trend_field is None:
            raise ValueError("Invalid value for `trend_field`, must not be `None`")

        self._trend_field = trend_field
