# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.webhook_build_type import WebhookBuildType
from openapi_server import util


class Webhook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, url: str=None, payload_url: str=None, secret: str=None, branch_filter: str=None, filter_groups: List=None, build_type: WebhookBuildType=None, last_modified_secret: datetime=None):
        """Webhook - a model defined in OpenAPI

        :param url: The url of this Webhook.
        :param payload_url: The payload_url of this Webhook.
        :param secret: The secret of this Webhook.
        :param branch_filter: The branch_filter of this Webhook.
        :param filter_groups: The filter_groups of this Webhook.
        :param build_type: The build_type of this Webhook.
        :param last_modified_secret: The last_modified_secret of this Webhook.
        """
        self.openapi_types = {
            'url': str,
            'payload_url': str,
            'secret': str,
            'branch_filter': str,
            'filter_groups': List,
            'build_type': WebhookBuildType,
            'last_modified_secret': datetime
        }

        self.attribute_map = {
            'url': 'url',
            'payload_url': 'payloadUrl',
            'secret': 'secret',
            'branch_filter': 'branchFilter',
            'filter_groups': 'filterGroups',
            'build_type': 'buildType',
            'last_modified_secret': 'lastModifiedSecret'
        }

        self._url = url
        self._payload_url = payload_url
        self._secret = secret
        self._branch_filter = branch_filter
        self._filter_groups = filter_groups
        self._build_type = build_type
        self._last_modified_secret = last_modified_secret

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Webhook':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Webhook of this Webhook.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def url(self):
        """Gets the url of this Webhook.


        :return: The url of this Webhook.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Webhook.


        :param url: The url of this Webhook.
        :type url: str
        """

        self._url = url

    @property
    def payload_url(self):
        """Gets the payload_url of this Webhook.


        :return: The payload_url of this Webhook.
        :rtype: str
        """
        return self._payload_url

    @payload_url.setter
    def payload_url(self, payload_url):
        """Sets the payload_url of this Webhook.


        :param payload_url: The payload_url of this Webhook.
        :type payload_url: str
        """

        self._payload_url = payload_url

    @property
    def secret(self):
        """Gets the secret of this Webhook.


        :return: The secret of this Webhook.
        :rtype: str
        """
        return self._secret

    @secret.setter
    def secret(self, secret):
        """Sets the secret of this Webhook.


        :param secret: The secret of this Webhook.
        :type secret: str
        """

        self._secret = secret

    @property
    def branch_filter(self):
        """Gets the branch_filter of this Webhook.


        :return: The branch_filter of this Webhook.
        :rtype: str
        """
        return self._branch_filter

    @branch_filter.setter
    def branch_filter(self, branch_filter):
        """Sets the branch_filter of this Webhook.


        :param branch_filter: The branch_filter of this Webhook.
        :type branch_filter: str
        """

        self._branch_filter = branch_filter

    @property
    def filter_groups(self):
        """Gets the filter_groups of this Webhook.


        :return: The filter_groups of this Webhook.
        :rtype: List
        """
        return self._filter_groups

    @filter_groups.setter
    def filter_groups(self, filter_groups):
        """Sets the filter_groups of this Webhook.


        :param filter_groups: The filter_groups of this Webhook.
        :type filter_groups: List
        """

        self._filter_groups = filter_groups

    @property
    def build_type(self):
        """Gets the build_type of this Webhook.


        :return: The build_type of this Webhook.
        :rtype: WebhookBuildType
        """
        return self._build_type

    @build_type.setter
    def build_type(self, build_type):
        """Sets the build_type of this Webhook.


        :param build_type: The build_type of this Webhook.
        :type build_type: WebhookBuildType
        """

        self._build_type = build_type

    @property
    def last_modified_secret(self):
        """Gets the last_modified_secret of this Webhook.


        :return: The last_modified_secret of this Webhook.
        :rtype: datetime
        """
        return self._last_modified_secret

    @last_modified_secret.setter
    def last_modified_secret(self, last_modified_secret):
        """Sets the last_modified_secret of this Webhook.


        :param last_modified_secret: The last_modified_secret of this Webhook.
        :type last_modified_secret: datetime
        """

        self._last_modified_secret = last_modified_secret
