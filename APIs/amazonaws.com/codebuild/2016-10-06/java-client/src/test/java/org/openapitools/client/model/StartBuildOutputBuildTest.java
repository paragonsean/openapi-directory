/*
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BuildArtifacts;
import org.openapitools.client.model.BuildCache;
import org.openapitools.client.model.BuildDebugSession;
import org.openapitools.client.model.BuildEnvironment;
import org.openapitools.client.model.BuildLogs;
import org.openapitools.client.model.BuildNetworkInterface;
import org.openapitools.client.model.BuildSource;
import org.openapitools.client.model.BuildVpcConfig;
import org.openapitools.client.model.StatusType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for StartBuildOutputBuild
 */
public class StartBuildOutputBuildTest {
    private final StartBuildOutputBuild model = new StartBuildOutputBuild();

    /**
     * Model tests for StartBuildOutputBuild
     */
    @Test
    public void testStartBuildOutputBuild() {
        // TODO: test StartBuildOutputBuild
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'arn'
     */
    @Test
    public void arnTest() {
        // TODO: test arn
    }

    /**
     * Test the property 'buildNumber'
     */
    @Test
    public void buildNumberTest() {
        // TODO: test buildNumber
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    public void endTimeTest() {
        // TODO: test endTime
    }

    /**
     * Test the property 'currentPhase'
     */
    @Test
    public void currentPhaseTest() {
        // TODO: test currentPhase
    }

    /**
     * Test the property 'buildStatus'
     */
    @Test
    public void buildStatusTest() {
        // TODO: test buildStatus
    }

    /**
     * Test the property 'sourceVersion'
     */
    @Test
    public void sourceVersionTest() {
        // TODO: test sourceVersion
    }

    /**
     * Test the property 'resolvedSourceVersion'
     */
    @Test
    public void resolvedSourceVersionTest() {
        // TODO: test resolvedSourceVersion
    }

    /**
     * Test the property 'projectName'
     */
    @Test
    public void projectNameTest() {
        // TODO: test projectName
    }

    /**
     * Test the property 'phases'
     */
    @Test
    public void phasesTest() {
        // TODO: test phases
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'secondarySources'
     */
    @Test
    public void secondarySourcesTest() {
        // TODO: test secondarySources
    }

    /**
     * Test the property 'secondarySourceVersions'
     */
    @Test
    public void secondarySourceVersionsTest() {
        // TODO: test secondarySourceVersions
    }

    /**
     * Test the property 'artifacts'
     */
    @Test
    public void artifactsTest() {
        // TODO: test artifacts
    }

    /**
     * Test the property 'secondaryArtifacts'
     */
    @Test
    public void secondaryArtifactsTest() {
        // TODO: test secondaryArtifacts
    }

    /**
     * Test the property 'cache'
     */
    @Test
    public void cacheTest() {
        // TODO: test cache
    }

    /**
     * Test the property 'environment'
     */
    @Test
    public void environmentTest() {
        // TODO: test environment
    }

    /**
     * Test the property 'serviceRole'
     */
    @Test
    public void serviceRoleTest() {
        // TODO: test serviceRole
    }

    /**
     * Test the property 'logs'
     */
    @Test
    public void logsTest() {
        // TODO: test logs
    }

    /**
     * Test the property 'timeoutInMinutes'
     */
    @Test
    public void timeoutInMinutesTest() {
        // TODO: test timeoutInMinutes
    }

    /**
     * Test the property 'queuedTimeoutInMinutes'
     */
    @Test
    public void queuedTimeoutInMinutesTest() {
        // TODO: test queuedTimeoutInMinutes
    }

    /**
     * Test the property 'buildComplete'
     */
    @Test
    public void buildCompleteTest() {
        // TODO: test buildComplete
    }

    /**
     * Test the property 'initiator'
     */
    @Test
    public void initiatorTest() {
        // TODO: test initiator
    }

    /**
     * Test the property 'vpcConfig'
     */
    @Test
    public void vpcConfigTest() {
        // TODO: test vpcConfig
    }

    /**
     * Test the property 'networkInterface'
     */
    @Test
    public void networkInterfaceTest() {
        // TODO: test networkInterface
    }

    /**
     * Test the property 'encryptionKey'
     */
    @Test
    public void encryptionKeyTest() {
        // TODO: test encryptionKey
    }

    /**
     * Test the property 'exportedEnvironmentVariables'
     */
    @Test
    public void exportedEnvironmentVariablesTest() {
        // TODO: test exportedEnvironmentVariables
    }

    /**
     * Test the property 'reportArns'
     */
    @Test
    public void reportArnsTest() {
        // TODO: test reportArns
    }

    /**
     * Test the property 'fileSystemLocations'
     */
    @Test
    public void fileSystemLocationsTest() {
        // TODO: test fileSystemLocations
    }

    /**
     * Test the property 'debugSession'
     */
    @Test
    public void debugSessionTest() {
        // TODO: test debugSession
    }

    /**
     * Test the property 'buildBatchArn'
     */
    @Test
    public void buildBatchArnTest() {
        // TODO: test buildBatchArn
    }

}
