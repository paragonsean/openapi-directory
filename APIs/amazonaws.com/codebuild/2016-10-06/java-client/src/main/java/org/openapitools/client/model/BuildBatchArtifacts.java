/*
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BucketOwnerAccess;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BuildBatchArtifacts
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:18.687160-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BuildBatchArtifacts {
  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_SHA256SUM = "sha256sum";
  @SerializedName(SERIALIZED_NAME_SHA256SUM)
  private String sha256sum;

  public static final String SERIALIZED_NAME_MD5SUM = "md5sum";
  @SerializedName(SERIALIZED_NAME_MD5SUM)
  private String md5sum;

  public static final String SERIALIZED_NAME_OVERRIDE_ARTIFACT_NAME = "overrideArtifactName";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_ARTIFACT_NAME)
  private Boolean overrideArtifactName;

  public static final String SERIALIZED_NAME_ENCRYPTION_DISABLED = "encryptionDisabled";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_DISABLED)
  private Boolean encryptionDisabled;

  public static final String SERIALIZED_NAME_ARTIFACT_IDENTIFIER = "artifactIdentifier";
  @SerializedName(SERIALIZED_NAME_ARTIFACT_IDENTIFIER)
  private String artifactIdentifier;

  public static final String SERIALIZED_NAME_BUCKET_OWNER_ACCESS = "bucketOwnerAccess";
  @SerializedName(SERIALIZED_NAME_BUCKET_OWNER_ACCESS)
  private BucketOwnerAccess bucketOwnerAccess;

  public BuildBatchArtifacts() {
  }

  public BuildBatchArtifacts location(String location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   */
  @javax.annotation.Nullable
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }


  public BuildBatchArtifacts sha256sum(String sha256sum) {
    this.sha256sum = sha256sum;
    return this;
  }

  /**
   * Get sha256sum
   * @return sha256sum
   */
  @javax.annotation.Nullable
  public String getSha256sum() {
    return sha256sum;
  }

  public void setSha256sum(String sha256sum) {
    this.sha256sum = sha256sum;
  }


  public BuildBatchArtifacts md5sum(String md5sum) {
    this.md5sum = md5sum;
    return this;
  }

  /**
   * Get md5sum
   * @return md5sum
   */
  @javax.annotation.Nullable
  public String getMd5sum() {
    return md5sum;
  }

  public void setMd5sum(String md5sum) {
    this.md5sum = md5sum;
  }


  public BuildBatchArtifacts overrideArtifactName(Boolean overrideArtifactName) {
    this.overrideArtifactName = overrideArtifactName;
    return this;
  }

  /**
   * Get overrideArtifactName
   * @return overrideArtifactName
   */
  @javax.annotation.Nullable
  public Boolean getOverrideArtifactName() {
    return overrideArtifactName;
  }

  public void setOverrideArtifactName(Boolean overrideArtifactName) {
    this.overrideArtifactName = overrideArtifactName;
  }


  public BuildBatchArtifacts encryptionDisabled(Boolean encryptionDisabled) {
    this.encryptionDisabled = encryptionDisabled;
    return this;
  }

  /**
   * Get encryptionDisabled
   * @return encryptionDisabled
   */
  @javax.annotation.Nullable
  public Boolean getEncryptionDisabled() {
    return encryptionDisabled;
  }

  public void setEncryptionDisabled(Boolean encryptionDisabled) {
    this.encryptionDisabled = encryptionDisabled;
  }


  public BuildBatchArtifacts artifactIdentifier(String artifactIdentifier) {
    this.artifactIdentifier = artifactIdentifier;
    return this;
  }

  /**
   * Get artifactIdentifier
   * @return artifactIdentifier
   */
  @javax.annotation.Nullable
  public String getArtifactIdentifier() {
    return artifactIdentifier;
  }

  public void setArtifactIdentifier(String artifactIdentifier) {
    this.artifactIdentifier = artifactIdentifier;
  }


  public BuildBatchArtifacts bucketOwnerAccess(BucketOwnerAccess bucketOwnerAccess) {
    this.bucketOwnerAccess = bucketOwnerAccess;
    return this;
  }

  /**
   * Get bucketOwnerAccess
   * @return bucketOwnerAccess
   */
  @javax.annotation.Nullable
  public BucketOwnerAccess getBucketOwnerAccess() {
    return bucketOwnerAccess;
  }

  public void setBucketOwnerAccess(BucketOwnerAccess bucketOwnerAccess) {
    this.bucketOwnerAccess = bucketOwnerAccess;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuildBatchArtifacts buildBatchArtifacts = (BuildBatchArtifacts) o;
    return Objects.equals(this.location, buildBatchArtifacts.location) &&
        Objects.equals(this.sha256sum, buildBatchArtifacts.sha256sum) &&
        Objects.equals(this.md5sum, buildBatchArtifacts.md5sum) &&
        Objects.equals(this.overrideArtifactName, buildBatchArtifacts.overrideArtifactName) &&
        Objects.equals(this.encryptionDisabled, buildBatchArtifacts.encryptionDisabled) &&
        Objects.equals(this.artifactIdentifier, buildBatchArtifacts.artifactIdentifier) &&
        Objects.equals(this.bucketOwnerAccess, buildBatchArtifacts.bucketOwnerAccess);
  }

  @Override
  public int hashCode() {
    return Objects.hash(location, sha256sum, md5sum, overrideArtifactName, encryptionDisabled, artifactIdentifier, bucketOwnerAccess);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuildBatchArtifacts {\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    sha256sum: ").append(toIndentedString(sha256sum)).append("\n");
    sb.append("    md5sum: ").append(toIndentedString(md5sum)).append("\n");
    sb.append("    overrideArtifactName: ").append(toIndentedString(overrideArtifactName)).append("\n");
    sb.append("    encryptionDisabled: ").append(toIndentedString(encryptionDisabled)).append("\n");
    sb.append("    artifactIdentifier: ").append(toIndentedString(artifactIdentifier)).append("\n");
    sb.append("    bucketOwnerAccess: ").append(toIndentedString(bucketOwnerAccess)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("location");
    openapiFields.add("sha256sum");
    openapiFields.add("md5sum");
    openapiFields.add("overrideArtifactName");
    openapiFields.add("encryptionDisabled");
    openapiFields.add("artifactIdentifier");
    openapiFields.add("bucketOwnerAccess");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BuildBatchArtifacts
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BuildBatchArtifacts.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BuildBatchArtifacts is not found in the empty JSON string", BuildBatchArtifacts.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BuildBatchArtifacts.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BuildBatchArtifacts` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `location`
      if (jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("location"));
      }
      // validate the optional field `sha256sum`
      if (jsonObj.get("sha256sum") != null && !jsonObj.get("sha256sum").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("sha256sum"));
      }
      // validate the optional field `md5sum`
      if (jsonObj.get("md5sum") != null && !jsonObj.get("md5sum").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("md5sum"));
      }
      // validate the optional field `overrideArtifactName`
      if (jsonObj.get("overrideArtifactName") != null && !jsonObj.get("overrideArtifactName").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("overrideArtifactName"));
      }
      // validate the optional field `encryptionDisabled`
      if (jsonObj.get("encryptionDisabled") != null && !jsonObj.get("encryptionDisabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("encryptionDisabled"));
      }
      // validate the optional field `artifactIdentifier`
      if (jsonObj.get("artifactIdentifier") != null && !jsonObj.get("artifactIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("artifactIdentifier"));
      }
      // validate the optional field `bucketOwnerAccess`
      if (jsonObj.get("bucketOwnerAccess") != null && !jsonObj.get("bucketOwnerAccess").isJsonNull()) {
        BucketOwnerAccess.validateJsonElement(jsonObj.get("bucketOwnerAccess"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BuildBatchArtifacts.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BuildBatchArtifacts' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BuildBatchArtifacts> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BuildBatchArtifacts.class));

       return (TypeAdapter<T>) new TypeAdapter<BuildBatchArtifacts>() {
           @Override
           public void write(JsonWriter out, BuildBatchArtifacts value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BuildBatchArtifacts read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BuildBatchArtifacts given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BuildBatchArtifacts
   * @throws IOException if the JSON string is invalid with respect to BuildBatchArtifacts
   */
  public static BuildBatchArtifacts fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BuildBatchArtifacts.class);
  }

  /**
   * Convert an instance of BuildBatchArtifacts to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

