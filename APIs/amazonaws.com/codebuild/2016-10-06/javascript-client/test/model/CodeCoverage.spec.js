/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsCodeBuild);
  }
}(this, function(expect, AwsCodeBuild) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsCodeBuild.CodeCoverage();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CodeCoverage', function() {
    it('should create an instance of CodeCoverage', function() {
      // uncomment below and update the code to test CodeCoverage
      //var instance = new AwsCodeBuild.CodeCoverage();
      //expect(instance).to.be.a(AwsCodeBuild.CodeCoverage);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new AwsCodeBuild.CodeCoverage();
      //expect(instance).to.be();
    });

    it('should have the property reportARN (base name: "reportARN")', function() {
      // uncomment below and update the code to test the property reportARN
      //var instance = new AwsCodeBuild.CodeCoverage();
      //expect(instance).to.be();
    });

    it('should have the property filePath (base name: "filePath")', function() {
      // uncomment below and update the code to test the property filePath
      //var instance = new AwsCodeBuild.CodeCoverage();
      //expect(instance).to.be();
    });

    it('should have the property lineCoveragePercentage (base name: "lineCoveragePercentage")', function() {
      // uncomment below and update the code to test the property lineCoveragePercentage
      //var instance = new AwsCodeBuild.CodeCoverage();
      //expect(instance).to.be();
    });

    it('should have the property linesCovered (base name: "linesCovered")', function() {
      // uncomment below and update the code to test the property linesCovered
      //var instance = new AwsCodeBuild.CodeCoverage();
      //expect(instance).to.be();
    });

    it('should have the property linesMissed (base name: "linesMissed")', function() {
      // uncomment below and update the code to test the property linesMissed
      //var instance = new AwsCodeBuild.CodeCoverage();
      //expect(instance).to.be();
    });

    it('should have the property branchCoveragePercentage (base name: "branchCoveragePercentage")', function() {
      // uncomment below and update the code to test the property branchCoveragePercentage
      //var instance = new AwsCodeBuild.CodeCoverage();
      //expect(instance).to.be();
    });

    it('should have the property branchesCovered (base name: "branchesCovered")', function() {
      // uncomment below and update the code to test the property branchesCovered
      //var instance = new AwsCodeBuild.CodeCoverage();
      //expect(instance).to.be();
    });

    it('should have the property branchesMissed (base name: "branchesMissed")', function() {
      // uncomment below and update the code to test the property branchesMissed
      //var instance = new AwsCodeBuild.CodeCoverage();
      //expect(instance).to.be();
    });

    it('should have the property expired (base name: "expired")', function() {
      // uncomment below and update the code to test the property expired
      //var instance = new AwsCodeBuild.CodeCoverage();
      //expect(instance).to.be();
    });

  });

}));
