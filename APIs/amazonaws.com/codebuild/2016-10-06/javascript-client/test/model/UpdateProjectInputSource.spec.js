/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsCodeBuild);
  }
}(this, function(expect, AwsCodeBuild) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsCodeBuild.UpdateProjectInputSource();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UpdateProjectInputSource', function() {
    it('should create an instance of UpdateProjectInputSource', function() {
      // uncomment below and update the code to test UpdateProjectInputSource
      //var instance = new AwsCodeBuild.UpdateProjectInputSource();
      //expect(instance).to.be.a(AwsCodeBuild.UpdateProjectInputSource);
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new AwsCodeBuild.UpdateProjectInputSource();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new AwsCodeBuild.UpdateProjectInputSource();
      //expect(instance).to.be();
    });

    it('should have the property gitCloneDepth (base name: "gitCloneDepth")', function() {
      // uncomment below and update the code to test the property gitCloneDepth
      //var instance = new AwsCodeBuild.UpdateProjectInputSource();
      //expect(instance).to.be();
    });

    it('should have the property gitSubmodulesConfig (base name: "gitSubmodulesConfig")', function() {
      // uncomment below and update the code to test the property gitSubmodulesConfig
      //var instance = new AwsCodeBuild.UpdateProjectInputSource();
      //expect(instance).to.be();
    });

    it('should have the property buildspec (base name: "buildspec")', function() {
      // uncomment below and update the code to test the property buildspec
      //var instance = new AwsCodeBuild.UpdateProjectInputSource();
      //expect(instance).to.be();
    });

    it('should have the property auth (base name: "auth")', function() {
      // uncomment below and update the code to test the property auth
      //var instance = new AwsCodeBuild.UpdateProjectInputSource();
      //expect(instance).to.be();
    });

    it('should have the property reportBuildStatus (base name: "reportBuildStatus")', function() {
      // uncomment below and update the code to test the property reportBuildStatus
      //var instance = new AwsCodeBuild.UpdateProjectInputSource();
      //expect(instance).to.be();
    });

    it('should have the property buildStatusConfig (base name: "buildStatusConfig")', function() {
      // uncomment below and update the code to test the property buildStatusConfig
      //var instance = new AwsCodeBuild.UpdateProjectInputSource();
      //expect(instance).to.be();
    });

    it('should have the property insecureSsl (base name: "insecureSsl")', function() {
      // uncomment below and update the code to test the property insecureSsl
      //var instance = new AwsCodeBuild.UpdateProjectInputSource();
      //expect(instance).to.be();
    });

    it('should have the property sourceIdentifier (base name: "sourceIdentifier")', function() {
      // uncomment below and update the code to test the property sourceIdentifier
      //var instance = new AwsCodeBuild.UpdateProjectInputSource();
      //expect(instance).to.be();
    });

  });

}));
