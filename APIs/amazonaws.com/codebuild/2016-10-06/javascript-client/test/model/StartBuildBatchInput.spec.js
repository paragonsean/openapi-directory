/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsCodeBuild);
  }
}(this, function(expect, AwsCodeBuild) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsCodeBuild.StartBuildBatchInput();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('StartBuildBatchInput', function() {
    it('should create an instance of StartBuildBatchInput', function() {
      // uncomment below and update the code to test StartBuildBatchInput
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be.a(AwsCodeBuild.StartBuildBatchInput);
    });

    it('should have the property projectName (base name: "projectName")', function() {
      // uncomment below and update the code to test the property projectName
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property secondarySourcesOverride (base name: "secondarySourcesOverride")', function() {
      // uncomment below and update the code to test the property secondarySourcesOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property secondarySourcesVersionOverride (base name: "secondarySourcesVersionOverride")', function() {
      // uncomment below and update the code to test the property secondarySourcesVersionOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property sourceVersion (base name: "sourceVersion")', function() {
      // uncomment below and update the code to test the property sourceVersion
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property artifactsOverride (base name: "artifactsOverride")', function() {
      // uncomment below and update the code to test the property artifactsOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property secondaryArtifactsOverride (base name: "secondaryArtifactsOverride")', function() {
      // uncomment below and update the code to test the property secondaryArtifactsOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property environmentVariablesOverride (base name: "environmentVariablesOverride")', function() {
      // uncomment below and update the code to test the property environmentVariablesOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property sourceTypeOverride (base name: "sourceTypeOverride")', function() {
      // uncomment below and update the code to test the property sourceTypeOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property sourceLocationOverride (base name: "sourceLocationOverride")', function() {
      // uncomment below and update the code to test the property sourceLocationOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property sourceAuthOverride (base name: "sourceAuthOverride")', function() {
      // uncomment below and update the code to test the property sourceAuthOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property gitCloneDepthOverride (base name: "gitCloneDepthOverride")', function() {
      // uncomment below and update the code to test the property gitCloneDepthOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property gitSubmodulesConfigOverride (base name: "gitSubmodulesConfigOverride")', function() {
      // uncomment below and update the code to test the property gitSubmodulesConfigOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property buildspecOverride (base name: "buildspecOverride")', function() {
      // uncomment below and update the code to test the property buildspecOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property insecureSslOverride (base name: "insecureSslOverride")', function() {
      // uncomment below and update the code to test the property insecureSslOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property reportBuildBatchStatusOverride (base name: "reportBuildBatchStatusOverride")', function() {
      // uncomment below and update the code to test the property reportBuildBatchStatusOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property environmentTypeOverride (base name: "environmentTypeOverride")', function() {
      // uncomment below and update the code to test the property environmentTypeOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property imageOverride (base name: "imageOverride")', function() {
      // uncomment below and update the code to test the property imageOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property computeTypeOverride (base name: "computeTypeOverride")', function() {
      // uncomment below and update the code to test the property computeTypeOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property certificateOverride (base name: "certificateOverride")', function() {
      // uncomment below and update the code to test the property certificateOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property cacheOverride (base name: "cacheOverride")', function() {
      // uncomment below and update the code to test the property cacheOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property serviceRoleOverride (base name: "serviceRoleOverride")', function() {
      // uncomment below and update the code to test the property serviceRoleOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property privilegedModeOverride (base name: "privilegedModeOverride")', function() {
      // uncomment below and update the code to test the property privilegedModeOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property buildTimeoutInMinutesOverride (base name: "buildTimeoutInMinutesOverride")', function() {
      // uncomment below and update the code to test the property buildTimeoutInMinutesOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property queuedTimeoutInMinutesOverride (base name: "queuedTimeoutInMinutesOverride")', function() {
      // uncomment below and update the code to test the property queuedTimeoutInMinutesOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property encryptionKeyOverride (base name: "encryptionKeyOverride")', function() {
      // uncomment below and update the code to test the property encryptionKeyOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property logsConfigOverride (base name: "logsConfigOverride")', function() {
      // uncomment below and update the code to test the property logsConfigOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property registryCredentialOverride (base name: "registryCredentialOverride")', function() {
      // uncomment below and update the code to test the property registryCredentialOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property imagePullCredentialsTypeOverride (base name: "imagePullCredentialsTypeOverride")', function() {
      // uncomment below and update the code to test the property imagePullCredentialsTypeOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property buildBatchConfigOverride (base name: "buildBatchConfigOverride")', function() {
      // uncomment below and update the code to test the property buildBatchConfigOverride
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

    it('should have the property debugSessionEnabled (base name: "debugSessionEnabled")', function() {
      // uncomment below and update the code to test the property debugSessionEnabled
      //var instance = new AwsCodeBuild.StartBuildBatchInput();
      //expect(instance).to.be();
    });

  });

}));
