/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsCodeBuild);
  }
}(this, function(expect, AwsCodeBuild) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsCodeBuild.BuildBatch();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BuildBatch', function() {
    it('should create an instance of BuildBatch', function() {
      // uncomment below and update the code to test BuildBatch
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be.a(AwsCodeBuild.BuildBatch);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property arn (base name: "arn")', function() {
      // uncomment below and update the code to test the property arn
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "startTime")', function() {
      // uncomment below and update the code to test the property startTime
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property endTime (base name: "endTime")', function() {
      // uncomment below and update the code to test the property endTime
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property currentPhase (base name: "currentPhase")', function() {
      // uncomment below and update the code to test the property currentPhase
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property buildBatchStatus (base name: "buildBatchStatus")', function() {
      // uncomment below and update the code to test the property buildBatchStatus
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property sourceVersion (base name: "sourceVersion")', function() {
      // uncomment below and update the code to test the property sourceVersion
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property resolvedSourceVersion (base name: "resolvedSourceVersion")', function() {
      // uncomment below and update the code to test the property resolvedSourceVersion
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property projectName (base name: "projectName")', function() {
      // uncomment below and update the code to test the property projectName
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property phases (base name: "phases")', function() {
      // uncomment below and update the code to test the property phases
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property secondarySources (base name: "secondarySources")', function() {
      // uncomment below and update the code to test the property secondarySources
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property secondarySourceVersions (base name: "secondarySourceVersions")', function() {
      // uncomment below and update the code to test the property secondarySourceVersions
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property artifacts (base name: "artifacts")', function() {
      // uncomment below and update the code to test the property artifacts
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property secondaryArtifacts (base name: "secondaryArtifacts")', function() {
      // uncomment below and update the code to test the property secondaryArtifacts
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property cache (base name: "cache")', function() {
      // uncomment below and update the code to test the property cache
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property environment (base name: "environment")', function() {
      // uncomment below and update the code to test the property environment
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property serviceRole (base name: "serviceRole")', function() {
      // uncomment below and update the code to test the property serviceRole
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property logConfig (base name: "logConfig")', function() {
      // uncomment below and update the code to test the property logConfig
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property buildTimeoutInMinutes (base name: "buildTimeoutInMinutes")', function() {
      // uncomment below and update the code to test the property buildTimeoutInMinutes
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property queuedTimeoutInMinutes (base name: "queuedTimeoutInMinutes")', function() {
      // uncomment below and update the code to test the property queuedTimeoutInMinutes
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property complete (base name: "complete")', function() {
      // uncomment below and update the code to test the property complete
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property initiator (base name: "initiator")', function() {
      // uncomment below and update the code to test the property initiator
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property vpcConfig (base name: "vpcConfig")', function() {
      // uncomment below and update the code to test the property vpcConfig
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property encryptionKey (base name: "encryptionKey")', function() {
      // uncomment below and update the code to test the property encryptionKey
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property buildBatchNumber (base name: "buildBatchNumber")', function() {
      // uncomment below and update the code to test the property buildBatchNumber
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property fileSystemLocations (base name: "fileSystemLocations")', function() {
      // uncomment below and update the code to test the property fileSystemLocations
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property buildBatchConfig (base name: "buildBatchConfig")', function() {
      // uncomment below and update the code to test the property buildBatchConfig
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property buildGroups (base name: "buildGroups")', function() {
      // uncomment below and update the code to test the property buildGroups
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

    it('should have the property debugSessionEnabled (base name: "debugSessionEnabled")', function() {
      // uncomment below and update the code to test the property debugSessionEnabled
      //var instance = new AwsCodeBuild.BuildBatch();
      //expect(instance).to.be();
    });

  });

}));
