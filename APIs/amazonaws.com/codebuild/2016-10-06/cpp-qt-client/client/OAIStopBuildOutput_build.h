/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStopBuildOutput_build.h
 *
 * 
 */

#ifndef OAIStopBuildOutput_build_H
#define OAIStopBuildOutput_build_H

#include <QJsonObject>

#include "OAIBuild_artifacts.h"
#include "OAIBuild_cache.h"
#include "OAIBuild_debugSession.h"
#include "OAIBuild_environment.h"
#include "OAIBuild_logs.h"
#include "OAIBuild_networkInterface.h"
#include "OAIBuild_source.h"
#include "OAIBuild_vpcConfig.h"
#include "OAIStatusType.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBuild_source;
class OAIBuild_artifacts;
class OAIBuild_cache;
class OAIBuild_environment;
class OAIBuild_logs;
class OAIBuild_vpcConfig;
class OAIBuild_networkInterface;
class OAIBuild_debugSession;

class OAIStopBuildOutput_build : public OAIObject {
public:
    OAIStopBuildOutput_build();
    OAIStopBuildOutput_build(QString json);
    ~OAIStopBuildOutput_build() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    qint32 getBuildNumber() const;
    void setBuildNumber(const qint32 &build_number);
    bool is_build_number_Set() const;
    bool is_build_number_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getCurrentPhase() const;
    void setCurrentPhase(const QString &current_phase);
    bool is_current_phase_Set() const;
    bool is_current_phase_Valid() const;

    OAIStatusType getBuildStatus() const;
    void setBuildStatus(const OAIStatusType &build_status);
    bool is_build_status_Set() const;
    bool is_build_status_Valid() const;

    QString getSourceVersion() const;
    void setSourceVersion(const QString &source_version);
    bool is_source_version_Set() const;
    bool is_source_version_Valid() const;

    QString getResolvedSourceVersion() const;
    void setResolvedSourceVersion(const QString &resolved_source_version);
    bool is_resolved_source_version_Set() const;
    bool is_resolved_source_version_Valid() const;

    QString getProjectName() const;
    void setProjectName(const QString &project_name);
    bool is_project_name_Set() const;
    bool is_project_name_Valid() const;

    QList getPhases() const;
    void setPhases(const QList &phases);
    bool is_phases_Set() const;
    bool is_phases_Valid() const;

    OAIBuild_source getSource() const;
    void setSource(const OAIBuild_source &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QList getSecondarySources() const;
    void setSecondarySources(const QList &secondary_sources);
    bool is_secondary_sources_Set() const;
    bool is_secondary_sources_Valid() const;

    QList getSecondarySourceVersions() const;
    void setSecondarySourceVersions(const QList &secondary_source_versions);
    bool is_secondary_source_versions_Set() const;
    bool is_secondary_source_versions_Valid() const;

    OAIBuild_artifacts getArtifacts() const;
    void setArtifacts(const OAIBuild_artifacts &artifacts);
    bool is_artifacts_Set() const;
    bool is_artifacts_Valid() const;

    QList getSecondaryArtifacts() const;
    void setSecondaryArtifacts(const QList &secondary_artifacts);
    bool is_secondary_artifacts_Set() const;
    bool is_secondary_artifacts_Valid() const;

    OAIBuild_cache getCache() const;
    void setCache(const OAIBuild_cache &cache);
    bool is_cache_Set() const;
    bool is_cache_Valid() const;

    OAIBuild_environment getEnvironment() const;
    void setEnvironment(const OAIBuild_environment &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    QString getServiceRole() const;
    void setServiceRole(const QString &service_role);
    bool is_service_role_Set() const;
    bool is_service_role_Valid() const;

    OAIBuild_logs getLogs() const;
    void setLogs(const OAIBuild_logs &logs);
    bool is_logs_Set() const;
    bool is_logs_Valid() const;

    qint32 getTimeoutInMinutes() const;
    void setTimeoutInMinutes(const qint32 &timeout_in_minutes);
    bool is_timeout_in_minutes_Set() const;
    bool is_timeout_in_minutes_Valid() const;

    qint32 getQueuedTimeoutInMinutes() const;
    void setQueuedTimeoutInMinutes(const qint32 &queued_timeout_in_minutes);
    bool is_queued_timeout_in_minutes_Set() const;
    bool is_queued_timeout_in_minutes_Valid() const;

    bool getBuildComplete() const;
    void setBuildComplete(const bool &build_complete);
    bool is_build_complete_Set() const;
    bool is_build_complete_Valid() const;

    QString getInitiator() const;
    void setInitiator(const QString &initiator);
    bool is_initiator_Set() const;
    bool is_initiator_Valid() const;

    OAIBuild_vpcConfig getVpcConfig() const;
    void setVpcConfig(const OAIBuild_vpcConfig &vpc_config);
    bool is_vpc_config_Set() const;
    bool is_vpc_config_Valid() const;

    OAIBuild_networkInterface getNetworkInterface() const;
    void setNetworkInterface(const OAIBuild_networkInterface &network_interface);
    bool is_network_interface_Set() const;
    bool is_network_interface_Valid() const;

    QString getEncryptionKey() const;
    void setEncryptionKey(const QString &encryption_key);
    bool is_encryption_key_Set() const;
    bool is_encryption_key_Valid() const;

    QList getExportedEnvironmentVariables() const;
    void setExportedEnvironmentVariables(const QList &exported_environment_variables);
    bool is_exported_environment_variables_Set() const;
    bool is_exported_environment_variables_Valid() const;

    QList getReportArns() const;
    void setReportArns(const QList &report_arns);
    bool is_report_arns_Set() const;
    bool is_report_arns_Valid() const;

    QList getFileSystemLocations() const;
    void setFileSystemLocations(const QList &file_system_locations);
    bool is_file_system_locations_Set() const;
    bool is_file_system_locations_Valid() const;

    OAIBuild_debugSession getDebugSession() const;
    void setDebugSession(const OAIBuild_debugSession &debug_session);
    bool is_debug_session_Set() const;
    bool is_debug_session_Valid() const;

    QString getBuildBatchArn() const;
    void setBuildBatchArn(const QString &build_batch_arn);
    bool is_build_batch_arn_Set() const;
    bool is_build_batch_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    qint32 m_build_number;
    bool m_build_number_isSet;
    bool m_build_number_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_current_phase;
    bool m_current_phase_isSet;
    bool m_current_phase_isValid;

    OAIStatusType m_build_status;
    bool m_build_status_isSet;
    bool m_build_status_isValid;

    QString m_source_version;
    bool m_source_version_isSet;
    bool m_source_version_isValid;

    QString m_resolved_source_version;
    bool m_resolved_source_version_isSet;
    bool m_resolved_source_version_isValid;

    QString m_project_name;
    bool m_project_name_isSet;
    bool m_project_name_isValid;

    QList m_phases;
    bool m_phases_isSet;
    bool m_phases_isValid;

    OAIBuild_source m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QList m_secondary_sources;
    bool m_secondary_sources_isSet;
    bool m_secondary_sources_isValid;

    QList m_secondary_source_versions;
    bool m_secondary_source_versions_isSet;
    bool m_secondary_source_versions_isValid;

    OAIBuild_artifacts m_artifacts;
    bool m_artifacts_isSet;
    bool m_artifacts_isValid;

    QList m_secondary_artifacts;
    bool m_secondary_artifacts_isSet;
    bool m_secondary_artifacts_isValid;

    OAIBuild_cache m_cache;
    bool m_cache_isSet;
    bool m_cache_isValid;

    OAIBuild_environment m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    QString m_service_role;
    bool m_service_role_isSet;
    bool m_service_role_isValid;

    OAIBuild_logs m_logs;
    bool m_logs_isSet;
    bool m_logs_isValid;

    qint32 m_timeout_in_minutes;
    bool m_timeout_in_minutes_isSet;
    bool m_timeout_in_minutes_isValid;

    qint32 m_queued_timeout_in_minutes;
    bool m_queued_timeout_in_minutes_isSet;
    bool m_queued_timeout_in_minutes_isValid;

    bool m_build_complete;
    bool m_build_complete_isSet;
    bool m_build_complete_isValid;

    QString m_initiator;
    bool m_initiator_isSet;
    bool m_initiator_isValid;

    OAIBuild_vpcConfig m_vpc_config;
    bool m_vpc_config_isSet;
    bool m_vpc_config_isValid;

    OAIBuild_networkInterface m_network_interface;
    bool m_network_interface_isSet;
    bool m_network_interface_isValid;

    QString m_encryption_key;
    bool m_encryption_key_isSet;
    bool m_encryption_key_isValid;

    QList m_exported_environment_variables;
    bool m_exported_environment_variables_isSet;
    bool m_exported_environment_variables_isValid;

    QList m_report_arns;
    bool m_report_arns_isSet;
    bool m_report_arns_isValid;

    QList m_file_system_locations;
    bool m_file_system_locations_isSet;
    bool m_file_system_locations_isValid;

    OAIBuild_debugSession m_debug_session;
    bool m_debug_session_isSet;
    bool m_debug_session_isValid;

    QString m_build_batch_arn;
    bool m_build_batch_arn_isSet;
    bool m_build_batch_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStopBuildOutput_build)

#endif // OAIStopBuildOutput_build_H
