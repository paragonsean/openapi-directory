/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBuild_logs.h
 *
 * 
 */

#ifndef OAIBuild_logs_H
#define OAIBuild_logs_H

#include <QJsonObject>

#include "OAILogsLocation_cloudWatchLogs.h"
#include "OAILogsLocation_s3Logs.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILogsLocation_cloudWatchLogs;
class OAILogsLocation_s3Logs;

class OAIBuild_logs : public OAIObject {
public:
    OAIBuild_logs();
    OAIBuild_logs(QString json);
    ~OAIBuild_logs() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGroupName() const;
    void setGroupName(const QString &group_name);
    bool is_group_name_Set() const;
    bool is_group_name_Valid() const;

    QString getStreamName() const;
    void setStreamName(const QString &stream_name);
    bool is_stream_name_Set() const;
    bool is_stream_name_Valid() const;

    QString getDeepLink() const;
    void setDeepLink(const QString &deep_link);
    bool is_deep_link_Set() const;
    bool is_deep_link_Valid() const;

    QString getS3DeepLink() const;
    void setS3DeepLink(const QString &s3_deep_link);
    bool is_s3_deep_link_Set() const;
    bool is_s3_deep_link_Valid() const;

    QString getCloudWatchLogsArn() const;
    void setCloudWatchLogsArn(const QString &cloud_watch_logs_arn);
    bool is_cloud_watch_logs_arn_Set() const;
    bool is_cloud_watch_logs_arn_Valid() const;

    QString getS3LogsArn() const;
    void setS3LogsArn(const QString &s3_logs_arn);
    bool is_s3_logs_arn_Set() const;
    bool is_s3_logs_arn_Valid() const;

    OAILogsLocation_cloudWatchLogs getCloudWatchLogs() const;
    void setCloudWatchLogs(const OAILogsLocation_cloudWatchLogs &cloud_watch_logs);
    bool is_cloud_watch_logs_Set() const;
    bool is_cloud_watch_logs_Valid() const;

    OAILogsLocation_s3Logs getS3Logs() const;
    void setS3Logs(const OAILogsLocation_s3Logs &s3_logs);
    bool is_s3_logs_Set() const;
    bool is_s3_logs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_group_name;
    bool m_group_name_isSet;
    bool m_group_name_isValid;

    QString m_stream_name;
    bool m_stream_name_isSet;
    bool m_stream_name_isValid;

    QString m_deep_link;
    bool m_deep_link_isSet;
    bool m_deep_link_isValid;

    QString m_s3_deep_link;
    bool m_s3_deep_link_isSet;
    bool m_s3_deep_link_isValid;

    QString m_cloud_watch_logs_arn;
    bool m_cloud_watch_logs_arn_isSet;
    bool m_cloud_watch_logs_arn_isValid;

    QString m_s3_logs_arn;
    bool m_s3_logs_arn_isSet;
    bool m_s3_logs_arn_isValid;

    OAILogsLocation_cloudWatchLogs m_cloud_watch_logs;
    bool m_cloud_watch_logs_isSet;
    bool m_cloud_watch_logs_isValid;

    OAILogsLocation_s3Logs m_s3_logs;
    bool m_s3_logs_isSet;
    bool m_s3_logs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBuild_logs)

#endif // OAIBuild_logs_H
