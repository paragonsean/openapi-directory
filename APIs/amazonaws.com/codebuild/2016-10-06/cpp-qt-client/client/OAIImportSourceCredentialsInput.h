/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImportSourceCredentialsInput.h
 *
 * 
 */

#ifndef OAIImportSourceCredentialsInput_H
#define OAIImportSourceCredentialsInput_H

#include <QJsonObject>

#include "OAIAuthType.h"
#include "OAIServerType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImportSourceCredentialsInput : public OAIObject {
public:
    OAIImportSourceCredentialsInput();
    OAIImportSourceCredentialsInput(QString json);
    ~OAIImportSourceCredentialsInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    QString getToken() const;
    void setToken(const QString &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    OAIServerType getServerType() const;
    void setServerType(const OAIServerType &server_type);
    bool is_server_type_Set() const;
    bool is_server_type_Valid() const;

    OAIAuthType getAuthType() const;
    void setAuthType(const OAIAuthType &auth_type);
    bool is_auth_type_Set() const;
    bool is_auth_type_Valid() const;

    bool getShouldOverwrite() const;
    void setShouldOverwrite(const bool &should_overwrite);
    bool is_should_overwrite_Set() const;
    bool is_should_overwrite_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;

    QString m_token;
    bool m_token_isSet;
    bool m_token_isValid;

    OAIServerType m_server_type;
    bool m_server_type_isSet;
    bool m_server_type_isValid;

    OAIAuthType m_auth_type;
    bool m_auth_type_isSet;
    bool m_auth_type_isValid;

    bool m_should_overwrite;
    bool m_should_overwrite_isSet;
    bool m_should_overwrite_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImportSourceCredentialsInput)

#endif // OAIImportSourceCredentialsInput_H
