/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateProjectInput_logsConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateProjectInput_logsConfig::OAICreateProjectInput_logsConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateProjectInput_logsConfig::OAICreateProjectInput_logsConfig() {
    this->initializeModel();
}

OAICreateProjectInput_logsConfig::~OAICreateProjectInput_logsConfig() {}

void OAICreateProjectInput_logsConfig::initializeModel() {

    m_cloud_watch_logs_isSet = false;
    m_cloud_watch_logs_isValid = false;

    m_s3_logs_isSet = false;
    m_s3_logs_isValid = false;
}

void OAICreateProjectInput_logsConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateProjectInput_logsConfig::fromJsonObject(QJsonObject json) {

    m_cloud_watch_logs_isValid = ::OpenAPI::fromJsonValue(m_cloud_watch_logs, json[QString("cloudWatchLogs")]);
    m_cloud_watch_logs_isSet = !json[QString("cloudWatchLogs")].isNull() && m_cloud_watch_logs_isValid;

    m_s3_logs_isValid = ::OpenAPI::fromJsonValue(m_s3_logs, json[QString("s3Logs")]);
    m_s3_logs_isSet = !json[QString("s3Logs")].isNull() && m_s3_logs_isValid;
}

QString OAICreateProjectInput_logsConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateProjectInput_logsConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_watch_logs.isSet()) {
        obj.insert(QString("cloudWatchLogs"), ::OpenAPI::toJsonValue(m_cloud_watch_logs));
    }
    if (m_s3_logs.isSet()) {
        obj.insert(QString("s3Logs"), ::OpenAPI::toJsonValue(m_s3_logs));
    }
    return obj;
}

OAILogsConfig_cloudWatchLogs OAICreateProjectInput_logsConfig::getCloudWatchLogs() const {
    return m_cloud_watch_logs;
}
void OAICreateProjectInput_logsConfig::setCloudWatchLogs(const OAILogsConfig_cloudWatchLogs &cloud_watch_logs) {
    m_cloud_watch_logs = cloud_watch_logs;
    m_cloud_watch_logs_isSet = true;
}

bool OAICreateProjectInput_logsConfig::is_cloud_watch_logs_Set() const{
    return m_cloud_watch_logs_isSet;
}

bool OAICreateProjectInput_logsConfig::is_cloud_watch_logs_Valid() const{
    return m_cloud_watch_logs_isValid;
}

OAILogsConfig_s3Logs OAICreateProjectInput_logsConfig::getS3Logs() const {
    return m_s3_logs;
}
void OAICreateProjectInput_logsConfig::setS3Logs(const OAILogsConfig_s3Logs &s3_logs) {
    m_s3_logs = s3_logs;
    m_s3_logs_isSet = true;
}

bool OAICreateProjectInput_logsConfig::is_s3_logs_Set() const{
    return m_s3_logs_isSet;
}

bool OAICreateProjectInput_logsConfig::is_s3_logs_Valid() const{
    return m_s3_logs_isValid;
}

bool OAICreateProjectInput_logsConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_watch_logs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3_logs.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateProjectInput_logsConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
