/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateReportGroupInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateReportGroupInput::OAIUpdateReportGroupInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateReportGroupInput::OAIUpdateReportGroupInput() {
    this->initializeModel();
}

OAIUpdateReportGroupInput::~OAIUpdateReportGroupInput() {}

void OAIUpdateReportGroupInput::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_export_config_isSet = false;
    m_export_config_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIUpdateReportGroupInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateReportGroupInput::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_export_config_isValid = ::OpenAPI::fromJsonValue(m_export_config, json[QString("exportConfig")]);
    m_export_config_isSet = !json[QString("exportConfig")].isNull() && m_export_config_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAIUpdateReportGroupInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateReportGroupInput::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_export_config.isSet()) {
        obj.insert(QString("exportConfig"), ::OpenAPI::toJsonValue(m_export_config));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAIUpdateReportGroupInput::getArn() const {
    return m_arn;
}
void OAIUpdateReportGroupInput::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIUpdateReportGroupInput::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIUpdateReportGroupInput::is_arn_Valid() const{
    return m_arn_isValid;
}

OAIUpdateReportGroupInput_exportConfig OAIUpdateReportGroupInput::getExportConfig() const {
    return m_export_config;
}
void OAIUpdateReportGroupInput::setExportConfig(const OAIUpdateReportGroupInput_exportConfig &export_config) {
    m_export_config = export_config;
    m_export_config_isSet = true;
}

bool OAIUpdateReportGroupInput::is_export_config_Set() const{
    return m_export_config_isSet;
}

bool OAIUpdateReportGroupInput::is_export_config_Valid() const{
    return m_export_config_isValid;
}

QList OAIUpdateReportGroupInput::getTags() const {
    return m_tags;
}
void OAIUpdateReportGroupInput::setTags(const QList &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIUpdateReportGroupInput::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIUpdateReportGroupInput::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIUpdateReportGroupInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateReportGroupInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_arn_isValid && true;
}

} // namespace OpenAPI
