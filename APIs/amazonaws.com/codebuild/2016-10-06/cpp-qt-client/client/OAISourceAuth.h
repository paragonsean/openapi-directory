/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISourceAuth.h
 *
 * &lt;p&gt;Information about the authorization settings for CodeBuild to access the source code to be built.&lt;/p&gt; &lt;p&gt;This information is for the CodeBuild console&#39;s use only. Your code should not get or set this information directly.&lt;/p&gt;
 */

#ifndef OAISourceAuth_H
#define OAISourceAuth_H

#include <QJsonObject>

#include "OAISourceAuthType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISourceAuth : public OAIObject {
public:
    OAISourceAuth();
    OAISourceAuth(QString json);
    ~OAISourceAuth() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISourceAuthType getType() const;
    void setType(const OAISourceAuthType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getResource() const;
    void setResource(const QString &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISourceAuthType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISourceAuth)

#endif // OAISourceAuth_H
