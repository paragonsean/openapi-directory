/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReportExportConfig_s3Destination.h
 *
 * 
 */

#ifndef OAIReportExportConfig_s3Destination_H
#define OAIReportExportConfig_s3Destination_H

#include <QJsonObject>

#include "OAIReportPackagingType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReportExportConfig_s3Destination : public OAIObject {
public:
    OAIReportExportConfig_s3Destination();
    OAIReportExportConfig_s3Destination(QString json);
    ~OAIReportExportConfig_s3Destination() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBucket() const;
    void setBucket(const QString &bucket);
    bool is_bucket_Set() const;
    bool is_bucket_Valid() const;

    QString getBucketOwner() const;
    void setBucketOwner(const QString &bucket_owner);
    bool is_bucket_owner_Set() const;
    bool is_bucket_owner_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    OAIReportPackagingType getPackaging() const;
    void setPackaging(const OAIReportPackagingType &packaging);
    bool is_packaging_Set() const;
    bool is_packaging_Valid() const;

    QString getEncryptionKey() const;
    void setEncryptionKey(const QString &encryption_key);
    bool is_encryption_key_Set() const;
    bool is_encryption_key_Valid() const;

    bool getEncryptionDisabled() const;
    void setEncryptionDisabled(const bool &encryption_disabled);
    bool is_encryption_disabled_Set() const;
    bool is_encryption_disabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bucket;
    bool m_bucket_isSet;
    bool m_bucket_isValid;

    QString m_bucket_owner;
    bool m_bucket_owner_isSet;
    bool m_bucket_owner_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    OAIReportPackagingType m_packaging;
    bool m_packaging_isSet;
    bool m_packaging_isValid;

    QString m_encryption_key;
    bool m_encryption_key_isSet;
    bool m_encryption_key_isValid;

    bool m_encryption_disabled;
    bool m_encryption_disabled_isSet;
    bool m_encryption_disabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReportExportConfig_s3Destination)

#endif // OAIReportExportConfig_s3Destination_H
