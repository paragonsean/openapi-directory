/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeCodeCoveragesInput.h
 *
 * 
 */

#ifndef OAIDescribeCodeCoveragesInput_H
#define OAIDescribeCodeCoveragesInput_H

#include <QJsonObject>

#include "OAIReportCodeCoverageSortByType.h"
#include "OAISortOrderType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeCodeCoveragesInput : public OAIObject {
public:
    OAIDescribeCodeCoveragesInput();
    OAIDescribeCodeCoveragesInput(QString json);
    ~OAIDescribeCodeCoveragesInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getReportArn() const;
    void setReportArn(const QString &report_arn);
    bool is_report_arn_Set() const;
    bool is_report_arn_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    OAISortOrderType getSortOrder() const;
    void setSortOrder(const OAISortOrderType &sort_order);
    bool is_sort_order_Set() const;
    bool is_sort_order_Valid() const;

    OAIReportCodeCoverageSortByType getSortBy() const;
    void setSortBy(const OAIReportCodeCoverageSortByType &sort_by);
    bool is_sort_by_Set() const;
    bool is_sort_by_Valid() const;

    double getMinLineCoveragePercentage() const;
    void setMinLineCoveragePercentage(const double &min_line_coverage_percentage);
    bool is_min_line_coverage_percentage_Set() const;
    bool is_min_line_coverage_percentage_Valid() const;

    double getMaxLineCoveragePercentage() const;
    void setMaxLineCoveragePercentage(const double &max_line_coverage_percentage);
    bool is_max_line_coverage_percentage_Set() const;
    bool is_max_line_coverage_percentage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_report_arn;
    bool m_report_arn_isSet;
    bool m_report_arn_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    OAISortOrderType m_sort_order;
    bool m_sort_order_isSet;
    bool m_sort_order_isValid;

    OAIReportCodeCoverageSortByType m_sort_by;
    bool m_sort_by_isSet;
    bool m_sort_by_isValid;

    double m_min_line_coverage_percentage;
    bool m_min_line_coverage_percentage_isSet;
    bool m_min_line_coverage_percentage_isValid;

    double m_max_line_coverage_percentage;
    bool m_max_line_coverage_percentage_isSet;
    bool m_max_line_coverage_percentage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeCodeCoveragesInput)

#endif // OAIDescribeCodeCoveragesInput_H
