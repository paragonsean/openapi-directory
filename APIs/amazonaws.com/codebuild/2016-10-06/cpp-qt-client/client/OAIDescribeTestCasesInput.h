/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeTestCasesInput.h
 *
 * 
 */

#ifndef OAIDescribeTestCasesInput_H
#define OAIDescribeTestCasesInput_H

#include <QJsonObject>

#include "OAIDescribeTestCasesInput_filter.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeTestCasesInput_filter;

class OAIDescribeTestCasesInput : public OAIObject {
public:
    OAIDescribeTestCasesInput();
    OAIDescribeTestCasesInput(QString json);
    ~OAIDescribeTestCasesInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getReportArn() const;
    void setReportArn(const QString &report_arn);
    bool is_report_arn_Set() const;
    bool is_report_arn_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    OAIDescribeTestCasesInput_filter getFilter() const;
    void setFilter(const OAIDescribeTestCasesInput_filter &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_report_arn;
    bool m_report_arn_isSet;
    bool m_report_arn_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    OAIDescribeTestCasesInput_filter m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeTestCasesInput)

#endif // OAIDescribeTestCasesInput_H
