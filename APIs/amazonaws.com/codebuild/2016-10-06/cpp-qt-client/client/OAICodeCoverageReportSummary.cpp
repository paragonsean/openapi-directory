/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICodeCoverageReportSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICodeCoverageReportSummary::OAICodeCoverageReportSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICodeCoverageReportSummary::OAICodeCoverageReportSummary() {
    this->initializeModel();
}

OAICodeCoverageReportSummary::~OAICodeCoverageReportSummary() {}

void OAICodeCoverageReportSummary::initializeModel() {

    m_line_coverage_percentage_isSet = false;
    m_line_coverage_percentage_isValid = false;

    m_lines_covered_isSet = false;
    m_lines_covered_isValid = false;

    m_lines_missed_isSet = false;
    m_lines_missed_isValid = false;

    m_branch_coverage_percentage_isSet = false;
    m_branch_coverage_percentage_isValid = false;

    m_branches_covered_isSet = false;
    m_branches_covered_isValid = false;

    m_branches_missed_isSet = false;
    m_branches_missed_isValid = false;
}

void OAICodeCoverageReportSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICodeCoverageReportSummary::fromJsonObject(QJsonObject json) {

    m_line_coverage_percentage_isValid = ::OpenAPI::fromJsonValue(m_line_coverage_percentage, json[QString("lineCoveragePercentage")]);
    m_line_coverage_percentage_isSet = !json[QString("lineCoveragePercentage")].isNull() && m_line_coverage_percentage_isValid;

    m_lines_covered_isValid = ::OpenAPI::fromJsonValue(m_lines_covered, json[QString("linesCovered")]);
    m_lines_covered_isSet = !json[QString("linesCovered")].isNull() && m_lines_covered_isValid;

    m_lines_missed_isValid = ::OpenAPI::fromJsonValue(m_lines_missed, json[QString("linesMissed")]);
    m_lines_missed_isSet = !json[QString("linesMissed")].isNull() && m_lines_missed_isValid;

    m_branch_coverage_percentage_isValid = ::OpenAPI::fromJsonValue(m_branch_coverage_percentage, json[QString("branchCoveragePercentage")]);
    m_branch_coverage_percentage_isSet = !json[QString("branchCoveragePercentage")].isNull() && m_branch_coverage_percentage_isValid;

    m_branches_covered_isValid = ::OpenAPI::fromJsonValue(m_branches_covered, json[QString("branchesCovered")]);
    m_branches_covered_isSet = !json[QString("branchesCovered")].isNull() && m_branches_covered_isValid;

    m_branches_missed_isValid = ::OpenAPI::fromJsonValue(m_branches_missed, json[QString("branchesMissed")]);
    m_branches_missed_isSet = !json[QString("branchesMissed")].isNull() && m_branches_missed_isValid;
}

QString OAICodeCoverageReportSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICodeCoverageReportSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_line_coverage_percentage_isSet) {
        obj.insert(QString("lineCoveragePercentage"), ::OpenAPI::toJsonValue(m_line_coverage_percentage));
    }
    if (m_lines_covered_isSet) {
        obj.insert(QString("linesCovered"), ::OpenAPI::toJsonValue(m_lines_covered));
    }
    if (m_lines_missed_isSet) {
        obj.insert(QString("linesMissed"), ::OpenAPI::toJsonValue(m_lines_missed));
    }
    if (m_branch_coverage_percentage_isSet) {
        obj.insert(QString("branchCoveragePercentage"), ::OpenAPI::toJsonValue(m_branch_coverage_percentage));
    }
    if (m_branches_covered_isSet) {
        obj.insert(QString("branchesCovered"), ::OpenAPI::toJsonValue(m_branches_covered));
    }
    if (m_branches_missed_isSet) {
        obj.insert(QString("branchesMissed"), ::OpenAPI::toJsonValue(m_branches_missed));
    }
    return obj;
}

double OAICodeCoverageReportSummary::getLineCoveragePercentage() const {
    return m_line_coverage_percentage;
}
void OAICodeCoverageReportSummary::setLineCoveragePercentage(const double &line_coverage_percentage) {
    m_line_coverage_percentage = line_coverage_percentage;
    m_line_coverage_percentage_isSet = true;
}

bool OAICodeCoverageReportSummary::is_line_coverage_percentage_Set() const{
    return m_line_coverage_percentage_isSet;
}

bool OAICodeCoverageReportSummary::is_line_coverage_percentage_Valid() const{
    return m_line_coverage_percentage_isValid;
}

qint32 OAICodeCoverageReportSummary::getLinesCovered() const {
    return m_lines_covered;
}
void OAICodeCoverageReportSummary::setLinesCovered(const qint32 &lines_covered) {
    m_lines_covered = lines_covered;
    m_lines_covered_isSet = true;
}

bool OAICodeCoverageReportSummary::is_lines_covered_Set() const{
    return m_lines_covered_isSet;
}

bool OAICodeCoverageReportSummary::is_lines_covered_Valid() const{
    return m_lines_covered_isValid;
}

qint32 OAICodeCoverageReportSummary::getLinesMissed() const {
    return m_lines_missed;
}
void OAICodeCoverageReportSummary::setLinesMissed(const qint32 &lines_missed) {
    m_lines_missed = lines_missed;
    m_lines_missed_isSet = true;
}

bool OAICodeCoverageReportSummary::is_lines_missed_Set() const{
    return m_lines_missed_isSet;
}

bool OAICodeCoverageReportSummary::is_lines_missed_Valid() const{
    return m_lines_missed_isValid;
}

double OAICodeCoverageReportSummary::getBranchCoveragePercentage() const {
    return m_branch_coverage_percentage;
}
void OAICodeCoverageReportSummary::setBranchCoveragePercentage(const double &branch_coverage_percentage) {
    m_branch_coverage_percentage = branch_coverage_percentage;
    m_branch_coverage_percentage_isSet = true;
}

bool OAICodeCoverageReportSummary::is_branch_coverage_percentage_Set() const{
    return m_branch_coverage_percentage_isSet;
}

bool OAICodeCoverageReportSummary::is_branch_coverage_percentage_Valid() const{
    return m_branch_coverage_percentage_isValid;
}

qint32 OAICodeCoverageReportSummary::getBranchesCovered() const {
    return m_branches_covered;
}
void OAICodeCoverageReportSummary::setBranchesCovered(const qint32 &branches_covered) {
    m_branches_covered = branches_covered;
    m_branches_covered_isSet = true;
}

bool OAICodeCoverageReportSummary::is_branches_covered_Set() const{
    return m_branches_covered_isSet;
}

bool OAICodeCoverageReportSummary::is_branches_covered_Valid() const{
    return m_branches_covered_isValid;
}

qint32 OAICodeCoverageReportSummary::getBranchesMissed() const {
    return m_branches_missed;
}
void OAICodeCoverageReportSummary::setBranchesMissed(const qint32 &branches_missed) {
    m_branches_missed = branches_missed;
    m_branches_missed_isSet = true;
}

bool OAICodeCoverageReportSummary::is_branches_missed_Set() const{
    return m_branches_missed_isSet;
}

bool OAICodeCoverageReportSummary::is_branches_missed_Valid() const{
    return m_branches_missed_isValid;
}

bool OAICodeCoverageReportSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_line_coverage_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lines_covered_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lines_missed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_branch_coverage_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_branches_covered_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_branches_missed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICodeCoverageReportSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
