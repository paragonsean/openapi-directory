/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProjectFileSystemLocation.h
 *
 *  Information about a file system created by Amazon Elastic File System (EFS). For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html\&quot;&gt;What Is Amazon Elastic File System?&lt;/a&gt; 
 */

#ifndef OAIProjectFileSystemLocation_H
#define OAIProjectFileSystemLocation_H

#include <QJsonObject>

#include "OAIFileSystemType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProjectFileSystemLocation : public OAIObject {
public:
    OAIProjectFileSystemLocation();
    OAIProjectFileSystemLocation(QString json);
    ~OAIProjectFileSystemLocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFileSystemType getType() const;
    void setType(const OAIFileSystemType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getMountPoint() const;
    void setMountPoint(const QString &mount_point);
    bool is_mount_point_Set() const;
    bool is_mount_point_Valid() const;

    QString getIdentifier() const;
    void setIdentifier(const QString &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    QString getMountOptions() const;
    void setMountOptions(const QString &mount_options);
    bool is_mount_options_Set() const;
    bool is_mount_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFileSystemType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_mount_point;
    bool m_mount_point_isSet;
    bool m_mount_point_isValid;

    QString m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    QString m_mount_options;
    bool m_mount_options_isSet;
    bool m_mount_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProjectFileSystemLocation)

#endif // OAIProjectFileSystemLocation_H
