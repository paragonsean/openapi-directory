/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartBuildBatchInput_buildBatchConfigOverride.h
 *
 * 
 */

#ifndef OAIStartBuildBatchInput_buildBatchConfigOverride_H
#define OAIStartBuildBatchInput_buildBatchConfigOverride_H

#include <QJsonObject>

#include "OAIBatchReportModeType.h"
#include "OAIProjectBuildBatchConfig_restrictions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProjectBuildBatchConfig_restrictions;

class OAIStartBuildBatchInput_buildBatchConfigOverride : public OAIObject {
public:
    OAIStartBuildBatchInput_buildBatchConfigOverride();
    OAIStartBuildBatchInput_buildBatchConfigOverride(QString json);
    ~OAIStartBuildBatchInput_buildBatchConfigOverride() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getServiceRole() const;
    void setServiceRole(const QString &service_role);
    bool is_service_role_Set() const;
    bool is_service_role_Valid() const;

    bool getCombineArtifacts() const;
    void setCombineArtifacts(const bool &combine_artifacts);
    bool is_combine_artifacts_Set() const;
    bool is_combine_artifacts_Valid() const;

    OAIProjectBuildBatchConfig_restrictions getRestrictions() const;
    void setRestrictions(const OAIProjectBuildBatchConfig_restrictions &restrictions);
    bool is_restrictions_Set() const;
    bool is_restrictions_Valid() const;

    qint32 getTimeoutInMins() const;
    void setTimeoutInMins(const qint32 &timeout_in_mins);
    bool is_timeout_in_mins_Set() const;
    bool is_timeout_in_mins_Valid() const;

    OAIBatchReportModeType getBatchReportMode() const;
    void setBatchReportMode(const OAIBatchReportModeType &batch_report_mode);
    bool is_batch_report_mode_Set() const;
    bool is_batch_report_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_service_role;
    bool m_service_role_isSet;
    bool m_service_role_isValid;

    bool m_combine_artifacts;
    bool m_combine_artifacts_isSet;
    bool m_combine_artifacts_isValid;

    OAIProjectBuildBatchConfig_restrictions m_restrictions;
    bool m_restrictions_isSet;
    bool m_restrictions_isValid;

    qint32 m_timeout_in_mins;
    bool m_timeout_in_mins_isSet;
    bool m_timeout_in_mins_isValid;

    OAIBatchReportModeType m_batch_report_mode;
    bool m_batch_report_mode_isSet;
    bool m_batch_report_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartBuildBatchInput_buildBatchConfigOverride)

#endif // OAIStartBuildBatchInput_buildBatchConfigOverride_H
