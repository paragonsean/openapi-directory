/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProject_vpcConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProject_vpcConfig::OAIProject_vpcConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProject_vpcConfig::OAIProject_vpcConfig() {
    this->initializeModel();
}

OAIProject_vpcConfig::~OAIProject_vpcConfig() {}

void OAIProject_vpcConfig::initializeModel() {

    m_vpc_id_isSet = false;
    m_vpc_id_isValid = false;

    m_subnets_isSet = false;
    m_subnets_isValid = false;

    m_security_group_ids_isSet = false;
    m_security_group_ids_isValid = false;
}

void OAIProject_vpcConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProject_vpcConfig::fromJsonObject(QJsonObject json) {

    m_vpc_id_isValid = ::OpenAPI::fromJsonValue(m_vpc_id, json[QString("vpcId")]);
    m_vpc_id_isSet = !json[QString("vpcId")].isNull() && m_vpc_id_isValid;

    m_subnets_isValid = ::OpenAPI::fromJsonValue(m_subnets, json[QString("subnets")]);
    m_subnets_isSet = !json[QString("subnets")].isNull() && m_subnets_isValid;

    m_security_group_ids_isValid = ::OpenAPI::fromJsonValue(m_security_group_ids, json[QString("securityGroupIds")]);
    m_security_group_ids_isSet = !json[QString("securityGroupIds")].isNull() && m_security_group_ids_isValid;
}

QString OAIProject_vpcConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProject_vpcConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_vpc_id_isSet) {
        obj.insert(QString("vpcId"), ::OpenAPI::toJsonValue(m_vpc_id));
    }
    if (m_subnets.isSet()) {
        obj.insert(QString("subnets"), ::OpenAPI::toJsonValue(m_subnets));
    }
    if (m_security_group_ids.isSet()) {
        obj.insert(QString("securityGroupIds"), ::OpenAPI::toJsonValue(m_security_group_ids));
    }
    return obj;
}

QString OAIProject_vpcConfig::getVpcId() const {
    return m_vpc_id;
}
void OAIProject_vpcConfig::setVpcId(const QString &vpc_id) {
    m_vpc_id = vpc_id;
    m_vpc_id_isSet = true;
}

bool OAIProject_vpcConfig::is_vpc_id_Set() const{
    return m_vpc_id_isSet;
}

bool OAIProject_vpcConfig::is_vpc_id_Valid() const{
    return m_vpc_id_isValid;
}

QList OAIProject_vpcConfig::getSubnets() const {
    return m_subnets;
}
void OAIProject_vpcConfig::setSubnets(const QList &subnets) {
    m_subnets = subnets;
    m_subnets_isSet = true;
}

bool OAIProject_vpcConfig::is_subnets_Set() const{
    return m_subnets_isSet;
}

bool OAIProject_vpcConfig::is_subnets_Valid() const{
    return m_subnets_isValid;
}

QList OAIProject_vpcConfig::getSecurityGroupIds() const {
    return m_security_group_ids;
}
void OAIProject_vpcConfig::setSecurityGroupIds(const QList &security_group_ids) {
    m_security_group_ids = security_group_ids;
    m_security_group_ids_isSet = true;
}

bool OAIProject_vpcConfig::is_security_group_ids_Set() const{
    return m_security_group_ids_isSet;
}

bool OAIProject_vpcConfig::is_security_group_ids_Valid() const{
    return m_security_group_ids_isValid;
}

bool OAIProject_vpcConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vpc_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subnets.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_group_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProject_vpcConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
