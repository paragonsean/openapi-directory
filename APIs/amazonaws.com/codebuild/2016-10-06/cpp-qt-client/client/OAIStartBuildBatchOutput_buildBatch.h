/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartBuildBatchOutput_buildBatch.h
 *
 * 
 */

#ifndef OAIStartBuildBatchOutput_buildBatch_H
#define OAIStartBuildBatchOutput_buildBatch_H

#include <QJsonObject>

#include "OAIBuildBatch_artifacts.h"
#include "OAILogsConfig.h"
#include "OAIProjectBuildBatchConfig.h"
#include "OAIProjectCache.h"
#include "OAIProjectEnvironment.h"
#include "OAIProjectSource.h"
#include "OAIStatusType.h"
#include "OAIVpcConfig.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProjectSource;
class OAIBuildBatch_artifacts;
class OAIProjectCache;
class OAIProjectEnvironment;
class OAILogsConfig;
class OAIVpcConfig;
class OAIProjectBuildBatchConfig;

class OAIStartBuildBatchOutput_buildBatch : public OAIObject {
public:
    OAIStartBuildBatchOutput_buildBatch();
    OAIStartBuildBatchOutput_buildBatch(QString json);
    ~OAIStartBuildBatchOutput_buildBatch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getCurrentPhase() const;
    void setCurrentPhase(const QString &current_phase);
    bool is_current_phase_Set() const;
    bool is_current_phase_Valid() const;

    OAIStatusType getBuildBatchStatus() const;
    void setBuildBatchStatus(const OAIStatusType &build_batch_status);
    bool is_build_batch_status_Set() const;
    bool is_build_batch_status_Valid() const;

    QString getSourceVersion() const;
    void setSourceVersion(const QString &source_version);
    bool is_source_version_Set() const;
    bool is_source_version_Valid() const;

    QString getResolvedSourceVersion() const;
    void setResolvedSourceVersion(const QString &resolved_source_version);
    bool is_resolved_source_version_Set() const;
    bool is_resolved_source_version_Valid() const;

    QString getProjectName() const;
    void setProjectName(const QString &project_name);
    bool is_project_name_Set() const;
    bool is_project_name_Valid() const;

    QList getPhases() const;
    void setPhases(const QList &phases);
    bool is_phases_Set() const;
    bool is_phases_Valid() const;

    OAIProjectSource getSource() const;
    void setSource(const OAIProjectSource &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QList getSecondarySources() const;
    void setSecondarySources(const QList &secondary_sources);
    bool is_secondary_sources_Set() const;
    bool is_secondary_sources_Valid() const;

    QList getSecondarySourceVersions() const;
    void setSecondarySourceVersions(const QList &secondary_source_versions);
    bool is_secondary_source_versions_Set() const;
    bool is_secondary_source_versions_Valid() const;

    OAIBuildBatch_artifacts getArtifacts() const;
    void setArtifacts(const OAIBuildBatch_artifacts &artifacts);
    bool is_artifacts_Set() const;
    bool is_artifacts_Valid() const;

    QList getSecondaryArtifacts() const;
    void setSecondaryArtifacts(const QList &secondary_artifacts);
    bool is_secondary_artifacts_Set() const;
    bool is_secondary_artifacts_Valid() const;

    OAIProjectCache getCache() const;
    void setCache(const OAIProjectCache &cache);
    bool is_cache_Set() const;
    bool is_cache_Valid() const;

    OAIProjectEnvironment getEnvironment() const;
    void setEnvironment(const OAIProjectEnvironment &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    QString getServiceRole() const;
    void setServiceRole(const QString &service_role);
    bool is_service_role_Set() const;
    bool is_service_role_Valid() const;

    OAILogsConfig getLogConfig() const;
    void setLogConfig(const OAILogsConfig &log_config);
    bool is_log_config_Set() const;
    bool is_log_config_Valid() const;

    qint32 getBuildTimeoutInMinutes() const;
    void setBuildTimeoutInMinutes(const qint32 &build_timeout_in_minutes);
    bool is_build_timeout_in_minutes_Set() const;
    bool is_build_timeout_in_minutes_Valid() const;

    qint32 getQueuedTimeoutInMinutes() const;
    void setQueuedTimeoutInMinutes(const qint32 &queued_timeout_in_minutes);
    bool is_queued_timeout_in_minutes_Set() const;
    bool is_queued_timeout_in_minutes_Valid() const;

    bool getComplete() const;
    void setComplete(const bool &complete);
    bool is_complete_Set() const;
    bool is_complete_Valid() const;

    QString getInitiator() const;
    void setInitiator(const QString &initiator);
    bool is_initiator_Set() const;
    bool is_initiator_Valid() const;

    OAIVpcConfig getVpcConfig() const;
    void setVpcConfig(const OAIVpcConfig &vpc_config);
    bool is_vpc_config_Set() const;
    bool is_vpc_config_Valid() const;

    QString getEncryptionKey() const;
    void setEncryptionKey(const QString &encryption_key);
    bool is_encryption_key_Set() const;
    bool is_encryption_key_Valid() const;

    qint32 getBuildBatchNumber() const;
    void setBuildBatchNumber(const qint32 &build_batch_number);
    bool is_build_batch_number_Set() const;
    bool is_build_batch_number_Valid() const;

    QList getFileSystemLocations() const;
    void setFileSystemLocations(const QList &file_system_locations);
    bool is_file_system_locations_Set() const;
    bool is_file_system_locations_Valid() const;

    OAIProjectBuildBatchConfig getBuildBatchConfig() const;
    void setBuildBatchConfig(const OAIProjectBuildBatchConfig &build_batch_config);
    bool is_build_batch_config_Set() const;
    bool is_build_batch_config_Valid() const;

    QList getBuildGroups() const;
    void setBuildGroups(const QList &build_groups);
    bool is_build_groups_Set() const;
    bool is_build_groups_Valid() const;

    bool getDebugSessionEnabled() const;
    void setDebugSessionEnabled(const bool &debug_session_enabled);
    bool is_debug_session_enabled_Set() const;
    bool is_debug_session_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_current_phase;
    bool m_current_phase_isSet;
    bool m_current_phase_isValid;

    OAIStatusType m_build_batch_status;
    bool m_build_batch_status_isSet;
    bool m_build_batch_status_isValid;

    QString m_source_version;
    bool m_source_version_isSet;
    bool m_source_version_isValid;

    QString m_resolved_source_version;
    bool m_resolved_source_version_isSet;
    bool m_resolved_source_version_isValid;

    QString m_project_name;
    bool m_project_name_isSet;
    bool m_project_name_isValid;

    QList m_phases;
    bool m_phases_isSet;
    bool m_phases_isValid;

    OAIProjectSource m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QList m_secondary_sources;
    bool m_secondary_sources_isSet;
    bool m_secondary_sources_isValid;

    QList m_secondary_source_versions;
    bool m_secondary_source_versions_isSet;
    bool m_secondary_source_versions_isValid;

    OAIBuildBatch_artifacts m_artifacts;
    bool m_artifacts_isSet;
    bool m_artifacts_isValid;

    QList m_secondary_artifacts;
    bool m_secondary_artifacts_isSet;
    bool m_secondary_artifacts_isValid;

    OAIProjectCache m_cache;
    bool m_cache_isSet;
    bool m_cache_isValid;

    OAIProjectEnvironment m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    QString m_service_role;
    bool m_service_role_isSet;
    bool m_service_role_isValid;

    OAILogsConfig m_log_config;
    bool m_log_config_isSet;
    bool m_log_config_isValid;

    qint32 m_build_timeout_in_minutes;
    bool m_build_timeout_in_minutes_isSet;
    bool m_build_timeout_in_minutes_isValid;

    qint32 m_queued_timeout_in_minutes;
    bool m_queued_timeout_in_minutes_isSet;
    bool m_queued_timeout_in_minutes_isValid;

    bool m_complete;
    bool m_complete_isSet;
    bool m_complete_isValid;

    QString m_initiator;
    bool m_initiator_isSet;
    bool m_initiator_isValid;

    OAIVpcConfig m_vpc_config;
    bool m_vpc_config_isSet;
    bool m_vpc_config_isValid;

    QString m_encryption_key;
    bool m_encryption_key_isSet;
    bool m_encryption_key_isValid;

    qint32 m_build_batch_number;
    bool m_build_batch_number_isSet;
    bool m_build_batch_number_isValid;

    QList m_file_system_locations;
    bool m_file_system_locations_isSet;
    bool m_file_system_locations_isValid;

    OAIProjectBuildBatchConfig m_build_batch_config;
    bool m_build_batch_config_isSet;
    bool m_build_batch_config_isValid;

    QList m_build_groups;
    bool m_build_groups_isSet;
    bool m_build_groups_isValid;

    bool m_debug_session_enabled;
    bool m_debug_session_enabled_isSet;
    bool m_debug_session_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartBuildBatchOutput_buildBatch)

#endif // OAIStartBuildBatchOutput_buildBatch_H
