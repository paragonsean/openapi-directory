/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateProjectInput_artifacts.h
 *
 * 
 */

#ifndef OAIUpdateProjectInput_artifacts_H
#define OAIUpdateProjectInput_artifacts_H

#include <QJsonObject>

#include "OAIArtifactNamespace.h"
#include "OAIArtifactPackaging.h"
#include "OAIArtifactsType.h"
#include "OAIBucketOwnerAccess.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateProjectInput_artifacts : public OAIObject {
public:
    OAIUpdateProjectInput_artifacts();
    OAIUpdateProjectInput_artifacts(QString json);
    ~OAIUpdateProjectInput_artifacts() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIArtifactsType getType() const;
    void setType(const OAIArtifactsType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    OAIArtifactNamespace getNamespaceType() const;
    void setNamespaceType(const OAIArtifactNamespace &namespace_type);
    bool is_namespace_type_Set() const;
    bool is_namespace_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIArtifactPackaging getPackaging() const;
    void setPackaging(const OAIArtifactPackaging &packaging);
    bool is_packaging_Set() const;
    bool is_packaging_Valid() const;

    bool getOverrideArtifactName() const;
    void setOverrideArtifactName(const bool &override_artifact_name);
    bool is_override_artifact_name_Set() const;
    bool is_override_artifact_name_Valid() const;

    bool getEncryptionDisabled() const;
    void setEncryptionDisabled(const bool &encryption_disabled);
    bool is_encryption_disabled_Set() const;
    bool is_encryption_disabled_Valid() const;

    QString getArtifactIdentifier() const;
    void setArtifactIdentifier(const QString &artifact_identifier);
    bool is_artifact_identifier_Set() const;
    bool is_artifact_identifier_Valid() const;

    OAIBucketOwnerAccess getBucketOwnerAccess() const;
    void setBucketOwnerAccess(const OAIBucketOwnerAccess &bucket_owner_access);
    bool is_bucket_owner_access_Set() const;
    bool is_bucket_owner_access_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIArtifactsType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    OAIArtifactNamespace m_namespace_type;
    bool m_namespace_type_isSet;
    bool m_namespace_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIArtifactPackaging m_packaging;
    bool m_packaging_isSet;
    bool m_packaging_isValid;

    bool m_override_artifact_name;
    bool m_override_artifact_name_isSet;
    bool m_override_artifact_name_isValid;

    bool m_encryption_disabled;
    bool m_encryption_disabled_isSet;
    bool m_encryption_disabled_isValid;

    QString m_artifact_identifier;
    bool m_artifact_identifier_isSet;
    bool m_artifact_identifier_isValid;

    OAIBucketOwnerAccess m_bucket_owner_access;
    bool m_bucket_owner_access_isSet;
    bool m_bucket_owner_access_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateProjectInput_artifacts)

#endif // OAIUpdateProjectInput_artifacts_H
