/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReport_testSummary.h
 *
 * 
 */

#ifndef OAIReport_testSummary_H
#define OAIReport_testSummary_H

#include <QJsonObject>

#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReport_testSummary : public OAIObject {
public:
    OAIReport_testSummary();
    OAIReport_testSummary(QString json);
    ~OAIReport_testSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    QMap getStatusCounts() const;
    void setStatusCounts(const QMap &status_counts);
    bool is_status_counts_Set() const;
    bool is_status_counts_Valid() const;

    qint32 getDurationInNanoSeconds() const;
    void setDurationInNanoSeconds(const qint32 &duration_in_nano_seconds);
    bool is_duration_in_nano_seconds_Set() const;
    bool is_duration_in_nano_seconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    QMap m_status_counts;
    bool m_status_counts_isSet;
    bool m_status_counts_isValid;

    qint32 m_duration_in_nano_seconds;
    bool m_duration_in_nano_seconds_isSet;
    bool m_duration_in_nano_seconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReport_testSummary)

#endif // OAIReport_testSummary_H
