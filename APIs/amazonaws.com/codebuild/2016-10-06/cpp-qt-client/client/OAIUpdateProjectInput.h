/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateProjectInput.h
 *
 * 
 */

#ifndef OAIUpdateProjectInput_H
#define OAIUpdateProjectInput_H

#include <QJsonObject>

#include "OAICreateProjectInput_cache.h"
#include "OAICreateProjectInput_vpcConfig.h"
#include "OAIProjectBuildBatchConfig.h"
#include "OAIUpdateProjectInput_artifacts.h"
#include "OAIUpdateProjectInput_environment.h"
#include "OAIUpdateProjectInput_logsConfig.h"
#include "OAIUpdateProjectInput_source.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateProjectInput_source;
class OAIUpdateProjectInput_artifacts;
class OAICreateProjectInput_cache;
class OAIUpdateProjectInput_environment;
class OAICreateProjectInput_vpcConfig;
class OAIUpdateProjectInput_logsConfig;
class OAIProjectBuildBatchConfig;

class OAIUpdateProjectInput : public OAIObject {
public:
    OAIUpdateProjectInput();
    OAIUpdateProjectInput(QString json);
    ~OAIUpdateProjectInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIUpdateProjectInput_source getSource() const;
    void setSource(const OAIUpdateProjectInput_source &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QList getSecondarySources() const;
    void setSecondarySources(const QList &secondary_sources);
    bool is_secondary_sources_Set() const;
    bool is_secondary_sources_Valid() const;

    QString getSourceVersion() const;
    void setSourceVersion(const QString &source_version);
    bool is_source_version_Set() const;
    bool is_source_version_Valid() const;

    QList getSecondarySourceVersions() const;
    void setSecondarySourceVersions(const QList &secondary_source_versions);
    bool is_secondary_source_versions_Set() const;
    bool is_secondary_source_versions_Valid() const;

    OAIUpdateProjectInput_artifacts getArtifacts() const;
    void setArtifacts(const OAIUpdateProjectInput_artifacts &artifacts);
    bool is_artifacts_Set() const;
    bool is_artifacts_Valid() const;

    QList getSecondaryArtifacts() const;
    void setSecondaryArtifacts(const QList &secondary_artifacts);
    bool is_secondary_artifacts_Set() const;
    bool is_secondary_artifacts_Valid() const;

    OAICreateProjectInput_cache getCache() const;
    void setCache(const OAICreateProjectInput_cache &cache);
    bool is_cache_Set() const;
    bool is_cache_Valid() const;

    OAIUpdateProjectInput_environment getEnvironment() const;
    void setEnvironment(const OAIUpdateProjectInput_environment &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    QString getServiceRole() const;
    void setServiceRole(const QString &service_role);
    bool is_service_role_Set() const;
    bool is_service_role_Valid() const;

    qint32 getTimeoutInMinutes() const;
    void setTimeoutInMinutes(const qint32 &timeout_in_minutes);
    bool is_timeout_in_minutes_Set() const;
    bool is_timeout_in_minutes_Valid() const;

    qint32 getQueuedTimeoutInMinutes() const;
    void setQueuedTimeoutInMinutes(const qint32 &queued_timeout_in_minutes);
    bool is_queued_timeout_in_minutes_Set() const;
    bool is_queued_timeout_in_minutes_Valid() const;

    QString getEncryptionKey() const;
    void setEncryptionKey(const QString &encryption_key);
    bool is_encryption_key_Set() const;
    bool is_encryption_key_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAICreateProjectInput_vpcConfig getVpcConfig() const;
    void setVpcConfig(const OAICreateProjectInput_vpcConfig &vpc_config);
    bool is_vpc_config_Set() const;
    bool is_vpc_config_Valid() const;

    bool getBadgeEnabled() const;
    void setBadgeEnabled(const bool &badge_enabled);
    bool is_badge_enabled_Set() const;
    bool is_badge_enabled_Valid() const;

    OAIUpdateProjectInput_logsConfig getLogsConfig() const;
    void setLogsConfig(const OAIUpdateProjectInput_logsConfig &logs_config);
    bool is_logs_config_Set() const;
    bool is_logs_config_Valid() const;

    QList getFileSystemLocations() const;
    void setFileSystemLocations(const QList &file_system_locations);
    bool is_file_system_locations_Set() const;
    bool is_file_system_locations_Valid() const;

    OAIProjectBuildBatchConfig getBuildBatchConfig() const;
    void setBuildBatchConfig(const OAIProjectBuildBatchConfig &build_batch_config);
    bool is_build_batch_config_Set() const;
    bool is_build_batch_config_Valid() const;

    qint32 getConcurrentBuildLimit() const;
    void setConcurrentBuildLimit(const qint32 &concurrent_build_limit);
    bool is_concurrent_build_limit_Set() const;
    bool is_concurrent_build_limit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIUpdateProjectInput_source m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QList m_secondary_sources;
    bool m_secondary_sources_isSet;
    bool m_secondary_sources_isValid;

    QString m_source_version;
    bool m_source_version_isSet;
    bool m_source_version_isValid;

    QList m_secondary_source_versions;
    bool m_secondary_source_versions_isSet;
    bool m_secondary_source_versions_isValid;

    OAIUpdateProjectInput_artifacts m_artifacts;
    bool m_artifacts_isSet;
    bool m_artifacts_isValid;

    QList m_secondary_artifacts;
    bool m_secondary_artifacts_isSet;
    bool m_secondary_artifacts_isValid;

    OAICreateProjectInput_cache m_cache;
    bool m_cache_isSet;
    bool m_cache_isValid;

    OAIUpdateProjectInput_environment m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    QString m_service_role;
    bool m_service_role_isSet;
    bool m_service_role_isValid;

    qint32 m_timeout_in_minutes;
    bool m_timeout_in_minutes_isSet;
    bool m_timeout_in_minutes_isValid;

    qint32 m_queued_timeout_in_minutes;
    bool m_queued_timeout_in_minutes_isSet;
    bool m_queued_timeout_in_minutes_isValid;

    QString m_encryption_key;
    bool m_encryption_key_isSet;
    bool m_encryption_key_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAICreateProjectInput_vpcConfig m_vpc_config;
    bool m_vpc_config_isSet;
    bool m_vpc_config_isValid;

    bool m_badge_enabled;
    bool m_badge_enabled_isSet;
    bool m_badge_enabled_isValid;

    OAIUpdateProjectInput_logsConfig m_logs_config;
    bool m_logs_config_isSet;
    bool m_logs_config_isValid;

    QList m_file_system_locations;
    bool m_file_system_locations_isSet;
    bool m_file_system_locations_isValid;

    OAIProjectBuildBatchConfig m_build_batch_config;
    bool m_build_batch_config_isSet;
    bool m_build_batch_config_isValid;

    qint32 m_concurrent_build_limit;
    bool m_concurrent_build_limit_isSet;
    bool m_concurrent_build_limit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateProjectInput)

#endif // OAIUpdateProjectInput_H
