/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateWebhookInput.h
 *
 * 
 */

#ifndef OAICreateWebhookInput_H
#define OAICreateWebhookInput_H

#include <QJsonObject>

#include "OAIWebhookBuildType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateWebhookInput : public OAIObject {
public:
    OAICreateWebhookInput();
    OAICreateWebhookInput(QString json);
    ~OAICreateWebhookInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getProjectName() const;
    void setProjectName(const QString &project_name);
    bool is_project_name_Set() const;
    bool is_project_name_Valid() const;

    QString getBranchFilter() const;
    void setBranchFilter(const QString &branch_filter);
    bool is_branch_filter_Set() const;
    bool is_branch_filter_Valid() const;

    QList getFilterGroups() const;
    void setFilterGroups(const QList &filter_groups);
    bool is_filter_groups_Set() const;
    bool is_filter_groups_Valid() const;

    OAIWebhookBuildType getBuildType() const;
    void setBuildType(const OAIWebhookBuildType &build_type);
    bool is_build_type_Set() const;
    bool is_build_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_project_name;
    bool m_project_name_isSet;
    bool m_project_name_isValid;

    QString m_branch_filter;
    bool m_branch_filter_isSet;
    bool m_branch_filter_isValid;

    QList m_filter_groups;
    bool m_filter_groups_isSet;
    bool m_filter_groups_isValid;

    OAIWebhookBuildType m_build_type;
    bool m_build_type_isSet;
    bool m_build_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateWebhookInput)

#endif // OAICreateWebhookInput_H
