/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBuildSummary_primaryArtifact.h
 *
 * 
 */

#ifndef OAIBuildSummary_primaryArtifact_H
#define OAIBuildSummary_primaryArtifact_H

#include <QJsonObject>

#include "OAIArtifactsType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBuildSummary_primaryArtifact : public OAIObject {
public:
    OAIBuildSummary_primaryArtifact();
    OAIBuildSummary_primaryArtifact(QString json);
    ~OAIBuildSummary_primaryArtifact() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIArtifactsType getType() const;
    void setType(const OAIArtifactsType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getIdentifier() const;
    void setIdentifier(const QString &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIArtifactsType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBuildSummary_primaryArtifact)

#endif // OAIBuildSummary_primaryArtifact_H
