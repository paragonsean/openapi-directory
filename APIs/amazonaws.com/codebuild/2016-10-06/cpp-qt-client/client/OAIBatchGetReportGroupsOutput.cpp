/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchGetReportGroupsOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchGetReportGroupsOutput::OAIBatchGetReportGroupsOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchGetReportGroupsOutput::OAIBatchGetReportGroupsOutput() {
    this->initializeModel();
}

OAIBatchGetReportGroupsOutput::~OAIBatchGetReportGroupsOutput() {}

void OAIBatchGetReportGroupsOutput::initializeModel() {

    m_report_groups_isSet = false;
    m_report_groups_isValid = false;

    m_report_groups_not_found_isSet = false;
    m_report_groups_not_found_isValid = false;
}

void OAIBatchGetReportGroupsOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchGetReportGroupsOutput::fromJsonObject(QJsonObject json) {

    m_report_groups_isValid = ::OpenAPI::fromJsonValue(m_report_groups, json[QString("reportGroups")]);
    m_report_groups_isSet = !json[QString("reportGroups")].isNull() && m_report_groups_isValid;

    m_report_groups_not_found_isValid = ::OpenAPI::fromJsonValue(m_report_groups_not_found, json[QString("reportGroupsNotFound")]);
    m_report_groups_not_found_isSet = !json[QString("reportGroupsNotFound")].isNull() && m_report_groups_not_found_isValid;
}

QString OAIBatchGetReportGroupsOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchGetReportGroupsOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_report_groups.isSet()) {
        obj.insert(QString("reportGroups"), ::OpenAPI::toJsonValue(m_report_groups));
    }
    if (m_report_groups_not_found.isSet()) {
        obj.insert(QString("reportGroupsNotFound"), ::OpenAPI::toJsonValue(m_report_groups_not_found));
    }
    return obj;
}

QList OAIBatchGetReportGroupsOutput::getReportGroups() const {
    return m_report_groups;
}
void OAIBatchGetReportGroupsOutput::setReportGroups(const QList &report_groups) {
    m_report_groups = report_groups;
    m_report_groups_isSet = true;
}

bool OAIBatchGetReportGroupsOutput::is_report_groups_Set() const{
    return m_report_groups_isSet;
}

bool OAIBatchGetReportGroupsOutput::is_report_groups_Valid() const{
    return m_report_groups_isValid;
}

QList OAIBatchGetReportGroupsOutput::getReportGroupsNotFound() const {
    return m_report_groups_not_found;
}
void OAIBatchGetReportGroupsOutput::setReportGroupsNotFound(const QList &report_groups_not_found) {
    m_report_groups_not_found = report_groups_not_found;
    m_report_groups_not_found_isSet = true;
}

bool OAIBatchGetReportGroupsOutput::is_report_groups_not_found_Set() const{
    return m_report_groups_not_found_isSet;
}

bool OAIBatchGetReportGroupsOutput::is_report_groups_not_found_Valid() const{
    return m_report_groups_not_found_isValid;
}

bool OAIBatchGetReportGroupsOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_report_groups.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_groups_not_found.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchGetReportGroupsOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
