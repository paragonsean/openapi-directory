/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICloudWatchLogsConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICloudWatchLogsConfig::OAICloudWatchLogsConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICloudWatchLogsConfig::OAICloudWatchLogsConfig() {
    this->initializeModel();
}

OAICloudWatchLogsConfig::~OAICloudWatchLogsConfig() {}

void OAICloudWatchLogsConfig::initializeModel() {

    m_status_isSet = false;
    m_status_isValid = false;

    m_group_name_isSet = false;
    m_group_name_isValid = false;

    m_stream_name_isSet = false;
    m_stream_name_isValid = false;
}

void OAICloudWatchLogsConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICloudWatchLogsConfig::fromJsonObject(QJsonObject json) {

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_group_name_isValid = ::OpenAPI::fromJsonValue(m_group_name, json[QString("groupName")]);
    m_group_name_isSet = !json[QString("groupName")].isNull() && m_group_name_isValid;

    m_stream_name_isValid = ::OpenAPI::fromJsonValue(m_stream_name, json[QString("streamName")]);
    m_stream_name_isSet = !json[QString("streamName")].isNull() && m_stream_name_isValid;
}

QString OAICloudWatchLogsConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICloudWatchLogsConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_group_name_isSet) {
        obj.insert(QString("groupName"), ::OpenAPI::toJsonValue(m_group_name));
    }
    if (m_stream_name_isSet) {
        obj.insert(QString("streamName"), ::OpenAPI::toJsonValue(m_stream_name));
    }
    return obj;
}

OAILogsConfigStatusType OAICloudWatchLogsConfig::getStatus() const {
    return m_status;
}
void OAICloudWatchLogsConfig::setStatus(const OAILogsConfigStatusType &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICloudWatchLogsConfig::is_status_Set() const{
    return m_status_isSet;
}

bool OAICloudWatchLogsConfig::is_status_Valid() const{
    return m_status_isValid;
}

QString OAICloudWatchLogsConfig::getGroupName() const {
    return m_group_name;
}
void OAICloudWatchLogsConfig::setGroupName(const QString &group_name) {
    m_group_name = group_name;
    m_group_name_isSet = true;
}

bool OAICloudWatchLogsConfig::is_group_name_Set() const{
    return m_group_name_isSet;
}

bool OAICloudWatchLogsConfig::is_group_name_Valid() const{
    return m_group_name_isValid;
}

QString OAICloudWatchLogsConfig::getStreamName() const {
    return m_stream_name;
}
void OAICloudWatchLogsConfig::setStreamName(const QString &stream_name) {
    m_stream_name = stream_name;
    m_stream_name_isSet = true;
}

bool OAICloudWatchLogsConfig::is_stream_name_Set() const{
    return m_stream_name_isSet;
}

bool OAICloudWatchLogsConfig::is_stream_name_Valid() const{
    return m_stream_name_isValid;
}

bool OAICloudWatchLogsConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stream_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICloudWatchLogsConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_status_isValid && true;
}

} // namespace OpenAPI
