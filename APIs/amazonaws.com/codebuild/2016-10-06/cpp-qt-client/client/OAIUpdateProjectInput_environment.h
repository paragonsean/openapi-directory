/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateProjectInput_environment.h
 *
 * 
 */

#ifndef OAIUpdateProjectInput_environment_H
#define OAIUpdateProjectInput_environment_H

#include <QJsonObject>

#include "OAIComputeType.h"
#include "OAIEnvironmentType.h"
#include "OAIImagePullCredentialsType.h"
#include "OAIProjectEnvironment_registryCredential.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProjectEnvironment_registryCredential;

class OAIUpdateProjectInput_environment : public OAIObject {
public:
    OAIUpdateProjectInput_environment();
    OAIUpdateProjectInput_environment(QString json);
    ~OAIUpdateProjectInput_environment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEnvironmentType getType() const;
    void setType(const OAIEnvironmentType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getImage() const;
    void setImage(const QString &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    OAIComputeType getComputeType() const;
    void setComputeType(const OAIComputeType &compute_type);
    bool is_compute_type_Set() const;
    bool is_compute_type_Valid() const;

    QList getEnvironmentVariables() const;
    void setEnvironmentVariables(const QList &environment_variables);
    bool is_environment_variables_Set() const;
    bool is_environment_variables_Valid() const;

    bool getPrivilegedMode() const;
    void setPrivilegedMode(const bool &privileged_mode);
    bool is_privileged_mode_Set() const;
    bool is_privileged_mode_Valid() const;

    QString getCertificate() const;
    void setCertificate(const QString &certificate);
    bool is_certificate_Set() const;
    bool is_certificate_Valid() const;

    OAIProjectEnvironment_registryCredential getRegistryCredential() const;
    void setRegistryCredential(const OAIProjectEnvironment_registryCredential &registry_credential);
    bool is_registry_credential_Set() const;
    bool is_registry_credential_Valid() const;

    OAIImagePullCredentialsType getImagePullCredentialsType() const;
    void setImagePullCredentialsType(const OAIImagePullCredentialsType &image_pull_credentials_type);
    bool is_image_pull_credentials_type_Set() const;
    bool is_image_pull_credentials_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEnvironmentType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    OAIComputeType m_compute_type;
    bool m_compute_type_isSet;
    bool m_compute_type_isValid;

    QList m_environment_variables;
    bool m_environment_variables_isSet;
    bool m_environment_variables_isValid;

    bool m_privileged_mode;
    bool m_privileged_mode_isSet;
    bool m_privileged_mode_isValid;

    QString m_certificate;
    bool m_certificate_isSet;
    bool m_certificate_isValid;

    OAIProjectEnvironment_registryCredential m_registry_credential;
    bool m_registry_credential_isSet;
    bool m_registry_credential_isValid;

    OAIImagePullCredentialsType m_image_pull_credentials_type;
    bool m_image_pull_credentials_type_isSet;
    bool m_image_pull_credentials_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateProjectInput_environment)

#endif // OAIUpdateProjectInput_environment_H
