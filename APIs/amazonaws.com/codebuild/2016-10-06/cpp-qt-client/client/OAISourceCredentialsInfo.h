/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISourceCredentialsInfo.h
 *
 *  Information about the credentials for a GitHub, GitHub Enterprise, or Bitbucket repository. 
 */

#ifndef OAISourceCredentialsInfo_H
#define OAISourceCredentialsInfo_H

#include <QJsonObject>

#include "OAIAuthType.h"
#include "OAIServerType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISourceCredentialsInfo : public OAIObject {
public:
    OAISourceCredentialsInfo();
    OAISourceCredentialsInfo(QString json);
    ~OAISourceCredentialsInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    OAIServerType getServerType() const;
    void setServerType(const OAIServerType &server_type);
    bool is_server_type_Set() const;
    bool is_server_type_Valid() const;

    OAIAuthType getAuthType() const;
    void setAuthType(const OAIAuthType &auth_type);
    bool is_auth_type_Set() const;
    bool is_auth_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    OAIServerType m_server_type;
    bool m_server_type_isSet;
    bool m_server_type_isValid;

    OAIAuthType m_auth_type;
    bool m_auth_type_isSet;
    bool m_auth_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISourceCredentialsInfo)

#endif // OAISourceCredentialsInfo_H
