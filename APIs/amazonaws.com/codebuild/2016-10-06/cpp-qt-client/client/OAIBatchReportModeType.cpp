/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchReportModeType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchReportModeType::OAIBatchReportModeType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchReportModeType::OAIBatchReportModeType() {
    this->initializeModel();
}

OAIBatchReportModeType::~OAIBatchReportModeType() {}

void OAIBatchReportModeType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIBatchReportModeType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIBatchReportModeType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("REPORT_INDIVIDUAL_BUILDS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBatchReportModeType::INDIVIDUAL_BUILDS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("REPORT_AGGREGATED_BATCH", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBatchReportModeType::AGGREGATED_BATCH;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIBatchReportModeType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIBatchReportModeType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIBatchReportModeType::INDIVIDUAL_BUILDS:
            val = "REPORT_INDIVIDUAL_BUILDS";
            break;
        case eOAIBatchReportModeType::AGGREGATED_BATCH:
            val = "REPORT_AGGREGATED_BATCH";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIBatchReportModeType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIBatchReportModeType::eOAIBatchReportModeType OAIBatchReportModeType::getValue() const {
    return m_value;
}

void OAIBatchReportModeType::setValue(const OAIBatchReportModeType::eOAIBatchReportModeType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIBatchReportModeType::isSet() const {
    
    return m_value_isSet;
}

bool OAIBatchReportModeType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
