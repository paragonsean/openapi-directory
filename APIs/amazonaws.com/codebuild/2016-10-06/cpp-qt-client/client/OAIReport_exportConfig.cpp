/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReport_exportConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReport_exportConfig::OAIReport_exportConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReport_exportConfig::OAIReport_exportConfig() {
    this->initializeModel();
}

OAIReport_exportConfig::~OAIReport_exportConfig() {}

void OAIReport_exportConfig::initializeModel() {

    m_export_config_type_isSet = false;
    m_export_config_type_isValid = false;

    m_s3_destination_isSet = false;
    m_s3_destination_isValid = false;
}

void OAIReport_exportConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReport_exportConfig::fromJsonObject(QJsonObject json) {

    m_export_config_type_isValid = ::OpenAPI::fromJsonValue(m_export_config_type, json[QString("exportConfigType")]);
    m_export_config_type_isSet = !json[QString("exportConfigType")].isNull() && m_export_config_type_isValid;

    m_s3_destination_isValid = ::OpenAPI::fromJsonValue(m_s3_destination, json[QString("s3Destination")]);
    m_s3_destination_isSet = !json[QString("s3Destination")].isNull() && m_s3_destination_isValid;
}

QString OAIReport_exportConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReport_exportConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_export_config_type.isSet()) {
        obj.insert(QString("exportConfigType"), ::OpenAPI::toJsonValue(m_export_config_type));
    }
    if (m_s3_destination.isSet()) {
        obj.insert(QString("s3Destination"), ::OpenAPI::toJsonValue(m_s3_destination));
    }
    return obj;
}

OAIReportExportConfigType OAIReport_exportConfig::getExportConfigType() const {
    return m_export_config_type;
}
void OAIReport_exportConfig::setExportConfigType(const OAIReportExportConfigType &export_config_type) {
    m_export_config_type = export_config_type;
    m_export_config_type_isSet = true;
}

bool OAIReport_exportConfig::is_export_config_type_Set() const{
    return m_export_config_type_isSet;
}

bool OAIReport_exportConfig::is_export_config_type_Valid() const{
    return m_export_config_type_isValid;
}

OAIReportExportConfig_s3Destination OAIReport_exportConfig::getS3Destination() const {
    return m_s3_destination;
}
void OAIReport_exportConfig::setS3Destination(const OAIReportExportConfig_s3Destination &s3_destination) {
    m_s3_destination = s3_destination;
    m_s3_destination_isSet = true;
}

bool OAIReport_exportConfig::is_s3_destination_Set() const{
    return m_s3_destination_isSet;
}

bool OAIReport_exportConfig::is_s3_destination_Valid() const{
    return m_s3_destination_isValid;
}

bool OAIReport_exportConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_export_config_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReport_exportConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
