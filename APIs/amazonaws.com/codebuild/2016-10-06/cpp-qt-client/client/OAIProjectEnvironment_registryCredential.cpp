/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectEnvironment_registryCredential.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectEnvironment_registryCredential::OAIProjectEnvironment_registryCredential(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectEnvironment_registryCredential::OAIProjectEnvironment_registryCredential() {
    this->initializeModel();
}

OAIProjectEnvironment_registryCredential::~OAIProjectEnvironment_registryCredential() {}

void OAIProjectEnvironment_registryCredential::initializeModel() {

    m_credential_isSet = false;
    m_credential_isValid = false;

    m_credential_provider_isSet = false;
    m_credential_provider_isValid = false;
}

void OAIProjectEnvironment_registryCredential::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectEnvironment_registryCredential::fromJsonObject(QJsonObject json) {

    m_credential_isValid = ::OpenAPI::fromJsonValue(m_credential, json[QString("credential")]);
    m_credential_isSet = !json[QString("credential")].isNull() && m_credential_isValid;

    m_credential_provider_isValid = ::OpenAPI::fromJsonValue(m_credential_provider, json[QString("credentialProvider")]);
    m_credential_provider_isSet = !json[QString("credentialProvider")].isNull() && m_credential_provider_isValid;
}

QString OAIProjectEnvironment_registryCredential::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectEnvironment_registryCredential::asJsonObject() const {
    QJsonObject obj;
    if (m_credential_isSet) {
        obj.insert(QString("credential"), ::OpenAPI::toJsonValue(m_credential));
    }
    if (m_credential_provider.isSet()) {
        obj.insert(QString("credentialProvider"), ::OpenAPI::toJsonValue(m_credential_provider));
    }
    return obj;
}

QString OAIProjectEnvironment_registryCredential::getCredential() const {
    return m_credential;
}
void OAIProjectEnvironment_registryCredential::setCredential(const QString &credential) {
    m_credential = credential;
    m_credential_isSet = true;
}

bool OAIProjectEnvironment_registryCredential::is_credential_Set() const{
    return m_credential_isSet;
}

bool OAIProjectEnvironment_registryCredential::is_credential_Valid() const{
    return m_credential_isValid;
}

OAICredentialProviderType OAIProjectEnvironment_registryCredential::getCredentialProvider() const {
    return m_credential_provider;
}
void OAIProjectEnvironment_registryCredential::setCredentialProvider(const OAICredentialProviderType &credential_provider) {
    m_credential_provider = credential_provider;
    m_credential_provider_isSet = true;
}

bool OAIProjectEnvironment_registryCredential::is_credential_provider_Set() const{
    return m_credential_provider_isSet;
}

bool OAIProjectEnvironment_registryCredential::is_credential_provider_Valid() const{
    return m_credential_provider_isValid;
}

bool OAIProjectEnvironment_registryCredential::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_credential_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_credential_provider.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectEnvironment_registryCredential::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_credential_isValid && m_credential_provider_isValid && true;
}

} // namespace OpenAPI
