/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBuild_debugSession.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBuild_debugSession::OAIBuild_debugSession(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBuild_debugSession::OAIBuild_debugSession() {
    this->initializeModel();
}

OAIBuild_debugSession::~OAIBuild_debugSession() {}

void OAIBuild_debugSession::initializeModel() {

    m_session_enabled_isSet = false;
    m_session_enabled_isValid = false;

    m_session_target_isSet = false;
    m_session_target_isValid = false;
}

void OAIBuild_debugSession::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBuild_debugSession::fromJsonObject(QJsonObject json) {

    m_session_enabled_isValid = ::OpenAPI::fromJsonValue(m_session_enabled, json[QString("sessionEnabled")]);
    m_session_enabled_isSet = !json[QString("sessionEnabled")].isNull() && m_session_enabled_isValid;

    m_session_target_isValid = ::OpenAPI::fromJsonValue(m_session_target, json[QString("sessionTarget")]);
    m_session_target_isSet = !json[QString("sessionTarget")].isNull() && m_session_target_isValid;
}

QString OAIBuild_debugSession::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBuild_debugSession::asJsonObject() const {
    QJsonObject obj;
    if (m_session_enabled_isSet) {
        obj.insert(QString("sessionEnabled"), ::OpenAPI::toJsonValue(m_session_enabled));
    }
    if (m_session_target_isSet) {
        obj.insert(QString("sessionTarget"), ::OpenAPI::toJsonValue(m_session_target));
    }
    return obj;
}

bool OAIBuild_debugSession::getSessionEnabled() const {
    return m_session_enabled;
}
void OAIBuild_debugSession::setSessionEnabled(const bool &session_enabled) {
    m_session_enabled = session_enabled;
    m_session_enabled_isSet = true;
}

bool OAIBuild_debugSession::is_session_enabled_Set() const{
    return m_session_enabled_isSet;
}

bool OAIBuild_debugSession::is_session_enabled_Valid() const{
    return m_session_enabled_isValid;
}

QString OAIBuild_debugSession::getSessionTarget() const {
    return m_session_target;
}
void OAIBuild_debugSession::setSessionTarget(const QString &session_target) {
    m_session_target = session_target;
    m_session_target_isSet = true;
}

bool OAIBuild_debugSession::is_session_target_Set() const{
    return m_session_target_isSet;
}

bool OAIBuild_debugSession::is_session_target_Valid() const{
    return m_session_target_isValid;
}

bool OAIBuild_debugSession::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_session_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_session_target_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBuild_debugSession::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
