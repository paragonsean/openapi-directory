/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetReportGroupTrendOutput_stats.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetReportGroupTrendOutput_stats::OAIGetReportGroupTrendOutput_stats(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetReportGroupTrendOutput_stats::OAIGetReportGroupTrendOutput_stats() {
    this->initializeModel();
}

OAIGetReportGroupTrendOutput_stats::~OAIGetReportGroupTrendOutput_stats() {}

void OAIGetReportGroupTrendOutput_stats::initializeModel() {

    m_average_isSet = false;
    m_average_isValid = false;

    m_max_isSet = false;
    m_max_isValid = false;

    m_min_isSet = false;
    m_min_isValid = false;
}

void OAIGetReportGroupTrendOutput_stats::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetReportGroupTrendOutput_stats::fromJsonObject(QJsonObject json) {

    m_average_isValid = ::OpenAPI::fromJsonValue(m_average, json[QString("average")]);
    m_average_isSet = !json[QString("average")].isNull() && m_average_isValid;

    m_max_isValid = ::OpenAPI::fromJsonValue(m_max, json[QString("max")]);
    m_max_isSet = !json[QString("max")].isNull() && m_max_isValid;

    m_min_isValid = ::OpenAPI::fromJsonValue(m_min, json[QString("min")]);
    m_min_isSet = !json[QString("min")].isNull() && m_min_isValid;
}

QString OAIGetReportGroupTrendOutput_stats::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetReportGroupTrendOutput_stats::asJsonObject() const {
    QJsonObject obj;
    if (m_average_isSet) {
        obj.insert(QString("average"), ::OpenAPI::toJsonValue(m_average));
    }
    if (m_max_isSet) {
        obj.insert(QString("max"), ::OpenAPI::toJsonValue(m_max));
    }
    if (m_min_isSet) {
        obj.insert(QString("min"), ::OpenAPI::toJsonValue(m_min));
    }
    return obj;
}

QString OAIGetReportGroupTrendOutput_stats::getAverage() const {
    return m_average;
}
void OAIGetReportGroupTrendOutput_stats::setAverage(const QString &average) {
    m_average = average;
    m_average_isSet = true;
}

bool OAIGetReportGroupTrendOutput_stats::is_average_Set() const{
    return m_average_isSet;
}

bool OAIGetReportGroupTrendOutput_stats::is_average_Valid() const{
    return m_average_isValid;
}

QString OAIGetReportGroupTrendOutput_stats::getMax() const {
    return m_max;
}
void OAIGetReportGroupTrendOutput_stats::setMax(const QString &max) {
    m_max = max;
    m_max_isSet = true;
}

bool OAIGetReportGroupTrendOutput_stats::is_max_Set() const{
    return m_max_isSet;
}

bool OAIGetReportGroupTrendOutput_stats::is_max_Valid() const{
    return m_max_isValid;
}

QString OAIGetReportGroupTrendOutput_stats::getMin() const {
    return m_min;
}
void OAIGetReportGroupTrendOutput_stats::setMin(const QString &min) {
    m_min = min;
    m_min_isSet = true;
}

bool OAIGetReportGroupTrendOutput_stats::is_min_Set() const{
    return m_min_isSet;
}

bool OAIGetReportGroupTrendOutput_stats::is_min_Valid() const{
    return m_min_isValid;
}

bool OAIGetReportGroupTrendOutput_stats::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_average_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetReportGroupTrendOutput_stats::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
