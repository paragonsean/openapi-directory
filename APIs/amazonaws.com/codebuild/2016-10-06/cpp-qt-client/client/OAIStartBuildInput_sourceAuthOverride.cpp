/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartBuildInput_sourceAuthOverride.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartBuildInput_sourceAuthOverride::OAIStartBuildInput_sourceAuthOverride(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartBuildInput_sourceAuthOverride::OAIStartBuildInput_sourceAuthOverride() {
    this->initializeModel();
}

OAIStartBuildInput_sourceAuthOverride::~OAIStartBuildInput_sourceAuthOverride() {}

void OAIStartBuildInput_sourceAuthOverride::initializeModel() {

    m_type_isSet = false;
    m_type_isValid = false;

    m_resource_isSet = false;
    m_resource_isValid = false;
}

void OAIStartBuildInput_sourceAuthOverride::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartBuildInput_sourceAuthOverride::fromJsonObject(QJsonObject json) {

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_resource_isValid = ::OpenAPI::fromJsonValue(m_resource, json[QString("resource")]);
    m_resource_isSet = !json[QString("resource")].isNull() && m_resource_isValid;
}

QString OAIStartBuildInput_sourceAuthOverride::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartBuildInput_sourceAuthOverride::asJsonObject() const {
    QJsonObject obj;
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_resource_isSet) {
        obj.insert(QString("resource"), ::OpenAPI::toJsonValue(m_resource));
    }
    return obj;
}

OAISourceAuthType OAIStartBuildInput_sourceAuthOverride::getType() const {
    return m_type;
}
void OAIStartBuildInput_sourceAuthOverride::setType(const OAISourceAuthType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIStartBuildInput_sourceAuthOverride::is_type_Set() const{
    return m_type_isSet;
}

bool OAIStartBuildInput_sourceAuthOverride::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIStartBuildInput_sourceAuthOverride::getResource() const {
    return m_resource;
}
void OAIStartBuildInput_sourceAuthOverride::setResource(const QString &resource) {
    m_resource = resource;
    m_resource_isSet = true;
}

bool OAIStartBuildInput_sourceAuthOverride::is_resource_Set() const{
    return m_resource_isSet;
}

bool OAIStartBuildInput_sourceAuthOverride::is_resource_Valid() const{
    return m_resource_isValid;
}

bool OAIStartBuildInput_sourceAuthOverride::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartBuildInput_sourceAuthOverride::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_type_isValid && true;
}

} // namespace OpenAPI
