/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVpcConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVpcConfig::OAIVpcConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVpcConfig::OAIVpcConfig() {
    this->initializeModel();
}

OAIVpcConfig::~OAIVpcConfig() {}

void OAIVpcConfig::initializeModel() {

    m_vpc_id_isSet = false;
    m_vpc_id_isValid = false;

    m_subnets_isSet = false;
    m_subnets_isValid = false;

    m_security_group_ids_isSet = false;
    m_security_group_ids_isValid = false;
}

void OAIVpcConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVpcConfig::fromJsonObject(QJsonObject json) {

    m_vpc_id_isValid = ::OpenAPI::fromJsonValue(m_vpc_id, json[QString("vpcId")]);
    m_vpc_id_isSet = !json[QString("vpcId")].isNull() && m_vpc_id_isValid;

    m_subnets_isValid = ::OpenAPI::fromJsonValue(m_subnets, json[QString("subnets")]);
    m_subnets_isSet = !json[QString("subnets")].isNull() && m_subnets_isValid;

    m_security_group_ids_isValid = ::OpenAPI::fromJsonValue(m_security_group_ids, json[QString("securityGroupIds")]);
    m_security_group_ids_isSet = !json[QString("securityGroupIds")].isNull() && m_security_group_ids_isValid;
}

QString OAIVpcConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVpcConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_vpc_id_isSet) {
        obj.insert(QString("vpcId"), ::OpenAPI::toJsonValue(m_vpc_id));
    }
    if (m_subnets.isSet()) {
        obj.insert(QString("subnets"), ::OpenAPI::toJsonValue(m_subnets));
    }
    if (m_security_group_ids.isSet()) {
        obj.insert(QString("securityGroupIds"), ::OpenAPI::toJsonValue(m_security_group_ids));
    }
    return obj;
}

QString OAIVpcConfig::getVpcId() const {
    return m_vpc_id;
}
void OAIVpcConfig::setVpcId(const QString &vpc_id) {
    m_vpc_id = vpc_id;
    m_vpc_id_isSet = true;
}

bool OAIVpcConfig::is_vpc_id_Set() const{
    return m_vpc_id_isSet;
}

bool OAIVpcConfig::is_vpc_id_Valid() const{
    return m_vpc_id_isValid;
}

QList OAIVpcConfig::getSubnets() const {
    return m_subnets;
}
void OAIVpcConfig::setSubnets(const QList &subnets) {
    m_subnets = subnets;
    m_subnets_isSet = true;
}

bool OAIVpcConfig::is_subnets_Set() const{
    return m_subnets_isSet;
}

bool OAIVpcConfig::is_subnets_Valid() const{
    return m_subnets_isValid;
}

QList OAIVpcConfig::getSecurityGroupIds() const {
    return m_security_group_ids;
}
void OAIVpcConfig::setSecurityGroupIds(const QList &security_group_ids) {
    m_security_group_ids = security_group_ids;
    m_security_group_ids_isSet = true;
}

bool OAIVpcConfig::is_security_group_ids_Set() const{
    return m_security_group_ids_isSet;
}

bool OAIVpcConfig::is_security_group_ids_Valid() const{
    return m_security_group_ids_isValid;
}

bool OAIVpcConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vpc_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subnets.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_group_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVpcConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
