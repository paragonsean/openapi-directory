/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListBuildBatchesForProjectOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListBuildBatchesForProjectOutput::OAIListBuildBatchesForProjectOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListBuildBatchesForProjectOutput::OAIListBuildBatchesForProjectOutput() {
    this->initializeModel();
}

OAIListBuildBatchesForProjectOutput::~OAIListBuildBatchesForProjectOutput() {}

void OAIListBuildBatchesForProjectOutput::initializeModel() {

    m_ids_isSet = false;
    m_ids_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListBuildBatchesForProjectOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListBuildBatchesForProjectOutput::fromJsonObject(QJsonObject json) {

    m_ids_isValid = ::OpenAPI::fromJsonValue(m_ids, json[QString("ids")]);
    m_ids_isSet = !json[QString("ids")].isNull() && m_ids_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListBuildBatchesForProjectOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListBuildBatchesForProjectOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_ids.isSet()) {
        obj.insert(QString("ids"), ::OpenAPI::toJsonValue(m_ids));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListBuildBatchesForProjectOutput::getIds() const {
    return m_ids;
}
void OAIListBuildBatchesForProjectOutput::setIds(const QList &ids) {
    m_ids = ids;
    m_ids_isSet = true;
}

bool OAIListBuildBatchesForProjectOutput::is_ids_Set() const{
    return m_ids_isSet;
}

bool OAIListBuildBatchesForProjectOutput::is_ids_Valid() const{
    return m_ids_isValid;
}

QString OAIListBuildBatchesForProjectOutput::getNextToken() const {
    return m_next_token;
}
void OAIListBuildBatchesForProjectOutput::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListBuildBatchesForProjectOutput::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListBuildBatchesForProjectOutput::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListBuildBatchesForProjectOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListBuildBatchesForProjectOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
