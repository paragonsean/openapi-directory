/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILogsLocation_s3Logs.h
 *
 * 
 */

#ifndef OAILogsLocation_s3Logs_H
#define OAILogsLocation_s3Logs_H

#include <QJsonObject>

#include "OAIBucketOwnerAccess.h"
#include "OAILogsConfigStatusType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILogsLocation_s3Logs : public OAIObject {
public:
    OAILogsLocation_s3Logs();
    OAILogsLocation_s3Logs(QString json);
    ~OAILogsLocation_s3Logs() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILogsConfigStatusType getStatus() const;
    void setStatus(const OAILogsConfigStatusType &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    bool getEncryptionDisabled() const;
    void setEncryptionDisabled(const bool &encryption_disabled);
    bool is_encryption_disabled_Set() const;
    bool is_encryption_disabled_Valid() const;

    OAIBucketOwnerAccess getBucketOwnerAccess() const;
    void setBucketOwnerAccess(const OAIBucketOwnerAccess &bucket_owner_access);
    bool is_bucket_owner_access_Set() const;
    bool is_bucket_owner_access_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILogsConfigStatusType m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    bool m_encryption_disabled;
    bool m_encryption_disabled_isSet;
    bool m_encryption_disabled_isValid;

    OAIBucketOwnerAccess m_bucket_owner_access;
    bool m_bucket_owner_access_isSet;
    bool m_bucket_owner_access_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILogsLocation_s3Logs)

#endif // OAILogsLocation_s3Logs_H
