/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchGetBuildBatchesOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchGetBuildBatchesOutput::OAIBatchGetBuildBatchesOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchGetBuildBatchesOutput::OAIBatchGetBuildBatchesOutput() {
    this->initializeModel();
}

OAIBatchGetBuildBatchesOutput::~OAIBatchGetBuildBatchesOutput() {}

void OAIBatchGetBuildBatchesOutput::initializeModel() {

    m_build_batches_isSet = false;
    m_build_batches_isValid = false;

    m_build_batches_not_found_isSet = false;
    m_build_batches_not_found_isValid = false;
}

void OAIBatchGetBuildBatchesOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchGetBuildBatchesOutput::fromJsonObject(QJsonObject json) {

    m_build_batches_isValid = ::OpenAPI::fromJsonValue(m_build_batches, json[QString("buildBatches")]);
    m_build_batches_isSet = !json[QString("buildBatches")].isNull() && m_build_batches_isValid;

    m_build_batches_not_found_isValid = ::OpenAPI::fromJsonValue(m_build_batches_not_found, json[QString("buildBatchesNotFound")]);
    m_build_batches_not_found_isSet = !json[QString("buildBatchesNotFound")].isNull() && m_build_batches_not_found_isValid;
}

QString OAIBatchGetBuildBatchesOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchGetBuildBatchesOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_build_batches.isSet()) {
        obj.insert(QString("buildBatches"), ::OpenAPI::toJsonValue(m_build_batches));
    }
    if (m_build_batches_not_found.isSet()) {
        obj.insert(QString("buildBatchesNotFound"), ::OpenAPI::toJsonValue(m_build_batches_not_found));
    }
    return obj;
}

QList OAIBatchGetBuildBatchesOutput::getBuildBatches() const {
    return m_build_batches;
}
void OAIBatchGetBuildBatchesOutput::setBuildBatches(const QList &build_batches) {
    m_build_batches = build_batches;
    m_build_batches_isSet = true;
}

bool OAIBatchGetBuildBatchesOutput::is_build_batches_Set() const{
    return m_build_batches_isSet;
}

bool OAIBatchGetBuildBatchesOutput::is_build_batches_Valid() const{
    return m_build_batches_isValid;
}

QList OAIBatchGetBuildBatchesOutput::getBuildBatchesNotFound() const {
    return m_build_batches_not_found;
}
void OAIBatchGetBuildBatchesOutput::setBuildBatchesNotFound(const QList &build_batches_not_found) {
    m_build_batches_not_found = build_batches_not_found;
    m_build_batches_not_found_isSet = true;
}

bool OAIBatchGetBuildBatchesOutput::is_build_batches_not_found_Set() const{
    return m_build_batches_not_found_isSet;
}

bool OAIBatchGetBuildBatchesOutput::is_build_batches_not_found_Valid() const{
    return m_build_batches_not_found_isValid;
}

bool OAIBatchGetBuildBatchesOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_build_batches.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_build_batches_not_found.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchGetBuildBatchesOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
