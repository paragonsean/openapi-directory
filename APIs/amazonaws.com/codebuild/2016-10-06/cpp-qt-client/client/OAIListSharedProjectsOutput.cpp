/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListSharedProjectsOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListSharedProjectsOutput::OAIListSharedProjectsOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListSharedProjectsOutput::OAIListSharedProjectsOutput() {
    this->initializeModel();
}

OAIListSharedProjectsOutput::~OAIListSharedProjectsOutput() {}

void OAIListSharedProjectsOutput::initializeModel() {

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_projects_isSet = false;
    m_projects_isValid = false;
}

void OAIListSharedProjectsOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListSharedProjectsOutput::fromJsonObject(QJsonObject json) {

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;

    m_projects_isValid = ::OpenAPI::fromJsonValue(m_projects, json[QString("projects")]);
    m_projects_isSet = !json[QString("projects")].isNull() && m_projects_isValid;
}

QString OAIListSharedProjectsOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListSharedProjectsOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_projects.isSet()) {
        obj.insert(QString("projects"), ::OpenAPI::toJsonValue(m_projects));
    }
    return obj;
}

QString OAIListSharedProjectsOutput::getNextToken() const {
    return m_next_token;
}
void OAIListSharedProjectsOutput::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListSharedProjectsOutput::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListSharedProjectsOutput::is_next_token_Valid() const{
    return m_next_token_isValid;
}

QList OAIListSharedProjectsOutput::getProjects() const {
    return m_projects;
}
void OAIListSharedProjectsOutput::setProjects(const QList &projects) {
    m_projects = projects;
    m_projects_isSet = true;
}

bool OAIListSharedProjectsOutput::is_projects_Set() const{
    return m_projects_isSet;
}

bool OAIListSharedProjectsOutput::is_projects_Valid() const{
    return m_projects_isValid;
}

bool OAIListSharedProjectsOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_projects.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListSharedProjectsOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
