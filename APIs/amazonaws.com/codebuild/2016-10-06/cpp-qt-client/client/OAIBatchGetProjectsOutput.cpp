/**
 * AWS CodeBuild
 * <fullname>CodeBuild</fullname> <p>CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code, runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the need to provision, manage, and scale your own build servers. It provides prepackaged build environments for the most popular programming languages and build tools, such as Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild to use your own build tools. CodeBuild scales automatically to meet peak build requests. You pay only for the build time you consume. For more information about CodeBuild, see the <i> <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\">CodeBuild User Guide</a>.</i> </p>
 *
 * The version of the OpenAPI document: 2016-10-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchGetProjectsOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchGetProjectsOutput::OAIBatchGetProjectsOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchGetProjectsOutput::OAIBatchGetProjectsOutput() {
    this->initializeModel();
}

OAIBatchGetProjectsOutput::~OAIBatchGetProjectsOutput() {}

void OAIBatchGetProjectsOutput::initializeModel() {

    m_projects_isSet = false;
    m_projects_isValid = false;

    m_projects_not_found_isSet = false;
    m_projects_not_found_isValid = false;
}

void OAIBatchGetProjectsOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchGetProjectsOutput::fromJsonObject(QJsonObject json) {

    m_projects_isValid = ::OpenAPI::fromJsonValue(m_projects, json[QString("projects")]);
    m_projects_isSet = !json[QString("projects")].isNull() && m_projects_isValid;

    m_projects_not_found_isValid = ::OpenAPI::fromJsonValue(m_projects_not_found, json[QString("projectsNotFound")]);
    m_projects_not_found_isSet = !json[QString("projectsNotFound")].isNull() && m_projects_not_found_isValid;
}

QString OAIBatchGetProjectsOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchGetProjectsOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_projects.isSet()) {
        obj.insert(QString("projects"), ::OpenAPI::toJsonValue(m_projects));
    }
    if (m_projects_not_found.isSet()) {
        obj.insert(QString("projectsNotFound"), ::OpenAPI::toJsonValue(m_projects_not_found));
    }
    return obj;
}

QList OAIBatchGetProjectsOutput::getProjects() const {
    return m_projects;
}
void OAIBatchGetProjectsOutput::setProjects(const QList &projects) {
    m_projects = projects;
    m_projects_isSet = true;
}

bool OAIBatchGetProjectsOutput::is_projects_Set() const{
    return m_projects_isSet;
}

bool OAIBatchGetProjectsOutput::is_projects_Valid() const{
    return m_projects_isValid;
}

QList OAIBatchGetProjectsOutput::getProjectsNotFound() const {
    return m_projects_not_found;
}
void OAIBatchGetProjectsOutput::setProjectsNotFound(const QList &projects_not_found) {
    m_projects_not_found = projects_not_found;
    m_projects_not_found_isSet = true;
}

bool OAIBatchGetProjectsOutput::is_projects_not_found_Set() const{
    return m_projects_not_found_isSet;
}

bool OAIBatchGetProjectsOutput::is_projects_not_found_Valid() const{
    return m_projects_not_found_isValid;
}

bool OAIBatchGetProjectsOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_projects.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_projects_not_found.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchGetProjectsOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
