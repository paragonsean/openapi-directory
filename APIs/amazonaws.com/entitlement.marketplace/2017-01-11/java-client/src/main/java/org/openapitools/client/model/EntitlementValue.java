/*
 * AWS Marketplace Entitlement Service
 * <fullname>AWS Marketplace Entitlement Service</fullname> <p>This reference provides descriptions of the AWS Marketplace Entitlement Service API.</p> <p>AWS Marketplace Entitlement Service is used to determine the entitlement of a customer to a given product. An entitlement represents capacity in a product owned by the customer. For example, a customer might own some number of users or seats in an SaaS application or some amount of data capacity in a multi-tenant database.</p> <p> <b>Getting Entitlement Records</b> </p> <ul> <li> <p> <i>GetEntitlements</i>- Gets the entitlements for a Marketplace product.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EntitlementValue
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:15.613706-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EntitlementValue {
  public static final String SERIALIZED_NAME_INTEGER_VALUE = "IntegerValue";
  @SerializedName(SERIALIZED_NAME_INTEGER_VALUE)
  private Integer integerValue;

  public static final String SERIALIZED_NAME_DOUBLE_VALUE = "DoubleValue";
  @SerializedName(SERIALIZED_NAME_DOUBLE_VALUE)
  private Double doubleValue;

  public static final String SERIALIZED_NAME_BOOLEAN_VALUE = "BooleanValue";
  @SerializedName(SERIALIZED_NAME_BOOLEAN_VALUE)
  private Boolean booleanValue;

  public static final String SERIALIZED_NAME_STRING_VALUE = "StringValue";
  @SerializedName(SERIALIZED_NAME_STRING_VALUE)
  private String stringValue;

  public EntitlementValue() {
  }

  public EntitlementValue integerValue(Integer integerValue) {
    this.integerValue = integerValue;
    return this;
  }

  /**
   * Get integerValue
   * @return integerValue
   */
  @javax.annotation.Nullable
  public Integer getIntegerValue() {
    return integerValue;
  }

  public void setIntegerValue(Integer integerValue) {
    this.integerValue = integerValue;
  }


  public EntitlementValue doubleValue(Double doubleValue) {
    this.doubleValue = doubleValue;
    return this;
  }

  /**
   * Get doubleValue
   * @return doubleValue
   */
  @javax.annotation.Nullable
  public Double getDoubleValue() {
    return doubleValue;
  }

  public void setDoubleValue(Double doubleValue) {
    this.doubleValue = doubleValue;
  }


  public EntitlementValue booleanValue(Boolean booleanValue) {
    this.booleanValue = booleanValue;
    return this;
  }

  /**
   * Get booleanValue
   * @return booleanValue
   */
  @javax.annotation.Nullable
  public Boolean getBooleanValue() {
    return booleanValue;
  }

  public void setBooleanValue(Boolean booleanValue) {
    this.booleanValue = booleanValue;
  }


  public EntitlementValue stringValue(String stringValue) {
    this.stringValue = stringValue;
    return this;
  }

  /**
   * Get stringValue
   * @return stringValue
   */
  @javax.annotation.Nullable
  public String getStringValue() {
    return stringValue;
  }

  public void setStringValue(String stringValue) {
    this.stringValue = stringValue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntitlementValue entitlementValue = (EntitlementValue) o;
    return Objects.equals(this.integerValue, entitlementValue.integerValue) &&
        Objects.equals(this.doubleValue, entitlementValue.doubleValue) &&
        Objects.equals(this.booleanValue, entitlementValue.booleanValue) &&
        Objects.equals(this.stringValue, entitlementValue.stringValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(integerValue, doubleValue, booleanValue, stringValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntitlementValue {\n");
    sb.append("    integerValue: ").append(toIndentedString(integerValue)).append("\n");
    sb.append("    doubleValue: ").append(toIndentedString(doubleValue)).append("\n");
    sb.append("    booleanValue: ").append(toIndentedString(booleanValue)).append("\n");
    sb.append("    stringValue: ").append(toIndentedString(stringValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("IntegerValue");
    openapiFields.add("DoubleValue");
    openapiFields.add("BooleanValue");
    openapiFields.add("StringValue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EntitlementValue
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EntitlementValue.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EntitlementValue is not found in the empty JSON string", EntitlementValue.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EntitlementValue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EntitlementValue` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `IntegerValue`
      if (jsonObj.get("IntegerValue") != null && !jsonObj.get("IntegerValue").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("IntegerValue"));
      }
      // validate the optional field `DoubleValue`
      if (jsonObj.get("DoubleValue") != null && !jsonObj.get("DoubleValue").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("DoubleValue"));
      }
      // validate the optional field `BooleanValue`
      if (jsonObj.get("BooleanValue") != null && !jsonObj.get("BooleanValue").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("BooleanValue"));
      }
      // validate the optional field `StringValue`
      if (jsonObj.get("StringValue") != null && !jsonObj.get("StringValue").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StringValue"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EntitlementValue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EntitlementValue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EntitlementValue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EntitlementValue.class));

       return (TypeAdapter<T>) new TypeAdapter<EntitlementValue>() {
           @Override
           public void write(JsonWriter out, EntitlementValue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EntitlementValue read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EntitlementValue given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EntitlementValue
   * @throws IOException if the JSON string is invalid with respect to EntitlementValue
   */
  public static EntitlementValue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EntitlementValue.class);
  }

  /**
   * Convert an instance of EntitlementValue to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

