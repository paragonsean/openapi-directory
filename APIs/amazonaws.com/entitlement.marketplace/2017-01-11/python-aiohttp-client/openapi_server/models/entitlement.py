# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.entitlement_value import EntitlementValue
from openapi_server import util


class Entitlement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, product_code: str=None, dimension: str=None, customer_identifier: str=None, value: EntitlementValue=None, expiration_date: datetime=None):
        """Entitlement - a model defined in OpenAPI

        :param product_code: The product_code of this Entitlement.
        :param dimension: The dimension of this Entitlement.
        :param customer_identifier: The customer_identifier of this Entitlement.
        :param value: The value of this Entitlement.
        :param expiration_date: The expiration_date of this Entitlement.
        """
        self.openapi_types = {
            'product_code': str,
            'dimension': str,
            'customer_identifier': str,
            'value': EntitlementValue,
            'expiration_date': datetime
        }

        self.attribute_map = {
            'product_code': 'ProductCode',
            'dimension': 'Dimension',
            'customer_identifier': 'CustomerIdentifier',
            'value': 'Value',
            'expiration_date': 'ExpirationDate'
        }

        self._product_code = product_code
        self._dimension = dimension
        self._customer_identifier = customer_identifier
        self._value = value
        self._expiration_date = expiration_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Entitlement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Entitlement of this Entitlement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def product_code(self):
        """Gets the product_code of this Entitlement.


        :return: The product_code of this Entitlement.
        :rtype: str
        """
        return self._product_code

    @product_code.setter
    def product_code(self, product_code):
        """Sets the product_code of this Entitlement.


        :param product_code: The product_code of this Entitlement.
        :type product_code: str
        """

        self._product_code = product_code

    @property
    def dimension(self):
        """Gets the dimension of this Entitlement.


        :return: The dimension of this Entitlement.
        :rtype: str
        """
        return self._dimension

    @dimension.setter
    def dimension(self, dimension):
        """Sets the dimension of this Entitlement.


        :param dimension: The dimension of this Entitlement.
        :type dimension: str
        """

        self._dimension = dimension

    @property
    def customer_identifier(self):
        """Gets the customer_identifier of this Entitlement.


        :return: The customer_identifier of this Entitlement.
        :rtype: str
        """
        return self._customer_identifier

    @customer_identifier.setter
    def customer_identifier(self, customer_identifier):
        """Sets the customer_identifier of this Entitlement.


        :param customer_identifier: The customer_identifier of this Entitlement.
        :type customer_identifier: str
        """

        self._customer_identifier = customer_identifier

    @property
    def value(self):
        """Gets the value of this Entitlement.


        :return: The value of this Entitlement.
        :rtype: EntitlementValue
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Entitlement.


        :param value: The value of this Entitlement.
        :type value: EntitlementValue
        """

        self._value = value

    @property
    def expiration_date(self):
        """Gets the expiration_date of this Entitlement.


        :return: The expiration_date of this Entitlement.
        :rtype: datetime
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this Entitlement.


        :param expiration_date: The expiration_date of this Entitlement.
        :type expiration_date: datetime
        """

        self._expiration_date = expiration_date
