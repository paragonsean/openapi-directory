/**
 * AWS Marketplace Entitlement Service
 * <fullname>AWS Marketplace Entitlement Service</fullname> <p>This reference provides descriptions of the AWS Marketplace Entitlement Service API.</p> <p>AWS Marketplace Entitlement Service is used to determine the entitlement of a customer to a given product. An entitlement represents capacity in a product owned by the customer. For example, a customer might own some number of users or seats in an SaaS application or some amount of data capacity in a multi-tenant database.</p> <p> <b>Getting Entitlement Records</b> </p> <ul> <li> <p> <i>GetEntitlements</i>- Gets the entitlements for a Marketplace product.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetEntitlementsRequest.h
 *
 * The GetEntitlementsRequest contains parameters for the GetEntitlements operation.
 */

#ifndef OAIGetEntitlementsRequest_H
#define OAIGetEntitlementsRequest_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetEntitlementsRequest : public OAIObject {
public:
    OAIGetEntitlementsRequest();
    OAIGetEntitlementsRequest(QString json);
    ~OAIGetEntitlementsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getProductCode() const;
    void setProductCode(const QString &product_code);
    bool is_product_code_Set() const;
    bool is_product_code_Valid() const;

    QMap getFilter() const;
    void setFilter(const QMap &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_product_code;
    bool m_product_code_isSet;
    bool m_product_code_isValid;

    QMap m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetEntitlementsRequest)

#endif // OAIGetEntitlementsRequest_H
