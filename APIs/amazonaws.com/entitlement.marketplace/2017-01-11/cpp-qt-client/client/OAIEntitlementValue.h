/**
 * AWS Marketplace Entitlement Service
 * <fullname>AWS Marketplace Entitlement Service</fullname> <p>This reference provides descriptions of the AWS Marketplace Entitlement Service API.</p> <p>AWS Marketplace Entitlement Service is used to determine the entitlement of a customer to a given product. An entitlement represents capacity in a product owned by the customer. For example, a customer might own some number of users or seats in an SaaS application or some amount of data capacity in a multi-tenant database.</p> <p> <b>Getting Entitlement Records</b> </p> <ul> <li> <p> <i>GetEntitlements</i>- Gets the entitlements for a Marketplace product.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntitlementValue.h
 *
 * The EntitlementValue represents the amount of capacity that the customer is entitled to for the product.
 */

#ifndef OAIEntitlementValue_H
#define OAIEntitlementValue_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEntitlementValue : public OAIObject {
public:
    OAIEntitlementValue();
    OAIEntitlementValue(QString json);
    ~OAIEntitlementValue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getIntegerValue() const;
    void setIntegerValue(const qint32 &integer_value);
    bool is_integer_value_Set() const;
    bool is_integer_value_Valid() const;

    double getDoubleValue() const;
    void setDoubleValue(const double &double_value);
    bool is_double_value_Set() const;
    bool is_double_value_Valid() const;

    bool getBooleanValue() const;
    void setBooleanValue(const bool &boolean_value);
    bool is_boolean_value_Set() const;
    bool is_boolean_value_Valid() const;

    QString getStringValue() const;
    void setStringValue(const QString &string_value);
    bool is_string_value_Set() const;
    bool is_string_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_integer_value;
    bool m_integer_value_isSet;
    bool m_integer_value_isValid;

    double m_double_value;
    bool m_double_value_isSet;
    bool m_double_value_isValid;

    bool m_boolean_value;
    bool m_boolean_value_isSet;
    bool m_boolean_value_isValid;

    QString m_string_value;
    bool m_string_value_isSet;
    bool m_string_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntitlementValue)

#endif // OAIEntitlementValue_H
