/**
 * AWS Marketplace Entitlement Service
 * <fullname>AWS Marketplace Entitlement Service</fullname> <p>This reference provides descriptions of the AWS Marketplace Entitlement Service API.</p> <p>AWS Marketplace Entitlement Service is used to determine the entitlement of a customer to a given product. An entitlement represents capacity in a product owned by the customer. For example, a customer might own some number of users or seats in an SaaS application or some amount of data capacity in a multi-tenant database.</p> <p> <b>Getting Entitlement Records</b> </p> <ul> <li> <p> <i>GetEntitlements</i>- Gets the entitlements for a Marketplace product.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetEntitlementsRequest model module.
 * @module model/GetEntitlementsRequest
 * @version 2017-01-11
 */
class GetEntitlementsRequest {
    /**
     * Constructs a new <code>GetEntitlementsRequest</code>.
     * The GetEntitlementsRequest contains parameters for the GetEntitlements operation.
     * @alias module:model/GetEntitlementsRequest
     * @param productCode {String} 
     */
    constructor(productCode) { 
        
        GetEntitlementsRequest.initialize(this, productCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, productCode) { 
        obj['ProductCode'] = productCode;
    }

    /**
     * Constructs a <code>GetEntitlementsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetEntitlementsRequest} obj Optional instance to populate.
     * @return {module:model/GetEntitlementsRequest} The populated <code>GetEntitlementsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetEntitlementsRequest();

            if (data.hasOwnProperty('ProductCode')) {
                obj['ProductCode'] = ApiClient.convertToType(data['ProductCode'], 'String');
            }
            if (data.hasOwnProperty('Filter')) {
                obj['Filter'] = ApiClient.convertToType(data['Filter'], Object);
            }
            if (data.hasOwnProperty('NextToken')) {
                obj['NextToken'] = ApiClient.convertToType(data['NextToken'], 'String');
            }
            if (data.hasOwnProperty('MaxResults')) {
                obj['MaxResults'] = ApiClient.convertToType(data['MaxResults'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetEntitlementsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetEntitlementsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetEntitlementsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ProductCode`
        if (data['ProductCode']) { // data not null
          String.validateJSON(data['ProductCode']);
        }
        // validate the optional field `Filter`
        if (data['Filter']) { // data not null
          Object.validateJSON(data['Filter']);
        }
        // validate the optional field `NextToken`
        if (data['NextToken']) { // data not null
          String.validateJSON(data['NextToken']);
        }
        // validate the optional field `MaxResults`
        if (data['MaxResults']) { // data not null
          Number.validateJSON(data['MaxResults']);
        }

        return true;
    }


}

GetEntitlementsRequest.RequiredProperties = ["ProductCode"];

/**
 * @member {String} ProductCode
 */
GetEntitlementsRequest.prototype['ProductCode'] = undefined;

/**
 * @member {Object} Filter
 */
GetEntitlementsRequest.prototype['Filter'] = undefined;

/**
 * @member {String} NextToken
 */
GetEntitlementsRequest.prototype['NextToken'] = undefined;

/**
 * @member {Number} MaxResults
 */
GetEntitlementsRequest.prototype['MaxResults'] = undefined;






export default GetEntitlementsRequest;

