/**
 * AWS Marketplace Entitlement Service
 * <fullname>AWS Marketplace Entitlement Service</fullname> <p>This reference provides descriptions of the AWS Marketplace Entitlement Service API.</p> <p>AWS Marketplace Entitlement Service is used to determine the entitlement of a customer to a given product. An entitlement represents capacity in a product owned by the customer. For example, a customer might own some number of users or seats in an SaaS application or some amount of data capacity in a multi-tenant database.</p> <p> <b>Getting Entitlement Records</b> </p> <ul> <li> <p> <i>GetEntitlements</i>- Gets the entitlements for a Marketplace product.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EntitlementValue from './EntitlementValue';

/**
 * The EntitlementValue model module.
 * @module model/EntitlementValue
 * @version 2017-01-11
 */
class EntitlementValue {
    /**
     * Constructs a new <code>EntitlementValue</code>.
     * @alias module:model/EntitlementValue
     * @implements module:model/EntitlementValue
     */
    constructor() { 
        EntitlementValue.initialize(this);
        EntitlementValue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EntitlementValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EntitlementValue} obj Optional instance to populate.
     * @return {module:model/EntitlementValue} The populated <code>EntitlementValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EntitlementValue();
            EntitlementValue.constructFromObject(data, obj);

            if (data.hasOwnProperty('IntegerValue')) {
                obj['IntegerValue'] = ApiClient.convertToType(data['IntegerValue'], 'Number');
            }
            if (data.hasOwnProperty('DoubleValue')) {
                obj['DoubleValue'] = ApiClient.convertToType(data['DoubleValue'], 'Number');
            }
            if (data.hasOwnProperty('BooleanValue')) {
                obj['BooleanValue'] = ApiClient.convertToType(data['BooleanValue'], 'Boolean');
            }
            if (data.hasOwnProperty('StringValue')) {
                obj['StringValue'] = ApiClient.convertToType(data['StringValue'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EntitlementValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EntitlementValue</code>.
     */
    static validateJSON(data) {
        // validate the optional field `IntegerValue`
        if (data['IntegerValue']) { // data not null
          Number.validateJSON(data['IntegerValue']);
        }
        // validate the optional field `DoubleValue`
        if (data['DoubleValue']) { // data not null
          Number.validateJSON(data['DoubleValue']);
        }
        // validate the optional field `BooleanValue`
        if (data['BooleanValue']) { // data not null
          Boolean.validateJSON(data['BooleanValue']);
        }
        // validate the optional field `StringValue`
        if (data['StringValue']) { // data not null
          String.validateJSON(data['StringValue']);
        }

        return true;
    }


}



/**
 * @member {Number} IntegerValue
 */
EntitlementValue.prototype['IntegerValue'] = undefined;

/**
 * @member {Number} DoubleValue
 */
EntitlementValue.prototype['DoubleValue'] = undefined;

/**
 * @member {Boolean} BooleanValue
 */
EntitlementValue.prototype['BooleanValue'] = undefined;

/**
 * @member {String} StringValue
 */
EntitlementValue.prototype['StringValue'] = undefined;


// Implement EntitlementValue interface:
/**
 * @member {Number} IntegerValue
 */
EntitlementValue.prototype['IntegerValue'] = undefined;
/**
 * @member {Number} DoubleValue
 */
EntitlementValue.prototype['DoubleValue'] = undefined;
/**
 * @member {Boolean} BooleanValue
 */
EntitlementValue.prototype['BooleanValue'] = undefined;
/**
 * @member {String} StringValue
 */
EntitlementValue.prototype['StringValue'] = undefined;




export default EntitlementValue;

