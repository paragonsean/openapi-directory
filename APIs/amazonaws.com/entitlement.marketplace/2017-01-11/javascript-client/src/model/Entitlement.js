/**
 * AWS Marketplace Entitlement Service
 * <fullname>AWS Marketplace Entitlement Service</fullname> <p>This reference provides descriptions of the AWS Marketplace Entitlement Service API.</p> <p>AWS Marketplace Entitlement Service is used to determine the entitlement of a customer to a given product. An entitlement represents capacity in a product owned by the customer. For example, a customer might own some number of users or seats in an SaaS application or some amount of data capacity in a multi-tenant database.</p> <p> <b>Getting Entitlement Records</b> </p> <ul> <li> <p> <i>GetEntitlements</i>- Gets the entitlements for a Marketplace product.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-01-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EntitlementValue from './EntitlementValue';

/**
 * The Entitlement model module.
 * @module model/Entitlement
 * @version 2017-01-11
 */
class Entitlement {
    /**
     * Constructs a new <code>Entitlement</code>.
     * An entitlement represents capacity in a product owned by the customer. For example, a customer might own some number of users or seats in an SaaS application or some amount of data capacity in a multi-tenant database.
     * @alias module:model/Entitlement
     */
    constructor() { 
        
        Entitlement.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Entitlement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Entitlement} obj Optional instance to populate.
     * @return {module:model/Entitlement} The populated <code>Entitlement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Entitlement();

            if (data.hasOwnProperty('ProductCode')) {
                obj['ProductCode'] = ApiClient.convertToType(data['ProductCode'], 'String');
            }
            if (data.hasOwnProperty('Dimension')) {
                obj['Dimension'] = ApiClient.convertToType(data['Dimension'], 'String');
            }
            if (data.hasOwnProperty('CustomerIdentifier')) {
                obj['CustomerIdentifier'] = ApiClient.convertToType(data['CustomerIdentifier'], 'String');
            }
            if (data.hasOwnProperty('Value')) {
                obj['Value'] = EntitlementValue.constructFromObject(data['Value']);
            }
            if (data.hasOwnProperty('ExpirationDate')) {
                obj['ExpirationDate'] = ApiClient.convertToType(data['ExpirationDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Entitlement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Entitlement</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ProductCode`
        if (data['ProductCode']) { // data not null
          String.validateJSON(data['ProductCode']);
        }
        // validate the optional field `Dimension`
        if (data['Dimension']) { // data not null
          String.validateJSON(data['Dimension']);
        }
        // validate the optional field `CustomerIdentifier`
        if (data['CustomerIdentifier']) { // data not null
          String.validateJSON(data['CustomerIdentifier']);
        }
        // validate the optional field `Value`
        if (data['Value']) { // data not null
          EntitlementValue.validateJSON(data['Value']);
        }
        // validate the optional field `ExpirationDate`
        if (data['ExpirationDate']) { // data not null
          Date.validateJSON(data['ExpirationDate']);
        }

        return true;
    }


}



/**
 * @member {String} ProductCode
 */
Entitlement.prototype['ProductCode'] = undefined;

/**
 * @member {String} Dimension
 */
Entitlement.prototype['Dimension'] = undefined;

/**
 * @member {String} CustomerIdentifier
 */
Entitlement.prototype['CustomerIdentifier'] = undefined;

/**
 * @member {module:model/EntitlementValue} Value
 */
Entitlement.prototype['Value'] = undefined;

/**
 * @member {Date} ExpirationDate
 */
Entitlement.prototype['ExpirationDate'] = undefined;






export default Entitlement;

