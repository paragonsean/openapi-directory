# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventTypeIngestedEventStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, number_of_events: int=None, event_data_size_in_bytes: int=None, least_recent_event: str=None, most_recent_event: str=None, last_updated_time: str=None):
        """EventTypeIngestedEventStatistics - a model defined in OpenAPI

        :param number_of_events: The number_of_events of this EventTypeIngestedEventStatistics.
        :param event_data_size_in_bytes: The event_data_size_in_bytes of this EventTypeIngestedEventStatistics.
        :param least_recent_event: The least_recent_event of this EventTypeIngestedEventStatistics.
        :param most_recent_event: The most_recent_event of this EventTypeIngestedEventStatistics.
        :param last_updated_time: The last_updated_time of this EventTypeIngestedEventStatistics.
        """
        self.openapi_types = {
            'number_of_events': int,
            'event_data_size_in_bytes': int,
            'least_recent_event': str,
            'most_recent_event': str,
            'last_updated_time': str
        }

        self.attribute_map = {
            'number_of_events': 'numberOfEvents',
            'event_data_size_in_bytes': 'eventDataSizeInBytes',
            'least_recent_event': 'leastRecentEvent',
            'most_recent_event': 'mostRecentEvent',
            'last_updated_time': 'lastUpdatedTime'
        }

        self._number_of_events = number_of_events
        self._event_data_size_in_bytes = event_data_size_in_bytes
        self._least_recent_event = least_recent_event
        self._most_recent_event = most_recent_event
        self._last_updated_time = last_updated_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventTypeIngestedEventStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventType_ingestedEventStatistics of this EventTypeIngestedEventStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number_of_events(self):
        """Gets the number_of_events of this EventTypeIngestedEventStatistics.


        :return: The number_of_events of this EventTypeIngestedEventStatistics.
        :rtype: int
        """
        return self._number_of_events

    @number_of_events.setter
    def number_of_events(self, number_of_events):
        """Sets the number_of_events of this EventTypeIngestedEventStatistics.


        :param number_of_events: The number_of_events of this EventTypeIngestedEventStatistics.
        :type number_of_events: int
        """

        self._number_of_events = number_of_events

    @property
    def event_data_size_in_bytes(self):
        """Gets the event_data_size_in_bytes of this EventTypeIngestedEventStatistics.


        :return: The event_data_size_in_bytes of this EventTypeIngestedEventStatistics.
        :rtype: int
        """
        return self._event_data_size_in_bytes

    @event_data_size_in_bytes.setter
    def event_data_size_in_bytes(self, event_data_size_in_bytes):
        """Sets the event_data_size_in_bytes of this EventTypeIngestedEventStatistics.


        :param event_data_size_in_bytes: The event_data_size_in_bytes of this EventTypeIngestedEventStatistics.
        :type event_data_size_in_bytes: int
        """

        self._event_data_size_in_bytes = event_data_size_in_bytes

    @property
    def least_recent_event(self):
        """Gets the least_recent_event of this EventTypeIngestedEventStatistics.


        :return: The least_recent_event of this EventTypeIngestedEventStatistics.
        :rtype: str
        """
        return self._least_recent_event

    @least_recent_event.setter
    def least_recent_event(self, least_recent_event):
        """Sets the least_recent_event of this EventTypeIngestedEventStatistics.


        :param least_recent_event: The least_recent_event of this EventTypeIngestedEventStatistics.
        :type least_recent_event: str
        """

        self._least_recent_event = least_recent_event

    @property
    def most_recent_event(self):
        """Gets the most_recent_event of this EventTypeIngestedEventStatistics.


        :return: The most_recent_event of this EventTypeIngestedEventStatistics.
        :rtype: str
        """
        return self._most_recent_event

    @most_recent_event.setter
    def most_recent_event(self, most_recent_event):
        """Sets the most_recent_event of this EventTypeIngestedEventStatistics.


        :param most_recent_event: The most_recent_event of this EventTypeIngestedEventStatistics.
        :type most_recent_event: str
        """

        self._most_recent_event = most_recent_event

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this EventTypeIngestedEventStatistics.


        :return: The last_updated_time of this EventTypeIngestedEventStatistics.
        :rtype: str
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this EventTypeIngestedEventStatistics.


        :param last_updated_time: The last_updated_time of this EventTypeIngestedEventStatistics.
        :type last_updated_time: str
        """

        self._last_updated_time = last_updated_time
