# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FieldValidationMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, field_name: str=None, identifier: str=None, title: str=None, content: str=None, type: str=None):
        """FieldValidationMessage - a model defined in OpenAPI

        :param field_name: The field_name of this FieldValidationMessage.
        :param identifier: The identifier of this FieldValidationMessage.
        :param title: The title of this FieldValidationMessage.
        :param content: The content of this FieldValidationMessage.
        :param type: The type of this FieldValidationMessage.
        """
        self.openapi_types = {
            'field_name': str,
            'identifier': str,
            'title': str,
            'content': str,
            'type': str
        }

        self.attribute_map = {
            'field_name': 'fieldName',
            'identifier': 'identifier',
            'title': 'title',
            'content': 'content',
            'type': 'type'
        }

        self._field_name = field_name
        self._identifier = identifier
        self._title = title
        self._content = content
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FieldValidationMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FieldValidationMessage of this FieldValidationMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def field_name(self):
        """Gets the field_name of this FieldValidationMessage.


        :return: The field_name of this FieldValidationMessage.
        :rtype: str
        """
        return self._field_name

    @field_name.setter
    def field_name(self, field_name):
        """Sets the field_name of this FieldValidationMessage.


        :param field_name: The field_name of this FieldValidationMessage.
        :type field_name: str
        """

        self._field_name = field_name

    @property
    def identifier(self):
        """Gets the identifier of this FieldValidationMessage.


        :return: The identifier of this FieldValidationMessage.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this FieldValidationMessage.


        :param identifier: The identifier of this FieldValidationMessage.
        :type identifier: str
        """

        self._identifier = identifier

    @property
    def title(self):
        """Gets the title of this FieldValidationMessage.


        :return: The title of this FieldValidationMessage.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this FieldValidationMessage.


        :param title: The title of this FieldValidationMessage.
        :type title: str
        """

        self._title = title

    @property
    def content(self):
        """Gets the content of this FieldValidationMessage.


        :return: The content of this FieldValidationMessage.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this FieldValidationMessage.


        :param content: The content of this FieldValidationMessage.
        :type content: str
        """

        self._content = content

    @property
    def type(self):
        """Gets the type of this FieldValidationMessage.


        :return: The type of this FieldValidationMessage.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this FieldValidationMessage.


        :param type: The type of this FieldValidationMessage.
        :type type: str
        """

        self._type = type
