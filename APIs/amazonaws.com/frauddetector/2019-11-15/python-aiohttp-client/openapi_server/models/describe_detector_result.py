# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeDetectorResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detector_id: str=None, detector_version_summaries: List=None, next_token: str=None, arn: str=None):
        """DescribeDetectorResult - a model defined in OpenAPI

        :param detector_id: The detector_id of this DescribeDetectorResult.
        :param detector_version_summaries: The detector_version_summaries of this DescribeDetectorResult.
        :param next_token: The next_token of this DescribeDetectorResult.
        :param arn: The arn of this DescribeDetectorResult.
        """
        self.openapi_types = {
            'detector_id': str,
            'detector_version_summaries': List,
            'next_token': str,
            'arn': str
        }

        self.attribute_map = {
            'detector_id': 'detectorId',
            'detector_version_summaries': 'detectorVersionSummaries',
            'next_token': 'nextToken',
            'arn': 'arn'
        }

        self._detector_id = detector_id
        self._detector_version_summaries = detector_version_summaries
        self._next_token = next_token
        self._arn = arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeDetectorResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeDetectorResult of this DescribeDetectorResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detector_id(self):
        """Gets the detector_id of this DescribeDetectorResult.


        :return: The detector_id of this DescribeDetectorResult.
        :rtype: str
        """
        return self._detector_id

    @detector_id.setter
    def detector_id(self, detector_id):
        """Sets the detector_id of this DescribeDetectorResult.


        :param detector_id: The detector_id of this DescribeDetectorResult.
        :type detector_id: str
        """

        self._detector_id = detector_id

    @property
    def detector_version_summaries(self):
        """Gets the detector_version_summaries of this DescribeDetectorResult.


        :return: The detector_version_summaries of this DescribeDetectorResult.
        :rtype: List
        """
        return self._detector_version_summaries

    @detector_version_summaries.setter
    def detector_version_summaries(self, detector_version_summaries):
        """Sets the detector_version_summaries of this DescribeDetectorResult.


        :param detector_version_summaries: The detector_version_summaries of this DescribeDetectorResult.
        :type detector_version_summaries: List
        """

        self._detector_version_summaries = detector_version_summaries

    @property
    def next_token(self):
        """Gets the next_token of this DescribeDetectorResult.


        :return: The next_token of this DescribeDetectorResult.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeDetectorResult.


        :param next_token: The next_token of this DescribeDetectorResult.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def arn(self):
        """Gets the arn of this DescribeDetectorResult.


        :return: The arn of this DescribeDetectorResult.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this DescribeDetectorResult.


        :param arn: The arn of this DescribeDetectorResult.
        :type arn: str
        """

        self._arn = arn
