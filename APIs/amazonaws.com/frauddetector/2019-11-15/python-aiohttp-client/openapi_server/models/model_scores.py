# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_scores_model_version import ModelScoresModelVersion
from openapi_server import util


class ModelScores(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_version: ModelScoresModelVersion=None, scores: Dict=None):
        """ModelScores - a model defined in OpenAPI

        :param model_version: The model_version of this ModelScores.
        :param scores: The scores of this ModelScores.
        """
        self.openapi_types = {
            'model_version': ModelScoresModelVersion,
            'scores': Dict
        }

        self.attribute_map = {
            'model_version': 'modelVersion',
            'scores': 'scores'
        }

        self._model_version = model_version
        self._scores = scores

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModelScores':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModelScores of this ModelScores.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_version(self):
        """Gets the model_version of this ModelScores.


        :return: The model_version of this ModelScores.
        :rtype: ModelScoresModelVersion
        """
        return self._model_version

    @model_version.setter
    def model_version(self, model_version):
        """Sets the model_version of this ModelScores.


        :param model_version: The model_version of this ModelScores.
        :type model_version: ModelScoresModelVersion
        """

        self._model_version = model_version

    @property
    def scores(self):
        """Gets the scores of this ModelScores.


        :return: The scores of this ModelScores.
        :rtype: Dict
        """
        return self._scores

    @scores.setter
    def scores(self, scores):
        """Sets the scores of this ModelScores.


        :param scores: The scores of this ModelScores.
        :type scores: Dict
        """

        self._scores = scores
