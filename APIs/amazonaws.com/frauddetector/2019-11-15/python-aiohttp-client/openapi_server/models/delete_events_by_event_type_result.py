# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteEventsByEventTypeResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_type_name: str=None, events_deletion_status: str=None):
        """DeleteEventsByEventTypeResult - a model defined in OpenAPI

        :param event_type_name: The event_type_name of this DeleteEventsByEventTypeResult.
        :param events_deletion_status: The events_deletion_status of this DeleteEventsByEventTypeResult.
        """
        self.openapi_types = {
            'event_type_name': str,
            'events_deletion_status': str
        }

        self.attribute_map = {
            'event_type_name': 'eventTypeName',
            'events_deletion_status': 'eventsDeletionStatus'
        }

        self._event_type_name = event_type_name
        self._events_deletion_status = events_deletion_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteEventsByEventTypeResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteEventsByEventTypeResult of this DeleteEventsByEventTypeResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_type_name(self):
        """Gets the event_type_name of this DeleteEventsByEventTypeResult.


        :return: The event_type_name of this DeleteEventsByEventTypeResult.
        :rtype: str
        """
        return self._event_type_name

    @event_type_name.setter
    def event_type_name(self, event_type_name):
        """Sets the event_type_name of this DeleteEventsByEventTypeResult.


        :param event_type_name: The event_type_name of this DeleteEventsByEventTypeResult.
        :type event_type_name: str
        """

        self._event_type_name = event_type_name

    @property
    def events_deletion_status(self):
        """Gets the events_deletion_status of this DeleteEventsByEventTypeResult.


        :return: The events_deletion_status of this DeleteEventsByEventTypeResult.
        :rtype: str
        """
        return self._events_deletion_status

    @events_deletion_status.setter
    def events_deletion_status(self, events_deletion_status):
        """Sets the events_deletion_status of this DeleteEventsByEventTypeResult.


        :param events_deletion_status: The events_deletion_status of this DeleteEventsByEventTypeResult.
        :type events_deletion_status: str
        """

        self._events_deletion_status = events_deletion_status
