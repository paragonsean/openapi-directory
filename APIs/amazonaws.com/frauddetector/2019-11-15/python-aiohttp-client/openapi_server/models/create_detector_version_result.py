# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.detector_version_status import DetectorVersionStatus
from openapi_server import util


class CreateDetectorVersionResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detector_id: str=None, detector_version_id: str=None, status: DetectorVersionStatus=None):
        """CreateDetectorVersionResult - a model defined in OpenAPI

        :param detector_id: The detector_id of this CreateDetectorVersionResult.
        :param detector_version_id: The detector_version_id of this CreateDetectorVersionResult.
        :param status: The status of this CreateDetectorVersionResult.
        """
        self.openapi_types = {
            'detector_id': str,
            'detector_version_id': str,
            'status': DetectorVersionStatus
        }

        self.attribute_map = {
            'detector_id': 'detectorId',
            'detector_version_id': 'detectorVersionId',
            'status': 'status'
        }

        self._detector_id = detector_id
        self._detector_version_id = detector_version_id
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDetectorVersionResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDetectorVersionResult of this CreateDetectorVersionResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detector_id(self):
        """Gets the detector_id of this CreateDetectorVersionResult.


        :return: The detector_id of this CreateDetectorVersionResult.
        :rtype: str
        """
        return self._detector_id

    @detector_id.setter
    def detector_id(self, detector_id):
        """Sets the detector_id of this CreateDetectorVersionResult.


        :param detector_id: The detector_id of this CreateDetectorVersionResult.
        :type detector_id: str
        """

        self._detector_id = detector_id

    @property
    def detector_version_id(self):
        """Gets the detector_version_id of this CreateDetectorVersionResult.


        :return: The detector_version_id of this CreateDetectorVersionResult.
        :rtype: str
        """
        return self._detector_version_id

    @detector_version_id.setter
    def detector_version_id(self, detector_version_id):
        """Sets the detector_version_id of this CreateDetectorVersionResult.


        :param detector_version_id: The detector_version_id of this CreateDetectorVersionResult.
        :type detector_version_id: str
        """

        self._detector_version_id = detector_version_id

    @property
    def status(self):
        """Gets the status of this CreateDetectorVersionResult.


        :return: The status of this CreateDetectorVersionResult.
        :rtype: DetectorVersionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CreateDetectorVersionResult.


        :param status: The status of this CreateDetectorVersionResult.
        :type status: DetectorVersionStatus
        """

        self._status = status
