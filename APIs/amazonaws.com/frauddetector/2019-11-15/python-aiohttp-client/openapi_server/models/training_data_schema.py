# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.label_schema import LabelSchema
from openapi_server import util


class TrainingDataSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_variables: List=None, label_schema: LabelSchema=None):
        """TrainingDataSchema - a model defined in OpenAPI

        :param model_variables: The model_variables of this TrainingDataSchema.
        :param label_schema: The label_schema of this TrainingDataSchema.
        """
        self.openapi_types = {
            'model_variables': List,
            'label_schema': LabelSchema
        }

        self.attribute_map = {
            'model_variables': 'modelVariables',
            'label_schema': 'labelSchema'
        }

        self._model_variables = model_variables
        self._label_schema = label_schema

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrainingDataSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TrainingDataSchema of this TrainingDataSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_variables(self):
        """Gets the model_variables of this TrainingDataSchema.


        :return: The model_variables of this TrainingDataSchema.
        :rtype: List
        """
        return self._model_variables

    @model_variables.setter
    def model_variables(self, model_variables):
        """Sets the model_variables of this TrainingDataSchema.


        :param model_variables: The model_variables of this TrainingDataSchema.
        :type model_variables: List
        """
        if model_variables is None:
            raise ValueError("Invalid value for `model_variables`, must not be `None`")

        self._model_variables = model_variables

    @property
    def label_schema(self):
        """Gets the label_schema of this TrainingDataSchema.


        :return: The label_schema of this TrainingDataSchema.
        :rtype: LabelSchema
        """
        return self._label_schema

    @label_schema.setter
    def label_schema(self, label_schema):
        """Sets the label_schema of this TrainingDataSchema.


        :param label_schema: The label_schema of this TrainingDataSchema.
        :type label_schema: LabelSchema
        """

        self._label_schema = label_schema
