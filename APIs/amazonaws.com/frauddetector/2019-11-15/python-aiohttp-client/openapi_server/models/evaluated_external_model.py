# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EvaluatedExternalModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_endpoint: str=None, use_event_variables: bool=None, input_variables: Dict=None, output_variables: Dict=None):
        """EvaluatedExternalModel - a model defined in OpenAPI

        :param model_endpoint: The model_endpoint of this EvaluatedExternalModel.
        :param use_event_variables: The use_event_variables of this EvaluatedExternalModel.
        :param input_variables: The input_variables of this EvaluatedExternalModel.
        :param output_variables: The output_variables of this EvaluatedExternalModel.
        """
        self.openapi_types = {
            'model_endpoint': str,
            'use_event_variables': bool,
            'input_variables': Dict,
            'output_variables': Dict
        }

        self.attribute_map = {
            'model_endpoint': 'modelEndpoint',
            'use_event_variables': 'useEventVariables',
            'input_variables': 'inputVariables',
            'output_variables': 'outputVariables'
        }

        self._model_endpoint = model_endpoint
        self._use_event_variables = use_event_variables
        self._input_variables = input_variables
        self._output_variables = output_variables

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EvaluatedExternalModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EvaluatedExternalModel of this EvaluatedExternalModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_endpoint(self):
        """Gets the model_endpoint of this EvaluatedExternalModel.


        :return: The model_endpoint of this EvaluatedExternalModel.
        :rtype: str
        """
        return self._model_endpoint

    @model_endpoint.setter
    def model_endpoint(self, model_endpoint):
        """Sets the model_endpoint of this EvaluatedExternalModel.


        :param model_endpoint: The model_endpoint of this EvaluatedExternalModel.
        :type model_endpoint: str
        """

        self._model_endpoint = model_endpoint

    @property
    def use_event_variables(self):
        """Gets the use_event_variables of this EvaluatedExternalModel.


        :return: The use_event_variables of this EvaluatedExternalModel.
        :rtype: bool
        """
        return self._use_event_variables

    @use_event_variables.setter
    def use_event_variables(self, use_event_variables):
        """Sets the use_event_variables of this EvaluatedExternalModel.


        :param use_event_variables: The use_event_variables of this EvaluatedExternalModel.
        :type use_event_variables: bool
        """

        self._use_event_variables = use_event_variables

    @property
    def input_variables(self):
        """Gets the input_variables of this EvaluatedExternalModel.


        :return: The input_variables of this EvaluatedExternalModel.
        :rtype: Dict
        """
        return self._input_variables

    @input_variables.setter
    def input_variables(self, input_variables):
        """Sets the input_variables of this EvaluatedExternalModel.


        :param input_variables: The input_variables of this EvaluatedExternalModel.
        :type input_variables: Dict
        """

        self._input_variables = input_variables

    @property
    def output_variables(self):
        """Gets the output_variables of this EvaluatedExternalModel.


        :return: The output_variables of this EvaluatedExternalModel.
        :rtype: Dict
        """
        return self._output_variables

    @output_variables.setter
    def output_variables(self, output_variables):
        """Sets the output_variables of this EvaluatedExternalModel.


        :param output_variables: The output_variables of this EvaluatedExternalModel.
        :type output_variables: Dict
        """

        self._output_variables = output_variables
