# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteExternalModelRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_endpoint: str=None):
        """DeleteExternalModelRequest - a model defined in OpenAPI

        :param model_endpoint: The model_endpoint of this DeleteExternalModelRequest.
        """
        self.openapi_types = {
            'model_endpoint': str
        }

        self.attribute_map = {
            'model_endpoint': 'modelEndpoint'
        }

        self._model_endpoint = model_endpoint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteExternalModelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteExternalModelRequest of this DeleteExternalModelRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_endpoint(self):
        """Gets the model_endpoint of this DeleteExternalModelRequest.


        :return: The model_endpoint of this DeleteExternalModelRequest.
        :rtype: str
        """
        return self._model_endpoint

    @model_endpoint.setter
    def model_endpoint(self, model_endpoint):
        """Sets the model_endpoint of this DeleteExternalModelRequest.


        :param model_endpoint: The model_endpoint of this DeleteExternalModelRequest.
        :type model_endpoint: str
        """
        if model_endpoint is None:
            raise ValueError("Invalid value for `model_endpoint`, must not be `None`")

        self._model_endpoint = model_endpoint
