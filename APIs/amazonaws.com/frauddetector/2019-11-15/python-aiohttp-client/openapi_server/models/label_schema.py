# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.unlabeled_events_treatment import UnlabeledEventsTreatment
from openapi_server import util


class LabelSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, label_mapper: Dict=None, unlabeled_events_treatment: UnlabeledEventsTreatment=None):
        """LabelSchema - a model defined in OpenAPI

        :param label_mapper: The label_mapper of this LabelSchema.
        :param unlabeled_events_treatment: The unlabeled_events_treatment of this LabelSchema.
        """
        self.openapi_types = {
            'label_mapper': Dict,
            'unlabeled_events_treatment': UnlabeledEventsTreatment
        }

        self.attribute_map = {
            'label_mapper': 'labelMapper',
            'unlabeled_events_treatment': 'unlabeledEventsTreatment'
        }

        self._label_mapper = label_mapper
        self._unlabeled_events_treatment = unlabeled_events_treatment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LabelSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LabelSchema of this LabelSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def label_mapper(self):
        """Gets the label_mapper of this LabelSchema.


        :return: The label_mapper of this LabelSchema.
        :rtype: Dict
        """
        return self._label_mapper

    @label_mapper.setter
    def label_mapper(self, label_mapper):
        """Sets the label_mapper of this LabelSchema.


        :param label_mapper: The label_mapper of this LabelSchema.
        :type label_mapper: Dict
        """

        self._label_mapper = label_mapper

    @property
    def unlabeled_events_treatment(self):
        """Gets the unlabeled_events_treatment of this LabelSchema.


        :return: The unlabeled_events_treatment of this LabelSchema.
        :rtype: UnlabeledEventsTreatment
        """
        return self._unlabeled_events_treatment

    @unlabeled_events_treatment.setter
    def unlabeled_events_treatment(self, unlabeled_events_treatment):
        """Sets the unlabeled_events_treatment of this LabelSchema.


        :param unlabeled_events_treatment: The unlabeled_events_treatment of this LabelSchema.
        :type unlabeled_events_treatment: UnlabeledEventsTreatment
        """

        self._unlabeled_events_treatment = unlabeled_events_treatment
