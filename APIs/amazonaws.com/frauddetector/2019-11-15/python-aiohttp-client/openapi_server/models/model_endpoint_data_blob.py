# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ModelEndpointDataBlob(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, byte_buffer: str=None, content_type: str=None):
        """ModelEndpointDataBlob - a model defined in OpenAPI

        :param byte_buffer: The byte_buffer of this ModelEndpointDataBlob.
        :param content_type: The content_type of this ModelEndpointDataBlob.
        """
        self.openapi_types = {
            'byte_buffer': str,
            'content_type': str
        }

        self.attribute_map = {
            'byte_buffer': 'byteBuffer',
            'content_type': 'contentType'
        }

        self._byte_buffer = byte_buffer
        self._content_type = content_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModelEndpointDataBlob':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModelEndpointDataBlob of this ModelEndpointDataBlob.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def byte_buffer(self):
        """Gets the byte_buffer of this ModelEndpointDataBlob.


        :return: The byte_buffer of this ModelEndpointDataBlob.
        :rtype: str
        """
        return self._byte_buffer

    @byte_buffer.setter
    def byte_buffer(self, byte_buffer):
        """Sets the byte_buffer of this ModelEndpointDataBlob.


        :param byte_buffer: The byte_buffer of this ModelEndpointDataBlob.
        :type byte_buffer: str
        """

        self._byte_buffer = byte_buffer

    @property
    def content_type(self):
        """Gets the content_type of this ModelEndpointDataBlob.


        :return: The content_type of this ModelEndpointDataBlob.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this ModelEndpointDataBlob.


        :param content_type: The content_type of this ModelEndpointDataBlob.
        :type content_type: str
        """

        self._content_type = content_type
