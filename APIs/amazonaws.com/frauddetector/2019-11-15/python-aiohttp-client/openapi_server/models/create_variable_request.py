# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_source import DataSource
from openapi_server.models.data_type import DataType
from openapi_server import util


class CreateVariableRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, data_type: DataType=None, data_source: DataSource=None, default_value: str=None, description: str=None, variable_type: str=None, tags: List=None):
        """CreateVariableRequest - a model defined in OpenAPI

        :param name: The name of this CreateVariableRequest.
        :param data_type: The data_type of this CreateVariableRequest.
        :param data_source: The data_source of this CreateVariableRequest.
        :param default_value: The default_value of this CreateVariableRequest.
        :param description: The description of this CreateVariableRequest.
        :param variable_type: The variable_type of this CreateVariableRequest.
        :param tags: The tags of this CreateVariableRequest.
        """
        self.openapi_types = {
            'name': str,
            'data_type': DataType,
            'data_source': DataSource,
            'default_value': str,
            'description': str,
            'variable_type': str,
            'tags': List
        }

        self.attribute_map = {
            'name': 'name',
            'data_type': 'dataType',
            'data_source': 'dataSource',
            'default_value': 'defaultValue',
            'description': 'description',
            'variable_type': 'variableType',
            'tags': 'tags'
        }

        self._name = name
        self._data_type = data_type
        self._data_source = data_source
        self._default_value = default_value
        self._description = description
        self._variable_type = variable_type
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateVariableRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateVariableRequest of this CreateVariableRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CreateVariableRequest.


        :return: The name of this CreateVariableRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateVariableRequest.


        :param name: The name of this CreateVariableRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def data_type(self):
        """Gets the data_type of this CreateVariableRequest.


        :return: The data_type of this CreateVariableRequest.
        :rtype: DataType
        """
        return self._data_type

    @data_type.setter
    def data_type(self, data_type):
        """Sets the data_type of this CreateVariableRequest.


        :param data_type: The data_type of this CreateVariableRequest.
        :type data_type: DataType
        """
        if data_type is None:
            raise ValueError("Invalid value for `data_type`, must not be `None`")

        self._data_type = data_type

    @property
    def data_source(self):
        """Gets the data_source of this CreateVariableRequest.


        :return: The data_source of this CreateVariableRequest.
        :rtype: DataSource
        """
        return self._data_source

    @data_source.setter
    def data_source(self, data_source):
        """Sets the data_source of this CreateVariableRequest.


        :param data_source: The data_source of this CreateVariableRequest.
        :type data_source: DataSource
        """
        if data_source is None:
            raise ValueError("Invalid value for `data_source`, must not be `None`")

        self._data_source = data_source

    @property
    def default_value(self):
        """Gets the default_value of this CreateVariableRequest.


        :return: The default_value of this CreateVariableRequest.
        :rtype: str
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this CreateVariableRequest.


        :param default_value: The default_value of this CreateVariableRequest.
        :type default_value: str
        """
        if default_value is None:
            raise ValueError("Invalid value for `default_value`, must not be `None`")

        self._default_value = default_value

    @property
    def description(self):
        """Gets the description of this CreateVariableRequest.


        :return: The description of this CreateVariableRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateVariableRequest.


        :param description: The description of this CreateVariableRequest.
        :type description: str
        """

        self._description = description

    @property
    def variable_type(self):
        """Gets the variable_type of this CreateVariableRequest.


        :return: The variable_type of this CreateVariableRequest.
        :rtype: str
        """
        return self._variable_type

    @variable_type.setter
    def variable_type(self, variable_type):
        """Sets the variable_type of this CreateVariableRequest.


        :param variable_type: The variable_type of this CreateVariableRequest.
        :type variable_type: str
        """

        self._variable_type = variable_type

    @property
    def tags(self):
        """Gets the tags of this CreateVariableRequest.


        :return: The tags of this CreateVariableRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateVariableRequest.


        :param tags: The tags of this CreateVariableRequest.
        :type tags: List
        """

        self._tags = tags
