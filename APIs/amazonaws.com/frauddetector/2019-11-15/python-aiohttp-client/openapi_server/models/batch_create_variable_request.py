# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchCreateVariableRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, variable_entries: List=None, tags: List=None):
        """BatchCreateVariableRequest - a model defined in OpenAPI

        :param variable_entries: The variable_entries of this BatchCreateVariableRequest.
        :param tags: The tags of this BatchCreateVariableRequest.
        """
        self.openapi_types = {
            'variable_entries': List,
            'tags': List
        }

        self.attribute_map = {
            'variable_entries': 'variableEntries',
            'tags': 'tags'
        }

        self._variable_entries = variable_entries
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchCreateVariableRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchCreateVariableRequest of this BatchCreateVariableRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def variable_entries(self):
        """Gets the variable_entries of this BatchCreateVariableRequest.


        :return: The variable_entries of this BatchCreateVariableRequest.
        :rtype: List
        """
        return self._variable_entries

    @variable_entries.setter
    def variable_entries(self, variable_entries):
        """Sets the variable_entries of this BatchCreateVariableRequest.


        :param variable_entries: The variable_entries of this BatchCreateVariableRequest.
        :type variable_entries: List
        """
        if variable_entries is None:
            raise ValueError("Invalid value for `variable_entries`, must not be `None`")

        self._variable_entries = variable_entries

    @property
    def tags(self):
        """Gets the tags of this BatchCreateVariableRequest.


        :return: The tags of this BatchCreateVariableRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this BatchCreateVariableRequest.


        :param tags: The tags of this BatchCreateVariableRequest.
        :type tags: List
        """

        self._tags = tags
