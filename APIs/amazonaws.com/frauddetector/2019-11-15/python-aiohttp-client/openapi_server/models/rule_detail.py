# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.language import Language
from openapi_server import util


class RuleDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rule_id: str=None, description: str=None, detector_id: str=None, rule_version: str=None, expression: str=None, language: Language=None, outcomes: List=None, last_updated_time: str=None, created_time: str=None, arn: str=None):
        """RuleDetail - a model defined in OpenAPI

        :param rule_id: The rule_id of this RuleDetail.
        :param description: The description of this RuleDetail.
        :param detector_id: The detector_id of this RuleDetail.
        :param rule_version: The rule_version of this RuleDetail.
        :param expression: The expression of this RuleDetail.
        :param language: The language of this RuleDetail.
        :param outcomes: The outcomes of this RuleDetail.
        :param last_updated_time: The last_updated_time of this RuleDetail.
        :param created_time: The created_time of this RuleDetail.
        :param arn: The arn of this RuleDetail.
        """
        self.openapi_types = {
            'rule_id': str,
            'description': str,
            'detector_id': str,
            'rule_version': str,
            'expression': str,
            'language': Language,
            'outcomes': List,
            'last_updated_time': str,
            'created_time': str,
            'arn': str
        }

        self.attribute_map = {
            'rule_id': 'ruleId',
            'description': 'description',
            'detector_id': 'detectorId',
            'rule_version': 'ruleVersion',
            'expression': 'expression',
            'language': 'language',
            'outcomes': 'outcomes',
            'last_updated_time': 'lastUpdatedTime',
            'created_time': 'createdTime',
            'arn': 'arn'
        }

        self._rule_id = rule_id
        self._description = description
        self._detector_id = detector_id
        self._rule_version = rule_version
        self._expression = expression
        self._language = language
        self._outcomes = outcomes
        self._last_updated_time = last_updated_time
        self._created_time = created_time
        self._arn = arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RuleDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RuleDetail of this RuleDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rule_id(self):
        """Gets the rule_id of this RuleDetail.


        :return: The rule_id of this RuleDetail.
        :rtype: str
        """
        return self._rule_id

    @rule_id.setter
    def rule_id(self, rule_id):
        """Sets the rule_id of this RuleDetail.


        :param rule_id: The rule_id of this RuleDetail.
        :type rule_id: str
        """

        self._rule_id = rule_id

    @property
    def description(self):
        """Gets the description of this RuleDetail.


        :return: The description of this RuleDetail.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RuleDetail.


        :param description: The description of this RuleDetail.
        :type description: str
        """

        self._description = description

    @property
    def detector_id(self):
        """Gets the detector_id of this RuleDetail.


        :return: The detector_id of this RuleDetail.
        :rtype: str
        """
        return self._detector_id

    @detector_id.setter
    def detector_id(self, detector_id):
        """Sets the detector_id of this RuleDetail.


        :param detector_id: The detector_id of this RuleDetail.
        :type detector_id: str
        """

        self._detector_id = detector_id

    @property
    def rule_version(self):
        """Gets the rule_version of this RuleDetail.


        :return: The rule_version of this RuleDetail.
        :rtype: str
        """
        return self._rule_version

    @rule_version.setter
    def rule_version(self, rule_version):
        """Sets the rule_version of this RuleDetail.


        :param rule_version: The rule_version of this RuleDetail.
        :type rule_version: str
        """

        self._rule_version = rule_version

    @property
    def expression(self):
        """Gets the expression of this RuleDetail.


        :return: The expression of this RuleDetail.
        :rtype: str
        """
        return self._expression

    @expression.setter
    def expression(self, expression):
        """Sets the expression of this RuleDetail.


        :param expression: The expression of this RuleDetail.
        :type expression: str
        """

        self._expression = expression

    @property
    def language(self):
        """Gets the language of this RuleDetail.


        :return: The language of this RuleDetail.
        :rtype: Language
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this RuleDetail.


        :param language: The language of this RuleDetail.
        :type language: Language
        """

        self._language = language

    @property
    def outcomes(self):
        """Gets the outcomes of this RuleDetail.


        :return: The outcomes of this RuleDetail.
        :rtype: List
        """
        return self._outcomes

    @outcomes.setter
    def outcomes(self, outcomes):
        """Sets the outcomes of this RuleDetail.


        :param outcomes: The outcomes of this RuleDetail.
        :type outcomes: List
        """

        self._outcomes = outcomes

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this RuleDetail.


        :return: The last_updated_time of this RuleDetail.
        :rtype: str
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this RuleDetail.


        :param last_updated_time: The last_updated_time of this RuleDetail.
        :type last_updated_time: str
        """

        self._last_updated_time = last_updated_time

    @property
    def created_time(self):
        """Gets the created_time of this RuleDetail.


        :return: The created_time of this RuleDetail.
        :rtype: str
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this RuleDetail.


        :param created_time: The created_time of this RuleDetail.
        :type created_time: str
        """

        self._created_time = created_time

    @property
    def arn(self):
        """Gets the arn of this RuleDetail.


        :return: The arn of this RuleDetail.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this RuleDetail.


        :param arn: The arn of this RuleDetail.
        :type arn: str
        """

        self._arn = arn
