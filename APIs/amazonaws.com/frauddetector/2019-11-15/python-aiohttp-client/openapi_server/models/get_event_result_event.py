# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetEventResultEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_id: str=None, event_type_name: str=None, event_timestamp: str=None, event_variables: Dict=None, current_label: str=None, label_timestamp: str=None, entities: List=None):
        """GetEventResultEvent - a model defined in OpenAPI

        :param event_id: The event_id of this GetEventResultEvent.
        :param event_type_name: The event_type_name of this GetEventResultEvent.
        :param event_timestamp: The event_timestamp of this GetEventResultEvent.
        :param event_variables: The event_variables of this GetEventResultEvent.
        :param current_label: The current_label of this GetEventResultEvent.
        :param label_timestamp: The label_timestamp of this GetEventResultEvent.
        :param entities: The entities of this GetEventResultEvent.
        """
        self.openapi_types = {
            'event_id': str,
            'event_type_name': str,
            'event_timestamp': str,
            'event_variables': Dict,
            'current_label': str,
            'label_timestamp': str,
            'entities': List
        }

        self.attribute_map = {
            'event_id': 'eventId',
            'event_type_name': 'eventTypeName',
            'event_timestamp': 'eventTimestamp',
            'event_variables': 'eventVariables',
            'current_label': 'currentLabel',
            'label_timestamp': 'labelTimestamp',
            'entities': 'entities'
        }

        self._event_id = event_id
        self._event_type_name = event_type_name
        self._event_timestamp = event_timestamp
        self._event_variables = event_variables
        self._current_label = current_label
        self._label_timestamp = label_timestamp
        self._entities = entities

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetEventResultEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetEventResult_event of this GetEventResultEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_id(self):
        """Gets the event_id of this GetEventResultEvent.


        :return: The event_id of this GetEventResultEvent.
        :rtype: str
        """
        return self._event_id

    @event_id.setter
    def event_id(self, event_id):
        """Sets the event_id of this GetEventResultEvent.


        :param event_id: The event_id of this GetEventResultEvent.
        :type event_id: str
        """

        self._event_id = event_id

    @property
    def event_type_name(self):
        """Gets the event_type_name of this GetEventResultEvent.


        :return: The event_type_name of this GetEventResultEvent.
        :rtype: str
        """
        return self._event_type_name

    @event_type_name.setter
    def event_type_name(self, event_type_name):
        """Sets the event_type_name of this GetEventResultEvent.


        :param event_type_name: The event_type_name of this GetEventResultEvent.
        :type event_type_name: str
        """

        self._event_type_name = event_type_name

    @property
    def event_timestamp(self):
        """Gets the event_timestamp of this GetEventResultEvent.


        :return: The event_timestamp of this GetEventResultEvent.
        :rtype: str
        """
        return self._event_timestamp

    @event_timestamp.setter
    def event_timestamp(self, event_timestamp):
        """Sets the event_timestamp of this GetEventResultEvent.


        :param event_timestamp: The event_timestamp of this GetEventResultEvent.
        :type event_timestamp: str
        """

        self._event_timestamp = event_timestamp

    @property
    def event_variables(self):
        """Gets the event_variables of this GetEventResultEvent.


        :return: The event_variables of this GetEventResultEvent.
        :rtype: Dict
        """
        return self._event_variables

    @event_variables.setter
    def event_variables(self, event_variables):
        """Sets the event_variables of this GetEventResultEvent.


        :param event_variables: The event_variables of this GetEventResultEvent.
        :type event_variables: Dict
        """

        self._event_variables = event_variables

    @property
    def current_label(self):
        """Gets the current_label of this GetEventResultEvent.


        :return: The current_label of this GetEventResultEvent.
        :rtype: str
        """
        return self._current_label

    @current_label.setter
    def current_label(self, current_label):
        """Sets the current_label of this GetEventResultEvent.


        :param current_label: The current_label of this GetEventResultEvent.
        :type current_label: str
        """

        self._current_label = current_label

    @property
    def label_timestamp(self):
        """Gets the label_timestamp of this GetEventResultEvent.


        :return: The label_timestamp of this GetEventResultEvent.
        :rtype: str
        """
        return self._label_timestamp

    @label_timestamp.setter
    def label_timestamp(self, label_timestamp):
        """Sets the label_timestamp of this GetEventResultEvent.


        :param label_timestamp: The label_timestamp of this GetEventResultEvent.
        :type label_timestamp: str
        """

        self._label_timestamp = label_timestamp

    @property
    def entities(self):
        """Gets the entities of this GetEventResultEvent.


        :return: The entities of this GetEventResultEvent.
        :rtype: List
        """
        return self._entities

    @entities.setter
    def entities(self, entities):
        """Sets the entities of this GetEventResultEvent.


        :param entities: The entities of this GetEventResultEvent.
        :type entities: List
        """

        self._entities = entities
