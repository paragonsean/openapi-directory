# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_rule_version_result_rule import UpdateRuleVersionResultRule
from openapi_server import util


class UpdateRuleVersionResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rule: UpdateRuleVersionResultRule=None):
        """UpdateRuleVersionResult - a model defined in OpenAPI

        :param rule: The rule of this UpdateRuleVersionResult.
        """
        self.openapi_types = {
            'rule': UpdateRuleVersionResultRule
        }

        self.attribute_map = {
            'rule': 'rule'
        }

        self._rule = rule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateRuleVersionResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateRuleVersionResult of this UpdateRuleVersionResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rule(self):
        """Gets the rule of this UpdateRuleVersionResult.


        :return: The rule of this UpdateRuleVersionResult.
        :rtype: UpdateRuleVersionResultRule
        """
        return self._rule

    @rule.setter
    def rule(self, rule):
        """Sets the rule of this UpdateRuleVersionResult.


        :param rule: The rule of this UpdateRuleVersionResult.
        :type rule: UpdateRuleVersionResultRule
        """

        self._rule = rule
