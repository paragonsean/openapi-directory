# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ATIMetricDataPoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cr: float=None, adr: float=None, threshold: float=None, atodr: float=None):
        """ATIMetricDataPoint - a model defined in OpenAPI

        :param cr: The cr of this ATIMetricDataPoint.
        :param adr: The adr of this ATIMetricDataPoint.
        :param threshold: The threshold of this ATIMetricDataPoint.
        :param atodr: The atodr of this ATIMetricDataPoint.
        """
        self.openapi_types = {
            'cr': float,
            'adr': float,
            'threshold': float,
            'atodr': float
        }

        self.attribute_map = {
            'cr': 'cr',
            'adr': 'adr',
            'threshold': 'threshold',
            'atodr': 'atodr'
        }

        self._cr = cr
        self._adr = adr
        self._threshold = threshold
        self._atodr = atodr

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ATIMetricDataPoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ATIMetricDataPoint of this ATIMetricDataPoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cr(self):
        """Gets the cr of this ATIMetricDataPoint.


        :return: The cr of this ATIMetricDataPoint.
        :rtype: float
        """
        return self._cr

    @cr.setter
    def cr(self, cr):
        """Sets the cr of this ATIMetricDataPoint.


        :param cr: The cr of this ATIMetricDataPoint.
        :type cr: float
        """

        self._cr = cr

    @property
    def adr(self):
        """Gets the adr of this ATIMetricDataPoint.


        :return: The adr of this ATIMetricDataPoint.
        :rtype: float
        """
        return self._adr

    @adr.setter
    def adr(self, adr):
        """Sets the adr of this ATIMetricDataPoint.


        :param adr: The adr of this ATIMetricDataPoint.
        :type adr: float
        """

        self._adr = adr

    @property
    def threshold(self):
        """Gets the threshold of this ATIMetricDataPoint.


        :return: The threshold of this ATIMetricDataPoint.
        :rtype: float
        """
        return self._threshold

    @threshold.setter
    def threshold(self, threshold):
        """Sets the threshold of this ATIMetricDataPoint.


        :param threshold: The threshold of this ATIMetricDataPoint.
        :type threshold: float
        """

        self._threshold = threshold

    @property
    def atodr(self):
        """Gets the atodr of this ATIMetricDataPoint.


        :return: The atodr of this ATIMetricDataPoint.
        :rtype: float
        """
        return self._atodr

    @atodr.setter
    def atodr(self, atodr):
        """Sets the atodr of this ATIMetricDataPoint.


        :param atodr: The atodr of this ATIMetricDataPoint.
        :type atodr: float
        """

        self._atodr = atodr
