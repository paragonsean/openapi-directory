# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EvaluatedModelVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_id: str=None, model_version: str=None, model_type: str=None, evaluations: List=None):
        """EvaluatedModelVersion - a model defined in OpenAPI

        :param model_id: The model_id of this EvaluatedModelVersion.
        :param model_version: The model_version of this EvaluatedModelVersion.
        :param model_type: The model_type of this EvaluatedModelVersion.
        :param evaluations: The evaluations of this EvaluatedModelVersion.
        """
        self.openapi_types = {
            'model_id': str,
            'model_version': str,
            'model_type': str,
            'evaluations': List
        }

        self.attribute_map = {
            'model_id': 'modelId',
            'model_version': 'modelVersion',
            'model_type': 'modelType',
            'evaluations': 'evaluations'
        }

        self._model_id = model_id
        self._model_version = model_version
        self._model_type = model_type
        self._evaluations = evaluations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EvaluatedModelVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EvaluatedModelVersion of this EvaluatedModelVersion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_id(self):
        """Gets the model_id of this EvaluatedModelVersion.


        :return: The model_id of this EvaluatedModelVersion.
        :rtype: str
        """
        return self._model_id

    @model_id.setter
    def model_id(self, model_id):
        """Sets the model_id of this EvaluatedModelVersion.


        :param model_id: The model_id of this EvaluatedModelVersion.
        :type model_id: str
        """

        self._model_id = model_id

    @property
    def model_version(self):
        """Gets the model_version of this EvaluatedModelVersion.


        :return: The model_version of this EvaluatedModelVersion.
        :rtype: str
        """
        return self._model_version

    @model_version.setter
    def model_version(self, model_version):
        """Sets the model_version of this EvaluatedModelVersion.


        :param model_version: The model_version of this EvaluatedModelVersion.
        :type model_version: str
        """

        self._model_version = model_version

    @property
    def model_type(self):
        """Gets the model_type of this EvaluatedModelVersion.


        :return: The model_type of this EvaluatedModelVersion.
        :rtype: str
        """
        return self._model_type

    @model_type.setter
    def model_type(self, model_type):
        """Sets the model_type of this EvaluatedModelVersion.


        :param model_type: The model_type of this EvaluatedModelVersion.
        :type model_type: str
        """

        self._model_type = model_type

    @property
    def evaluations(self):
        """Gets the evaluations of this EvaluatedModelVersion.


        :return: The evaluations of this EvaluatedModelVersion.
        :rtype: List
        """
        return self._evaluations

    @evaluations.setter
    def evaluations(self, evaluations):
        """Sets the evaluations of this EvaluatedModelVersion.


        :param evaluations: The evaluations of this EvaluatedModelVersion.
        :type evaluations: List
        """

        self._evaluations = evaluations
