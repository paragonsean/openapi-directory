/**
 * Amazon Fraud Detector
 * <p>This is the Amazon Fraud Detector API Reference. This guide is for developers who need detailed information about Amazon Fraud Detector API actions, data types, and errors. For more information about Amazon Fraud Detector features, see the <a href=\"https://docs.aws.amazon.com/frauddetector/latest/ug/\">Amazon Fraud Detector User Guide</a>.</p> <p>We provide the Query API as well as AWS software development kits (SDK) for Amazon Fraud Detector in Java and Python programming languages.</p> <p>The Amazon Fraud Detector Query API provides HTTPS requests that use the HTTP verb GET or POST and a Query parameter <code>Action</code>. AWS SDK provides libraries, sample code, tutorials, and other resources for software developers who prefer to build applications using language-specific APIs instead of submitting a request over HTTP or HTTPS. These libraries provide basic functions that automatically take care of tasks such as cryptographically signing your requests, retrying requests, and handling error responses, so that it is easier for you to get started. For more information about the AWS SDKs, go to <a href=\"https://aws.amazon.com/developer/tools/\">Tools to build on AWS</a> page, scroll down to the <b>SDK</b> section, and choose plus (+) sign to expand the section. </p>
 *
 * The version of the OpenAPI document: 2019-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelInputConfiguration from './ModelInputConfiguration';
import ModelInputDataFormat from './ModelInputDataFormat';

/**
 * The PutExternalModelRequestInputConfiguration model module.
 * @module model/PutExternalModelRequestInputConfiguration
 * @version 2019-11-15
 */
class PutExternalModelRequestInputConfiguration {
    /**
     * Constructs a new <code>PutExternalModelRequestInputConfiguration</code>.
     * @alias module:model/PutExternalModelRequestInputConfiguration
     * @implements module:model/ModelInputConfiguration
     * @param useEventVariables {Boolean} 
     */
    constructor(useEventVariables) { 
        ModelInputConfiguration.initialize(this, useEventVariables);
        PutExternalModelRequestInputConfiguration.initialize(this, useEventVariables);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, useEventVariables) { 
        obj['useEventVariables'] = useEventVariables;
    }

    /**
     * Constructs a <code>PutExternalModelRequestInputConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutExternalModelRequestInputConfiguration} obj Optional instance to populate.
     * @return {module:model/PutExternalModelRequestInputConfiguration} The populated <code>PutExternalModelRequestInputConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutExternalModelRequestInputConfiguration();
            ModelInputConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('eventTypeName')) {
                obj['eventTypeName'] = ApiClient.convertToType(data['eventTypeName'], 'String');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], ModelInputDataFormat);
            }
            if (data.hasOwnProperty('useEventVariables')) {
                obj['useEventVariables'] = ApiClient.convertToType(data['useEventVariables'], 'Boolean');
            }
            if (data.hasOwnProperty('jsonInputTemplate')) {
                obj['jsonInputTemplate'] = ApiClient.convertToType(data['jsonInputTemplate'], 'String');
            }
            if (data.hasOwnProperty('csvInputTemplate')) {
                obj['csvInputTemplate'] = ApiClient.convertToType(data['csvInputTemplate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutExternalModelRequestInputConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutExternalModelRequestInputConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PutExternalModelRequestInputConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `eventTypeName`
        if (data['eventTypeName']) { // data not null
          String.validateJSON(data['eventTypeName']);
        }
        // validate the optional field `format`
        if (data['format']) { // data not null
          ModelInputDataFormat.validateJSON(data['format']);
        }
        // validate the optional field `useEventVariables`
        if (data['useEventVariables']) { // data not null
          Boolean.validateJSON(data['useEventVariables']);
        }
        // validate the optional field `jsonInputTemplate`
        if (data['jsonInputTemplate']) { // data not null
          String.validateJSON(data['jsonInputTemplate']);
        }
        // validate the optional field `csvInputTemplate`
        if (data['csvInputTemplate']) { // data not null
          String.validateJSON(data['csvInputTemplate']);
        }

        return true;
    }


}

PutExternalModelRequestInputConfiguration.RequiredProperties = ["useEventVariables"];

/**
 * @member {String} eventTypeName
 */
PutExternalModelRequestInputConfiguration.prototype['eventTypeName'] = undefined;

/**
 * @member {module:model/ModelInputDataFormat} format
 */
PutExternalModelRequestInputConfiguration.prototype['format'] = undefined;

/**
 * @member {Boolean} useEventVariables
 */
PutExternalModelRequestInputConfiguration.prototype['useEventVariables'] = undefined;

/**
 * @member {String} jsonInputTemplate
 */
PutExternalModelRequestInputConfiguration.prototype['jsonInputTemplate'] = undefined;

/**
 * @member {String} csvInputTemplate
 */
PutExternalModelRequestInputConfiguration.prototype['csvInputTemplate'] = undefined;


// Implement ModelInputConfiguration interface:
/**
 * @member {String} eventTypeName
 */
ModelInputConfiguration.prototype['eventTypeName'] = undefined;
/**
 * @member {module:model/ModelInputDataFormat} format
 */
ModelInputConfiguration.prototype['format'] = undefined;
/**
 * @member {Boolean} useEventVariables
 */
ModelInputConfiguration.prototype['useEventVariables'] = undefined;
/**
 * @member {String} jsonInputTemplate
 */
ModelInputConfiguration.prototype['jsonInputTemplate'] = undefined;
/**
 * @member {String} csvInputTemplate
 */
ModelInputConfiguration.prototype['csvInputTemplate'] = undefined;




export default PutExternalModelRequestInputConfiguration;

