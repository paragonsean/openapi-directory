/**
 * Amazon Fraud Detector
 * <p>This is the Amazon Fraud Detector API Reference. This guide is for developers who need detailed information about Amazon Fraud Detector API actions, data types, and errors. For more information about Amazon Fraud Detector features, see the <a href=\"https://docs.aws.amazon.com/frauddetector/latest/ug/\">Amazon Fraud Detector User Guide</a>.</p> <p>We provide the Query API as well as AWS software development kits (SDK) for Amazon Fraud Detector in Java and Python programming languages.</p> <p>The Amazon Fraud Detector Query API provides HTTPS requests that use the HTTP verb GET or POST and a Query parameter <code>Action</code>. AWS SDK provides libraries, sample code, tutorials, and other resources for software developers who prefer to build applications using language-specific APIs instead of submitting a request over HTTP or HTTPS. These libraries provide basic functions that automatically take care of tasks such as cryptographically signing your requests, retrying requests, and handling error responses, so that it is easier for you to get started. For more information about the AWS SDKs, go to <a href=\"https://aws.amazon.com/developer/tools/\">Tools to build on AWS</a> page, scroll down to the <b>SDK</b> section, and choose plus (+) sign to expand the section. </p>
 *
 * The version of the OpenAPI document: 2019-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventType_ingestedEventStatistics.h
 *
 * 
 */

#ifndef OAIEventType_ingestedEventStatistics_H
#define OAIEventType_ingestedEventStatistics_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEventType_ingestedEventStatistics : public OAIObject {
public:
    OAIEventType_ingestedEventStatistics();
    OAIEventType_ingestedEventStatistics(QString json);
    ~OAIEventType_ingestedEventStatistics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getNumberOfEvents() const;
    void setNumberOfEvents(const qint32 &number_of_events);
    bool is_number_of_events_Set() const;
    bool is_number_of_events_Valid() const;

    qint32 getEventDataSizeInBytes() const;
    void setEventDataSizeInBytes(const qint32 &event_data_size_in_bytes);
    bool is_event_data_size_in_bytes_Set() const;
    bool is_event_data_size_in_bytes_Valid() const;

    QString getLeastRecentEvent() const;
    void setLeastRecentEvent(const QString &least_recent_event);
    bool is_least_recent_event_Set() const;
    bool is_least_recent_event_Valid() const;

    QString getMostRecentEvent() const;
    void setMostRecentEvent(const QString &most_recent_event);
    bool is_most_recent_event_Set() const;
    bool is_most_recent_event_Valid() const;

    QString getLastUpdatedTime() const;
    void setLastUpdatedTime(const QString &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_number_of_events;
    bool m_number_of_events_isSet;
    bool m_number_of_events_isValid;

    qint32 m_event_data_size_in_bytes;
    bool m_event_data_size_in_bytes_isSet;
    bool m_event_data_size_in_bytes_isValid;

    QString m_least_recent_event;
    bool m_least_recent_event_isSet;
    bool m_least_recent_event_isValid;

    QString m_most_recent_event;
    bool m_most_recent_event_isSet;
    bool m_most_recent_event_isValid;

    QString m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventType_ingestedEventStatistics)

#endif // OAIEventType_ingestedEventStatistics_H
