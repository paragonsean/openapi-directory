/**
 * Amazon Fraud Detector
 * <p>This is the Amazon Fraud Detector API Reference. This guide is for developers who need detailed information about Amazon Fraud Detector API actions, data types, and errors. For more information about Amazon Fraud Detector features, see the <a href=\"https://docs.aws.amazon.com/frauddetector/latest/ug/\">Amazon Fraud Detector User Guide</a>.</p> <p>We provide the Query API as well as AWS software development kits (SDK) for Amazon Fraud Detector in Java and Python programming languages.</p> <p>The Amazon Fraud Detector Query API provides HTTPS requests that use the HTTP verb GET or POST and a Query parameter <code>Action</code>. AWS SDK provides libraries, sample code, tutorials, and other resources for software developers who prefer to build applications using language-specific APIs instead of submitting a request over HTTP or HTTPS. These libraries provide basic functions that automatically take care of tasks such as cryptographically signing your requests, retrying requests, and handling error responses, so that it is easier for you to get started. For more information about the AWS SDKs, go to <a href=\"https://aws.amazon.com/developer/tools/\">Tools to build on AWS</a> page, scroll down to the <b>SDK</b> section, and choose plus (+) sign to expand the section. </p>
 *
 * The version of the OpenAPI document: 2019-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutExternalModelRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutExternalModelRequest::OAIPutExternalModelRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutExternalModelRequest::OAIPutExternalModelRequest() {
    this->initializeModel();
}

OAIPutExternalModelRequest::~OAIPutExternalModelRequest() {}

void OAIPutExternalModelRequest::initializeModel() {

    m_model_endpoint_isSet = false;
    m_model_endpoint_isValid = false;

    m_model_source_isSet = false;
    m_model_source_isValid = false;

    m_invoke_model_endpoint_role_arn_isSet = false;
    m_invoke_model_endpoint_role_arn_isValid = false;

    m_input_configuration_isSet = false;
    m_input_configuration_isValid = false;

    m_output_configuration_isSet = false;
    m_output_configuration_isValid = false;

    m_model_endpoint_status_isSet = false;
    m_model_endpoint_status_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIPutExternalModelRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutExternalModelRequest::fromJsonObject(QJsonObject json) {

    m_model_endpoint_isValid = ::OpenAPI::fromJsonValue(m_model_endpoint, json[QString("modelEndpoint")]);
    m_model_endpoint_isSet = !json[QString("modelEndpoint")].isNull() && m_model_endpoint_isValid;

    m_model_source_isValid = ::OpenAPI::fromJsonValue(m_model_source, json[QString("modelSource")]);
    m_model_source_isSet = !json[QString("modelSource")].isNull() && m_model_source_isValid;

    m_invoke_model_endpoint_role_arn_isValid = ::OpenAPI::fromJsonValue(m_invoke_model_endpoint_role_arn, json[QString("invokeModelEndpointRoleArn")]);
    m_invoke_model_endpoint_role_arn_isSet = !json[QString("invokeModelEndpointRoleArn")].isNull() && m_invoke_model_endpoint_role_arn_isValid;

    m_input_configuration_isValid = ::OpenAPI::fromJsonValue(m_input_configuration, json[QString("inputConfiguration")]);
    m_input_configuration_isSet = !json[QString("inputConfiguration")].isNull() && m_input_configuration_isValid;

    m_output_configuration_isValid = ::OpenAPI::fromJsonValue(m_output_configuration, json[QString("outputConfiguration")]);
    m_output_configuration_isSet = !json[QString("outputConfiguration")].isNull() && m_output_configuration_isValid;

    m_model_endpoint_status_isValid = ::OpenAPI::fromJsonValue(m_model_endpoint_status, json[QString("modelEndpointStatus")]);
    m_model_endpoint_status_isSet = !json[QString("modelEndpointStatus")].isNull() && m_model_endpoint_status_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAIPutExternalModelRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutExternalModelRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_model_endpoint_isSet) {
        obj.insert(QString("modelEndpoint"), ::OpenAPI::toJsonValue(m_model_endpoint));
    }
    if (m_model_source.isSet()) {
        obj.insert(QString("modelSource"), ::OpenAPI::toJsonValue(m_model_source));
    }
    if (m_invoke_model_endpoint_role_arn_isSet) {
        obj.insert(QString("invokeModelEndpointRoleArn"), ::OpenAPI::toJsonValue(m_invoke_model_endpoint_role_arn));
    }
    if (m_input_configuration.isSet()) {
        obj.insert(QString("inputConfiguration"), ::OpenAPI::toJsonValue(m_input_configuration));
    }
    if (m_output_configuration.isSet()) {
        obj.insert(QString("outputConfiguration"), ::OpenAPI::toJsonValue(m_output_configuration));
    }
    if (m_model_endpoint_status.isSet()) {
        obj.insert(QString("modelEndpointStatus"), ::OpenAPI::toJsonValue(m_model_endpoint_status));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAIPutExternalModelRequest::getModelEndpoint() const {
    return m_model_endpoint;
}
void OAIPutExternalModelRequest::setModelEndpoint(const QString &model_endpoint) {
    m_model_endpoint = model_endpoint;
    m_model_endpoint_isSet = true;
}

bool OAIPutExternalModelRequest::is_model_endpoint_Set() const{
    return m_model_endpoint_isSet;
}

bool OAIPutExternalModelRequest::is_model_endpoint_Valid() const{
    return m_model_endpoint_isValid;
}

OAIModelSource OAIPutExternalModelRequest::getModelSource() const {
    return m_model_source;
}
void OAIPutExternalModelRequest::setModelSource(const OAIModelSource &model_source) {
    m_model_source = model_source;
    m_model_source_isSet = true;
}

bool OAIPutExternalModelRequest::is_model_source_Set() const{
    return m_model_source_isSet;
}

bool OAIPutExternalModelRequest::is_model_source_Valid() const{
    return m_model_source_isValid;
}

QString OAIPutExternalModelRequest::getInvokeModelEndpointRoleArn() const {
    return m_invoke_model_endpoint_role_arn;
}
void OAIPutExternalModelRequest::setInvokeModelEndpointRoleArn(const QString &invoke_model_endpoint_role_arn) {
    m_invoke_model_endpoint_role_arn = invoke_model_endpoint_role_arn;
    m_invoke_model_endpoint_role_arn_isSet = true;
}

bool OAIPutExternalModelRequest::is_invoke_model_endpoint_role_arn_Set() const{
    return m_invoke_model_endpoint_role_arn_isSet;
}

bool OAIPutExternalModelRequest::is_invoke_model_endpoint_role_arn_Valid() const{
    return m_invoke_model_endpoint_role_arn_isValid;
}

OAIPutExternalModelRequest_inputConfiguration OAIPutExternalModelRequest::getInputConfiguration() const {
    return m_input_configuration;
}
void OAIPutExternalModelRequest::setInputConfiguration(const OAIPutExternalModelRequest_inputConfiguration &input_configuration) {
    m_input_configuration = input_configuration;
    m_input_configuration_isSet = true;
}

bool OAIPutExternalModelRequest::is_input_configuration_Set() const{
    return m_input_configuration_isSet;
}

bool OAIPutExternalModelRequest::is_input_configuration_Valid() const{
    return m_input_configuration_isValid;
}

OAIPutExternalModelRequest_outputConfiguration OAIPutExternalModelRequest::getOutputConfiguration() const {
    return m_output_configuration;
}
void OAIPutExternalModelRequest::setOutputConfiguration(const OAIPutExternalModelRequest_outputConfiguration &output_configuration) {
    m_output_configuration = output_configuration;
    m_output_configuration_isSet = true;
}

bool OAIPutExternalModelRequest::is_output_configuration_Set() const{
    return m_output_configuration_isSet;
}

bool OAIPutExternalModelRequest::is_output_configuration_Valid() const{
    return m_output_configuration_isValid;
}

OAIModelEndpointStatus OAIPutExternalModelRequest::getModelEndpointStatus() const {
    return m_model_endpoint_status;
}
void OAIPutExternalModelRequest::setModelEndpointStatus(const OAIModelEndpointStatus &model_endpoint_status) {
    m_model_endpoint_status = model_endpoint_status;
    m_model_endpoint_status_isSet = true;
}

bool OAIPutExternalModelRequest::is_model_endpoint_status_Set() const{
    return m_model_endpoint_status_isSet;
}

bool OAIPutExternalModelRequest::is_model_endpoint_status_Valid() const{
    return m_model_endpoint_status_isValid;
}

QList OAIPutExternalModelRequest::getTags() const {
    return m_tags;
}
void OAIPutExternalModelRequest::setTags(const QList &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIPutExternalModelRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIPutExternalModelRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIPutExternalModelRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_model_endpoint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoke_model_endpoint_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_endpoint_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutExternalModelRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_model_endpoint_isValid && m_model_source_isValid && m_invoke_model_endpoint_role_arn_isValid && m_input_configuration_isValid && m_output_configuration_isValid && m_model_endpoint_status_isValid && true;
}

} // namespace OpenAPI
