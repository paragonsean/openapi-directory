/**
 * Amazon Fraud Detector
 * <p>This is the Amazon Fraud Detector API Reference. This guide is for developers who need detailed information about Amazon Fraud Detector API actions, data types, and errors. For more information about Amazon Fraud Detector features, see the <a href=\"https://docs.aws.amazon.com/frauddetector/latest/ug/\">Amazon Fraud Detector User Guide</a>.</p> <p>We provide the Query API as well as AWS software development kits (SDK) for Amazon Fraud Detector in Java and Python programming languages.</p> <p>The Amazon Fraud Detector Query API provides HTTPS requests that use the HTTP verb GET or POST and a Query parameter <code>Action</code>. AWS SDK provides libraries, sample code, tutorials, and other resources for software developers who prefer to build applications using language-specific APIs instead of submitting a request over HTTP or HTTPS. These libraries provide basic functions that automatically take care of tasks such as cryptographically signing your requests, retrying requests, and handling error responses, so that it is easier for you to get started. For more information about the AWS SDKs, go to <a href=\"https://aws.amazon.com/developer/tools/\">Tools to build on AWS</a> page, scroll down to the <b>SDK</b> section, and choose plus (+) sign to expand the section. </p>
 *
 * The version of the OpenAPI document: 2019-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetExternalModelsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetExternalModelsRequest::OAIGetExternalModelsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetExternalModelsRequest::OAIGetExternalModelsRequest() {
    this->initializeModel();
}

OAIGetExternalModelsRequest::~OAIGetExternalModelsRequest() {}

void OAIGetExternalModelsRequest::initializeModel() {

    m_model_endpoint_isSet = false;
    m_model_endpoint_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_max_results_isSet = false;
    m_max_results_isValid = false;
}

void OAIGetExternalModelsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetExternalModelsRequest::fromJsonObject(QJsonObject json) {

    m_model_endpoint_isValid = ::OpenAPI::fromJsonValue(m_model_endpoint, json[QString("modelEndpoint")]);
    m_model_endpoint_isSet = !json[QString("modelEndpoint")].isNull() && m_model_endpoint_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;

    m_max_results_isValid = ::OpenAPI::fromJsonValue(m_max_results, json[QString("maxResults")]);
    m_max_results_isSet = !json[QString("maxResults")].isNull() && m_max_results_isValid;
}

QString OAIGetExternalModelsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetExternalModelsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_model_endpoint_isSet) {
        obj.insert(QString("modelEndpoint"), ::OpenAPI::toJsonValue(m_model_endpoint));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_max_results_isSet) {
        obj.insert(QString("maxResults"), ::OpenAPI::toJsonValue(m_max_results));
    }
    return obj;
}

QString OAIGetExternalModelsRequest::getModelEndpoint() const {
    return m_model_endpoint;
}
void OAIGetExternalModelsRequest::setModelEndpoint(const QString &model_endpoint) {
    m_model_endpoint = model_endpoint;
    m_model_endpoint_isSet = true;
}

bool OAIGetExternalModelsRequest::is_model_endpoint_Set() const{
    return m_model_endpoint_isSet;
}

bool OAIGetExternalModelsRequest::is_model_endpoint_Valid() const{
    return m_model_endpoint_isValid;
}

QString OAIGetExternalModelsRequest::getNextToken() const {
    return m_next_token;
}
void OAIGetExternalModelsRequest::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIGetExternalModelsRequest::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIGetExternalModelsRequest::is_next_token_Valid() const{
    return m_next_token_isValid;
}

qint32 OAIGetExternalModelsRequest::getMaxResults() const {
    return m_max_results;
}
void OAIGetExternalModelsRequest::setMaxResults(const qint32 &max_results) {
    m_max_results = max_results;
    m_max_results_isSet = true;
}

bool OAIGetExternalModelsRequest::is_max_results_Set() const{
    return m_max_results_isSet;
}

bool OAIGetExternalModelsRequest::is_max_results_Valid() const{
    return m_max_results_isValid;
}

bool OAIGetExternalModelsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_model_endpoint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_results_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetExternalModelsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
