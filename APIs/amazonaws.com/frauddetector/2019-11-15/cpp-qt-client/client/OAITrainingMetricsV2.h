/**
 * Amazon Fraud Detector
 * <p>This is the Amazon Fraud Detector API Reference. This guide is for developers who need detailed information about Amazon Fraud Detector API actions, data types, and errors. For more information about Amazon Fraud Detector features, see the <a href=\"https://docs.aws.amazon.com/frauddetector/latest/ug/\">Amazon Fraud Detector User Guide</a>.</p> <p>We provide the Query API as well as AWS software development kits (SDK) for Amazon Fraud Detector in Java and Python programming languages.</p> <p>The Amazon Fraud Detector Query API provides HTTPS requests that use the HTTP verb GET or POST and a Query parameter <code>Action</code>. AWS SDK provides libraries, sample code, tutorials, and other resources for software developers who prefer to build applications using language-specific APIs instead of submitting a request over HTTP or HTTPS. These libraries provide basic functions that automatically take care of tasks such as cryptographically signing your requests, retrying requests, and handling error responses, so that it is easier for you to get started. For more information about the AWS SDKs, go to <a href=\"https://aws.amazon.com/developer/tools/\">Tools to build on AWS</a> page, scroll down to the <b>SDK</b> section, and choose plus (+) sign to expand the section. </p>
 *
 * The version of the OpenAPI document: 2019-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITrainingMetricsV2.h
 *
 *  The training metrics details. 
 */

#ifndef OAITrainingMetricsV2_H
#define OAITrainingMetricsV2_H

#include <QJsonObject>

#include "OAITrainingMetricsV2_ati.h"
#include "OAITrainingMetricsV2_ofi.h"
#include "OAITrainingMetricsV2_tfi.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITrainingMetricsV2_ofi;
class OAITrainingMetricsV2_tfi;
class OAITrainingMetricsV2_ati;

class OAITrainingMetricsV2 : public OAIObject {
public:
    OAITrainingMetricsV2();
    OAITrainingMetricsV2(QString json);
    ~OAITrainingMetricsV2() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITrainingMetricsV2_ofi getOfi() const;
    void setOfi(const OAITrainingMetricsV2_ofi &ofi);
    bool is_ofi_Set() const;
    bool is_ofi_Valid() const;

    OAITrainingMetricsV2_tfi getTfi() const;
    void setTfi(const OAITrainingMetricsV2_tfi &tfi);
    bool is_tfi_Set() const;
    bool is_tfi_Valid() const;

    OAITrainingMetricsV2_ati getAti() const;
    void setAti(const OAITrainingMetricsV2_ati &ati);
    bool is_ati_Set() const;
    bool is_ati_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITrainingMetricsV2_ofi m_ofi;
    bool m_ofi_isSet;
    bool m_ofi_isValid;

    OAITrainingMetricsV2_tfi m_tfi;
    bool m_tfi_isSet;
    bool m_tfi_isValid;

    OAITrainingMetricsV2_ati m_ati;
    bool m_ati_isSet;
    bool m_ati_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITrainingMetricsV2)

#endif // OAITrainingMetricsV2_H
