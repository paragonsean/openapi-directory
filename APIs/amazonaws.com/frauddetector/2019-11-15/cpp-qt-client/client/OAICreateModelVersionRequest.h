/**
 * Amazon Fraud Detector
 * <p>This is the Amazon Fraud Detector API Reference. This guide is for developers who need detailed information about Amazon Fraud Detector API actions, data types, and errors. For more information about Amazon Fraud Detector features, see the <a href=\"https://docs.aws.amazon.com/frauddetector/latest/ug/\">Amazon Fraud Detector User Guide</a>.</p> <p>We provide the Query API as well as AWS software development kits (SDK) for Amazon Fraud Detector in Java and Python programming languages.</p> <p>The Amazon Fraud Detector Query API provides HTTPS requests that use the HTTP verb GET or POST and a Query parameter <code>Action</code>. AWS SDK provides libraries, sample code, tutorials, and other resources for software developers who prefer to build applications using language-specific APIs instead of submitting a request over HTTP or HTTPS. These libraries provide basic functions that automatically take care of tasks such as cryptographically signing your requests, retrying requests, and handling error responses, so that it is easier for you to get started. For more information about the AWS SDKs, go to <a href=\"https://aws.amazon.com/developer/tools/\">Tools to build on AWS</a> page, scroll down to the <b>SDK</b> section, and choose plus (+) sign to expand the section. </p>
 *
 * The version of the OpenAPI document: 2019-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateModelVersionRequest.h
 *
 * 
 */

#ifndef OAICreateModelVersionRequest_H
#define OAICreateModelVersionRequest_H

#include <QJsonObject>

#include "OAICreateModelVersionRequest_externalEventsDetail.h"
#include "OAICreateModelVersionRequest_ingestedEventsDetail.h"
#include "OAICreateModelVersionRequest_trainingDataSchema.h"
#include "OAIModelTypeEnum.h"
#include "OAITrainingDataSourceEnum.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateModelVersionRequest_trainingDataSchema;
class OAICreateModelVersionRequest_externalEventsDetail;
class OAICreateModelVersionRequest_ingestedEventsDetail;

class OAICreateModelVersionRequest : public OAIObject {
public:
    OAICreateModelVersionRequest();
    OAICreateModelVersionRequest(QString json);
    ~OAICreateModelVersionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getModelId() const;
    void setModelId(const QString &model_id);
    bool is_model_id_Set() const;
    bool is_model_id_Valid() const;

    OAIModelTypeEnum getModelType() const;
    void setModelType(const OAIModelTypeEnum &model_type);
    bool is_model_type_Set() const;
    bool is_model_type_Valid() const;

    OAITrainingDataSourceEnum getTrainingDataSource() const;
    void setTrainingDataSource(const OAITrainingDataSourceEnum &training_data_source);
    bool is_training_data_source_Set() const;
    bool is_training_data_source_Valid() const;

    OAICreateModelVersionRequest_trainingDataSchema getTrainingDataSchema() const;
    void setTrainingDataSchema(const OAICreateModelVersionRequest_trainingDataSchema &training_data_schema);
    bool is_training_data_schema_Set() const;
    bool is_training_data_schema_Valid() const;

    OAICreateModelVersionRequest_externalEventsDetail getExternalEventsDetail() const;
    void setExternalEventsDetail(const OAICreateModelVersionRequest_externalEventsDetail &external_events_detail);
    bool is_external_events_detail_Set() const;
    bool is_external_events_detail_Valid() const;

    OAICreateModelVersionRequest_ingestedEventsDetail getIngestedEventsDetail() const;
    void setIngestedEventsDetail(const OAICreateModelVersionRequest_ingestedEventsDetail &ingested_events_detail);
    bool is_ingested_events_detail_Set() const;
    bool is_ingested_events_detail_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_model_id;
    bool m_model_id_isSet;
    bool m_model_id_isValid;

    OAIModelTypeEnum m_model_type;
    bool m_model_type_isSet;
    bool m_model_type_isValid;

    OAITrainingDataSourceEnum m_training_data_source;
    bool m_training_data_source_isSet;
    bool m_training_data_source_isValid;

    OAICreateModelVersionRequest_trainingDataSchema m_training_data_schema;
    bool m_training_data_schema_isSet;
    bool m_training_data_schema_isValid;

    OAICreateModelVersionRequest_externalEventsDetail m_external_events_detail;
    bool m_external_events_detail_isSet;
    bool m_external_events_detail_isValid;

    OAICreateModelVersionRequest_ingestedEventsDetail m_ingested_events_detail;
    bool m_ingested_events_detail_isSet;
    bool m_ingested_events_detail_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateModelVersionRequest)

#endif // OAICreateModelVersionRequest_H
