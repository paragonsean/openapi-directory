/**
 * Amazon Fraud Detector
 * <p>This is the Amazon Fraud Detector API Reference. This guide is for developers who need detailed information about Amazon Fraud Detector API actions, data types, and errors. For more information about Amazon Fraud Detector features, see the <a href=\"https://docs.aws.amazon.com/frauddetector/latest/ug/\">Amazon Fraud Detector User Guide</a>.</p> <p>We provide the Query API as well as AWS software development kits (SDK) for Amazon Fraud Detector in Java and Python programming languages.</p> <p>The Amazon Fraud Detector Query API provides HTTPS requests that use the HTTP verb GET or POST and a Query parameter <code>Action</code>. AWS SDK provides libraries, sample code, tutorials, and other resources for software developers who prefer to build applications using language-specific APIs instead of submitting a request over HTTP or HTTPS. These libraries provide basic functions that automatically take care of tasks such as cryptographically signing your requests, retrying requests, and handling error responses, so that it is easier for you to get started. For more information about the AWS SDKs, go to <a href=\"https://aws.amazon.com/developer/tools/\">Tools to build on AWS</a> page, scroll down to the <b>SDK</b> section, and choose plus (+) sign to expand the section. </p>
 *
 * The version of the OpenAPI document: 2019-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateDetectorVersionResult.h
 *
 * 
 */

#ifndef OAICreateDetectorVersionResult_H
#define OAICreateDetectorVersionResult_H

#include <QJsonObject>

#include "OAIDetectorVersionStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateDetectorVersionResult : public OAIObject {
public:
    OAICreateDetectorVersionResult();
    OAICreateDetectorVersionResult(QString json);
    ~OAICreateDetectorVersionResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDetectorId() const;
    void setDetectorId(const QString &detector_id);
    bool is_detector_id_Set() const;
    bool is_detector_id_Valid() const;

    QString getDetectorVersionId() const;
    void setDetectorVersionId(const QString &detector_version_id);
    bool is_detector_version_id_Set() const;
    bool is_detector_version_id_Valid() const;

    OAIDetectorVersionStatus getStatus() const;
    void setStatus(const OAIDetectorVersionStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_detector_id;
    bool m_detector_id_isSet;
    bool m_detector_id_isValid;

    QString m_detector_version_id;
    bool m_detector_version_id_isSet;
    bool m_detector_version_id_isValid;

    OAIDetectorVersionStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateDetectorVersionResult)

#endif // OAICreateDetectorVersionResult_H
