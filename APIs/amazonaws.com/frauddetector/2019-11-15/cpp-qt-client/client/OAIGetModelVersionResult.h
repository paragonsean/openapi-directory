/**
 * Amazon Fraud Detector
 * <p>This is the Amazon Fraud Detector API Reference. This guide is for developers who need detailed information about Amazon Fraud Detector API actions, data types, and errors. For more information about Amazon Fraud Detector features, see the <a href=\"https://docs.aws.amazon.com/frauddetector/latest/ug/\">Amazon Fraud Detector User Guide</a>.</p> <p>We provide the Query API as well as AWS software development kits (SDK) for Amazon Fraud Detector in Java and Python programming languages.</p> <p>The Amazon Fraud Detector Query API provides HTTPS requests that use the HTTP verb GET or POST and a Query parameter <code>Action</code>. AWS SDK provides libraries, sample code, tutorials, and other resources for software developers who prefer to build applications using language-specific APIs instead of submitting a request over HTTP or HTTPS. These libraries provide basic functions that automatically take care of tasks such as cryptographically signing your requests, retrying requests, and handling error responses, so that it is easier for you to get started. For more information about the AWS SDKs, go to <a href=\"https://aws.amazon.com/developer/tools/\">Tools to build on AWS</a> page, scroll down to the <b>SDK</b> section, and choose plus (+) sign to expand the section. </p>
 *
 * The version of the OpenAPI document: 2019-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetModelVersionResult.h
 *
 * 
 */

#ifndef OAIGetModelVersionResult_H
#define OAIGetModelVersionResult_H

#include <QJsonObject>

#include "OAICreateModelVersionRequest_trainingDataSchema.h"
#include "OAIGetModelVersionResult_externalEventsDetail.h"
#include "OAIGetModelVersionResult_ingestedEventsDetail.h"
#include "OAIModelTypeEnum.h"
#include "OAITrainingDataSourceEnum.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateModelVersionRequest_trainingDataSchema;
class OAIGetModelVersionResult_externalEventsDetail;
class OAIGetModelVersionResult_ingestedEventsDetail;

class OAIGetModelVersionResult : public OAIObject {
public:
    OAIGetModelVersionResult();
    OAIGetModelVersionResult(QString json);
    ~OAIGetModelVersionResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getModelId() const;
    void setModelId(const QString &model_id);
    bool is_model_id_Set() const;
    bool is_model_id_Valid() const;

    OAIModelTypeEnum getModelType() const;
    void setModelType(const OAIModelTypeEnum &model_type);
    bool is_model_type_Set() const;
    bool is_model_type_Valid() const;

    QString getModelVersionNumber() const;
    void setModelVersionNumber(const QString &model_version_number);
    bool is_model_version_number_Set() const;
    bool is_model_version_number_Valid() const;

    OAITrainingDataSourceEnum getTrainingDataSource() const;
    void setTrainingDataSource(const OAITrainingDataSourceEnum &training_data_source);
    bool is_training_data_source_Set() const;
    bool is_training_data_source_Valid() const;

    OAICreateModelVersionRequest_trainingDataSchema getTrainingDataSchema() const;
    void setTrainingDataSchema(const OAICreateModelVersionRequest_trainingDataSchema &training_data_schema);
    bool is_training_data_schema_Set() const;
    bool is_training_data_schema_Valid() const;

    OAIGetModelVersionResult_externalEventsDetail getExternalEventsDetail() const;
    void setExternalEventsDetail(const OAIGetModelVersionResult_externalEventsDetail &external_events_detail);
    bool is_external_events_detail_Set() const;
    bool is_external_events_detail_Valid() const;

    OAIGetModelVersionResult_ingestedEventsDetail getIngestedEventsDetail() const;
    void setIngestedEventsDetail(const OAIGetModelVersionResult_ingestedEventsDetail &ingested_events_detail);
    bool is_ingested_events_detail_Set() const;
    bool is_ingested_events_detail_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_model_id;
    bool m_model_id_isSet;
    bool m_model_id_isValid;

    OAIModelTypeEnum m_model_type;
    bool m_model_type_isSet;
    bool m_model_type_isValid;

    QString m_model_version_number;
    bool m_model_version_number_isSet;
    bool m_model_version_number_isValid;

    OAITrainingDataSourceEnum m_training_data_source;
    bool m_training_data_source_isSet;
    bool m_training_data_source_isValid;

    OAICreateModelVersionRequest_trainingDataSchema m_training_data_schema;
    bool m_training_data_schema_isSet;
    bool m_training_data_schema_isValid;

    OAIGetModelVersionResult_externalEventsDetail m_external_events_detail;
    bool m_external_events_detail_isSet;
    bool m_external_events_detail_isValid;

    OAIGetModelVersionResult_ingestedEventsDetail m_ingested_events_detail;
    bool m_ingested_events_detail_isSet;
    bool m_ingested_events_detail_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetModelVersionResult)

#endif // OAIGetModelVersionResult_H
