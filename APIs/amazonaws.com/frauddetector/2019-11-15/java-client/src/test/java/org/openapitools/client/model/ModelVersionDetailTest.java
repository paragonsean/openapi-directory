/*
 * Amazon Fraud Detector
 * <p>This is the Amazon Fraud Detector API Reference. This guide is for developers who need detailed information about Amazon Fraud Detector API actions, data types, and errors. For more information about Amazon Fraud Detector features, see the <a href=\"https://docs.aws.amazon.com/frauddetector/latest/ug/\">Amazon Fraud Detector User Guide</a>.</p> <p>We provide the Query API as well as AWS software development kits (SDK) for Amazon Fraud Detector in Java and Python programming languages.</p> <p>The Amazon Fraud Detector Query API provides HTTPS requests that use the HTTP verb GET or POST and a Query parameter <code>Action</code>. AWS SDK provides libraries, sample code, tutorials, and other resources for software developers who prefer to build applications using language-specific APIs instead of submitting a request over HTTP or HTTPS. These libraries provide basic functions that automatically take care of tasks such as cryptographically signing your requests, retrying requests, and handling error responses, so that it is easier for you to get started. For more information about the AWS SDKs, go to <a href=\"https://aws.amazon.com/developer/tools/\">Tools to build on AWS</a> page, scroll down to the <b>SDK</b> section, and choose plus (+) sign to expand the section. </p>
 *
 * The version of the OpenAPI document: 2019-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateModelVersionRequestTrainingDataSchema;
import org.openapitools.client.model.ModelTypeEnum;
import org.openapitools.client.model.ModelVersionDetailExternalEventsDetail;
import org.openapitools.client.model.ModelVersionDetailIngestedEventsDetail;
import org.openapitools.client.model.ModelVersionDetailTrainingResult;
import org.openapitools.client.model.ModelVersionDetailTrainingResultV2;
import org.openapitools.client.model.TrainingDataSourceEnum;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ModelVersionDetail
 */
public class ModelVersionDetailTest {
    private final ModelVersionDetail model = new ModelVersionDetail();

    /**
     * Model tests for ModelVersionDetail
     */
    @Test
    public void testModelVersionDetail() {
        // TODO: test ModelVersionDetail
    }

    /**
     * Test the property 'modelId'
     */
    @Test
    public void modelIdTest() {
        // TODO: test modelId
    }

    /**
     * Test the property 'modelType'
     */
    @Test
    public void modelTypeTest() {
        // TODO: test modelType
    }

    /**
     * Test the property 'modelVersionNumber'
     */
    @Test
    public void modelVersionNumberTest() {
        // TODO: test modelVersionNumber
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'trainingDataSource'
     */
    @Test
    public void trainingDataSourceTest() {
        // TODO: test trainingDataSource
    }

    /**
     * Test the property 'trainingDataSchema'
     */
    @Test
    public void trainingDataSchemaTest() {
        // TODO: test trainingDataSchema
    }

    /**
     * Test the property 'externalEventsDetail'
     */
    @Test
    public void externalEventsDetailTest() {
        // TODO: test externalEventsDetail
    }

    /**
     * Test the property 'ingestedEventsDetail'
     */
    @Test
    public void ingestedEventsDetailTest() {
        // TODO: test ingestedEventsDetail
    }

    /**
     * Test the property 'trainingResult'
     */
    @Test
    public void trainingResultTest() {
        // TODO: test trainingResult
    }

    /**
     * Test the property 'lastUpdatedTime'
     */
    @Test
    public void lastUpdatedTimeTest() {
        // TODO: test lastUpdatedTime
    }

    /**
     * Test the property 'createdTime'
     */
    @Test
    public void createdTimeTest() {
        // TODO: test createdTime
    }

    /**
     * Test the property 'arn'
     */
    @Test
    public void arnTest() {
        // TODO: test arn
    }

    /**
     * Test the property 'trainingResultV2'
     */
    @Test
    public void trainingResultV2Test() {
        // TODO: test trainingResultV2
    }

}
