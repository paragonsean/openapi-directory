/*
 * Amazon Fraud Detector
 * <p>This is the Amazon Fraud Detector API Reference. This guide is for developers who need detailed information about Amazon Fraud Detector API actions, data types, and errors. For more information about Amazon Fraud Detector features, see the <a href=\"https://docs.aws.amazon.com/frauddetector/latest/ug/\">Amazon Fraud Detector User Guide</a>.</p> <p>We provide the Query API as well as AWS software development kits (SDK) for Amazon Fraud Detector in Java and Python programming languages.</p> <p>The Amazon Fraud Detector Query API provides HTTPS requests that use the HTTP verb GET or POST and a Query parameter <code>Action</code>. AWS SDK provides libraries, sample code, tutorials, and other resources for software developers who prefer to build applications using language-specific APIs instead of submitting a request over HTTP or HTTPS. These libraries provide basic functions that automatically take care of tasks such as cryptographically signing your requests, retrying requests, and handling error responses, so that it is easier for you to get started. For more information about the AWS SDKs, go to <a href=\"https://aws.amazon.com/developer/tools/\">Tools to build on AWS</a> page, scroll down to the <b>SDK</b> section, and choose plus (+) sign to expand the section. </p>
 *
 * The version of the OpenAPI document: 2019-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DataValidationMetrics;
import org.openapitools.client.model.TrainingResultV2AggregatedVariablesImportanceMetrics;
import org.openapitools.client.model.TrainingResultV2TrainingMetricsV2;
import org.openapitools.client.model.VariableImportanceMetrics;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ModelVersionDetailTrainingResultV2
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:01:35.913975-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ModelVersionDetailTrainingResultV2 {
  public static final String SERIALIZED_NAME_DATA_VALIDATION_METRICS = "dataValidationMetrics";
  @SerializedName(SERIALIZED_NAME_DATA_VALIDATION_METRICS)
  private DataValidationMetrics dataValidationMetrics;

  public static final String SERIALIZED_NAME_TRAINING_METRICS_V2 = "trainingMetricsV2";
  @SerializedName(SERIALIZED_NAME_TRAINING_METRICS_V2)
  private TrainingResultV2TrainingMetricsV2 trainingMetricsV2;

  public static final String SERIALIZED_NAME_VARIABLE_IMPORTANCE_METRICS = "variableImportanceMetrics";
  @SerializedName(SERIALIZED_NAME_VARIABLE_IMPORTANCE_METRICS)
  private VariableImportanceMetrics variableImportanceMetrics;

  public static final String SERIALIZED_NAME_AGGREGATED_VARIABLES_IMPORTANCE_METRICS = "aggregatedVariablesImportanceMetrics";
  @SerializedName(SERIALIZED_NAME_AGGREGATED_VARIABLES_IMPORTANCE_METRICS)
  private TrainingResultV2AggregatedVariablesImportanceMetrics aggregatedVariablesImportanceMetrics;

  public ModelVersionDetailTrainingResultV2() {
  }

  public ModelVersionDetailTrainingResultV2 dataValidationMetrics(DataValidationMetrics dataValidationMetrics) {
    this.dataValidationMetrics = dataValidationMetrics;
    return this;
  }

  /**
   * Get dataValidationMetrics
   * @return dataValidationMetrics
   */
  @javax.annotation.Nullable
  public DataValidationMetrics getDataValidationMetrics() {
    return dataValidationMetrics;
  }

  public void setDataValidationMetrics(DataValidationMetrics dataValidationMetrics) {
    this.dataValidationMetrics = dataValidationMetrics;
  }


  public ModelVersionDetailTrainingResultV2 trainingMetricsV2(TrainingResultV2TrainingMetricsV2 trainingMetricsV2) {
    this.trainingMetricsV2 = trainingMetricsV2;
    return this;
  }

  /**
   * Get trainingMetricsV2
   * @return trainingMetricsV2
   */
  @javax.annotation.Nullable
  public TrainingResultV2TrainingMetricsV2 getTrainingMetricsV2() {
    return trainingMetricsV2;
  }

  public void setTrainingMetricsV2(TrainingResultV2TrainingMetricsV2 trainingMetricsV2) {
    this.trainingMetricsV2 = trainingMetricsV2;
  }


  public ModelVersionDetailTrainingResultV2 variableImportanceMetrics(VariableImportanceMetrics variableImportanceMetrics) {
    this.variableImportanceMetrics = variableImportanceMetrics;
    return this;
  }

  /**
   * Get variableImportanceMetrics
   * @return variableImportanceMetrics
   */
  @javax.annotation.Nullable
  public VariableImportanceMetrics getVariableImportanceMetrics() {
    return variableImportanceMetrics;
  }

  public void setVariableImportanceMetrics(VariableImportanceMetrics variableImportanceMetrics) {
    this.variableImportanceMetrics = variableImportanceMetrics;
  }


  public ModelVersionDetailTrainingResultV2 aggregatedVariablesImportanceMetrics(TrainingResultV2AggregatedVariablesImportanceMetrics aggregatedVariablesImportanceMetrics) {
    this.aggregatedVariablesImportanceMetrics = aggregatedVariablesImportanceMetrics;
    return this;
  }

  /**
   * Get aggregatedVariablesImportanceMetrics
   * @return aggregatedVariablesImportanceMetrics
   */
  @javax.annotation.Nullable
  public TrainingResultV2AggregatedVariablesImportanceMetrics getAggregatedVariablesImportanceMetrics() {
    return aggregatedVariablesImportanceMetrics;
  }

  public void setAggregatedVariablesImportanceMetrics(TrainingResultV2AggregatedVariablesImportanceMetrics aggregatedVariablesImportanceMetrics) {
    this.aggregatedVariablesImportanceMetrics = aggregatedVariablesImportanceMetrics;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelVersionDetailTrainingResultV2 modelVersionDetailTrainingResultV2 = (ModelVersionDetailTrainingResultV2) o;
    return Objects.equals(this.dataValidationMetrics, modelVersionDetailTrainingResultV2.dataValidationMetrics) &&
        Objects.equals(this.trainingMetricsV2, modelVersionDetailTrainingResultV2.trainingMetricsV2) &&
        Objects.equals(this.variableImportanceMetrics, modelVersionDetailTrainingResultV2.variableImportanceMetrics) &&
        Objects.equals(this.aggregatedVariablesImportanceMetrics, modelVersionDetailTrainingResultV2.aggregatedVariablesImportanceMetrics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataValidationMetrics, trainingMetricsV2, variableImportanceMetrics, aggregatedVariablesImportanceMetrics);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelVersionDetailTrainingResultV2 {\n");
    sb.append("    dataValidationMetrics: ").append(toIndentedString(dataValidationMetrics)).append("\n");
    sb.append("    trainingMetricsV2: ").append(toIndentedString(trainingMetricsV2)).append("\n");
    sb.append("    variableImportanceMetrics: ").append(toIndentedString(variableImportanceMetrics)).append("\n");
    sb.append("    aggregatedVariablesImportanceMetrics: ").append(toIndentedString(aggregatedVariablesImportanceMetrics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dataValidationMetrics");
    openapiFields.add("trainingMetricsV2");
    openapiFields.add("variableImportanceMetrics");
    openapiFields.add("aggregatedVariablesImportanceMetrics");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModelVersionDetailTrainingResultV2
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModelVersionDetailTrainingResultV2.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelVersionDetailTrainingResultV2 is not found in the empty JSON string", ModelVersionDetailTrainingResultV2.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModelVersionDetailTrainingResultV2.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelVersionDetailTrainingResultV2` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `dataValidationMetrics`
      if (jsonObj.get("dataValidationMetrics") != null && !jsonObj.get("dataValidationMetrics").isJsonNull()) {
        DataValidationMetrics.validateJsonElement(jsonObj.get("dataValidationMetrics"));
      }
      // validate the optional field `trainingMetricsV2`
      if (jsonObj.get("trainingMetricsV2") != null && !jsonObj.get("trainingMetricsV2").isJsonNull()) {
        TrainingResultV2TrainingMetricsV2.validateJsonElement(jsonObj.get("trainingMetricsV2"));
      }
      // validate the optional field `variableImportanceMetrics`
      if (jsonObj.get("variableImportanceMetrics") != null && !jsonObj.get("variableImportanceMetrics").isJsonNull()) {
        VariableImportanceMetrics.validateJsonElement(jsonObj.get("variableImportanceMetrics"));
      }
      // validate the optional field `aggregatedVariablesImportanceMetrics`
      if (jsonObj.get("aggregatedVariablesImportanceMetrics") != null && !jsonObj.get("aggregatedVariablesImportanceMetrics").isJsonNull()) {
        TrainingResultV2AggregatedVariablesImportanceMetrics.validateJsonElement(jsonObj.get("aggregatedVariablesImportanceMetrics"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelVersionDetailTrainingResultV2.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelVersionDetailTrainingResultV2' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelVersionDetailTrainingResultV2> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelVersionDetailTrainingResultV2.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelVersionDetailTrainingResultV2>() {
           @Override
           public void write(JsonWriter out, ModelVersionDetailTrainingResultV2 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelVersionDetailTrainingResultV2 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModelVersionDetailTrainingResultV2 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModelVersionDetailTrainingResultV2
   * @throws IOException if the JSON string is invalid with respect to ModelVersionDetailTrainingResultV2
   */
  public static ModelVersionDetailTrainingResultV2 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelVersionDetailTrainingResultV2.class);
  }

  /**
   * Convert an instance of ModelVersionDetailTrainingResultV2 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

