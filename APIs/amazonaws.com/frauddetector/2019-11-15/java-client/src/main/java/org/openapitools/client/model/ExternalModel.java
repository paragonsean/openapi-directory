/*
 * Amazon Fraud Detector
 * <p>This is the Amazon Fraud Detector API Reference. This guide is for developers who need detailed information about Amazon Fraud Detector API actions, data types, and errors. For more information about Amazon Fraud Detector features, see the <a href=\"https://docs.aws.amazon.com/frauddetector/latest/ug/\">Amazon Fraud Detector User Guide</a>.</p> <p>We provide the Query API as well as AWS software development kits (SDK) for Amazon Fraud Detector in Java and Python programming languages.</p> <p>The Amazon Fraud Detector Query API provides HTTPS requests that use the HTTP verb GET or POST and a Query parameter <code>Action</code>. AWS SDK provides libraries, sample code, tutorials, and other resources for software developers who prefer to build applications using language-specific APIs instead of submitting a request over HTTP or HTTPS. These libraries provide basic functions that automatically take care of tasks such as cryptographically signing your requests, retrying requests, and handling error responses, so that it is easier for you to get started. For more information about the AWS SDKs, go to <a href=\"https://aws.amazon.com/developer/tools/\">Tools to build on AWS</a> page, scroll down to the <b>SDK</b> section, and choose plus (+) sign to expand the section. </p>
 *
 * The version of the OpenAPI document: 2019-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ExternalModelInputConfiguration;
import org.openapitools.client.model.ExternalModelOutputConfiguration;
import org.openapitools.client.model.ModelEndpointStatus;
import org.openapitools.client.model.ModelSource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The Amazon SageMaker model.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:01:35.913975-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ExternalModel {
  public static final String SERIALIZED_NAME_MODEL_ENDPOINT = "modelEndpoint";
  @SerializedName(SERIALIZED_NAME_MODEL_ENDPOINT)
  private String modelEndpoint;

  public static final String SERIALIZED_NAME_MODEL_SOURCE = "modelSource";
  @SerializedName(SERIALIZED_NAME_MODEL_SOURCE)
  private ModelSource modelSource;

  public static final String SERIALIZED_NAME_INVOKE_MODEL_ENDPOINT_ROLE_ARN = "invokeModelEndpointRoleArn";
  @SerializedName(SERIALIZED_NAME_INVOKE_MODEL_ENDPOINT_ROLE_ARN)
  private String invokeModelEndpointRoleArn;

  public static final String SERIALIZED_NAME_INPUT_CONFIGURATION = "inputConfiguration";
  @SerializedName(SERIALIZED_NAME_INPUT_CONFIGURATION)
  private ExternalModelInputConfiguration inputConfiguration;

  public static final String SERIALIZED_NAME_OUTPUT_CONFIGURATION = "outputConfiguration";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONFIGURATION)
  private ExternalModelOutputConfiguration outputConfiguration;

  public static final String SERIALIZED_NAME_MODEL_ENDPOINT_STATUS = "modelEndpointStatus";
  @SerializedName(SERIALIZED_NAME_MODEL_ENDPOINT_STATUS)
  private ModelEndpointStatus modelEndpointStatus;

  public static final String SERIALIZED_NAME_LAST_UPDATED_TIME = "lastUpdatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_TIME)
  private String lastUpdatedTime;

  public static final String SERIALIZED_NAME_CREATED_TIME = "createdTime";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private String createdTime;

  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public ExternalModel() {
  }

  public ExternalModel modelEndpoint(String modelEndpoint) {
    this.modelEndpoint = modelEndpoint;
    return this;
  }

  /**
   * Get modelEndpoint
   * @return modelEndpoint
   */
  @javax.annotation.Nullable
  public String getModelEndpoint() {
    return modelEndpoint;
  }

  public void setModelEndpoint(String modelEndpoint) {
    this.modelEndpoint = modelEndpoint;
  }


  public ExternalModel modelSource(ModelSource modelSource) {
    this.modelSource = modelSource;
    return this;
  }

  /**
   * Get modelSource
   * @return modelSource
   */
  @javax.annotation.Nullable
  public ModelSource getModelSource() {
    return modelSource;
  }

  public void setModelSource(ModelSource modelSource) {
    this.modelSource = modelSource;
  }


  public ExternalModel invokeModelEndpointRoleArn(String invokeModelEndpointRoleArn) {
    this.invokeModelEndpointRoleArn = invokeModelEndpointRoleArn;
    return this;
  }

  /**
   * Get invokeModelEndpointRoleArn
   * @return invokeModelEndpointRoleArn
   */
  @javax.annotation.Nullable
  public String getInvokeModelEndpointRoleArn() {
    return invokeModelEndpointRoleArn;
  }

  public void setInvokeModelEndpointRoleArn(String invokeModelEndpointRoleArn) {
    this.invokeModelEndpointRoleArn = invokeModelEndpointRoleArn;
  }


  public ExternalModel inputConfiguration(ExternalModelInputConfiguration inputConfiguration) {
    this.inputConfiguration = inputConfiguration;
    return this;
  }

  /**
   * Get inputConfiguration
   * @return inputConfiguration
   */
  @javax.annotation.Nullable
  public ExternalModelInputConfiguration getInputConfiguration() {
    return inputConfiguration;
  }

  public void setInputConfiguration(ExternalModelInputConfiguration inputConfiguration) {
    this.inputConfiguration = inputConfiguration;
  }


  public ExternalModel outputConfiguration(ExternalModelOutputConfiguration outputConfiguration) {
    this.outputConfiguration = outputConfiguration;
    return this;
  }

  /**
   * Get outputConfiguration
   * @return outputConfiguration
   */
  @javax.annotation.Nullable
  public ExternalModelOutputConfiguration getOutputConfiguration() {
    return outputConfiguration;
  }

  public void setOutputConfiguration(ExternalModelOutputConfiguration outputConfiguration) {
    this.outputConfiguration = outputConfiguration;
  }


  public ExternalModel modelEndpointStatus(ModelEndpointStatus modelEndpointStatus) {
    this.modelEndpointStatus = modelEndpointStatus;
    return this;
  }

  /**
   * Get modelEndpointStatus
   * @return modelEndpointStatus
   */
  @javax.annotation.Nullable
  public ModelEndpointStatus getModelEndpointStatus() {
    return modelEndpointStatus;
  }

  public void setModelEndpointStatus(ModelEndpointStatus modelEndpointStatus) {
    this.modelEndpointStatus = modelEndpointStatus;
  }


  public ExternalModel lastUpdatedTime(String lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
    return this;
  }

  /**
   * Get lastUpdatedTime
   * @return lastUpdatedTime
   */
  @javax.annotation.Nullable
  public String getLastUpdatedTime() {
    return lastUpdatedTime;
  }

  public void setLastUpdatedTime(String lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
  }


  public ExternalModel createdTime(String createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * Get createdTime
   * @return createdTime
   */
  @javax.annotation.Nullable
  public String getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(String createdTime) {
    this.createdTime = createdTime;
  }


  public ExternalModel arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalModel externalModel = (ExternalModel) o;
    return Objects.equals(this.modelEndpoint, externalModel.modelEndpoint) &&
        Objects.equals(this.modelSource, externalModel.modelSource) &&
        Objects.equals(this.invokeModelEndpointRoleArn, externalModel.invokeModelEndpointRoleArn) &&
        Objects.equals(this.inputConfiguration, externalModel.inputConfiguration) &&
        Objects.equals(this.outputConfiguration, externalModel.outputConfiguration) &&
        Objects.equals(this.modelEndpointStatus, externalModel.modelEndpointStatus) &&
        Objects.equals(this.lastUpdatedTime, externalModel.lastUpdatedTime) &&
        Objects.equals(this.createdTime, externalModel.createdTime) &&
        Objects.equals(this.arn, externalModel.arn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelEndpoint, modelSource, invokeModelEndpointRoleArn, inputConfiguration, outputConfiguration, modelEndpointStatus, lastUpdatedTime, createdTime, arn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalModel {\n");
    sb.append("    modelEndpoint: ").append(toIndentedString(modelEndpoint)).append("\n");
    sb.append("    modelSource: ").append(toIndentedString(modelSource)).append("\n");
    sb.append("    invokeModelEndpointRoleArn: ").append(toIndentedString(invokeModelEndpointRoleArn)).append("\n");
    sb.append("    inputConfiguration: ").append(toIndentedString(inputConfiguration)).append("\n");
    sb.append("    outputConfiguration: ").append(toIndentedString(outputConfiguration)).append("\n");
    sb.append("    modelEndpointStatus: ").append(toIndentedString(modelEndpointStatus)).append("\n");
    sb.append("    lastUpdatedTime: ").append(toIndentedString(lastUpdatedTime)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("modelEndpoint");
    openapiFields.add("modelSource");
    openapiFields.add("invokeModelEndpointRoleArn");
    openapiFields.add("inputConfiguration");
    openapiFields.add("outputConfiguration");
    openapiFields.add("modelEndpointStatus");
    openapiFields.add("lastUpdatedTime");
    openapiFields.add("createdTime");
    openapiFields.add("arn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ExternalModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ExternalModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ExternalModel is not found in the empty JSON string", ExternalModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ExternalModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ExternalModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `modelEndpoint`
      if (jsonObj.get("modelEndpoint") != null && !jsonObj.get("modelEndpoint").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("modelEndpoint"));
      }
      // validate the optional field `modelSource`
      if (jsonObj.get("modelSource") != null && !jsonObj.get("modelSource").isJsonNull()) {
        ModelSource.validateJsonElement(jsonObj.get("modelSource"));
      }
      // validate the optional field `invokeModelEndpointRoleArn`
      if (jsonObj.get("invokeModelEndpointRoleArn") != null && !jsonObj.get("invokeModelEndpointRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("invokeModelEndpointRoleArn"));
      }
      // validate the optional field `inputConfiguration`
      if (jsonObj.get("inputConfiguration") != null && !jsonObj.get("inputConfiguration").isJsonNull()) {
        ExternalModelInputConfiguration.validateJsonElement(jsonObj.get("inputConfiguration"));
      }
      // validate the optional field `outputConfiguration`
      if (jsonObj.get("outputConfiguration") != null && !jsonObj.get("outputConfiguration").isJsonNull()) {
        ExternalModelOutputConfiguration.validateJsonElement(jsonObj.get("outputConfiguration"));
      }
      // validate the optional field `modelEndpointStatus`
      if (jsonObj.get("modelEndpointStatus") != null && !jsonObj.get("modelEndpointStatus").isJsonNull()) {
        ModelEndpointStatus.validateJsonElement(jsonObj.get("modelEndpointStatus"));
      }
      // validate the optional field `lastUpdatedTime`
      if (jsonObj.get("lastUpdatedTime") != null && !jsonObj.get("lastUpdatedTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("lastUpdatedTime"));
      }
      // validate the optional field `createdTime`
      if (jsonObj.get("createdTime") != null && !jsonObj.get("createdTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("createdTime"));
      }
      // validate the optional field `arn`
      if (jsonObj.get("arn") != null && !jsonObj.get("arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("arn"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ExternalModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ExternalModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ExternalModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ExternalModel.class));

       return (TypeAdapter<T>) new TypeAdapter<ExternalModel>() {
           @Override
           public void write(JsonWriter out, ExternalModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ExternalModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ExternalModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ExternalModel
   * @throws IOException if the JSON string is invalid with respect to ExternalModel
   */
  public static ExternalModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ExternalModel.class);
  }

  /**
   * Convert an instance of ExternalModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

