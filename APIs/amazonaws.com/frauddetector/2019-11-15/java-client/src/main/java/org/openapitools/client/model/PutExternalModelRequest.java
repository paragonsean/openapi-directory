/*
 * Amazon Fraud Detector
 * <p>This is the Amazon Fraud Detector API Reference. This guide is for developers who need detailed information about Amazon Fraud Detector API actions, data types, and errors. For more information about Amazon Fraud Detector features, see the <a href=\"https://docs.aws.amazon.com/frauddetector/latest/ug/\">Amazon Fraud Detector User Guide</a>.</p> <p>We provide the Query API as well as AWS software development kits (SDK) for Amazon Fraud Detector in Java and Python programming languages.</p> <p>The Amazon Fraud Detector Query API provides HTTPS requests that use the HTTP verb GET or POST and a Query parameter <code>Action</code>. AWS SDK provides libraries, sample code, tutorials, and other resources for software developers who prefer to build applications using language-specific APIs instead of submitting a request over HTTP or HTTPS. These libraries provide basic functions that automatically take care of tasks such as cryptographically signing your requests, retrying requests, and handling error responses, so that it is easier for you to get started. For more information about the AWS SDKs, go to <a href=\"https://aws.amazon.com/developer/tools/\">Tools to build on AWS</a> page, scroll down to the <b>SDK</b> section, and choose plus (+) sign to expand the section. </p>
 *
 * The version of the OpenAPI document: 2019-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ModelEndpointStatus;
import org.openapitools.client.model.ModelSource;
import org.openapitools.client.model.PutExternalModelRequestInputConfiguration;
import org.openapitools.client.model.PutExternalModelRequestOutputConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PutExternalModelRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:01:35.913975-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PutExternalModelRequest {
  public static final String SERIALIZED_NAME_MODEL_ENDPOINT = "modelEndpoint";
  @SerializedName(SERIALIZED_NAME_MODEL_ENDPOINT)
  private String modelEndpoint;

  public static final String SERIALIZED_NAME_MODEL_SOURCE = "modelSource";
  @SerializedName(SERIALIZED_NAME_MODEL_SOURCE)
  private ModelSource modelSource;

  public static final String SERIALIZED_NAME_INVOKE_MODEL_ENDPOINT_ROLE_ARN = "invokeModelEndpointRoleArn";
  @SerializedName(SERIALIZED_NAME_INVOKE_MODEL_ENDPOINT_ROLE_ARN)
  private String invokeModelEndpointRoleArn;

  public static final String SERIALIZED_NAME_INPUT_CONFIGURATION = "inputConfiguration";
  @SerializedName(SERIALIZED_NAME_INPUT_CONFIGURATION)
  private PutExternalModelRequestInputConfiguration inputConfiguration;

  public static final String SERIALIZED_NAME_OUTPUT_CONFIGURATION = "outputConfiguration";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONFIGURATION)
  private PutExternalModelRequestOutputConfiguration outputConfiguration;

  public static final String SERIALIZED_NAME_MODEL_ENDPOINT_STATUS = "modelEndpointStatus";
  @SerializedName(SERIALIZED_NAME_MODEL_ENDPOINT_STATUS)
  private ModelEndpointStatus modelEndpointStatus;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public PutExternalModelRequest() {
  }

  public PutExternalModelRequest modelEndpoint(String modelEndpoint) {
    this.modelEndpoint = modelEndpoint;
    return this;
  }

  /**
   * Get modelEndpoint
   * @return modelEndpoint
   */
  @javax.annotation.Nonnull
  public String getModelEndpoint() {
    return modelEndpoint;
  }

  public void setModelEndpoint(String modelEndpoint) {
    this.modelEndpoint = modelEndpoint;
  }


  public PutExternalModelRequest modelSource(ModelSource modelSource) {
    this.modelSource = modelSource;
    return this;
  }

  /**
   * Get modelSource
   * @return modelSource
   */
  @javax.annotation.Nonnull
  public ModelSource getModelSource() {
    return modelSource;
  }

  public void setModelSource(ModelSource modelSource) {
    this.modelSource = modelSource;
  }


  public PutExternalModelRequest invokeModelEndpointRoleArn(String invokeModelEndpointRoleArn) {
    this.invokeModelEndpointRoleArn = invokeModelEndpointRoleArn;
    return this;
  }

  /**
   * Get invokeModelEndpointRoleArn
   * @return invokeModelEndpointRoleArn
   */
  @javax.annotation.Nonnull
  public String getInvokeModelEndpointRoleArn() {
    return invokeModelEndpointRoleArn;
  }

  public void setInvokeModelEndpointRoleArn(String invokeModelEndpointRoleArn) {
    this.invokeModelEndpointRoleArn = invokeModelEndpointRoleArn;
  }


  public PutExternalModelRequest inputConfiguration(PutExternalModelRequestInputConfiguration inputConfiguration) {
    this.inputConfiguration = inputConfiguration;
    return this;
  }

  /**
   * Get inputConfiguration
   * @return inputConfiguration
   */
  @javax.annotation.Nonnull
  public PutExternalModelRequestInputConfiguration getInputConfiguration() {
    return inputConfiguration;
  }

  public void setInputConfiguration(PutExternalModelRequestInputConfiguration inputConfiguration) {
    this.inputConfiguration = inputConfiguration;
  }


  public PutExternalModelRequest outputConfiguration(PutExternalModelRequestOutputConfiguration outputConfiguration) {
    this.outputConfiguration = outputConfiguration;
    return this;
  }

  /**
   * Get outputConfiguration
   * @return outputConfiguration
   */
  @javax.annotation.Nonnull
  public PutExternalModelRequestOutputConfiguration getOutputConfiguration() {
    return outputConfiguration;
  }

  public void setOutputConfiguration(PutExternalModelRequestOutputConfiguration outputConfiguration) {
    this.outputConfiguration = outputConfiguration;
  }


  public PutExternalModelRequest modelEndpointStatus(ModelEndpointStatus modelEndpointStatus) {
    this.modelEndpointStatus = modelEndpointStatus;
    return this;
  }

  /**
   * Get modelEndpointStatus
   * @return modelEndpointStatus
   */
  @javax.annotation.Nonnull
  public ModelEndpointStatus getModelEndpointStatus() {
    return modelEndpointStatus;
  }

  public void setModelEndpointStatus(ModelEndpointStatus modelEndpointStatus) {
    this.modelEndpointStatus = modelEndpointStatus;
  }


  public PutExternalModelRequest tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutExternalModelRequest putExternalModelRequest = (PutExternalModelRequest) o;
    return Objects.equals(this.modelEndpoint, putExternalModelRequest.modelEndpoint) &&
        Objects.equals(this.modelSource, putExternalModelRequest.modelSource) &&
        Objects.equals(this.invokeModelEndpointRoleArn, putExternalModelRequest.invokeModelEndpointRoleArn) &&
        Objects.equals(this.inputConfiguration, putExternalModelRequest.inputConfiguration) &&
        Objects.equals(this.outputConfiguration, putExternalModelRequest.outputConfiguration) &&
        Objects.equals(this.modelEndpointStatus, putExternalModelRequest.modelEndpointStatus) &&
        Objects.equals(this.tags, putExternalModelRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelEndpoint, modelSource, invokeModelEndpointRoleArn, inputConfiguration, outputConfiguration, modelEndpointStatus, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutExternalModelRequest {\n");
    sb.append("    modelEndpoint: ").append(toIndentedString(modelEndpoint)).append("\n");
    sb.append("    modelSource: ").append(toIndentedString(modelSource)).append("\n");
    sb.append("    invokeModelEndpointRoleArn: ").append(toIndentedString(invokeModelEndpointRoleArn)).append("\n");
    sb.append("    inputConfiguration: ").append(toIndentedString(inputConfiguration)).append("\n");
    sb.append("    outputConfiguration: ").append(toIndentedString(outputConfiguration)).append("\n");
    sb.append("    modelEndpointStatus: ").append(toIndentedString(modelEndpointStatus)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("modelEndpoint");
    openapiFields.add("modelSource");
    openapiFields.add("invokeModelEndpointRoleArn");
    openapiFields.add("inputConfiguration");
    openapiFields.add("outputConfiguration");
    openapiFields.add("modelEndpointStatus");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("modelEndpoint");
    openapiRequiredFields.add("modelSource");
    openapiRequiredFields.add("invokeModelEndpointRoleArn");
    openapiRequiredFields.add("inputConfiguration");
    openapiRequiredFields.add("outputConfiguration");
    openapiRequiredFields.add("modelEndpointStatus");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutExternalModelRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutExternalModelRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutExternalModelRequest is not found in the empty JSON string", PutExternalModelRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutExternalModelRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutExternalModelRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PutExternalModelRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `modelEndpoint`
      String.validateJsonElement(jsonObj.get("modelEndpoint"));
      // validate the required field `modelSource`
      ModelSource.validateJsonElement(jsonObj.get("modelSource"));
      // validate the required field `invokeModelEndpointRoleArn`
      String.validateJsonElement(jsonObj.get("invokeModelEndpointRoleArn"));
      // validate the required field `inputConfiguration`
      PutExternalModelRequestInputConfiguration.validateJsonElement(jsonObj.get("inputConfiguration"));
      // validate the required field `outputConfiguration`
      PutExternalModelRequestOutputConfiguration.validateJsonElement(jsonObj.get("outputConfiguration"));
      // validate the required field `modelEndpointStatus`
      ModelEndpointStatus.validateJsonElement(jsonObj.get("modelEndpointStatus"));
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutExternalModelRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutExternalModelRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutExternalModelRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutExternalModelRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PutExternalModelRequest>() {
           @Override
           public void write(JsonWriter out, PutExternalModelRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutExternalModelRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutExternalModelRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutExternalModelRequest
   * @throws IOException if the JSON string is invalid with respect to PutExternalModelRequest
   */
  public static PutExternalModelRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutExternalModelRequest.class);
  }

  /**
   * Convert an instance of PutExternalModelRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

