/*
 * Amazon Fraud Detector
 * <p>This is the Amazon Fraud Detector API Reference. This guide is for developers who need detailed information about Amazon Fraud Detector API actions, data types, and errors. For more information about Amazon Fraud Detector features, see the <a href=\"https://docs.aws.amazon.com/frauddetector/latest/ug/\">Amazon Fraud Detector User Guide</a>.</p> <p>We provide the Query API as well as AWS software development kits (SDK) for Amazon Fraud Detector in Java and Python programming languages.</p> <p>The Amazon Fraud Detector Query API provides HTTPS requests that use the HTTP verb GET or POST and a Query parameter <code>Action</code>. AWS SDK provides libraries, sample code, tutorials, and other resources for software developers who prefer to build applications using language-specific APIs instead of submitting a request over HTTP or HTTPS. These libraries provide basic functions that automatically take care of tasks such as cryptographically signing your requests, retrying requests, and handling error responses, so that it is easier for you to get started. For more information about the AWS SDKs, go to <a href=\"https://aws.amazon.com/developer/tools/\">Tools to build on AWS</a> page, scroll down to the <b>SDK</b> section, and choose plus (+) sign to expand the section. </p>
 *
 * The version of the OpenAPI document: 2019-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateModelVersionRequestExternalEventsDetail;
import org.openapitools.client.model.CreateModelVersionRequestIngestedEventsDetail;
import org.openapitools.client.model.CreateModelVersionRequestTrainingDataSchema;
import org.openapitools.client.model.ModelTypeEnum;
import org.openapitools.client.model.TrainingDataSourceEnum;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateModelVersionRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:01:35.913975-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateModelVersionRequest {
  public static final String SERIALIZED_NAME_MODEL_ID = "modelId";
  @SerializedName(SERIALIZED_NAME_MODEL_ID)
  private String modelId;

  public static final String SERIALIZED_NAME_MODEL_TYPE = "modelType";
  @SerializedName(SERIALIZED_NAME_MODEL_TYPE)
  private ModelTypeEnum modelType;

  public static final String SERIALIZED_NAME_TRAINING_DATA_SOURCE = "trainingDataSource";
  @SerializedName(SERIALIZED_NAME_TRAINING_DATA_SOURCE)
  private TrainingDataSourceEnum trainingDataSource;

  public static final String SERIALIZED_NAME_TRAINING_DATA_SCHEMA = "trainingDataSchema";
  @SerializedName(SERIALIZED_NAME_TRAINING_DATA_SCHEMA)
  private CreateModelVersionRequestTrainingDataSchema trainingDataSchema;

  public static final String SERIALIZED_NAME_EXTERNAL_EVENTS_DETAIL = "externalEventsDetail";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_EVENTS_DETAIL)
  private CreateModelVersionRequestExternalEventsDetail externalEventsDetail;

  public static final String SERIALIZED_NAME_INGESTED_EVENTS_DETAIL = "ingestedEventsDetail";
  @SerializedName(SERIALIZED_NAME_INGESTED_EVENTS_DETAIL)
  private CreateModelVersionRequestIngestedEventsDetail ingestedEventsDetail;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public CreateModelVersionRequest() {
  }

  public CreateModelVersionRequest modelId(String modelId) {
    this.modelId = modelId;
    return this;
  }

  /**
   * Get modelId
   * @return modelId
   */
  @javax.annotation.Nonnull
  public String getModelId() {
    return modelId;
  }

  public void setModelId(String modelId) {
    this.modelId = modelId;
  }


  public CreateModelVersionRequest modelType(ModelTypeEnum modelType) {
    this.modelType = modelType;
    return this;
  }

  /**
   * Get modelType
   * @return modelType
   */
  @javax.annotation.Nonnull
  public ModelTypeEnum getModelType() {
    return modelType;
  }

  public void setModelType(ModelTypeEnum modelType) {
    this.modelType = modelType;
  }


  public CreateModelVersionRequest trainingDataSource(TrainingDataSourceEnum trainingDataSource) {
    this.trainingDataSource = trainingDataSource;
    return this;
  }

  /**
   * Get trainingDataSource
   * @return trainingDataSource
   */
  @javax.annotation.Nonnull
  public TrainingDataSourceEnum getTrainingDataSource() {
    return trainingDataSource;
  }

  public void setTrainingDataSource(TrainingDataSourceEnum trainingDataSource) {
    this.trainingDataSource = trainingDataSource;
  }


  public CreateModelVersionRequest trainingDataSchema(CreateModelVersionRequestTrainingDataSchema trainingDataSchema) {
    this.trainingDataSchema = trainingDataSchema;
    return this;
  }

  /**
   * Get trainingDataSchema
   * @return trainingDataSchema
   */
  @javax.annotation.Nonnull
  public CreateModelVersionRequestTrainingDataSchema getTrainingDataSchema() {
    return trainingDataSchema;
  }

  public void setTrainingDataSchema(CreateModelVersionRequestTrainingDataSchema trainingDataSchema) {
    this.trainingDataSchema = trainingDataSchema;
  }


  public CreateModelVersionRequest externalEventsDetail(CreateModelVersionRequestExternalEventsDetail externalEventsDetail) {
    this.externalEventsDetail = externalEventsDetail;
    return this;
  }

  /**
   * Get externalEventsDetail
   * @return externalEventsDetail
   */
  @javax.annotation.Nullable
  public CreateModelVersionRequestExternalEventsDetail getExternalEventsDetail() {
    return externalEventsDetail;
  }

  public void setExternalEventsDetail(CreateModelVersionRequestExternalEventsDetail externalEventsDetail) {
    this.externalEventsDetail = externalEventsDetail;
  }


  public CreateModelVersionRequest ingestedEventsDetail(CreateModelVersionRequestIngestedEventsDetail ingestedEventsDetail) {
    this.ingestedEventsDetail = ingestedEventsDetail;
    return this;
  }

  /**
   * Get ingestedEventsDetail
   * @return ingestedEventsDetail
   */
  @javax.annotation.Nullable
  public CreateModelVersionRequestIngestedEventsDetail getIngestedEventsDetail() {
    return ingestedEventsDetail;
  }

  public void setIngestedEventsDetail(CreateModelVersionRequestIngestedEventsDetail ingestedEventsDetail) {
    this.ingestedEventsDetail = ingestedEventsDetail;
  }


  public CreateModelVersionRequest tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateModelVersionRequest createModelVersionRequest = (CreateModelVersionRequest) o;
    return Objects.equals(this.modelId, createModelVersionRequest.modelId) &&
        Objects.equals(this.modelType, createModelVersionRequest.modelType) &&
        Objects.equals(this.trainingDataSource, createModelVersionRequest.trainingDataSource) &&
        Objects.equals(this.trainingDataSchema, createModelVersionRequest.trainingDataSchema) &&
        Objects.equals(this.externalEventsDetail, createModelVersionRequest.externalEventsDetail) &&
        Objects.equals(this.ingestedEventsDetail, createModelVersionRequest.ingestedEventsDetail) &&
        Objects.equals(this.tags, createModelVersionRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelId, modelType, trainingDataSource, trainingDataSchema, externalEventsDetail, ingestedEventsDetail, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateModelVersionRequest {\n");
    sb.append("    modelId: ").append(toIndentedString(modelId)).append("\n");
    sb.append("    modelType: ").append(toIndentedString(modelType)).append("\n");
    sb.append("    trainingDataSource: ").append(toIndentedString(trainingDataSource)).append("\n");
    sb.append("    trainingDataSchema: ").append(toIndentedString(trainingDataSchema)).append("\n");
    sb.append("    externalEventsDetail: ").append(toIndentedString(externalEventsDetail)).append("\n");
    sb.append("    ingestedEventsDetail: ").append(toIndentedString(ingestedEventsDetail)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("modelId");
    openapiFields.add("modelType");
    openapiFields.add("trainingDataSource");
    openapiFields.add("trainingDataSchema");
    openapiFields.add("externalEventsDetail");
    openapiFields.add("ingestedEventsDetail");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("modelId");
    openapiRequiredFields.add("modelType");
    openapiRequiredFields.add("trainingDataSource");
    openapiRequiredFields.add("trainingDataSchema");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateModelVersionRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateModelVersionRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateModelVersionRequest is not found in the empty JSON string", CreateModelVersionRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateModelVersionRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateModelVersionRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateModelVersionRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `modelId`
      String.validateJsonElement(jsonObj.get("modelId"));
      // validate the required field `modelType`
      ModelTypeEnum.validateJsonElement(jsonObj.get("modelType"));
      // validate the required field `trainingDataSource`
      TrainingDataSourceEnum.validateJsonElement(jsonObj.get("trainingDataSource"));
      // validate the required field `trainingDataSchema`
      CreateModelVersionRequestTrainingDataSchema.validateJsonElement(jsonObj.get("trainingDataSchema"));
      // validate the optional field `externalEventsDetail`
      if (jsonObj.get("externalEventsDetail") != null && !jsonObj.get("externalEventsDetail").isJsonNull()) {
        CreateModelVersionRequestExternalEventsDetail.validateJsonElement(jsonObj.get("externalEventsDetail"));
      }
      // validate the optional field `ingestedEventsDetail`
      if (jsonObj.get("ingestedEventsDetail") != null && !jsonObj.get("ingestedEventsDetail").isJsonNull()) {
        CreateModelVersionRequestIngestedEventsDetail.validateJsonElement(jsonObj.get("ingestedEventsDetail"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateModelVersionRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateModelVersionRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateModelVersionRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateModelVersionRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateModelVersionRequest>() {
           @Override
           public void write(JsonWriter out, CreateModelVersionRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateModelVersionRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateModelVersionRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateModelVersionRequest
   * @throws IOException if the JSON string is invalid with respect to CreateModelVersionRequest
   */
  public static CreateModelVersionRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateModelVersionRequest.class);
  }

  /**
   * Convert an instance of CreateModelVersionRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

