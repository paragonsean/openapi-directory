/**
 * Amazon Glacier
 * <p> Amazon S3 Glacier (Glacier) is a storage solution for \"cold data.\"</p> <p>Glacier is an extremely low-cost storage service that provides secure, durable, and easy-to-use storage for data backup and archival. With Glacier, customers can store their data cost effectively for months, years, or decades. Glacier also enables customers to offload the administrative burdens of operating and scaling storage to AWS, so they don't have to worry about capacity planning, hardware provisioning, data replication, hardware failure and recovery, or time-consuming hardware migrations.</p> <p>Glacier is a great storage choice when low storage cost is paramount and your data is rarely retrieved. If your application requires fast or frequent access to your data, consider using Amazon S3. For more information, see <a href=\"http://aws.amazon.com/s3/\">Amazon Simple Storage Service (Amazon S3)</a>.</p> <p>You can store any kind of data in any format. There is no maximum limit on the total amount of data you can store in Glacier.</p> <p>If you are a first-time user of Glacier, we recommend that you begin by reading the following sections in the <i>Amazon S3 Glacier Developer Guide</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/amazonglacier/latest/dev/introduction.html\">What is Amazon S3 Glacier</a> - This section of the Developer Guide describes the underlying data model, the operations it supports, and the AWS SDKs that you can use to interact with the service.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-getting-started.html\">Getting Started with Amazon S3 Glacier</a> - The Getting Started section walks you through the process of creating a vault, uploading archives, creating jobs to download archives, retrieving the job output, and deleting archives.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2012-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISelectParameters.h
 *
 * Contains information about the parameters used for a select.
 */

#ifndef OAISelectParameters_H
#define OAISelectParameters_H

#include <QJsonObject>

#include "OAIExpressionType.h"
#include "OAISelectParameters_InputSerialization.h"
#include "OAISelectParameters_OutputSerialization.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISelectParameters_InputSerialization;
class OAISelectParameters_OutputSerialization;

class OAISelectParameters : public OAIObject {
public:
    OAISelectParameters();
    OAISelectParameters(QString json);
    ~OAISelectParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISelectParameters_InputSerialization getInputSerialization() const;
    void setInputSerialization(const OAISelectParameters_InputSerialization &input_serialization);
    bool is_input_serialization_Set() const;
    bool is_input_serialization_Valid() const;

    OAIExpressionType getExpressionType() const;
    void setExpressionType(const OAIExpressionType &expression_type);
    bool is_expression_type_Set() const;
    bool is_expression_type_Valid() const;

    QString getExpression() const;
    void setExpression(const QString &expression);
    bool is_expression_Set() const;
    bool is_expression_Valid() const;

    OAISelectParameters_OutputSerialization getOutputSerialization() const;
    void setOutputSerialization(const OAISelectParameters_OutputSerialization &output_serialization);
    bool is_output_serialization_Set() const;
    bool is_output_serialization_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISelectParameters_InputSerialization m_input_serialization;
    bool m_input_serialization_isSet;
    bool m_input_serialization_isValid;

    OAIExpressionType m_expression_type;
    bool m_expression_type_isSet;
    bool m_expression_type_isValid;

    QString m_expression;
    bool m_expression_isSet;
    bool m_expression_isValid;

    OAISelectParameters_OutputSerialization m_output_serialization;
    bool m_output_serialization_isSet;
    bool m_output_serialization_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISelectParameters)

#endif // OAISelectParameters_H
