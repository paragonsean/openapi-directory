/**
 * Amazon Glacier
 * <p> Amazon S3 Glacier (Glacier) is a storage solution for \"cold data.\"</p> <p>Glacier is an extremely low-cost storage service that provides secure, durable, and easy-to-use storage for data backup and archival. With Glacier, customers can store their data cost effectively for months, years, or decades. Glacier also enables customers to offload the administrative burdens of operating and scaling storage to AWS, so they don't have to worry about capacity planning, hardware provisioning, data replication, hardware failure and recovery, or time-consuming hardware migrations.</p> <p>Glacier is a great storage choice when low storage cost is paramount and your data is rarely retrieved. If your application requires fast or frequent access to your data, consider using Amazon S3. For more information, see <a href=\"http://aws.amazon.com/s3/\">Amazon Simple Storage Service (Amazon S3)</a>.</p> <p>You can store any kind of data in any format. There is no maximum limit on the total amount of data you can store in Glacier.</p> <p>If you are a first-time user of Glacier, we recommend that you begin by reading the following sections in the <i>Amazon S3 Glacier Developer Guide</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/amazonglacier/latest/dev/introduction.html\">What is Amazon S3 Glacier</a> - This section of the Developer Guide describes the underlying data model, the operations it supports, and the AWS SDKs that you can use to interact with the service.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-getting-started.html\">Getting Started with Amazon S3 Glacier</a> - The Getting Started section walks you through the process of creating a vault, uploading archives, creating jobs to download archives, retrieving the job output, and deleting archives.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2012-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeVaultOutput.h
 *
 * Contains the Amazon S3 Glacier response to your request.
 */

#ifndef OAIDescribeVaultOutput_H
#define OAIDescribeVaultOutput_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeVaultOutput : public OAIObject {
public:
    OAIDescribeVaultOutput();
    OAIDescribeVaultOutput(QString json);
    ~OAIDescribeVaultOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getVaultArn() const;
    void setVaultArn(const QString &vault_arn);
    bool is_vault_arn_Set() const;
    bool is_vault_arn_Valid() const;

    QString getVaultName() const;
    void setVaultName(const QString &vault_name);
    bool is_vault_name_Set() const;
    bool is_vault_name_Valid() const;

    QString getCreationDate() const;
    void setCreationDate(const QString &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QString getLastInventoryDate() const;
    void setLastInventoryDate(const QString &last_inventory_date);
    bool is_last_inventory_date_Set() const;
    bool is_last_inventory_date_Valid() const;

    qint32 getNumberOfArchives() const;
    void setNumberOfArchives(const qint32 &number_of_archives);
    bool is_number_of_archives_Set() const;
    bool is_number_of_archives_Valid() const;

    qint32 getSizeInBytes() const;
    void setSizeInBytes(const qint32 &size_in_bytes);
    bool is_size_in_bytes_Set() const;
    bool is_size_in_bytes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_vault_arn;
    bool m_vault_arn_isSet;
    bool m_vault_arn_isValid;

    QString m_vault_name;
    bool m_vault_name_isSet;
    bool m_vault_name_isValid;

    QString m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QString m_last_inventory_date;
    bool m_last_inventory_date_isSet;
    bool m_last_inventory_date_isValid;

    qint32 m_number_of_archives;
    bool m_number_of_archives_isSet;
    bool m_number_of_archives_isValid;

    qint32 m_size_in_bytes;
    bool m_size_in_bytes_isSet;
    bool m_size_in_bytes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeVaultOutput)

#endif // OAIDescribeVaultOutput_H
