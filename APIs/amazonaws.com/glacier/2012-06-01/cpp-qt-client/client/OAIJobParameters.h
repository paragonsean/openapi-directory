/**
 * Amazon Glacier
 * <p> Amazon S3 Glacier (Glacier) is a storage solution for \"cold data.\"</p> <p>Glacier is an extremely low-cost storage service that provides secure, durable, and easy-to-use storage for data backup and archival. With Glacier, customers can store their data cost effectively for months, years, or decades. Glacier also enables customers to offload the administrative burdens of operating and scaling storage to AWS, so they don't have to worry about capacity planning, hardware provisioning, data replication, hardware failure and recovery, or time-consuming hardware migrations.</p> <p>Glacier is a great storage choice when low storage cost is paramount and your data is rarely retrieved. If your application requires fast or frequent access to your data, consider using Amazon S3. For more information, see <a href=\"http://aws.amazon.com/s3/\">Amazon Simple Storage Service (Amazon S3)</a>.</p> <p>You can store any kind of data in any format. There is no maximum limit on the total amount of data you can store in Glacier.</p> <p>If you are a first-time user of Glacier, we recommend that you begin by reading the following sections in the <i>Amazon S3 Glacier Developer Guide</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/amazonglacier/latest/dev/introduction.html\">What is Amazon S3 Glacier</a> - This section of the Developer Guide describes the underlying data model, the operations it supports, and the AWS SDKs that you can use to interact with the service.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-getting-started.html\">Getting Started with Amazon S3 Glacier</a> - The Getting Started section walks you through the process of creating a vault, uploading archives, creating jobs to download archives, retrieving the job output, and deleting archives.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2012-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJobParameters.h
 *
 * Provides options for defining a job.
 */

#ifndef OAIJobParameters_H
#define OAIJobParameters_H

#include <QJsonObject>

#include "OAIInitiateJob_request_jobParameters_InventoryRetrievalParameters.h"
#include "OAIInitiateJob_request_jobParameters_OutputLocation.h"
#include "OAIInitiateJob_request_jobParameters_SelectParameters.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInitiateJob_request_jobParameters_InventoryRetrievalParameters;
class OAIInitiateJob_request_jobParameters_SelectParameters;
class OAIInitiateJob_request_jobParameters_OutputLocation;

class OAIJobParameters : public OAIObject {
public:
    OAIJobParameters();
    OAIJobParameters(QString json);
    ~OAIJobParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFormat() const;
    void setFormat(const QString &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getArchiveId() const;
    void setArchiveId(const QString &archive_id);
    bool is_archive_id_Set() const;
    bool is_archive_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getSnsTopic() const;
    void setSnsTopic(const QString &sns_topic);
    bool is_sns_topic_Set() const;
    bool is_sns_topic_Valid() const;

    QString getRetrievalByteRange() const;
    void setRetrievalByteRange(const QString &retrieval_byte_range);
    bool is_retrieval_byte_range_Set() const;
    bool is_retrieval_byte_range_Valid() const;

    QString getTier() const;
    void setTier(const QString &tier);
    bool is_tier_Set() const;
    bool is_tier_Valid() const;

    OAIInitiateJob_request_jobParameters_InventoryRetrievalParameters getInventoryRetrievalParameters() const;
    void setInventoryRetrievalParameters(const OAIInitiateJob_request_jobParameters_InventoryRetrievalParameters &inventory_retrieval_parameters);
    bool is_inventory_retrieval_parameters_Set() const;
    bool is_inventory_retrieval_parameters_Valid() const;

    OAIInitiateJob_request_jobParameters_SelectParameters getSelectParameters() const;
    void setSelectParameters(const OAIInitiateJob_request_jobParameters_SelectParameters &select_parameters);
    bool is_select_parameters_Set() const;
    bool is_select_parameters_Valid() const;

    OAIInitiateJob_request_jobParameters_OutputLocation getOutputLocation() const;
    void setOutputLocation(const OAIInitiateJob_request_jobParameters_OutputLocation &output_location);
    bool is_output_location_Set() const;
    bool is_output_location_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_archive_id;
    bool m_archive_id_isSet;
    bool m_archive_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_sns_topic;
    bool m_sns_topic_isSet;
    bool m_sns_topic_isValid;

    QString m_retrieval_byte_range;
    bool m_retrieval_byte_range_isSet;
    bool m_retrieval_byte_range_isValid;

    QString m_tier;
    bool m_tier_isSet;
    bool m_tier_isValid;

    OAIInitiateJob_request_jobParameters_InventoryRetrievalParameters m_inventory_retrieval_parameters;
    bool m_inventory_retrieval_parameters_isSet;
    bool m_inventory_retrieval_parameters_isValid;

    OAIInitiateJob_request_jobParameters_SelectParameters m_select_parameters;
    bool m_select_parameters_isSet;
    bool m_select_parameters_isValid;

    OAIInitiateJob_request_jobParameters_OutputLocation m_output_location;
    bool m_output_location_isSet;
    bool m_output_location_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJobParameters)

#endif // OAIJobParameters_H
