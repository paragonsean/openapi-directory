/**
 * Amazon Glacier
 * <p> Amazon S3 Glacier (Glacier) is a storage solution for \"cold data.\"</p> <p>Glacier is an extremely low-cost storage service that provides secure, durable, and easy-to-use storage for data backup and archival. With Glacier, customers can store their data cost effectively for months, years, or decades. Glacier also enables customers to offload the administrative burdens of operating and scaling storage to AWS, so they don't have to worry about capacity planning, hardware provisioning, data replication, hardware failure and recovery, or time-consuming hardware migrations.</p> <p>Glacier is a great storage choice when low storage cost is paramount and your data is rarely retrieved. If your application requires fast or frequent access to your data, consider using Amazon S3. For more information, see <a href=\"http://aws.amazon.com/s3/\">Amazon Simple Storage Service (Amazon S3)</a>.</p> <p>You can store any kind of data in any format. There is no maximum limit on the total amount of data you can store in Glacier.</p> <p>If you are a first-time user of Glacier, we recommend that you begin by reading the following sections in the <i>Amazon S3 Glacier Developer Guide</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/amazonglacier/latest/dev/introduction.html\">What is Amazon S3 Glacier</a> - This section of the Developer Guide describes the underlying data model, the operations it supports, and the AWS SDKs that you can use to interact with the service.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-getting-started.html\">Getting Started with Amazon S3 Glacier</a> - The Getting Started section walks you through the process of creating a vault, uploading archives, creating jobs to download archives, retrieving the job output, and deleting archives.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2012-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGlacierJobDescription.h
 *
 * Contains the description of an Amazon S3 Glacier job.
 */

#ifndef OAIGlacierJobDescription_H
#define OAIGlacierJobDescription_H

#include <QJsonObject>

#include "OAIActionCode.h"
#include "OAIGlacierJobDescription_InventoryRetrievalParameters.h"
#include "OAIGlacierJobDescription_OutputLocation.h"
#include "OAIGlacierJobDescription_SelectParameters.h"
#include "OAIStatusCode.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGlacierJobDescription_InventoryRetrievalParameters;
class OAIGlacierJobDescription_SelectParameters;
class OAIGlacierJobDescription_OutputLocation;

class OAIGlacierJobDescription : public OAIObject {
public:
    OAIGlacierJobDescription();
    OAIGlacierJobDescription(QString json);
    ~OAIGlacierJobDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getJobId() const;
    void setJobId(const QString &job_id);
    bool is_job_id_Set() const;
    bool is_job_id_Valid() const;

    QString getJobDescription() const;
    void setJobDescription(const QString &job_description);
    bool is_job_description_Set() const;
    bool is_job_description_Valid() const;

    OAIActionCode getAction() const;
    void setAction(const OAIActionCode &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QString getArchiveId() const;
    void setArchiveId(const QString &archive_id);
    bool is_archive_id_Set() const;
    bool is_archive_id_Valid() const;

    QString getVaultArn() const;
    void setVaultArn(const QString &vault_arn);
    bool is_vault_arn_Set() const;
    bool is_vault_arn_Valid() const;

    QString getCreationDate() const;
    void setCreationDate(const QString &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    bool getCompleted() const;
    void setCompleted(const bool &completed);
    bool is_completed_Set() const;
    bool is_completed_Valid() const;

    OAIStatusCode getStatusCode() const;
    void setStatusCode(const OAIStatusCode &status_code);
    bool is_status_code_Set() const;
    bool is_status_code_Valid() const;

    QString getStatusMessage() const;
    void setStatusMessage(const QString &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    qint32 getArchiveSizeInBytes() const;
    void setArchiveSizeInBytes(const qint32 &archive_size_in_bytes);
    bool is_archive_size_in_bytes_Set() const;
    bool is_archive_size_in_bytes_Valid() const;

    qint32 getInventorySizeInBytes() const;
    void setInventorySizeInBytes(const qint32 &inventory_size_in_bytes);
    bool is_inventory_size_in_bytes_Set() const;
    bool is_inventory_size_in_bytes_Valid() const;

    QString getSnsTopic() const;
    void setSnsTopic(const QString &sns_topic);
    bool is_sns_topic_Set() const;
    bool is_sns_topic_Valid() const;

    QString getCompletionDate() const;
    void setCompletionDate(const QString &completion_date);
    bool is_completion_date_Set() const;
    bool is_completion_date_Valid() const;

    QString getSha256TreeHash() const;
    void setSha256TreeHash(const QString &sha256_tree_hash);
    bool is_sha256_tree_hash_Set() const;
    bool is_sha256_tree_hash_Valid() const;

    QString getArchiveSha256TreeHash() const;
    void setArchiveSha256TreeHash(const QString &archive_sha256_tree_hash);
    bool is_archive_sha256_tree_hash_Set() const;
    bool is_archive_sha256_tree_hash_Valid() const;

    QString getRetrievalByteRange() const;
    void setRetrievalByteRange(const QString &retrieval_byte_range);
    bool is_retrieval_byte_range_Set() const;
    bool is_retrieval_byte_range_Valid() const;

    QString getTier() const;
    void setTier(const QString &tier);
    bool is_tier_Set() const;
    bool is_tier_Valid() const;

    OAIGlacierJobDescription_InventoryRetrievalParameters getInventoryRetrievalParameters() const;
    void setInventoryRetrievalParameters(const OAIGlacierJobDescription_InventoryRetrievalParameters &inventory_retrieval_parameters);
    bool is_inventory_retrieval_parameters_Set() const;
    bool is_inventory_retrieval_parameters_Valid() const;

    QString getJobOutputPath() const;
    void setJobOutputPath(const QString &job_output_path);
    bool is_job_output_path_Set() const;
    bool is_job_output_path_Valid() const;

    OAIGlacierJobDescription_SelectParameters getSelectParameters() const;
    void setSelectParameters(const OAIGlacierJobDescription_SelectParameters &select_parameters);
    bool is_select_parameters_Set() const;
    bool is_select_parameters_Valid() const;

    OAIGlacierJobDescription_OutputLocation getOutputLocation() const;
    void setOutputLocation(const OAIGlacierJobDescription_OutputLocation &output_location);
    bool is_output_location_Set() const;
    bool is_output_location_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_job_id;
    bool m_job_id_isSet;
    bool m_job_id_isValid;

    QString m_job_description;
    bool m_job_description_isSet;
    bool m_job_description_isValid;

    OAIActionCode m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QString m_archive_id;
    bool m_archive_id_isSet;
    bool m_archive_id_isValid;

    QString m_vault_arn;
    bool m_vault_arn_isSet;
    bool m_vault_arn_isValid;

    QString m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    bool m_completed;
    bool m_completed_isSet;
    bool m_completed_isValid;

    OAIStatusCode m_status_code;
    bool m_status_code_isSet;
    bool m_status_code_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;

    qint32 m_archive_size_in_bytes;
    bool m_archive_size_in_bytes_isSet;
    bool m_archive_size_in_bytes_isValid;

    qint32 m_inventory_size_in_bytes;
    bool m_inventory_size_in_bytes_isSet;
    bool m_inventory_size_in_bytes_isValid;

    QString m_sns_topic;
    bool m_sns_topic_isSet;
    bool m_sns_topic_isValid;

    QString m_completion_date;
    bool m_completion_date_isSet;
    bool m_completion_date_isValid;

    QString m_sha256_tree_hash;
    bool m_sha256_tree_hash_isSet;
    bool m_sha256_tree_hash_isValid;

    QString m_archive_sha256_tree_hash;
    bool m_archive_sha256_tree_hash_isSet;
    bool m_archive_sha256_tree_hash_isValid;

    QString m_retrieval_byte_range;
    bool m_retrieval_byte_range_isSet;
    bool m_retrieval_byte_range_isValid;

    QString m_tier;
    bool m_tier_isSet;
    bool m_tier_isValid;

    OAIGlacierJobDescription_InventoryRetrievalParameters m_inventory_retrieval_parameters;
    bool m_inventory_retrieval_parameters_isSet;
    bool m_inventory_retrieval_parameters_isValid;

    QString m_job_output_path;
    bool m_job_output_path_isSet;
    bool m_job_output_path_isValid;

    OAIGlacierJobDescription_SelectParameters m_select_parameters;
    bool m_select_parameters_isSet;
    bool m_select_parameters_isValid;

    OAIGlacierJobDescription_OutputLocation m_output_location;
    bool m_output_location_isSet;
    bool m_output_location_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGlacierJobDescription)

#endif // OAIGlacierJobDescription_H
