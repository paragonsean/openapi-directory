/**
 * Amazon Glacier
 * <p> Amazon S3 Glacier (Glacier) is a storage solution for \"cold data.\"</p> <p>Glacier is an extremely low-cost storage service that provides secure, durable, and easy-to-use storage for data backup and archival. With Glacier, customers can store their data cost effectively for months, years, or decades. Glacier also enables customers to offload the administrative burdens of operating and scaling storage to AWS, so they don't have to worry about capacity planning, hardware provisioning, data replication, hardware failure and recovery, or time-consuming hardware migrations.</p> <p>Glacier is a great storage choice when low storage cost is paramount and your data is rarely retrieved. If your application requires fast or frequent access to your data, consider using Amazon S3. For more information, see <a href=\"http://aws.amazon.com/s3/\">Amazon Simple Storage Service (Amazon S3)</a>.</p> <p>You can store any kind of data in any format. There is no maximum limit on the total amount of data you can store in Glacier.</p> <p>If you are a first-time user of Glacier, we recommend that you begin by reading the following sections in the <i>Amazon S3 Glacier Developer Guide</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/amazonglacier/latest/dev/introduction.html\">What is Amazon S3 Glacier</a> - This section of the Developer Guide describes the underlying data model, the operations it supports, and the AWS SDKs that you can use to interact with the service.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-getting-started.html\">Getting Started with Amazon S3 Glacier</a> - The Getting Started section walks you through the process of creating a vault, uploading archives, creating jobs to download archives, retrieving the job output, and deleting archives.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2012-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOutputSerialization_csv.h
 *
 * 
 */

#ifndef OAIOutputSerialization_csv_H
#define OAIOutputSerialization_csv_H

#include <QJsonObject>

#include "OAIQuoteFields.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOutputSerialization_csv : public OAIObject {
public:
    OAIOutputSerialization_csv();
    OAIOutputSerialization_csv(QString json);
    ~OAIOutputSerialization_csv() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIQuoteFields getQuoteFields() const;
    void setQuoteFields(const OAIQuoteFields &quote_fields);
    bool is_quote_fields_Set() const;
    bool is_quote_fields_Valid() const;

    QString getQuoteEscapeCharacter() const;
    void setQuoteEscapeCharacter(const QString &quote_escape_character);
    bool is_quote_escape_character_Set() const;
    bool is_quote_escape_character_Valid() const;

    QString getRecordDelimiter() const;
    void setRecordDelimiter(const QString &record_delimiter);
    bool is_record_delimiter_Set() const;
    bool is_record_delimiter_Valid() const;

    QString getFieldDelimiter() const;
    void setFieldDelimiter(const QString &field_delimiter);
    bool is_field_delimiter_Set() const;
    bool is_field_delimiter_Valid() const;

    QString getQuoteCharacter() const;
    void setQuoteCharacter(const QString &quote_character);
    bool is_quote_character_Set() const;
    bool is_quote_character_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIQuoteFields m_quote_fields;
    bool m_quote_fields_isSet;
    bool m_quote_fields_isValid;

    QString m_quote_escape_character;
    bool m_quote_escape_character_isSet;
    bool m_quote_escape_character_isValid;

    QString m_record_delimiter;
    bool m_record_delimiter_isSet;
    bool m_record_delimiter_isValid;

    QString m_field_delimiter;
    bool m_field_delimiter_isSet;
    bool m_field_delimiter_isValid;

    QString m_quote_character;
    bool m_quote_character_isSet;
    bool m_quote_character_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOutputSerialization_csv)

#endif // OAIOutputSerialization_csv_H
