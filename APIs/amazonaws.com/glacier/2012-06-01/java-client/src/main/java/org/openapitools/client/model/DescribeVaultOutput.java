/*
 * Amazon Glacier
 * <p> Amazon S3 Glacier (Glacier) is a storage solution for \"cold data.\"</p> <p>Glacier is an extremely low-cost storage service that provides secure, durable, and easy-to-use storage for data backup and archival. With Glacier, customers can store their data cost effectively for months, years, or decades. Glacier also enables customers to offload the administrative burdens of operating and scaling storage to AWS, so they don't have to worry about capacity planning, hardware provisioning, data replication, hardware failure and recovery, or time-consuming hardware migrations.</p> <p>Glacier is a great storage choice when low storage cost is paramount and your data is rarely retrieved. If your application requires fast or frequent access to your data, consider using Amazon S3. For more information, see <a href=\"http://aws.amazon.com/s3/\">Amazon Simple Storage Service (Amazon S3)</a>.</p> <p>You can store any kind of data in any format. There is no maximum limit on the total amount of data you can store in Glacier.</p> <p>If you are a first-time user of Glacier, we recommend that you begin by reading the following sections in the <i>Amazon S3 Glacier Developer Guide</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/amazonglacier/latest/dev/introduction.html\">What is Amazon S3 Glacier</a> - This section of the Developer Guide describes the underlying data model, the operations it supports, and the AWS SDKs that you can use to interact with the service.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-getting-started.html\">Getting Started with Amazon S3 Glacier</a> - The Getting Started section walks you through the process of creating a vault, uploading archives, creating jobs to download archives, retrieving the job output, and deleting archives.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2012-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains the Amazon S3 Glacier response to your request.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:14.721106-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeVaultOutput {
  public static final String SERIALIZED_NAME_VAULT_A_R_N = "VaultARN";
  @SerializedName(SERIALIZED_NAME_VAULT_A_R_N)
  private String vaultARN;

  public static final String SERIALIZED_NAME_VAULT_NAME = "VaultName";
  @SerializedName(SERIALIZED_NAME_VAULT_NAME)
  private String vaultName;

  public static final String SERIALIZED_NAME_CREATION_DATE = "CreationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private String creationDate;

  public static final String SERIALIZED_NAME_LAST_INVENTORY_DATE = "LastInventoryDate";
  @SerializedName(SERIALIZED_NAME_LAST_INVENTORY_DATE)
  private String lastInventoryDate;

  public static final String SERIALIZED_NAME_NUMBER_OF_ARCHIVES = "NumberOfArchives";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_ARCHIVES)
  private Integer numberOfArchives;

  public static final String SERIALIZED_NAME_SIZE_IN_BYTES = "SizeInBytes";
  @SerializedName(SERIALIZED_NAME_SIZE_IN_BYTES)
  private Integer sizeInBytes;

  public DescribeVaultOutput() {
  }

  public DescribeVaultOutput vaultARN(String vaultARN) {
    this.vaultARN = vaultARN;
    return this;
  }

  /**
   * Get vaultARN
   * @return vaultARN
   */
  @javax.annotation.Nullable
  public String getVaultARN() {
    return vaultARN;
  }

  public void setVaultARN(String vaultARN) {
    this.vaultARN = vaultARN;
  }


  public DescribeVaultOutput vaultName(String vaultName) {
    this.vaultName = vaultName;
    return this;
  }

  /**
   * Get vaultName
   * @return vaultName
   */
  @javax.annotation.Nullable
  public String getVaultName() {
    return vaultName;
  }

  public void setVaultName(String vaultName) {
    this.vaultName = vaultName;
  }


  public DescribeVaultOutput creationDate(String creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public String getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(String creationDate) {
    this.creationDate = creationDate;
  }


  public DescribeVaultOutput lastInventoryDate(String lastInventoryDate) {
    this.lastInventoryDate = lastInventoryDate;
    return this;
  }

  /**
   * Get lastInventoryDate
   * @return lastInventoryDate
   */
  @javax.annotation.Nullable
  public String getLastInventoryDate() {
    return lastInventoryDate;
  }

  public void setLastInventoryDate(String lastInventoryDate) {
    this.lastInventoryDate = lastInventoryDate;
  }


  public DescribeVaultOutput numberOfArchives(Integer numberOfArchives) {
    this.numberOfArchives = numberOfArchives;
    return this;
  }

  /**
   * Get numberOfArchives
   * @return numberOfArchives
   */
  @javax.annotation.Nullable
  public Integer getNumberOfArchives() {
    return numberOfArchives;
  }

  public void setNumberOfArchives(Integer numberOfArchives) {
    this.numberOfArchives = numberOfArchives;
  }


  public DescribeVaultOutput sizeInBytes(Integer sizeInBytes) {
    this.sizeInBytes = sizeInBytes;
    return this;
  }

  /**
   * Get sizeInBytes
   * @return sizeInBytes
   */
  @javax.annotation.Nullable
  public Integer getSizeInBytes() {
    return sizeInBytes;
  }

  public void setSizeInBytes(Integer sizeInBytes) {
    this.sizeInBytes = sizeInBytes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeVaultOutput describeVaultOutput = (DescribeVaultOutput) o;
    return Objects.equals(this.vaultARN, describeVaultOutput.vaultARN) &&
        Objects.equals(this.vaultName, describeVaultOutput.vaultName) &&
        Objects.equals(this.creationDate, describeVaultOutput.creationDate) &&
        Objects.equals(this.lastInventoryDate, describeVaultOutput.lastInventoryDate) &&
        Objects.equals(this.numberOfArchives, describeVaultOutput.numberOfArchives) &&
        Objects.equals(this.sizeInBytes, describeVaultOutput.sizeInBytes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vaultARN, vaultName, creationDate, lastInventoryDate, numberOfArchives, sizeInBytes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeVaultOutput {\n");
    sb.append("    vaultARN: ").append(toIndentedString(vaultARN)).append("\n");
    sb.append("    vaultName: ").append(toIndentedString(vaultName)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    lastInventoryDate: ").append(toIndentedString(lastInventoryDate)).append("\n");
    sb.append("    numberOfArchives: ").append(toIndentedString(numberOfArchives)).append("\n");
    sb.append("    sizeInBytes: ").append(toIndentedString(sizeInBytes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("VaultARN");
    openapiFields.add("VaultName");
    openapiFields.add("CreationDate");
    openapiFields.add("LastInventoryDate");
    openapiFields.add("NumberOfArchives");
    openapiFields.add("SizeInBytes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeVaultOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeVaultOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeVaultOutput is not found in the empty JSON string", DescribeVaultOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeVaultOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeVaultOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `VaultARN`
      if (jsonObj.get("VaultARN") != null && !jsonObj.get("VaultARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VaultARN"));
      }
      // validate the optional field `VaultName`
      if (jsonObj.get("VaultName") != null && !jsonObj.get("VaultName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VaultName"));
      }
      // validate the optional field `CreationDate`
      if (jsonObj.get("CreationDate") != null && !jsonObj.get("CreationDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CreationDate"));
      }
      // validate the optional field `LastInventoryDate`
      if (jsonObj.get("LastInventoryDate") != null && !jsonObj.get("LastInventoryDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastInventoryDate"));
      }
      // validate the optional field `NumberOfArchives`
      if (jsonObj.get("NumberOfArchives") != null && !jsonObj.get("NumberOfArchives").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumberOfArchives"));
      }
      // validate the optional field `SizeInBytes`
      if (jsonObj.get("SizeInBytes") != null && !jsonObj.get("SizeInBytes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SizeInBytes"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeVaultOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeVaultOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeVaultOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeVaultOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeVaultOutput>() {
           @Override
           public void write(JsonWriter out, DescribeVaultOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeVaultOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeVaultOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeVaultOutput
   * @throws IOException if the JSON string is invalid with respect to DescribeVaultOutput
   */
  public static DescribeVaultOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeVaultOutput.class);
  }

  /**
   * Convert an instance of DescribeVaultOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

