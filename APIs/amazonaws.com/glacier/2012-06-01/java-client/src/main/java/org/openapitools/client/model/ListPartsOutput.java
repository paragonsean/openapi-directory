/*
 * Amazon Glacier
 * <p> Amazon S3 Glacier (Glacier) is a storage solution for \"cold data.\"</p> <p>Glacier is an extremely low-cost storage service that provides secure, durable, and easy-to-use storage for data backup and archival. With Glacier, customers can store their data cost effectively for months, years, or decades. Glacier also enables customers to offload the administrative burdens of operating and scaling storage to AWS, so they don't have to worry about capacity planning, hardware provisioning, data replication, hardware failure and recovery, or time-consuming hardware migrations.</p> <p>Glacier is a great storage choice when low storage cost is paramount and your data is rarely retrieved. If your application requires fast or frequent access to your data, consider using Amazon S3. For more information, see <a href=\"http://aws.amazon.com/s3/\">Amazon Simple Storage Service (Amazon S3)</a>.</p> <p>You can store any kind of data in any format. There is no maximum limit on the total amount of data you can store in Glacier.</p> <p>If you are a first-time user of Glacier, we recommend that you begin by reading the following sections in the <i>Amazon S3 Glacier Developer Guide</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/amazonglacier/latest/dev/introduction.html\">What is Amazon S3 Glacier</a> - This section of the Developer Guide describes the underlying data model, the operations it supports, and the AWS SDKs that you can use to interact with the service.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-getting-started.html\">Getting Started with Amazon S3 Glacier</a> - The Getting Started section walks you through the process of creating a vault, uploading archives, creating jobs to download archives, retrieving the job output, and deleting archives.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2012-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains the Amazon S3 Glacier response to your request.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:14.721106-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListPartsOutput {
  public static final String SERIALIZED_NAME_MULTIPART_UPLOAD_ID = "MultipartUploadId";
  @SerializedName(SERIALIZED_NAME_MULTIPART_UPLOAD_ID)
  private String multipartUploadId;

  public static final String SERIALIZED_NAME_VAULT_A_R_N = "VaultARN";
  @SerializedName(SERIALIZED_NAME_VAULT_A_R_N)
  private String vaultARN;

  public static final String SERIALIZED_NAME_ARCHIVE_DESCRIPTION = "ArchiveDescription";
  @SerializedName(SERIALIZED_NAME_ARCHIVE_DESCRIPTION)
  private String archiveDescription;

  public static final String SERIALIZED_NAME_PART_SIZE_IN_BYTES = "PartSizeInBytes";
  @SerializedName(SERIALIZED_NAME_PART_SIZE_IN_BYTES)
  private Integer partSizeInBytes;

  public static final String SERIALIZED_NAME_CREATION_DATE = "CreationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private String creationDate;

  public static final String SERIALIZED_NAME_PARTS = "Parts";
  @SerializedName(SERIALIZED_NAME_PARTS)
  private List parts;

  public static final String SERIALIZED_NAME_MARKER = "Marker";
  @SerializedName(SERIALIZED_NAME_MARKER)
  private String marker;

  public ListPartsOutput() {
  }

  public ListPartsOutput multipartUploadId(String multipartUploadId) {
    this.multipartUploadId = multipartUploadId;
    return this;
  }

  /**
   * Get multipartUploadId
   * @return multipartUploadId
   */
  @javax.annotation.Nullable
  public String getMultipartUploadId() {
    return multipartUploadId;
  }

  public void setMultipartUploadId(String multipartUploadId) {
    this.multipartUploadId = multipartUploadId;
  }


  public ListPartsOutput vaultARN(String vaultARN) {
    this.vaultARN = vaultARN;
    return this;
  }

  /**
   * Get vaultARN
   * @return vaultARN
   */
  @javax.annotation.Nullable
  public String getVaultARN() {
    return vaultARN;
  }

  public void setVaultARN(String vaultARN) {
    this.vaultARN = vaultARN;
  }


  public ListPartsOutput archiveDescription(String archiveDescription) {
    this.archiveDescription = archiveDescription;
    return this;
  }

  /**
   * Get archiveDescription
   * @return archiveDescription
   */
  @javax.annotation.Nullable
  public String getArchiveDescription() {
    return archiveDescription;
  }

  public void setArchiveDescription(String archiveDescription) {
    this.archiveDescription = archiveDescription;
  }


  public ListPartsOutput partSizeInBytes(Integer partSizeInBytes) {
    this.partSizeInBytes = partSizeInBytes;
    return this;
  }

  /**
   * Get partSizeInBytes
   * @return partSizeInBytes
   */
  @javax.annotation.Nullable
  public Integer getPartSizeInBytes() {
    return partSizeInBytes;
  }

  public void setPartSizeInBytes(Integer partSizeInBytes) {
    this.partSizeInBytes = partSizeInBytes;
  }


  public ListPartsOutput creationDate(String creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public String getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(String creationDate) {
    this.creationDate = creationDate;
  }


  public ListPartsOutput parts(List parts) {
    this.parts = parts;
    return this;
  }

  /**
   * Get parts
   * @return parts
   */
  @javax.annotation.Nullable
  public List getParts() {
    return parts;
  }

  public void setParts(List parts) {
    this.parts = parts;
  }


  public ListPartsOutput marker(String marker) {
    this.marker = marker;
    return this;
  }

  /**
   * Get marker
   * @return marker
   */
  @javax.annotation.Nullable
  public String getMarker() {
    return marker;
  }

  public void setMarker(String marker) {
    this.marker = marker;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListPartsOutput listPartsOutput = (ListPartsOutput) o;
    return Objects.equals(this.multipartUploadId, listPartsOutput.multipartUploadId) &&
        Objects.equals(this.vaultARN, listPartsOutput.vaultARN) &&
        Objects.equals(this.archiveDescription, listPartsOutput.archiveDescription) &&
        Objects.equals(this.partSizeInBytes, listPartsOutput.partSizeInBytes) &&
        Objects.equals(this.creationDate, listPartsOutput.creationDate) &&
        Objects.equals(this.parts, listPartsOutput.parts) &&
        Objects.equals(this.marker, listPartsOutput.marker);
  }

  @Override
  public int hashCode() {
    return Objects.hash(multipartUploadId, vaultARN, archiveDescription, partSizeInBytes, creationDate, parts, marker);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListPartsOutput {\n");
    sb.append("    multipartUploadId: ").append(toIndentedString(multipartUploadId)).append("\n");
    sb.append("    vaultARN: ").append(toIndentedString(vaultARN)).append("\n");
    sb.append("    archiveDescription: ").append(toIndentedString(archiveDescription)).append("\n");
    sb.append("    partSizeInBytes: ").append(toIndentedString(partSizeInBytes)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    parts: ").append(toIndentedString(parts)).append("\n");
    sb.append("    marker: ").append(toIndentedString(marker)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MultipartUploadId");
    openapiFields.add("VaultARN");
    openapiFields.add("ArchiveDescription");
    openapiFields.add("PartSizeInBytes");
    openapiFields.add("CreationDate");
    openapiFields.add("Parts");
    openapiFields.add("Marker");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListPartsOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListPartsOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListPartsOutput is not found in the empty JSON string", ListPartsOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListPartsOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListPartsOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `MultipartUploadId`
      if (jsonObj.get("MultipartUploadId") != null && !jsonObj.get("MultipartUploadId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MultipartUploadId"));
      }
      // validate the optional field `VaultARN`
      if (jsonObj.get("VaultARN") != null && !jsonObj.get("VaultARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VaultARN"));
      }
      // validate the optional field `ArchiveDescription`
      if (jsonObj.get("ArchiveDescription") != null && !jsonObj.get("ArchiveDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ArchiveDescription"));
      }
      // validate the optional field `PartSizeInBytes`
      if (jsonObj.get("PartSizeInBytes") != null && !jsonObj.get("PartSizeInBytes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PartSizeInBytes"));
      }
      // validate the optional field `CreationDate`
      if (jsonObj.get("CreationDate") != null && !jsonObj.get("CreationDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CreationDate"));
      }
      // validate the optional field `Parts`
      if (jsonObj.get("Parts") != null && !jsonObj.get("Parts").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Parts"));
      }
      // validate the optional field `Marker`
      if (jsonObj.get("Marker") != null && !jsonObj.get("Marker").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Marker"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListPartsOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListPartsOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListPartsOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListPartsOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<ListPartsOutput>() {
           @Override
           public void write(JsonWriter out, ListPartsOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListPartsOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListPartsOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListPartsOutput
   * @throws IOException if the JSON string is invalid with respect to ListPartsOutput
   */
  public static ListPartsOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListPartsOutput.class);
  }

  /**
   * Convert an instance of ListPartsOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

