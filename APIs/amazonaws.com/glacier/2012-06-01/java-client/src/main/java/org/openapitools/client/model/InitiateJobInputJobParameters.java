/*
 * Amazon Glacier
 * <p> Amazon S3 Glacier (Glacier) is a storage solution for \"cold data.\"</p> <p>Glacier is an extremely low-cost storage service that provides secure, durable, and easy-to-use storage for data backup and archival. With Glacier, customers can store their data cost effectively for months, years, or decades. Glacier also enables customers to offload the administrative burdens of operating and scaling storage to AWS, so they don't have to worry about capacity planning, hardware provisioning, data replication, hardware failure and recovery, or time-consuming hardware migrations.</p> <p>Glacier is a great storage choice when low storage cost is paramount and your data is rarely retrieved. If your application requires fast or frequent access to your data, consider using Amazon S3. For more information, see <a href=\"http://aws.amazon.com/s3/\">Amazon Simple Storage Service (Amazon S3)</a>.</p> <p>You can store any kind of data in any format. There is no maximum limit on the total amount of data you can store in Glacier.</p> <p>If you are a first-time user of Glacier, we recommend that you begin by reading the following sections in the <i>Amazon S3 Glacier Developer Guide</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/amazonglacier/latest/dev/introduction.html\">What is Amazon S3 Glacier</a> - This section of the Developer Guide describes the underlying data model, the operations it supports, and the AWS SDKs that you can use to interact with the service.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-getting-started.html\">Getting Started with Amazon S3 Glacier</a> - The Getting Started section walks you through the process of creating a vault, uploading archives, creating jobs to download archives, retrieving the job output, and deleting archives.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2012-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.InitiateJobRequestJobParametersInventoryRetrievalParameters;
import org.openapitools.client.model.InitiateJobRequestJobParametersOutputLocation;
import org.openapitools.client.model.InitiateJobRequestJobParametersSelectParameters;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * InitiateJobInputJobParameters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:14.721106-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InitiateJobInputJobParameters {
  public static final String SERIALIZED_NAME_FORMAT = "Format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private String format;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_ARCHIVE_ID = "ArchiveId";
  @SerializedName(SERIALIZED_NAME_ARCHIVE_ID)
  private String archiveId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SN_S_TOPIC = "SNSTopic";
  @SerializedName(SERIALIZED_NAME_SN_S_TOPIC)
  private String snSTopic;

  public static final String SERIALIZED_NAME_RETRIEVAL_BYTE_RANGE = "RetrievalByteRange";
  @SerializedName(SERIALIZED_NAME_RETRIEVAL_BYTE_RANGE)
  private String retrievalByteRange;

  public static final String SERIALIZED_NAME_TIER = "Tier";
  @SerializedName(SERIALIZED_NAME_TIER)
  private String tier;

  public static final String SERIALIZED_NAME_INVENTORY_RETRIEVAL_PARAMETERS = "InventoryRetrievalParameters";
  @SerializedName(SERIALIZED_NAME_INVENTORY_RETRIEVAL_PARAMETERS)
  private InitiateJobRequestJobParametersInventoryRetrievalParameters inventoryRetrievalParameters;

  public static final String SERIALIZED_NAME_SELECT_PARAMETERS = "SelectParameters";
  @SerializedName(SERIALIZED_NAME_SELECT_PARAMETERS)
  private InitiateJobRequestJobParametersSelectParameters selectParameters;

  public static final String SERIALIZED_NAME_OUTPUT_LOCATION = "OutputLocation";
  @SerializedName(SERIALIZED_NAME_OUTPUT_LOCATION)
  private InitiateJobRequestJobParametersOutputLocation outputLocation;

  public InitiateJobInputJobParameters() {
  }

  public InitiateJobInputJobParameters format(String format) {
    this.format = format;
    return this;
  }

  /**
   * Get format
   * @return format
   */
  @javax.annotation.Nullable
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }


  public InitiateJobInputJobParameters type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public InitiateJobInputJobParameters archiveId(String archiveId) {
    this.archiveId = archiveId;
    return this;
  }

  /**
   * Get archiveId
   * @return archiveId
   */
  @javax.annotation.Nullable
  public String getArchiveId() {
    return archiveId;
  }

  public void setArchiveId(String archiveId) {
    this.archiveId = archiveId;
  }


  public InitiateJobInputJobParameters description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public InitiateJobInputJobParameters snSTopic(String snSTopic) {
    this.snSTopic = snSTopic;
    return this;
  }

  /**
   * Get snSTopic
   * @return snSTopic
   */
  @javax.annotation.Nullable
  public String getSnSTopic() {
    return snSTopic;
  }

  public void setSnSTopic(String snSTopic) {
    this.snSTopic = snSTopic;
  }


  public InitiateJobInputJobParameters retrievalByteRange(String retrievalByteRange) {
    this.retrievalByteRange = retrievalByteRange;
    return this;
  }

  /**
   * Get retrievalByteRange
   * @return retrievalByteRange
   */
  @javax.annotation.Nullable
  public String getRetrievalByteRange() {
    return retrievalByteRange;
  }

  public void setRetrievalByteRange(String retrievalByteRange) {
    this.retrievalByteRange = retrievalByteRange;
  }


  public InitiateJobInputJobParameters tier(String tier) {
    this.tier = tier;
    return this;
  }

  /**
   * Get tier
   * @return tier
   */
  @javax.annotation.Nullable
  public String getTier() {
    return tier;
  }

  public void setTier(String tier) {
    this.tier = tier;
  }


  public InitiateJobInputJobParameters inventoryRetrievalParameters(InitiateJobRequestJobParametersInventoryRetrievalParameters inventoryRetrievalParameters) {
    this.inventoryRetrievalParameters = inventoryRetrievalParameters;
    return this;
  }

  /**
   * Get inventoryRetrievalParameters
   * @return inventoryRetrievalParameters
   */
  @javax.annotation.Nullable
  public InitiateJobRequestJobParametersInventoryRetrievalParameters getInventoryRetrievalParameters() {
    return inventoryRetrievalParameters;
  }

  public void setInventoryRetrievalParameters(InitiateJobRequestJobParametersInventoryRetrievalParameters inventoryRetrievalParameters) {
    this.inventoryRetrievalParameters = inventoryRetrievalParameters;
  }


  public InitiateJobInputJobParameters selectParameters(InitiateJobRequestJobParametersSelectParameters selectParameters) {
    this.selectParameters = selectParameters;
    return this;
  }

  /**
   * Get selectParameters
   * @return selectParameters
   */
  @javax.annotation.Nullable
  public InitiateJobRequestJobParametersSelectParameters getSelectParameters() {
    return selectParameters;
  }

  public void setSelectParameters(InitiateJobRequestJobParametersSelectParameters selectParameters) {
    this.selectParameters = selectParameters;
  }


  public InitiateJobInputJobParameters outputLocation(InitiateJobRequestJobParametersOutputLocation outputLocation) {
    this.outputLocation = outputLocation;
    return this;
  }

  /**
   * Get outputLocation
   * @return outputLocation
   */
  @javax.annotation.Nullable
  public InitiateJobRequestJobParametersOutputLocation getOutputLocation() {
    return outputLocation;
  }

  public void setOutputLocation(InitiateJobRequestJobParametersOutputLocation outputLocation) {
    this.outputLocation = outputLocation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InitiateJobInputJobParameters initiateJobInputJobParameters = (InitiateJobInputJobParameters) o;
    return Objects.equals(this.format, initiateJobInputJobParameters.format) &&
        Objects.equals(this.type, initiateJobInputJobParameters.type) &&
        Objects.equals(this.archiveId, initiateJobInputJobParameters.archiveId) &&
        Objects.equals(this.description, initiateJobInputJobParameters.description) &&
        Objects.equals(this.snSTopic, initiateJobInputJobParameters.snSTopic) &&
        Objects.equals(this.retrievalByteRange, initiateJobInputJobParameters.retrievalByteRange) &&
        Objects.equals(this.tier, initiateJobInputJobParameters.tier) &&
        Objects.equals(this.inventoryRetrievalParameters, initiateJobInputJobParameters.inventoryRetrievalParameters) &&
        Objects.equals(this.selectParameters, initiateJobInputJobParameters.selectParameters) &&
        Objects.equals(this.outputLocation, initiateJobInputJobParameters.outputLocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(format, type, archiveId, description, snSTopic, retrievalByteRange, tier, inventoryRetrievalParameters, selectParameters, outputLocation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InitiateJobInputJobParameters {\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    archiveId: ").append(toIndentedString(archiveId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    snSTopic: ").append(toIndentedString(snSTopic)).append("\n");
    sb.append("    retrievalByteRange: ").append(toIndentedString(retrievalByteRange)).append("\n");
    sb.append("    tier: ").append(toIndentedString(tier)).append("\n");
    sb.append("    inventoryRetrievalParameters: ").append(toIndentedString(inventoryRetrievalParameters)).append("\n");
    sb.append("    selectParameters: ").append(toIndentedString(selectParameters)).append("\n");
    sb.append("    outputLocation: ").append(toIndentedString(outputLocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Format");
    openapiFields.add("Type");
    openapiFields.add("ArchiveId");
    openapiFields.add("Description");
    openapiFields.add("SNSTopic");
    openapiFields.add("RetrievalByteRange");
    openapiFields.add("Tier");
    openapiFields.add("InventoryRetrievalParameters");
    openapiFields.add("SelectParameters");
    openapiFields.add("OutputLocation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InitiateJobInputJobParameters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InitiateJobInputJobParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InitiateJobInputJobParameters is not found in the empty JSON string", InitiateJobInputJobParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InitiateJobInputJobParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InitiateJobInputJobParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Format`
      if (jsonObj.get("Format") != null && !jsonObj.get("Format").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Format"));
      }
      // validate the optional field `Type`
      if (jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Type"));
      }
      // validate the optional field `ArchiveId`
      if (jsonObj.get("ArchiveId") != null && !jsonObj.get("ArchiveId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ArchiveId"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `SNSTopic`
      if (jsonObj.get("SNSTopic") != null && !jsonObj.get("SNSTopic").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SNSTopic"));
      }
      // validate the optional field `RetrievalByteRange`
      if (jsonObj.get("RetrievalByteRange") != null && !jsonObj.get("RetrievalByteRange").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RetrievalByteRange"));
      }
      // validate the optional field `Tier`
      if (jsonObj.get("Tier") != null && !jsonObj.get("Tier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Tier"));
      }
      // validate the optional field `InventoryRetrievalParameters`
      if (jsonObj.get("InventoryRetrievalParameters") != null && !jsonObj.get("InventoryRetrievalParameters").isJsonNull()) {
        InitiateJobRequestJobParametersInventoryRetrievalParameters.validateJsonElement(jsonObj.get("InventoryRetrievalParameters"));
      }
      // validate the optional field `SelectParameters`
      if (jsonObj.get("SelectParameters") != null && !jsonObj.get("SelectParameters").isJsonNull()) {
        InitiateJobRequestJobParametersSelectParameters.validateJsonElement(jsonObj.get("SelectParameters"));
      }
      // validate the optional field `OutputLocation`
      if (jsonObj.get("OutputLocation") != null && !jsonObj.get("OutputLocation").isJsonNull()) {
        InitiateJobRequestJobParametersOutputLocation.validateJsonElement(jsonObj.get("OutputLocation"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InitiateJobInputJobParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InitiateJobInputJobParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InitiateJobInputJobParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InitiateJobInputJobParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<InitiateJobInputJobParameters>() {
           @Override
           public void write(JsonWriter out, InitiateJobInputJobParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InitiateJobInputJobParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InitiateJobInputJobParameters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InitiateJobInputJobParameters
   * @throws IOException if the JSON string is invalid with respect to InitiateJobInputJobParameters
   */
  public static InitiateJobInputJobParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InitiateJobInputJobParameters.class);
  }

  /**
   * Convert an instance of InitiateJobInputJobParameters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

