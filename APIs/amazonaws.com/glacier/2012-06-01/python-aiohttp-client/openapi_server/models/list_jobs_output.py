# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListJobsOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_list: List=None, marker: str=None):
        """ListJobsOutput - a model defined in OpenAPI

        :param job_list: The job_list of this ListJobsOutput.
        :param marker: The marker of this ListJobsOutput.
        """
        self.openapi_types = {
            'job_list': List,
            'marker': str
        }

        self.attribute_map = {
            'job_list': 'JobList',
            'marker': 'Marker'
        }

        self._job_list = job_list
        self._marker = marker

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListJobsOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListJobsOutput of this ListJobsOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_list(self):
        """Gets the job_list of this ListJobsOutput.


        :return: The job_list of this ListJobsOutput.
        :rtype: List
        """
        return self._job_list

    @job_list.setter
    def job_list(self, job_list):
        """Sets the job_list of this ListJobsOutput.


        :param job_list: The job_list of this ListJobsOutput.
        :type job_list: List
        """

        self._job_list = job_list

    @property
    def marker(self):
        """Gets the marker of this ListJobsOutput.


        :return: The marker of this ListJobsOutput.
        :rtype: str
        """
        return self._marker

    @marker.setter
    def marker(self, marker):
        """Sets the marker of this ListJobsOutput.


        :param marker: The marker of this ListJobsOutput.
        :type marker: str
        """

        self._marker = marker
