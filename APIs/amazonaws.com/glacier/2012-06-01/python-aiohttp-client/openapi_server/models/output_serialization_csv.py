# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.quote_fields import QuoteFields
from openapi_server import util


class OutputSerializationCsv(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, quote_fields: QuoteFields=None, quote_escape_character: str=None, record_delimiter: str=None, field_delimiter: str=None, quote_character: str=None):
        """OutputSerializationCsv - a model defined in OpenAPI

        :param quote_fields: The quote_fields of this OutputSerializationCsv.
        :param quote_escape_character: The quote_escape_character of this OutputSerializationCsv.
        :param record_delimiter: The record_delimiter of this OutputSerializationCsv.
        :param field_delimiter: The field_delimiter of this OutputSerializationCsv.
        :param quote_character: The quote_character of this OutputSerializationCsv.
        """
        self.openapi_types = {
            'quote_fields': QuoteFields,
            'quote_escape_character': str,
            'record_delimiter': str,
            'field_delimiter': str,
            'quote_character': str
        }

        self.attribute_map = {
            'quote_fields': 'QuoteFields',
            'quote_escape_character': 'QuoteEscapeCharacter',
            'record_delimiter': 'RecordDelimiter',
            'field_delimiter': 'FieldDelimiter',
            'quote_character': 'QuoteCharacter'
        }

        self._quote_fields = quote_fields
        self._quote_escape_character = quote_escape_character
        self._record_delimiter = record_delimiter
        self._field_delimiter = field_delimiter
        self._quote_character = quote_character

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OutputSerializationCsv':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OutputSerialization_csv of this OutputSerializationCsv.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def quote_fields(self):
        """Gets the quote_fields of this OutputSerializationCsv.


        :return: The quote_fields of this OutputSerializationCsv.
        :rtype: QuoteFields
        """
        return self._quote_fields

    @quote_fields.setter
    def quote_fields(self, quote_fields):
        """Sets the quote_fields of this OutputSerializationCsv.


        :param quote_fields: The quote_fields of this OutputSerializationCsv.
        :type quote_fields: QuoteFields
        """

        self._quote_fields = quote_fields

    @property
    def quote_escape_character(self):
        """Gets the quote_escape_character of this OutputSerializationCsv.


        :return: The quote_escape_character of this OutputSerializationCsv.
        :rtype: str
        """
        return self._quote_escape_character

    @quote_escape_character.setter
    def quote_escape_character(self, quote_escape_character):
        """Sets the quote_escape_character of this OutputSerializationCsv.


        :param quote_escape_character: The quote_escape_character of this OutputSerializationCsv.
        :type quote_escape_character: str
        """

        self._quote_escape_character = quote_escape_character

    @property
    def record_delimiter(self):
        """Gets the record_delimiter of this OutputSerializationCsv.


        :return: The record_delimiter of this OutputSerializationCsv.
        :rtype: str
        """
        return self._record_delimiter

    @record_delimiter.setter
    def record_delimiter(self, record_delimiter):
        """Sets the record_delimiter of this OutputSerializationCsv.


        :param record_delimiter: The record_delimiter of this OutputSerializationCsv.
        :type record_delimiter: str
        """

        self._record_delimiter = record_delimiter

    @property
    def field_delimiter(self):
        """Gets the field_delimiter of this OutputSerializationCsv.


        :return: The field_delimiter of this OutputSerializationCsv.
        :rtype: str
        """
        return self._field_delimiter

    @field_delimiter.setter
    def field_delimiter(self, field_delimiter):
        """Sets the field_delimiter of this OutputSerializationCsv.


        :param field_delimiter: The field_delimiter of this OutputSerializationCsv.
        :type field_delimiter: str
        """

        self._field_delimiter = field_delimiter

    @property
    def quote_character(self):
        """Gets the quote_character of this OutputSerializationCsv.


        :return: The quote_character of this OutputSerializationCsv.
        :rtype: str
        """
        return self._quote_character

    @quote_character.setter
    def quote_character(self, quote_character):
        """Sets the quote_character of this OutputSerializationCsv.


        :param quote_character: The quote_character of this OutputSerializationCsv.
        :type quote_character: str
        """

        self._quote_character = quote_character
