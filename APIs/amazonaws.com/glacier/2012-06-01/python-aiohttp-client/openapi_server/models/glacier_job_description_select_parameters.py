# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.expression_type import ExpressionType
from openapi_server.models.select_parameters_input_serialization import SelectParametersInputSerialization
from openapi_server.models.select_parameters_output_serialization import SelectParametersOutputSerialization
from openapi_server import util


class GlacierJobDescriptionSelectParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, input_serialization: SelectParametersInputSerialization=None, expression_type: ExpressionType=None, expression: str=None, output_serialization: SelectParametersOutputSerialization=None):
        """GlacierJobDescriptionSelectParameters - a model defined in OpenAPI

        :param input_serialization: The input_serialization of this GlacierJobDescriptionSelectParameters.
        :param expression_type: The expression_type of this GlacierJobDescriptionSelectParameters.
        :param expression: The expression of this GlacierJobDescriptionSelectParameters.
        :param output_serialization: The output_serialization of this GlacierJobDescriptionSelectParameters.
        """
        self.openapi_types = {
            'input_serialization': SelectParametersInputSerialization,
            'expression_type': ExpressionType,
            'expression': str,
            'output_serialization': SelectParametersOutputSerialization
        }

        self.attribute_map = {
            'input_serialization': 'InputSerialization',
            'expression_type': 'ExpressionType',
            'expression': 'Expression',
            'output_serialization': 'OutputSerialization'
        }

        self._input_serialization = input_serialization
        self._expression_type = expression_type
        self._expression = expression
        self._output_serialization = output_serialization

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GlacierJobDescriptionSelectParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GlacierJobDescription_SelectParameters of this GlacierJobDescriptionSelectParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def input_serialization(self):
        """Gets the input_serialization of this GlacierJobDescriptionSelectParameters.


        :return: The input_serialization of this GlacierJobDescriptionSelectParameters.
        :rtype: SelectParametersInputSerialization
        """
        return self._input_serialization

    @input_serialization.setter
    def input_serialization(self, input_serialization):
        """Sets the input_serialization of this GlacierJobDescriptionSelectParameters.


        :param input_serialization: The input_serialization of this GlacierJobDescriptionSelectParameters.
        :type input_serialization: SelectParametersInputSerialization
        """

        self._input_serialization = input_serialization

    @property
    def expression_type(self):
        """Gets the expression_type of this GlacierJobDescriptionSelectParameters.


        :return: The expression_type of this GlacierJobDescriptionSelectParameters.
        :rtype: ExpressionType
        """
        return self._expression_type

    @expression_type.setter
    def expression_type(self, expression_type):
        """Sets the expression_type of this GlacierJobDescriptionSelectParameters.


        :param expression_type: The expression_type of this GlacierJobDescriptionSelectParameters.
        :type expression_type: ExpressionType
        """

        self._expression_type = expression_type

    @property
    def expression(self):
        """Gets the expression of this GlacierJobDescriptionSelectParameters.


        :return: The expression of this GlacierJobDescriptionSelectParameters.
        :rtype: str
        """
        return self._expression

    @expression.setter
    def expression(self, expression):
        """Sets the expression of this GlacierJobDescriptionSelectParameters.


        :param expression: The expression of this GlacierJobDescriptionSelectParameters.
        :type expression: str
        """

        self._expression = expression

    @property
    def output_serialization(self):
        """Gets the output_serialization of this GlacierJobDescriptionSelectParameters.


        :return: The output_serialization of this GlacierJobDescriptionSelectParameters.
        :rtype: SelectParametersOutputSerialization
        """
        return self._output_serialization

    @output_serialization.setter
    def output_serialization(self, output_serialization):
        """Sets the output_serialization of this GlacierJobDescriptionSelectParameters.


        :param output_serialization: The output_serialization of this GlacierJobDescriptionSelectParameters.
        :type output_serialization: SelectParametersOutputSerialization
        """

        self._output_serialization = output_serialization
