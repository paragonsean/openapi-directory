/**
 * Amazon Route 53
 * <p>Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service.</p> <p>You can use Route 53 to:</p> <ul> <li> <p>Register domain names.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-domain-registration.html\">How domain registration works</a>.</p> </li> <li> <p>Route internet traffic to the resources for your domain</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html\">How internet traffic is routed to your website or web application</a>.</p> </li> <li> <p>Check the health of your resources.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-health-checks.html\">How Route 53 checks the health of your resources</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2013-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HealthCheckObservation from './HealthCheckObservation';
import HealthCheckObservationStatusReport from './HealthCheckObservationStatusReport';
import HealthCheckRegion from './HealthCheckRegion';

/**
 * The HealthCheckObservationsInner model module.
 * @module model/HealthCheckObservationsInner
 * @version 2013-04-01
 */
class HealthCheckObservationsInner {
    /**
     * Constructs a new <code>HealthCheckObservationsInner</code>.
     * @alias module:model/HealthCheckObservationsInner
     * @implements module:model/HealthCheckObservation
     */
    constructor() { 
        HealthCheckObservation.initialize(this);
        HealthCheckObservationsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HealthCheckObservationsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HealthCheckObservationsInner} obj Optional instance to populate.
     * @return {module:model/HealthCheckObservationsInner} The populated <code>HealthCheckObservationsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HealthCheckObservationsInner();
            HealthCheckObservation.constructFromObject(data, obj);

            if (data.hasOwnProperty('Region')) {
                obj['Region'] = ApiClient.convertToType(data['Region'], HealthCheckRegion);
            }
            if (data.hasOwnProperty('IPAddress')) {
                obj['IPAddress'] = ApiClient.convertToType(data['IPAddress'], 'String');
            }
            if (data.hasOwnProperty('StatusReport')) {
                obj['StatusReport'] = HealthCheckObservationStatusReport.constructFromObject(data['StatusReport']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HealthCheckObservationsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HealthCheckObservationsInner</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Region`
        if (data['Region']) { // data not null
          HealthCheckRegion.validateJSON(data['Region']);
        }
        // validate the optional field `IPAddress`
        if (data['IPAddress']) { // data not null
          String.validateJSON(data['IPAddress']);
        }
        // validate the optional field `StatusReport`
        if (data['StatusReport']) { // data not null
          HealthCheckObservationStatusReport.validateJSON(data['StatusReport']);
        }

        return true;
    }


}



/**
 * @member {module:model/HealthCheckRegion} Region
 */
HealthCheckObservationsInner.prototype['Region'] = undefined;

/**
 * @member {String} IPAddress
 */
HealthCheckObservationsInner.prototype['IPAddress'] = undefined;

/**
 * @member {module:model/HealthCheckObservationStatusReport} StatusReport
 */
HealthCheckObservationsInner.prototype['StatusReport'] = undefined;


// Implement HealthCheckObservation interface:
/**
 * @member {module:model/HealthCheckRegion} Region
 */
HealthCheckObservation.prototype['Region'] = undefined;
/**
 * @member {String} IPAddress
 */
HealthCheckObservation.prototype['IPAddress'] = undefined;
/**
 * @member {module:model/HealthCheckObservationStatusReport} StatusReport
 */
HealthCheckObservation.prototype['StatusReport'] = undefined;




export default HealthCheckObservationsInner;

