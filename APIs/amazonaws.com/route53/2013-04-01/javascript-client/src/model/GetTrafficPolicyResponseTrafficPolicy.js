/**
 * Amazon Route 53
 * <p>Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service.</p> <p>You can use Route 53 to:</p> <ul> <li> <p>Register domain names.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-domain-registration.html\">How domain registration works</a>.</p> </li> <li> <p>Route internet traffic to the resources for your domain</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html\">How internet traffic is routed to your website or web application</a>.</p> </li> <li> <p>Check the health of your resources.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-health-checks.html\">How Route 53 checks the health of your resources</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2013-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RRType from './RRType';
import TrafficPolicy from './TrafficPolicy';

/**
 * The GetTrafficPolicyResponseTrafficPolicy model module.
 * @module model/GetTrafficPolicyResponseTrafficPolicy
 * @version 2013-04-01
 */
class GetTrafficPolicyResponseTrafficPolicy {
    /**
     * Constructs a new <code>GetTrafficPolicyResponseTrafficPolicy</code>.
     * @alias module:model/GetTrafficPolicyResponseTrafficPolicy
     * @implements module:model/TrafficPolicy
     * @param id {String} 
     * @param version {Number} 
     * @param name {String} 
     * @param type {module:model/RRType} 
     * @param document {String} 
     */
    constructor(id, version, name, type, document) { 
        TrafficPolicy.initialize(this, id, version, name, type, document);
        GetTrafficPolicyResponseTrafficPolicy.initialize(this, id, version, name, type, document);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, version, name, type, document) { 
        obj['Id'] = id;
        obj['Version'] = version;
        obj['Name'] = name;
        obj['Type'] = type;
        obj['Document'] = document;
    }

    /**
     * Constructs a <code>GetTrafficPolicyResponseTrafficPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetTrafficPolicyResponseTrafficPolicy} obj Optional instance to populate.
     * @return {module:model/GetTrafficPolicyResponseTrafficPolicy} The populated <code>GetTrafficPolicyResponseTrafficPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetTrafficPolicyResponseTrafficPolicy();
            TrafficPolicy.constructFromObject(data, obj);

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], RRType);
            }
            if (data.hasOwnProperty('Document')) {
                obj['Document'] = ApiClient.convertToType(data['Document'], 'String');
            }
            if (data.hasOwnProperty('Comment')) {
                obj['Comment'] = ApiClient.convertToType(data['Comment'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetTrafficPolicyResponseTrafficPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetTrafficPolicyResponseTrafficPolicy</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetTrafficPolicyResponseTrafficPolicy.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `Version`
        if (data['Version']) { // data not null
          Number.validateJSON(data['Version']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          RRType.validateJSON(data['Type']);
        }
        // validate the optional field `Document`
        if (data['Document']) { // data not null
          String.validateJSON(data['Document']);
        }
        // validate the optional field `Comment`
        if (data['Comment']) { // data not null
          String.validateJSON(data['Comment']);
        }

        return true;
    }


}

GetTrafficPolicyResponseTrafficPolicy.RequiredProperties = ["Id", "Version", "Name", "Type", "Document"];

/**
 * @member {String} Id
 */
GetTrafficPolicyResponseTrafficPolicy.prototype['Id'] = undefined;

/**
 * @member {Number} Version
 */
GetTrafficPolicyResponseTrafficPolicy.prototype['Version'] = undefined;

/**
 * @member {String} Name
 */
GetTrafficPolicyResponseTrafficPolicy.prototype['Name'] = undefined;

/**
 * @member {module:model/RRType} Type
 */
GetTrafficPolicyResponseTrafficPolicy.prototype['Type'] = undefined;

/**
 * @member {String} Document
 */
GetTrafficPolicyResponseTrafficPolicy.prototype['Document'] = undefined;

/**
 * @member {String} Comment
 */
GetTrafficPolicyResponseTrafficPolicy.prototype['Comment'] = undefined;


// Implement TrafficPolicy interface:
/**
 * @member {String} Id
 */
TrafficPolicy.prototype['Id'] = undefined;
/**
 * @member {Number} Version
 */
TrafficPolicy.prototype['Version'] = undefined;
/**
 * @member {String} Name
 */
TrafficPolicy.prototype['Name'] = undefined;
/**
 * @member {module:model/RRType} Type
 */
TrafficPolicy.prototype['Type'] = undefined;
/**
 * @member {String} Document
 */
TrafficPolicy.prototype['Document'] = undefined;
/**
 * @member {String} Comment
 */
TrafficPolicy.prototype['Comment'] = undefined;




export default GetTrafficPolicyResponseTrafficPolicy;

