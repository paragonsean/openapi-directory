/**
 * Amazon Route 53
 * <p>Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service.</p> <p>You can use Route 53 to:</p> <ul> <li> <p>Register domain names.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-domain-registration.html\">How domain registration works</a>.</p> </li> <li> <p>Route internet traffic to the resources for your domain</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html\">How internet traffic is routed to your website or web application</a>.</p> </li> <li> <p>Check the health of your resources.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-health-checks.html\">How Route 53 checks the health of your resources</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2013-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateHealthCheckRequestHealthCheckConfigAlarmIdentifier from './CreateHealthCheckRequestHealthCheckConfigAlarmIdentifier';
import HealthCheckConfig from './HealthCheckConfig';
import HealthCheckType from './HealthCheckType';
import InsufficientDataHealthStatus from './InsufficientDataHealthStatus';

/**
 * The CreateHealthCheckRequestHealthCheckConfig model module.
 * @module model/CreateHealthCheckRequestHealthCheckConfig
 * @version 2013-04-01
 */
class CreateHealthCheckRequestHealthCheckConfig {
    /**
     * Constructs a new <code>CreateHealthCheckRequestHealthCheckConfig</code>.
     * @alias module:model/CreateHealthCheckRequestHealthCheckConfig
     * @implements module:model/HealthCheckConfig
     * @param type {module:model/HealthCheckType} 
     */
    constructor(type) { 
        HealthCheckConfig.initialize(this, type);
        CreateHealthCheckRequestHealthCheckConfig.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['Type'] = type;
    }

    /**
     * Constructs a <code>CreateHealthCheckRequestHealthCheckConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateHealthCheckRequestHealthCheckConfig} obj Optional instance to populate.
     * @return {module:model/CreateHealthCheckRequestHealthCheckConfig} The populated <code>CreateHealthCheckRequestHealthCheckConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateHealthCheckRequestHealthCheckConfig();
            HealthCheckConfig.constructFromObject(data, obj);

            if (data.hasOwnProperty('IPAddress')) {
                obj['IPAddress'] = ApiClient.convertToType(data['IPAddress'], 'String');
            }
            if (data.hasOwnProperty('Port')) {
                obj['Port'] = ApiClient.convertToType(data['Port'], 'Number');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], HealthCheckType);
            }
            if (data.hasOwnProperty('ResourcePath')) {
                obj['ResourcePath'] = ApiClient.convertToType(data['ResourcePath'], 'String');
            }
            if (data.hasOwnProperty('FullyQualifiedDomainName')) {
                obj['FullyQualifiedDomainName'] = ApiClient.convertToType(data['FullyQualifiedDomainName'], 'String');
            }
            if (data.hasOwnProperty('SearchString')) {
                obj['SearchString'] = ApiClient.convertToType(data['SearchString'], 'String');
            }
            if (data.hasOwnProperty('RequestInterval')) {
                obj['RequestInterval'] = ApiClient.convertToType(data['RequestInterval'], 'Number');
            }
            if (data.hasOwnProperty('FailureThreshold')) {
                obj['FailureThreshold'] = ApiClient.convertToType(data['FailureThreshold'], 'Number');
            }
            if (data.hasOwnProperty('MeasureLatency')) {
                obj['MeasureLatency'] = ApiClient.convertToType(data['MeasureLatency'], 'Boolean');
            }
            if (data.hasOwnProperty('Inverted')) {
                obj['Inverted'] = ApiClient.convertToType(data['Inverted'], 'Boolean');
            }
            if (data.hasOwnProperty('Disabled')) {
                obj['Disabled'] = ApiClient.convertToType(data['Disabled'], 'Boolean');
            }
            if (data.hasOwnProperty('HealthThreshold')) {
                obj['HealthThreshold'] = ApiClient.convertToType(data['HealthThreshold'], 'Number');
            }
            if (data.hasOwnProperty('ChildHealthChecks')) {
                obj['ChildHealthChecks'] = ApiClient.convertToType(data['ChildHealthChecks'], Array);
            }
            if (data.hasOwnProperty('EnableSNI')) {
                obj['EnableSNI'] = ApiClient.convertToType(data['EnableSNI'], 'Boolean');
            }
            if (data.hasOwnProperty('Regions')) {
                obj['Regions'] = ApiClient.convertToType(data['Regions'], Array);
            }
            if (data.hasOwnProperty('AlarmIdentifier')) {
                obj['AlarmIdentifier'] = CreateHealthCheckRequestHealthCheckConfigAlarmIdentifier.constructFromObject(data['AlarmIdentifier']);
            }
            if (data.hasOwnProperty('InsufficientDataHealthStatus')) {
                obj['InsufficientDataHealthStatus'] = ApiClient.convertToType(data['InsufficientDataHealthStatus'], InsufficientDataHealthStatus);
            }
            if (data.hasOwnProperty('RoutingControlArn')) {
                obj['RoutingControlArn'] = ApiClient.convertToType(data['RoutingControlArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateHealthCheckRequestHealthCheckConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateHealthCheckRequestHealthCheckConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateHealthCheckRequestHealthCheckConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `IPAddress`
        if (data['IPAddress']) { // data not null
          String.validateJSON(data['IPAddress']);
        }
        // validate the optional field `Port`
        if (data['Port']) { // data not null
          Number.validateJSON(data['Port']);
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          HealthCheckType.validateJSON(data['Type']);
        }
        // validate the optional field `ResourcePath`
        if (data['ResourcePath']) { // data not null
          String.validateJSON(data['ResourcePath']);
        }
        // validate the optional field `FullyQualifiedDomainName`
        if (data['FullyQualifiedDomainName']) { // data not null
          String.validateJSON(data['FullyQualifiedDomainName']);
        }
        // validate the optional field `SearchString`
        if (data['SearchString']) { // data not null
          String.validateJSON(data['SearchString']);
        }
        // validate the optional field `RequestInterval`
        if (data['RequestInterval']) { // data not null
          Number.validateJSON(data['RequestInterval']);
        }
        // validate the optional field `FailureThreshold`
        if (data['FailureThreshold']) { // data not null
          Number.validateJSON(data['FailureThreshold']);
        }
        // validate the optional field `MeasureLatency`
        if (data['MeasureLatency']) { // data not null
          Boolean.validateJSON(data['MeasureLatency']);
        }
        // validate the optional field `Inverted`
        if (data['Inverted']) { // data not null
          Boolean.validateJSON(data['Inverted']);
        }
        // validate the optional field `Disabled`
        if (data['Disabled']) { // data not null
          Boolean.validateJSON(data['Disabled']);
        }
        // validate the optional field `HealthThreshold`
        if (data['HealthThreshold']) { // data not null
          Number.validateJSON(data['HealthThreshold']);
        }
        // validate the optional field `ChildHealthChecks`
        if (data['ChildHealthChecks']) { // data not null
          Array.validateJSON(data['ChildHealthChecks']);
        }
        // validate the optional field `EnableSNI`
        if (data['EnableSNI']) { // data not null
          Boolean.validateJSON(data['EnableSNI']);
        }
        // validate the optional field `Regions`
        if (data['Regions']) { // data not null
          Array.validateJSON(data['Regions']);
        }
        // validate the optional field `AlarmIdentifier`
        if (data['AlarmIdentifier']) { // data not null
          CreateHealthCheckRequestHealthCheckConfigAlarmIdentifier.validateJSON(data['AlarmIdentifier']);
        }
        // validate the optional field `InsufficientDataHealthStatus`
        if (data['InsufficientDataHealthStatus']) { // data not null
          InsufficientDataHealthStatus.validateJSON(data['InsufficientDataHealthStatus']);
        }
        // validate the optional field `RoutingControlArn`
        if (data['RoutingControlArn']) { // data not null
          String.validateJSON(data['RoutingControlArn']);
        }

        return true;
    }


}

CreateHealthCheckRequestHealthCheckConfig.RequiredProperties = ["Type"];

/**
 * @member {String} IPAddress
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['IPAddress'] = undefined;

/**
 * @member {Number} Port
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['Port'] = undefined;

/**
 * @member {module:model/HealthCheckType} Type
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['Type'] = undefined;

/**
 * @member {String} ResourcePath
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['ResourcePath'] = undefined;

/**
 * @member {String} FullyQualifiedDomainName
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['FullyQualifiedDomainName'] = undefined;

/**
 * @member {String} SearchString
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['SearchString'] = undefined;

/**
 * @member {Number} RequestInterval
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['RequestInterval'] = undefined;

/**
 * @member {Number} FailureThreshold
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['FailureThreshold'] = undefined;

/**
 * @member {Boolean} MeasureLatency
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['MeasureLatency'] = undefined;

/**
 * @member {Boolean} Inverted
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['Inverted'] = undefined;

/**
 * @member {Boolean} Disabled
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['Disabled'] = undefined;

/**
 * @member {Number} HealthThreshold
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['HealthThreshold'] = undefined;

/**
 * @member {Array} ChildHealthChecks
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['ChildHealthChecks'] = undefined;

/**
 * @member {Boolean} EnableSNI
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['EnableSNI'] = undefined;

/**
 * @member {Array} Regions
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['Regions'] = undefined;

/**
 * @member {module:model/CreateHealthCheckRequestHealthCheckConfigAlarmIdentifier} AlarmIdentifier
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['AlarmIdentifier'] = undefined;

/**
 * @member {module:model/InsufficientDataHealthStatus} InsufficientDataHealthStatus
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['InsufficientDataHealthStatus'] = undefined;

/**
 * @member {String} RoutingControlArn
 */
CreateHealthCheckRequestHealthCheckConfig.prototype['RoutingControlArn'] = undefined;


// Implement HealthCheckConfig interface:
/**
 * @member {String} IPAddress
 */
HealthCheckConfig.prototype['IPAddress'] = undefined;
/**
 * @member {Number} Port
 */
HealthCheckConfig.prototype['Port'] = undefined;
/**
 * @member {module:model/HealthCheckType} Type
 */
HealthCheckConfig.prototype['Type'] = undefined;
/**
 * @member {String} ResourcePath
 */
HealthCheckConfig.prototype['ResourcePath'] = undefined;
/**
 * @member {String} FullyQualifiedDomainName
 */
HealthCheckConfig.prototype['FullyQualifiedDomainName'] = undefined;
/**
 * @member {String} SearchString
 */
HealthCheckConfig.prototype['SearchString'] = undefined;
/**
 * @member {Number} RequestInterval
 */
HealthCheckConfig.prototype['RequestInterval'] = undefined;
/**
 * @member {Number} FailureThreshold
 */
HealthCheckConfig.prototype['FailureThreshold'] = undefined;
/**
 * @member {Boolean} MeasureLatency
 */
HealthCheckConfig.prototype['MeasureLatency'] = undefined;
/**
 * @member {Boolean} Inverted
 */
HealthCheckConfig.prototype['Inverted'] = undefined;
/**
 * @member {Boolean} Disabled
 */
HealthCheckConfig.prototype['Disabled'] = undefined;
/**
 * @member {Number} HealthThreshold
 */
HealthCheckConfig.prototype['HealthThreshold'] = undefined;
/**
 * @member {Array} ChildHealthChecks
 */
HealthCheckConfig.prototype['ChildHealthChecks'] = undefined;
/**
 * @member {Boolean} EnableSNI
 */
HealthCheckConfig.prototype['EnableSNI'] = undefined;
/**
 * @member {Array} Regions
 */
HealthCheckConfig.prototype['Regions'] = undefined;
/**
 * @member {module:model/CreateHealthCheckRequestHealthCheckConfigAlarmIdentifier} AlarmIdentifier
 */
HealthCheckConfig.prototype['AlarmIdentifier'] = undefined;
/**
 * @member {module:model/InsufficientDataHealthStatus} InsufficientDataHealthStatus
 */
HealthCheckConfig.prototype['InsufficientDataHealthStatus'] = undefined;
/**
 * @member {String} RoutingControlArn
 */
HealthCheckConfig.prototype['RoutingControlArn'] = undefined;




export default CreateHealthCheckRequestHealthCheckConfig;

