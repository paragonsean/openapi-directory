/**
 * Amazon Route 53
 * <p>Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service.</p> <p>You can use Route 53 to:</p> <ul> <li> <p>Register domain names.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-domain-registration.html\">How domain registration works</a>.</p> </li> <li> <p>Route internet traffic to the resources for your domain</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html\">How internet traffic is routed to your website or web application</a>.</p> </li> <li> <p>Check the health of your resources.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-health-checks.html\">How Route 53 checks the health of your resources</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2013-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssociateVPCWithHostedZoneRequestVPC from './AssociateVPCWithHostedZoneRequestVPC';
import CreateHostedZoneRequestHostedZoneConfig from './CreateHostedZoneRequestHostedZoneConfig';

/**
 * The CreateHostedZoneRequest model module.
 * @module model/CreateHostedZoneRequest
 * @version 2013-04-01
 */
class CreateHostedZoneRequest {
    /**
     * Constructs a new <code>CreateHostedZoneRequest</code>.
     * @alias module:model/CreateHostedZoneRequest
     * @param name {String} <p>The name of the domain. Specify a fully qualified domain name, for example, <i>www.example.com</i>. The trailing dot is optional; Amazon Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats <i>www.example.com</i> (without a trailing dot) and <i>www.example.com.</i> (with a trailing dot) as identical.</p> <p>If you're creating a public hosted zone, this is the name you have registered with your DNS registrar. If your domain name is registered with a registrar other than Route 53, change the name servers for your domain to the set of <code>NameServers</code> that <code>CreateHostedZone</code> returns in <code>DelegationSet</code>.</p>
     * @param callerReference {String} A unique string that identifies the request and that allows failed <code>CreateHostedZone</code> requests to be retried without the risk of executing the operation twice. You must use a unique <code>CallerReference</code> string every time you submit a <code>CreateHostedZone</code> request. <code>CallerReference</code> can be any unique string, for example, a date/time stamp.
     */
    constructor(name, callerReference) { 
        
        CreateHostedZoneRequest.initialize(this, name, callerReference);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, callerReference) { 
        obj['Name'] = name;
        obj['CallerReference'] = callerReference;
    }

    /**
     * Constructs a <code>CreateHostedZoneRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateHostedZoneRequest} obj Optional instance to populate.
     * @return {module:model/CreateHostedZoneRequest} The populated <code>CreateHostedZoneRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateHostedZoneRequest();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('VPC')) {
                obj['VPC'] = AssociateVPCWithHostedZoneRequestVPC.constructFromObject(data['VPC']);
            }
            if (data.hasOwnProperty('CallerReference')) {
                obj['CallerReference'] = ApiClient.convertToType(data['CallerReference'], 'String');
            }
            if (data.hasOwnProperty('HostedZoneConfig')) {
                obj['HostedZoneConfig'] = CreateHostedZoneRequestHostedZoneConfig.constructFromObject(data['HostedZoneConfig']);
            }
            if (data.hasOwnProperty('DelegationSetId')) {
                obj['DelegationSetId'] = ApiClient.convertToType(data['DelegationSetId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateHostedZoneRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateHostedZoneRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateHostedZoneRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // validate the optional field `VPC`
        if (data['VPC']) { // data not null
          AssociateVPCWithHostedZoneRequestVPC.validateJSON(data['VPC']);
        }
        // ensure the json data is a string
        if (data['CallerReference'] && !(typeof data['CallerReference'] === 'string' || data['CallerReference'] instanceof String)) {
            throw new Error("Expected the field `CallerReference` to be a primitive type in the JSON string but got " + data['CallerReference']);
        }
        // validate the optional field `HostedZoneConfig`
        if (data['HostedZoneConfig']) { // data not null
          CreateHostedZoneRequestHostedZoneConfig.validateJSON(data['HostedZoneConfig']);
        }
        // ensure the json data is a string
        if (data['DelegationSetId'] && !(typeof data['DelegationSetId'] === 'string' || data['DelegationSetId'] instanceof String)) {
            throw new Error("Expected the field `DelegationSetId` to be a primitive type in the JSON string but got " + data['DelegationSetId']);
        }

        return true;
    }


}

CreateHostedZoneRequest.RequiredProperties = ["Name", "CallerReference"];

/**
 * <p>The name of the domain. Specify a fully qualified domain name, for example, <i>www.example.com</i>. The trailing dot is optional; Amazon Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats <i>www.example.com</i> (without a trailing dot) and <i>www.example.com.</i> (with a trailing dot) as identical.</p> <p>If you're creating a public hosted zone, this is the name you have registered with your DNS registrar. If your domain name is registered with a registrar other than Route 53, change the name servers for your domain to the set of <code>NameServers</code> that <code>CreateHostedZone</code> returns in <code>DelegationSet</code>.</p>
 * @member {String} Name
 */
CreateHostedZoneRequest.prototype['Name'] = undefined;

/**
 * @member {module:model/AssociateVPCWithHostedZoneRequestVPC} VPC
 */
CreateHostedZoneRequest.prototype['VPC'] = undefined;

/**
 * A unique string that identifies the request and that allows failed <code>CreateHostedZone</code> requests to be retried without the risk of executing the operation twice. You must use a unique <code>CallerReference</code> string every time you submit a <code>CreateHostedZone</code> request. <code>CallerReference</code> can be any unique string, for example, a date/time stamp.
 * @member {String} CallerReference
 */
CreateHostedZoneRequest.prototype['CallerReference'] = undefined;

/**
 * @member {module:model/CreateHostedZoneRequestHostedZoneConfig} HostedZoneConfig
 */
CreateHostedZoneRequest.prototype['HostedZoneConfig'] = undefined;

/**
 * <p>If you want to associate a reusable delegation set with this hosted zone, the ID that Amazon Route 53 assigned to the reusable delegation set when you created it. For more information about reusable delegation sets, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateReusableDelegationSet.html\">CreateReusableDelegationSet</a>.</p> <p>If you are using a reusable delegation set to create a public hosted zone for a subdomain, make sure that the parent hosted zone doesn't use one or more of the same name servers. If you have overlapping nameservers, the operation will cause a <code>ConflictingDomainsExist</code> error.</p>
 * @member {String} DelegationSetId
 */
CreateHostedZoneRequest.prototype['DelegationSetId'] = undefined;






export default CreateHostedZoneRequest;

