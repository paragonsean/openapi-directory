/**
 * Amazon Route 53
 * <p>Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service.</p> <p>You can use Route 53 to:</p> <ul> <li> <p>Register domain names.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-domain-registration.html\">How domain registration works</a>.</p> </li> <li> <p>Route internet traffic to the resources for your domain</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html\">How internet traffic is routed to your website or web application</a>.</p> </li> <li> <p>Check the health of your resources.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-health-checks.html\">How Route 53 checks the health of your resources</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2013-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateTrafficPolicyInstanceRequest model module.
 * @module model/CreateTrafficPolicyInstanceRequest
 * @version 2013-04-01
 */
class CreateTrafficPolicyInstanceRequest {
    /**
     * Constructs a new <code>CreateTrafficPolicyInstanceRequest</code>.
     * @alias module:model/CreateTrafficPolicyInstanceRequest
     * @param hostedZoneId {String} The ID of the hosted zone that you want Amazon Route 53 to create resource record sets in by using the configuration in a traffic policy.
     * @param name {String} The domain name (such as example.com) or subdomain name (such as www.example.com) for which Amazon Route 53 responds to DNS queries by using the resource record sets that Route 53 creates for this traffic policy instance.
     * @param TTL {Number} (Optional) The TTL that you want Amazon Route 53 to assign to all of the resource record sets that it creates in the specified hosted zone.
     * @param trafficPolicyId {String} The ID of the traffic policy that you want to use to create resource record sets in the specified hosted zone.
     * @param trafficPolicyVersion {Number} The version of the traffic policy that you want to use to create resource record sets in the specified hosted zone.
     */
    constructor(hostedZoneId, name, TTL, trafficPolicyId, trafficPolicyVersion) { 
        
        CreateTrafficPolicyInstanceRequest.initialize(this, hostedZoneId, name, TTL, trafficPolicyId, trafficPolicyVersion);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, hostedZoneId, name, TTL, trafficPolicyId, trafficPolicyVersion) { 
        obj['HostedZoneId'] = hostedZoneId;
        obj['Name'] = name;
        obj['TTL'] = TTL;
        obj['TrafficPolicyId'] = trafficPolicyId;
        obj['TrafficPolicyVersion'] = trafficPolicyVersion;
    }

    /**
     * Constructs a <code>CreateTrafficPolicyInstanceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateTrafficPolicyInstanceRequest} obj Optional instance to populate.
     * @return {module:model/CreateTrafficPolicyInstanceRequest} The populated <code>CreateTrafficPolicyInstanceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateTrafficPolicyInstanceRequest();

            if (data.hasOwnProperty('HostedZoneId')) {
                obj['HostedZoneId'] = ApiClient.convertToType(data['HostedZoneId'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('TTL')) {
                obj['TTL'] = ApiClient.convertToType(data['TTL'], 'Number');
            }
            if (data.hasOwnProperty('TrafficPolicyId')) {
                obj['TrafficPolicyId'] = ApiClient.convertToType(data['TrafficPolicyId'], 'String');
            }
            if (data.hasOwnProperty('TrafficPolicyVersion')) {
                obj['TrafficPolicyVersion'] = ApiClient.convertToType(data['TrafficPolicyVersion'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateTrafficPolicyInstanceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateTrafficPolicyInstanceRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateTrafficPolicyInstanceRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['HostedZoneId'] && !(typeof data['HostedZoneId'] === 'string' || data['HostedZoneId'] instanceof String)) {
            throw new Error("Expected the field `HostedZoneId` to be a primitive type in the JSON string but got " + data['HostedZoneId']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['TrafficPolicyId'] && !(typeof data['TrafficPolicyId'] === 'string' || data['TrafficPolicyId'] instanceof String)) {
            throw new Error("Expected the field `TrafficPolicyId` to be a primitive type in the JSON string but got " + data['TrafficPolicyId']);
        }

        return true;
    }


}

CreateTrafficPolicyInstanceRequest.RequiredProperties = ["HostedZoneId", "Name", "TTL", "TrafficPolicyId", "TrafficPolicyVersion"];

/**
 * The ID of the hosted zone that you want Amazon Route 53 to create resource record sets in by using the configuration in a traffic policy.
 * @member {String} HostedZoneId
 */
CreateTrafficPolicyInstanceRequest.prototype['HostedZoneId'] = undefined;

/**
 * The domain name (such as example.com) or subdomain name (such as www.example.com) for which Amazon Route 53 responds to DNS queries by using the resource record sets that Route 53 creates for this traffic policy instance.
 * @member {String} Name
 */
CreateTrafficPolicyInstanceRequest.prototype['Name'] = undefined;

/**
 * (Optional) The TTL that you want Amazon Route 53 to assign to all of the resource record sets that it creates in the specified hosted zone.
 * @member {Number} TTL
 */
CreateTrafficPolicyInstanceRequest.prototype['TTL'] = undefined;

/**
 * The ID of the traffic policy that you want to use to create resource record sets in the specified hosted zone.
 * @member {String} TrafficPolicyId
 */
CreateTrafficPolicyInstanceRequest.prototype['TrafficPolicyId'] = undefined;

/**
 * The version of the traffic policy that you want to use to create resource record sets in the specified hosted zone.
 * @member {Number} TrafficPolicyVersion
 */
CreateTrafficPolicyInstanceRequest.prototype['TrafficPolicyVersion'] = undefined;






export default CreateTrafficPolicyInstanceRequest;

