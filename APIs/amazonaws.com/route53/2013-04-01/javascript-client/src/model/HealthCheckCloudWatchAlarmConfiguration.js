/**
 * Amazon Route 53
 * <p>Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service.</p> <p>You can use Route 53 to:</p> <ul> <li> <p>Register domain names.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-domain-registration.html\">How domain registration works</a>.</p> </li> <li> <p>Route internet traffic to the resources for your domain</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html\">How internet traffic is routed to your website or web application</a>.</p> </li> <li> <p>Check the health of your resources.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-health-checks.html\">How Route 53 checks the health of your resources</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2013-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CloudWatchAlarmConfiguration from './CloudWatchAlarmConfiguration';
import ComparisonOperator from './ComparisonOperator';
import Statistic from './Statistic';

/**
 * The HealthCheckCloudWatchAlarmConfiguration model module.
 * @module model/HealthCheckCloudWatchAlarmConfiguration
 * @version 2013-04-01
 */
class HealthCheckCloudWatchAlarmConfiguration {
    /**
     * Constructs a new <code>HealthCheckCloudWatchAlarmConfiguration</code>.
     * @alias module:model/HealthCheckCloudWatchAlarmConfiguration
     * @implements module:model/CloudWatchAlarmConfiguration
     * @param evaluationPeriods {Number} 
     * @param threshold {Number} 
     * @param comparisonOperator {module:model/ComparisonOperator} 
     * @param period {Number} 
     * @param metricName {String} 
     * @param namespace {String} 
     * @param statistic {module:model/Statistic} 
     */
    constructor(evaluationPeriods, threshold, comparisonOperator, period, metricName, namespace, statistic) { 
        CloudWatchAlarmConfiguration.initialize(this, evaluationPeriods, threshold, comparisonOperator, period, metricName, namespace, statistic);
        HealthCheckCloudWatchAlarmConfiguration.initialize(this, evaluationPeriods, threshold, comparisonOperator, period, metricName, namespace, statistic);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, evaluationPeriods, threshold, comparisonOperator, period, metricName, namespace, statistic) { 
        obj['EvaluationPeriods'] = evaluationPeriods;
        obj['Threshold'] = threshold;
        obj['ComparisonOperator'] = comparisonOperator;
        obj['Period'] = period;
        obj['MetricName'] = metricName;
        obj['Namespace'] = namespace;
        obj['Statistic'] = statistic;
    }

    /**
     * Constructs a <code>HealthCheckCloudWatchAlarmConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HealthCheckCloudWatchAlarmConfiguration} obj Optional instance to populate.
     * @return {module:model/HealthCheckCloudWatchAlarmConfiguration} The populated <code>HealthCheckCloudWatchAlarmConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HealthCheckCloudWatchAlarmConfiguration();
            CloudWatchAlarmConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('EvaluationPeriods')) {
                obj['EvaluationPeriods'] = ApiClient.convertToType(data['EvaluationPeriods'], 'Number');
            }
            if (data.hasOwnProperty('Threshold')) {
                obj['Threshold'] = ApiClient.convertToType(data['Threshold'], 'Number');
            }
            if (data.hasOwnProperty('ComparisonOperator')) {
                obj['ComparisonOperator'] = ApiClient.convertToType(data['ComparisonOperator'], ComparisonOperator);
            }
            if (data.hasOwnProperty('Period')) {
                obj['Period'] = ApiClient.convertToType(data['Period'], 'Number');
            }
            if (data.hasOwnProperty('MetricName')) {
                obj['MetricName'] = ApiClient.convertToType(data['MetricName'], 'String');
            }
            if (data.hasOwnProperty('Namespace')) {
                obj['Namespace'] = ApiClient.convertToType(data['Namespace'], 'String');
            }
            if (data.hasOwnProperty('Statistic')) {
                obj['Statistic'] = ApiClient.convertToType(data['Statistic'], Statistic);
            }
            if (data.hasOwnProperty('Dimensions')) {
                obj['Dimensions'] = ApiClient.convertToType(data['Dimensions'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HealthCheckCloudWatchAlarmConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HealthCheckCloudWatchAlarmConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HealthCheckCloudWatchAlarmConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `EvaluationPeriods`
        if (data['EvaluationPeriods']) { // data not null
          Number.validateJSON(data['EvaluationPeriods']);
        }
        // validate the optional field `Threshold`
        if (data['Threshold']) { // data not null
          Number.validateJSON(data['Threshold']);
        }
        // validate the optional field `ComparisonOperator`
        if (data['ComparisonOperator']) { // data not null
          ComparisonOperator.validateJSON(data['ComparisonOperator']);
        }
        // validate the optional field `Period`
        if (data['Period']) { // data not null
          Number.validateJSON(data['Period']);
        }
        // validate the optional field `MetricName`
        if (data['MetricName']) { // data not null
          String.validateJSON(data['MetricName']);
        }
        // validate the optional field `Namespace`
        if (data['Namespace']) { // data not null
          String.validateJSON(data['Namespace']);
        }
        // validate the optional field `Statistic`
        if (data['Statistic']) { // data not null
          Statistic.validateJSON(data['Statistic']);
        }
        // validate the optional field `Dimensions`
        if (data['Dimensions']) { // data not null
          Array.validateJSON(data['Dimensions']);
        }

        return true;
    }


}

HealthCheckCloudWatchAlarmConfiguration.RequiredProperties = ["EvaluationPeriods", "Threshold", "ComparisonOperator", "Period", "MetricName", "Namespace", "Statistic"];

/**
 * @member {Number} EvaluationPeriods
 */
HealthCheckCloudWatchAlarmConfiguration.prototype['EvaluationPeriods'] = undefined;

/**
 * @member {Number} Threshold
 */
HealthCheckCloudWatchAlarmConfiguration.prototype['Threshold'] = undefined;

/**
 * @member {module:model/ComparisonOperator} ComparisonOperator
 */
HealthCheckCloudWatchAlarmConfiguration.prototype['ComparisonOperator'] = undefined;

/**
 * @member {Number} Period
 */
HealthCheckCloudWatchAlarmConfiguration.prototype['Period'] = undefined;

/**
 * @member {String} MetricName
 */
HealthCheckCloudWatchAlarmConfiguration.prototype['MetricName'] = undefined;

/**
 * @member {String} Namespace
 */
HealthCheckCloudWatchAlarmConfiguration.prototype['Namespace'] = undefined;

/**
 * @member {module:model/Statistic} Statistic
 */
HealthCheckCloudWatchAlarmConfiguration.prototype['Statistic'] = undefined;

/**
 * @member {Array} Dimensions
 */
HealthCheckCloudWatchAlarmConfiguration.prototype['Dimensions'] = undefined;


// Implement CloudWatchAlarmConfiguration interface:
/**
 * @member {Number} EvaluationPeriods
 */
CloudWatchAlarmConfiguration.prototype['EvaluationPeriods'] = undefined;
/**
 * @member {Number} Threshold
 */
CloudWatchAlarmConfiguration.prototype['Threshold'] = undefined;
/**
 * @member {module:model/ComparisonOperator} ComparisonOperator
 */
CloudWatchAlarmConfiguration.prototype['ComparisonOperator'] = undefined;
/**
 * @member {Number} Period
 */
CloudWatchAlarmConfiguration.prototype['Period'] = undefined;
/**
 * @member {String} MetricName
 */
CloudWatchAlarmConfiguration.prototype['MetricName'] = undefined;
/**
 * @member {String} Namespace
 */
CloudWatchAlarmConfiguration.prototype['Namespace'] = undefined;
/**
 * @member {module:model/Statistic} Statistic
 */
CloudWatchAlarmConfiguration.prototype['Statistic'] = undefined;
/**
 * @member {Array} Dimensions
 */
CloudWatchAlarmConfiguration.prototype['Dimensions'] = undefined;




export default HealthCheckCloudWatchAlarmConfiguration;

