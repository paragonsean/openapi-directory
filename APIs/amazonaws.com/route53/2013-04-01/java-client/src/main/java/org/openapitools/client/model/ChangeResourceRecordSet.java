/*
 * Amazon Route 53
 * <p>Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service.</p> <p>You can use Route 53 to:</p> <ul> <li> <p>Register domain names.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-domain-registration.html\">How domain registration works</a>.</p> </li> <li> <p>Route internet traffic to the resources for your domain</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html\">How internet traffic is routed to your website or web application</a>.</p> </li> <li> <p>Check the health of your resources.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-health-checks.html\">How Route 53 checks the health of your resources</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2013-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CidrRoutingConfig;
import org.openapitools.client.model.RRType;
import org.openapitools.client.model.ResourceRecordSetAliasTarget;
import org.openapitools.client.model.ResourceRecordSetFailover;
import org.openapitools.client.model.ResourceRecordSetGeoLocation;
import org.openapitools.client.model.ResourceRecordSetRegion;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ChangeResourceRecordSet
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:28.020907-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ChangeResourceRecordSet {
  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private RRType type;

  public static final String SERIALIZED_NAME_SET_IDENTIFIER = "SetIdentifier";
  @SerializedName(SERIALIZED_NAME_SET_IDENTIFIER)
  private String setIdentifier;

  public static final String SERIALIZED_NAME_WEIGHT = "Weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private Integer weight;

  public static final String SERIALIZED_NAME_REGION = "Region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private ResourceRecordSetRegion region;

  public static final String SERIALIZED_NAME_GEO_LOCATION = "GeoLocation";
  @SerializedName(SERIALIZED_NAME_GEO_LOCATION)
  private ResourceRecordSetGeoLocation geoLocation;

  public static final String SERIALIZED_NAME_FAILOVER = "Failover";
  @SerializedName(SERIALIZED_NAME_FAILOVER)
  private ResourceRecordSetFailover failover;

  public static final String SERIALIZED_NAME_MULTI_VALUE_ANSWER = "MultiValueAnswer";
  @SerializedName(SERIALIZED_NAME_MULTI_VALUE_ANSWER)
  private Boolean multiValueAnswer;

  public static final String SERIALIZED_NAME_T_T_L = "TTL";
  @SerializedName(SERIALIZED_NAME_T_T_L)
  private Integer TTL;

  public static final String SERIALIZED_NAME_RESOURCE_RECORDS = "ResourceRecords";
  @SerializedName(SERIALIZED_NAME_RESOURCE_RECORDS)
  private List resourceRecords;

  public static final String SERIALIZED_NAME_ALIAS_TARGET = "AliasTarget";
  @SerializedName(SERIALIZED_NAME_ALIAS_TARGET)
  private ResourceRecordSetAliasTarget aliasTarget;

  public static final String SERIALIZED_NAME_HEALTH_CHECK_ID = "HealthCheckId";
  @SerializedName(SERIALIZED_NAME_HEALTH_CHECK_ID)
  private String healthCheckId;

  public static final String SERIALIZED_NAME_TRAFFIC_POLICY_INSTANCE_ID = "TrafficPolicyInstanceId";
  @SerializedName(SERIALIZED_NAME_TRAFFIC_POLICY_INSTANCE_ID)
  private String trafficPolicyInstanceId;

  public static final String SERIALIZED_NAME_CIDR_ROUTING_CONFIG = "CidrRoutingConfig";
  @SerializedName(SERIALIZED_NAME_CIDR_ROUTING_CONFIG)
  private CidrRoutingConfig cidrRoutingConfig;

  public ChangeResourceRecordSet() {
  }

  public ChangeResourceRecordSet name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ChangeResourceRecordSet type(RRType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  public RRType getType() {
    return type;
  }

  public void setType(RRType type) {
    this.type = type;
  }


  public ChangeResourceRecordSet setIdentifier(String setIdentifier) {
    this.setIdentifier = setIdentifier;
    return this;
  }

  /**
   * Get setIdentifier
   * @return setIdentifier
   */
  @javax.annotation.Nullable
  public String getSetIdentifier() {
    return setIdentifier;
  }

  public void setSetIdentifier(String setIdentifier) {
    this.setIdentifier = setIdentifier;
  }


  public ChangeResourceRecordSet weight(Integer weight) {
    this.weight = weight;
    return this;
  }

  /**
   * Get weight
   * @return weight
   */
  @javax.annotation.Nullable
  public Integer getWeight() {
    return weight;
  }

  public void setWeight(Integer weight) {
    this.weight = weight;
  }


  public ChangeResourceRecordSet region(ResourceRecordSetRegion region) {
    this.region = region;
    return this;
  }

  /**
   * Get region
   * @return region
   */
  @javax.annotation.Nullable
  public ResourceRecordSetRegion getRegion() {
    return region;
  }

  public void setRegion(ResourceRecordSetRegion region) {
    this.region = region;
  }


  public ChangeResourceRecordSet geoLocation(ResourceRecordSetGeoLocation geoLocation) {
    this.geoLocation = geoLocation;
    return this;
  }

  /**
   * Get geoLocation
   * @return geoLocation
   */
  @javax.annotation.Nullable
  public ResourceRecordSetGeoLocation getGeoLocation() {
    return geoLocation;
  }

  public void setGeoLocation(ResourceRecordSetGeoLocation geoLocation) {
    this.geoLocation = geoLocation;
  }


  public ChangeResourceRecordSet failover(ResourceRecordSetFailover failover) {
    this.failover = failover;
    return this;
  }

  /**
   * Get failover
   * @return failover
   */
  @javax.annotation.Nullable
  public ResourceRecordSetFailover getFailover() {
    return failover;
  }

  public void setFailover(ResourceRecordSetFailover failover) {
    this.failover = failover;
  }


  public ChangeResourceRecordSet multiValueAnswer(Boolean multiValueAnswer) {
    this.multiValueAnswer = multiValueAnswer;
    return this;
  }

  /**
   * Get multiValueAnswer
   * @return multiValueAnswer
   */
  @javax.annotation.Nullable
  public Boolean getMultiValueAnswer() {
    return multiValueAnswer;
  }

  public void setMultiValueAnswer(Boolean multiValueAnswer) {
    this.multiValueAnswer = multiValueAnswer;
  }


  public ChangeResourceRecordSet TTL(Integer TTL) {
    this.TTL = TTL;
    return this;
  }

  /**
   * Get TTL
   * @return TTL
   */
  @javax.annotation.Nullable
  public Integer getTTL() {
    return TTL;
  }

  public void setTTL(Integer TTL) {
    this.TTL = TTL;
  }


  public ChangeResourceRecordSet resourceRecords(List resourceRecords) {
    this.resourceRecords = resourceRecords;
    return this;
  }

  /**
   * Get resourceRecords
   * @return resourceRecords
   */
  @javax.annotation.Nullable
  public List getResourceRecords() {
    return resourceRecords;
  }

  public void setResourceRecords(List resourceRecords) {
    this.resourceRecords = resourceRecords;
  }


  public ChangeResourceRecordSet aliasTarget(ResourceRecordSetAliasTarget aliasTarget) {
    this.aliasTarget = aliasTarget;
    return this;
  }

  /**
   * Get aliasTarget
   * @return aliasTarget
   */
  @javax.annotation.Nullable
  public ResourceRecordSetAliasTarget getAliasTarget() {
    return aliasTarget;
  }

  public void setAliasTarget(ResourceRecordSetAliasTarget aliasTarget) {
    this.aliasTarget = aliasTarget;
  }


  public ChangeResourceRecordSet healthCheckId(String healthCheckId) {
    this.healthCheckId = healthCheckId;
    return this;
  }

  /**
   * Get healthCheckId
   * @return healthCheckId
   */
  @javax.annotation.Nullable
  public String getHealthCheckId() {
    return healthCheckId;
  }

  public void setHealthCheckId(String healthCheckId) {
    this.healthCheckId = healthCheckId;
  }


  public ChangeResourceRecordSet trafficPolicyInstanceId(String trafficPolicyInstanceId) {
    this.trafficPolicyInstanceId = trafficPolicyInstanceId;
    return this;
  }

  /**
   * Get trafficPolicyInstanceId
   * @return trafficPolicyInstanceId
   */
  @javax.annotation.Nullable
  public String getTrafficPolicyInstanceId() {
    return trafficPolicyInstanceId;
  }

  public void setTrafficPolicyInstanceId(String trafficPolicyInstanceId) {
    this.trafficPolicyInstanceId = trafficPolicyInstanceId;
  }


  public ChangeResourceRecordSet cidrRoutingConfig(CidrRoutingConfig cidrRoutingConfig) {
    this.cidrRoutingConfig = cidrRoutingConfig;
    return this;
  }

  /**
   * Get cidrRoutingConfig
   * @return cidrRoutingConfig
   */
  @javax.annotation.Nullable
  public CidrRoutingConfig getCidrRoutingConfig() {
    return cidrRoutingConfig;
  }

  public void setCidrRoutingConfig(CidrRoutingConfig cidrRoutingConfig) {
    this.cidrRoutingConfig = cidrRoutingConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChangeResourceRecordSet changeResourceRecordSet = (ChangeResourceRecordSet) o;
    return Objects.equals(this.name, changeResourceRecordSet.name) &&
        Objects.equals(this.type, changeResourceRecordSet.type) &&
        Objects.equals(this.setIdentifier, changeResourceRecordSet.setIdentifier) &&
        Objects.equals(this.weight, changeResourceRecordSet.weight) &&
        Objects.equals(this.region, changeResourceRecordSet.region) &&
        Objects.equals(this.geoLocation, changeResourceRecordSet.geoLocation) &&
        Objects.equals(this.failover, changeResourceRecordSet.failover) &&
        Objects.equals(this.multiValueAnswer, changeResourceRecordSet.multiValueAnswer) &&
        Objects.equals(this.TTL, changeResourceRecordSet.TTL) &&
        Objects.equals(this.resourceRecords, changeResourceRecordSet.resourceRecords) &&
        Objects.equals(this.aliasTarget, changeResourceRecordSet.aliasTarget) &&
        Objects.equals(this.healthCheckId, changeResourceRecordSet.healthCheckId) &&
        Objects.equals(this.trafficPolicyInstanceId, changeResourceRecordSet.trafficPolicyInstanceId) &&
        Objects.equals(this.cidrRoutingConfig, changeResourceRecordSet.cidrRoutingConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, setIdentifier, weight, region, geoLocation, failover, multiValueAnswer, TTL, resourceRecords, aliasTarget, healthCheckId, trafficPolicyInstanceId, cidrRoutingConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChangeResourceRecordSet {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    setIdentifier: ").append(toIndentedString(setIdentifier)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    geoLocation: ").append(toIndentedString(geoLocation)).append("\n");
    sb.append("    failover: ").append(toIndentedString(failover)).append("\n");
    sb.append("    multiValueAnswer: ").append(toIndentedString(multiValueAnswer)).append("\n");
    sb.append("    TTL: ").append(toIndentedString(TTL)).append("\n");
    sb.append("    resourceRecords: ").append(toIndentedString(resourceRecords)).append("\n");
    sb.append("    aliasTarget: ").append(toIndentedString(aliasTarget)).append("\n");
    sb.append("    healthCheckId: ").append(toIndentedString(healthCheckId)).append("\n");
    sb.append("    trafficPolicyInstanceId: ").append(toIndentedString(trafficPolicyInstanceId)).append("\n");
    sb.append("    cidrRoutingConfig: ").append(toIndentedString(cidrRoutingConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Name");
    openapiFields.add("Type");
    openapiFields.add("SetIdentifier");
    openapiFields.add("Weight");
    openapiFields.add("Region");
    openapiFields.add("GeoLocation");
    openapiFields.add("Failover");
    openapiFields.add("MultiValueAnswer");
    openapiFields.add("TTL");
    openapiFields.add("ResourceRecords");
    openapiFields.add("AliasTarget");
    openapiFields.add("HealthCheckId");
    openapiFields.add("TrafficPolicyInstanceId");
    openapiFields.add("CidrRoutingConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Name");
    openapiRequiredFields.add("Type");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ChangeResourceRecordSet
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ChangeResourceRecordSet.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ChangeResourceRecordSet is not found in the empty JSON string", ChangeResourceRecordSet.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ChangeResourceRecordSet.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ChangeResourceRecordSet` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ChangeResourceRecordSet.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `Name`
      String.validateJsonElement(jsonObj.get("Name"));
      // validate the required field `Type`
      RRType.validateJsonElement(jsonObj.get("Type"));
      // validate the optional field `SetIdentifier`
      if (jsonObj.get("SetIdentifier") != null && !jsonObj.get("SetIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SetIdentifier"));
      }
      // validate the optional field `Weight`
      if (jsonObj.get("Weight") != null && !jsonObj.get("Weight").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Weight"));
      }
      // validate the optional field `Region`
      if (jsonObj.get("Region") != null && !jsonObj.get("Region").isJsonNull()) {
        ResourceRecordSetRegion.validateJsonElement(jsonObj.get("Region"));
      }
      // validate the optional field `GeoLocation`
      if (jsonObj.get("GeoLocation") != null && !jsonObj.get("GeoLocation").isJsonNull()) {
        ResourceRecordSetGeoLocation.validateJsonElement(jsonObj.get("GeoLocation"));
      }
      // validate the optional field `Failover`
      if (jsonObj.get("Failover") != null && !jsonObj.get("Failover").isJsonNull()) {
        ResourceRecordSetFailover.validateJsonElement(jsonObj.get("Failover"));
      }
      // validate the optional field `MultiValueAnswer`
      if (jsonObj.get("MultiValueAnswer") != null && !jsonObj.get("MultiValueAnswer").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("MultiValueAnswer"));
      }
      // validate the optional field `TTL`
      if (jsonObj.get("TTL") != null && !jsonObj.get("TTL").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TTL"));
      }
      // validate the optional field `ResourceRecords`
      if (jsonObj.get("ResourceRecords") != null && !jsonObj.get("ResourceRecords").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ResourceRecords"));
      }
      // validate the optional field `AliasTarget`
      if (jsonObj.get("AliasTarget") != null && !jsonObj.get("AliasTarget").isJsonNull()) {
        ResourceRecordSetAliasTarget.validateJsonElement(jsonObj.get("AliasTarget"));
      }
      // validate the optional field `HealthCheckId`
      if (jsonObj.get("HealthCheckId") != null && !jsonObj.get("HealthCheckId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HealthCheckId"));
      }
      // validate the optional field `TrafficPolicyInstanceId`
      if (jsonObj.get("TrafficPolicyInstanceId") != null && !jsonObj.get("TrafficPolicyInstanceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TrafficPolicyInstanceId"));
      }
      // validate the optional field `CidrRoutingConfig`
      if (jsonObj.get("CidrRoutingConfig") != null && !jsonObj.get("CidrRoutingConfig").isJsonNull()) {
        CidrRoutingConfig.validateJsonElement(jsonObj.get("CidrRoutingConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ChangeResourceRecordSet.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ChangeResourceRecordSet' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ChangeResourceRecordSet> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ChangeResourceRecordSet.class));

       return (TypeAdapter<T>) new TypeAdapter<ChangeResourceRecordSet>() {
           @Override
           public void write(JsonWriter out, ChangeResourceRecordSet value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ChangeResourceRecordSet read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ChangeResourceRecordSet given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ChangeResourceRecordSet
   * @throws IOException if the JSON string is invalid with respect to ChangeResourceRecordSet
   */
  public static ChangeResourceRecordSet fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ChangeResourceRecordSet.class);
  }

  /**
   * Convert an instance of ChangeResourceRecordSet to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

