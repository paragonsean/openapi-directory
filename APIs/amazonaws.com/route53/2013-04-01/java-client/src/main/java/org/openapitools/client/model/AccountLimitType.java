/*
 * Amazon Route 53
 * <p>Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service.</p> <p>You can use Route 53 to:</p> <ul> <li> <p>Register domain names.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-domain-registration.html\">How domain registration works</a>.</p> </li> <li> <p>Route internet traffic to the resources for your domain</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html\">How internet traffic is routed to your website or web application</a>.</p> </li> <li> <p>Check the health of your resources.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-health-checks.html\">How Route 53 checks the health of your resources</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2013-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets AccountLimitType
 */
@JsonAdapter(AccountLimitType.Adapter.class)
public enum AccountLimitType {
  
  HEALTH_CHECKS_BY_OWNER("MAX_HEALTH_CHECKS_BY_OWNER"),
  
  HOSTED_ZONES_BY_OWNER("MAX_HOSTED_ZONES_BY_OWNER"),
  
  TRAFFIC_POLICY_INSTANCES_BY_OWNER("MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER"),
  
  REUSABLE_DELEGATION_SETS_BY_OWNER("MAX_REUSABLE_DELEGATION_SETS_BY_OWNER"),
  
  TRAFFIC_POLICIES_BY_OWNER("MAX_TRAFFIC_POLICIES_BY_OWNER");

  private String value;

  AccountLimitType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static AccountLimitType fromValue(String value) {
    for (AccountLimitType b : AccountLimitType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<AccountLimitType> {
    @Override
    public void write(final JsonWriter jsonWriter, final AccountLimitType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AccountLimitType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return AccountLimitType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    AccountLimitType.fromValue(value);
  }
}

