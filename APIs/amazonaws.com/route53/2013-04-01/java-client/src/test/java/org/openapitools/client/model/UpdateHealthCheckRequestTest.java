/*
 * Amazon Route 53
 * <p>Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service.</p> <p>You can use Route 53 to:</p> <ul> <li> <p>Register domain names.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-domain-registration.html\">How domain registration works</a>.</p> </li> <li> <p>Route internet traffic to the resources for your domain</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html\">How internet traffic is routed to your website or web application</a>.</p> </li> <li> <p>Check the health of your resources.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-health-checks.html\">How Route 53 checks the health of your resources</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2013-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.HealthCheckRegion;
import org.openapitools.client.model.ResettableElementName;
import org.openapitools.client.model.UpdateHealthCheckRequestAlarmIdentifier;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateHealthCheckRequest
 */
public class UpdateHealthCheckRequestTest {
    private final UpdateHealthCheckRequest model = new UpdateHealthCheckRequest();

    /**
     * Model tests for UpdateHealthCheckRequest
     */
    @Test
    public void testUpdateHealthCheckRequest() {
        // TODO: test UpdateHealthCheckRequest
    }

    /**
     * Test the property 'healthCheckVersion'
     */
    @Test
    public void healthCheckVersionTest() {
        // TODO: test healthCheckVersion
    }

    /**
     * Test the property 'ipAddress'
     */
    @Test
    public void ipAddressTest() {
        // TODO: test ipAddress
    }

    /**
     * Test the property 'port'
     */
    @Test
    public void portTest() {
        // TODO: test port
    }

    /**
     * Test the property 'resourcePath'
     */
    @Test
    public void resourcePathTest() {
        // TODO: test resourcePath
    }

    /**
     * Test the property 'fullyQualifiedDomainName'
     */
    @Test
    public void fullyQualifiedDomainNameTest() {
        // TODO: test fullyQualifiedDomainName
    }

    /**
     * Test the property 'searchString'
     */
    @Test
    public void searchStringTest() {
        // TODO: test searchString
    }

    /**
     * Test the property 'failureThreshold'
     */
    @Test
    public void failureThresholdTest() {
        // TODO: test failureThreshold
    }

    /**
     * Test the property 'inverted'
     */
    @Test
    public void invertedTest() {
        // TODO: test inverted
    }

    /**
     * Test the property 'disabled'
     */
    @Test
    public void disabledTest() {
        // TODO: test disabled
    }

    /**
     * Test the property 'healthThreshold'
     */
    @Test
    public void healthThresholdTest() {
        // TODO: test healthThreshold
    }

    /**
     * Test the property 'childHealthChecks'
     */
    @Test
    public void childHealthChecksTest() {
        // TODO: test childHealthChecks
    }

    /**
     * Test the property 'enableSNI'
     */
    @Test
    public void enableSNITest() {
        // TODO: test enableSNI
    }

    /**
     * Test the property 'regions'
     */
    @Test
    public void regionsTest() {
        // TODO: test regions
    }

    /**
     * Test the property 'alarmIdentifier'
     */
    @Test
    public void alarmIdentifierTest() {
        // TODO: test alarmIdentifier
    }

    /**
     * Test the property 'insufficientDataHealthStatus'
     */
    @Test
    public void insufficientDataHealthStatusTest() {
        // TODO: test insufficientDataHealthStatus
    }

    /**
     * Test the property 'resetElements'
     */
    @Test
    public void resetElementsTest() {
        // TODO: test resetElements
    }

}
