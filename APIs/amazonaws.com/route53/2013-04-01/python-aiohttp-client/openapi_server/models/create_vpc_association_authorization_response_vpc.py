# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vpc_region import VPCRegion
from openapi_server import util


class CreateVPCAssociationAuthorizationResponseVPC(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vpc_region: VPCRegion=None, vpcid: str=None):
        """CreateVPCAssociationAuthorizationResponseVPC - a model defined in OpenAPI

        :param vpc_region: The vpc_region of this CreateVPCAssociationAuthorizationResponseVPC.
        :param vpcid: The vpcid of this CreateVPCAssociationAuthorizationResponseVPC.
        """
        self.openapi_types = {
            'vpc_region': VPCRegion,
            'vpcid': str
        }

        self.attribute_map = {
            'vpc_region': 'VPCRegion',
            'vpcid': 'VPCId'
        }

        self._vpc_region = vpc_region
        self._vpcid = vpcid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateVPCAssociationAuthorizationResponseVPC':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateVPCAssociationAuthorizationResponse_VPC of this CreateVPCAssociationAuthorizationResponseVPC.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vpc_region(self):
        """Gets the vpc_region of this CreateVPCAssociationAuthorizationResponseVPC.


        :return: The vpc_region of this CreateVPCAssociationAuthorizationResponseVPC.
        :rtype: VPCRegion
        """
        return self._vpc_region

    @vpc_region.setter
    def vpc_region(self, vpc_region):
        """Sets the vpc_region of this CreateVPCAssociationAuthorizationResponseVPC.


        :param vpc_region: The vpc_region of this CreateVPCAssociationAuthorizationResponseVPC.
        :type vpc_region: VPCRegion
        """

        self._vpc_region = vpc_region

    @property
    def vpcid(self):
        """Gets the vpcid of this CreateVPCAssociationAuthorizationResponseVPC.

        (Private hosted zones only) The ID of an Amazon VPC. 

        :return: The vpcid of this CreateVPCAssociationAuthorizationResponseVPC.
        :rtype: str
        """
        return self._vpcid

    @vpcid.setter
    def vpcid(self, vpcid):
        """Sets the vpcid of this CreateVPCAssociationAuthorizationResponseVPC.

        (Private hosted zones only) The ID of an Amazon VPC. 

        :param vpcid: The vpcid of this CreateVPCAssociationAuthorizationResponseVPC.
        :type vpcid: str
        """
        if vpcid is not None and len(vpcid) > 1024:
            raise ValueError("Invalid value for `vpcid`, length must be less than or equal to `1024`")

        self._vpcid = vpcid
