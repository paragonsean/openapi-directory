# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_hosted_zone_response_delegation_set import GetHostedZoneResponseDelegationSet
from openapi_server.models.get_hosted_zone_response_hosted_zone import GetHostedZoneResponseHostedZone
from openapi_server import util


class GetHostedZoneResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hosted_zone: GetHostedZoneResponseHostedZone=None, delegation_set: GetHostedZoneResponseDelegationSet=None, vpcs: List=None):
        """GetHostedZoneResponse - a model defined in OpenAPI

        :param hosted_zone: The hosted_zone of this GetHostedZoneResponse.
        :param delegation_set: The delegation_set of this GetHostedZoneResponse.
        :param vpcs: The vpcs of this GetHostedZoneResponse.
        """
        self.openapi_types = {
            'hosted_zone': GetHostedZoneResponseHostedZone,
            'delegation_set': GetHostedZoneResponseDelegationSet,
            'vpcs': List
        }

        self.attribute_map = {
            'hosted_zone': 'HostedZone',
            'delegation_set': 'DelegationSet',
            'vpcs': 'VPCs'
        }

        self._hosted_zone = hosted_zone
        self._delegation_set = delegation_set
        self._vpcs = vpcs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetHostedZoneResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetHostedZoneResponse of this GetHostedZoneResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hosted_zone(self):
        """Gets the hosted_zone of this GetHostedZoneResponse.


        :return: The hosted_zone of this GetHostedZoneResponse.
        :rtype: GetHostedZoneResponseHostedZone
        """
        return self._hosted_zone

    @hosted_zone.setter
    def hosted_zone(self, hosted_zone):
        """Sets the hosted_zone of this GetHostedZoneResponse.


        :param hosted_zone: The hosted_zone of this GetHostedZoneResponse.
        :type hosted_zone: GetHostedZoneResponseHostedZone
        """
        if hosted_zone is None:
            raise ValueError("Invalid value for `hosted_zone`, must not be `None`")

        self._hosted_zone = hosted_zone

    @property
    def delegation_set(self):
        """Gets the delegation_set of this GetHostedZoneResponse.


        :return: The delegation_set of this GetHostedZoneResponse.
        :rtype: GetHostedZoneResponseDelegationSet
        """
        return self._delegation_set

    @delegation_set.setter
    def delegation_set(self, delegation_set):
        """Sets the delegation_set of this GetHostedZoneResponse.


        :param delegation_set: The delegation_set of this GetHostedZoneResponse.
        :type delegation_set: GetHostedZoneResponseDelegationSet
        """

        self._delegation_set = delegation_set

    @property
    def vpcs(self):
        """Gets the vpcs of this GetHostedZoneResponse.


        :return: The vpcs of this GetHostedZoneResponse.
        :rtype: List
        """
        return self._vpcs

    @vpcs.setter
    def vpcs(self, vpcs):
        """Sets the vpcs of this GetHostedZoneResponse.


        :param vpcs: The vpcs of this GetHostedZoneResponse.
        :type vpcs: List
        """

        self._vpcs = vpcs
