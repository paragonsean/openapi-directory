# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetGeoLocationResponseGeoLocationDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, continent_code: str=None, continent_name: str=None, country_code: str=None, country_name: str=None, subdivision_code: str=None, subdivision_name: str=None):
        """GetGeoLocationResponseGeoLocationDetails - a model defined in OpenAPI

        :param continent_code: The continent_code of this GetGeoLocationResponseGeoLocationDetails.
        :param continent_name: The continent_name of this GetGeoLocationResponseGeoLocationDetails.
        :param country_code: The country_code of this GetGeoLocationResponseGeoLocationDetails.
        :param country_name: The country_name of this GetGeoLocationResponseGeoLocationDetails.
        :param subdivision_code: The subdivision_code of this GetGeoLocationResponseGeoLocationDetails.
        :param subdivision_name: The subdivision_name of this GetGeoLocationResponseGeoLocationDetails.
        """
        self.openapi_types = {
            'continent_code': str,
            'continent_name': str,
            'country_code': str,
            'country_name': str,
            'subdivision_code': str,
            'subdivision_name': str
        }

        self.attribute_map = {
            'continent_code': 'ContinentCode',
            'continent_name': 'ContinentName',
            'country_code': 'CountryCode',
            'country_name': 'CountryName',
            'subdivision_code': 'SubdivisionCode',
            'subdivision_name': 'SubdivisionName'
        }

        self._continent_code = continent_code
        self._continent_name = continent_name
        self._country_code = country_code
        self._country_name = country_name
        self._subdivision_code = subdivision_code
        self._subdivision_name = subdivision_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetGeoLocationResponseGeoLocationDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetGeoLocationResponse_GeoLocationDetails of this GetGeoLocationResponseGeoLocationDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def continent_code(self):
        """Gets the continent_code of this GetGeoLocationResponseGeoLocationDetails.


        :return: The continent_code of this GetGeoLocationResponseGeoLocationDetails.
        :rtype: str
        """
        return self._continent_code

    @continent_code.setter
    def continent_code(self, continent_code):
        """Sets the continent_code of this GetGeoLocationResponseGeoLocationDetails.


        :param continent_code: The continent_code of this GetGeoLocationResponseGeoLocationDetails.
        :type continent_code: str
        """

        self._continent_code = continent_code

    @property
    def continent_name(self):
        """Gets the continent_name of this GetGeoLocationResponseGeoLocationDetails.


        :return: The continent_name of this GetGeoLocationResponseGeoLocationDetails.
        :rtype: str
        """
        return self._continent_name

    @continent_name.setter
    def continent_name(self, continent_name):
        """Sets the continent_name of this GetGeoLocationResponseGeoLocationDetails.


        :param continent_name: The continent_name of this GetGeoLocationResponseGeoLocationDetails.
        :type continent_name: str
        """

        self._continent_name = continent_name

    @property
    def country_code(self):
        """Gets the country_code of this GetGeoLocationResponseGeoLocationDetails.


        :return: The country_code of this GetGeoLocationResponseGeoLocationDetails.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this GetGeoLocationResponseGeoLocationDetails.


        :param country_code: The country_code of this GetGeoLocationResponseGeoLocationDetails.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def country_name(self):
        """Gets the country_name of this GetGeoLocationResponseGeoLocationDetails.


        :return: The country_name of this GetGeoLocationResponseGeoLocationDetails.
        :rtype: str
        """
        return self._country_name

    @country_name.setter
    def country_name(self, country_name):
        """Sets the country_name of this GetGeoLocationResponseGeoLocationDetails.


        :param country_name: The country_name of this GetGeoLocationResponseGeoLocationDetails.
        :type country_name: str
        """

        self._country_name = country_name

    @property
    def subdivision_code(self):
        """Gets the subdivision_code of this GetGeoLocationResponseGeoLocationDetails.


        :return: The subdivision_code of this GetGeoLocationResponseGeoLocationDetails.
        :rtype: str
        """
        return self._subdivision_code

    @subdivision_code.setter
    def subdivision_code(self, subdivision_code):
        """Sets the subdivision_code of this GetGeoLocationResponseGeoLocationDetails.


        :param subdivision_code: The subdivision_code of this GetGeoLocationResponseGeoLocationDetails.
        :type subdivision_code: str
        """

        self._subdivision_code = subdivision_code

    @property
    def subdivision_name(self):
        """Gets the subdivision_name of this GetGeoLocationResponseGeoLocationDetails.


        :return: The subdivision_name of this GetGeoLocationResponseGeoLocationDetails.
        :rtype: str
        """
        return self._subdivision_name

    @subdivision_name.setter
    def subdivision_name(self, subdivision_name):
        """Sets the subdivision_name of this GetGeoLocationResponseGeoLocationDetails.


        :param subdivision_name: The subdivision_name of this GetGeoLocationResponseGeoLocationDetails.
        :type subdivision_name: str
        """

        self._subdivision_name = subdivision_name
