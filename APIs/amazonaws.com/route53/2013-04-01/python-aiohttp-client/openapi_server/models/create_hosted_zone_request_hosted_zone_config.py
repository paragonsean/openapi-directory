# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateHostedZoneRequestHostedZoneConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment: str=None, private_zone: bool=None):
        """CreateHostedZoneRequestHostedZoneConfig - a model defined in OpenAPI

        :param comment: The comment of this CreateHostedZoneRequestHostedZoneConfig.
        :param private_zone: The private_zone of this CreateHostedZoneRequestHostedZoneConfig.
        """
        self.openapi_types = {
            'comment': str,
            'private_zone': bool
        }

        self.attribute_map = {
            'comment': 'Comment',
            'private_zone': 'PrivateZone'
        }

        self._comment = comment
        self._private_zone = private_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateHostedZoneRequestHostedZoneConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateHostedZoneRequest_HostedZoneConfig of this CreateHostedZoneRequestHostedZoneConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment(self):
        """Gets the comment of this CreateHostedZoneRequestHostedZoneConfig.


        :return: The comment of this CreateHostedZoneRequestHostedZoneConfig.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this CreateHostedZoneRequestHostedZoneConfig.


        :param comment: The comment of this CreateHostedZoneRequestHostedZoneConfig.
        :type comment: str
        """

        self._comment = comment

    @property
    def private_zone(self):
        """Gets the private_zone of this CreateHostedZoneRequestHostedZoneConfig.


        :return: The private_zone of this CreateHostedZoneRequestHostedZoneConfig.
        :rtype: bool
        """
        return self._private_zone

    @private_zone.setter
    def private_zone(self, private_zone):
        """Sets the private_zone of this CreateHostedZoneRequestHostedZoneConfig.


        :param private_zone: The private_zone of this CreateHostedZoneRequestHostedZoneConfig.
        :type private_zone: bool
        """

        self._private_zone = private_zone
