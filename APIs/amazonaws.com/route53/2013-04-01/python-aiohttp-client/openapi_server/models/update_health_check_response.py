# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_health_check_response_health_check import UpdateHealthCheckResponseHealthCheck
from openapi_server import util


class UpdateHealthCheckResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, health_check: UpdateHealthCheckResponseHealthCheck=None):
        """UpdateHealthCheckResponse - a model defined in OpenAPI

        :param health_check: The health_check of this UpdateHealthCheckResponse.
        """
        self.openapi_types = {
            'health_check': UpdateHealthCheckResponseHealthCheck
        }

        self.attribute_map = {
            'health_check': 'HealthCheck'
        }

        self._health_check = health_check

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateHealthCheckResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateHealthCheckResponse of this UpdateHealthCheckResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def health_check(self):
        """Gets the health_check of this UpdateHealthCheckResponse.


        :return: The health_check of this UpdateHealthCheckResponse.
        :rtype: UpdateHealthCheckResponseHealthCheck
        """
        return self._health_check

    @health_check.setter
    def health_check(self, health_check):
        """Sets the health_check of this UpdateHealthCheckResponse.


        :param health_check: The health_check of this UpdateHealthCheckResponse.
        :type health_check: UpdateHealthCheckResponseHealthCheck
        """
        if health_check is None:
            raise ValueError("Invalid value for `health_check`, must not be `None`")

        self._health_check = health_check
