# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetHostedZoneCountResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hosted_zone_count: int=None):
        """GetHostedZoneCountResponse - a model defined in OpenAPI

        :param hosted_zone_count: The hosted_zone_count of this GetHostedZoneCountResponse.
        """
        self.openapi_types = {
            'hosted_zone_count': int
        }

        self.attribute_map = {
            'hosted_zone_count': 'HostedZoneCount'
        }

        self._hosted_zone_count = hosted_zone_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetHostedZoneCountResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetHostedZoneCountResponse of this GetHostedZoneCountResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hosted_zone_count(self):
        """Gets the hosted_zone_count of this GetHostedZoneCountResponse.


        :return: The hosted_zone_count of this GetHostedZoneCountResponse.
        :rtype: int
        """
        return self._hosted_zone_count

    @hosted_zone_count.setter
    def hosted_zone_count(self, hosted_zone_count):
        """Sets the hosted_zone_count of this GetHostedZoneCountResponse.


        :param hosted_zone_count: The hosted_zone_count of this GetHostedZoneCountResponse.
        :type hosted_zone_count: int
        """
        if hosted_zone_count is None:
            raise ValueError("Invalid value for `hosted_zone_count`, must not be `None`")

        self._hosted_zone_count = hosted_zone_count
