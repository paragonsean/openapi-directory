# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rr_type import RRType
from openapi_server import util


class ListTrafficPolicyInstancesByHostedZoneResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, traffic_policy_instances: List=None, traffic_policy_instance_name_marker: str=None, traffic_policy_instance_type_marker: RRType=None, is_truncated: bool=None, max_items: str=None):
        """ListTrafficPolicyInstancesByHostedZoneResponse - a model defined in OpenAPI

        :param traffic_policy_instances: The traffic_policy_instances of this ListTrafficPolicyInstancesByHostedZoneResponse.
        :param traffic_policy_instance_name_marker: The traffic_policy_instance_name_marker of this ListTrafficPolicyInstancesByHostedZoneResponse.
        :param traffic_policy_instance_type_marker: The traffic_policy_instance_type_marker of this ListTrafficPolicyInstancesByHostedZoneResponse.
        :param is_truncated: The is_truncated of this ListTrafficPolicyInstancesByHostedZoneResponse.
        :param max_items: The max_items of this ListTrafficPolicyInstancesByHostedZoneResponse.
        """
        self.openapi_types = {
            'traffic_policy_instances': List,
            'traffic_policy_instance_name_marker': str,
            'traffic_policy_instance_type_marker': RRType,
            'is_truncated': bool,
            'max_items': str
        }

        self.attribute_map = {
            'traffic_policy_instances': 'TrafficPolicyInstances',
            'traffic_policy_instance_name_marker': 'TrafficPolicyInstanceNameMarker',
            'traffic_policy_instance_type_marker': 'TrafficPolicyInstanceTypeMarker',
            'is_truncated': 'IsTruncated',
            'max_items': 'MaxItems'
        }

        self._traffic_policy_instances = traffic_policy_instances
        self._traffic_policy_instance_name_marker = traffic_policy_instance_name_marker
        self._traffic_policy_instance_type_marker = traffic_policy_instance_type_marker
        self._is_truncated = is_truncated
        self._max_items = max_items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListTrafficPolicyInstancesByHostedZoneResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListTrafficPolicyInstancesByHostedZoneResponse of this ListTrafficPolicyInstancesByHostedZoneResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def traffic_policy_instances(self):
        """Gets the traffic_policy_instances of this ListTrafficPolicyInstancesByHostedZoneResponse.


        :return: The traffic_policy_instances of this ListTrafficPolicyInstancesByHostedZoneResponse.
        :rtype: List
        """
        return self._traffic_policy_instances

    @traffic_policy_instances.setter
    def traffic_policy_instances(self, traffic_policy_instances):
        """Sets the traffic_policy_instances of this ListTrafficPolicyInstancesByHostedZoneResponse.


        :param traffic_policy_instances: The traffic_policy_instances of this ListTrafficPolicyInstancesByHostedZoneResponse.
        :type traffic_policy_instances: List
        """
        if traffic_policy_instances is None:
            raise ValueError("Invalid value for `traffic_policy_instances`, must not be `None`")

        self._traffic_policy_instances = traffic_policy_instances

    @property
    def traffic_policy_instance_name_marker(self):
        """Gets the traffic_policy_instance_name_marker of this ListTrafficPolicyInstancesByHostedZoneResponse.


        :return: The traffic_policy_instance_name_marker of this ListTrafficPolicyInstancesByHostedZoneResponse.
        :rtype: str
        """
        return self._traffic_policy_instance_name_marker

    @traffic_policy_instance_name_marker.setter
    def traffic_policy_instance_name_marker(self, traffic_policy_instance_name_marker):
        """Sets the traffic_policy_instance_name_marker of this ListTrafficPolicyInstancesByHostedZoneResponse.


        :param traffic_policy_instance_name_marker: The traffic_policy_instance_name_marker of this ListTrafficPolicyInstancesByHostedZoneResponse.
        :type traffic_policy_instance_name_marker: str
        """

        self._traffic_policy_instance_name_marker = traffic_policy_instance_name_marker

    @property
    def traffic_policy_instance_type_marker(self):
        """Gets the traffic_policy_instance_type_marker of this ListTrafficPolicyInstancesByHostedZoneResponse.


        :return: The traffic_policy_instance_type_marker of this ListTrafficPolicyInstancesByHostedZoneResponse.
        :rtype: RRType
        """
        return self._traffic_policy_instance_type_marker

    @traffic_policy_instance_type_marker.setter
    def traffic_policy_instance_type_marker(self, traffic_policy_instance_type_marker):
        """Sets the traffic_policy_instance_type_marker of this ListTrafficPolicyInstancesByHostedZoneResponse.


        :param traffic_policy_instance_type_marker: The traffic_policy_instance_type_marker of this ListTrafficPolicyInstancesByHostedZoneResponse.
        :type traffic_policy_instance_type_marker: RRType
        """

        self._traffic_policy_instance_type_marker = traffic_policy_instance_type_marker

    @property
    def is_truncated(self):
        """Gets the is_truncated of this ListTrafficPolicyInstancesByHostedZoneResponse.


        :return: The is_truncated of this ListTrafficPolicyInstancesByHostedZoneResponse.
        :rtype: bool
        """
        return self._is_truncated

    @is_truncated.setter
    def is_truncated(self, is_truncated):
        """Sets the is_truncated of this ListTrafficPolicyInstancesByHostedZoneResponse.


        :param is_truncated: The is_truncated of this ListTrafficPolicyInstancesByHostedZoneResponse.
        :type is_truncated: bool
        """
        if is_truncated is None:
            raise ValueError("Invalid value for `is_truncated`, must not be `None`")

        self._is_truncated = is_truncated

    @property
    def max_items(self):
        """Gets the max_items of this ListTrafficPolicyInstancesByHostedZoneResponse.


        :return: The max_items of this ListTrafficPolicyInstancesByHostedZoneResponse.
        :rtype: str
        """
        return self._max_items

    @max_items.setter
    def max_items(self, max_items):
        """Sets the max_items of this ListTrafficPolicyInstancesByHostedZoneResponse.


        :param max_items: The max_items of this ListTrafficPolicyInstancesByHostedZoneResponse.
        :type max_items: str
        """
        if max_items is None:
            raise ValueError("Invalid value for `max_items`, must not be `None`")

        self._max_items = max_items
