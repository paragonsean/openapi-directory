# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_hosted_zone_response_change_info import CreateHostedZoneResponseChangeInfo
from openapi_server.models.create_hosted_zone_response_delegation_set import CreateHostedZoneResponseDelegationSet
from openapi_server.models.create_hosted_zone_response_hosted_zone import CreateHostedZoneResponseHostedZone
from openapi_server.models.create_hosted_zone_response_vpc import CreateHostedZoneResponseVPC
from openapi_server import util


class CreateHostedZoneResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hosted_zone: CreateHostedZoneResponseHostedZone=None, change_info: CreateHostedZoneResponseChangeInfo=None, delegation_set: CreateHostedZoneResponseDelegationSet=None, vpc: CreateHostedZoneResponseVPC=None):
        """CreateHostedZoneResponse - a model defined in OpenAPI

        :param hosted_zone: The hosted_zone of this CreateHostedZoneResponse.
        :param change_info: The change_info of this CreateHostedZoneResponse.
        :param delegation_set: The delegation_set of this CreateHostedZoneResponse.
        :param vpc: The vpc of this CreateHostedZoneResponse.
        """
        self.openapi_types = {
            'hosted_zone': CreateHostedZoneResponseHostedZone,
            'change_info': CreateHostedZoneResponseChangeInfo,
            'delegation_set': CreateHostedZoneResponseDelegationSet,
            'vpc': CreateHostedZoneResponseVPC
        }

        self.attribute_map = {
            'hosted_zone': 'HostedZone',
            'change_info': 'ChangeInfo',
            'delegation_set': 'DelegationSet',
            'vpc': 'VPC'
        }

        self._hosted_zone = hosted_zone
        self._change_info = change_info
        self._delegation_set = delegation_set
        self._vpc = vpc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateHostedZoneResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateHostedZoneResponse of this CreateHostedZoneResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hosted_zone(self):
        """Gets the hosted_zone of this CreateHostedZoneResponse.


        :return: The hosted_zone of this CreateHostedZoneResponse.
        :rtype: CreateHostedZoneResponseHostedZone
        """
        return self._hosted_zone

    @hosted_zone.setter
    def hosted_zone(self, hosted_zone):
        """Sets the hosted_zone of this CreateHostedZoneResponse.


        :param hosted_zone: The hosted_zone of this CreateHostedZoneResponse.
        :type hosted_zone: CreateHostedZoneResponseHostedZone
        """
        if hosted_zone is None:
            raise ValueError("Invalid value for `hosted_zone`, must not be `None`")

        self._hosted_zone = hosted_zone

    @property
    def change_info(self):
        """Gets the change_info of this CreateHostedZoneResponse.


        :return: The change_info of this CreateHostedZoneResponse.
        :rtype: CreateHostedZoneResponseChangeInfo
        """
        return self._change_info

    @change_info.setter
    def change_info(self, change_info):
        """Sets the change_info of this CreateHostedZoneResponse.


        :param change_info: The change_info of this CreateHostedZoneResponse.
        :type change_info: CreateHostedZoneResponseChangeInfo
        """
        if change_info is None:
            raise ValueError("Invalid value for `change_info`, must not be `None`")

        self._change_info = change_info

    @property
    def delegation_set(self):
        """Gets the delegation_set of this CreateHostedZoneResponse.


        :return: The delegation_set of this CreateHostedZoneResponse.
        :rtype: CreateHostedZoneResponseDelegationSet
        """
        return self._delegation_set

    @delegation_set.setter
    def delegation_set(self, delegation_set):
        """Sets the delegation_set of this CreateHostedZoneResponse.


        :param delegation_set: The delegation_set of this CreateHostedZoneResponse.
        :type delegation_set: CreateHostedZoneResponseDelegationSet
        """
        if delegation_set is None:
            raise ValueError("Invalid value for `delegation_set`, must not be `None`")

        self._delegation_set = delegation_set

    @property
    def vpc(self):
        """Gets the vpc of this CreateHostedZoneResponse.


        :return: The vpc of this CreateHostedZoneResponse.
        :rtype: CreateHostedZoneResponseVPC
        """
        return self._vpc

    @vpc.setter
    def vpc(self, vpc):
        """Sets the vpc of this CreateHostedZoneResponse.


        :param vpc: The vpc of this CreateHostedZoneResponse.
        :type vpc: CreateHostedZoneResponseVPC
        """

        self._vpc = vpc
