# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListTagsForResourcesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_tag_sets: List=None):
        """ListTagsForResourcesResponse - a model defined in OpenAPI

        :param resource_tag_sets: The resource_tag_sets of this ListTagsForResourcesResponse.
        """
        self.openapi_types = {
            'resource_tag_sets': List
        }

        self.attribute_map = {
            'resource_tag_sets': 'ResourceTagSets'
        }

        self._resource_tag_sets = resource_tag_sets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListTagsForResourcesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListTagsForResourcesResponse of this ListTagsForResourcesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_tag_sets(self):
        """Gets the resource_tag_sets of this ListTagsForResourcesResponse.


        :return: The resource_tag_sets of this ListTagsForResourcesResponse.
        :rtype: List
        """
        return self._resource_tag_sets

    @resource_tag_sets.setter
    def resource_tag_sets(self, resource_tag_sets):
        """Sets the resource_tag_sets of this ListTagsForResourcesResponse.


        :param resource_tag_sets: The resource_tag_sets of this ListTagsForResourcesResponse.
        :type resource_tag_sets: List
        """
        if resource_tag_sets is None:
            raise ValueError("Invalid value for `resource_tag_sets`, must not be `None`")

        self._resource_tag_sets = resource_tag_sets
