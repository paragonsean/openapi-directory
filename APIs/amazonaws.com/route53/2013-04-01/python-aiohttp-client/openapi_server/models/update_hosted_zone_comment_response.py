# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_hosted_zone_comment_response_hosted_zone import UpdateHostedZoneCommentResponseHostedZone
from openapi_server import util


class UpdateHostedZoneCommentResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hosted_zone: UpdateHostedZoneCommentResponseHostedZone=None):
        """UpdateHostedZoneCommentResponse - a model defined in OpenAPI

        :param hosted_zone: The hosted_zone of this UpdateHostedZoneCommentResponse.
        """
        self.openapi_types = {
            'hosted_zone': UpdateHostedZoneCommentResponseHostedZone
        }

        self.attribute_map = {
            'hosted_zone': 'HostedZone'
        }

        self._hosted_zone = hosted_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateHostedZoneCommentResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateHostedZoneCommentResponse of this UpdateHostedZoneCommentResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hosted_zone(self):
        """Gets the hosted_zone of this UpdateHostedZoneCommentResponse.


        :return: The hosted_zone of this UpdateHostedZoneCommentResponse.
        :rtype: UpdateHostedZoneCommentResponseHostedZone
        """
        return self._hosted_zone

    @hosted_zone.setter
    def hosted_zone(self, hosted_zone):
        """Sets the hosted_zone of this UpdateHostedZoneCommentResponse.


        :param hosted_zone: The hosted_zone of this UpdateHostedZoneCommentResponse.
        :type hosted_zone: UpdateHostedZoneCommentResponseHostedZone
        """
        if hosted_zone is None:
            raise ValueError("Invalid value for `hosted_zone`, must not be `None`")

        self._hosted_zone = hosted_zone
