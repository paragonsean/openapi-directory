# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListHostedZonesByVPCResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hosted_zone_summaries: List=None, max_items: str=None, next_token: str=None):
        """ListHostedZonesByVPCResponse - a model defined in OpenAPI

        :param hosted_zone_summaries: The hosted_zone_summaries of this ListHostedZonesByVPCResponse.
        :param max_items: The max_items of this ListHostedZonesByVPCResponse.
        :param next_token: The next_token of this ListHostedZonesByVPCResponse.
        """
        self.openapi_types = {
            'hosted_zone_summaries': List,
            'max_items': str,
            'next_token': str
        }

        self.attribute_map = {
            'hosted_zone_summaries': 'HostedZoneSummaries',
            'max_items': 'MaxItems',
            'next_token': 'NextToken'
        }

        self._hosted_zone_summaries = hosted_zone_summaries
        self._max_items = max_items
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListHostedZonesByVPCResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListHostedZonesByVPCResponse of this ListHostedZonesByVPCResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hosted_zone_summaries(self):
        """Gets the hosted_zone_summaries of this ListHostedZonesByVPCResponse.


        :return: The hosted_zone_summaries of this ListHostedZonesByVPCResponse.
        :rtype: List
        """
        return self._hosted_zone_summaries

    @hosted_zone_summaries.setter
    def hosted_zone_summaries(self, hosted_zone_summaries):
        """Sets the hosted_zone_summaries of this ListHostedZonesByVPCResponse.


        :param hosted_zone_summaries: The hosted_zone_summaries of this ListHostedZonesByVPCResponse.
        :type hosted_zone_summaries: List
        """
        if hosted_zone_summaries is None:
            raise ValueError("Invalid value for `hosted_zone_summaries`, must not be `None`")

        self._hosted_zone_summaries = hosted_zone_summaries

    @property
    def max_items(self):
        """Gets the max_items of this ListHostedZonesByVPCResponse.


        :return: The max_items of this ListHostedZonesByVPCResponse.
        :rtype: str
        """
        return self._max_items

    @max_items.setter
    def max_items(self, max_items):
        """Sets the max_items of this ListHostedZonesByVPCResponse.


        :param max_items: The max_items of this ListHostedZonesByVPCResponse.
        :type max_items: str
        """
        if max_items is None:
            raise ValueError("Invalid value for `max_items`, must not be `None`")

        self._max_items = max_items

    @property
    def next_token(self):
        """Gets the next_token of this ListHostedZonesByVPCResponse.


        :return: The next_token of this ListHostedZonesByVPCResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListHostedZonesByVPCResponse.


        :param next_token: The next_token of this ListHostedZonesByVPCResponse.
        :type next_token: str
        """

        self._next_token = next_token
