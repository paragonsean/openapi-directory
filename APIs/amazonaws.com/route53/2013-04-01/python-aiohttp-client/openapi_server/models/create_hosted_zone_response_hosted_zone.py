# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hosted_zone_config import HostedZoneConfig
from openapi_server.models.hosted_zone_linked_service import HostedZoneLinkedService
from openapi_server import util


class CreateHostedZoneResponseHostedZone(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, caller_reference: str=None, config: HostedZoneConfig=None, resource_record_set_count: int=None, linked_service: HostedZoneLinkedService=None):
        """CreateHostedZoneResponseHostedZone - a model defined in OpenAPI

        :param id: The id of this CreateHostedZoneResponseHostedZone.
        :param name: The name of this CreateHostedZoneResponseHostedZone.
        :param caller_reference: The caller_reference of this CreateHostedZoneResponseHostedZone.
        :param config: The config of this CreateHostedZoneResponseHostedZone.
        :param resource_record_set_count: The resource_record_set_count of this CreateHostedZoneResponseHostedZone.
        :param linked_service: The linked_service of this CreateHostedZoneResponseHostedZone.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'caller_reference': str,
            'config': HostedZoneConfig,
            'resource_record_set_count': int,
            'linked_service': HostedZoneLinkedService
        }

        self.attribute_map = {
            'id': 'Id',
            'name': 'Name',
            'caller_reference': 'CallerReference',
            'config': 'Config',
            'resource_record_set_count': 'ResourceRecordSetCount',
            'linked_service': 'LinkedService'
        }

        self._id = id
        self._name = name
        self._caller_reference = caller_reference
        self._config = config
        self._resource_record_set_count = resource_record_set_count
        self._linked_service = linked_service

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateHostedZoneResponseHostedZone':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateHostedZoneResponse_HostedZone of this CreateHostedZoneResponseHostedZone.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this CreateHostedZoneResponseHostedZone.


        :return: The id of this CreateHostedZoneResponseHostedZone.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CreateHostedZoneResponseHostedZone.


        :param id: The id of this CreateHostedZoneResponseHostedZone.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def name(self):
        """Gets the name of this CreateHostedZoneResponseHostedZone.


        :return: The name of this CreateHostedZoneResponseHostedZone.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateHostedZoneResponseHostedZone.


        :param name: The name of this CreateHostedZoneResponseHostedZone.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def caller_reference(self):
        """Gets the caller_reference of this CreateHostedZoneResponseHostedZone.


        :return: The caller_reference of this CreateHostedZoneResponseHostedZone.
        :rtype: str
        """
        return self._caller_reference

    @caller_reference.setter
    def caller_reference(self, caller_reference):
        """Sets the caller_reference of this CreateHostedZoneResponseHostedZone.


        :param caller_reference: The caller_reference of this CreateHostedZoneResponseHostedZone.
        :type caller_reference: str
        """
        if caller_reference is None:
            raise ValueError("Invalid value for `caller_reference`, must not be `None`")

        self._caller_reference = caller_reference

    @property
    def config(self):
        """Gets the config of this CreateHostedZoneResponseHostedZone.


        :return: The config of this CreateHostedZoneResponseHostedZone.
        :rtype: HostedZoneConfig
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this CreateHostedZoneResponseHostedZone.


        :param config: The config of this CreateHostedZoneResponseHostedZone.
        :type config: HostedZoneConfig
        """

        self._config = config

    @property
    def resource_record_set_count(self):
        """Gets the resource_record_set_count of this CreateHostedZoneResponseHostedZone.


        :return: The resource_record_set_count of this CreateHostedZoneResponseHostedZone.
        :rtype: int
        """
        return self._resource_record_set_count

    @resource_record_set_count.setter
    def resource_record_set_count(self, resource_record_set_count):
        """Sets the resource_record_set_count of this CreateHostedZoneResponseHostedZone.


        :param resource_record_set_count: The resource_record_set_count of this CreateHostedZoneResponseHostedZone.
        :type resource_record_set_count: int
        """

        self._resource_record_set_count = resource_record_set_count

    @property
    def linked_service(self):
        """Gets the linked_service of this CreateHostedZoneResponseHostedZone.


        :return: The linked_service of this CreateHostedZoneResponseHostedZone.
        :rtype: HostedZoneLinkedService
        """
        return self._linked_service

    @linked_service.setter
    def linked_service(self, linked_service):
        """Sets the linked_service of this CreateHostedZoneResponseHostedZone.


        :param linked_service: The linked_service of this CreateHostedZoneResponseHostedZone.
        :type linked_service: HostedZoneLinkedService
        """

        self._linked_service = linked_service
