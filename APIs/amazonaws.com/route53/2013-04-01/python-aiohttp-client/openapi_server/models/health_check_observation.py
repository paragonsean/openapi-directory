# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.health_check_observation_status_report import HealthCheckObservationStatusReport
from openapi_server.models.health_check_region import HealthCheckRegion
from openapi_server import util


class HealthCheckObservation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, region: HealthCheckRegion=None, ip_address: str=None, status_report: HealthCheckObservationStatusReport=None):
        """HealthCheckObservation - a model defined in OpenAPI

        :param region: The region of this HealthCheckObservation.
        :param ip_address: The ip_address of this HealthCheckObservation.
        :param status_report: The status_report of this HealthCheckObservation.
        """
        self.openapi_types = {
            'region': HealthCheckRegion,
            'ip_address': str,
            'status_report': HealthCheckObservationStatusReport
        }

        self.attribute_map = {
            'region': 'Region',
            'ip_address': 'IPAddress',
            'status_report': 'StatusReport'
        }

        self._region = region
        self._ip_address = ip_address
        self._status_report = status_report

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HealthCheckObservation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HealthCheckObservation of this HealthCheckObservation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def region(self):
        """Gets the region of this HealthCheckObservation.


        :return: The region of this HealthCheckObservation.
        :rtype: HealthCheckRegion
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this HealthCheckObservation.


        :param region: The region of this HealthCheckObservation.
        :type region: HealthCheckRegion
        """

        self._region = region

    @property
    def ip_address(self):
        """Gets the ip_address of this HealthCheckObservation.


        :return: The ip_address of this HealthCheckObservation.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this HealthCheckObservation.


        :param ip_address: The ip_address of this HealthCheckObservation.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def status_report(self):
        """Gets the status_report of this HealthCheckObservation.


        :return: The status_report of this HealthCheckObservation.
        :rtype: HealthCheckObservationStatusReport
        """
        return self._status_report

    @status_report.setter
    def status_report(self, status_report):
        """Sets the status_report of this HealthCheckObservation.


        :param status_report: The status_report of this HealthCheckObservation.
        :type status_report: HealthCheckObservationStatusReport
        """

        self._status_report = status_report
