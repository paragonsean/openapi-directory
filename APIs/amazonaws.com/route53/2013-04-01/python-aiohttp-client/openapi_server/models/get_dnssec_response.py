# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_dnssec_response_status import GetDNSSECResponseStatus
from openapi_server import util


class GetDNSSECResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: GetDNSSECResponseStatus=None, key_signing_keys: List=None):
        """GetDNSSECResponse - a model defined in OpenAPI

        :param status: The status of this GetDNSSECResponse.
        :param key_signing_keys: The key_signing_keys of this GetDNSSECResponse.
        """
        self.openapi_types = {
            'status': GetDNSSECResponseStatus,
            'key_signing_keys': List
        }

        self.attribute_map = {
            'status': 'Status',
            'key_signing_keys': 'KeySigningKeys'
        }

        self._status = status
        self._key_signing_keys = key_signing_keys

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDNSSECResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetDNSSECResponse of this GetDNSSECResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this GetDNSSECResponse.


        :return: The status of this GetDNSSECResponse.
        :rtype: GetDNSSECResponseStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetDNSSECResponse.


        :param status: The status of this GetDNSSECResponse.
        :type status: GetDNSSECResponseStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def key_signing_keys(self):
        """Gets the key_signing_keys of this GetDNSSECResponse.


        :return: The key_signing_keys of this GetDNSSECResponse.
        :rtype: List
        """
        return self._key_signing_keys

    @key_signing_keys.setter
    def key_signing_keys(self, key_signing_keys):
        """Sets the key_signing_keys of this GetDNSSECResponse.


        :param key_signing_keys: The key_signing_keys of this GetDNSSECResponse.
        :type key_signing_keys: List
        """
        if key_signing_keys is None:
            raise ValueError("Invalid value for `key_signing_keys`, must not be `None`")

        self._key_signing_keys = key_signing_keys
