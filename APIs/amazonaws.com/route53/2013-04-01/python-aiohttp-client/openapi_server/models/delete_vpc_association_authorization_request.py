# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.delete_vpc_association_authorization_request_vpc import DeleteVPCAssociationAuthorizationRequestVPC
from openapi_server import util


class DeleteVPCAssociationAuthorizationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vpc: DeleteVPCAssociationAuthorizationRequestVPC=None):
        """DeleteVPCAssociationAuthorizationRequest - a model defined in OpenAPI

        :param vpc: The vpc of this DeleteVPCAssociationAuthorizationRequest.
        """
        self.openapi_types = {
            'vpc': DeleteVPCAssociationAuthorizationRequestVPC
        }

        self.attribute_map = {
            'vpc': 'VPC'
        }

        self._vpc = vpc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteVPCAssociationAuthorizationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteVPCAssociationAuthorizationRequest of this DeleteVPCAssociationAuthorizationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vpc(self):
        """Gets the vpc of this DeleteVPCAssociationAuthorizationRequest.


        :return: The vpc of this DeleteVPCAssociationAuthorizationRequest.
        :rtype: DeleteVPCAssociationAuthorizationRequestVPC
        """
        return self._vpc

    @vpc.setter
    def vpc(self, vpc):
        """Sets the vpc of this DeleteVPCAssociationAuthorizationRequest.


        :param vpc: The vpc of this DeleteVPCAssociationAuthorizationRequest.
        :type vpc: DeleteVPCAssociationAuthorizationRequestVPC
        """
        if vpc is None:
            raise ValueError("Invalid value for `vpc`, must not be `None`")

        self._vpc = vpc
