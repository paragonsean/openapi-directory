# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_reusable_delegation_set_response_delegation_set import GetReusableDelegationSetResponseDelegationSet
from openapi_server import util


class GetReusableDelegationSetResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delegation_set: GetReusableDelegationSetResponseDelegationSet=None):
        """GetReusableDelegationSetResponse - a model defined in OpenAPI

        :param delegation_set: The delegation_set of this GetReusableDelegationSetResponse.
        """
        self.openapi_types = {
            'delegation_set': GetReusableDelegationSetResponseDelegationSet
        }

        self.attribute_map = {
            'delegation_set': 'DelegationSet'
        }

        self._delegation_set = delegation_set

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetReusableDelegationSetResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetReusableDelegationSetResponse of this GetReusableDelegationSetResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delegation_set(self):
        """Gets the delegation_set of this GetReusableDelegationSetResponse.


        :return: The delegation_set of this GetReusableDelegationSetResponse.
        :rtype: GetReusableDelegationSetResponseDelegationSet
        """
        return self._delegation_set

    @delegation_set.setter
    def delegation_set(self, delegation_set):
        """Sets the delegation_set of this GetReusableDelegationSetResponse.


        :param delegation_set: The delegation_set of this GetReusableDelegationSetResponse.
        :type delegation_set: GetReusableDelegationSetResponseDelegationSet
        """
        if delegation_set is None:
            raise ValueError("Invalid value for `delegation_set`, must not be `None`")

        self._delegation_set = delegation_set
