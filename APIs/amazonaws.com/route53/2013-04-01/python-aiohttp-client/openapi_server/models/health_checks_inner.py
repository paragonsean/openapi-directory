# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.health_check_cloud_watch_alarm_configuration import HealthCheckCloudWatchAlarmConfiguration
from openapi_server.models.health_check_health_check_config import HealthCheckHealthCheckConfig
from openapi_server.models.health_check_linked_service import HealthCheckLinkedService
from openapi_server import util


class HealthChecksInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, caller_reference: str=None, linked_service: HealthCheckLinkedService=None, health_check_config: HealthCheckHealthCheckConfig=None, health_check_version: int=None, cloud_watch_alarm_configuration: HealthCheckCloudWatchAlarmConfiguration=None):
        """HealthChecksInner - a model defined in OpenAPI

        :param id: The id of this HealthChecksInner.
        :param caller_reference: The caller_reference of this HealthChecksInner.
        :param linked_service: The linked_service of this HealthChecksInner.
        :param health_check_config: The health_check_config of this HealthChecksInner.
        :param health_check_version: The health_check_version of this HealthChecksInner.
        :param cloud_watch_alarm_configuration: The cloud_watch_alarm_configuration of this HealthChecksInner.
        """
        self.openapi_types = {
            'id': str,
            'caller_reference': str,
            'linked_service': HealthCheckLinkedService,
            'health_check_config': HealthCheckHealthCheckConfig,
            'health_check_version': int,
            'cloud_watch_alarm_configuration': HealthCheckCloudWatchAlarmConfiguration
        }

        self.attribute_map = {
            'id': 'Id',
            'caller_reference': 'CallerReference',
            'linked_service': 'LinkedService',
            'health_check_config': 'HealthCheckConfig',
            'health_check_version': 'HealthCheckVersion',
            'cloud_watch_alarm_configuration': 'CloudWatchAlarmConfiguration'
        }

        self._id = id
        self._caller_reference = caller_reference
        self._linked_service = linked_service
        self._health_check_config = health_check_config
        self._health_check_version = health_check_version
        self._cloud_watch_alarm_configuration = cloud_watch_alarm_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HealthChecksInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HealthChecks_inner of this HealthChecksInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this HealthChecksInner.


        :return: The id of this HealthChecksInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this HealthChecksInner.


        :param id: The id of this HealthChecksInner.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def caller_reference(self):
        """Gets the caller_reference of this HealthChecksInner.


        :return: The caller_reference of this HealthChecksInner.
        :rtype: str
        """
        return self._caller_reference

    @caller_reference.setter
    def caller_reference(self, caller_reference):
        """Sets the caller_reference of this HealthChecksInner.


        :param caller_reference: The caller_reference of this HealthChecksInner.
        :type caller_reference: str
        """
        if caller_reference is None:
            raise ValueError("Invalid value for `caller_reference`, must not be `None`")

        self._caller_reference = caller_reference

    @property
    def linked_service(self):
        """Gets the linked_service of this HealthChecksInner.


        :return: The linked_service of this HealthChecksInner.
        :rtype: HealthCheckLinkedService
        """
        return self._linked_service

    @linked_service.setter
    def linked_service(self, linked_service):
        """Sets the linked_service of this HealthChecksInner.


        :param linked_service: The linked_service of this HealthChecksInner.
        :type linked_service: HealthCheckLinkedService
        """

        self._linked_service = linked_service

    @property
    def health_check_config(self):
        """Gets the health_check_config of this HealthChecksInner.


        :return: The health_check_config of this HealthChecksInner.
        :rtype: HealthCheckHealthCheckConfig
        """
        return self._health_check_config

    @health_check_config.setter
    def health_check_config(self, health_check_config):
        """Sets the health_check_config of this HealthChecksInner.


        :param health_check_config: The health_check_config of this HealthChecksInner.
        :type health_check_config: HealthCheckHealthCheckConfig
        """
        if health_check_config is None:
            raise ValueError("Invalid value for `health_check_config`, must not be `None`")

        self._health_check_config = health_check_config

    @property
    def health_check_version(self):
        """Gets the health_check_version of this HealthChecksInner.


        :return: The health_check_version of this HealthChecksInner.
        :rtype: int
        """
        return self._health_check_version

    @health_check_version.setter
    def health_check_version(self, health_check_version):
        """Sets the health_check_version of this HealthChecksInner.


        :param health_check_version: The health_check_version of this HealthChecksInner.
        :type health_check_version: int
        """
        if health_check_version is None:
            raise ValueError("Invalid value for `health_check_version`, must not be `None`")

        self._health_check_version = health_check_version

    @property
    def cloud_watch_alarm_configuration(self):
        """Gets the cloud_watch_alarm_configuration of this HealthChecksInner.


        :return: The cloud_watch_alarm_configuration of this HealthChecksInner.
        :rtype: HealthCheckCloudWatchAlarmConfiguration
        """
        return self._cloud_watch_alarm_configuration

    @cloud_watch_alarm_configuration.setter
    def cloud_watch_alarm_configuration(self, cloud_watch_alarm_configuration):
        """Sets the cloud_watch_alarm_configuration of this HealthChecksInner.


        :param cloud_watch_alarm_configuration: The cloud_watch_alarm_configuration of this HealthChecksInner.
        :type cloud_watch_alarm_configuration: HealthCheckCloudWatchAlarmConfiguration
        """

        self._cloud_watch_alarm_configuration = cloud_watch_alarm_configuration
