/**
 * Amazon Route 53
 * <p>Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service.</p> <p>You can use Route 53 to:</p> <ul> <li> <p>Register domain names.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-domain-registration.html\">How domain registration works</a>.</p> </li> <li> <p>Route internet traffic to the resources for your domain</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html\">How internet traffic is routed to your website or web application</a>.</p> </li> <li> <p>Check the health of your resources.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-health-checks.html\">How Route 53 checks the health of your resources</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2013-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHostedZoneSummary.h
 *
 * In the response to a &lt;code&gt;ListHostedZonesByVPC&lt;/code&gt; request, the &lt;code&gt;HostedZoneSummaries&lt;/code&gt; element contains one &lt;code&gt;HostedZoneSummary&lt;/code&gt; element for each hosted zone that the specified Amazon VPC is associated with. Each &lt;code&gt;HostedZoneSummary&lt;/code&gt; element contains the hosted zone name and ID, and information about who owns the hosted zone.
 */

#ifndef OAIHostedZoneSummary_H
#define OAIHostedZoneSummary_H

#include <QJsonObject>

#include "OAIHostedZoneSummary_Owner.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHostedZoneSummary_Owner;

class OAIHostedZoneSummary : public OAIObject {
public:
    OAIHostedZoneSummary();
    OAIHostedZoneSummary(QString json);
    ~OAIHostedZoneSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHostedZoneId() const;
    void setHostedZoneId(const QString &hosted_zone_id);
    bool is_hosted_zone_id_Set() const;
    bool is_hosted_zone_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIHostedZoneSummary_Owner getOwner() const;
    void setOwner(const OAIHostedZoneSummary_Owner &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_hosted_zone_id;
    bool m_hosted_zone_id_isSet;
    bool m_hosted_zone_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIHostedZoneSummary_Owner m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHostedZoneSummary)

#endif // OAIHostedZoneSummary_H
