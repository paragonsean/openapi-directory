/**
 * Amazon Route 53
 * <p>Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service.</p> <p>You can use Route 53 to:</p> <ul> <li> <p>Register domain names.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-domain-registration.html\">How domain registration works</a>.</p> </li> <li> <p>Route internet traffic to the resources for your domain</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html\">How internet traffic is routed to your website or web application</a>.</p> </li> <li> <p>Check the health of your resources.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-health-checks.html\">How Route 53 checks the health of your resources</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2013-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListTagsForResourcesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListTagsForResourcesResponse::OAIListTagsForResourcesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListTagsForResourcesResponse::OAIListTagsForResourcesResponse() {
    this->initializeModel();
}

OAIListTagsForResourcesResponse::~OAIListTagsForResourcesResponse() {}

void OAIListTagsForResourcesResponse::initializeModel() {

    m_resource_tag_sets_isSet = false;
    m_resource_tag_sets_isValid = false;
}

void OAIListTagsForResourcesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListTagsForResourcesResponse::fromJsonObject(QJsonObject json) {

    m_resource_tag_sets_isValid = ::OpenAPI::fromJsonValue(m_resource_tag_sets, json[QString("ResourceTagSets")]);
    m_resource_tag_sets_isSet = !json[QString("ResourceTagSets")].isNull() && m_resource_tag_sets_isValid;
}

QString OAIListTagsForResourcesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListTagsForResourcesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_resource_tag_sets.isSet()) {
        obj.insert(QString("ResourceTagSets"), ::OpenAPI::toJsonValue(m_resource_tag_sets));
    }
    return obj;
}

QList OAIListTagsForResourcesResponse::getResourceTagSets() const {
    return m_resource_tag_sets;
}
void OAIListTagsForResourcesResponse::setResourceTagSets(const QList &resource_tag_sets) {
    m_resource_tag_sets = resource_tag_sets;
    m_resource_tag_sets_isSet = true;
}

bool OAIListTagsForResourcesResponse::is_resource_tag_sets_Set() const{
    return m_resource_tag_sets_isSet;
}

bool OAIListTagsForResourcesResponse::is_resource_tag_sets_Valid() const{
    return m_resource_tag_sets_isValid;
}

bool OAIListTagsForResourcesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resource_tag_sets.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListTagsForResourcesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_resource_tag_sets_isValid && true;
}

} // namespace OpenAPI
