/**
 * Amazon Route 53
 * <p>Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service.</p> <p>You can use Route 53 to:</p> <ul> <li> <p>Register domain names.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-domain-registration.html\">How domain registration works</a>.</p> </li> <li> <p>Route internet traffic to the resources for your domain</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html\">How internet traffic is routed to your website or web application</a>.</p> </li> <li> <p>Check the health of your resources.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-health-checks.html\">How Route 53 checks the health of your resources</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2013-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateTrafficPolicyInstanceResponse_TrafficPolicyInstance.h
 *
 * 
 */

#ifndef OAICreateTrafficPolicyInstanceResponse_TrafficPolicyInstance_H
#define OAICreateTrafficPolicyInstanceResponse_TrafficPolicyInstance_H

#include <QJsonObject>

#include "OAIRRType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateTrafficPolicyInstanceResponse_TrafficPolicyInstance : public OAIObject {
public:
    OAICreateTrafficPolicyInstanceResponse_TrafficPolicyInstance();
    OAICreateTrafficPolicyInstanceResponse_TrafficPolicyInstance(QString json);
    ~OAICreateTrafficPolicyInstanceResponse_TrafficPolicyInstance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getHostedZoneId() const;
    void setHostedZoneId(const QString &hosted_zone_id);
    bool is_hosted_zone_id_Set() const;
    bool is_hosted_zone_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getTtl() const;
    void setTtl(const qint32 &ttl);
    bool is_ttl_Set() const;
    bool is_ttl_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getTrafficPolicyId() const;
    void setTrafficPolicyId(const QString &traffic_policy_id);
    bool is_traffic_policy_id_Set() const;
    bool is_traffic_policy_id_Valid() const;

    qint32 getTrafficPolicyVersion() const;
    void setTrafficPolicyVersion(const qint32 &traffic_policy_version);
    bool is_traffic_policy_version_Set() const;
    bool is_traffic_policy_version_Valid() const;

    OAIRRType getTrafficPolicyType() const;
    void setTrafficPolicyType(const OAIRRType &traffic_policy_type);
    bool is_traffic_policy_type_Set() const;
    bool is_traffic_policy_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_hosted_zone_id;
    bool m_hosted_zone_id_isSet;
    bool m_hosted_zone_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_ttl;
    bool m_ttl_isSet;
    bool m_ttl_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_traffic_policy_id;
    bool m_traffic_policy_id_isSet;
    bool m_traffic_policy_id_isValid;

    qint32 m_traffic_policy_version;
    bool m_traffic_policy_version_isSet;
    bool m_traffic_policy_version_isValid;

    OAIRRType m_traffic_policy_type;
    bool m_traffic_policy_type_isSet;
    bool m_traffic_policy_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateTrafficPolicyInstanceResponse_TrafficPolicyInstance)

#endif // OAICreateTrafficPolicyInstanceResponse_TrafficPolicyInstance_H
