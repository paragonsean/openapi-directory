/**
 * Amazon Route 53
 * <p>Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service.</p> <p>You can use Route 53 to:</p> <ul> <li> <p>Register domain names.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-domain-registration.html\">How domain registration works</a>.</p> </li> <li> <p>Route internet traffic to the resources for your domain</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html\">How internet traffic is routed to your website or web application</a>.</p> </li> <li> <p>Check the health of your resources.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-health-checks.html\">How Route 53 checks the health of your resources</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2013-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHealthCheck_CloudWatchAlarmConfiguration.h
 *
 * 
 */

#ifndef OAIHealthCheck_CloudWatchAlarmConfiguration_H
#define OAIHealthCheck_CloudWatchAlarmConfiguration_H

#include <QJsonObject>

#include "OAIComparisonOperator.h"
#include "OAIStatistic.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHealthCheck_CloudWatchAlarmConfiguration : public OAIObject {
public:
    OAIHealthCheck_CloudWatchAlarmConfiguration();
    OAIHealthCheck_CloudWatchAlarmConfiguration(QString json);
    ~OAIHealthCheck_CloudWatchAlarmConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getEvaluationPeriods() const;
    void setEvaluationPeriods(const qint32 &evaluation_periods);
    bool is_evaluation_periods_Set() const;
    bool is_evaluation_periods_Valid() const;

    double getThreshold() const;
    void setThreshold(const double &threshold);
    bool is_threshold_Set() const;
    bool is_threshold_Valid() const;

    OAIComparisonOperator getComparisonOperator() const;
    void setComparisonOperator(const OAIComparisonOperator &comparison_operator);
    bool is_comparison_operator_Set() const;
    bool is_comparison_operator_Valid() const;

    qint32 getPeriod() const;
    void setPeriod(const qint32 &period);
    bool is_period_Set() const;
    bool is_period_Valid() const;

    QString getMetricName() const;
    void setMetricName(const QString &metric_name);
    bool is_metric_name_Set() const;
    bool is_metric_name_Valid() const;

    QString getRNamespace() const;
    void setRNamespace(const QString &r_namespace);
    bool is_r_namespace_Set() const;
    bool is_r_namespace_Valid() const;

    OAIStatistic getStatistic() const;
    void setStatistic(const OAIStatistic &statistic);
    bool is_statistic_Set() const;
    bool is_statistic_Valid() const;

    QList getDimensions() const;
    void setDimensions(const QList &dimensions);
    bool is_dimensions_Set() const;
    bool is_dimensions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_evaluation_periods;
    bool m_evaluation_periods_isSet;
    bool m_evaluation_periods_isValid;

    double m_threshold;
    bool m_threshold_isSet;
    bool m_threshold_isValid;

    OAIComparisonOperator m_comparison_operator;
    bool m_comparison_operator_isSet;
    bool m_comparison_operator_isValid;

    qint32 m_period;
    bool m_period_isSet;
    bool m_period_isValid;

    QString m_metric_name;
    bool m_metric_name_isSet;
    bool m_metric_name_isValid;

    QString m_r_namespace;
    bool m_r_namespace_isSet;
    bool m_r_namespace_isValid;

    OAIStatistic m_statistic;
    bool m_statistic_isSet;
    bool m_statistic_isValid;

    QList m_dimensions;
    bool m_dimensions_isSet;
    bool m_dimensions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHealthCheck_CloudWatchAlarmConfiguration)

#endif // OAIHealthCheck_CloudWatchAlarmConfiguration_H
