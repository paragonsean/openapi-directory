/**
 * Amazon Route 53
 * <p>Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service.</p> <p>You can use Route 53 to:</p> <ul> <li> <p>Register domain names.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-domain-registration.html\">How domain registration works</a>.</p> </li> <li> <p>Route internet traffic to the resources for your domain</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html\">How internet traffic is routed to your website or web application</a>.</p> </li> <li> <p>Check the health of your resources.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-health-checks.html\">How Route 53 checks the health of your resources</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2013-04-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResourceRecordSetRegion.h
 *
 * 
 */

#ifndef OAIResourceRecordSetRegion_H
#define OAIResourceRecordSetRegion_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResourceRecordSetRegion : public OAIEnum {
public:
    OAIResourceRecordSetRegion();
    OAIResourceRecordSetRegion(QString json);
    ~OAIResourceRecordSetRegion() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIResourceRecordSetRegion {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        US_EAST_1, 
        US_EAST_2, 
        US_WEST_1, 
        US_WEST_2, 
        CA_CENTRAL_1, 
        EU_WEST_1, 
        EU_WEST_2, 
        EU_WEST_3, 
        EU_CENTRAL_1, 
        EU_CENTRAL_2, 
        AP_SOUTHEAST_1, 
        AP_SOUTHEAST_2, 
        AP_SOUTHEAST_3, 
        AP_NORTHEAST_1, 
        AP_NORTHEAST_2, 
        AP_NORTHEAST_3, 
        EU_NORTH_1, 
        SA_EAST_1, 
        CN_NORTH_1, 
        CN_NORTHWEST_1, 
        AP_EAST_1, 
        ME_SOUTH_1, 
        ME_CENTRAL_1, 
        AP_SOUTH_1, 
        AP_SOUTH_2, 
        AF_SOUTH_1, 
        EU_SOUTH_1, 
        EU_SOUTH_2, 
        AP_SOUTHEAST_4, 
        IL_CENTRAL_1
    };
    OAIResourceRecordSetRegion::eOAIResourceRecordSetRegion getValue() const;
    void setValue(const OAIResourceRecordSetRegion::eOAIResourceRecordSetRegion& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIResourceRecordSetRegion m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResourceRecordSetRegion)

#endif // OAIResourceRecordSetRegion_H
