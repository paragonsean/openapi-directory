/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsCloudFormation);
  }
}(this, function(expect, AwsCloudFormation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsCloudFormation.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('gETActivateOrganizationsAccess', function() {
      it('should call gETActivateOrganizationsAccess successfully', function(done) {
        //uncomment below and update the code to test gETActivateOrganizationsAccess
        //instance.gETActivateOrganizationsAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETActivateType', function() {
      it('should call gETActivateType successfully', function(done) {
        //uncomment below and update the code to test gETActivateType
        //instance.gETActivateType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETBatchDescribeTypeConfigurations', function() {
      it('should call gETBatchDescribeTypeConfigurations successfully', function(done) {
        //uncomment below and update the code to test gETBatchDescribeTypeConfigurations
        //instance.gETBatchDescribeTypeConfigurations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCancelUpdateStack', function() {
      it('should call gETCancelUpdateStack successfully', function(done) {
        //uncomment below and update the code to test gETCancelUpdateStack
        //instance.gETCancelUpdateStack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETContinueUpdateRollback', function() {
      it('should call gETContinueUpdateRollback successfully', function(done) {
        //uncomment below and update the code to test gETContinueUpdateRollback
        //instance.gETContinueUpdateRollback(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateChangeSet', function() {
      it('should call gETCreateChangeSet successfully', function(done) {
        //uncomment below and update the code to test gETCreateChangeSet
        //instance.gETCreateChangeSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateStack', function() {
      it('should call gETCreateStack successfully', function(done) {
        //uncomment below and update the code to test gETCreateStack
        //instance.gETCreateStack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateStackInstances', function() {
      it('should call gETCreateStackInstances successfully', function(done) {
        //uncomment below and update the code to test gETCreateStackInstances
        //instance.gETCreateStackInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateStackSet', function() {
      it('should call gETCreateStackSet successfully', function(done) {
        //uncomment below and update the code to test gETCreateStackSet
        //instance.gETCreateStackSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeactivateOrganizationsAccess', function() {
      it('should call gETDeactivateOrganizationsAccess successfully', function(done) {
        //uncomment below and update the code to test gETDeactivateOrganizationsAccess
        //instance.gETDeactivateOrganizationsAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeactivateType', function() {
      it('should call gETDeactivateType successfully', function(done) {
        //uncomment below and update the code to test gETDeactivateType
        //instance.gETDeactivateType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteChangeSet', function() {
      it('should call gETDeleteChangeSet successfully', function(done) {
        //uncomment below and update the code to test gETDeleteChangeSet
        //instance.gETDeleteChangeSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteStack', function() {
      it('should call gETDeleteStack successfully', function(done) {
        //uncomment below and update the code to test gETDeleteStack
        //instance.gETDeleteStack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteStackInstances', function() {
      it('should call gETDeleteStackInstances successfully', function(done) {
        //uncomment below and update the code to test gETDeleteStackInstances
        //instance.gETDeleteStackInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteStackSet', function() {
      it('should call gETDeleteStackSet successfully', function(done) {
        //uncomment below and update the code to test gETDeleteStackSet
        //instance.gETDeleteStackSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeregisterType', function() {
      it('should call gETDeregisterType successfully', function(done) {
        //uncomment below and update the code to test gETDeregisterType
        //instance.gETDeregisterType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeAccountLimits', function() {
      it('should call gETDescribeAccountLimits successfully', function(done) {
        //uncomment below and update the code to test gETDescribeAccountLimits
        //instance.gETDescribeAccountLimits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeChangeSet', function() {
      it('should call gETDescribeChangeSet successfully', function(done) {
        //uncomment below and update the code to test gETDescribeChangeSet
        //instance.gETDescribeChangeSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeChangeSetHooks', function() {
      it('should call gETDescribeChangeSetHooks successfully', function(done) {
        //uncomment below and update the code to test gETDescribeChangeSetHooks
        //instance.gETDescribeChangeSetHooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeOrganizationsAccess', function() {
      it('should call gETDescribeOrganizationsAccess successfully', function(done) {
        //uncomment below and update the code to test gETDescribeOrganizationsAccess
        //instance.gETDescribeOrganizationsAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribePublisher', function() {
      it('should call gETDescribePublisher successfully', function(done) {
        //uncomment below and update the code to test gETDescribePublisher
        //instance.gETDescribePublisher(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeStackDriftDetectionStatus', function() {
      it('should call gETDescribeStackDriftDetectionStatus successfully', function(done) {
        //uncomment below and update the code to test gETDescribeStackDriftDetectionStatus
        //instance.gETDescribeStackDriftDetectionStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeStackEvents', function() {
      it('should call gETDescribeStackEvents successfully', function(done) {
        //uncomment below and update the code to test gETDescribeStackEvents
        //instance.gETDescribeStackEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeStackInstance', function() {
      it('should call gETDescribeStackInstance successfully', function(done) {
        //uncomment below and update the code to test gETDescribeStackInstance
        //instance.gETDescribeStackInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeStackResource', function() {
      it('should call gETDescribeStackResource successfully', function(done) {
        //uncomment below and update the code to test gETDescribeStackResource
        //instance.gETDescribeStackResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeStackResourceDrifts', function() {
      it('should call gETDescribeStackResourceDrifts successfully', function(done) {
        //uncomment below and update the code to test gETDescribeStackResourceDrifts
        //instance.gETDescribeStackResourceDrifts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeStackResources', function() {
      it('should call gETDescribeStackResources successfully', function(done) {
        //uncomment below and update the code to test gETDescribeStackResources
        //instance.gETDescribeStackResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeStackSet', function() {
      it('should call gETDescribeStackSet successfully', function(done) {
        //uncomment below and update the code to test gETDescribeStackSet
        //instance.gETDescribeStackSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeStackSetOperation', function() {
      it('should call gETDescribeStackSetOperation successfully', function(done) {
        //uncomment below and update the code to test gETDescribeStackSetOperation
        //instance.gETDescribeStackSetOperation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeStacks', function() {
      it('should call gETDescribeStacks successfully', function(done) {
        //uncomment below and update the code to test gETDescribeStacks
        //instance.gETDescribeStacks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeType', function() {
      it('should call gETDescribeType successfully', function(done) {
        //uncomment below and update the code to test gETDescribeType
        //instance.gETDescribeType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeTypeRegistration', function() {
      it('should call gETDescribeTypeRegistration successfully', function(done) {
        //uncomment below and update the code to test gETDescribeTypeRegistration
        //instance.gETDescribeTypeRegistration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDetectStackDrift', function() {
      it('should call gETDetectStackDrift successfully', function(done) {
        //uncomment below and update the code to test gETDetectStackDrift
        //instance.gETDetectStackDrift(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDetectStackResourceDrift', function() {
      it('should call gETDetectStackResourceDrift successfully', function(done) {
        //uncomment below and update the code to test gETDetectStackResourceDrift
        //instance.gETDetectStackResourceDrift(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDetectStackSetDrift', function() {
      it('should call gETDetectStackSetDrift successfully', function(done) {
        //uncomment below and update the code to test gETDetectStackSetDrift
        //instance.gETDetectStackSetDrift(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETEstimateTemplateCost', function() {
      it('should call gETEstimateTemplateCost successfully', function(done) {
        //uncomment below and update the code to test gETEstimateTemplateCost
        //instance.gETEstimateTemplateCost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETExecuteChangeSet', function() {
      it('should call gETExecuteChangeSet successfully', function(done) {
        //uncomment below and update the code to test gETExecuteChangeSet
        //instance.gETExecuteChangeSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETGetStackPolicy', function() {
      it('should call gETGetStackPolicy successfully', function(done) {
        //uncomment below and update the code to test gETGetStackPolicy
        //instance.gETGetStackPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETGetTemplate', function() {
      it('should call gETGetTemplate successfully', function(done) {
        //uncomment below and update the code to test gETGetTemplate
        //instance.gETGetTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETGetTemplateSummary', function() {
      it('should call gETGetTemplateSummary successfully', function(done) {
        //uncomment below and update the code to test gETGetTemplateSummary
        //instance.gETGetTemplateSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETImportStacksToStackSet', function() {
      it('should call gETImportStacksToStackSet successfully', function(done) {
        //uncomment below and update the code to test gETImportStacksToStackSet
        //instance.gETImportStacksToStackSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListChangeSets', function() {
      it('should call gETListChangeSets successfully', function(done) {
        //uncomment below and update the code to test gETListChangeSets
        //instance.gETListChangeSets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListExports', function() {
      it('should call gETListExports successfully', function(done) {
        //uncomment below and update the code to test gETListExports
        //instance.gETListExports(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListImports', function() {
      it('should call gETListImports successfully', function(done) {
        //uncomment below and update the code to test gETListImports
        //instance.gETListImports(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListStackInstanceResourceDrifts', function() {
      it('should call gETListStackInstanceResourceDrifts successfully', function(done) {
        //uncomment below and update the code to test gETListStackInstanceResourceDrifts
        //instance.gETListStackInstanceResourceDrifts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListStackInstances', function() {
      it('should call gETListStackInstances successfully', function(done) {
        //uncomment below and update the code to test gETListStackInstances
        //instance.gETListStackInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListStackResources', function() {
      it('should call gETListStackResources successfully', function(done) {
        //uncomment below and update the code to test gETListStackResources
        //instance.gETListStackResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListStackSetOperationResults', function() {
      it('should call gETListStackSetOperationResults successfully', function(done) {
        //uncomment below and update the code to test gETListStackSetOperationResults
        //instance.gETListStackSetOperationResults(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListStackSetOperations', function() {
      it('should call gETListStackSetOperations successfully', function(done) {
        //uncomment below and update the code to test gETListStackSetOperations
        //instance.gETListStackSetOperations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListStackSets', function() {
      it('should call gETListStackSets successfully', function(done) {
        //uncomment below and update the code to test gETListStackSets
        //instance.gETListStackSets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListStacks', function() {
      it('should call gETListStacks successfully', function(done) {
        //uncomment below and update the code to test gETListStacks
        //instance.gETListStacks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListTypeRegistrations', function() {
      it('should call gETListTypeRegistrations successfully', function(done) {
        //uncomment below and update the code to test gETListTypeRegistrations
        //instance.gETListTypeRegistrations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListTypeVersions', function() {
      it('should call gETListTypeVersions successfully', function(done) {
        //uncomment below and update the code to test gETListTypeVersions
        //instance.gETListTypeVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListTypes', function() {
      it('should call gETListTypes successfully', function(done) {
        //uncomment below and update the code to test gETListTypes
        //instance.gETListTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETPublishType', function() {
      it('should call gETPublishType successfully', function(done) {
        //uncomment below and update the code to test gETPublishType
        //instance.gETPublishType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRecordHandlerProgress', function() {
      it('should call gETRecordHandlerProgress successfully', function(done) {
        //uncomment below and update the code to test gETRecordHandlerProgress
        //instance.gETRecordHandlerProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRegisterPublisher', function() {
      it('should call gETRegisterPublisher successfully', function(done) {
        //uncomment below and update the code to test gETRegisterPublisher
        //instance.gETRegisterPublisher(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRegisterType', function() {
      it('should call gETRegisterType successfully', function(done) {
        //uncomment below and update the code to test gETRegisterType
        //instance.gETRegisterType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRollbackStack', function() {
      it('should call gETRollbackStack successfully', function(done) {
        //uncomment below and update the code to test gETRollbackStack
        //instance.gETRollbackStack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETSetStackPolicy', function() {
      it('should call gETSetStackPolicy successfully', function(done) {
        //uncomment below and update the code to test gETSetStackPolicy
        //instance.gETSetStackPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETSetTypeConfiguration', function() {
      it('should call gETSetTypeConfiguration successfully', function(done) {
        //uncomment below and update the code to test gETSetTypeConfiguration
        //instance.gETSetTypeConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETSetTypeDefaultVersion', function() {
      it('should call gETSetTypeDefaultVersion successfully', function(done) {
        //uncomment below and update the code to test gETSetTypeDefaultVersion
        //instance.gETSetTypeDefaultVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETSignalResource', function() {
      it('should call gETSignalResource successfully', function(done) {
        //uncomment below and update the code to test gETSignalResource
        //instance.gETSignalResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETStopStackSetOperation', function() {
      it('should call gETStopStackSetOperation successfully', function(done) {
        //uncomment below and update the code to test gETStopStackSetOperation
        //instance.gETStopStackSetOperation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETTestType', function() {
      it('should call gETTestType successfully', function(done) {
        //uncomment below and update the code to test gETTestType
        //instance.gETTestType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETUpdateStack', function() {
      it('should call gETUpdateStack successfully', function(done) {
        //uncomment below and update the code to test gETUpdateStack
        //instance.gETUpdateStack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETUpdateStackInstances', function() {
      it('should call gETUpdateStackInstances successfully', function(done) {
        //uncomment below and update the code to test gETUpdateStackInstances
        //instance.gETUpdateStackInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETUpdateStackSet', function() {
      it('should call gETUpdateStackSet successfully', function(done) {
        //uncomment below and update the code to test gETUpdateStackSet
        //instance.gETUpdateStackSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETUpdateTerminationProtection', function() {
      it('should call gETUpdateTerminationProtection successfully', function(done) {
        //uncomment below and update the code to test gETUpdateTerminationProtection
        //instance.gETUpdateTerminationProtection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETValidateTemplate', function() {
      it('should call gETValidateTemplate successfully', function(done) {
        //uncomment below and update the code to test gETValidateTemplate
        //instance.gETValidateTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTActivateOrganizationsAccess', function() {
      it('should call pOSTActivateOrganizationsAccess successfully', function(done) {
        //uncomment below and update the code to test pOSTActivateOrganizationsAccess
        //instance.pOSTActivateOrganizationsAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTActivateType', function() {
      it('should call pOSTActivateType successfully', function(done) {
        //uncomment below and update the code to test pOSTActivateType
        //instance.pOSTActivateType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTBatchDescribeTypeConfigurations', function() {
      it('should call pOSTBatchDescribeTypeConfigurations successfully', function(done) {
        //uncomment below and update the code to test pOSTBatchDescribeTypeConfigurations
        //instance.pOSTBatchDescribeTypeConfigurations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCancelUpdateStack', function() {
      it('should call pOSTCancelUpdateStack successfully', function(done) {
        //uncomment below and update the code to test pOSTCancelUpdateStack
        //instance.pOSTCancelUpdateStack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTContinueUpdateRollback', function() {
      it('should call pOSTContinueUpdateRollback successfully', function(done) {
        //uncomment below and update the code to test pOSTContinueUpdateRollback
        //instance.pOSTContinueUpdateRollback(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateChangeSet', function() {
      it('should call pOSTCreateChangeSet successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateChangeSet
        //instance.pOSTCreateChangeSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateStack', function() {
      it('should call pOSTCreateStack successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateStack
        //instance.pOSTCreateStack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateStackInstances', function() {
      it('should call pOSTCreateStackInstances successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateStackInstances
        //instance.pOSTCreateStackInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateStackSet', function() {
      it('should call pOSTCreateStackSet successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateStackSet
        //instance.pOSTCreateStackSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeactivateOrganizationsAccess', function() {
      it('should call pOSTDeactivateOrganizationsAccess successfully', function(done) {
        //uncomment below and update the code to test pOSTDeactivateOrganizationsAccess
        //instance.pOSTDeactivateOrganizationsAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeactivateType', function() {
      it('should call pOSTDeactivateType successfully', function(done) {
        //uncomment below and update the code to test pOSTDeactivateType
        //instance.pOSTDeactivateType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteChangeSet', function() {
      it('should call pOSTDeleteChangeSet successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteChangeSet
        //instance.pOSTDeleteChangeSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteStack', function() {
      it('should call pOSTDeleteStack successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteStack
        //instance.pOSTDeleteStack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteStackInstances', function() {
      it('should call pOSTDeleteStackInstances successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteStackInstances
        //instance.pOSTDeleteStackInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteStackSet', function() {
      it('should call pOSTDeleteStackSet successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteStackSet
        //instance.pOSTDeleteStackSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeregisterType', function() {
      it('should call pOSTDeregisterType successfully', function(done) {
        //uncomment below and update the code to test pOSTDeregisterType
        //instance.pOSTDeregisterType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeAccountLimits', function() {
      it('should call pOSTDescribeAccountLimits successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeAccountLimits
        //instance.pOSTDescribeAccountLimits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeChangeSet', function() {
      it('should call pOSTDescribeChangeSet successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeChangeSet
        //instance.pOSTDescribeChangeSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeChangeSetHooks', function() {
      it('should call pOSTDescribeChangeSetHooks successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeChangeSetHooks
        //instance.pOSTDescribeChangeSetHooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeOrganizationsAccess', function() {
      it('should call pOSTDescribeOrganizationsAccess successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeOrganizationsAccess
        //instance.pOSTDescribeOrganizationsAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribePublisher', function() {
      it('should call pOSTDescribePublisher successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribePublisher
        //instance.pOSTDescribePublisher(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeStackDriftDetectionStatus', function() {
      it('should call pOSTDescribeStackDriftDetectionStatus successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeStackDriftDetectionStatus
        //instance.pOSTDescribeStackDriftDetectionStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeStackEvents', function() {
      it('should call pOSTDescribeStackEvents successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeStackEvents
        //instance.pOSTDescribeStackEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeStackInstance', function() {
      it('should call pOSTDescribeStackInstance successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeStackInstance
        //instance.pOSTDescribeStackInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeStackResource', function() {
      it('should call pOSTDescribeStackResource successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeStackResource
        //instance.pOSTDescribeStackResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeStackResourceDrifts', function() {
      it('should call pOSTDescribeStackResourceDrifts successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeStackResourceDrifts
        //instance.pOSTDescribeStackResourceDrifts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeStackResources', function() {
      it('should call pOSTDescribeStackResources successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeStackResources
        //instance.pOSTDescribeStackResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeStackSet', function() {
      it('should call pOSTDescribeStackSet successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeStackSet
        //instance.pOSTDescribeStackSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeStackSetOperation', function() {
      it('should call pOSTDescribeStackSetOperation successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeStackSetOperation
        //instance.pOSTDescribeStackSetOperation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeStacks', function() {
      it('should call pOSTDescribeStacks successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeStacks
        //instance.pOSTDescribeStacks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeType', function() {
      it('should call pOSTDescribeType successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeType
        //instance.pOSTDescribeType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeTypeRegistration', function() {
      it('should call pOSTDescribeTypeRegistration successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeTypeRegistration
        //instance.pOSTDescribeTypeRegistration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDetectStackDrift', function() {
      it('should call pOSTDetectStackDrift successfully', function(done) {
        //uncomment below and update the code to test pOSTDetectStackDrift
        //instance.pOSTDetectStackDrift(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDetectStackResourceDrift', function() {
      it('should call pOSTDetectStackResourceDrift successfully', function(done) {
        //uncomment below and update the code to test pOSTDetectStackResourceDrift
        //instance.pOSTDetectStackResourceDrift(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDetectStackSetDrift', function() {
      it('should call pOSTDetectStackSetDrift successfully', function(done) {
        //uncomment below and update the code to test pOSTDetectStackSetDrift
        //instance.pOSTDetectStackSetDrift(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTEstimateTemplateCost', function() {
      it('should call pOSTEstimateTemplateCost successfully', function(done) {
        //uncomment below and update the code to test pOSTEstimateTemplateCost
        //instance.pOSTEstimateTemplateCost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTExecuteChangeSet', function() {
      it('should call pOSTExecuteChangeSet successfully', function(done) {
        //uncomment below and update the code to test pOSTExecuteChangeSet
        //instance.pOSTExecuteChangeSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTGetStackPolicy', function() {
      it('should call pOSTGetStackPolicy successfully', function(done) {
        //uncomment below and update the code to test pOSTGetStackPolicy
        //instance.pOSTGetStackPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTGetTemplate', function() {
      it('should call pOSTGetTemplate successfully', function(done) {
        //uncomment below and update the code to test pOSTGetTemplate
        //instance.pOSTGetTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTGetTemplateSummary', function() {
      it('should call pOSTGetTemplateSummary successfully', function(done) {
        //uncomment below and update the code to test pOSTGetTemplateSummary
        //instance.pOSTGetTemplateSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTImportStacksToStackSet', function() {
      it('should call pOSTImportStacksToStackSet successfully', function(done) {
        //uncomment below and update the code to test pOSTImportStacksToStackSet
        //instance.pOSTImportStacksToStackSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListChangeSets', function() {
      it('should call pOSTListChangeSets successfully', function(done) {
        //uncomment below and update the code to test pOSTListChangeSets
        //instance.pOSTListChangeSets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListExports', function() {
      it('should call pOSTListExports successfully', function(done) {
        //uncomment below and update the code to test pOSTListExports
        //instance.pOSTListExports(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListImports', function() {
      it('should call pOSTListImports successfully', function(done) {
        //uncomment below and update the code to test pOSTListImports
        //instance.pOSTListImports(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListStackInstanceResourceDrifts', function() {
      it('should call pOSTListStackInstanceResourceDrifts successfully', function(done) {
        //uncomment below and update the code to test pOSTListStackInstanceResourceDrifts
        //instance.pOSTListStackInstanceResourceDrifts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListStackInstances', function() {
      it('should call pOSTListStackInstances successfully', function(done) {
        //uncomment below and update the code to test pOSTListStackInstances
        //instance.pOSTListStackInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListStackResources', function() {
      it('should call pOSTListStackResources successfully', function(done) {
        //uncomment below and update the code to test pOSTListStackResources
        //instance.pOSTListStackResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListStackSetOperationResults', function() {
      it('should call pOSTListStackSetOperationResults successfully', function(done) {
        //uncomment below and update the code to test pOSTListStackSetOperationResults
        //instance.pOSTListStackSetOperationResults(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListStackSetOperations', function() {
      it('should call pOSTListStackSetOperations successfully', function(done) {
        //uncomment below and update the code to test pOSTListStackSetOperations
        //instance.pOSTListStackSetOperations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListStackSets', function() {
      it('should call pOSTListStackSets successfully', function(done) {
        //uncomment below and update the code to test pOSTListStackSets
        //instance.pOSTListStackSets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListStacks', function() {
      it('should call pOSTListStacks successfully', function(done) {
        //uncomment below and update the code to test pOSTListStacks
        //instance.pOSTListStacks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListTypeRegistrations', function() {
      it('should call pOSTListTypeRegistrations successfully', function(done) {
        //uncomment below and update the code to test pOSTListTypeRegistrations
        //instance.pOSTListTypeRegistrations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListTypeVersions', function() {
      it('should call pOSTListTypeVersions successfully', function(done) {
        //uncomment below and update the code to test pOSTListTypeVersions
        //instance.pOSTListTypeVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListTypes', function() {
      it('should call pOSTListTypes successfully', function(done) {
        //uncomment below and update the code to test pOSTListTypes
        //instance.pOSTListTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTPublishType', function() {
      it('should call pOSTPublishType successfully', function(done) {
        //uncomment below and update the code to test pOSTPublishType
        //instance.pOSTPublishType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRecordHandlerProgress', function() {
      it('should call pOSTRecordHandlerProgress successfully', function(done) {
        //uncomment below and update the code to test pOSTRecordHandlerProgress
        //instance.pOSTRecordHandlerProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRegisterPublisher', function() {
      it('should call pOSTRegisterPublisher successfully', function(done) {
        //uncomment below and update the code to test pOSTRegisterPublisher
        //instance.pOSTRegisterPublisher(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRegisterType', function() {
      it('should call pOSTRegisterType successfully', function(done) {
        //uncomment below and update the code to test pOSTRegisterType
        //instance.pOSTRegisterType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRollbackStack', function() {
      it('should call pOSTRollbackStack successfully', function(done) {
        //uncomment below and update the code to test pOSTRollbackStack
        //instance.pOSTRollbackStack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTSetStackPolicy', function() {
      it('should call pOSTSetStackPolicy successfully', function(done) {
        //uncomment below and update the code to test pOSTSetStackPolicy
        //instance.pOSTSetStackPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTSetTypeConfiguration', function() {
      it('should call pOSTSetTypeConfiguration successfully', function(done) {
        //uncomment below and update the code to test pOSTSetTypeConfiguration
        //instance.pOSTSetTypeConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTSetTypeDefaultVersion', function() {
      it('should call pOSTSetTypeDefaultVersion successfully', function(done) {
        //uncomment below and update the code to test pOSTSetTypeDefaultVersion
        //instance.pOSTSetTypeDefaultVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTSignalResource', function() {
      it('should call pOSTSignalResource successfully', function(done) {
        //uncomment below and update the code to test pOSTSignalResource
        //instance.pOSTSignalResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTStopStackSetOperation', function() {
      it('should call pOSTStopStackSetOperation successfully', function(done) {
        //uncomment below and update the code to test pOSTStopStackSetOperation
        //instance.pOSTStopStackSetOperation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTTestType', function() {
      it('should call pOSTTestType successfully', function(done) {
        //uncomment below and update the code to test pOSTTestType
        //instance.pOSTTestType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTUpdateStack', function() {
      it('should call pOSTUpdateStack successfully', function(done) {
        //uncomment below and update the code to test pOSTUpdateStack
        //instance.pOSTUpdateStack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTUpdateStackInstances', function() {
      it('should call pOSTUpdateStackInstances successfully', function(done) {
        //uncomment below and update the code to test pOSTUpdateStackInstances
        //instance.pOSTUpdateStackInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTUpdateStackSet', function() {
      it('should call pOSTUpdateStackSet successfully', function(done) {
        //uncomment below and update the code to test pOSTUpdateStackSet
        //instance.pOSTUpdateStackSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTUpdateTerminationProtection', function() {
      it('should call pOSTUpdateTerminationProtection successfully', function(done) {
        //uncomment below and update the code to test pOSTUpdateTerminationProtection
        //instance.pOSTUpdateTerminationProtection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTValidateTemplate', function() {
      it('should call pOSTValidateTemplate successfully', function(done) {
        //uncomment below and update the code to test pOSTValidateTemplate
        //instance.pOSTValidateTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
