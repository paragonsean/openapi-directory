/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsCloudFormation);
  }
}(this, function(expect, AwsCloudFormation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsCloudFormation.DescribeTypeOutput();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DescribeTypeOutput', function() {
    it('should create an instance of DescribeTypeOutput', function() {
      // uncomment below and update the code to test DescribeTypeOutput
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be.a(AwsCloudFormation.DescribeTypeOutput);
    });

    it('should have the property arn (base name: "Arn")', function() {
      // uncomment below and update the code to test the property arn
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property typeName (base name: "TypeName")', function() {
      // uncomment below and update the code to test the property typeName
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property defaultVersionId (base name: "DefaultVersionId")', function() {
      // uncomment below and update the code to test the property defaultVersionId
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property isDefaultVersion (base name: "IsDefaultVersion")', function() {
      // uncomment below and update the code to test the property isDefaultVersion
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property typeTestsStatus (base name: "TypeTestsStatus")', function() {
      // uncomment below and update the code to test the property typeTestsStatus
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property typeTestsStatusDescription (base name: "TypeTestsStatusDescription")', function() {
      // uncomment below and update the code to test the property typeTestsStatusDescription
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property schema (base name: "Schema")', function() {
      // uncomment below and update the code to test the property schema
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property provisioningType (base name: "ProvisioningType")', function() {
      // uncomment below and update the code to test the property provisioningType
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property deprecatedStatus (base name: "DeprecatedStatus")', function() {
      // uncomment below and update the code to test the property deprecatedStatus
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property loggingConfig (base name: "LoggingConfig")', function() {
      // uncomment below and update the code to test the property loggingConfig
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property requiredActivatedTypes (base name: "RequiredActivatedTypes")', function() {
      // uncomment below and update the code to test the property requiredActivatedTypes
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property executionRoleArn (base name: "ExecutionRoleArn")', function() {
      // uncomment below and update the code to test the property executionRoleArn
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property visibility (base name: "Visibility")', function() {
      // uncomment below and update the code to test the property visibility
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property sourceUrl (base name: "SourceUrl")', function() {
      // uncomment below and update the code to test the property sourceUrl
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property documentationUrl (base name: "DocumentationUrl")', function() {
      // uncomment below and update the code to test the property documentationUrl
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdated (base name: "LastUpdated")', function() {
      // uncomment below and update the code to test the property lastUpdated
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property timeCreated (base name: "TimeCreated")', function() {
      // uncomment below and update the code to test the property timeCreated
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property configurationSchema (base name: "ConfigurationSchema")', function() {
      // uncomment below and update the code to test the property configurationSchema
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property publisherId (base name: "PublisherId")', function() {
      // uncomment below and update the code to test the property publisherId
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property originalTypeName (base name: "OriginalTypeName")', function() {
      // uncomment below and update the code to test the property originalTypeName
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property originalTypeArn (base name: "OriginalTypeArn")', function() {
      // uncomment below and update the code to test the property originalTypeArn
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property publicVersionNumber (base name: "PublicVersionNumber")', function() {
      // uncomment below and update the code to test the property publicVersionNumber
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property latestPublicVersion (base name: "LatestPublicVersion")', function() {
      // uncomment below and update the code to test the property latestPublicVersion
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property isActivated (base name: "IsActivated")', function() {
      // uncomment below and update the code to test the property isActivated
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

    it('should have the property autoUpdate (base name: "AutoUpdate")', function() {
      // uncomment below and update the code to test the property autoUpdate
      //var instance = new AwsCloudFormation.DescribeTypeOutput();
      //expect(instance).to.be();
    });

  });

}));
