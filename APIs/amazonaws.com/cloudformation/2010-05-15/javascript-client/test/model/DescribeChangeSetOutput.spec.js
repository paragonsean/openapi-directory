/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsCloudFormation);
  }
}(this, function(expect, AwsCloudFormation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsCloudFormation.DescribeChangeSetOutput();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DescribeChangeSetOutput', function() {
    it('should create an instance of DescribeChangeSetOutput', function() {
      // uncomment below and update the code to test DescribeChangeSetOutput
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be.a(AwsCloudFormation.DescribeChangeSetOutput);
    });

    it('should have the property changeSetName (base name: "ChangeSetName")', function() {
      // uncomment below and update the code to test the property changeSetName
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property changeSetId (base name: "ChangeSetId")', function() {
      // uncomment below and update the code to test the property changeSetId
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property stackId (base name: "StackId")', function() {
      // uncomment below and update the code to test the property stackId
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property stackName (base name: "StackName")', function() {
      // uncomment below and update the code to test the property stackName
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property parameters (base name: "Parameters")', function() {
      // uncomment below and update the code to test the property parameters
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property creationTime (base name: "CreationTime")', function() {
      // uncomment below and update the code to test the property creationTime
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property executionStatus (base name: "ExecutionStatus")', function() {
      // uncomment below and update the code to test the property executionStatus
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property statusReason (base name: "StatusReason")', function() {
      // uncomment below and update the code to test the property statusReason
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property notificationARNs (base name: "NotificationARNs")', function() {
      // uncomment below and update the code to test the property notificationARNs
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property rollbackConfiguration (base name: "RollbackConfiguration")', function() {
      // uncomment below and update the code to test the property rollbackConfiguration
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property capabilities (base name: "Capabilities")', function() {
      // uncomment below and update the code to test the property capabilities
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property changes (base name: "Changes")', function() {
      // uncomment below and update the code to test the property changes
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property nextToken (base name: "NextToken")', function() {
      // uncomment below and update the code to test the property nextToken
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property includeNestedStacks (base name: "IncludeNestedStacks")', function() {
      // uncomment below and update the code to test the property includeNestedStacks
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property parentChangeSetId (base name: "ParentChangeSetId")', function() {
      // uncomment below and update the code to test the property parentChangeSetId
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property rootChangeSetId (base name: "RootChangeSetId")', function() {
      // uncomment below and update the code to test the property rootChangeSetId
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

    it('should have the property onStackFailure (base name: "OnStackFailure")', function() {
      // uncomment below and update the code to test the property onStackFailure
      //var instance = new AwsCloudFormation.DescribeChangeSetOutput();
      //expect(instance).to.be();
    });

  });

}));
