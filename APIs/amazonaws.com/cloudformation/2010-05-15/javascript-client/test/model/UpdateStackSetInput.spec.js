/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsCloudFormation);
  }
}(this, function(expect, AwsCloudFormation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsCloudFormation.UpdateStackSetInput();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UpdateStackSetInput', function() {
    it('should create an instance of UpdateStackSetInput', function() {
      // uncomment below and update the code to test UpdateStackSetInput
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be.a(AwsCloudFormation.UpdateStackSetInput);
    });

    it('should have the property stackSetName (base name: "StackSetName")', function() {
      // uncomment below and update the code to test the property stackSetName
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property templateBody (base name: "TemplateBody")', function() {
      // uncomment below and update the code to test the property templateBody
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property templateURL (base name: "TemplateURL")', function() {
      // uncomment below and update the code to test the property templateURL
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property usePreviousTemplate (base name: "UsePreviousTemplate")', function() {
      // uncomment below and update the code to test the property usePreviousTemplate
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property parameters (base name: "Parameters")', function() {
      // uncomment below and update the code to test the property parameters
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property capabilities (base name: "Capabilities")', function() {
      // uncomment below and update the code to test the property capabilities
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property operationPreferences (base name: "OperationPreferences")', function() {
      // uncomment below and update the code to test the property operationPreferences
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property administrationRoleARN (base name: "AdministrationRoleARN")', function() {
      // uncomment below and update the code to test the property administrationRoleARN
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property executionRoleName (base name: "ExecutionRoleName")', function() {
      // uncomment below and update the code to test the property executionRoleName
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property deploymentTargets (base name: "DeploymentTargets")', function() {
      // uncomment below and update the code to test the property deploymentTargets
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property permissionModel (base name: "PermissionModel")', function() {
      // uncomment below and update the code to test the property permissionModel
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property autoDeployment (base name: "AutoDeployment")', function() {
      // uncomment below and update the code to test the property autoDeployment
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property operationId (base name: "OperationId")', function() {
      // uncomment below and update the code to test the property operationId
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property accounts (base name: "Accounts")', function() {
      // uncomment below and update the code to test the property accounts
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property regions (base name: "Regions")', function() {
      // uncomment below and update the code to test the property regions
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property callAs (base name: "CallAs")', function() {
      // uncomment below and update the code to test the property callAs
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

    it('should have the property managedExecution (base name: "ManagedExecution")', function() {
      // uncomment below and update the code to test the property managedExecution
      //var instance = new AwsCloudFormation.UpdateStackSetInput();
      //expect(instance).to.be();
    });

  });

}));
