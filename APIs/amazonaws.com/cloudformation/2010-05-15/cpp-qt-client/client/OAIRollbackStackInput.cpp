/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRollbackStackInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRollbackStackInput::OAIRollbackStackInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRollbackStackInput::OAIRollbackStackInput() {
    this->initializeModel();
}

OAIRollbackStackInput::~OAIRollbackStackInput() {}

void OAIRollbackStackInput::initializeModel() {

    m_stack_name_isSet = false;
    m_stack_name_isValid = false;

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;

    m_client_request_token_isSet = false;
    m_client_request_token_isValid = false;

    m_retain_except_on_create_isSet = false;
    m_retain_except_on_create_isValid = false;
}

void OAIRollbackStackInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRollbackStackInput::fromJsonObject(QJsonObject json) {

    m_stack_name_isValid = ::OpenAPI::fromJsonValue(m_stack_name, json[QString("StackName")]);
    m_stack_name_isSet = !json[QString("StackName")].isNull() && m_stack_name_isValid;

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("RoleARN")]);
    m_role_arn_isSet = !json[QString("RoleARN")].isNull() && m_role_arn_isValid;

    m_client_request_token_isValid = ::OpenAPI::fromJsonValue(m_client_request_token, json[QString("ClientRequestToken")]);
    m_client_request_token_isSet = !json[QString("ClientRequestToken")].isNull() && m_client_request_token_isValid;

    m_retain_except_on_create_isValid = ::OpenAPI::fromJsonValue(m_retain_except_on_create, json[QString("RetainExceptOnCreate")]);
    m_retain_except_on_create_isSet = !json[QString("RetainExceptOnCreate")].isNull() && m_retain_except_on_create_isValid;
}

QString OAIRollbackStackInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRollbackStackInput::asJsonObject() const {
    QJsonObject obj;
    if (m_stack_name_isSet) {
        obj.insert(QString("StackName"), ::OpenAPI::toJsonValue(m_stack_name));
    }
    if (m_role_arn_isSet) {
        obj.insert(QString("RoleARN"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    if (m_client_request_token_isSet) {
        obj.insert(QString("ClientRequestToken"), ::OpenAPI::toJsonValue(m_client_request_token));
    }
    if (m_retain_except_on_create_isSet) {
        obj.insert(QString("RetainExceptOnCreate"), ::OpenAPI::toJsonValue(m_retain_except_on_create));
    }
    return obj;
}

QString OAIRollbackStackInput::getStackName() const {
    return m_stack_name;
}
void OAIRollbackStackInput::setStackName(const QString &stack_name) {
    m_stack_name = stack_name;
    m_stack_name_isSet = true;
}

bool OAIRollbackStackInput::is_stack_name_Set() const{
    return m_stack_name_isSet;
}

bool OAIRollbackStackInput::is_stack_name_Valid() const{
    return m_stack_name_isValid;
}

QString OAIRollbackStackInput::getRoleArn() const {
    return m_role_arn;
}
void OAIRollbackStackInput::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAIRollbackStackInput::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAIRollbackStackInput::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

QString OAIRollbackStackInput::getClientRequestToken() const {
    return m_client_request_token;
}
void OAIRollbackStackInput::setClientRequestToken(const QString &client_request_token) {
    m_client_request_token = client_request_token;
    m_client_request_token_isSet = true;
}

bool OAIRollbackStackInput::is_client_request_token_Set() const{
    return m_client_request_token_isSet;
}

bool OAIRollbackStackInput::is_client_request_token_Valid() const{
    return m_client_request_token_isValid;
}

bool OAIRollbackStackInput::getRetainExceptOnCreate() const {
    return m_retain_except_on_create;
}
void OAIRollbackStackInput::setRetainExceptOnCreate(const bool &retain_except_on_create) {
    m_retain_except_on_create = retain_except_on_create;
    m_retain_except_on_create_isSet = true;
}

bool OAIRollbackStackInput::is_retain_except_on_create_Set() const{
    return m_retain_except_on_create_isSet;
}

bool OAIRollbackStackInput::is_retain_except_on_create_Valid() const{
    return m_retain_except_on_create_isValid;
}

bool OAIRollbackStackInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_stack_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_request_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_retain_except_on_create_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRollbackStackInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_stack_name_isValid && true;
}

} // namespace OpenAPI
