/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBatchDescribeTypeConfigurationsOutput.h
 *
 * 
 */

#ifndef OAIBatchDescribeTypeConfigurationsOutput_H
#define OAIBatchDescribeTypeConfigurationsOutput_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBatchDescribeTypeConfigurationsOutput : public OAIObject {
public:
    OAIBatchDescribeTypeConfigurationsOutput();
    OAIBatchDescribeTypeConfigurationsOutput(QString json);
    ~OAIBatchDescribeTypeConfigurationsOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getErrors() const;
    void setErrors(const QList &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    QList getUnprocessedTypeConfigurations() const;
    void setUnprocessedTypeConfigurations(const QList &unprocessed_type_configurations);
    bool is_unprocessed_type_configurations_Set() const;
    bool is_unprocessed_type_configurations_Valid() const;

    QList getTypeConfigurations() const;
    void setTypeConfigurations(const QList &type_configurations);
    bool is_type_configurations_Set() const;
    bool is_type_configurations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    QList m_unprocessed_type_configurations;
    bool m_unprocessed_type_configurations_isSet;
    bool m_unprocessed_type_configurations_isValid;

    QList m_type_configurations;
    bool m_type_configurations_isSet;
    bool m_type_configurations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBatchDescribeTypeConfigurationsOutput)

#endif // OAIBatchDescribeTypeConfigurationsOutput_H
