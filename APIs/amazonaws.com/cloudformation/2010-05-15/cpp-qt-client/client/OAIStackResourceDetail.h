/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStackResourceDetail.h
 *
 * Contains detailed information about the specified stack resource.
 */

#ifndef OAIStackResourceDetail_H
#define OAIStackResourceDetail_H

#include <QJsonObject>

#include "OAIResourceChange_ModuleInfo.h"
#include "OAIResourceStatus.h"
#include "OAIStackResourceDetail_DriftInformation.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStackResourceDetail_DriftInformation;
class OAIResourceChange_ModuleInfo;

class OAIStackResourceDetail : public OAIObject {
public:
    OAIStackResourceDetail();
    OAIStackResourceDetail(QString json);
    ~OAIStackResourceDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStackName() const;
    void setStackName(const QString &stack_name);
    bool is_stack_name_Set() const;
    bool is_stack_name_Valid() const;

    QString getStackId() const;
    void setStackId(const QString &stack_id);
    bool is_stack_id_Set() const;
    bool is_stack_id_Valid() const;

    QString getLogicalResourceId() const;
    void setLogicalResourceId(const QString &logical_resource_id);
    bool is_logical_resource_id_Set() const;
    bool is_logical_resource_id_Valid() const;

    QString getPhysicalResourceId() const;
    void setPhysicalResourceId(const QString &physical_resource_id);
    bool is_physical_resource_id_Set() const;
    bool is_physical_resource_id_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    QDateTime getLastUpdatedTimestamp() const;
    void setLastUpdatedTimestamp(const QDateTime &last_updated_timestamp);
    bool is_last_updated_timestamp_Set() const;
    bool is_last_updated_timestamp_Valid() const;

    OAIResourceStatus getResourceStatus() const;
    void setResourceStatus(const OAIResourceStatus &resource_status);
    bool is_resource_status_Set() const;
    bool is_resource_status_Valid() const;

    QString getResourceStatusReason() const;
    void setResourceStatusReason(const QString &resource_status_reason);
    bool is_resource_status_reason_Set() const;
    bool is_resource_status_reason_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getMetadata() const;
    void setMetadata(const QString &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    OAIStackResourceDetail_DriftInformation getDriftInformation() const;
    void setDriftInformation(const OAIStackResourceDetail_DriftInformation &drift_information);
    bool is_drift_information_Set() const;
    bool is_drift_information_Valid() const;

    OAIResourceChange_ModuleInfo getModuleInfo() const;
    void setModuleInfo(const OAIResourceChange_ModuleInfo &module_info);
    bool is_module_info_Set() const;
    bool is_module_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_stack_name;
    bool m_stack_name_isSet;
    bool m_stack_name_isValid;

    QString m_stack_id;
    bool m_stack_id_isSet;
    bool m_stack_id_isValid;

    QString m_logical_resource_id;
    bool m_logical_resource_id_isSet;
    bool m_logical_resource_id_isValid;

    QString m_physical_resource_id;
    bool m_physical_resource_id_isSet;
    bool m_physical_resource_id_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    QDateTime m_last_updated_timestamp;
    bool m_last_updated_timestamp_isSet;
    bool m_last_updated_timestamp_isValid;

    OAIResourceStatus m_resource_status;
    bool m_resource_status_isSet;
    bool m_resource_status_isValid;

    QString m_resource_status_reason;
    bool m_resource_status_reason_isSet;
    bool m_resource_status_reason_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    OAIStackResourceDetail_DriftInformation m_drift_information;
    bool m_drift_information_isSet;
    bool m_drift_information_isValid;

    OAIResourceChange_ModuleInfo m_module_info;
    bool m_module_info_isSet;
    bool m_module_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStackResourceDetail)

#endif // OAIStackResourceDetail_H
