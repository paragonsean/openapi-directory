/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecordHandlerProgressInput.h
 *
 * 
 */

#ifndef OAIRecordHandlerProgressInput_H
#define OAIRecordHandlerProgressInput_H

#include <QJsonObject>

#include "OAIHandlerErrorCode.h"
#include "OAIOperationStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRecordHandlerProgressInput : public OAIObject {
public:
    OAIRecordHandlerProgressInput();
    OAIRecordHandlerProgressInput(QString json);
    ~OAIRecordHandlerProgressInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBearerToken() const;
    void setBearerToken(const QString &bearer_token);
    bool is_bearer_token_Set() const;
    bool is_bearer_token_Valid() const;

    OAIOperationStatus getOperationStatus() const;
    void setOperationStatus(const OAIOperationStatus &operation_status);
    bool is_operation_status_Set() const;
    bool is_operation_status_Valid() const;

    OAIOperationStatus getCurrentOperationStatus() const;
    void setCurrentOperationStatus(const OAIOperationStatus &current_operation_status);
    bool is_current_operation_status_Set() const;
    bool is_current_operation_status_Valid() const;

    QString getStatusMessage() const;
    void setStatusMessage(const QString &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    OAIHandlerErrorCode getErrorCode() const;
    void setErrorCode(const OAIHandlerErrorCode &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QString getResourceModel() const;
    void setResourceModel(const QString &resource_model);
    bool is_resource_model_Set() const;
    bool is_resource_model_Valid() const;

    QString getClientRequestToken() const;
    void setClientRequestToken(const QString &client_request_token);
    bool is_client_request_token_Set() const;
    bool is_client_request_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bearer_token;
    bool m_bearer_token_isSet;
    bool m_bearer_token_isValid;

    OAIOperationStatus m_operation_status;
    bool m_operation_status_isSet;
    bool m_operation_status_isValid;

    OAIOperationStatus m_current_operation_status;
    bool m_current_operation_status_isSet;
    bool m_current_operation_status_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;

    OAIHandlerErrorCode m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QString m_resource_model;
    bool m_resource_model_isSet;
    bool m_resource_model_isValid;

    QString m_client_request_token;
    bool m_client_request_token_isSet;
    bool m_client_request_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecordHandlerProgressInput)

#endif // OAIRecordHandlerProgressInput_H
