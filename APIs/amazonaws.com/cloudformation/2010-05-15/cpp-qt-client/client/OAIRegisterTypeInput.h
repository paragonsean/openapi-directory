/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRegisterTypeInput.h
 *
 * 
 */

#ifndef OAIRegisterTypeInput_H
#define OAIRegisterTypeInput_H

#include <QJsonObject>

#include "OAIRegisterTypeInput_LoggingConfig.h"
#include "OAIRegistryType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRegisterTypeInput_LoggingConfig;

class OAIRegisterTypeInput : public OAIObject {
public:
    OAIRegisterTypeInput();
    OAIRegisterTypeInput(QString json);
    ~OAIRegisterTypeInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRegistryType getType() const;
    void setType(const OAIRegistryType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getTypeName() const;
    void setTypeName(const QString &type_name);
    bool is_type_name_Set() const;
    bool is_type_name_Valid() const;

    QString getSchemaHandlerPackage() const;
    void setSchemaHandlerPackage(const QString &schema_handler_package);
    bool is_schema_handler_package_Set() const;
    bool is_schema_handler_package_Valid() const;

    OAIRegisterTypeInput_LoggingConfig getLoggingConfig() const;
    void setLoggingConfig(const OAIRegisterTypeInput_LoggingConfig &logging_config);
    bool is_logging_config_Set() const;
    bool is_logging_config_Valid() const;

    QString getExecutionRoleArn() const;
    void setExecutionRoleArn(const QString &execution_role_arn);
    bool is_execution_role_arn_Set() const;
    bool is_execution_role_arn_Valid() const;

    QString getClientRequestToken() const;
    void setClientRequestToken(const QString &client_request_token);
    bool is_client_request_token_Set() const;
    bool is_client_request_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRegistryType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_type_name;
    bool m_type_name_isSet;
    bool m_type_name_isValid;

    QString m_schema_handler_package;
    bool m_schema_handler_package_isSet;
    bool m_schema_handler_package_isValid;

    OAIRegisterTypeInput_LoggingConfig m_logging_config;
    bool m_logging_config_isSet;
    bool m_logging_config_isValid;

    QString m_execution_role_arn;
    bool m_execution_role_arn_isSet;
    bool m_execution_role_arn_isValid;

    QString m_client_request_token;
    bool m_client_request_token_isSet;
    bool m_client_request_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRegisterTypeInput)

#endif // OAIRegisterTypeInput_H
