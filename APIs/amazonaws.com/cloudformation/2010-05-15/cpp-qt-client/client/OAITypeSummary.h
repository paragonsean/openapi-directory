/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITypeSummary.h
 *
 * Contains summary information about the specified CloudFormation extension.
 */

#ifndef OAITypeSummary_H
#define OAITypeSummary_H

#include <QJsonObject>

#include "OAIIdentityProvider.h"
#include "OAIRegistryType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITypeSummary : public OAIObject {
public:
    OAITypeSummary();
    OAITypeSummary(QString json);
    ~OAITypeSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRegistryType getType() const;
    void setType(const OAIRegistryType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getTypeName() const;
    void setTypeName(const QString &type_name);
    bool is_type_name_Set() const;
    bool is_type_name_Valid() const;

    QString getDefaultVersionId() const;
    void setDefaultVersionId(const QString &default_version_id);
    bool is_default_version_id_Set() const;
    bool is_default_version_id_Valid() const;

    QString getTypeArn() const;
    void setTypeArn(const QString &type_arn);
    bool is_type_arn_Set() const;
    bool is_type_arn_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getPublisherId() const;
    void setPublisherId(const QString &publisher_id);
    bool is_publisher_id_Set() const;
    bool is_publisher_id_Valid() const;

    QString getOriginalTypeName() const;
    void setOriginalTypeName(const QString &original_type_name);
    bool is_original_type_name_Set() const;
    bool is_original_type_name_Valid() const;

    QString getPublicVersionNumber() const;
    void setPublicVersionNumber(const QString &public_version_number);
    bool is_public_version_number_Set() const;
    bool is_public_version_number_Valid() const;

    QString getLatestPublicVersion() const;
    void setLatestPublicVersion(const QString &latest_public_version);
    bool is_latest_public_version_Set() const;
    bool is_latest_public_version_Valid() const;

    OAIIdentityProvider getPublisherIdentity() const;
    void setPublisherIdentity(const OAIIdentityProvider &publisher_identity);
    bool is_publisher_identity_Set() const;
    bool is_publisher_identity_Valid() const;

    QString getPublisherName() const;
    void setPublisherName(const QString &publisher_name);
    bool is_publisher_name_Set() const;
    bool is_publisher_name_Valid() const;

    bool getIsActivated() const;
    void setIsActivated(const bool &is_activated);
    bool is_is_activated_Set() const;
    bool is_is_activated_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRegistryType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_type_name;
    bool m_type_name_isSet;
    bool m_type_name_isValid;

    QString m_default_version_id;
    bool m_default_version_id_isSet;
    bool m_default_version_id_isValid;

    QString m_type_arn;
    bool m_type_arn_isSet;
    bool m_type_arn_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_publisher_id;
    bool m_publisher_id_isSet;
    bool m_publisher_id_isValid;

    QString m_original_type_name;
    bool m_original_type_name_isSet;
    bool m_original_type_name_isValid;

    QString m_public_version_number;
    bool m_public_version_number_isSet;
    bool m_public_version_number_isValid;

    QString m_latest_public_version;
    bool m_latest_public_version_isSet;
    bool m_latest_public_version_isValid;

    OAIIdentityProvider m_publisher_identity;
    bool m_publisher_identity_isSet;
    bool m_publisher_identity_isValid;

    QString m_publisher_name;
    bool m_publisher_name_isSet;
    bool m_publisher_name_isValid;

    bool m_is_activated;
    bool m_is_activated_isSet;
    bool m_is_activated_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITypeSummary)

#endif // OAITypeSummary_H
