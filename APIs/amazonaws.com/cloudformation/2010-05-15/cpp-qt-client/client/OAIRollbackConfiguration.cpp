/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRollbackConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRollbackConfiguration::OAIRollbackConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRollbackConfiguration::OAIRollbackConfiguration() {
    this->initializeModel();
}

OAIRollbackConfiguration::~OAIRollbackConfiguration() {}

void OAIRollbackConfiguration::initializeModel() {

    m_rollback_triggers_isSet = false;
    m_rollback_triggers_isValid = false;

    m_monitoring_time_in_minutes_isSet = false;
    m_monitoring_time_in_minutes_isValid = false;
}

void OAIRollbackConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRollbackConfiguration::fromJsonObject(QJsonObject json) {

    m_rollback_triggers_isValid = ::OpenAPI::fromJsonValue(m_rollback_triggers, json[QString("RollbackTriggers")]);
    m_rollback_triggers_isSet = !json[QString("RollbackTriggers")].isNull() && m_rollback_triggers_isValid;

    m_monitoring_time_in_minutes_isValid = ::OpenAPI::fromJsonValue(m_monitoring_time_in_minutes, json[QString("MonitoringTimeInMinutes")]);
    m_monitoring_time_in_minutes_isSet = !json[QString("MonitoringTimeInMinutes")].isNull() && m_monitoring_time_in_minutes_isValid;
}

QString OAIRollbackConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRollbackConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_rollback_triggers.isSet()) {
        obj.insert(QString("RollbackTriggers"), ::OpenAPI::toJsonValue(m_rollback_triggers));
    }
    if (m_monitoring_time_in_minutes_isSet) {
        obj.insert(QString("MonitoringTimeInMinutes"), ::OpenAPI::toJsonValue(m_monitoring_time_in_minutes));
    }
    return obj;
}

QList OAIRollbackConfiguration::getRollbackTriggers() const {
    return m_rollback_triggers;
}
void OAIRollbackConfiguration::setRollbackTriggers(const QList &rollback_triggers) {
    m_rollback_triggers = rollback_triggers;
    m_rollback_triggers_isSet = true;
}

bool OAIRollbackConfiguration::is_rollback_triggers_Set() const{
    return m_rollback_triggers_isSet;
}

bool OAIRollbackConfiguration::is_rollback_triggers_Valid() const{
    return m_rollback_triggers_isValid;
}

qint32 OAIRollbackConfiguration::getMonitoringTimeInMinutes() const {
    return m_monitoring_time_in_minutes;
}
void OAIRollbackConfiguration::setMonitoringTimeInMinutes(const qint32 &monitoring_time_in_minutes) {
    m_monitoring_time_in_minutes = monitoring_time_in_minutes;
    m_monitoring_time_in_minutes_isSet = true;
}

bool OAIRollbackConfiguration::is_monitoring_time_in_minutes_Set() const{
    return m_monitoring_time_in_minutes_isSet;
}

bool OAIRollbackConfiguration::is_monitoring_time_in_minutes_Valid() const{
    return m_monitoring_time_in_minutes_isValid;
}

bool OAIRollbackConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rollback_triggers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitoring_time_in_minutes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRollbackConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
