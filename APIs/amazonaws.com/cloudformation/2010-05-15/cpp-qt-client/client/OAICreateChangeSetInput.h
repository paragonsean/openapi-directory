/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateChangeSetInput.h
 *
 * The input for the &lt;a&gt;CreateChangeSet&lt;/a&gt; action.
 */

#ifndef OAICreateChangeSetInput_H
#define OAICreateChangeSetInput_H

#include <QJsonObject>

#include "OAIChangeSetType.h"
#include "OAIDescribeChangeSetOutput_RollbackConfiguration.h"
#include "OAIOnStackFailure.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeChangeSetOutput_RollbackConfiguration;

class OAICreateChangeSetInput : public OAIObject {
public:
    OAICreateChangeSetInput();
    OAICreateChangeSetInput(QString json);
    ~OAICreateChangeSetInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStackName() const;
    void setStackName(const QString &stack_name);
    bool is_stack_name_Set() const;
    bool is_stack_name_Valid() const;

    QString getTemplateBody() const;
    void setTemplateBody(const QString &template_body);
    bool is_template_body_Set() const;
    bool is_template_body_Valid() const;

    QString getTemplateUrl() const;
    void setTemplateUrl(const QString &template_url);
    bool is_template_url_Set() const;
    bool is_template_url_Valid() const;

    bool getUsePreviousTemplate() const;
    void setUsePreviousTemplate(const bool &use_previous_template);
    bool is_use_previous_template_Set() const;
    bool is_use_previous_template_Valid() const;

    QList getParameters() const;
    void setParameters(const QList &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QList getCapabilities() const;
    void setCapabilities(const QList &capabilities);
    bool is_capabilities_Set() const;
    bool is_capabilities_Valid() const;

    QList getResourceTypes() const;
    void setResourceTypes(const QList &resource_types);
    bool is_resource_types_Set() const;
    bool is_resource_types_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    OAIDescribeChangeSetOutput_RollbackConfiguration getRollbackConfiguration() const;
    void setRollbackConfiguration(const OAIDescribeChangeSetOutput_RollbackConfiguration &rollback_configuration);
    bool is_rollback_configuration_Set() const;
    bool is_rollback_configuration_Valid() const;

    QList getNotificationArns() const;
    void setNotificationArns(const QList &notification_arns);
    bool is_notification_arns_Set() const;
    bool is_notification_arns_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getChangeSetName() const;
    void setChangeSetName(const QString &change_set_name);
    bool is_change_set_name_Set() const;
    bool is_change_set_name_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIChangeSetType getChangeSetType() const;
    void setChangeSetType(const OAIChangeSetType &change_set_type);
    bool is_change_set_type_Set() const;
    bool is_change_set_type_Valid() const;

    QList getResourcesToImport() const;
    void setResourcesToImport(const QList &resources_to_import);
    bool is_resources_to_import_Set() const;
    bool is_resources_to_import_Valid() const;

    bool getIncludeNestedStacks() const;
    void setIncludeNestedStacks(const bool &include_nested_stacks);
    bool is_include_nested_stacks_Set() const;
    bool is_include_nested_stacks_Valid() const;

    OAIOnStackFailure getOnStackFailure() const;
    void setOnStackFailure(const OAIOnStackFailure &on_stack_failure);
    bool is_on_stack_failure_Set() const;
    bool is_on_stack_failure_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_stack_name;
    bool m_stack_name_isSet;
    bool m_stack_name_isValid;

    QString m_template_body;
    bool m_template_body_isSet;
    bool m_template_body_isValid;

    QString m_template_url;
    bool m_template_url_isSet;
    bool m_template_url_isValid;

    bool m_use_previous_template;
    bool m_use_previous_template_isSet;
    bool m_use_previous_template_isValid;

    QList m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QList m_capabilities;
    bool m_capabilities_isSet;
    bool m_capabilities_isValid;

    QList m_resource_types;
    bool m_resource_types_isSet;
    bool m_resource_types_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    OAIDescribeChangeSetOutput_RollbackConfiguration m_rollback_configuration;
    bool m_rollback_configuration_isSet;
    bool m_rollback_configuration_isValid;

    QList m_notification_arns;
    bool m_notification_arns_isSet;
    bool m_notification_arns_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_change_set_name;
    bool m_change_set_name_isSet;
    bool m_change_set_name_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIChangeSetType m_change_set_type;
    bool m_change_set_type_isSet;
    bool m_change_set_type_isValid;

    QList m_resources_to_import;
    bool m_resources_to_import_isSet;
    bool m_resources_to_import_isValid;

    bool m_include_nested_stacks;
    bool m_include_nested_stacks_isSet;
    bool m_include_nested_stacks_isValid;

    OAIOnStackFailure m_on_stack_failure;
    bool m_on_stack_failure_isSet;
    bool m_on_stack_failure_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateChangeSetInput)

#endif // OAICreateChangeSetInput_H
