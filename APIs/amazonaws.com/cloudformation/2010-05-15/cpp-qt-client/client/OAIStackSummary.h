/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStackSummary.h
 *
 * The StackSummary Data Type
 */

#ifndef OAIStackSummary_H
#define OAIStackSummary_H

#include <QJsonObject>

#include "OAIStackStatus.h"
#include "OAIStackSummary_DriftInformation.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStackSummary_DriftInformation;

class OAIStackSummary : public OAIObject {
public:
    OAIStackSummary();
    OAIStackSummary(QString json);
    ~OAIStackSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStackId() const;
    void setStackId(const QString &stack_id);
    bool is_stack_id_Set() const;
    bool is_stack_id_Valid() const;

    QString getStackName() const;
    void setStackName(const QString &stack_name);
    bool is_stack_name_Set() const;
    bool is_stack_name_Valid() const;

    QString getTemplateDescription() const;
    void setTemplateDescription(const QString &template_description);
    bool is_template_description_Set() const;
    bool is_template_description_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    QDateTime getDeletionTime() const;
    void setDeletionTime(const QDateTime &deletion_time);
    bool is_deletion_time_Set() const;
    bool is_deletion_time_Valid() const;

    OAIStackStatus getStackStatus() const;
    void setStackStatus(const OAIStackStatus &stack_status);
    bool is_stack_status_Set() const;
    bool is_stack_status_Valid() const;

    QString getStackStatusReason() const;
    void setStackStatusReason(const QString &stack_status_reason);
    bool is_stack_status_reason_Set() const;
    bool is_stack_status_reason_Valid() const;

    QString getParentId() const;
    void setParentId(const QString &parent_id);
    bool is_parent_id_Set() const;
    bool is_parent_id_Valid() const;

    QString getRootId() const;
    void setRootId(const QString &root_id);
    bool is_root_id_Set() const;
    bool is_root_id_Valid() const;

    OAIStackSummary_DriftInformation getDriftInformation() const;
    void setDriftInformation(const OAIStackSummary_DriftInformation &drift_information);
    bool is_drift_information_Set() const;
    bool is_drift_information_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_stack_id;
    bool m_stack_id_isSet;
    bool m_stack_id_isValid;

    QString m_stack_name;
    bool m_stack_name_isSet;
    bool m_stack_name_isValid;

    QString m_template_description;
    bool m_template_description_isSet;
    bool m_template_description_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    QDateTime m_deletion_time;
    bool m_deletion_time_isSet;
    bool m_deletion_time_isValid;

    OAIStackStatus m_stack_status;
    bool m_stack_status_isSet;
    bool m_stack_status_isValid;

    QString m_stack_status_reason;
    bool m_stack_status_reason_isSet;
    bool m_stack_status_reason_isValid;

    QString m_parent_id;
    bool m_parent_id_isSet;
    bool m_parent_id_isValid;

    QString m_root_id;
    bool m_root_id_isSet;
    bool m_root_id_isValid;

    OAIStackSummary_DriftInformation m_drift_information;
    bool m_drift_information_isSet;
    bool m_drift_information_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStackSummary)

#endif // OAIStackSummary_H
