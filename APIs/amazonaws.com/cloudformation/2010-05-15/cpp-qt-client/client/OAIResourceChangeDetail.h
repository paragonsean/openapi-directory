/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResourceChangeDetail.h
 *
 * For a resource with &lt;code&gt;Modify&lt;/code&gt; as the action, the &lt;code&gt;ResourceChange&lt;/code&gt; structure describes the changes CloudFormation will make to that resource.
 */

#ifndef OAIResourceChangeDetail_H
#define OAIResourceChangeDetail_H

#include <QJsonObject>

#include "OAIChangeSource.h"
#include "OAIEvaluationType.h"
#include "OAIResourceChangeDetail_Target.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourceChangeDetail_Target;

class OAIResourceChangeDetail : public OAIObject {
public:
    OAIResourceChangeDetail();
    OAIResourceChangeDetail(QString json);
    ~OAIResourceChangeDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResourceChangeDetail_Target getTarget() const;
    void setTarget(const OAIResourceChangeDetail_Target &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    OAIEvaluationType getEvaluation() const;
    void setEvaluation(const OAIEvaluationType &evaluation);
    bool is_evaluation_Set() const;
    bool is_evaluation_Valid() const;

    OAIChangeSource getChangeSource() const;
    void setChangeSource(const OAIChangeSource &change_source);
    bool is_change_source_Set() const;
    bool is_change_source_Valid() const;

    QString getCausingEntity() const;
    void setCausingEntity(const QString &causing_entity);
    bool is_causing_entity_Set() const;
    bool is_causing_entity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResourceChangeDetail_Target m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    OAIEvaluationType m_evaluation;
    bool m_evaluation_isSet;
    bool m_evaluation_isValid;

    OAIChangeSource m_change_source;
    bool m_change_source_isSet;
    bool m_change_source_isValid;

    QString m_causing_entity;
    bool m_causing_entity_isSet;
    bool m_causing_entity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResourceChangeDetail)

#endif // OAIResourceChangeDetail_H
