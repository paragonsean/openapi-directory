/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListTypesInput.h
 *
 * 
 */

#ifndef OAIListTypesInput_H
#define OAIListTypesInput_H

#include <QJsonObject>

#include "OAIDeprecatedStatus.h"
#include "OAIListTypesInput_Filters.h"
#include "OAIProvisioningType.h"
#include "OAIRegistryType.h"
#include "OAIVisibility.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIListTypesInput_Filters;

class OAIListTypesInput : public OAIObject {
public:
    OAIListTypesInput();
    OAIListTypesInput(QString json);
    ~OAIListTypesInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVisibility getVisibility() const;
    void setVisibility(const OAIVisibility &visibility);
    bool is_visibility_Set() const;
    bool is_visibility_Valid() const;

    OAIProvisioningType getProvisioningType() const;
    void setProvisioningType(const OAIProvisioningType &provisioning_type);
    bool is_provisioning_type_Set() const;
    bool is_provisioning_type_Valid() const;

    OAIDeprecatedStatus getDeprecatedStatus() const;
    void setDeprecatedStatus(const OAIDeprecatedStatus &deprecated_status);
    bool is_deprecated_status_Set() const;
    bool is_deprecated_status_Valid() const;

    OAIRegistryType getType() const;
    void setType(const OAIRegistryType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIListTypesInput_Filters getFilters() const;
    void setFilters(const OAIListTypesInput_Filters &filters);
    bool is_filters_Set() const;
    bool is_filters_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVisibility m_visibility;
    bool m_visibility_isSet;
    bool m_visibility_isValid;

    OAIProvisioningType m_provisioning_type;
    bool m_provisioning_type_isSet;
    bool m_provisioning_type_isValid;

    OAIDeprecatedStatus m_deprecated_status;
    bool m_deprecated_status_isSet;
    bool m_deprecated_status_isValid;

    OAIRegistryType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIListTypesInput_Filters m_filters;
    bool m_filters_isSet;
    bool m_filters_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListTypesInput)

#endif // OAIListTypesInput_H
