/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribePublisherOutput.h
 *
 * 
 */

#ifndef OAIDescribePublisherOutput_H
#define OAIDescribePublisherOutput_H

#include <QJsonObject>

#include "OAIIdentityProvider.h"
#include "OAIPublisherStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribePublisherOutput : public OAIObject {
public:
    OAIDescribePublisherOutput();
    OAIDescribePublisherOutput(QString json);
    ~OAIDescribePublisherOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPublisherId() const;
    void setPublisherId(const QString &publisher_id);
    bool is_publisher_id_Set() const;
    bool is_publisher_id_Valid() const;

    OAIPublisherStatus getPublisherStatus() const;
    void setPublisherStatus(const OAIPublisherStatus &publisher_status);
    bool is_publisher_status_Set() const;
    bool is_publisher_status_Valid() const;

    OAIIdentityProvider getIdentityProvider() const;
    void setIdentityProvider(const OAIIdentityProvider &identity_provider);
    bool is_identity_provider_Set() const;
    bool is_identity_provider_Valid() const;

    QString getPublisherProfile() const;
    void setPublisherProfile(const QString &publisher_profile);
    bool is_publisher_profile_Set() const;
    bool is_publisher_profile_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_publisher_id;
    bool m_publisher_id_isSet;
    bool m_publisher_id_isValid;

    OAIPublisherStatus m_publisher_status;
    bool m_publisher_status_isSet;
    bool m_publisher_status_isValid;

    OAIIdentityProvider m_identity_provider;
    bool m_identity_provider_isSet;
    bool m_identity_provider_isValid;

    QString m_publisher_profile;
    bool m_publisher_profile_isSet;
    bool m_publisher_profile_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribePublisherOutput)

#endif // OAIDescribePublisherOutput_H
