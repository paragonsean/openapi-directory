/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChangeSetHook.h
 *
 * Specifies the resource, the hook, and the hook version to be invoked.
 */

#ifndef OAIChangeSetHook_H
#define OAIChangeSetHook_H

#include <QJsonObject>

#include "OAIChangeSetHook_TargetDetails.h"
#include "OAIHookFailureMode.h"
#include "OAIHookInvocationPoint.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChangeSetHook_TargetDetails;

class OAIChangeSetHook : public OAIObject {
public:
    OAIChangeSetHook();
    OAIChangeSetHook(QString json);
    ~OAIChangeSetHook() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHookInvocationPoint getInvocationPoint() const;
    void setInvocationPoint(const OAIHookInvocationPoint &invocation_point);
    bool is_invocation_point_Set() const;
    bool is_invocation_point_Valid() const;

    OAIHookFailureMode getFailureMode() const;
    void setFailureMode(const OAIHookFailureMode &failure_mode);
    bool is_failure_mode_Set() const;
    bool is_failure_mode_Valid() const;

    QString getTypeName() const;
    void setTypeName(const QString &type_name);
    bool is_type_name_Set() const;
    bool is_type_name_Valid() const;

    QString getTypeVersionId() const;
    void setTypeVersionId(const QString &type_version_id);
    bool is_type_version_id_Set() const;
    bool is_type_version_id_Valid() const;

    QString getTypeConfigurationVersionId() const;
    void setTypeConfigurationVersionId(const QString &type_configuration_version_id);
    bool is_type_configuration_version_id_Set() const;
    bool is_type_configuration_version_id_Valid() const;

    OAIChangeSetHook_TargetDetails getTargetDetails() const;
    void setTargetDetails(const OAIChangeSetHook_TargetDetails &target_details);
    bool is_target_details_Set() const;
    bool is_target_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHookInvocationPoint m_invocation_point;
    bool m_invocation_point_isSet;
    bool m_invocation_point_isValid;

    OAIHookFailureMode m_failure_mode;
    bool m_failure_mode_isSet;
    bool m_failure_mode_isValid;

    QString m_type_name;
    bool m_type_name_isSet;
    bool m_type_name_isValid;

    QString m_type_version_id;
    bool m_type_version_id_isSet;
    bool m_type_version_id_isValid;

    QString m_type_configuration_version_id;
    bool m_type_configuration_version_id_isSet;
    bool m_type_configuration_version_id_isValid;

    OAIChangeSetHook_TargetDetails m_target_details;
    bool m_target_details_isSet;
    bool m_target_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChangeSetHook)

#endif // OAIChangeSetHook_H
