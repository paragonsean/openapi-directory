/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIValidateTemplateOutput.h
 *
 * The output for &lt;a&gt;ValidateTemplate&lt;/a&gt; action.
 */

#ifndef OAIValidateTemplateOutput_H
#define OAIValidateTemplateOutput_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIValidateTemplateOutput : public OAIObject {
public:
    OAIValidateTemplateOutput();
    OAIValidateTemplateOutput(QString json);
    ~OAIValidateTemplateOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getParameters() const;
    void setParameters(const QList &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList getCapabilities() const;
    void setCapabilities(const QList &capabilities);
    bool is_capabilities_Set() const;
    bool is_capabilities_Valid() const;

    QString getCapabilitiesReason() const;
    void setCapabilitiesReason(const QString &capabilities_reason);
    bool is_capabilities_reason_Set() const;
    bool is_capabilities_reason_Valid() const;

    QList getDeclaredTransforms() const;
    void setDeclaredTransforms(const QList &declared_transforms);
    bool is_declared_transforms_Set() const;
    bool is_declared_transforms_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList m_capabilities;
    bool m_capabilities_isSet;
    bool m_capabilities_isValid;

    QString m_capabilities_reason;
    bool m_capabilities_reason_isSet;
    bool m_capabilities_reason_isValid;

    QList m_declared_transforms;
    bool m_declared_transforms_isSet;
    bool m_declared_transforms_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIValidateTemplateOutput)

#endif // OAIValidateTemplateOutput_H
