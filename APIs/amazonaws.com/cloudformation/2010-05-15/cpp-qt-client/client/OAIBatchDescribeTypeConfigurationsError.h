/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBatchDescribeTypeConfigurationsError.h
 *
 * Detailed information concerning an error generated during the setting of configuration data for a CloudFormation extension.
 */

#ifndef OAIBatchDescribeTypeConfigurationsError_H
#define OAIBatchDescribeTypeConfigurationsError_H

#include <QJsonObject>

#include "OAIBatchDescribeTypeConfigurationsError_TypeConfigurationIdentifier.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBatchDescribeTypeConfigurationsError_TypeConfigurationIdentifier;

class OAIBatchDescribeTypeConfigurationsError : public OAIObject {
public:
    OAIBatchDescribeTypeConfigurationsError();
    OAIBatchDescribeTypeConfigurationsError(QString json);
    ~OAIBatchDescribeTypeConfigurationsError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getErrorCode() const;
    void setErrorCode(const QString &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    OAIBatchDescribeTypeConfigurationsError_TypeConfigurationIdentifier getTypeConfigurationIdentifier() const;
    void setTypeConfigurationIdentifier(const OAIBatchDescribeTypeConfigurationsError_TypeConfigurationIdentifier &type_configuration_identifier);
    bool is_type_configuration_identifier_Set() const;
    bool is_type_configuration_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    OAIBatchDescribeTypeConfigurationsError_TypeConfigurationIdentifier m_type_configuration_identifier;
    bool m_type_configuration_identifier_isSet;
    bool m_type_configuration_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBatchDescribeTypeConfigurationsError)

#endif // OAIBatchDescribeTypeConfigurationsError_H
