/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChange_ResourceChange.h
 *
 * 
 */

#ifndef OAIChange_ResourceChange_H
#define OAIChange_ResourceChange_H

#include <QJsonObject>

#include "OAIChangeAction.h"
#include "OAIReplacement.h"
#include "OAIResourceChange_ModuleInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourceChange_ModuleInfo;

class OAIChange_ResourceChange : public OAIObject {
public:
    OAIChange_ResourceChange();
    OAIChange_ResourceChange(QString json);
    ~OAIChange_ResourceChange() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIChangeAction getAction() const;
    void setAction(const OAIChangeAction &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QString getLogicalResourceId() const;
    void setLogicalResourceId(const QString &logical_resource_id);
    bool is_logical_resource_id_Set() const;
    bool is_logical_resource_id_Valid() const;

    QString getPhysicalResourceId() const;
    void setPhysicalResourceId(const QString &physical_resource_id);
    bool is_physical_resource_id_Set() const;
    bool is_physical_resource_id_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    OAIReplacement getReplacement() const;
    void setReplacement(const OAIReplacement &replacement);
    bool is_replacement_Set() const;
    bool is_replacement_Valid() const;

    QList getScope() const;
    void setScope(const QList &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    QList getDetails() const;
    void setDetails(const QList &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    QString getChangeSetId() const;
    void setChangeSetId(const QString &change_set_id);
    bool is_change_set_id_Set() const;
    bool is_change_set_id_Valid() const;

    OAIResourceChange_ModuleInfo getModuleInfo() const;
    void setModuleInfo(const OAIResourceChange_ModuleInfo &module_info);
    bool is_module_info_Set() const;
    bool is_module_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIChangeAction m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QString m_logical_resource_id;
    bool m_logical_resource_id_isSet;
    bool m_logical_resource_id_isValid;

    QString m_physical_resource_id;
    bool m_physical_resource_id_isSet;
    bool m_physical_resource_id_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    OAIReplacement m_replacement;
    bool m_replacement_isSet;
    bool m_replacement_isValid;

    QList m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;

    QList m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    QString m_change_set_id;
    bool m_change_set_id_isSet;
    bool m_change_set_id_isValid;

    OAIResourceChange_ModuleInfo m_module_info;
    bool m_module_info_isSet;
    bool m_module_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChange_ResourceChange)

#endif // OAIChange_ResourceChange_H
