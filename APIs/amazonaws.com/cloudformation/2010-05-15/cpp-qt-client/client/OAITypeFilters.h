/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITypeFilters.h
 *
 * Filter criteria to use in determining which extensions to return.
 */

#ifndef OAITypeFilters_H
#define OAITypeFilters_H

#include <QJsonObject>

#include "OAICategory.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITypeFilters : public OAIObject {
public:
    OAITypeFilters();
    OAITypeFilters(QString json);
    ~OAITypeFilters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICategory getCategory() const;
    void setCategory(const OAICategory &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getPublisherId() const;
    void setPublisherId(const QString &publisher_id);
    bool is_publisher_id_Set() const;
    bool is_publisher_id_Valid() const;

    QString getTypeNamePrefix() const;
    void setTypeNamePrefix(const QString &type_name_prefix);
    bool is_type_name_prefix_Set() const;
    bool is_type_name_prefix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICategory m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_publisher_id;
    bool m_publisher_id_isSet;
    bool m_publisher_id_isValid;

    QString m_type_name_prefix;
    bool m_type_name_prefix_isSet;
    bool m_type_name_prefix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITypeFilters)

#endif // OAITypeFilters_H
