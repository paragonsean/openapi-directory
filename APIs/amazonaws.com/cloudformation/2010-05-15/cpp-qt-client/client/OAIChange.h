/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChange.h
 *
 * The &lt;code&gt;Change&lt;/code&gt; structure describes the changes CloudFormation will perform if you execute the change set.
 */

#ifndef OAIChange_H
#define OAIChange_H

#include <QJsonObject>

#include "OAIChangeType.h"
#include "OAIChange_ResourceChange.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChange_ResourceChange;

class OAIChange : public OAIObject {
public:
    OAIChange();
    OAIChange(QString json);
    ~OAIChange() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIChangeType getType() const;
    void setType(const OAIChangeType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getHookInvocationCount() const;
    void setHookInvocationCount(const qint32 &hook_invocation_count);
    bool is_hook_invocation_count_Set() const;
    bool is_hook_invocation_count_Valid() const;

    OAIChange_ResourceChange getResourceChange() const;
    void setResourceChange(const OAIChange_ResourceChange &resource_change);
    bool is_resource_change_Set() const;
    bool is_resource_change_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIChangeType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_hook_invocation_count;
    bool m_hook_invocation_count_isSet;
    bool m_hook_invocation_count_isValid;

    OAIChange_ResourceChange m_resource_change;
    bool m_resource_change_isSet;
    bool m_resource_change_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChange)

#endif // OAIChange_H
