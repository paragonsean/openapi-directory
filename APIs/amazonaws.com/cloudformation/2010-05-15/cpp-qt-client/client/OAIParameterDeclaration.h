/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParameterDeclaration.h
 *
 * The ParameterDeclaration data type.
 */

#ifndef OAIParameterDeclaration_H
#define OAIParameterDeclaration_H

#include <QJsonObject>

#include "OAIParameterDeclaration_ParameterConstraints.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIParameterDeclaration_ParameterConstraints;

class OAIParameterDeclaration : public OAIObject {
public:
    OAIParameterDeclaration();
    OAIParameterDeclaration(QString json);
    ~OAIParameterDeclaration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getParameterKey() const;
    void setParameterKey(const QString &parameter_key);
    bool is_parameter_key_Set() const;
    bool is_parameter_key_Valid() const;

    QString getDefaultValue() const;
    void setDefaultValue(const QString &default_value);
    bool is_default_value_Set() const;
    bool is_default_value_Valid() const;

    QString getParameterType() const;
    void setParameterType(const QString &parameter_type);
    bool is_parameter_type_Set() const;
    bool is_parameter_type_Valid() const;

    bool getNoEcho() const;
    void setNoEcho(const bool &no_echo);
    bool is_no_echo_Set() const;
    bool is_no_echo_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIParameterDeclaration_ParameterConstraints getParameterConstraints() const;
    void setParameterConstraints(const OAIParameterDeclaration_ParameterConstraints &parameter_constraints);
    bool is_parameter_constraints_Set() const;
    bool is_parameter_constraints_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_parameter_key;
    bool m_parameter_key_isSet;
    bool m_parameter_key_isValid;

    QString m_default_value;
    bool m_default_value_isSet;
    bool m_default_value_isValid;

    QString m_parameter_type;
    bool m_parameter_type_isSet;
    bool m_parameter_type_isValid;

    bool m_no_echo;
    bool m_no_echo_isSet;
    bool m_no_echo_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIParameterDeclaration_ParameterConstraints m_parameter_constraints;
    bool m_parameter_constraints_isSet;
    bool m_parameter_constraints_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParameterDeclaration)

#endif // OAIParameterDeclaration_H
