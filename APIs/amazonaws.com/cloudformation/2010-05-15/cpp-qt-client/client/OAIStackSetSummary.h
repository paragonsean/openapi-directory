/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStackSetSummary.h
 *
 * The structures that contain summary information about the specified stack set.
 */

#ifndef OAIStackSetSummary_H
#define OAIStackSetSummary_H

#include <QJsonObject>

#include "OAICreateStackSetInput_ManagedExecution.h"
#include "OAIPermissionModels.h"
#include "OAIStackDriftStatus.h"
#include "OAIStackSetStatus.h"
#include "OAIStackSetSummary_AutoDeployment.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStackSetSummary_AutoDeployment;
class OAICreateStackSetInput_ManagedExecution;

class OAIStackSetSummary : public OAIObject {
public:
    OAIStackSetSummary();
    OAIStackSetSummary(QString json);
    ~OAIStackSetSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStackSetName() const;
    void setStackSetName(const QString &stack_set_name);
    bool is_stack_set_name_Set() const;
    bool is_stack_set_name_Valid() const;

    QString getStackSetId() const;
    void setStackSetId(const QString &stack_set_id);
    bool is_stack_set_id_Set() const;
    bool is_stack_set_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIStackSetStatus getStatus() const;
    void setStatus(const OAIStackSetStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIStackSetSummary_AutoDeployment getAutoDeployment() const;
    void setAutoDeployment(const OAIStackSetSummary_AutoDeployment &auto_deployment);
    bool is_auto_deployment_Set() const;
    bool is_auto_deployment_Valid() const;

    OAIPermissionModels getPermissionModel() const;
    void setPermissionModel(const OAIPermissionModels &permission_model);
    bool is_permission_model_Set() const;
    bool is_permission_model_Valid() const;

    OAIStackDriftStatus getDriftStatus() const;
    void setDriftStatus(const OAIStackDriftStatus &drift_status);
    bool is_drift_status_Set() const;
    bool is_drift_status_Valid() const;

    QDateTime getLastDriftCheckTimestamp() const;
    void setLastDriftCheckTimestamp(const QDateTime &last_drift_check_timestamp);
    bool is_last_drift_check_timestamp_Set() const;
    bool is_last_drift_check_timestamp_Valid() const;

    OAICreateStackSetInput_ManagedExecution getManagedExecution() const;
    void setManagedExecution(const OAICreateStackSetInput_ManagedExecution &managed_execution);
    bool is_managed_execution_Set() const;
    bool is_managed_execution_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_stack_set_name;
    bool m_stack_set_name_isSet;
    bool m_stack_set_name_isValid;

    QString m_stack_set_id;
    bool m_stack_set_id_isSet;
    bool m_stack_set_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIStackSetStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIStackSetSummary_AutoDeployment m_auto_deployment;
    bool m_auto_deployment_isSet;
    bool m_auto_deployment_isValid;

    OAIPermissionModels m_permission_model;
    bool m_permission_model_isSet;
    bool m_permission_model_isValid;

    OAIStackDriftStatus m_drift_status;
    bool m_drift_status_isSet;
    bool m_drift_status_isValid;

    QDateTime m_last_drift_check_timestamp;
    bool m_last_drift_check_timestamp_isSet;
    bool m_last_drift_check_timestamp_isValid;

    OAICreateStackSetInput_ManagedExecution m_managed_execution;
    bool m_managed_execution_isSet;
    bool m_managed_execution_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStackSetSummary)

#endif // OAIStackSetSummary_H
