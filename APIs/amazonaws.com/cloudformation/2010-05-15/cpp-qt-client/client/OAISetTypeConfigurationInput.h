/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISetTypeConfigurationInput.h
 *
 * 
 */

#ifndef OAISetTypeConfigurationInput_H
#define OAISetTypeConfigurationInput_H

#include <QJsonObject>

#include "OAIThirdPartyType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISetTypeConfigurationInput : public OAIObject {
public:
    OAISetTypeConfigurationInput();
    OAISetTypeConfigurationInput(QString json);
    ~OAISetTypeConfigurationInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTypeArn() const;
    void setTypeArn(const QString &type_arn);
    bool is_type_arn_Set() const;
    bool is_type_arn_Valid() const;

    QString getConfiguration() const;
    void setConfiguration(const QString &configuration);
    bool is_configuration_Set() const;
    bool is_configuration_Valid() const;

    QString getConfigurationAlias() const;
    void setConfigurationAlias(const QString &configuration_alias);
    bool is_configuration_alias_Set() const;
    bool is_configuration_alias_Valid() const;

    QString getTypeName() const;
    void setTypeName(const QString &type_name);
    bool is_type_name_Set() const;
    bool is_type_name_Valid() const;

    OAIThirdPartyType getType() const;
    void setType(const OAIThirdPartyType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type_arn;
    bool m_type_arn_isSet;
    bool m_type_arn_isValid;

    QString m_configuration;
    bool m_configuration_isSet;
    bool m_configuration_isValid;

    QString m_configuration_alias;
    bool m_configuration_alias_isSet;
    bool m_configuration_alias_isValid;

    QString m_type_name;
    bool m_type_name_isSet;
    bool m_type_name_isValid;

    OAIThirdPartyType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISetTypeConfigurationInput)

#endif // OAISetTypeConfigurationInput_H
