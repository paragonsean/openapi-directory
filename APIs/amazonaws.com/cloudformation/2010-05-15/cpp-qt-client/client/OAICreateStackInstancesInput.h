/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateStackInstancesInput.h
 *
 * 
 */

#ifndef OAICreateStackInstancesInput_H
#define OAICreateStackInstancesInput_H

#include <QJsonObject>

#include "OAICallAs.h"
#include "OAICreateStackInstancesInput_DeploymentTargets.h"
#include "OAICreateStackInstancesInput_OperationPreferences.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateStackInstancesInput_DeploymentTargets;
class OAICreateStackInstancesInput_OperationPreferences;

class OAICreateStackInstancesInput : public OAIObject {
public:
    OAICreateStackInstancesInput();
    OAICreateStackInstancesInput(QString json);
    ~OAICreateStackInstancesInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStackSetName() const;
    void setStackSetName(const QString &stack_set_name);
    bool is_stack_set_name_Set() const;
    bool is_stack_set_name_Valid() const;

    QList getAccounts() const;
    void setAccounts(const QList &accounts);
    bool is_accounts_Set() const;
    bool is_accounts_Valid() const;

    OAICreateStackInstancesInput_DeploymentTargets getDeploymentTargets() const;
    void setDeploymentTargets(const OAICreateStackInstancesInput_DeploymentTargets &deployment_targets);
    bool is_deployment_targets_Set() const;
    bool is_deployment_targets_Valid() const;

    QList getRegions() const;
    void setRegions(const QList &regions);
    bool is_regions_Set() const;
    bool is_regions_Valid() const;

    QList getParameterOverrides() const;
    void setParameterOverrides(const QList &parameter_overrides);
    bool is_parameter_overrides_Set() const;
    bool is_parameter_overrides_Valid() const;

    OAICreateStackInstancesInput_OperationPreferences getOperationPreferences() const;
    void setOperationPreferences(const OAICreateStackInstancesInput_OperationPreferences &operation_preferences);
    bool is_operation_preferences_Set() const;
    bool is_operation_preferences_Valid() const;

    QString getOperationId() const;
    void setOperationId(const QString &operation_id);
    bool is_operation_id_Set() const;
    bool is_operation_id_Valid() const;

    OAICallAs getCallAs() const;
    void setCallAs(const OAICallAs &call_as);
    bool is_call_as_Set() const;
    bool is_call_as_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_stack_set_name;
    bool m_stack_set_name_isSet;
    bool m_stack_set_name_isValid;

    QList m_accounts;
    bool m_accounts_isSet;
    bool m_accounts_isValid;

    OAICreateStackInstancesInput_DeploymentTargets m_deployment_targets;
    bool m_deployment_targets_isSet;
    bool m_deployment_targets_isValid;

    QList m_regions;
    bool m_regions_isSet;
    bool m_regions_isValid;

    QList m_parameter_overrides;
    bool m_parameter_overrides_isSet;
    bool m_parameter_overrides_isValid;

    OAICreateStackInstancesInput_OperationPreferences m_operation_preferences;
    bool m_operation_preferences_isSet;
    bool m_operation_preferences_isValid;

    QString m_operation_id;
    bool m_operation_id_isSet;
    bool m_operation_id_isValid;

    OAICallAs m_call_as;
    bool m_call_as_isSet;
    bool m_call_as_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateStackInstancesInput)

#endif // OAICreateStackInstancesInput_H
