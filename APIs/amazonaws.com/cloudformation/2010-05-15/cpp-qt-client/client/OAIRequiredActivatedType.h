/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRequiredActivatedType.h
 *
 * &lt;p&gt;For extensions that are modules, a public third-party extension that must be activated in your account in order for the module itself to be activated.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/modules.html#module-enabling\&quot;&gt;Activating public modules for use in your account&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.&lt;/p&gt;
 */

#ifndef OAIRequiredActivatedType_H
#define OAIRequiredActivatedType_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRequiredActivatedType : public OAIObject {
public:
    OAIRequiredActivatedType();
    OAIRequiredActivatedType(QString json);
    ~OAIRequiredActivatedType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTypeNameAlias() const;
    void setTypeNameAlias(const QString &type_name_alias);
    bool is_type_name_alias_Set() const;
    bool is_type_name_alias_Valid() const;

    QString getOriginalTypeName() const;
    void setOriginalTypeName(const QString &original_type_name);
    bool is_original_type_name_Set() const;
    bool is_original_type_name_Valid() const;

    QString getPublisherId() const;
    void setPublisherId(const QString &publisher_id);
    bool is_publisher_id_Set() const;
    bool is_publisher_id_Valid() const;

    QList getSupportedMajorVersions() const;
    void setSupportedMajorVersions(const QList &supported_major_versions);
    bool is_supported_major_versions_Set() const;
    bool is_supported_major_versions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type_name_alias;
    bool m_type_name_alias_isSet;
    bool m_type_name_alias_isValid;

    QString m_original_type_name;
    bool m_original_type_name_isSet;
    bool m_original_type_name_isValid;

    QString m_publisher_id;
    bool m_publisher_id_isSet;
    bool m_publisher_id_isValid;

    QList m_supported_major_versions;
    bool m_supported_major_versions_isSet;
    bool m_supported_major_versions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRequiredActivatedType)

#endif // OAIRequiredActivatedType_H
