/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetTemplateSummaryOutput.h
 *
 * The output for the &lt;a&gt;GetTemplateSummary&lt;/a&gt; action.
 */

#ifndef OAIGetTemplateSummaryOutput_H
#define OAIGetTemplateSummaryOutput_H

#include <QJsonObject>

#include "OAIGetTemplateSummaryOutput_Warnings.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetTemplateSummaryOutput_Warnings;

class OAIGetTemplateSummaryOutput : public OAIObject {
public:
    OAIGetTemplateSummaryOutput();
    OAIGetTemplateSummaryOutput(QString json);
    ~OAIGetTemplateSummaryOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getParameters() const;
    void setParameters(const QList &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList getCapabilities() const;
    void setCapabilities(const QList &capabilities);
    bool is_capabilities_Set() const;
    bool is_capabilities_Valid() const;

    QString getCapabilitiesReason() const;
    void setCapabilitiesReason(const QString &capabilities_reason);
    bool is_capabilities_reason_Set() const;
    bool is_capabilities_reason_Valid() const;

    QList getResourceTypes() const;
    void setResourceTypes(const QList &resource_types);
    bool is_resource_types_Set() const;
    bool is_resource_types_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QString getMetadata() const;
    void setMetadata(const QString &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QList getDeclaredTransforms() const;
    void setDeclaredTransforms(const QList &declared_transforms);
    bool is_declared_transforms_Set() const;
    bool is_declared_transforms_Valid() const;

    QList getResourceIdentifierSummaries() const;
    void setResourceIdentifierSummaries(const QList &resource_identifier_summaries);
    bool is_resource_identifier_summaries_Set() const;
    bool is_resource_identifier_summaries_Valid() const;

    OAIGetTemplateSummaryOutput_Warnings getWarnings() const;
    void setWarnings(const OAIGetTemplateSummaryOutput_Warnings &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList m_capabilities;
    bool m_capabilities_isSet;
    bool m_capabilities_isValid;

    QString m_capabilities_reason;
    bool m_capabilities_reason_isSet;
    bool m_capabilities_reason_isValid;

    QList m_resource_types;
    bool m_resource_types_isSet;
    bool m_resource_types_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QString m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QList m_declared_transforms;
    bool m_declared_transforms_isSet;
    bool m_declared_transforms_isValid;

    QList m_resource_identifier_summaries;
    bool m_resource_identifier_summaries_isSet;
    bool m_resource_identifier_summaries_isValid;

    OAIGetTemplateSummaryOutput_Warnings m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetTemplateSummaryOutput)

#endif // OAIGetTemplateSummaryOutput_H
