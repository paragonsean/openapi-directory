/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateStackSetInput.h
 *
 * 
 */

#ifndef OAIUpdateStackSetInput_H
#define OAIUpdateStackSetInput_H

#include <QJsonObject>

#include "OAICallAs.h"
#include "OAICreateStackInstancesInput_OperationPreferences.h"
#include "OAICreateStackSetInput_ManagedExecution.h"
#include "OAIPermissionModels.h"
#include "OAIUpdateStackSetInput_AutoDeployment.h"
#include "OAIUpdateStackSetInput_DeploymentTargets.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateStackInstancesInput_OperationPreferences;
class OAIUpdateStackSetInput_DeploymentTargets;
class OAIUpdateStackSetInput_AutoDeployment;
class OAICreateStackSetInput_ManagedExecution;

class OAIUpdateStackSetInput : public OAIObject {
public:
    OAIUpdateStackSetInput();
    OAIUpdateStackSetInput(QString json);
    ~OAIUpdateStackSetInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStackSetName() const;
    void setStackSetName(const QString &stack_set_name);
    bool is_stack_set_name_Set() const;
    bool is_stack_set_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getTemplateBody() const;
    void setTemplateBody(const QString &template_body);
    bool is_template_body_Set() const;
    bool is_template_body_Valid() const;

    QString getTemplateUrl() const;
    void setTemplateUrl(const QString &template_url);
    bool is_template_url_Set() const;
    bool is_template_url_Valid() const;

    bool getUsePreviousTemplate() const;
    void setUsePreviousTemplate(const bool &use_previous_template);
    bool is_use_previous_template_Set() const;
    bool is_use_previous_template_Valid() const;

    QList getParameters() const;
    void setParameters(const QList &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QList getCapabilities() const;
    void setCapabilities(const QList &capabilities);
    bool is_capabilities_Set() const;
    bool is_capabilities_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAICreateStackInstancesInput_OperationPreferences getOperationPreferences() const;
    void setOperationPreferences(const OAICreateStackInstancesInput_OperationPreferences &operation_preferences);
    bool is_operation_preferences_Set() const;
    bool is_operation_preferences_Valid() const;

    QString getAdministrationRoleArn() const;
    void setAdministrationRoleArn(const QString &administration_role_arn);
    bool is_administration_role_arn_Set() const;
    bool is_administration_role_arn_Valid() const;

    QString getExecutionRoleName() const;
    void setExecutionRoleName(const QString &execution_role_name);
    bool is_execution_role_name_Set() const;
    bool is_execution_role_name_Valid() const;

    OAIUpdateStackSetInput_DeploymentTargets getDeploymentTargets() const;
    void setDeploymentTargets(const OAIUpdateStackSetInput_DeploymentTargets &deployment_targets);
    bool is_deployment_targets_Set() const;
    bool is_deployment_targets_Valid() const;

    OAIPermissionModels getPermissionModel() const;
    void setPermissionModel(const OAIPermissionModels &permission_model);
    bool is_permission_model_Set() const;
    bool is_permission_model_Valid() const;

    OAIUpdateStackSetInput_AutoDeployment getAutoDeployment() const;
    void setAutoDeployment(const OAIUpdateStackSetInput_AutoDeployment &auto_deployment);
    bool is_auto_deployment_Set() const;
    bool is_auto_deployment_Valid() const;

    QString getOperationId() const;
    void setOperationId(const QString &operation_id);
    bool is_operation_id_Set() const;
    bool is_operation_id_Valid() const;

    QList getAccounts() const;
    void setAccounts(const QList &accounts);
    bool is_accounts_Set() const;
    bool is_accounts_Valid() const;

    QList getRegions() const;
    void setRegions(const QList &regions);
    bool is_regions_Set() const;
    bool is_regions_Valid() const;

    OAICallAs getCallAs() const;
    void setCallAs(const OAICallAs &call_as);
    bool is_call_as_Set() const;
    bool is_call_as_Valid() const;

    OAICreateStackSetInput_ManagedExecution getManagedExecution() const;
    void setManagedExecution(const OAICreateStackSetInput_ManagedExecution &managed_execution);
    bool is_managed_execution_Set() const;
    bool is_managed_execution_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_stack_set_name;
    bool m_stack_set_name_isSet;
    bool m_stack_set_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_template_body;
    bool m_template_body_isSet;
    bool m_template_body_isValid;

    QString m_template_url;
    bool m_template_url_isSet;
    bool m_template_url_isValid;

    bool m_use_previous_template;
    bool m_use_previous_template_isSet;
    bool m_use_previous_template_isValid;

    QList m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QList m_capabilities;
    bool m_capabilities_isSet;
    bool m_capabilities_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAICreateStackInstancesInput_OperationPreferences m_operation_preferences;
    bool m_operation_preferences_isSet;
    bool m_operation_preferences_isValid;

    QString m_administration_role_arn;
    bool m_administration_role_arn_isSet;
    bool m_administration_role_arn_isValid;

    QString m_execution_role_name;
    bool m_execution_role_name_isSet;
    bool m_execution_role_name_isValid;

    OAIUpdateStackSetInput_DeploymentTargets m_deployment_targets;
    bool m_deployment_targets_isSet;
    bool m_deployment_targets_isValid;

    OAIPermissionModels m_permission_model;
    bool m_permission_model_isSet;
    bool m_permission_model_isValid;

    OAIUpdateStackSetInput_AutoDeployment m_auto_deployment;
    bool m_auto_deployment_isSet;
    bool m_auto_deployment_isValid;

    QString m_operation_id;
    bool m_operation_id_isSet;
    bool m_operation_id_isValid;

    QList m_accounts;
    bool m_accounts_isSet;
    bool m_accounts_isValid;

    QList m_regions;
    bool m_regions_isSet;
    bool m_regions_isValid;

    OAICallAs m_call_as;
    bool m_call_as_isSet;
    bool m_call_as_isValid;

    OAICreateStackSetInput_ManagedExecution m_managed_execution;
    bool m_managed_execution_isSet;
    bool m_managed_execution_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateStackSetInput)

#endif // OAIUpdateStackSetInput_H
