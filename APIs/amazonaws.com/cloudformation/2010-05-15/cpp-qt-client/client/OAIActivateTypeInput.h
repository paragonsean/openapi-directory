/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActivateTypeInput.h
 *
 * 
 */

#ifndef OAIActivateTypeInput_H
#define OAIActivateTypeInput_H

#include <QJsonObject>

#include "OAIActivateTypeInput_LoggingConfig.h"
#include "OAIThirdPartyType.h"
#include "OAIVersionBump.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIActivateTypeInput_LoggingConfig;

class OAIActivateTypeInput : public OAIObject {
public:
    OAIActivateTypeInput();
    OAIActivateTypeInput(QString json);
    ~OAIActivateTypeInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIThirdPartyType getType() const;
    void setType(const OAIThirdPartyType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getPublicTypeArn() const;
    void setPublicTypeArn(const QString &public_type_arn);
    bool is_public_type_arn_Set() const;
    bool is_public_type_arn_Valid() const;

    QString getPublisherId() const;
    void setPublisherId(const QString &publisher_id);
    bool is_publisher_id_Set() const;
    bool is_publisher_id_Valid() const;

    QString getTypeName() const;
    void setTypeName(const QString &type_name);
    bool is_type_name_Set() const;
    bool is_type_name_Valid() const;

    QString getTypeNameAlias() const;
    void setTypeNameAlias(const QString &type_name_alias);
    bool is_type_name_alias_Set() const;
    bool is_type_name_alias_Valid() const;

    bool getAutoUpdate() const;
    void setAutoUpdate(const bool &auto_update);
    bool is_auto_update_Set() const;
    bool is_auto_update_Valid() const;

    OAIActivateTypeInput_LoggingConfig getLoggingConfig() const;
    void setLoggingConfig(const OAIActivateTypeInput_LoggingConfig &logging_config);
    bool is_logging_config_Set() const;
    bool is_logging_config_Valid() const;

    QString getExecutionRoleArn() const;
    void setExecutionRoleArn(const QString &execution_role_arn);
    bool is_execution_role_arn_Set() const;
    bool is_execution_role_arn_Valid() const;

    OAIVersionBump getVersionBump() const;
    void setVersionBump(const OAIVersionBump &version_bump);
    bool is_version_bump_Set() const;
    bool is_version_bump_Valid() const;

    qint32 getMajorVersion() const;
    void setMajorVersion(const qint32 &major_version);
    bool is_major_version_Set() const;
    bool is_major_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIThirdPartyType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_public_type_arn;
    bool m_public_type_arn_isSet;
    bool m_public_type_arn_isValid;

    QString m_publisher_id;
    bool m_publisher_id_isSet;
    bool m_publisher_id_isValid;

    QString m_type_name;
    bool m_type_name_isSet;
    bool m_type_name_isValid;

    QString m_type_name_alias;
    bool m_type_name_alias_isSet;
    bool m_type_name_alias_isValid;

    bool m_auto_update;
    bool m_auto_update_isSet;
    bool m_auto_update_isValid;

    OAIActivateTypeInput_LoggingConfig m_logging_config;
    bool m_logging_config_isSet;
    bool m_logging_config_isValid;

    QString m_execution_role_arn;
    bool m_execution_role_arn_isSet;
    bool m_execution_role_arn_isValid;

    OAIVersionBump m_version_bump;
    bool m_version_bump_isSet;
    bool m_version_bump_isValid;

    qint32 m_major_version;
    bool m_major_version_isSet;
    bool m_major_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActivateTypeInput)

#endif // OAIActivateTypeInput_H
