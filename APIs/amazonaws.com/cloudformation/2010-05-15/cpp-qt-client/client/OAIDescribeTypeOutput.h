/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeTypeOutput.h
 *
 * 
 */

#ifndef OAIDescribeTypeOutput_H
#define OAIDescribeTypeOutput_H

#include <QJsonObject>

#include "OAIDeprecatedStatus.h"
#include "OAIDescribeTypeOutput_LoggingConfig.h"
#include "OAIProvisioningType.h"
#include "OAIRegistryType.h"
#include "OAITypeTestsStatus.h"
#include "OAIVisibility.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeTypeOutput_LoggingConfig;

class OAIDescribeTypeOutput : public OAIObject {
public:
    OAIDescribeTypeOutput();
    OAIDescribeTypeOutput(QString json);
    ~OAIDescribeTypeOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    OAIRegistryType getType() const;
    void setType(const OAIRegistryType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getTypeName() const;
    void setTypeName(const QString &type_name);
    bool is_type_name_Set() const;
    bool is_type_name_Valid() const;

    QString getDefaultVersionId() const;
    void setDefaultVersionId(const QString &default_version_id);
    bool is_default_version_id_Set() const;
    bool is_default_version_id_Valid() const;

    bool getIsDefaultVersion() const;
    void setIsDefaultVersion(const bool &is_default_version);
    bool is_is_default_version_Set() const;
    bool is_is_default_version_Valid() const;

    OAITypeTestsStatus getTypeTestsStatus() const;
    void setTypeTestsStatus(const OAITypeTestsStatus &type_tests_status);
    bool is_type_tests_status_Set() const;
    bool is_type_tests_status_Valid() const;

    QString getTypeTestsStatusDescription() const;
    void setTypeTestsStatusDescription(const QString &type_tests_status_description);
    bool is_type_tests_status_description_Set() const;
    bool is_type_tests_status_description_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getSchema() const;
    void setSchema(const QString &schema);
    bool is_schema_Set() const;
    bool is_schema_Valid() const;

    OAIProvisioningType getProvisioningType() const;
    void setProvisioningType(const OAIProvisioningType &provisioning_type);
    bool is_provisioning_type_Set() const;
    bool is_provisioning_type_Valid() const;

    OAIDeprecatedStatus getDeprecatedStatus() const;
    void setDeprecatedStatus(const OAIDeprecatedStatus &deprecated_status);
    bool is_deprecated_status_Set() const;
    bool is_deprecated_status_Valid() const;

    OAIDescribeTypeOutput_LoggingConfig getLoggingConfig() const;
    void setLoggingConfig(const OAIDescribeTypeOutput_LoggingConfig &logging_config);
    bool is_logging_config_Set() const;
    bool is_logging_config_Valid() const;

    QList getRequiredActivatedTypes() const;
    void setRequiredActivatedTypes(const QList &required_activated_types);
    bool is_required_activated_types_Set() const;
    bool is_required_activated_types_Valid() const;

    QString getExecutionRoleArn() const;
    void setExecutionRoleArn(const QString &execution_role_arn);
    bool is_execution_role_arn_Set() const;
    bool is_execution_role_arn_Valid() const;

    OAIVisibility getVisibility() const;
    void setVisibility(const OAIVisibility &visibility);
    bool is_visibility_Set() const;
    bool is_visibility_Valid() const;

    QString getSourceUrl() const;
    void setSourceUrl(const QString &source_url);
    bool is_source_url_Set() const;
    bool is_source_url_Valid() const;

    QString getDocumentationUrl() const;
    void setDocumentationUrl(const QString &documentation_url);
    bool is_documentation_url_Set() const;
    bool is_documentation_url_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QDateTime getTimeCreated() const;
    void setTimeCreated(const QDateTime &time_created);
    bool is_time_created_Set() const;
    bool is_time_created_Valid() const;

    QString getConfigurationSchema() const;
    void setConfigurationSchema(const QString &configuration_schema);
    bool is_configuration_schema_Set() const;
    bool is_configuration_schema_Valid() const;

    QString getPublisherId() const;
    void setPublisherId(const QString &publisher_id);
    bool is_publisher_id_Set() const;
    bool is_publisher_id_Valid() const;

    QString getOriginalTypeName() const;
    void setOriginalTypeName(const QString &original_type_name);
    bool is_original_type_name_Set() const;
    bool is_original_type_name_Valid() const;

    QString getOriginalTypeArn() const;
    void setOriginalTypeArn(const QString &original_type_arn);
    bool is_original_type_arn_Set() const;
    bool is_original_type_arn_Valid() const;

    QString getPublicVersionNumber() const;
    void setPublicVersionNumber(const QString &public_version_number);
    bool is_public_version_number_Set() const;
    bool is_public_version_number_Valid() const;

    QString getLatestPublicVersion() const;
    void setLatestPublicVersion(const QString &latest_public_version);
    bool is_latest_public_version_Set() const;
    bool is_latest_public_version_Valid() const;

    bool getIsActivated() const;
    void setIsActivated(const bool &is_activated);
    bool is_is_activated_Set() const;
    bool is_is_activated_Valid() const;

    bool getAutoUpdate() const;
    void setAutoUpdate(const bool &auto_update);
    bool is_auto_update_Set() const;
    bool is_auto_update_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    OAIRegistryType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_type_name;
    bool m_type_name_isSet;
    bool m_type_name_isValid;

    QString m_default_version_id;
    bool m_default_version_id_isSet;
    bool m_default_version_id_isValid;

    bool m_is_default_version;
    bool m_is_default_version_isSet;
    bool m_is_default_version_isValid;

    OAITypeTestsStatus m_type_tests_status;
    bool m_type_tests_status_isSet;
    bool m_type_tests_status_isValid;

    QString m_type_tests_status_description;
    bool m_type_tests_status_description_isSet;
    bool m_type_tests_status_description_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_schema;
    bool m_schema_isSet;
    bool m_schema_isValid;

    OAIProvisioningType m_provisioning_type;
    bool m_provisioning_type_isSet;
    bool m_provisioning_type_isValid;

    OAIDeprecatedStatus m_deprecated_status;
    bool m_deprecated_status_isSet;
    bool m_deprecated_status_isValid;

    OAIDescribeTypeOutput_LoggingConfig m_logging_config;
    bool m_logging_config_isSet;
    bool m_logging_config_isValid;

    QList m_required_activated_types;
    bool m_required_activated_types_isSet;
    bool m_required_activated_types_isValid;

    QString m_execution_role_arn;
    bool m_execution_role_arn_isSet;
    bool m_execution_role_arn_isValid;

    OAIVisibility m_visibility;
    bool m_visibility_isSet;
    bool m_visibility_isValid;

    QString m_source_url;
    bool m_source_url_isSet;
    bool m_source_url_isValid;

    QString m_documentation_url;
    bool m_documentation_url_isSet;
    bool m_documentation_url_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QDateTime m_time_created;
    bool m_time_created_isSet;
    bool m_time_created_isValid;

    QString m_configuration_schema;
    bool m_configuration_schema_isSet;
    bool m_configuration_schema_isValid;

    QString m_publisher_id;
    bool m_publisher_id_isSet;
    bool m_publisher_id_isValid;

    QString m_original_type_name;
    bool m_original_type_name_isSet;
    bool m_original_type_name_isValid;

    QString m_original_type_arn;
    bool m_original_type_arn_isSet;
    bool m_original_type_arn_isValid;

    QString m_public_version_number;
    bool m_public_version_number_isSet;
    bool m_public_version_number_isValid;

    QString m_latest_public_version;
    bool m_latest_public_version_isSet;
    bool m_latest_public_version_isValid;

    bool m_is_activated;
    bool m_is_activated_isSet;
    bool m_is_activated_isValid;

    bool m_auto_update;
    bool m_auto_update_isSet;
    bool m_auto_update_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeTypeOutput)

#endif // OAIDescribeTypeOutput_H
