/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeTypeRegistrationOutput.h
 *
 * 
 */

#ifndef OAIDescribeTypeRegistrationOutput_H
#define OAIDescribeTypeRegistrationOutput_H

#include <QJsonObject>

#include "OAIRegistrationStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeTypeRegistrationOutput : public OAIObject {
public:
    OAIDescribeTypeRegistrationOutput();
    OAIDescribeTypeRegistrationOutput(QString json);
    ~OAIDescribeTypeRegistrationOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRegistrationStatus getProgressStatus() const;
    void setProgressStatus(const OAIRegistrationStatus &progress_status);
    bool is_progress_status_Set() const;
    bool is_progress_status_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getTypeArn() const;
    void setTypeArn(const QString &type_arn);
    bool is_type_arn_Set() const;
    bool is_type_arn_Valid() const;

    QString getTypeVersionArn() const;
    void setTypeVersionArn(const QString &type_version_arn);
    bool is_type_version_arn_Set() const;
    bool is_type_version_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRegistrationStatus m_progress_status;
    bool m_progress_status_isSet;
    bool m_progress_status_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_type_arn;
    bool m_type_arn_isSet;
    bool m_type_arn_isValid;

    QString m_type_version_arn;
    bool m_type_version_arn_isSet;
    bool m_type_version_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeTypeRegistrationOutput)

#endif // OAIDescribeTypeRegistrationOutput_H
