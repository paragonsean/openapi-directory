/**
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStack.h
 *
 * The Stack data type.
 */

#ifndef OAIStack_H
#define OAIStack_H

#include <QJsonObject>

#include "OAIDescribeChangeSetOutput_RollbackConfiguration.h"
#include "OAIStackStatus.h"
#include "OAIStack_DriftInformation.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeChangeSetOutput_RollbackConfiguration;
class OAIStack_DriftInformation;

class OAIStack : public OAIObject {
public:
    OAIStack();
    OAIStack(QString json);
    ~OAIStack() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStackId() const;
    void setStackId(const QString &stack_id);
    bool is_stack_id_Set() const;
    bool is_stack_id_Valid() const;

    QString getStackName() const;
    void setStackName(const QString &stack_name);
    bool is_stack_name_Set() const;
    bool is_stack_name_Valid() const;

    QString getChangeSetId() const;
    void setChangeSetId(const QString &change_set_id);
    bool is_change_set_id_Set() const;
    bool is_change_set_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList getParameters() const;
    void setParameters(const QList &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getDeletionTime() const;
    void setDeletionTime(const QDateTime &deletion_time);
    bool is_deletion_time_Set() const;
    bool is_deletion_time_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    OAIDescribeChangeSetOutput_RollbackConfiguration getRollbackConfiguration() const;
    void setRollbackConfiguration(const OAIDescribeChangeSetOutput_RollbackConfiguration &rollback_configuration);
    bool is_rollback_configuration_Set() const;
    bool is_rollback_configuration_Valid() const;

    OAIStackStatus getStackStatus() const;
    void setStackStatus(const OAIStackStatus &stack_status);
    bool is_stack_status_Set() const;
    bool is_stack_status_Valid() const;

    QString getStackStatusReason() const;
    void setStackStatusReason(const QString &stack_status_reason);
    bool is_stack_status_reason_Set() const;
    bool is_stack_status_reason_Valid() const;

    bool getDisableRollback() const;
    void setDisableRollback(const bool &disable_rollback);
    bool is_disable_rollback_Set() const;
    bool is_disable_rollback_Valid() const;

    QList getNotificationArns() const;
    void setNotificationArns(const QList &notification_arns);
    bool is_notification_arns_Set() const;
    bool is_notification_arns_Valid() const;

    qint32 getTimeoutInMinutes() const;
    void setTimeoutInMinutes(const qint32 &timeout_in_minutes);
    bool is_timeout_in_minutes_Set() const;
    bool is_timeout_in_minutes_Valid() const;

    QList getCapabilities() const;
    void setCapabilities(const QList &capabilities);
    bool is_capabilities_Set() const;
    bool is_capabilities_Valid() const;

    QList getOutputs() const;
    void setOutputs(const QList &outputs);
    bool is_outputs_Set() const;
    bool is_outputs_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    bool getEnableTerminationProtection() const;
    void setEnableTerminationProtection(const bool &enable_termination_protection);
    bool is_enable_termination_protection_Set() const;
    bool is_enable_termination_protection_Valid() const;

    QString getParentId() const;
    void setParentId(const QString &parent_id);
    bool is_parent_id_Set() const;
    bool is_parent_id_Valid() const;

    QString getRootId() const;
    void setRootId(const QString &root_id);
    bool is_root_id_Set() const;
    bool is_root_id_Valid() const;

    OAIStack_DriftInformation getDriftInformation() const;
    void setDriftInformation(const OAIStack_DriftInformation &drift_information);
    bool is_drift_information_Set() const;
    bool is_drift_information_Valid() const;

    bool getRetainExceptOnCreate() const;
    void setRetainExceptOnCreate(const bool &retain_except_on_create);
    bool is_retain_except_on_create_Set() const;
    bool is_retain_except_on_create_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_stack_id;
    bool m_stack_id_isSet;
    bool m_stack_id_isValid;

    QString m_stack_name;
    bool m_stack_name_isSet;
    bool m_stack_name_isValid;

    QString m_change_set_id;
    bool m_change_set_id_isSet;
    bool m_change_set_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_deletion_time;
    bool m_deletion_time_isSet;
    bool m_deletion_time_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    OAIDescribeChangeSetOutput_RollbackConfiguration m_rollback_configuration;
    bool m_rollback_configuration_isSet;
    bool m_rollback_configuration_isValid;

    OAIStackStatus m_stack_status;
    bool m_stack_status_isSet;
    bool m_stack_status_isValid;

    QString m_stack_status_reason;
    bool m_stack_status_reason_isSet;
    bool m_stack_status_reason_isValid;

    bool m_disable_rollback;
    bool m_disable_rollback_isSet;
    bool m_disable_rollback_isValid;

    QList m_notification_arns;
    bool m_notification_arns_isSet;
    bool m_notification_arns_isValid;

    qint32 m_timeout_in_minutes;
    bool m_timeout_in_minutes_isSet;
    bool m_timeout_in_minutes_isValid;

    QList m_capabilities;
    bool m_capabilities_isSet;
    bool m_capabilities_isValid;

    QList m_outputs;
    bool m_outputs_isSet;
    bool m_outputs_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    bool m_enable_termination_protection;
    bool m_enable_termination_protection_isSet;
    bool m_enable_termination_protection_isValid;

    QString m_parent_id;
    bool m_parent_id_isSet;
    bool m_parent_id_isValid;

    QString m_root_id;
    bool m_root_id_isSet;
    bool m_root_id_isValid;

    OAIStack_DriftInformation m_drift_information;
    bool m_drift_information_isSet;
    bool m_drift_information_isValid;

    bool m_retain_except_on_create;
    bool m_retain_except_on_create_isSet;
    bool m_retain_except_on_create_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStack)

#endif // OAIStack_H
