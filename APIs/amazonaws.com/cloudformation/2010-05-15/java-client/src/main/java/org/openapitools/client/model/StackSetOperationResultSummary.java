/*
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.StackSetOperationResultStatus;
import org.openapitools.client.model.StackSetOperationResultSummaryAccountGateResult;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The structure that contains information about a specified operation&#39;s results for a given account in a given Region.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:23:20.021771-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StackSetOperationResultSummary {
  public static final String SERIALIZED_NAME_ACCOUNT = "Account";
  @SerializedName(SERIALIZED_NAME_ACCOUNT)
  private String account;

  public static final String SERIALIZED_NAME_REGION = "Region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StackSetOperationResultStatus status;

  public static final String SERIALIZED_NAME_STATUS_REASON = "StatusReason";
  @SerializedName(SERIALIZED_NAME_STATUS_REASON)
  private String statusReason;

  public static final String SERIALIZED_NAME_ACCOUNT_GATE_RESULT = "AccountGateResult";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_GATE_RESULT)
  private StackSetOperationResultSummaryAccountGateResult accountGateResult;

  public static final String SERIALIZED_NAME_ORGANIZATIONAL_UNIT_ID = "OrganizationalUnitId";
  @SerializedName(SERIALIZED_NAME_ORGANIZATIONAL_UNIT_ID)
  private String organizationalUnitId;

  public StackSetOperationResultSummary() {
  }

  public StackSetOperationResultSummary account(String account) {
    this.account = account;
    return this;
  }

  /**
   * Get account
   * @return account
   */
  @javax.annotation.Nullable
  public String getAccount() {
    return account;
  }

  public void setAccount(String account) {
    this.account = account;
  }


  public StackSetOperationResultSummary region(String region) {
    this.region = region;
    return this;
  }

  /**
   * Get region
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  public StackSetOperationResultSummary status(StackSetOperationResultStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public StackSetOperationResultStatus getStatus() {
    return status;
  }

  public void setStatus(StackSetOperationResultStatus status) {
    this.status = status;
  }


  public StackSetOperationResultSummary statusReason(String statusReason) {
    this.statusReason = statusReason;
    return this;
  }

  /**
   * Get statusReason
   * @return statusReason
   */
  @javax.annotation.Nullable
  public String getStatusReason() {
    return statusReason;
  }

  public void setStatusReason(String statusReason) {
    this.statusReason = statusReason;
  }


  public StackSetOperationResultSummary accountGateResult(StackSetOperationResultSummaryAccountGateResult accountGateResult) {
    this.accountGateResult = accountGateResult;
    return this;
  }

  /**
   * Get accountGateResult
   * @return accountGateResult
   */
  @javax.annotation.Nullable
  public StackSetOperationResultSummaryAccountGateResult getAccountGateResult() {
    return accountGateResult;
  }

  public void setAccountGateResult(StackSetOperationResultSummaryAccountGateResult accountGateResult) {
    this.accountGateResult = accountGateResult;
  }


  public StackSetOperationResultSummary organizationalUnitId(String organizationalUnitId) {
    this.organizationalUnitId = organizationalUnitId;
    return this;
  }

  /**
   * Get organizationalUnitId
   * @return organizationalUnitId
   */
  @javax.annotation.Nullable
  public String getOrganizationalUnitId() {
    return organizationalUnitId;
  }

  public void setOrganizationalUnitId(String organizationalUnitId) {
    this.organizationalUnitId = organizationalUnitId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StackSetOperationResultSummary stackSetOperationResultSummary = (StackSetOperationResultSummary) o;
    return Objects.equals(this.account, stackSetOperationResultSummary.account) &&
        Objects.equals(this.region, stackSetOperationResultSummary.region) &&
        Objects.equals(this.status, stackSetOperationResultSummary.status) &&
        Objects.equals(this.statusReason, stackSetOperationResultSummary.statusReason) &&
        Objects.equals(this.accountGateResult, stackSetOperationResultSummary.accountGateResult) &&
        Objects.equals(this.organizationalUnitId, stackSetOperationResultSummary.organizationalUnitId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, region, status, statusReason, accountGateResult, organizationalUnitId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StackSetOperationResultSummary {\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusReason: ").append(toIndentedString(statusReason)).append("\n");
    sb.append("    accountGateResult: ").append(toIndentedString(accountGateResult)).append("\n");
    sb.append("    organizationalUnitId: ").append(toIndentedString(organizationalUnitId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Account");
    openapiFields.add("Region");
    openapiFields.add("Status");
    openapiFields.add("StatusReason");
    openapiFields.add("AccountGateResult");
    openapiFields.add("OrganizationalUnitId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StackSetOperationResultSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StackSetOperationResultSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StackSetOperationResultSummary is not found in the empty JSON string", StackSetOperationResultSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StackSetOperationResultSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StackSetOperationResultSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Account`
      if (jsonObj.get("Account") != null && !jsonObj.get("Account").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Account"));
      }
      // validate the optional field `Region`
      if (jsonObj.get("Region") != null && !jsonObj.get("Region").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Region"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        StackSetOperationResultStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `StatusReason`
      if (jsonObj.get("StatusReason") != null && !jsonObj.get("StatusReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusReason"));
      }
      // validate the optional field `AccountGateResult`
      if (jsonObj.get("AccountGateResult") != null && !jsonObj.get("AccountGateResult").isJsonNull()) {
        StackSetOperationResultSummaryAccountGateResult.validateJsonElement(jsonObj.get("AccountGateResult"));
      }
      // validate the optional field `OrganizationalUnitId`
      if (jsonObj.get("OrganizationalUnitId") != null && !jsonObj.get("OrganizationalUnitId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OrganizationalUnitId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StackSetOperationResultSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StackSetOperationResultSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StackSetOperationResultSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StackSetOperationResultSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<StackSetOperationResultSummary>() {
           @Override
           public void write(JsonWriter out, StackSetOperationResultSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StackSetOperationResultSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StackSetOperationResultSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StackSetOperationResultSummary
   * @throws IOException if the JSON string is invalid with respect to StackSetOperationResultSummary
   */
  public static StackSetOperationResultSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StackSetOperationResultSummary.class);
  }

  /**
   * Convert an instance of StackSetOperationResultSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

