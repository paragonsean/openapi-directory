/*
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.StackSetOperationAction;
import org.openapitools.client.model.StackSetOperationDeploymentTargets;
import org.openapitools.client.model.StackSetOperationOperationPreferences;
import org.openapitools.client.model.StackSetOperationStackSetDriftDetectionDetails;
import org.openapitools.client.model.StackSetOperationStatus;
import org.openapitools.client.model.StackSetOperationStatusDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeStackSetOperationOutputStackSetOperation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:23:20.021771-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeStackSetOperationOutputStackSetOperation {
  public static final String SERIALIZED_NAME_OPERATION_ID = "OperationId";
  @SerializedName(SERIALIZED_NAME_OPERATION_ID)
  private String operationId;

  public static final String SERIALIZED_NAME_STACK_SET_ID = "StackSetId";
  @SerializedName(SERIALIZED_NAME_STACK_SET_ID)
  private String stackSetId;

  public static final String SERIALIZED_NAME_ACTION = "Action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private StackSetOperationAction action;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StackSetOperationStatus status;

  public static final String SERIALIZED_NAME_OPERATION_PREFERENCES = "OperationPreferences";
  @SerializedName(SERIALIZED_NAME_OPERATION_PREFERENCES)
  private StackSetOperationOperationPreferences operationPreferences;

  public static final String SERIALIZED_NAME_RETAIN_STACKS = "RetainStacks";
  @SerializedName(SERIALIZED_NAME_RETAIN_STACKS)
  private Boolean retainStacks;

  public static final String SERIALIZED_NAME_ADMINISTRATION_ROLE_A_R_N = "AdministrationRoleARN";
  @SerializedName(SERIALIZED_NAME_ADMINISTRATION_ROLE_A_R_N)
  private String administrationRoleARN;

  public static final String SERIALIZED_NAME_EXECUTION_ROLE_NAME = "ExecutionRoleName";
  @SerializedName(SERIALIZED_NAME_EXECUTION_ROLE_NAME)
  private String executionRoleName;

  public static final String SERIALIZED_NAME_CREATION_TIMESTAMP = "CreationTimestamp";
  @SerializedName(SERIALIZED_NAME_CREATION_TIMESTAMP)
  private OffsetDateTime creationTimestamp;

  public static final String SERIALIZED_NAME_END_TIMESTAMP = "EndTimestamp";
  @SerializedName(SERIALIZED_NAME_END_TIMESTAMP)
  private OffsetDateTime endTimestamp;

  public static final String SERIALIZED_NAME_DEPLOYMENT_TARGETS = "DeploymentTargets";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_TARGETS)
  private StackSetOperationDeploymentTargets deploymentTargets;

  public static final String SERIALIZED_NAME_STACK_SET_DRIFT_DETECTION_DETAILS = "StackSetDriftDetectionDetails";
  @SerializedName(SERIALIZED_NAME_STACK_SET_DRIFT_DETECTION_DETAILS)
  private StackSetOperationStackSetDriftDetectionDetails stackSetDriftDetectionDetails;

  public static final String SERIALIZED_NAME_STATUS_REASON = "StatusReason";
  @SerializedName(SERIALIZED_NAME_STATUS_REASON)
  private String statusReason;

  public static final String SERIALIZED_NAME_STATUS_DETAILS = "StatusDetails";
  @SerializedName(SERIALIZED_NAME_STATUS_DETAILS)
  private StackSetOperationStatusDetails statusDetails;

  public DescribeStackSetOperationOutputStackSetOperation() {
  }

  public DescribeStackSetOperationOutputStackSetOperation operationId(String operationId) {
    this.operationId = operationId;
    return this;
  }

  /**
   * Get operationId
   * @return operationId
   */
  @javax.annotation.Nullable
  public String getOperationId() {
    return operationId;
  }

  public void setOperationId(String operationId) {
    this.operationId = operationId;
  }


  public DescribeStackSetOperationOutputStackSetOperation stackSetId(String stackSetId) {
    this.stackSetId = stackSetId;
    return this;
  }

  /**
   * Get stackSetId
   * @return stackSetId
   */
  @javax.annotation.Nullable
  public String getStackSetId() {
    return stackSetId;
  }

  public void setStackSetId(String stackSetId) {
    this.stackSetId = stackSetId;
  }


  public DescribeStackSetOperationOutputStackSetOperation action(StackSetOperationAction action) {
    this.action = action;
    return this;
  }

  /**
   * Get action
   * @return action
   */
  @javax.annotation.Nullable
  public StackSetOperationAction getAction() {
    return action;
  }

  public void setAction(StackSetOperationAction action) {
    this.action = action;
  }


  public DescribeStackSetOperationOutputStackSetOperation status(StackSetOperationStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public StackSetOperationStatus getStatus() {
    return status;
  }

  public void setStatus(StackSetOperationStatus status) {
    this.status = status;
  }


  public DescribeStackSetOperationOutputStackSetOperation operationPreferences(StackSetOperationOperationPreferences operationPreferences) {
    this.operationPreferences = operationPreferences;
    return this;
  }

  /**
   * Get operationPreferences
   * @return operationPreferences
   */
  @javax.annotation.Nullable
  public StackSetOperationOperationPreferences getOperationPreferences() {
    return operationPreferences;
  }

  public void setOperationPreferences(StackSetOperationOperationPreferences operationPreferences) {
    this.operationPreferences = operationPreferences;
  }


  public DescribeStackSetOperationOutputStackSetOperation retainStacks(Boolean retainStacks) {
    this.retainStacks = retainStacks;
    return this;
  }

  /**
   * Get retainStacks
   * @return retainStacks
   */
  @javax.annotation.Nullable
  public Boolean getRetainStacks() {
    return retainStacks;
  }

  public void setRetainStacks(Boolean retainStacks) {
    this.retainStacks = retainStacks;
  }


  public DescribeStackSetOperationOutputStackSetOperation administrationRoleARN(String administrationRoleARN) {
    this.administrationRoleARN = administrationRoleARN;
    return this;
  }

  /**
   * Get administrationRoleARN
   * @return administrationRoleARN
   */
  @javax.annotation.Nullable
  public String getAdministrationRoleARN() {
    return administrationRoleARN;
  }

  public void setAdministrationRoleARN(String administrationRoleARN) {
    this.administrationRoleARN = administrationRoleARN;
  }


  public DescribeStackSetOperationOutputStackSetOperation executionRoleName(String executionRoleName) {
    this.executionRoleName = executionRoleName;
    return this;
  }

  /**
   * Get executionRoleName
   * @return executionRoleName
   */
  @javax.annotation.Nullable
  public String getExecutionRoleName() {
    return executionRoleName;
  }

  public void setExecutionRoleName(String executionRoleName) {
    this.executionRoleName = executionRoleName;
  }


  public DescribeStackSetOperationOutputStackSetOperation creationTimestamp(OffsetDateTime creationTimestamp) {
    this.creationTimestamp = creationTimestamp;
    return this;
  }

  /**
   * Get creationTimestamp
   * @return creationTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTimestamp() {
    return creationTimestamp;
  }

  public void setCreationTimestamp(OffsetDateTime creationTimestamp) {
    this.creationTimestamp = creationTimestamp;
  }


  public DescribeStackSetOperationOutputStackSetOperation endTimestamp(OffsetDateTime endTimestamp) {
    this.endTimestamp = endTimestamp;
    return this;
  }

  /**
   * Get endTimestamp
   * @return endTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTimestamp() {
    return endTimestamp;
  }

  public void setEndTimestamp(OffsetDateTime endTimestamp) {
    this.endTimestamp = endTimestamp;
  }


  public DescribeStackSetOperationOutputStackSetOperation deploymentTargets(StackSetOperationDeploymentTargets deploymentTargets) {
    this.deploymentTargets = deploymentTargets;
    return this;
  }

  /**
   * Get deploymentTargets
   * @return deploymentTargets
   */
  @javax.annotation.Nullable
  public StackSetOperationDeploymentTargets getDeploymentTargets() {
    return deploymentTargets;
  }

  public void setDeploymentTargets(StackSetOperationDeploymentTargets deploymentTargets) {
    this.deploymentTargets = deploymentTargets;
  }


  public DescribeStackSetOperationOutputStackSetOperation stackSetDriftDetectionDetails(StackSetOperationStackSetDriftDetectionDetails stackSetDriftDetectionDetails) {
    this.stackSetDriftDetectionDetails = stackSetDriftDetectionDetails;
    return this;
  }

  /**
   * Get stackSetDriftDetectionDetails
   * @return stackSetDriftDetectionDetails
   */
  @javax.annotation.Nullable
  public StackSetOperationStackSetDriftDetectionDetails getStackSetDriftDetectionDetails() {
    return stackSetDriftDetectionDetails;
  }

  public void setStackSetDriftDetectionDetails(StackSetOperationStackSetDriftDetectionDetails stackSetDriftDetectionDetails) {
    this.stackSetDriftDetectionDetails = stackSetDriftDetectionDetails;
  }


  public DescribeStackSetOperationOutputStackSetOperation statusReason(String statusReason) {
    this.statusReason = statusReason;
    return this;
  }

  /**
   * Get statusReason
   * @return statusReason
   */
  @javax.annotation.Nullable
  public String getStatusReason() {
    return statusReason;
  }

  public void setStatusReason(String statusReason) {
    this.statusReason = statusReason;
  }


  public DescribeStackSetOperationOutputStackSetOperation statusDetails(StackSetOperationStatusDetails statusDetails) {
    this.statusDetails = statusDetails;
    return this;
  }

  /**
   * Get statusDetails
   * @return statusDetails
   */
  @javax.annotation.Nullable
  public StackSetOperationStatusDetails getStatusDetails() {
    return statusDetails;
  }

  public void setStatusDetails(StackSetOperationStatusDetails statusDetails) {
    this.statusDetails = statusDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeStackSetOperationOutputStackSetOperation describeStackSetOperationOutputStackSetOperation = (DescribeStackSetOperationOutputStackSetOperation) o;
    return Objects.equals(this.operationId, describeStackSetOperationOutputStackSetOperation.operationId) &&
        Objects.equals(this.stackSetId, describeStackSetOperationOutputStackSetOperation.stackSetId) &&
        Objects.equals(this.action, describeStackSetOperationOutputStackSetOperation.action) &&
        Objects.equals(this.status, describeStackSetOperationOutputStackSetOperation.status) &&
        Objects.equals(this.operationPreferences, describeStackSetOperationOutputStackSetOperation.operationPreferences) &&
        Objects.equals(this.retainStacks, describeStackSetOperationOutputStackSetOperation.retainStacks) &&
        Objects.equals(this.administrationRoleARN, describeStackSetOperationOutputStackSetOperation.administrationRoleARN) &&
        Objects.equals(this.executionRoleName, describeStackSetOperationOutputStackSetOperation.executionRoleName) &&
        Objects.equals(this.creationTimestamp, describeStackSetOperationOutputStackSetOperation.creationTimestamp) &&
        Objects.equals(this.endTimestamp, describeStackSetOperationOutputStackSetOperation.endTimestamp) &&
        Objects.equals(this.deploymentTargets, describeStackSetOperationOutputStackSetOperation.deploymentTargets) &&
        Objects.equals(this.stackSetDriftDetectionDetails, describeStackSetOperationOutputStackSetOperation.stackSetDriftDetectionDetails) &&
        Objects.equals(this.statusReason, describeStackSetOperationOutputStackSetOperation.statusReason) &&
        Objects.equals(this.statusDetails, describeStackSetOperationOutputStackSetOperation.statusDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operationId, stackSetId, action, status, operationPreferences, retainStacks, administrationRoleARN, executionRoleName, creationTimestamp, endTimestamp, deploymentTargets, stackSetDriftDetectionDetails, statusReason, statusDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeStackSetOperationOutputStackSetOperation {\n");
    sb.append("    operationId: ").append(toIndentedString(operationId)).append("\n");
    sb.append("    stackSetId: ").append(toIndentedString(stackSetId)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    operationPreferences: ").append(toIndentedString(operationPreferences)).append("\n");
    sb.append("    retainStacks: ").append(toIndentedString(retainStacks)).append("\n");
    sb.append("    administrationRoleARN: ").append(toIndentedString(administrationRoleARN)).append("\n");
    sb.append("    executionRoleName: ").append(toIndentedString(executionRoleName)).append("\n");
    sb.append("    creationTimestamp: ").append(toIndentedString(creationTimestamp)).append("\n");
    sb.append("    endTimestamp: ").append(toIndentedString(endTimestamp)).append("\n");
    sb.append("    deploymentTargets: ").append(toIndentedString(deploymentTargets)).append("\n");
    sb.append("    stackSetDriftDetectionDetails: ").append(toIndentedString(stackSetDriftDetectionDetails)).append("\n");
    sb.append("    statusReason: ").append(toIndentedString(statusReason)).append("\n");
    sb.append("    statusDetails: ").append(toIndentedString(statusDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("OperationId");
    openapiFields.add("StackSetId");
    openapiFields.add("Action");
    openapiFields.add("Status");
    openapiFields.add("OperationPreferences");
    openapiFields.add("RetainStacks");
    openapiFields.add("AdministrationRoleARN");
    openapiFields.add("ExecutionRoleName");
    openapiFields.add("CreationTimestamp");
    openapiFields.add("EndTimestamp");
    openapiFields.add("DeploymentTargets");
    openapiFields.add("StackSetDriftDetectionDetails");
    openapiFields.add("StatusReason");
    openapiFields.add("StatusDetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeStackSetOperationOutputStackSetOperation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeStackSetOperationOutputStackSetOperation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeStackSetOperationOutputStackSetOperation is not found in the empty JSON string", DescribeStackSetOperationOutputStackSetOperation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeStackSetOperationOutputStackSetOperation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeStackSetOperationOutputStackSetOperation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `OperationId`
      if (jsonObj.get("OperationId") != null && !jsonObj.get("OperationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OperationId"));
      }
      // validate the optional field `StackSetId`
      if (jsonObj.get("StackSetId") != null && !jsonObj.get("StackSetId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StackSetId"));
      }
      // validate the optional field `Action`
      if (jsonObj.get("Action") != null && !jsonObj.get("Action").isJsonNull()) {
        StackSetOperationAction.validateJsonElement(jsonObj.get("Action"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        StackSetOperationStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `OperationPreferences`
      if (jsonObj.get("OperationPreferences") != null && !jsonObj.get("OperationPreferences").isJsonNull()) {
        StackSetOperationOperationPreferences.validateJsonElement(jsonObj.get("OperationPreferences"));
      }
      // validate the optional field `RetainStacks`
      if (jsonObj.get("RetainStacks") != null && !jsonObj.get("RetainStacks").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("RetainStacks"));
      }
      // validate the optional field `AdministrationRoleARN`
      if (jsonObj.get("AdministrationRoleARN") != null && !jsonObj.get("AdministrationRoleARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AdministrationRoleARN"));
      }
      // validate the optional field `ExecutionRoleName`
      if (jsonObj.get("ExecutionRoleName") != null && !jsonObj.get("ExecutionRoleName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExecutionRoleName"));
      }
      // validate the optional field `CreationTimestamp`
      if (jsonObj.get("CreationTimestamp") != null && !jsonObj.get("CreationTimestamp").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTimestamp"));
      }
      // validate the optional field `EndTimestamp`
      if (jsonObj.get("EndTimestamp") != null && !jsonObj.get("EndTimestamp").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EndTimestamp"));
      }
      // validate the optional field `DeploymentTargets`
      if (jsonObj.get("DeploymentTargets") != null && !jsonObj.get("DeploymentTargets").isJsonNull()) {
        StackSetOperationDeploymentTargets.validateJsonElement(jsonObj.get("DeploymentTargets"));
      }
      // validate the optional field `StackSetDriftDetectionDetails`
      if (jsonObj.get("StackSetDriftDetectionDetails") != null && !jsonObj.get("StackSetDriftDetectionDetails").isJsonNull()) {
        StackSetOperationStackSetDriftDetectionDetails.validateJsonElement(jsonObj.get("StackSetDriftDetectionDetails"));
      }
      // validate the optional field `StatusReason`
      if (jsonObj.get("StatusReason") != null && !jsonObj.get("StatusReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusReason"));
      }
      // validate the optional field `StatusDetails`
      if (jsonObj.get("StatusDetails") != null && !jsonObj.get("StatusDetails").isJsonNull()) {
        StackSetOperationStatusDetails.validateJsonElement(jsonObj.get("StatusDetails"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeStackSetOperationOutputStackSetOperation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeStackSetOperationOutputStackSetOperation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeStackSetOperationOutputStackSetOperation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeStackSetOperationOutputStackSetOperation.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeStackSetOperationOutputStackSetOperation>() {
           @Override
           public void write(JsonWriter out, DescribeStackSetOperationOutputStackSetOperation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeStackSetOperationOutputStackSetOperation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeStackSetOperationOutputStackSetOperation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeStackSetOperationOutputStackSetOperation
   * @throws IOException if the JSON string is invalid with respect to DescribeStackSetOperationOutputStackSetOperation
   */
  public static DescribeStackSetOperationOutputStackSetOperation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeStackSetOperationOutputStackSetOperation.class);
  }

  /**
   * Convert an instance of DescribeStackSetOperationOutputStackSetOperation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

