/*
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Structure containing the rollback triggers for CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.&lt;/p&gt; &lt;p&gt;Rollback triggers enable you to have CloudFormation monitor the state of your application during stack creation and updating, and to roll back that operation if the application breaches the threshold of any of the alarms you&#39;ve specified. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-rollback-triggers.html\&quot;&gt;Monitor and Roll Back Stack Operations&lt;/a&gt;.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:23:20.021771-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GETCreateChangeSetRollbackConfigurationParameter {
  public static final String SERIALIZED_NAME_ROLLBACK_TRIGGERS = "RollbackTriggers";
  @SerializedName(SERIALIZED_NAME_ROLLBACK_TRIGGERS)
  private List rollbackTriggers;

  public static final String SERIALIZED_NAME_MONITORING_TIME_IN_MINUTES = "MonitoringTimeInMinutes";
  @SerializedName(SERIALIZED_NAME_MONITORING_TIME_IN_MINUTES)
  private Integer monitoringTimeInMinutes;

  public GETCreateChangeSetRollbackConfigurationParameter() {
  }

  public GETCreateChangeSetRollbackConfigurationParameter rollbackTriggers(List rollbackTriggers) {
    this.rollbackTriggers = rollbackTriggers;
    return this;
  }

  /**
   * Get rollbackTriggers
   * @return rollbackTriggers
   */
  @javax.annotation.Nullable
  public List getRollbackTriggers() {
    return rollbackTriggers;
  }

  public void setRollbackTriggers(List rollbackTriggers) {
    this.rollbackTriggers = rollbackTriggers;
  }


  public GETCreateChangeSetRollbackConfigurationParameter monitoringTimeInMinutes(Integer monitoringTimeInMinutes) {
    this.monitoringTimeInMinutes = monitoringTimeInMinutes;
    return this;
  }

  /**
   * Get monitoringTimeInMinutes
   * @return monitoringTimeInMinutes
   */
  @javax.annotation.Nullable
  public Integer getMonitoringTimeInMinutes() {
    return monitoringTimeInMinutes;
  }

  public void setMonitoringTimeInMinutes(Integer monitoringTimeInMinutes) {
    this.monitoringTimeInMinutes = monitoringTimeInMinutes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GETCreateChangeSetRollbackConfigurationParameter geTCreateChangeSetRollbackConfigurationParameter = (GETCreateChangeSetRollbackConfigurationParameter) o;
    return Objects.equals(this.rollbackTriggers, geTCreateChangeSetRollbackConfigurationParameter.rollbackTriggers) &&
        Objects.equals(this.monitoringTimeInMinutes, geTCreateChangeSetRollbackConfigurationParameter.monitoringTimeInMinutes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rollbackTriggers, monitoringTimeInMinutes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GETCreateChangeSetRollbackConfigurationParameter {\n");
    sb.append("    rollbackTriggers: ").append(toIndentedString(rollbackTriggers)).append("\n");
    sb.append("    monitoringTimeInMinutes: ").append(toIndentedString(monitoringTimeInMinutes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("RollbackTriggers");
    openapiFields.add("MonitoringTimeInMinutes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GETCreateChangeSetRollbackConfigurationParameter
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GETCreateChangeSetRollbackConfigurationParameter.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GETCreateChangeSetRollbackConfigurationParameter is not found in the empty JSON string", GETCreateChangeSetRollbackConfigurationParameter.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GETCreateChangeSetRollbackConfigurationParameter.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GETCreateChangeSetRollbackConfigurationParameter` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `RollbackTriggers`
      if (jsonObj.get("RollbackTriggers") != null && !jsonObj.get("RollbackTriggers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("RollbackTriggers"));
      }
      // validate the optional field `MonitoringTimeInMinutes`
      if (jsonObj.get("MonitoringTimeInMinutes") != null && !jsonObj.get("MonitoringTimeInMinutes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MonitoringTimeInMinutes"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GETCreateChangeSetRollbackConfigurationParameter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GETCreateChangeSetRollbackConfigurationParameter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GETCreateChangeSetRollbackConfigurationParameter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GETCreateChangeSetRollbackConfigurationParameter.class));

       return (TypeAdapter<T>) new TypeAdapter<GETCreateChangeSetRollbackConfigurationParameter>() {
           @Override
           public void write(JsonWriter out, GETCreateChangeSetRollbackConfigurationParameter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GETCreateChangeSetRollbackConfigurationParameter read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GETCreateChangeSetRollbackConfigurationParameter given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GETCreateChangeSetRollbackConfigurationParameter
   * @throws IOException if the JSON string is invalid with respect to GETCreateChangeSetRollbackConfigurationParameter
   */
  public static GETCreateChangeSetRollbackConfigurationParameter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GETCreateChangeSetRollbackConfigurationParameter.class);
  }

  /**
   * Convert an instance of GETCreateChangeSetRollbackConfigurationParameter to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

