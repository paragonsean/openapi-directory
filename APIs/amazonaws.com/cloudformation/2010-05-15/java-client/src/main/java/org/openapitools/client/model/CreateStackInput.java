/*
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DescribeChangeSetOutputRollbackConfiguration;
import org.openapitools.client.model.OnFailure;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The input for &lt;a&gt;CreateStack&lt;/a&gt; action.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:23:20.021771-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateStackInput {
  public static final String SERIALIZED_NAME_STACK_NAME = "StackName";
  @SerializedName(SERIALIZED_NAME_STACK_NAME)
  private String stackName;

  public static final String SERIALIZED_NAME_TEMPLATE_BODY = "TemplateBody";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_BODY)
  private String templateBody;

  public static final String SERIALIZED_NAME_TEMPLATE_U_R_L = "TemplateURL";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_U_R_L)
  private String templateURL;

  public static final String SERIALIZED_NAME_PARAMETERS = "Parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private List parameters;

  public static final String SERIALIZED_NAME_DISABLE_ROLLBACK = "DisableRollback";
  @SerializedName(SERIALIZED_NAME_DISABLE_ROLLBACK)
  private Boolean disableRollback;

  public static final String SERIALIZED_NAME_ROLLBACK_CONFIGURATION = "RollbackConfiguration";
  @SerializedName(SERIALIZED_NAME_ROLLBACK_CONFIGURATION)
  private DescribeChangeSetOutputRollbackConfiguration rollbackConfiguration;

  public static final String SERIALIZED_NAME_TIMEOUT_IN_MINUTES = "TimeoutInMinutes";
  @SerializedName(SERIALIZED_NAME_TIMEOUT_IN_MINUTES)
  private Integer timeoutInMinutes;

  public static final String SERIALIZED_NAME_NOTIFICATION_A_R_NS = "NotificationARNs";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_A_R_NS)
  private List notificationARNs;

  public static final String SERIALIZED_NAME_CAPABILITIES = "Capabilities";
  @SerializedName(SERIALIZED_NAME_CAPABILITIES)
  private List capabilities;

  public static final String SERIALIZED_NAME_RESOURCE_TYPES = "ResourceTypes";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPES)
  private List resourceTypes;

  public static final String SERIALIZED_NAME_ROLE_A_R_N = "RoleARN";
  @SerializedName(SERIALIZED_NAME_ROLE_A_R_N)
  private String roleARN;

  public static final String SERIALIZED_NAME_ON_FAILURE = "OnFailure";
  @SerializedName(SERIALIZED_NAME_ON_FAILURE)
  private OnFailure onFailure;

  public static final String SERIALIZED_NAME_STACK_POLICY_BODY = "StackPolicyBody";
  @SerializedName(SERIALIZED_NAME_STACK_POLICY_BODY)
  private String stackPolicyBody;

  public static final String SERIALIZED_NAME_STACK_POLICY_U_R_L = "StackPolicyURL";
  @SerializedName(SERIALIZED_NAME_STACK_POLICY_U_R_L)
  private String stackPolicyURL;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_CLIENT_REQUEST_TOKEN = "ClientRequestToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_REQUEST_TOKEN)
  private String clientRequestToken;

  public static final String SERIALIZED_NAME_ENABLE_TERMINATION_PROTECTION = "EnableTerminationProtection";
  @SerializedName(SERIALIZED_NAME_ENABLE_TERMINATION_PROTECTION)
  private Boolean enableTerminationProtection;

  public static final String SERIALIZED_NAME_RETAIN_EXCEPT_ON_CREATE = "RetainExceptOnCreate";
  @SerializedName(SERIALIZED_NAME_RETAIN_EXCEPT_ON_CREATE)
  private Boolean retainExceptOnCreate;

  public CreateStackInput() {
  }

  public CreateStackInput stackName(String stackName) {
    this.stackName = stackName;
    return this;
  }

  /**
   * Get stackName
   * @return stackName
   */
  @javax.annotation.Nonnull
  public String getStackName() {
    return stackName;
  }

  public void setStackName(String stackName) {
    this.stackName = stackName;
  }


  public CreateStackInput templateBody(String templateBody) {
    this.templateBody = templateBody;
    return this;
  }

  /**
   * Get templateBody
   * @return templateBody
   */
  @javax.annotation.Nullable
  public String getTemplateBody() {
    return templateBody;
  }

  public void setTemplateBody(String templateBody) {
    this.templateBody = templateBody;
  }


  public CreateStackInput templateURL(String templateURL) {
    this.templateURL = templateURL;
    return this;
  }

  /**
   * Get templateURL
   * @return templateURL
   */
  @javax.annotation.Nullable
  public String getTemplateURL() {
    return templateURL;
  }

  public void setTemplateURL(String templateURL) {
    this.templateURL = templateURL;
  }


  public CreateStackInput parameters(List parameters) {
    this.parameters = parameters;
    return this;
  }

  /**
   * Get parameters
   * @return parameters
   */
  @javax.annotation.Nullable
  public List getParameters() {
    return parameters;
  }

  public void setParameters(List parameters) {
    this.parameters = parameters;
  }


  public CreateStackInput disableRollback(Boolean disableRollback) {
    this.disableRollback = disableRollback;
    return this;
  }

  /**
   * Get disableRollback
   * @return disableRollback
   */
  @javax.annotation.Nullable
  public Boolean getDisableRollback() {
    return disableRollback;
  }

  public void setDisableRollback(Boolean disableRollback) {
    this.disableRollback = disableRollback;
  }


  public CreateStackInput rollbackConfiguration(DescribeChangeSetOutputRollbackConfiguration rollbackConfiguration) {
    this.rollbackConfiguration = rollbackConfiguration;
    return this;
  }

  /**
   * Get rollbackConfiguration
   * @return rollbackConfiguration
   */
  @javax.annotation.Nullable
  public DescribeChangeSetOutputRollbackConfiguration getRollbackConfiguration() {
    return rollbackConfiguration;
  }

  public void setRollbackConfiguration(DescribeChangeSetOutputRollbackConfiguration rollbackConfiguration) {
    this.rollbackConfiguration = rollbackConfiguration;
  }


  public CreateStackInput timeoutInMinutes(Integer timeoutInMinutes) {
    this.timeoutInMinutes = timeoutInMinutes;
    return this;
  }

  /**
   * Get timeoutInMinutes
   * @return timeoutInMinutes
   */
  @javax.annotation.Nullable
  public Integer getTimeoutInMinutes() {
    return timeoutInMinutes;
  }

  public void setTimeoutInMinutes(Integer timeoutInMinutes) {
    this.timeoutInMinutes = timeoutInMinutes;
  }


  public CreateStackInput notificationARNs(List notificationARNs) {
    this.notificationARNs = notificationARNs;
    return this;
  }

  /**
   * Get notificationARNs
   * @return notificationARNs
   */
  @javax.annotation.Nullable
  public List getNotificationARNs() {
    return notificationARNs;
  }

  public void setNotificationARNs(List notificationARNs) {
    this.notificationARNs = notificationARNs;
  }


  public CreateStackInput capabilities(List capabilities) {
    this.capabilities = capabilities;
    return this;
  }

  /**
   * Get capabilities
   * @return capabilities
   */
  @javax.annotation.Nullable
  public List getCapabilities() {
    return capabilities;
  }

  public void setCapabilities(List capabilities) {
    this.capabilities = capabilities;
  }


  public CreateStackInput resourceTypes(List resourceTypes) {
    this.resourceTypes = resourceTypes;
    return this;
  }

  /**
   * Get resourceTypes
   * @return resourceTypes
   */
  @javax.annotation.Nullable
  public List getResourceTypes() {
    return resourceTypes;
  }

  public void setResourceTypes(List resourceTypes) {
    this.resourceTypes = resourceTypes;
  }


  public CreateStackInput roleARN(String roleARN) {
    this.roleARN = roleARN;
    return this;
  }

  /**
   * Get roleARN
   * @return roleARN
   */
  @javax.annotation.Nullable
  public String getRoleARN() {
    return roleARN;
  }

  public void setRoleARN(String roleARN) {
    this.roleARN = roleARN;
  }


  public CreateStackInput onFailure(OnFailure onFailure) {
    this.onFailure = onFailure;
    return this;
  }

  /**
   * Get onFailure
   * @return onFailure
   */
  @javax.annotation.Nullable
  public OnFailure getOnFailure() {
    return onFailure;
  }

  public void setOnFailure(OnFailure onFailure) {
    this.onFailure = onFailure;
  }


  public CreateStackInput stackPolicyBody(String stackPolicyBody) {
    this.stackPolicyBody = stackPolicyBody;
    return this;
  }

  /**
   * Get stackPolicyBody
   * @return stackPolicyBody
   */
  @javax.annotation.Nullable
  public String getStackPolicyBody() {
    return stackPolicyBody;
  }

  public void setStackPolicyBody(String stackPolicyBody) {
    this.stackPolicyBody = stackPolicyBody;
  }


  public CreateStackInput stackPolicyURL(String stackPolicyURL) {
    this.stackPolicyURL = stackPolicyURL;
    return this;
  }

  /**
   * Get stackPolicyURL
   * @return stackPolicyURL
   */
  @javax.annotation.Nullable
  public String getStackPolicyURL() {
    return stackPolicyURL;
  }

  public void setStackPolicyURL(String stackPolicyURL) {
    this.stackPolicyURL = stackPolicyURL;
  }


  public CreateStackInput tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public CreateStackInput clientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
    return this;
  }

  /**
   * Get clientRequestToken
   * @return clientRequestToken
   */
  @javax.annotation.Nullable
  public String getClientRequestToken() {
    return clientRequestToken;
  }

  public void setClientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
  }


  public CreateStackInput enableTerminationProtection(Boolean enableTerminationProtection) {
    this.enableTerminationProtection = enableTerminationProtection;
    return this;
  }

  /**
   * Get enableTerminationProtection
   * @return enableTerminationProtection
   */
  @javax.annotation.Nullable
  public Boolean getEnableTerminationProtection() {
    return enableTerminationProtection;
  }

  public void setEnableTerminationProtection(Boolean enableTerminationProtection) {
    this.enableTerminationProtection = enableTerminationProtection;
  }


  public CreateStackInput retainExceptOnCreate(Boolean retainExceptOnCreate) {
    this.retainExceptOnCreate = retainExceptOnCreate;
    return this;
  }

  /**
   * Get retainExceptOnCreate
   * @return retainExceptOnCreate
   */
  @javax.annotation.Nullable
  public Boolean getRetainExceptOnCreate() {
    return retainExceptOnCreate;
  }

  public void setRetainExceptOnCreate(Boolean retainExceptOnCreate) {
    this.retainExceptOnCreate = retainExceptOnCreate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateStackInput createStackInput = (CreateStackInput) o;
    return Objects.equals(this.stackName, createStackInput.stackName) &&
        Objects.equals(this.templateBody, createStackInput.templateBody) &&
        Objects.equals(this.templateURL, createStackInput.templateURL) &&
        Objects.equals(this.parameters, createStackInput.parameters) &&
        Objects.equals(this.disableRollback, createStackInput.disableRollback) &&
        Objects.equals(this.rollbackConfiguration, createStackInput.rollbackConfiguration) &&
        Objects.equals(this.timeoutInMinutes, createStackInput.timeoutInMinutes) &&
        Objects.equals(this.notificationARNs, createStackInput.notificationARNs) &&
        Objects.equals(this.capabilities, createStackInput.capabilities) &&
        Objects.equals(this.resourceTypes, createStackInput.resourceTypes) &&
        Objects.equals(this.roleARN, createStackInput.roleARN) &&
        Objects.equals(this.onFailure, createStackInput.onFailure) &&
        Objects.equals(this.stackPolicyBody, createStackInput.stackPolicyBody) &&
        Objects.equals(this.stackPolicyURL, createStackInput.stackPolicyURL) &&
        Objects.equals(this.tags, createStackInput.tags) &&
        Objects.equals(this.clientRequestToken, createStackInput.clientRequestToken) &&
        Objects.equals(this.enableTerminationProtection, createStackInput.enableTerminationProtection) &&
        Objects.equals(this.retainExceptOnCreate, createStackInput.retainExceptOnCreate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(stackName, templateBody, templateURL, parameters, disableRollback, rollbackConfiguration, timeoutInMinutes, notificationARNs, capabilities, resourceTypes, roleARN, onFailure, stackPolicyBody, stackPolicyURL, tags, clientRequestToken, enableTerminationProtection, retainExceptOnCreate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateStackInput {\n");
    sb.append("    stackName: ").append(toIndentedString(stackName)).append("\n");
    sb.append("    templateBody: ").append(toIndentedString(templateBody)).append("\n");
    sb.append("    templateURL: ").append(toIndentedString(templateURL)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    disableRollback: ").append(toIndentedString(disableRollback)).append("\n");
    sb.append("    rollbackConfiguration: ").append(toIndentedString(rollbackConfiguration)).append("\n");
    sb.append("    timeoutInMinutes: ").append(toIndentedString(timeoutInMinutes)).append("\n");
    sb.append("    notificationARNs: ").append(toIndentedString(notificationARNs)).append("\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("    resourceTypes: ").append(toIndentedString(resourceTypes)).append("\n");
    sb.append("    roleARN: ").append(toIndentedString(roleARN)).append("\n");
    sb.append("    onFailure: ").append(toIndentedString(onFailure)).append("\n");
    sb.append("    stackPolicyBody: ").append(toIndentedString(stackPolicyBody)).append("\n");
    sb.append("    stackPolicyURL: ").append(toIndentedString(stackPolicyURL)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    clientRequestToken: ").append(toIndentedString(clientRequestToken)).append("\n");
    sb.append("    enableTerminationProtection: ").append(toIndentedString(enableTerminationProtection)).append("\n");
    sb.append("    retainExceptOnCreate: ").append(toIndentedString(retainExceptOnCreate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("StackName");
    openapiFields.add("TemplateBody");
    openapiFields.add("TemplateURL");
    openapiFields.add("Parameters");
    openapiFields.add("DisableRollback");
    openapiFields.add("RollbackConfiguration");
    openapiFields.add("TimeoutInMinutes");
    openapiFields.add("NotificationARNs");
    openapiFields.add("Capabilities");
    openapiFields.add("ResourceTypes");
    openapiFields.add("RoleARN");
    openapiFields.add("OnFailure");
    openapiFields.add("StackPolicyBody");
    openapiFields.add("StackPolicyURL");
    openapiFields.add("Tags");
    openapiFields.add("ClientRequestToken");
    openapiFields.add("EnableTerminationProtection");
    openapiFields.add("RetainExceptOnCreate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("StackName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateStackInput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateStackInput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateStackInput is not found in the empty JSON string", CreateStackInput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateStackInput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateStackInput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateStackInput.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `StackName`
      String.validateJsonElement(jsonObj.get("StackName"));
      // validate the optional field `TemplateBody`
      if (jsonObj.get("TemplateBody") != null && !jsonObj.get("TemplateBody").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TemplateBody"));
      }
      // validate the optional field `TemplateURL`
      if (jsonObj.get("TemplateURL") != null && !jsonObj.get("TemplateURL").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TemplateURL"));
      }
      // validate the optional field `Parameters`
      if (jsonObj.get("Parameters") != null && !jsonObj.get("Parameters").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Parameters"));
      }
      // validate the optional field `DisableRollback`
      if (jsonObj.get("DisableRollback") != null && !jsonObj.get("DisableRollback").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DisableRollback"));
      }
      // validate the optional field `RollbackConfiguration`
      if (jsonObj.get("RollbackConfiguration") != null && !jsonObj.get("RollbackConfiguration").isJsonNull()) {
        DescribeChangeSetOutputRollbackConfiguration.validateJsonElement(jsonObj.get("RollbackConfiguration"));
      }
      // validate the optional field `TimeoutInMinutes`
      if (jsonObj.get("TimeoutInMinutes") != null && !jsonObj.get("TimeoutInMinutes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TimeoutInMinutes"));
      }
      // validate the optional field `NotificationARNs`
      if (jsonObj.get("NotificationARNs") != null && !jsonObj.get("NotificationARNs").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("NotificationARNs"));
      }
      // validate the optional field `Capabilities`
      if (jsonObj.get("Capabilities") != null && !jsonObj.get("Capabilities").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Capabilities"));
      }
      // validate the optional field `ResourceTypes`
      if (jsonObj.get("ResourceTypes") != null && !jsonObj.get("ResourceTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ResourceTypes"));
      }
      // validate the optional field `RoleARN`
      if (jsonObj.get("RoleARN") != null && !jsonObj.get("RoleARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleARN"));
      }
      // validate the optional field `OnFailure`
      if (jsonObj.get("OnFailure") != null && !jsonObj.get("OnFailure").isJsonNull()) {
        OnFailure.validateJsonElement(jsonObj.get("OnFailure"));
      }
      // validate the optional field `StackPolicyBody`
      if (jsonObj.get("StackPolicyBody") != null && !jsonObj.get("StackPolicyBody").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StackPolicyBody"));
      }
      // validate the optional field `StackPolicyURL`
      if (jsonObj.get("StackPolicyURL") != null && !jsonObj.get("StackPolicyURL").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StackPolicyURL"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `ClientRequestToken`
      if (jsonObj.get("ClientRequestToken") != null && !jsonObj.get("ClientRequestToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClientRequestToken"));
      }
      // validate the optional field `EnableTerminationProtection`
      if (jsonObj.get("EnableTerminationProtection") != null && !jsonObj.get("EnableTerminationProtection").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnableTerminationProtection"));
      }
      // validate the optional field `RetainExceptOnCreate`
      if (jsonObj.get("RetainExceptOnCreate") != null && !jsonObj.get("RetainExceptOnCreate").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("RetainExceptOnCreate"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateStackInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateStackInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateStackInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateStackInput.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateStackInput>() {
           @Override
           public void write(JsonWriter out, CreateStackInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateStackInput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateStackInput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateStackInput
   * @throws IOException if the JSON string is invalid with respect to CreateStackInput
   */
  public static CreateStackInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateStackInput.class);
  }

  /**
   * Convert an instance of CreateStackInput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

