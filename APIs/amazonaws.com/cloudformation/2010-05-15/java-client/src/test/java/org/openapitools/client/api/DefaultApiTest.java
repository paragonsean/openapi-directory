/*
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ActivateTypeInput;
import org.openapitools.client.model.ActivateTypeOutput;
import org.openapitools.client.model.BatchDescribeTypeConfigurationsInput;
import org.openapitools.client.model.BatchDescribeTypeConfigurationsOutput;
import org.openapitools.client.model.CancelUpdateStackInput;
import org.openapitools.client.model.Capability;
import org.openapitools.client.model.ContinueUpdateRollbackInput;
import org.openapitools.client.model.CreateChangeSetInput;
import org.openapitools.client.model.CreateChangeSetOutput;
import org.openapitools.client.model.CreateStackInput;
import org.openapitools.client.model.CreateStackInstancesInput;
import org.openapitools.client.model.CreateStackInstancesOutput;
import org.openapitools.client.model.CreateStackOutput;
import org.openapitools.client.model.CreateStackSetInput;
import org.openapitools.client.model.CreateStackSetOutput;
import org.openapitools.client.model.DeactivateTypeInput;
import org.openapitools.client.model.DeleteChangeSetInput;
import org.openapitools.client.model.DeleteStackInput;
import org.openapitools.client.model.DeleteStackInstancesInput;
import org.openapitools.client.model.DeleteStackInstancesOutput;
import org.openapitools.client.model.DeleteStackSetInput;
import org.openapitools.client.model.DeregisterTypeInput;
import org.openapitools.client.model.DescribeAccountLimitsInput;
import org.openapitools.client.model.DescribeAccountLimitsOutput;
import org.openapitools.client.model.DescribeChangeSetHooksInput;
import org.openapitools.client.model.DescribeChangeSetHooksOutput;
import org.openapitools.client.model.DescribeChangeSetInput;
import org.openapitools.client.model.DescribeChangeSetOutput;
import org.openapitools.client.model.DescribeOrganizationsAccessInput;
import org.openapitools.client.model.DescribeOrganizationsAccessOutput;
import org.openapitools.client.model.DescribePublisherInput;
import org.openapitools.client.model.DescribePublisherOutput;
import org.openapitools.client.model.DescribeStackDriftDetectionStatusInput;
import org.openapitools.client.model.DescribeStackDriftDetectionStatusOutput;
import org.openapitools.client.model.DescribeStackEventsInput;
import org.openapitools.client.model.DescribeStackEventsOutput;
import org.openapitools.client.model.DescribeStackInstanceInput;
import org.openapitools.client.model.DescribeStackInstanceOutput;
import org.openapitools.client.model.DescribeStackResourceDriftsInput;
import org.openapitools.client.model.DescribeStackResourceDriftsOutput;
import org.openapitools.client.model.DescribeStackResourceInput;
import org.openapitools.client.model.DescribeStackResourceOutput;
import org.openapitools.client.model.DescribeStackResourcesInput;
import org.openapitools.client.model.DescribeStackResourcesOutput;
import org.openapitools.client.model.DescribeStackSetInput;
import org.openapitools.client.model.DescribeStackSetOperationInput;
import org.openapitools.client.model.DescribeStackSetOperationOutput;
import org.openapitools.client.model.DescribeStackSetOutput;
import org.openapitools.client.model.DescribeStacksInput;
import org.openapitools.client.model.DescribeStacksOutput;
import org.openapitools.client.model.DescribeTypeInput;
import org.openapitools.client.model.DescribeTypeOutput;
import org.openapitools.client.model.DescribeTypeRegistrationInput;
import org.openapitools.client.model.DescribeTypeRegistrationOutput;
import org.openapitools.client.model.DetectStackDriftInput;
import org.openapitools.client.model.DetectStackDriftOutput;
import org.openapitools.client.model.DetectStackResourceDriftInput;
import org.openapitools.client.model.DetectStackResourceDriftOutput;
import org.openapitools.client.model.DetectStackSetDriftInput;
import org.openapitools.client.model.DetectStackSetDriftOutput;
import org.openapitools.client.model.EstimateTemplateCostInput;
import org.openapitools.client.model.EstimateTemplateCostOutput;
import org.openapitools.client.model.ExecuteChangeSetInput;
import org.openapitools.client.model.GETActivateTypeLoggingConfigParameter;
import org.openapitools.client.model.GETCreateChangeSetRollbackConfigurationParameter;
import org.openapitools.client.model.GETCreateStackInstancesDeploymentTargetsParameter;
import org.openapitools.client.model.GETCreateStackInstancesOperationPreferencesParameter;
import org.openapitools.client.model.GETCreateStackSetAutoDeploymentParameter;
import org.openapitools.client.model.GETCreateStackSetManagedExecutionParameter;
import org.openapitools.client.model.GETGetTemplateSummaryTemplateSummaryConfigParameter;
import org.openapitools.client.model.GETListTypesFiltersParameter;
import org.openapitools.client.model.GetStackPolicyInput;
import org.openapitools.client.model.GetStackPolicyOutput;
import org.openapitools.client.model.GetTemplateInput;
import org.openapitools.client.model.GetTemplateOutput;
import org.openapitools.client.model.GetTemplateSummaryInput;
import org.openapitools.client.model.GetTemplateSummaryOutput;
import org.openapitools.client.model.ImportStacksToStackSetInput;
import org.openapitools.client.model.ImportStacksToStackSetOutput;
import org.openapitools.client.model.ListChangeSetsInput;
import org.openapitools.client.model.ListChangeSetsOutput;
import org.openapitools.client.model.ListExportsInput;
import org.openapitools.client.model.ListExportsOutput;
import org.openapitools.client.model.ListImportsInput;
import org.openapitools.client.model.ListImportsOutput;
import org.openapitools.client.model.ListStackInstanceResourceDriftsInput;
import org.openapitools.client.model.ListStackInstanceResourceDriftsOutput;
import org.openapitools.client.model.ListStackInstancesInput;
import org.openapitools.client.model.ListStackInstancesOutput;
import org.openapitools.client.model.ListStackResourcesInput;
import org.openapitools.client.model.ListStackResourcesOutput;
import org.openapitools.client.model.ListStackSetOperationResultsInput;
import org.openapitools.client.model.ListStackSetOperationResultsOutput;
import org.openapitools.client.model.ListStackSetOperationsInput;
import org.openapitools.client.model.ListStackSetOperationsOutput;
import org.openapitools.client.model.ListStackSetsInput;
import org.openapitools.client.model.ListStackSetsOutput;
import org.openapitools.client.model.ListStacksInput;
import org.openapitools.client.model.ListStacksOutput;
import org.openapitools.client.model.ListTypeRegistrationsInput;
import org.openapitools.client.model.ListTypeRegistrationsOutput;
import org.openapitools.client.model.ListTypeVersionsInput;
import org.openapitools.client.model.ListTypeVersionsOutput;
import org.openapitools.client.model.ListTypesInput;
import org.openapitools.client.model.ListTypesOutput;
import org.openapitools.client.model.OperationResultFilter;
import org.openapitools.client.model.Parameter;
import org.openapitools.client.model.PublishTypeInput;
import org.openapitools.client.model.PublishTypeOutput;
import org.openapitools.client.model.RecordHandlerProgressInput;
import org.openapitools.client.model.RegisterPublisherInput;
import org.openapitools.client.model.RegisterPublisherOutput;
import org.openapitools.client.model.RegisterTypeInput;
import org.openapitools.client.model.RegisterTypeOutput;
import org.openapitools.client.model.ResourceToImport;
import org.openapitools.client.model.RollbackStackInput;
import org.openapitools.client.model.RollbackStackOutput;
import org.openapitools.client.model.SetStackPolicyInput;
import org.openapitools.client.model.SetTypeConfigurationInput;
import org.openapitools.client.model.SetTypeConfigurationOutput;
import org.openapitools.client.model.SetTypeDefaultVersionInput;
import org.openapitools.client.model.SignalResourceInput;
import org.openapitools.client.model.StackInstanceFilter;
import org.openapitools.client.model.StackResourceDriftStatus;
import org.openapitools.client.model.StackStatus;
import org.openapitools.client.model.StopStackSetOperationInput;
import org.openapitools.client.model.Tag;
import org.openapitools.client.model.TestTypeInput;
import org.openapitools.client.model.TestTypeOutput;
import org.openapitools.client.model.TypeConfigurationIdentifier;
import org.openapitools.client.model.UpdateStackInput;
import org.openapitools.client.model.UpdateStackInstancesInput;
import org.openapitools.client.model.UpdateStackInstancesOutput;
import org.openapitools.client.model.UpdateStackOutput;
import org.openapitools.client.model.UpdateStackSetInput;
import org.openapitools.client.model.UpdateStackSetOutput;
import org.openapitools.client.model.UpdateTerminationProtectionInput;
import org.openapitools.client.model.UpdateTerminationProtectionOutput;
import org.openapitools.client.model.ValidateTemplateInput;
import org.openapitools.client.model.ValidateTemplateOutput;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Activate trusted access with Organizations. With trusted access between StackSets and Organizations activated, the management account has permissions to create and manage StackSets for your organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETActivateOrganizationsAccessTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.gETActivateOrganizationsAccess(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Activates a public third-party extension, making it available for use in stack templates. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-public.html\&quot;&gt;Using public extensions&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;Once you have activated a public third-party extension in your account and Region, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_SetTypeConfiguration.html\&quot;&gt;SetTypeConfiguration&lt;/a&gt; to specify configuration properties for the extension. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-register.html#registry-set-configuration\&quot;&gt;Configuring extensions at the account level&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETActivateTypeTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String type = null;
        String publicTypeArn = null;
        String publisherId = null;
        String typeName = null;
        String typeNameAlias = null;
        Boolean autoUpdate = null;
        GETActivateTypeLoggingConfigParameter loggingConfig = null;
        String executionRoleArn = null;
        String versionBump = null;
        Integer majorVersion = null;
        ActivateTypeOutput response = api.gETActivateType(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, type, publicTypeArn, publisherId, typeName, typeNameAlias, autoUpdate, loggingConfig, executionRoleArn, versionBump, majorVersion);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns configuration data for the specified CloudFormation extensions, from the CloudFormation registry for the account and Region.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-register.html#registry-set-configuration\&quot;&gt;Configuring extensions at the account level&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETBatchDescribeTypeConfigurationsTest() throws ApiException {
        List<TypeConfigurationIdentifier> typeConfigurationIdentifiers = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        BatchDescribeTypeConfigurationsOutput response = api.gETBatchDescribeTypeConfigurations(typeConfigurationIdentifiers, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You can cancel only stacks that are in the &lt;code&gt;UPDATE_IN_PROGRESS&lt;/code&gt; state.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETCancelUpdateStackTest() throws ApiException {
        String stackName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String clientRequestToken = null;
        api.gETCancelUpdateStack(stackName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, clientRequestToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;For a specified stack that&#39;s in the &lt;code&gt;UPDATE_ROLLBACK_FAILED&lt;/code&gt; state, continues rolling it back to the &lt;code&gt;UPDATE_ROLLBACK_COMPLETE&lt;/code&gt; state. Depending on the cause of the failure, you can manually &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed\&quot;&gt; fix the error&lt;/a&gt; and continue the rollback. By continuing the rollback, you can return your stack to a working state (the &lt;code&gt;UPDATE_ROLLBACK_COMPLETE&lt;/code&gt; state), and then try to update the stack again.&lt;/p&gt; &lt;p&gt;A stack goes into the &lt;code&gt;UPDATE_ROLLBACK_FAILED&lt;/code&gt; state when CloudFormation can&#39;t roll back all changes after a failed stack update. For example, you might have a stack that&#39;s rolling back to an old database instance that was deleted outside of CloudFormation. Because CloudFormation doesn&#39;t know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETContinueUpdateRollbackTest() throws ApiException {
        String stackName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String roleARN = null;
        List<String> resourcesToSkip = null;
        String clientRequestToken = null;
        Object response = api.gETContinueUpdateRollback(stackName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, roleARN, resourcesToSkip, clientRequestToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn&#39;t exist or an existing stack. If you create a change set for a stack that doesn&#39;t exist, the change set shows all of the resources that CloudFormation will create. If you create a change set for an existing stack, CloudFormation compares the stack&#39;s information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.&lt;/p&gt; &lt;p&gt;To create a change set for a stack that doesn&#39;t exist, for the &lt;code&gt;ChangeSetType&lt;/code&gt; parameter, specify &lt;code&gt;CREATE&lt;/code&gt;. To create a change set for an existing stack, specify &lt;code&gt;UPDATE&lt;/code&gt; for the &lt;code&gt;ChangeSetType&lt;/code&gt; parameter. To create a change set for an import operation, specify &lt;code&gt;IMPORT&lt;/code&gt; for the &lt;code&gt;ChangeSetType&lt;/code&gt; parameter. After the &lt;code&gt;CreateChangeSet&lt;/code&gt; call successfully completes, CloudFormation starts creating the change set. To check the status of the change set or to review it, use the &lt;a&gt;DescribeChangeSet&lt;/a&gt; action.&lt;/p&gt; &lt;p&gt;When you are satisfied with the changes the change set will make, execute the change set by using the &lt;a&gt;ExecuteChangeSet&lt;/a&gt; action. CloudFormation doesn&#39;t make changes until you execute the change set.&lt;/p&gt; &lt;p&gt;To create a change set for the entire stack hierarchy, set &lt;code&gt;IncludeNestedStacks&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETCreateChangeSetTest() throws ApiException {
        String stackName = null;
        String changeSetName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String templateBody = null;
        String templateURL = null;
        Boolean usePreviousTemplate = null;
        List<Parameter> parameters = null;
        List<Capability> capabilities = null;
        List<String> resourceTypes = null;
        String roleARN = null;
        GETCreateChangeSetRollbackConfigurationParameter rollbackConfiguration = null;
        List<String> notificationARNs = null;
        List<Tag> tags = null;
        String clientToken = null;
        String description = null;
        String changeSetType = null;
        List<ResourceToImport> resourcesToImport = null;
        Boolean includeNestedStacks = null;
        String onStackFailure = null;
        CreateChangeSetOutput response = api.gETCreateChangeSet(stackName, changeSetName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, templateBody, templateURL, usePreviousTemplate, parameters, capabilities, resourceTypes, roleARN, rollbackConfiguration, notificationARNs, tags, clientToken, description, changeSetType, resourcesToImport, includeNestedStacks, onStackFailure);
        // TODO: test validations
    }

    /**
     * Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack through the &lt;a&gt;DescribeStacks&lt;/a&gt; operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETCreateStackTest() throws ApiException {
        String stackName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String templateBody = null;
        String templateURL = null;
        List<Parameter> parameters = null;
        Boolean disableRollback = null;
        GETCreateChangeSetRollbackConfigurationParameter rollbackConfiguration = null;
        Integer timeoutInMinutes = null;
        List<String> notificationARNs = null;
        List<Capability> capabilities = null;
        List<String> resourceTypes = null;
        String roleARN = null;
        String onFailure = null;
        String stackPolicyBody = null;
        String stackPolicyURL = null;
        List<Tag> tags = null;
        String clientRequestToken = null;
        Boolean enableTerminationProtection = null;
        Boolean retainExceptOnCreate = null;
        CreateStackOutput response = api.gETCreateStack(stackName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, templateBody, templateURL, parameters, disableRollback, rollbackConfiguration, timeoutInMinutes, notificationARNs, capabilities, resourceTypes, roleARN, onFailure, stackPolicyBody, stackPolicyURL, tags, clientRequestToken, enableTerminationProtection, retainExceptOnCreate);
        // TODO: test validations
    }

    /**
     * Creates stack instances for the specified accounts, within the specified Amazon Web Services Regions. A stack instance refers to a stack in a specific account and Region. You must specify at least one value for either &lt;code&gt;Accounts&lt;/code&gt; or &lt;code&gt;DeploymentTargets&lt;/code&gt;, and you must specify at least one value for &lt;code&gt;Regions&lt;/code&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETCreateStackInstancesTest() throws ApiException {
        String stackSetName = null;
        List<String> regions = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<String> accounts = null;
        GETCreateStackInstancesDeploymentTargetsParameter deploymentTargets = null;
        List<Parameter> parameterOverrides = null;
        GETCreateStackInstancesOperationPreferencesParameter operationPreferences = null;
        String operationId = null;
        String callAs = null;
        CreateStackInstancesOutput response = api.gETCreateStackInstances(stackSetName, regions, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, accounts, deploymentTargets, parameterOverrides, operationPreferences, operationId, callAs);
        // TODO: test validations
    }

    /**
     * Creates a stack set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETCreateStackSetTest() throws ApiException {
        String stackSetName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String description = null;
        String templateBody = null;
        String templateURL = null;
        String stackId = null;
        List<Parameter> parameters = null;
        List<Capability> capabilities = null;
        List<Tag> tags = null;
        String administrationRoleARN = null;
        String executionRoleName = null;
        String permissionModel = null;
        GETCreateStackSetAutoDeploymentParameter autoDeployment = null;
        String callAs = null;
        String clientRequestToken = null;
        GETCreateStackSetManagedExecutionParameter managedExecution = null;
        CreateStackSetOutput response = api.gETCreateStackSet(stackSetName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, description, templateBody, templateURL, stackId, parameters, capabilities, tags, administrationRoleARN, executionRoleName, permissionModel, autoDeployment, callAs, clientRequestToken, managedExecution);
        // TODO: test validations
    }

    /**
     * Deactivates trusted access with Organizations. If trusted access is deactivated, the management account does not have permissions to create and manage service-managed StackSets for your organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDeactivateOrganizationsAccessTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.gETDeactivateOrganizationsAccess(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deactivates a public extension that was previously activated in this account and Region.&lt;/p&gt; &lt;p&gt;Once deactivated, an extension can&#39;t be used in any CloudFormation operation. This includes stack update operations where the stack template includes the extension, even if no updates are being made to the extension. In addition, deactivated extensions aren&#39;t automatically updated if a new version of the extension is released.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDeactivateTypeTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String typeName = null;
        String type = null;
        String arn = null;
        Object response = api.gETDeactivateType(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, typeName, type, arn);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.&lt;/p&gt; &lt;p&gt;If the call successfully completes, CloudFormation successfully deleted the change set.&lt;/p&gt; &lt;p&gt;If &lt;code&gt;IncludeNestedStacks&lt;/code&gt; specifies &lt;code&gt;True&lt;/code&gt; during the creation of the nested change set, then &lt;code&gt;DeleteChangeSet&lt;/code&gt; will delete all change sets that belong to the stacks hierarchy and will also delete all change sets for nested stacks with the status of &lt;code&gt;REVIEW_IN_PROGRESS&lt;/code&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDeleteChangeSetTest() throws ApiException {
        String changeSetName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String stackName = null;
        Object response = api.gETDeleteChangeSet(changeSetName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, stackName);
        // TODO: test validations
    }

    /**
     * Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks don&#39;t show up in the &lt;a&gt;DescribeStacks&lt;/a&gt; operation if the deletion has been completed successfully.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDeleteStackTest() throws ApiException {
        String stackName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<String> retainResources = null;
        String roleARN = null;
        String clientRequestToken = null;
        api.gETDeleteStack(stackName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, retainResources, roleARN, clientRequestToken);
        // TODO: test validations
    }

    /**
     * Deletes stack instances for the specified accounts, in the specified Amazon Web Services Regions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDeleteStackInstancesTest() throws ApiException {
        String stackSetName = null;
        List<String> regions = null;
        Boolean retainStacks = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<String> accounts = null;
        GETCreateStackInstancesDeploymentTargetsParameter deploymentTargets = null;
        GETCreateStackInstancesOperationPreferencesParameter operationPreferences = null;
        String operationId = null;
        String callAs = null;
        DeleteStackInstancesOutput response = api.gETDeleteStackInstances(stackSetName, regions, retainStacks, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, accounts, deploymentTargets, operationPreferences, operationId, callAs);
        // TODO: test validations
    }

    /**
     * Deletes a stack set. Before you can delete a stack set, all its member stack instances must be deleted. For more information about how to complete this, see &lt;a&gt;DeleteStackInstances&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDeleteStackSetTest() throws ApiException {
        String stackSetName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String callAs = null;
        Object response = api.gETDeleteStackSet(stackSetName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, callAs);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Marks an extension or extension version as &lt;code&gt;DEPRECATED&lt;/code&gt; in the CloudFormation registry, removing it from active use. Deprecated extensions or extension versions cannot be used in CloudFormation operations.&lt;/p&gt; &lt;p&gt;To deregister an entire extension, you must individually deregister all active versions of that extension. If an extension has only a single active version, deregistering that version results in the extension itself being deregistered and marked as deprecated in the registry.&lt;/p&gt; &lt;p&gt;You can&#39;t deregister the default version of an extension if there are other active version of that extension. If you do deregister the default version of an extension, the extension type itself is deregistered as well and marked as deprecated.&lt;/p&gt; &lt;p&gt;To view the deprecation status of an extension or extension version, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DescribeType.html\&quot;&gt;DescribeType&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDeregisterTypeTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String arn = null;
        String type = null;
        String typeName = null;
        String versionId = null;
        Object response = api.gETDeregisterType(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, arn, type, typeName, versionId);
        // TODO: test validations
    }

    /**
     * Retrieves your account&#39;s CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html\&quot;&gt;CloudFormation Quotas&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeAccountLimitsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        DescribeAccountLimitsOutput response = api.gETDescribeAccountLimits(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken);
        // TODO: test validations
    }

    /**
     * Returns the inputs for the change set and a list of changes that CloudFormation will make if you execute the change set. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html\&quot;&gt;Updating Stacks Using Change Sets&lt;/a&gt; in the CloudFormation User Guide.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeChangeSetTest() throws ApiException {
        String changeSetName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String stackName = null;
        String nextToken = null;
        DescribeChangeSetOutput response = api.gETDescribeChangeSet(changeSetName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, stackName, nextToken);
        // TODO: test validations
    }

    /**
     * Returns hook-related information for the change set and a list of changes that CloudFormation makes when you run the change set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeChangeSetHooksTest() throws ApiException {
        String changeSetName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String stackName = null;
        String nextToken = null;
        String logicalResourceId = null;
        DescribeChangeSetHooksOutput response = api.gETDescribeChangeSetHooks(changeSetName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, stackName, nextToken, logicalResourceId);
        // TODO: test validations
    }

    /**
     * Retrieves information about the account&#39;s &lt;code&gt;OrganizationAccess&lt;/code&gt; status. This API can be called either by the management account or the delegated administrator by using the &lt;code&gt;CallAs&lt;/code&gt; parameter. This API can also be called without the &lt;code&gt;CallAs&lt;/code&gt; parameter by the management account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeOrganizationsAccessTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String callAs = null;
        DescribeOrganizationsAccessOutput response = api.gETDescribeOrganizationsAccess(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, callAs);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns information about a CloudFormation extension publisher.&lt;/p&gt; &lt;p&gt;If you don&#39;t supply a &lt;code&gt;PublisherId&lt;/code&gt;, and you have registered as an extension publisher, &lt;code&gt;DescribePublisher&lt;/code&gt; returns information about your own publisher account.&lt;/p&gt; &lt;p&gt;For more information about registering as a publisher, see:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RegisterPublisher.html\&quot;&gt;RegisterPublisher&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html\&quot;&gt;Publishing extensions to make them available for public use&lt;/a&gt; in the &lt;i&gt;CloudFormation CLI User Guide&lt;/i&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribePublisherTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String publisherId = null;
        DescribePublisherOutput response = api.gETDescribePublisher(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, publisherId);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack&#39;s actual configuration differs, or has &lt;i&gt;drifted&lt;/i&gt;, from its expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information about stack and resource drift, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html\&quot;&gt;Detecting Unregulated Configuration Changes to Stacks and Resources&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Use &lt;a&gt;DetectStackDrift&lt;/a&gt; to initiate a stack drift detection operation. &lt;code&gt;DetectStackDrift&lt;/code&gt; returns a &lt;code&gt;StackDriftDetectionId&lt;/code&gt; you can use to monitor the progress of the operation using &lt;code&gt;DescribeStackDriftDetectionStatus&lt;/code&gt;. Once the drift detection operation has completed, use &lt;a&gt;DescribeStackResourceDrifts&lt;/a&gt; to return drift information about the stack and its resources.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeStackDriftDetectionStatusTest() throws ApiException {
        String stackDriftDetectionId = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeStackDriftDetectionStatusOutput response = api.gETDescribeStackDriftDetectionStatus(stackDriftDetectionId, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack&#39;s event history, go to &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html\&quot;&gt;Stacks&lt;/a&gt; in the CloudFormation User Guide.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeStackEventsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String stackName = null;
        String nextToken = null;
        DescribeStackEventsOutput response = api.gETDescribeStackEvents(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, stackName, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns the stack instance that&#39;s associated with the specified StackSet, Amazon Web Services account, and Amazon Web Services Region.&lt;/p&gt; &lt;p&gt;For a list of stack instances that are associated with a specific StackSet, use &lt;a&gt;ListStackInstances&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeStackInstanceTest() throws ApiException {
        String stackSetName = null;
        String stackInstanceAccount = null;
        String stackInstanceRegion = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String callAs = null;
        DescribeStackInstanceOutput response = api.gETDescribeStackInstance(stackSetName, stackInstanceAccount, stackInstanceRegion, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, callAs);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns a description of the specified resource in the specified stack.&lt;/p&gt; &lt;p&gt;For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeStackResourceTest() throws ApiException {
        String stackName = null;
        String logicalResourceId = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeStackResourceOutput response = api.gETDescribeStackResource(stackName, logicalResourceId, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where CloudFormation detects configuration drift.&lt;/p&gt; &lt;p&gt;For a given stack, there will be one &lt;code&gt;StackResourceDrift&lt;/code&gt; for each stack resource that has been checked for drift. Resources that haven&#39;t yet been checked for drift aren&#39;t included. Resources that don&#39;t currently support drift detection aren&#39;t checked, and so not included. For a list of resources that support drift detection, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html\&quot;&gt;Resources that Support Drift Detection&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Use &lt;a&gt;DetectStackResourceDrift&lt;/a&gt; to detect drift on individual resources, or &lt;a&gt;DetectStackDrift&lt;/a&gt; to detect drift on all supported resources for a given stack.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeStackResourceDriftsTest() throws ApiException {
        String stackName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<StackResourceDriftStatus> stackResourceDriftStatusFilters = null;
        String nextToken = null;
        Integer maxResults = null;
        DescribeStackResourceDriftsOutput response = api.gETDescribeStackResourceDrifts(stackName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, stackResourceDriftStatusFilters, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns Amazon Web Services resource descriptions for running and deleted stacks. If &lt;code&gt;StackName&lt;/code&gt; is specified, all the associated resources that are part of the stack are returned. If &lt;code&gt;PhysicalResourceId&lt;/code&gt; is specified, the associated resources of the stack that the resource belongs to are returned.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Only the first 100 resources will be returned. If your stack has more resources than this, you should use &lt;code&gt;ListStackResources&lt;/code&gt; instead.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;For deleted stacks, &lt;code&gt;DescribeStackResources&lt;/code&gt; returns resource information for up to 90 days after the stack has been deleted.&lt;/p&gt; &lt;p&gt;You must specify either &lt;code&gt;StackName&lt;/code&gt; or &lt;code&gt;PhysicalResourceId&lt;/code&gt;, but not both. In addition, you can specify &lt;code&gt;LogicalResourceId&lt;/code&gt; to filter the returned result. For more information about resources, the &lt;code&gt;LogicalResourceId&lt;/code&gt; and &lt;code&gt;PhysicalResourceId&lt;/code&gt;, go to the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/\&quot;&gt;CloudFormation User Guide&lt;/a&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;A &lt;code&gt;ValidationError&lt;/code&gt; is returned if you specify both &lt;code&gt;StackName&lt;/code&gt; and &lt;code&gt;PhysicalResourceId&lt;/code&gt; in the same request.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeStackResourcesTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String stackName = null;
        String logicalResourceId = null;
        String physicalResourceId = null;
        DescribeStackResourcesOutput response = api.gETDescribeStackResources(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, stackName, logicalResourceId, physicalResourceId);
        // TODO: test validations
    }

    /**
     * Returns the description of the specified StackSet.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeStackSetTest() throws ApiException {
        String stackSetName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String callAs = null;
        DescribeStackSetOutput response = api.gETDescribeStackSet(stackSetName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, callAs);
        // TODO: test validations
    }

    /**
     * Returns the description of the specified StackSet operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeStackSetOperationTest() throws ApiException {
        String stackSetName = null;
        String operationId = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String callAs = null;
        DescribeStackSetOperationOutput response = api.gETDescribeStackSetOperation(stackSetName, operationId, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, callAs);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.&lt;/p&gt; &lt;note&gt; &lt;p&gt;If the stack doesn&#39;t exist, an &lt;code&gt;ValidationError&lt;/code&gt; is returned.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeStacksTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String stackName = null;
        String nextToken = null;
        DescribeStacksOutput response = api.gETDescribeStacks(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, stackName, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns detailed information about an extension that has been registered.&lt;/p&gt; &lt;p&gt;If you specify a &lt;code&gt;VersionId&lt;/code&gt;, &lt;code&gt;DescribeType&lt;/code&gt; returns information about that specific extension version. Otherwise, it returns information about the default extension version.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeTypeTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String type = null;
        String typeName = null;
        String arn = null;
        String versionId = null;
        String publisherId = null;
        String publicVersionNumber = null;
        DescribeTypeOutput response = api.gETDescribeType(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, type, typeName, arn, versionId, publisherId, publicVersionNumber);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns information about an extension&#39;s registration, including its current status and type and version identifiers.&lt;/p&gt; &lt;p&gt;When you initiate a registration request using &lt;a&gt;RegisterType&lt;/a&gt;, you can then use &lt;a&gt;DescribeTypeRegistration&lt;/a&gt; to monitor the progress of that registration request.&lt;/p&gt; &lt;p&gt;Once the registration request has completed, use &lt;a&gt;DescribeType&lt;/a&gt; to return detailed information about an extension.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDescribeTypeRegistrationTest() throws ApiException {
        String registrationToken = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeTypeRegistrationOutput response = api.gETDescribeTypeRegistration(registrationToken, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Detects whether a stack&#39;s actual configuration differs, or has &lt;i&gt;drifted&lt;/i&gt;, from its expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html\&quot;&gt;Detecting Unregulated Configuration Changes to Stacks and Resources&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;DetectStackDrift&lt;/code&gt; to detect drift on all supported resources for a given stack, or &lt;a&gt;DetectStackResourceDrift&lt;/a&gt; to detect drift on individual resources.&lt;/p&gt; &lt;p&gt;For a list of stack resources that currently support drift detection, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html\&quot;&gt;Resources that Support Drift Detection&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;code&gt;DetectStackDrift&lt;/code&gt; can take up to several minutes, depending on the number of resources contained within the stack. Use &lt;a&gt;DescribeStackDriftDetectionStatus&lt;/a&gt; to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use &lt;a&gt;DescribeStackResourceDrifts&lt;/a&gt; to return drift information about the stack and its resources.&lt;/p&gt; &lt;p&gt;When detecting drift on a stack, CloudFormation doesn&#39;t detect drift on any nested stacks belonging to that stack. Perform &lt;code&gt;DetectStackDrift&lt;/code&gt; directly on the nested stack itself.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDetectStackDriftTest() throws ApiException {
        String stackName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<String> logicalResourceIds = null;
        DetectStackDriftOutput response = api.gETDetectStackDrift(stackName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, logicalResourceIds);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns information about whether a resource&#39;s actual configuration differs, or has &lt;i&gt;drifted&lt;/i&gt;, from its expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html\&quot;&gt;Detecting Unregulated Configuration Changes to Stacks and Resources&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;DetectStackResourceDrift&lt;/code&gt; to detect drift on individual resources, or &lt;a&gt;DetectStackDrift&lt;/a&gt; to detect drift on all resources in a given stack that support drift detection.&lt;/p&gt; &lt;p&gt;Resources that don&#39;t currently support drift detection can&#39;t be checked. For a list of resources that support drift detection, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html\&quot;&gt;Resources that Support Drift Detection&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDetectStackResourceDriftTest() throws ApiException {
        String stackName = null;
        String logicalResourceId = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DetectStackResourceDriftOutput response = api.gETDetectStackResourceDrift(stackName, logicalResourceId, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html\&quot;&gt;How CloudFormation performs drift detection on a stack set&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;code&gt;DetectStackSetDrift&lt;/code&gt; returns the &lt;code&gt;OperationId&lt;/code&gt; of the stack set drift detection operation. Use this operation id with &lt;a&gt;DescribeStackSetOperation&lt;/a&gt; to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, in addition to the number of resources included in each stack.&lt;/p&gt; &lt;p&gt;Once the operation has completed, use the following actions to return drift information:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Use &lt;a&gt;DescribeStackSet&lt;/a&gt; to return detailed information about the stack set, including detailed information about the last &lt;i&gt;completed&lt;/i&gt; drift operation performed on the stack set. (Information about drift operations that are in progress isn&#39;t included.)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use &lt;a&gt;ListStackInstances&lt;/a&gt; to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use &lt;a&gt;DescribeStackInstance&lt;/a&gt; to return detailed information about a specific stack instance, including its drift status and last drift time checked.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information about performing a drift detection operation on a stack set, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html\&quot;&gt;Detecting unmanaged changes in stack sets&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;You can only run a single drift detection operation on a given stack set at one time.&lt;/p&gt; &lt;p&gt;To stop a drift detection stack set operation, use &lt;a&gt;StopStackSetOperation&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETDetectStackSetDriftTest() throws ApiException {
        String stackSetName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GETCreateStackInstancesOperationPreferencesParameter operationPreferences = null;
        String operationId = null;
        String callAs = null;
        DetectStackSetDriftOutput response = api.gETDetectStackSetDrift(stackSetName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, operationPreferences, operationId, callAs);
        // TODO: test validations
    }

    /**
     * Returns the estimated monthly cost of a template. The return value is an Amazon Web Services Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETEstimateTemplateCostTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String templateBody = null;
        String templateURL = null;
        List<Parameter> parameters = null;
        EstimateTemplateCostOutput response = api.gETEstimateTemplateCost(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, templateBody, templateURL, parameters);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, CloudFormation starts updating the stack. Use the &lt;a&gt;DescribeStacks&lt;/a&gt; action to view the status of the update.&lt;/p&gt; &lt;p&gt;When you execute a change set, CloudFormation deletes all other change sets associated with the stack because they aren&#39;t valid for the updated stack.&lt;/p&gt; &lt;p&gt;If a stack policy is associated with the stack, CloudFormation enforces the policy during the update. You can&#39;t specify a temporary stack policy that overrides the current policy.&lt;/p&gt; &lt;p&gt;To create a change set for the entire stack hierarchy, &lt;code&gt;IncludeNestedStacks&lt;/code&gt; must have been set to &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETExecuteChangeSetTest() throws ApiException {
        String changeSetName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String stackName = null;
        String clientRequestToken = null;
        Boolean disableRollback = null;
        Boolean retainExceptOnCreate = null;
        Object response = api.gETExecuteChangeSet(changeSetName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, stackName, clientRequestToken, disableRollback, retainExceptOnCreate);
        // TODO: test validations
    }

    /**
     * Returns the stack policy for a specified stack. If a stack doesn&#39;t have a policy, a null value is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETGetStackPolicyTest() throws ApiException {
        String stackName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetStackPolicyOutput response = api.gETGetStackPolicy(stackName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns the template body for a specified stack. You can get the template for running or deleted stacks.&lt;/p&gt; &lt;p&gt;For deleted stacks, &lt;code&gt;GetTemplate&lt;/code&gt; returns the template for up to 90 days after the stack has been deleted.&lt;/p&gt; &lt;note&gt; &lt;p&gt;If the template doesn&#39;t exist, a &lt;code&gt;ValidationError&lt;/code&gt; is returned.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETGetTemplateTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String stackName = null;
        String changeSetName = null;
        String templateStage = null;
        GetTemplateOutput response = api.gETGetTemplate(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, stackName, changeSetName, templateStage);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns information about a new or existing template. The &lt;code&gt;GetTemplateSummary&lt;/code&gt; action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.&lt;/p&gt; &lt;p&gt;You can use the &lt;code&gt;GetTemplateSummary&lt;/code&gt; action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.&lt;/p&gt; &lt;p&gt;For deleted stacks, &lt;code&gt;GetTemplateSummary&lt;/code&gt; returns the template information for up to 90 days after the stack has been deleted. If the template doesn&#39;t exist, a &lt;code&gt;ValidationError&lt;/code&gt; is returned.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETGetTemplateSummaryTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String templateBody = null;
        String templateURL = null;
        String stackName = null;
        String stackSetName = null;
        String callAs = null;
        GETGetTemplateSummaryTemplateSummaryConfigParameter templateSummaryConfig = null;
        GetTemplateSummaryOutput response = api.gETGetTemplateSummary(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, templateBody, templateURL, stackName, stackSetName, callAs, templateSummaryConfig);
        // TODO: test validations
    }

    /**
     * Import existing stacks into a new stack sets. Use the stack import operation to import up to 10 stacks into a new stack set in the same account as the source stack or in a different administrator account and Region, by specifying the stack ID of the stack you intend to import.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETImportStacksToStackSetTest() throws ApiException {
        String stackSetName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<String> stackIds = null;
        String stackIdsUrl = null;
        List<String> organizationalUnitIds = null;
        GETCreateStackInstancesOperationPreferencesParameter operationPreferences = null;
        String operationId = null;
        String callAs = null;
        ImportStacksToStackSetOutput response = api.gETImportStacksToStackSet(stackSetName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, stackIds, stackIdsUrl, organizationalUnitIds, operationPreferences, operationId, callAs);
        // TODO: test validations
    }

    /**
     * Returns the ID and status of each active change set for a stack. For example, CloudFormation lists change sets that are in the &lt;code&gt;CREATE_IN_PROGRESS&lt;/code&gt; or &lt;code&gt;CREATE_PENDING&lt;/code&gt; state.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListChangeSetsTest() throws ApiException {
        String stackName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        ListChangeSetsOutput response = api.gETListChangeSets(stackName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Lists all exported output values in the account and Region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html\&quot;&gt; Fn::ImportValue&lt;/a&gt; function.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html\&quot;&gt; CloudFormation export stack output values&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListExportsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        ListExportsOutput response = api.gETListExports(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see &lt;a&gt;ListExports&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For more information about importing an exported output value, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html\&quot;&gt;Fn::ImportValue&lt;/a&gt; function.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListImportsTest() throws ApiException {
        String exportName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        ListImportsOutput response = api.gETListImports(exportName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns drift information for resources in a stack instance.&lt;/p&gt; &lt;note&gt; &lt;p&gt; &lt;code&gt;ListStackInstanceResourceDrifts&lt;/code&gt; returns drift information for the most recent drift detection operation. If an operation is in progress, it may only return partial results.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListStackInstanceResourceDriftsTest() throws ApiException {
        String stackSetName = null;
        String stackInstanceAccount = null;
        String stackInstanceRegion = null;
        String operationId = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        List<StackResourceDriftStatus> stackInstanceResourceDriftStatuses = null;
        String callAs = null;
        ListStackInstanceResourceDriftsOutput response = api.gETListStackInstanceResourceDrifts(stackSetName, stackInstanceAccount, stackInstanceRegion, operationId, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults, stackInstanceResourceDriftStatuses, callAs);
        // TODO: test validations
    }

    /**
     * Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific Amazon Web Services account name or Region, or that have a specific status.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListStackInstancesTest() throws ApiException {
        String stackSetName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        List<StackInstanceFilter> filters = null;
        String stackInstanceAccount = null;
        String stackInstanceRegion = null;
        String callAs = null;
        ListStackInstancesOutput response = api.gETListStackInstances(stackSetName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults, filters, stackInstanceAccount, stackInstanceRegion, callAs);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns descriptions of all resources of the specified stack.&lt;/p&gt; &lt;p&gt;For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListStackResourcesTest() throws ApiException {
        String stackName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        ListStackResourcesOutput response = api.gETListStackResources(stackName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken);
        // TODO: test validations
    }

    /**
     * Returns summary information about the results of a stack set operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListStackSetOperationResultsTest() throws ApiException {
        String stackSetName = null;
        String operationId = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        String callAs = null;
        List<OperationResultFilter> filters = null;
        ListStackSetOperationResultsOutput response = api.gETListStackSetOperationResults(stackSetName, operationId, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults, callAs, filters);
        // TODO: test validations
    }

    /**
     * Returns summary information about operations performed on a stack set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListStackSetOperationsTest() throws ApiException {
        String stackSetName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        String callAs = null;
        ListStackSetOperationsOutput response = api.gETListStackSetOperations(stackSetName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults, callAs);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns summary information about stack sets that are associated with the user.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;[Self-managed permissions] If you set the &lt;code&gt;CallAs&lt;/code&gt; parameter to &lt;code&gt;SELF&lt;/code&gt; while signed in to your Amazon Web Services account, &lt;code&gt;ListStackSets&lt;/code&gt; returns all self-managed stack sets in your Amazon Web Services account.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Service-managed permissions] If you set the &lt;code&gt;CallAs&lt;/code&gt; parameter to &lt;code&gt;SELF&lt;/code&gt; while signed in to the organization&#39;s management account, &lt;code&gt;ListStackSets&lt;/code&gt; returns all stack sets in the management account.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Service-managed permissions] If you set the &lt;code&gt;CallAs&lt;/code&gt; parameter to &lt;code&gt;DELEGATED_ADMIN&lt;/code&gt; while signed in to your member account, &lt;code&gt;ListStackSets&lt;/code&gt; returns all stack sets with service-managed permissions in the management account.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListStackSetsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        String status = null;
        String callAs = null;
        ListStackSetsOutput response = api.gETListStackSets(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults, status, callAs);
        // TODO: test validations
    }

    /**
     * Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListStacksTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        List<StackStatus> stackStatusFilter = null;
        ListStacksOutput response = api.gETListStacks(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, stackStatusFilter);
        // TODO: test validations
    }

    /**
     * Returns a list of registration tokens for the specified extension(s).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListTypeRegistrationsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String type = null;
        String typeName = null;
        String typeArn = null;
        String registrationStatusFilter = null;
        Integer maxResults = null;
        String nextToken = null;
        ListTypeRegistrationsOutput response = api.gETListTypeRegistrations(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, type, typeName, typeArn, registrationStatusFilter, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns summary information about the versions of an extension.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListTypeVersionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String type = null;
        String typeName = null;
        String arn = null;
        Integer maxResults = null;
        String nextToken = null;
        String deprecatedStatus = null;
        String publisherId = null;
        ListTypeVersionsOutput response = api.gETListTypeVersions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, type, typeName, arn, maxResults, nextToken, deprecatedStatus, publisherId);
        // TODO: test validations
    }

    /**
     * Returns summary information about extension that have been registered with CloudFormation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETListTypesTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String visibility = null;
        String provisioningType = null;
        String deprecatedStatus = null;
        String type = null;
        GETListTypesFiltersParameter filters = null;
        Integer maxResults = null;
        String nextToken = null;
        ListTypesOutput response = api.gETListTypes(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, visibility, provisioningType, deprecatedStatus, type, filters, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Publishes the specified extension to the CloudFormation registry as a public extension in this Region. Public extensions are available for use by all CloudFormation users. For more information about publishing extensions, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html\&quot;&gt;Publishing extensions to make them available for public use&lt;/a&gt; in the &lt;i&gt;CloudFormation CLI User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;To publish an extension, you must be registered as a publisher with CloudFormation. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RegisterPublisher.html\&quot;&gt;RegisterPublisher&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETPublishTypeTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String type = null;
        String arn = null;
        String typeName = null;
        String publicVersionNumber = null;
        PublishTypeOutput response = api.gETPublishType(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, type, arn, typeName, publicVersionNumber);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Reports progress of a resource handler to CloudFormation.&lt;/p&gt; &lt;p&gt;Reserved for use by the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html\&quot;&gt;CloudFormation CLI&lt;/a&gt;. Don&#39;t use this API in your code.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETRecordHandlerProgressTest() throws ApiException {
        String bearerToken = null;
        String operationStatus = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String currentOperationStatus = null;
        String statusMessage = null;
        String errorCode = null;
        String resourceModel = null;
        String clientRequestToken = null;
        Object response = api.gETRecordHandlerProgress(bearerToken, operationStatus, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, currentOperationStatus, statusMessage, errorCode, resourceModel, clientRequestToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Registers your account as a publisher of public extensions in the CloudFormation registry. Public extensions are available for use by all CloudFormation users. This publisher ID applies to your account in all Amazon Web Services Regions.&lt;/p&gt; &lt;p&gt;For information about requirements for registering as a public extension publisher, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html#publish-extension-prereqs\&quot;&gt;Registering your account to publish CloudFormation extensions&lt;/a&gt; in the &lt;i&gt;CloudFormation CLI User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p/&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETRegisterPublisherTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Boolean acceptTermsAndConditions = null;
        String connectionArn = null;
        RegisterPublisherOutput response = api.gETRegisterPublisher(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, acceptTermsAndConditions, connectionArn);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Registers an extension with the CloudFormation service. Registering an extension makes it available for use in CloudFormation templates in your Amazon Web Services account, and includes:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Validating the extension schema.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Determining which handlers, if any, have been specified for the extension.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Making the extension available for use in your account.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information about how to develop extensions and ready them for registration, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-types.html\&quot;&gt;Creating Resource Providers&lt;/a&gt; in the &lt;i&gt;CloudFormation CLI User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;You can have a maximum of 50 resource extension versions registered at a time. This maximum is per account and per Region. Use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DeregisterType.html\&quot;&gt;DeregisterType&lt;/a&gt; to deregister specific extension versions if necessary.&lt;/p&gt; &lt;p&gt;Once you have initiated a registration request using &lt;a&gt;RegisterType&lt;/a&gt;, you can use &lt;a&gt;DescribeTypeRegistration&lt;/a&gt; to monitor the progress of the registration request.&lt;/p&gt; &lt;p&gt;Once you have registered a private extension in your account and Region, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_SetTypeConfiguration.html\&quot;&gt;SetTypeConfiguration&lt;/a&gt; to specify configuration properties for the extension. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-register.html#registry-set-configuration\&quot;&gt;Configuring extensions at the account level&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETRegisterTypeTest() throws ApiException {
        String typeName = null;
        String schemaHandlerPackage = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String type = null;
        GETActivateTypeLoggingConfigParameter loggingConfig = null;
        String executionRoleArn = null;
        String clientRequestToken = null;
        RegisterTypeOutput response = api.gETRegisterType(typeName, schemaHandlerPackage, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, type, loggingConfig, executionRoleArn, clientRequestToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;When specifying &lt;code&gt;RollbackStack&lt;/code&gt;, you preserve the state of previously provisioned resources when an operation fails. You can check the status of the stack through the &lt;a&gt;DescribeStacks&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;Rolls back the specified stack to the last known stable state from &lt;code&gt;CREATE_FAILED&lt;/code&gt; or &lt;code&gt;UPDATE_FAILED&lt;/code&gt; stack statuses.&lt;/p&gt; &lt;p&gt;This operation will delete a stack if it doesn&#39;t contain a last known stable state. A last known stable state includes any status in a &lt;code&gt;*_COMPLETE&lt;/code&gt;. This includes the following stack statuses.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;CREATE_COMPLETE&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;UPDATE_COMPLETE&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;UPDATE_ROLLBACK_COMPLETE&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;IMPORT_COMPLETE&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;IMPORT_ROLLBACK_COMPLETE&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETRollbackStackTest() throws ApiException {
        String stackName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String roleARN = null;
        String clientRequestToken = null;
        Boolean retainExceptOnCreate = null;
        RollbackStackOutput response = api.gETRollbackStack(stackName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, roleARN, clientRequestToken, retainExceptOnCreate);
        // TODO: test validations
    }

    /**
     * Sets a stack policy for a specified stack.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETSetStackPolicyTest() throws ApiException {
        String stackName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String stackPolicyBody = null;
        String stackPolicyURL = null;
        api.gETSetStackPolicy(stackName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, stackPolicyBody, stackPolicyURL);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Specifies the configuration data for a registered CloudFormation extension, in the given account and Region.&lt;/p&gt; &lt;p&gt;To view the current configuration data for an extension, refer to the &lt;code&gt;ConfigurationSchema&lt;/code&gt; element of &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DescribeType.html\&quot;&gt;DescribeType&lt;/a&gt;. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-register.html#registry-set-configuration\&quot;&gt;Configuring extensions at the account level&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.&lt;/p&gt; &lt;important&gt; &lt;p&gt;It&#39;s strongly recommended that you use dynamic references to restrict sensitive configuration definitions, such as third-party credentials. For more details on dynamic references, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/\&quot;&gt;Using dynamic references to specify template values&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETSetTypeConfigurationTest() throws ApiException {
        String _configuration = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String typeArn = null;
        String configurationAlias = null;
        String typeName = null;
        String type = null;
        SetTypeConfigurationOutput response = api.gETSetTypeConfiguration(_configuration, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, typeArn, configurationAlias, typeName, type);
        // TODO: test validations
    }

    /**
     * Specify the default version of an extension. The default version of an extension will be used in CloudFormation operations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETSetTypeDefaultVersionTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String arn = null;
        String type = null;
        String typeName = null;
        String versionId = null;
        Object response = api.gETSetTypeDefaultVersion(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, arn, type, typeName, versionId);
        // TODO: test validations
    }

    /**
     * Sends a signal to the specified resource with a success or failure status. You can use the &lt;code&gt;SignalResource&lt;/code&gt; operation in conjunction with a creation policy or update policy. CloudFormation doesn&#39;t proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The &lt;code&gt;SignalResource&lt;/code&gt; operation is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETSignalResourceTest() throws ApiException {
        String stackName = null;
        String logicalResourceId = null;
        String uniqueId = null;
        String status = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.gETSignalResource(stackName, logicalResourceId, uniqueId, status, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Stops an in-progress operation on a stack set and its associated stack instances. StackSets will cancel all the unstarted stack instance deployments and wait for those are in-progress to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETStopStackSetOperationTest() throws ApiException {
        String stackSetName = null;
        String operationId = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String callAs = null;
        Object response = api.gETStopStackSetOperation(stackSetName, operationId, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, callAs);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Tests a registered extension to make sure it meets all necessary requirements for being published in the CloudFormation registry.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;For resource types, this includes passing all contracts tests defined for the type.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For modules, this includes determining if the module&#39;s model meets all necessary requirements.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html#publish-extension-testing\&quot;&gt;Testing your public extension prior to publishing&lt;/a&gt; in the &lt;i&gt;CloudFormation CLI User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;If you don&#39;t specify a version, CloudFormation uses the default version of the extension in your account and Region for testing.&lt;/p&gt; &lt;p&gt;To perform testing, CloudFormation assumes the execution role specified when the type was registered. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RegisterType.html\&quot;&gt;RegisterType&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Once you&#39;ve initiated testing on an extension using &lt;code&gt;TestType&lt;/code&gt;, you can pass the returned &lt;code&gt;TypeVersionArn&lt;/code&gt; into &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DescribeType.html\&quot;&gt;DescribeType&lt;/a&gt; to monitor the current test status and test status description for the extension.&lt;/p&gt; &lt;p&gt;An extension must have a test status of &lt;code&gt;PASSED&lt;/code&gt; before it can be published. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-publish.html\&quot;&gt;Publishing extensions to make them available for public use&lt;/a&gt; in the &lt;i&gt;CloudFormation CLI User Guide&lt;/i&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETTestTypeTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String arn = null;
        String type = null;
        String typeName = null;
        String versionId = null;
        String logDeliveryBucket = null;
        TestTypeOutput response = api.gETTestType(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, arn, type, typeName, versionId, logDeliveryBucket);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack through the &lt;a&gt;DescribeStacks&lt;/a&gt; action.&lt;/p&gt; &lt;p&gt;To get a copy of the template for an existing stack, you can use the &lt;a&gt;GetTemplate&lt;/a&gt; action.&lt;/p&gt; &lt;p&gt;For more information about creating an update template, updating a stack, and monitoring the progress of the update, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html\&quot;&gt;Updating a Stack&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETUpdateStackTest() throws ApiException {
        String stackName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String templateBody = null;
        String templateURL = null;
        Boolean usePreviousTemplate = null;
        String stackPolicyDuringUpdateBody = null;
        String stackPolicyDuringUpdateURL = null;
        List<Parameter> parameters = null;
        List<Capability> capabilities = null;
        List<String> resourceTypes = null;
        String roleARN = null;
        GETCreateChangeSetRollbackConfigurationParameter rollbackConfiguration = null;
        String stackPolicyBody = null;
        String stackPolicyURL = null;
        List<String> notificationARNs = null;
        List<Tag> tags = null;
        Boolean disableRollback = null;
        String clientRequestToken = null;
        Boolean retainExceptOnCreate = null;
        UpdateStackOutput response = api.gETUpdateStack(stackName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, templateBody, templateURL, usePreviousTemplate, stackPolicyDuringUpdateBody, stackPolicyDuringUpdateURL, parameters, capabilities, resourceTypes, roleARN, rollbackConfiguration, stackPolicyBody, stackPolicyURL, notificationARNs, tags, disableRollback, clientRequestToken, retainExceptOnCreate);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates the parameter values for stack instances for the specified accounts, within the specified Amazon Web Services Regions. A stack instance refers to a stack in a specific account and Region.&lt;/p&gt; &lt;p&gt;You can only update stack instances in Amazon Web Services Regions and accounts where they already exist; to create additional stack instances, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html\&quot;&gt;CreateStackInstances&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;During stack set updates, any parameters overridden for a stack instance aren&#39;t updated, but retain their overridden value.&lt;/p&gt; &lt;p&gt;You can only update the parameter &lt;i&gt;values&lt;/i&gt; that are specified in the stack set; to add or delete a parameter itself, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html\&quot;&gt;UpdateStackSet&lt;/a&gt; to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html\&quot;&gt;UpdateStackSet&lt;/a&gt; to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using &lt;code&gt;UpdateStackInstances&lt;/code&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETUpdateStackInstancesTest() throws ApiException {
        String stackSetName = null;
        List<String> regions = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<String> accounts = null;
        GETCreateStackInstancesDeploymentTargetsParameter deploymentTargets = null;
        List<Parameter> parameterOverrides = null;
        GETCreateStackInstancesOperationPreferencesParameter operationPreferences = null;
        String operationId = null;
        String callAs = null;
        UpdateStackInstancesOutput response = api.gETUpdateStackInstances(stackSetName, regions, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, accounts, deploymentTargets, parameterOverrides, operationPreferences, operationId, callAs);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates the stack set, and associated stack instances in the specified accounts and Amazon Web Services Regions.&lt;/p&gt; &lt;p&gt;Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent &lt;a&gt;CreateStackInstances&lt;/a&gt; calls on the specified stack set use the updated stack set.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETUpdateStackSetTest() throws ApiException {
        String stackSetName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String description = null;
        String templateBody = null;
        String templateURL = null;
        Boolean usePreviousTemplate = null;
        List<Parameter> parameters = null;
        List<Capability> capabilities = null;
        List<Tag> tags = null;
        GETCreateStackInstancesOperationPreferencesParameter operationPreferences = null;
        String administrationRoleARN = null;
        String executionRoleName = null;
        GETCreateStackInstancesDeploymentTargetsParameter deploymentTargets = null;
        String permissionModel = null;
        GETCreateStackSetAutoDeploymentParameter autoDeployment = null;
        String operationId = null;
        List<String> accounts = null;
        List<String> regions = null;
        String callAs = null;
        GETCreateStackSetManagedExecutionParameter managedExecution = null;
        UpdateStackSetOutput response = api.gETUpdateStackSet(stackSetName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, description, templateBody, templateURL, usePreviousTemplate, parameters, capabilities, tags, operationPreferences, administrationRoleARN, executionRoleName, deploymentTargets, permissionModel, autoDeployment, operationId, accounts, regions, callAs, managedExecution);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html\&quot;&gt;Protecting a Stack From Being Deleted&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html\&quot;&gt;nested stacks&lt;/a&gt;, termination protection is set on the root stack and can&#39;t be changed directly on the nested stack.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETUpdateTerminationProtectionTest() throws ApiException {
        Boolean enableTerminationProtection = null;
        String stackName = null;
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateTerminationProtectionOutput response = api.gETUpdateTerminationProtection(enableTerminationProtection, stackName, action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Validates a specified template. CloudFormation first checks if the template is valid JSON. If it isn&#39;t, CloudFormation checks if the template is valid YAML. If both these checks fail, CloudFormation returns a template validation error.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gETValidateTemplateTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String templateBody = null;
        String templateURL = null;
        ValidateTemplateOutput response = api.gETValidateTemplate(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, templateBody, templateURL);
        // TODO: test validations
    }

    /**
     * Activate trusted access with Organizations. With trusted access between StackSets and Organizations activated, the management account has permissions to create and manage StackSets for your organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTActivateOrganizationsAccessTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object body = null;
        Object response = api.pOSTActivateOrganizationsAccess(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, body);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Activates a public third-party extension, making it available for use in stack templates. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-public.html\&quot;&gt;Using public extensions&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;Once you have activated a public third-party extension in your account and Region, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_SetTypeConfiguration.html\&quot;&gt;SetTypeConfiguration&lt;/a&gt; to specify configuration properties for the extension. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-register.html#registry-set-configuration\&quot;&gt;Configuring extensions at the account level&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTActivateTypeTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ActivateTypeInput activateTypeInput = null;
        ActivateTypeOutput response = api.pOSTActivateType(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, activateTypeInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns configuration data for the specified CloudFormation extensions, from the CloudFormation registry for the account and Region.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-register.html#registry-set-configuration\&quot;&gt;Configuring extensions at the account level&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTBatchDescribeTypeConfigurationsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        BatchDescribeTypeConfigurationsInput batchDescribeTypeConfigurationsInput = null;
        BatchDescribeTypeConfigurationsOutput response = api.pOSTBatchDescribeTypeConfigurations(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, batchDescribeTypeConfigurationsInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Cancels an update on the specified stack. If the call completes successfully, the stack rolls back the update and reverts to the previous stack configuration.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You can cancel only stacks that are in the &lt;code&gt;UPDATE_IN_PROGRESS&lt;/code&gt; state.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTCancelUpdateStackTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CancelUpdateStackInput cancelUpdateStackInput = null;
        api.pOSTCancelUpdateStack(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, cancelUpdateStackInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;For a specified stack that&#39;s in the &lt;code&gt;UPDATE_ROLLBACK_FAILED&lt;/code&gt; state, continues rolling it back to the &lt;code&gt;UPDATE_ROLLBACK_COMPLETE&lt;/code&gt; state. Depending on the cause of the failure, you can manually &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed\&quot;&gt; fix the error&lt;/a&gt; and continue the rollback. By continuing the rollback, you can return your stack to a working state (the &lt;code&gt;UPDATE_ROLLBACK_COMPLETE&lt;/code&gt; state), and then try to update the stack again.&lt;/p&gt; &lt;p&gt;A stack goes into the &lt;code&gt;UPDATE_ROLLBACK_FAILED&lt;/code&gt; state when CloudFormation can&#39;t roll back all changes after a failed stack update. For example, you might have a stack that&#39;s rolling back to an old database instance that was deleted outside of CloudFormation. Because CloudFormation doesn&#39;t know the database was deleted, it assumes that the database instance still exists and attempts to roll back to it, causing the update rollback to fail.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTContinueUpdateRollbackTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ContinueUpdateRollbackInput continueUpdateRollbackInput = null;
        Object response = api.pOSTContinueUpdateRollback(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, continueUpdateRollbackInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates a list of changes that will be applied to a stack so that you can review the changes before executing them. You can create a change set for a stack that doesn&#39;t exist or an existing stack. If you create a change set for a stack that doesn&#39;t exist, the change set shows all of the resources that CloudFormation will create. If you create a change set for an existing stack, CloudFormation compares the stack&#39;s information with the information that you submit in the change set and lists the differences. Use change sets to understand which resources CloudFormation will create or change, and how it will change resources in an existing stack, before you create or update a stack.&lt;/p&gt; &lt;p&gt;To create a change set for a stack that doesn&#39;t exist, for the &lt;code&gt;ChangeSetType&lt;/code&gt; parameter, specify &lt;code&gt;CREATE&lt;/code&gt;. To create a change set for an existing stack, specify &lt;code&gt;UPDATE&lt;/code&gt; for the &lt;code&gt;ChangeSetType&lt;/code&gt; parameter. To create a change set for an import operation, specify &lt;code&gt;IMPORT&lt;/code&gt; for the &lt;code&gt;ChangeSetType&lt;/code&gt; parameter. After the &lt;code&gt;CreateChangeSet&lt;/code&gt; call successfully completes, CloudFormation starts creating the change set. To check the status of the change set or to review it, use the &lt;a&gt;DescribeChangeSet&lt;/a&gt; action.&lt;/p&gt; &lt;p&gt;When you are satisfied with the changes the change set will make, execute the change set by using the &lt;a&gt;ExecuteChangeSet&lt;/a&gt; action. CloudFormation doesn&#39;t make changes until you execute the change set.&lt;/p&gt; &lt;p&gt;To create a change set for the entire stack hierarchy, set &lt;code&gt;IncludeNestedStacks&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTCreateChangeSetTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateChangeSetInput createChangeSetInput = null;
        CreateChangeSetOutput response = api.pOSTCreateChangeSet(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, createChangeSetInput);
        // TODO: test validations
    }

    /**
     * Creates a stack as specified in the template. After the call completes successfully, the stack creation starts. You can check the status of the stack through the &lt;a&gt;DescribeStacks&lt;/a&gt; operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTCreateStackTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateStackInput createStackInput = null;
        CreateStackOutput response = api.pOSTCreateStack(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, createStackInput);
        // TODO: test validations
    }

    /**
     * Creates stack instances for the specified accounts, within the specified Amazon Web Services Regions. A stack instance refers to a stack in a specific account and Region. You must specify at least one value for either &lt;code&gt;Accounts&lt;/code&gt; or &lt;code&gt;DeploymentTargets&lt;/code&gt;, and you must specify at least one value for &lt;code&gt;Regions&lt;/code&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTCreateStackInstancesTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateStackInstancesInput createStackInstancesInput = null;
        CreateStackInstancesOutput response = api.pOSTCreateStackInstances(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, createStackInstancesInput);
        // TODO: test validations
    }

    /**
     * Creates a stack set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTCreateStackSetTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateStackSetInput createStackSetInput = null;
        CreateStackSetOutput response = api.pOSTCreateStackSet(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, createStackSetInput);
        // TODO: test validations
    }

    /**
     * Deactivates trusted access with Organizations. If trusted access is deactivated, the management account does not have permissions to create and manage service-managed StackSets for your organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDeactivateOrganizationsAccessTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object body = null;
        Object response = api.pOSTDeactivateOrganizationsAccess(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, body);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deactivates a public extension that was previously activated in this account and Region.&lt;/p&gt; &lt;p&gt;Once deactivated, an extension can&#39;t be used in any CloudFormation operation. This includes stack update operations where the stack template includes the extension, even if no updates are being made to the extension. In addition, deactivated extensions aren&#39;t automatically updated if a new version of the extension is released.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDeactivateTypeTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeactivateTypeInput deactivateTypeInput = null;
        Object response = api.pOSTDeactivateType(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, deactivateTypeInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.&lt;/p&gt; &lt;p&gt;If the call successfully completes, CloudFormation successfully deleted the change set.&lt;/p&gt; &lt;p&gt;If &lt;code&gt;IncludeNestedStacks&lt;/code&gt; specifies &lt;code&gt;True&lt;/code&gt; during the creation of the nested change set, then &lt;code&gt;DeleteChangeSet&lt;/code&gt; will delete all change sets that belong to the stacks hierarchy and will also delete all change sets for nested stacks with the status of &lt;code&gt;REVIEW_IN_PROGRESS&lt;/code&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDeleteChangeSetTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteChangeSetInput deleteChangeSetInput = null;
        Object response = api.pOSTDeleteChangeSet(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, deleteChangeSetInput);
        // TODO: test validations
    }

    /**
     * Deletes a specified stack. Once the call completes successfully, stack deletion starts. Deleted stacks don&#39;t show up in the &lt;a&gt;DescribeStacks&lt;/a&gt; operation if the deletion has been completed successfully.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDeleteStackTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteStackInput deleteStackInput = null;
        api.pOSTDeleteStack(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, deleteStackInput);
        // TODO: test validations
    }

    /**
     * Deletes stack instances for the specified accounts, in the specified Amazon Web Services Regions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDeleteStackInstancesTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteStackInstancesInput deleteStackInstancesInput = null;
        DeleteStackInstancesOutput response = api.pOSTDeleteStackInstances(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, deleteStackInstancesInput);
        // TODO: test validations
    }

    /**
     * Deletes a stack set. Before you can delete a stack set, all its member stack instances must be deleted. For more information about how to complete this, see &lt;a&gt;DeleteStackInstances&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDeleteStackSetTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteStackSetInput deleteStackSetInput = null;
        Object response = api.pOSTDeleteStackSet(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, deleteStackSetInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Marks an extension or extension version as &lt;code&gt;DEPRECATED&lt;/code&gt; in the CloudFormation registry, removing it from active use. Deprecated extensions or extension versions cannot be used in CloudFormation operations.&lt;/p&gt; &lt;p&gt;To deregister an entire extension, you must individually deregister all active versions of that extension. If an extension has only a single active version, deregistering that version results in the extension itself being deregistered and marked as deprecated in the registry.&lt;/p&gt; &lt;p&gt;You can&#39;t deregister the default version of an extension if there are other active version of that extension. If you do deregister the default version of an extension, the extension type itself is deregistered as well and marked as deprecated.&lt;/p&gt; &lt;p&gt;To view the deprecation status of an extension or extension version, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DescribeType.html\&quot;&gt;DescribeType&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDeregisterTypeTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeregisterTypeInput deregisterTypeInput = null;
        Object response = api.pOSTDeregisterType(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, deregisterTypeInput);
        // TODO: test validations
    }

    /**
     * Retrieves your account&#39;s CloudFormation limits, such as the maximum number of stacks that you can create in your account. For more information about account limits, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html\&quot;&gt;CloudFormation Quotas&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeAccountLimitsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        DescribeAccountLimitsInput describeAccountLimitsInput = null;
        DescribeAccountLimitsOutput response = api.pOSTDescribeAccountLimits(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, describeAccountLimitsInput);
        // TODO: test validations
    }

    /**
     * Returns the inputs for the change set and a list of changes that CloudFormation will make if you execute the change set. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html\&quot;&gt;Updating Stacks Using Change Sets&lt;/a&gt; in the CloudFormation User Guide.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeChangeSetTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeChangeSetInput describeChangeSetInput = null;
        DescribeChangeSetOutput response = api.pOSTDescribeChangeSet(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeChangeSetInput);
        // TODO: test validations
    }

    /**
     * Returns hook-related information for the change set and a list of changes that CloudFormation makes when you run the change set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeChangeSetHooksTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeChangeSetHooksInput describeChangeSetHooksInput = null;
        DescribeChangeSetHooksOutput response = api.pOSTDescribeChangeSetHooks(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeChangeSetHooksInput);
        // TODO: test validations
    }

    /**
     * Retrieves information about the account&#39;s &lt;code&gt;OrganizationAccess&lt;/code&gt; status. This API can be called either by the management account or the delegated administrator by using the &lt;code&gt;CallAs&lt;/code&gt; parameter. This API can also be called without the &lt;code&gt;CallAs&lt;/code&gt; parameter by the management account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeOrganizationsAccessTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeOrganizationsAccessInput describeOrganizationsAccessInput = null;
        DescribeOrganizationsAccessOutput response = api.pOSTDescribeOrganizationsAccess(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeOrganizationsAccessInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns information about a CloudFormation extension publisher.&lt;/p&gt; &lt;p&gt;If you don&#39;t supply a &lt;code&gt;PublisherId&lt;/code&gt;, and you have registered as an extension publisher, &lt;code&gt;DescribePublisher&lt;/code&gt; returns information about your own publisher account.&lt;/p&gt; &lt;p&gt;For more information about registering as a publisher, see:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RegisterPublisher.html\&quot;&gt;RegisterPublisher&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html\&quot;&gt;Publishing extensions to make them available for public use&lt;/a&gt; in the &lt;i&gt;CloudFormation CLI User Guide&lt;/i&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribePublisherTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribePublisherInput describePublisherInput = null;
        DescribePublisherOutput response = api.pOSTDescribePublisher(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describePublisherInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns information about a stack drift detection operation. A stack drift detection operation detects whether a stack&#39;s actual configuration differs, or has &lt;i&gt;drifted&lt;/i&gt;, from its expected configuration, as defined in the stack template and any values specified as template parameters. A stack is considered to have drifted if one or more of its resources have drifted. For more information about stack and resource drift, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html\&quot;&gt;Detecting Unregulated Configuration Changes to Stacks and Resources&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Use &lt;a&gt;DetectStackDrift&lt;/a&gt; to initiate a stack drift detection operation. &lt;code&gt;DetectStackDrift&lt;/code&gt; returns a &lt;code&gt;StackDriftDetectionId&lt;/code&gt; you can use to monitor the progress of the operation using &lt;code&gt;DescribeStackDriftDetectionStatus&lt;/code&gt;. Once the drift detection operation has completed, use &lt;a&gt;DescribeStackResourceDrifts&lt;/a&gt; to return drift information about the stack and its resources.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeStackDriftDetectionStatusTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeStackDriftDetectionStatusInput describeStackDriftDetectionStatusInput = null;
        DescribeStackDriftDetectionStatusOutput response = api.pOSTDescribeStackDriftDetectionStatus(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeStackDriftDetectionStatusInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns all stack related events for a specified stack in reverse chronological order. For more information about a stack&#39;s event history, go to &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/concept-stack.html\&quot;&gt;Stacks&lt;/a&gt; in the CloudFormation User Guide.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You can list events for stacks that have failed to create or have been deleted by specifying the unique stack identifier (stack ID).&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeStackEventsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        DescribeStackEventsInput describeStackEventsInput = null;
        DescribeStackEventsOutput response = api.pOSTDescribeStackEvents(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, describeStackEventsInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns the stack instance that&#39;s associated with the specified StackSet, Amazon Web Services account, and Amazon Web Services Region.&lt;/p&gt; &lt;p&gt;For a list of stack instances that are associated with a specific StackSet, use &lt;a&gt;ListStackInstances&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeStackInstanceTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeStackInstanceInput describeStackInstanceInput = null;
        DescribeStackInstanceOutput response = api.pOSTDescribeStackInstance(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeStackInstanceInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns a description of the specified resource in the specified stack.&lt;/p&gt; &lt;p&gt;For deleted stacks, DescribeStackResource returns resource information for up to 90 days after the stack has been deleted.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeStackResourceTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeStackResourceInput describeStackResourceInput = null;
        DescribeStackResourceOutput response = api.pOSTDescribeStackResource(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeStackResourceInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where CloudFormation detects configuration drift.&lt;/p&gt; &lt;p&gt;For a given stack, there will be one &lt;code&gt;StackResourceDrift&lt;/code&gt; for each stack resource that has been checked for drift. Resources that haven&#39;t yet been checked for drift aren&#39;t included. Resources that don&#39;t currently support drift detection aren&#39;t checked, and so not included. For a list of resources that support drift detection, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html\&quot;&gt;Resources that Support Drift Detection&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Use &lt;a&gt;DetectStackResourceDrift&lt;/a&gt; to detect drift on individual resources, or &lt;a&gt;DetectStackDrift&lt;/a&gt; to detect drift on all supported resources for a given stack.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeStackResourceDriftsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        DescribeStackResourceDriftsInput describeStackResourceDriftsInput = null;
        DescribeStackResourceDriftsOutput response = api.pOSTDescribeStackResourceDrifts(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, describeStackResourceDriftsInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns Amazon Web Services resource descriptions for running and deleted stacks. If &lt;code&gt;StackName&lt;/code&gt; is specified, all the associated resources that are part of the stack are returned. If &lt;code&gt;PhysicalResourceId&lt;/code&gt; is specified, the associated resources of the stack that the resource belongs to are returned.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Only the first 100 resources will be returned. If your stack has more resources than this, you should use &lt;code&gt;ListStackResources&lt;/code&gt; instead.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;For deleted stacks, &lt;code&gt;DescribeStackResources&lt;/code&gt; returns resource information for up to 90 days after the stack has been deleted.&lt;/p&gt; &lt;p&gt;You must specify either &lt;code&gt;StackName&lt;/code&gt; or &lt;code&gt;PhysicalResourceId&lt;/code&gt;, but not both. In addition, you can specify &lt;code&gt;LogicalResourceId&lt;/code&gt; to filter the returned result. For more information about resources, the &lt;code&gt;LogicalResourceId&lt;/code&gt; and &lt;code&gt;PhysicalResourceId&lt;/code&gt;, go to the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/\&quot;&gt;CloudFormation User Guide&lt;/a&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;A &lt;code&gt;ValidationError&lt;/code&gt; is returned if you specify both &lt;code&gt;StackName&lt;/code&gt; and &lt;code&gt;PhysicalResourceId&lt;/code&gt; in the same request.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeStackResourcesTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeStackResourcesInput describeStackResourcesInput = null;
        DescribeStackResourcesOutput response = api.pOSTDescribeStackResources(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeStackResourcesInput);
        // TODO: test validations
    }

    /**
     * Returns the description of the specified StackSet.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeStackSetTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeStackSetInput describeStackSetInput = null;
        DescribeStackSetOutput response = api.pOSTDescribeStackSet(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeStackSetInput);
        // TODO: test validations
    }

    /**
     * Returns the description of the specified StackSet operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeStackSetOperationTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeStackSetOperationInput describeStackSetOperationInput = null;
        DescribeStackSetOperationOutput response = api.pOSTDescribeStackSetOperation(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeStackSetOperationInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created.&lt;/p&gt; &lt;note&gt; &lt;p&gt;If the stack doesn&#39;t exist, an &lt;code&gt;ValidationError&lt;/code&gt; is returned.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeStacksTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        DescribeStacksInput describeStacksInput = null;
        DescribeStacksOutput response = api.pOSTDescribeStacks(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, describeStacksInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns detailed information about an extension that has been registered.&lt;/p&gt; &lt;p&gt;If you specify a &lt;code&gt;VersionId&lt;/code&gt;, &lt;code&gt;DescribeType&lt;/code&gt; returns information about that specific extension version. Otherwise, it returns information about the default extension version.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeTypeTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeTypeInput describeTypeInput = null;
        DescribeTypeOutput response = api.pOSTDescribeType(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeTypeInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns information about an extension&#39;s registration, including its current status and type and version identifiers.&lt;/p&gt; &lt;p&gt;When you initiate a registration request using &lt;a&gt;RegisterType&lt;/a&gt;, you can then use &lt;a&gt;DescribeTypeRegistration&lt;/a&gt; to monitor the progress of that registration request.&lt;/p&gt; &lt;p&gt;Once the registration request has completed, use &lt;a&gt;DescribeType&lt;/a&gt; to return detailed information about an extension.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDescribeTypeRegistrationTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeTypeRegistrationInput describeTypeRegistrationInput = null;
        DescribeTypeRegistrationOutput response = api.pOSTDescribeTypeRegistration(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, describeTypeRegistrationInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Detects whether a stack&#39;s actual configuration differs, or has &lt;i&gt;drifted&lt;/i&gt;, from its expected configuration, as defined in the stack template and any values specified as template parameters. For each resource in the stack that supports drift detection, CloudFormation compares the actual configuration of the resource with its expected template configuration. Only resource properties explicitly defined in the stack template are checked for drift. A stack is considered to have drifted if one or more of its resources differ from their expected template configurations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html\&quot;&gt;Detecting Unregulated Configuration Changes to Stacks and Resources&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;DetectStackDrift&lt;/code&gt; to detect drift on all supported resources for a given stack, or &lt;a&gt;DetectStackResourceDrift&lt;/a&gt; to detect drift on individual resources.&lt;/p&gt; &lt;p&gt;For a list of stack resources that currently support drift detection, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html\&quot;&gt;Resources that Support Drift Detection&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;code&gt;DetectStackDrift&lt;/code&gt; can take up to several minutes, depending on the number of resources contained within the stack. Use &lt;a&gt;DescribeStackDriftDetectionStatus&lt;/a&gt; to monitor the progress of a detect stack drift operation. Once the drift detection operation has completed, use &lt;a&gt;DescribeStackResourceDrifts&lt;/a&gt; to return drift information about the stack and its resources.&lt;/p&gt; &lt;p&gt;When detecting drift on a stack, CloudFormation doesn&#39;t detect drift on any nested stacks belonging to that stack. Perform &lt;code&gt;DetectStackDrift&lt;/code&gt; directly on the nested stack itself.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDetectStackDriftTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DetectStackDriftInput detectStackDriftInput = null;
        DetectStackDriftOutput response = api.pOSTDetectStackDrift(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, detectStackDriftInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns information about whether a resource&#39;s actual configuration differs, or has &lt;i&gt;drifted&lt;/i&gt;, from its expected configuration, as defined in the stack template and any values specified as template parameters. This information includes actual and expected property values for resources in which CloudFormation detects drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information about stack and resource drift, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html\&quot;&gt;Detecting Unregulated Configuration Changes to Stacks and Resources&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;DetectStackResourceDrift&lt;/code&gt; to detect drift on individual resources, or &lt;a&gt;DetectStackDrift&lt;/a&gt; to detect drift on all resources in a given stack that support drift detection.&lt;/p&gt; &lt;p&gt;Resources that don&#39;t currently support drift detection can&#39;t be checked. For a list of resources that support drift detection, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html\&quot;&gt;Resources that Support Drift Detection&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDetectStackResourceDriftTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DetectStackResourceDriftInput detectStackResourceDriftInput = null;
        DetectStackResourceDriftOutput response = api.pOSTDetectStackResourceDrift(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, detectStackResourceDriftInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Detect drift on a stack set. When CloudFormation performs drift detection on a stack set, it performs drift detection on the stack associated with each stack instance in the stack set. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html\&quot;&gt;How CloudFormation performs drift detection on a stack set&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;code&gt;DetectStackSetDrift&lt;/code&gt; returns the &lt;code&gt;OperationId&lt;/code&gt; of the stack set drift detection operation. Use this operation id with &lt;a&gt;DescribeStackSetOperation&lt;/a&gt; to monitor the progress of the drift detection operation. The drift detection operation may take some time, depending on the number of stack instances included in the stack set, in addition to the number of resources included in each stack.&lt;/p&gt; &lt;p&gt;Once the operation has completed, use the following actions to return drift information:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Use &lt;a&gt;DescribeStackSet&lt;/a&gt; to return detailed information about the stack set, including detailed information about the last &lt;i&gt;completed&lt;/i&gt; drift operation performed on the stack set. (Information about drift operations that are in progress isn&#39;t included.)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use &lt;a&gt;ListStackInstances&lt;/a&gt; to return a list of stack instances belonging to the stack set, including the drift status and last drift time checked of each instance.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use &lt;a&gt;DescribeStackInstance&lt;/a&gt; to return detailed information about a specific stack instance, including its drift status and last drift time checked.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information about performing a drift detection operation on a stack set, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html\&quot;&gt;Detecting unmanaged changes in stack sets&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;You can only run a single drift detection operation on a given stack set at one time.&lt;/p&gt; &lt;p&gt;To stop a drift detection stack set operation, use &lt;a&gt;StopStackSetOperation&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTDetectStackSetDriftTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DetectStackSetDriftInput detectStackSetDriftInput = null;
        DetectStackSetDriftOutput response = api.pOSTDetectStackSetDrift(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, detectStackSetDriftInput);
        // TODO: test validations
    }

    /**
     * Returns the estimated monthly cost of a template. The return value is an Amazon Web Services Simple Monthly Calculator URL with a query string that describes the resources required to run the template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTEstimateTemplateCostTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        EstimateTemplateCostInput estimateTemplateCostInput = null;
        EstimateTemplateCostOutput response = api.pOSTEstimateTemplateCost(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, estimateTemplateCostInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates a stack using the input information that was provided when the specified change set was created. After the call successfully completes, CloudFormation starts updating the stack. Use the &lt;a&gt;DescribeStacks&lt;/a&gt; action to view the status of the update.&lt;/p&gt; &lt;p&gt;When you execute a change set, CloudFormation deletes all other change sets associated with the stack because they aren&#39;t valid for the updated stack.&lt;/p&gt; &lt;p&gt;If a stack policy is associated with the stack, CloudFormation enforces the policy during the update. You can&#39;t specify a temporary stack policy that overrides the current policy.&lt;/p&gt; &lt;p&gt;To create a change set for the entire stack hierarchy, &lt;code&gt;IncludeNestedStacks&lt;/code&gt; must have been set to &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTExecuteChangeSetTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ExecuteChangeSetInput executeChangeSetInput = null;
        Object response = api.pOSTExecuteChangeSet(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, executeChangeSetInput);
        // TODO: test validations
    }

    /**
     * Returns the stack policy for a specified stack. If a stack doesn&#39;t have a policy, a null value is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTGetStackPolicyTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetStackPolicyInput getStackPolicyInput = null;
        GetStackPolicyOutput response = api.pOSTGetStackPolicy(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, getStackPolicyInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns the template body for a specified stack. You can get the template for running or deleted stacks.&lt;/p&gt; &lt;p&gt;For deleted stacks, &lt;code&gt;GetTemplate&lt;/code&gt; returns the template for up to 90 days after the stack has been deleted.&lt;/p&gt; &lt;note&gt; &lt;p&gt;If the template doesn&#39;t exist, a &lt;code&gt;ValidationError&lt;/code&gt; is returned.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTGetTemplateTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetTemplateInput getTemplateInput = null;
        GetTemplateOutput response = api.pOSTGetTemplate(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, getTemplateInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns information about a new or existing template. The &lt;code&gt;GetTemplateSummary&lt;/code&gt; action is useful for viewing parameter information, such as default parameter values and parameter types, before you create or update a stack or stack set.&lt;/p&gt; &lt;p&gt;You can use the &lt;code&gt;GetTemplateSummary&lt;/code&gt; action when you submit a template, or you can get template information for a stack set, or a running or deleted stack.&lt;/p&gt; &lt;p&gt;For deleted stacks, &lt;code&gt;GetTemplateSummary&lt;/code&gt; returns the template information for up to 90 days after the stack has been deleted. If the template doesn&#39;t exist, a &lt;code&gt;ValidationError&lt;/code&gt; is returned.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTGetTemplateSummaryTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetTemplateSummaryInput getTemplateSummaryInput = null;
        GetTemplateSummaryOutput response = api.pOSTGetTemplateSummary(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, getTemplateSummaryInput);
        // TODO: test validations
    }

    /**
     * Import existing stacks into a new stack sets. Use the stack import operation to import up to 10 stacks into a new stack set in the same account as the source stack or in a different administrator account and Region, by specifying the stack ID of the stack you intend to import.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTImportStacksToStackSetTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ImportStacksToStackSetInput importStacksToStackSetInput = null;
        ImportStacksToStackSetOutput response = api.pOSTImportStacksToStackSet(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, importStacksToStackSetInput);
        // TODO: test validations
    }

    /**
     * Returns the ID and status of each active change set for a stack. For example, CloudFormation lists change sets that are in the &lt;code&gt;CREATE_IN_PROGRESS&lt;/code&gt; or &lt;code&gt;CREATE_PENDING&lt;/code&gt; state.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTListChangeSetsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        ListChangeSetsInput listChangeSetsInput = null;
        ListChangeSetsOutput response = api.pOSTListChangeSets(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, listChangeSetsInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Lists all exported output values in the account and Region in which you call this action. Use this action to see the exported output values that you can import into other stacks. To import values, use the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html\&quot;&gt; Fn::ImportValue&lt;/a&gt; function.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-exports.html\&quot;&gt; CloudFormation export stack output values&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTListExportsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        ListExportsInput listExportsInput = null;
        ListExportsOutput response = api.pOSTListExports(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, listExportsInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Lists all stacks that are importing an exported output value. To modify or remove an exported output value, first use this action to see which stacks are using it. To see the exported output values in your account, see &lt;a&gt;ListExports&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For more information about importing an exported output value, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html\&quot;&gt;Fn::ImportValue&lt;/a&gt; function.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTListImportsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        ListImportsInput listImportsInput = null;
        ListImportsOutput response = api.pOSTListImports(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, listImportsInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns drift information for resources in a stack instance.&lt;/p&gt; &lt;note&gt; &lt;p&gt; &lt;code&gt;ListStackInstanceResourceDrifts&lt;/code&gt; returns drift information for the most recent drift detection operation. If an operation is in progress, it may only return partial results.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTListStackInstanceResourceDriftsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListStackInstanceResourceDriftsInput listStackInstanceResourceDriftsInput = null;
        ListStackInstanceResourceDriftsOutput response = api.pOSTListStackInstanceResourceDrifts(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, listStackInstanceResourceDriftsInput);
        // TODO: test validations
    }

    /**
     * Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific Amazon Web Services account name or Region, or that have a specific status.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTListStackInstancesTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListStackInstancesInput listStackInstancesInput = null;
        ListStackInstancesOutput response = api.pOSTListStackInstances(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, listStackInstancesInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns descriptions of all resources of the specified stack.&lt;/p&gt; &lt;p&gt;For deleted stacks, ListStackResources returns resource information for up to 90 days after the stack has been deleted.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTListStackResourcesTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        ListStackResourcesInput listStackResourcesInput = null;
        ListStackResourcesOutput response = api.pOSTListStackResources(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, listStackResourcesInput);
        // TODO: test validations
    }

    /**
     * Returns summary information about the results of a stack set operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTListStackSetOperationResultsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListStackSetOperationResultsInput listStackSetOperationResultsInput = null;
        ListStackSetOperationResultsOutput response = api.pOSTListStackSetOperationResults(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, listStackSetOperationResultsInput);
        // TODO: test validations
    }

    /**
     * Returns summary information about operations performed on a stack set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTListStackSetOperationsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListStackSetOperationsInput listStackSetOperationsInput = null;
        ListStackSetOperationsOutput response = api.pOSTListStackSetOperations(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, listStackSetOperationsInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns summary information about stack sets that are associated with the user.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;[Self-managed permissions] If you set the &lt;code&gt;CallAs&lt;/code&gt; parameter to &lt;code&gt;SELF&lt;/code&gt; while signed in to your Amazon Web Services account, &lt;code&gt;ListStackSets&lt;/code&gt; returns all self-managed stack sets in your Amazon Web Services account.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Service-managed permissions] If you set the &lt;code&gt;CallAs&lt;/code&gt; parameter to &lt;code&gt;SELF&lt;/code&gt; while signed in to the organization&#39;s management account, &lt;code&gt;ListStackSets&lt;/code&gt; returns all stack sets in the management account.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Service-managed permissions] If you set the &lt;code&gt;CallAs&lt;/code&gt; parameter to &lt;code&gt;DELEGATED_ADMIN&lt;/code&gt; while signed in to your member account, &lt;code&gt;ListStackSets&lt;/code&gt; returns all stack sets with service-managed permissions in the management account.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTListStackSetsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListStackSetsInput listStackSetsInput = null;
        ListStackSetsOutput response = api.pOSTListStackSets(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, listStackSetsInput);
        // TODO: test validations
    }

    /**
     * Returns the summary information for stacks whose status matches the specified StackStatusFilter. Summary information for stacks that have been deleted is kept for 90 days after the stack is deleted. If no StackStatusFilter is specified, summary information for all stacks is returned (including existing stacks and stacks that have been deleted).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTListStacksTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        ListStacksInput listStacksInput = null;
        ListStacksOutput response = api.pOSTListStacks(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, listStacksInput);
        // TODO: test validations
    }

    /**
     * Returns a list of registration tokens for the specified extension(s).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTListTypeRegistrationsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListTypeRegistrationsInput listTypeRegistrationsInput = null;
        ListTypeRegistrationsOutput response = api.pOSTListTypeRegistrations(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, listTypeRegistrationsInput);
        // TODO: test validations
    }

    /**
     * Returns summary information about the versions of an extension.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTListTypeVersionsTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListTypeVersionsInput listTypeVersionsInput = null;
        ListTypeVersionsOutput response = api.pOSTListTypeVersions(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, listTypeVersionsInput);
        // TODO: test validations
    }

    /**
     * Returns summary information about extension that have been registered with CloudFormation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTListTypesTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListTypesInput listTypesInput = null;
        ListTypesOutput response = api.pOSTListTypes(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, listTypesInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Publishes the specified extension to the CloudFormation registry as a public extension in this Region. Public extensions are available for use by all CloudFormation users. For more information about publishing extensions, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html\&quot;&gt;Publishing extensions to make them available for public use&lt;/a&gt; in the &lt;i&gt;CloudFormation CLI User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;To publish an extension, you must be registered as a publisher with CloudFormation. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RegisterPublisher.html\&quot;&gt;RegisterPublisher&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTPublishTypeTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        PublishTypeInput publishTypeInput = null;
        PublishTypeOutput response = api.pOSTPublishType(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, publishTypeInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Reports progress of a resource handler to CloudFormation.&lt;/p&gt; &lt;p&gt;Reserved for use by the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html\&quot;&gt;CloudFormation CLI&lt;/a&gt;. Don&#39;t use this API in your code.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTRecordHandlerProgressTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        RecordHandlerProgressInput recordHandlerProgressInput = null;
        Object response = api.pOSTRecordHandlerProgress(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, recordHandlerProgressInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Registers your account as a publisher of public extensions in the CloudFormation registry. Public extensions are available for use by all CloudFormation users. This publisher ID applies to your account in all Amazon Web Services Regions.&lt;/p&gt; &lt;p&gt;For information about requirements for registering as a public extension publisher, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html#publish-extension-prereqs\&quot;&gt;Registering your account to publish CloudFormation extensions&lt;/a&gt; in the &lt;i&gt;CloudFormation CLI User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p/&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTRegisterPublisherTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        RegisterPublisherInput registerPublisherInput = null;
        RegisterPublisherOutput response = api.pOSTRegisterPublisher(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, registerPublisherInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Registers an extension with the CloudFormation service. Registering an extension makes it available for use in CloudFormation templates in your Amazon Web Services account, and includes:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Validating the extension schema.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Determining which handlers, if any, have been specified for the extension.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Making the extension available for use in your account.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information about how to develop extensions and ready them for registration, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-types.html\&quot;&gt;Creating Resource Providers&lt;/a&gt; in the &lt;i&gt;CloudFormation CLI User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;You can have a maximum of 50 resource extension versions registered at a time. This maximum is per account and per Region. Use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DeregisterType.html\&quot;&gt;DeregisterType&lt;/a&gt; to deregister specific extension versions if necessary.&lt;/p&gt; &lt;p&gt;Once you have initiated a registration request using &lt;a&gt;RegisterType&lt;/a&gt;, you can use &lt;a&gt;DescribeTypeRegistration&lt;/a&gt; to monitor the progress of the registration request.&lt;/p&gt; &lt;p&gt;Once you have registered a private extension in your account and Region, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_SetTypeConfiguration.html\&quot;&gt;SetTypeConfiguration&lt;/a&gt; to specify configuration properties for the extension. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-register.html#registry-set-configuration\&quot;&gt;Configuring extensions at the account level&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTRegisterTypeTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        RegisterTypeInput registerTypeInput = null;
        RegisterTypeOutput response = api.pOSTRegisterType(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, registerTypeInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;When specifying &lt;code&gt;RollbackStack&lt;/code&gt;, you preserve the state of previously provisioned resources when an operation fails. You can check the status of the stack through the &lt;a&gt;DescribeStacks&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;Rolls back the specified stack to the last known stable state from &lt;code&gt;CREATE_FAILED&lt;/code&gt; or &lt;code&gt;UPDATE_FAILED&lt;/code&gt; stack statuses.&lt;/p&gt; &lt;p&gt;This operation will delete a stack if it doesn&#39;t contain a last known stable state. A last known stable state includes any status in a &lt;code&gt;*_COMPLETE&lt;/code&gt;. This includes the following stack statuses.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;CREATE_COMPLETE&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;UPDATE_COMPLETE&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;UPDATE_ROLLBACK_COMPLETE&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;IMPORT_COMPLETE&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;IMPORT_ROLLBACK_COMPLETE&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTRollbackStackTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        RollbackStackInput rollbackStackInput = null;
        RollbackStackOutput response = api.pOSTRollbackStack(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, rollbackStackInput);
        // TODO: test validations
    }

    /**
     * Sets a stack policy for a specified stack.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTSetStackPolicyTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        SetStackPolicyInput setStackPolicyInput = null;
        api.pOSTSetStackPolicy(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, setStackPolicyInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Specifies the configuration data for a registered CloudFormation extension, in the given account and Region.&lt;/p&gt; &lt;p&gt;To view the current configuration data for an extension, refer to the &lt;code&gt;ConfigurationSchema&lt;/code&gt; element of &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DescribeType.html\&quot;&gt;DescribeType&lt;/a&gt;. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-register.html#registry-set-configuration\&quot;&gt;Configuring extensions at the account level&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.&lt;/p&gt; &lt;important&gt; &lt;p&gt;It&#39;s strongly recommended that you use dynamic references to restrict sensitive configuration definitions, such as third-party credentials. For more details on dynamic references, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/\&quot;&gt;Using dynamic references to specify template values&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTSetTypeConfigurationTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        SetTypeConfigurationInput setTypeConfigurationInput = null;
        SetTypeConfigurationOutput response = api.pOSTSetTypeConfiguration(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, setTypeConfigurationInput);
        // TODO: test validations
    }

    /**
     * Specify the default version of an extension. The default version of an extension will be used in CloudFormation operations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTSetTypeDefaultVersionTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        SetTypeDefaultVersionInput setTypeDefaultVersionInput = null;
        Object response = api.pOSTSetTypeDefaultVersion(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, setTypeDefaultVersionInput);
        // TODO: test validations
    }

    /**
     * Sends a signal to the specified resource with a success or failure status. You can use the &lt;code&gt;SignalResource&lt;/code&gt; operation in conjunction with a creation policy or update policy. CloudFormation doesn&#39;t proceed with a stack creation or update until resources receive the required number of signals or the timeout period is exceeded. The &lt;code&gt;SignalResource&lt;/code&gt; operation is useful in cases where you want to send signals from anywhere other than an Amazon EC2 instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTSignalResourceTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        SignalResourceInput signalResourceInput = null;
        api.pOSTSignalResource(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, signalResourceInput);
        // TODO: test validations
    }

    /**
     * Stops an in-progress operation on a stack set and its associated stack instances. StackSets will cancel all the unstarted stack instance deployments and wait for those are in-progress to complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTStopStackSetOperationTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StopStackSetOperationInput stopStackSetOperationInput = null;
        Object response = api.pOSTStopStackSetOperation(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, stopStackSetOperationInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Tests a registered extension to make sure it meets all necessary requirements for being published in the CloudFormation registry.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;For resource types, this includes passing all contracts tests defined for the type.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For modules, this includes determining if the module&#39;s model meets all necessary requirements.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html#publish-extension-testing\&quot;&gt;Testing your public extension prior to publishing&lt;/a&gt; in the &lt;i&gt;CloudFormation CLI User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;If you don&#39;t specify a version, CloudFormation uses the default version of the extension in your account and Region for testing.&lt;/p&gt; &lt;p&gt;To perform testing, CloudFormation assumes the execution role specified when the type was registered. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RegisterType.html\&quot;&gt;RegisterType&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Once you&#39;ve initiated testing on an extension using &lt;code&gt;TestType&lt;/code&gt;, you can pass the returned &lt;code&gt;TypeVersionArn&lt;/code&gt; into &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DescribeType.html\&quot;&gt;DescribeType&lt;/a&gt; to monitor the current test status and test status description for the extension.&lt;/p&gt; &lt;p&gt;An extension must have a test status of &lt;code&gt;PASSED&lt;/code&gt; before it can be published. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-publish.html\&quot;&gt;Publishing extensions to make them available for public use&lt;/a&gt; in the &lt;i&gt;CloudFormation CLI User Guide&lt;/i&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTTestTypeTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        TestTypeInput testTypeInput = null;
        TestTypeOutput response = api.pOSTTestType(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, testTypeInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates a stack as specified in the template. After the call completes successfully, the stack update starts. You can check the status of the stack through the &lt;a&gt;DescribeStacks&lt;/a&gt; action.&lt;/p&gt; &lt;p&gt;To get a copy of the template for an existing stack, you can use the &lt;a&gt;GetTemplate&lt;/a&gt; action.&lt;/p&gt; &lt;p&gt;For more information about creating an update template, updating a stack, and monitoring the progress of the update, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html\&quot;&gt;Updating a Stack&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTUpdateStackTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateStackInput updateStackInput = null;
        UpdateStackOutput response = api.pOSTUpdateStack(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, updateStackInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates the parameter values for stack instances for the specified accounts, within the specified Amazon Web Services Regions. A stack instance refers to a stack in a specific account and Region.&lt;/p&gt; &lt;p&gt;You can only update stack instances in Amazon Web Services Regions and accounts where they already exist; to create additional stack instances, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStackInstances.html\&quot;&gt;CreateStackInstances&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;During stack set updates, any parameters overridden for a stack instance aren&#39;t updated, but retain their overridden value.&lt;/p&gt; &lt;p&gt;You can only update the parameter &lt;i&gt;values&lt;/i&gt; that are specified in the stack set; to add or delete a parameter itself, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html\&quot;&gt;UpdateStackSet&lt;/a&gt; to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html\&quot;&gt;UpdateStackSet&lt;/a&gt; to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using &lt;code&gt;UpdateStackInstances&lt;/code&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTUpdateStackInstancesTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateStackInstancesInput updateStackInstancesInput = null;
        UpdateStackInstancesOutput response = api.pOSTUpdateStackInstances(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, updateStackInstancesInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates the stack set, and associated stack instances in the specified accounts and Amazon Web Services Regions.&lt;/p&gt; &lt;p&gt;Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent &lt;a&gt;CreateStackInstances&lt;/a&gt; calls on the specified stack set use the updated stack set.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTUpdateStackSetTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateStackSetInput updateStackSetInput = null;
        UpdateStackSetOutput response = api.pOSTUpdateStackSet(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, updateStackSetInput);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html\&quot;&gt;Protecting a Stack From Being Deleted&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html\&quot;&gt;nested stacks&lt;/a&gt;, termination protection is set on the root stack and can&#39;t be changed directly on the nested stack.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTUpdateTerminationProtectionTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateTerminationProtectionInput updateTerminationProtectionInput = null;
        UpdateTerminationProtectionOutput response = api.pOSTUpdateTerminationProtection(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, updateTerminationProtectionInput);
        // TODO: test validations
    }

    /**
     * Validates a specified template. CloudFormation first checks if the template is valid JSON. If it isn&#39;t, CloudFormation checks if the template is valid YAML. If both these checks fail, CloudFormation returns a template validation error.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pOSTValidateTemplateTest() throws ApiException {
        String action = null;
        String version = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ValidateTemplateInput validateTemplateInput = null;
        ValidateTemplateOutput response = api.pOSTValidateTemplate(action, version, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, validateTemplateInput);
        // TODO: test validations
    }

}
