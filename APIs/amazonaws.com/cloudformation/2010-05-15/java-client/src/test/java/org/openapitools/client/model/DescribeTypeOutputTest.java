/*
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DeprecatedStatus;
import org.openapitools.client.model.DescribeTypeOutputLoggingConfig;
import org.openapitools.client.model.ProvisioningType;
import org.openapitools.client.model.RegistryType;
import org.openapitools.client.model.TypeTestsStatus;
import org.openapitools.client.model.Visibility;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DescribeTypeOutput
 */
public class DescribeTypeOutputTest {
    private final DescribeTypeOutput model = new DescribeTypeOutput();

    /**
     * Model tests for DescribeTypeOutput
     */
    @Test
    public void testDescribeTypeOutput() {
        // TODO: test DescribeTypeOutput
    }

    /**
     * Test the property 'arn'
     */
    @Test
    public void arnTest() {
        // TODO: test arn
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'typeName'
     */
    @Test
    public void typeNameTest() {
        // TODO: test typeName
    }

    /**
     * Test the property 'defaultVersionId'
     */
    @Test
    public void defaultVersionIdTest() {
        // TODO: test defaultVersionId
    }

    /**
     * Test the property 'isDefaultVersion'
     */
    @Test
    public void isDefaultVersionTest() {
        // TODO: test isDefaultVersion
    }

    /**
     * Test the property 'typeTestsStatus'
     */
    @Test
    public void typeTestsStatusTest() {
        // TODO: test typeTestsStatus
    }

    /**
     * Test the property 'typeTestsStatusDescription'
     */
    @Test
    public void typeTestsStatusDescriptionTest() {
        // TODO: test typeTestsStatusDescription
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'schema'
     */
    @Test
    public void schemaTest() {
        // TODO: test schema
    }

    /**
     * Test the property 'provisioningType'
     */
    @Test
    public void provisioningTypeTest() {
        // TODO: test provisioningType
    }

    /**
     * Test the property 'deprecatedStatus'
     */
    @Test
    public void deprecatedStatusTest() {
        // TODO: test deprecatedStatus
    }

    /**
     * Test the property 'loggingConfig'
     */
    @Test
    public void loggingConfigTest() {
        // TODO: test loggingConfig
    }

    /**
     * Test the property 'requiredActivatedTypes'
     */
    @Test
    public void requiredActivatedTypesTest() {
        // TODO: test requiredActivatedTypes
    }

    /**
     * Test the property 'executionRoleArn'
     */
    @Test
    public void executionRoleArnTest() {
        // TODO: test executionRoleArn
    }

    /**
     * Test the property 'visibility'
     */
    @Test
    public void visibilityTest() {
        // TODO: test visibility
    }

    /**
     * Test the property 'sourceUrl'
     */
    @Test
    public void sourceUrlTest() {
        // TODO: test sourceUrl
    }

    /**
     * Test the property 'documentationUrl'
     */
    @Test
    public void documentationUrlTest() {
        // TODO: test documentationUrl
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

    /**
     * Test the property 'timeCreated'
     */
    @Test
    public void timeCreatedTest() {
        // TODO: test timeCreated
    }

    /**
     * Test the property 'configurationSchema'
     */
    @Test
    public void configurationSchemaTest() {
        // TODO: test configurationSchema
    }

    /**
     * Test the property 'publisherId'
     */
    @Test
    public void publisherIdTest() {
        // TODO: test publisherId
    }

    /**
     * Test the property 'originalTypeName'
     */
    @Test
    public void originalTypeNameTest() {
        // TODO: test originalTypeName
    }

    /**
     * Test the property 'originalTypeArn'
     */
    @Test
    public void originalTypeArnTest() {
        // TODO: test originalTypeArn
    }

    /**
     * Test the property 'publicVersionNumber'
     */
    @Test
    public void publicVersionNumberTest() {
        // TODO: test publicVersionNumber
    }

    /**
     * Test the property 'latestPublicVersion'
     */
    @Test
    public void latestPublicVersionTest() {
        // TODO: test latestPublicVersion
    }

    /**
     * Test the property 'isActivated'
     */
    @Test
    public void isActivatedTest() {
        // TODO: test isActivated
    }

    /**
     * Test the property 'autoUpdate'
     */
    @Test
    public void autoUpdateTest() {
        // TODO: test autoUpdate
    }

}
