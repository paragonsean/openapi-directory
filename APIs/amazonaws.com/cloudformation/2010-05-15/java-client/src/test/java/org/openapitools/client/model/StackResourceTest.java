/*
 * AWS CloudFormation
 * <fullname>CloudFormation</fullname> <p>CloudFormation allows you to create and manage Amazon Web Services infrastructure deployments predictably and repeatedly. You can use CloudFormation to leverage Amazon Web Services products, such as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification Service, Elastic Load Balancing, and Auto Scaling to build highly reliable, highly scalable, cost-effective applications without creating or configuring the underlying Amazon Web Services infrastructure.</p> <p>With CloudFormation, you declare all your resources and dependencies in a template file. The template defines a collection of resources as a single unit called a stack. CloudFormation creates and deletes all member resources of the stack together and manages all dependencies between the resources for you.</p> <p>For more information about CloudFormation, see the <a href=\"http://aws.amazon.com/cloudformation/\">CloudFormation product page</a>.</p> <p>CloudFormation makes use of other Amazon Web Services products. If you need additional technical information about a specific Amazon Web Services product, you can find the product's technical documentation at <a href=\"https://docs.aws.amazon.com/\">docs.aws.amazon.com</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ResourceChangeModuleInfo;
import org.openapitools.client.model.ResourceStatus;
import org.openapitools.client.model.StackResourceDetailDriftInformation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for StackResource
 */
public class StackResourceTest {
    private final StackResource model = new StackResource();

    /**
     * Model tests for StackResource
     */
    @Test
    public void testStackResource() {
        // TODO: test StackResource
    }

    /**
     * Test the property 'stackName'
     */
    @Test
    public void stackNameTest() {
        // TODO: test stackName
    }

    /**
     * Test the property 'stackId'
     */
    @Test
    public void stackIdTest() {
        // TODO: test stackId
    }

    /**
     * Test the property 'logicalResourceId'
     */
    @Test
    public void logicalResourceIdTest() {
        // TODO: test logicalResourceId
    }

    /**
     * Test the property 'physicalResourceId'
     */
    @Test
    public void physicalResourceIdTest() {
        // TODO: test physicalResourceId
    }

    /**
     * Test the property 'resourceType'
     */
    @Test
    public void resourceTypeTest() {
        // TODO: test resourceType
    }

    /**
     * Test the property 'timestamp'
     */
    @Test
    public void timestampTest() {
        // TODO: test timestamp
    }

    /**
     * Test the property 'resourceStatus'
     */
    @Test
    public void resourceStatusTest() {
        // TODO: test resourceStatus
    }

    /**
     * Test the property 'resourceStatusReason'
     */
    @Test
    public void resourceStatusReasonTest() {
        // TODO: test resourceStatusReason
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'driftInformation'
     */
    @Test
    public void driftInformationTest() {
        // TODO: test driftInformation
    }

    /**
     * Test the property 'moduleInfo'
     */
    @Test
    public void moduleInfoTest() {
        // TODO: test moduleInfo
    }

}
