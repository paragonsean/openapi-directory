# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Export(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exporting_stack_id: str=None, name: str=None, value: str=None):
        """Export - a model defined in OpenAPI

        :param exporting_stack_id: The exporting_stack_id of this Export.
        :param name: The name of this Export.
        :param value: The value of this Export.
        """
        self.openapi_types = {
            'exporting_stack_id': str,
            'name': str,
            'value': str
        }

        self.attribute_map = {
            'exporting_stack_id': 'ExportingStackId',
            'name': 'Name',
            'value': 'Value'
        }

        self._exporting_stack_id = exporting_stack_id
        self._name = name
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Export':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Export of this Export.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exporting_stack_id(self):
        """Gets the exporting_stack_id of this Export.


        :return: The exporting_stack_id of this Export.
        :rtype: str
        """
        return self._exporting_stack_id

    @exporting_stack_id.setter
    def exporting_stack_id(self, exporting_stack_id):
        """Sets the exporting_stack_id of this Export.


        :param exporting_stack_id: The exporting_stack_id of this Export.
        :type exporting_stack_id: str
        """

        self._exporting_stack_id = exporting_stack_id

    @property
    def name(self):
        """Gets the name of this Export.


        :return: The name of this Export.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Export.


        :param name: The name of this Export.
        :type name: str
        """

        self._name = name

    @property
    def value(self):
        """Gets the value of this Export.


        :return: The value of this Export.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Export.


        :param value: The value of this Export.
        :type value: str
        """

        self._value = value
