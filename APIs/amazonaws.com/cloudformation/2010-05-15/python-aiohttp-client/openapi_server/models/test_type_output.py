# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TestTypeOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type_version_arn: str=None):
        """TestTypeOutput - a model defined in OpenAPI

        :param type_version_arn: The type_version_arn of this TestTypeOutput.
        """
        self.openapi_types = {
            'type_version_arn': str
        }

        self.attribute_map = {
            'type_version_arn': 'TypeVersionArn'
        }

        self._type_version_arn = type_version_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestTypeOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestTypeOutput of this TestTypeOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type_version_arn(self):
        """Gets the type_version_arn of this TestTypeOutput.


        :return: The type_version_arn of this TestTypeOutput.
        :rtype: str
        """
        return self._type_version_arn

    @type_version_arn.setter
    def type_version_arn(self, type_version_arn):
        """Sets the type_version_arn of this TestTypeOutput.


        :param type_version_arn: The type_version_arn of this TestTypeOutput.
        :type type_version_arn: str
        """

        self._type_version_arn = type_version_arn
