# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ValidateTemplateOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parameters: List=None, description: str=None, capabilities: List=None, capabilities_reason: str=None, declared_transforms: List=None):
        """ValidateTemplateOutput - a model defined in OpenAPI

        :param parameters: The parameters of this ValidateTemplateOutput.
        :param description: The description of this ValidateTemplateOutput.
        :param capabilities: The capabilities of this ValidateTemplateOutput.
        :param capabilities_reason: The capabilities_reason of this ValidateTemplateOutput.
        :param declared_transforms: The declared_transforms of this ValidateTemplateOutput.
        """
        self.openapi_types = {
            'parameters': List,
            'description': str,
            'capabilities': List,
            'capabilities_reason': str,
            'declared_transforms': List
        }

        self.attribute_map = {
            'parameters': 'Parameters',
            'description': 'Description',
            'capabilities': 'Capabilities',
            'capabilities_reason': 'CapabilitiesReason',
            'declared_transforms': 'DeclaredTransforms'
        }

        self._parameters = parameters
        self._description = description
        self._capabilities = capabilities
        self._capabilities_reason = capabilities_reason
        self._declared_transforms = declared_transforms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ValidateTemplateOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ValidateTemplateOutput of this ValidateTemplateOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parameters(self):
        """Gets the parameters of this ValidateTemplateOutput.


        :return: The parameters of this ValidateTemplateOutput.
        :rtype: List
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this ValidateTemplateOutput.


        :param parameters: The parameters of this ValidateTemplateOutput.
        :type parameters: List
        """

        self._parameters = parameters

    @property
    def description(self):
        """Gets the description of this ValidateTemplateOutput.


        :return: The description of this ValidateTemplateOutput.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ValidateTemplateOutput.


        :param description: The description of this ValidateTemplateOutput.
        :type description: str
        """

        self._description = description

    @property
    def capabilities(self):
        """Gets the capabilities of this ValidateTemplateOutput.


        :return: The capabilities of this ValidateTemplateOutput.
        :rtype: List
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities):
        """Sets the capabilities of this ValidateTemplateOutput.


        :param capabilities: The capabilities of this ValidateTemplateOutput.
        :type capabilities: List
        """

        self._capabilities = capabilities

    @property
    def capabilities_reason(self):
        """Gets the capabilities_reason of this ValidateTemplateOutput.


        :return: The capabilities_reason of this ValidateTemplateOutput.
        :rtype: str
        """
        return self._capabilities_reason

    @capabilities_reason.setter
    def capabilities_reason(self, capabilities_reason):
        """Sets the capabilities_reason of this ValidateTemplateOutput.


        :param capabilities_reason: The capabilities_reason of this ValidateTemplateOutput.
        :type capabilities_reason: str
        """

        self._capabilities_reason = capabilities_reason

    @property
    def declared_transforms(self):
        """Gets the declared_transforms of this ValidateTemplateOutput.


        :return: The declared_transforms of this ValidateTemplateOutput.
        :rtype: List
        """
        return self._declared_transforms

    @declared_transforms.setter
    def declared_transforms(self, declared_transforms):
        """Sets the declared_transforms of this ValidateTemplateOutput.


        :param declared_transforms: The declared_transforms of this ValidateTemplateOutput.
        :type declared_transforms: List
        """

        self._declared_transforms = declared_transforms
