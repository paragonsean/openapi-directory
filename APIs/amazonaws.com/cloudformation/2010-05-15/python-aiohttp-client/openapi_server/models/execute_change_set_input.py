# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExecuteChangeSetInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, change_set_name: str=None, stack_name: str=None, client_request_token: str=None, disable_rollback: bool=None, retain_except_on_create: bool=None):
        """ExecuteChangeSetInput - a model defined in OpenAPI

        :param change_set_name: The change_set_name of this ExecuteChangeSetInput.
        :param stack_name: The stack_name of this ExecuteChangeSetInput.
        :param client_request_token: The client_request_token of this ExecuteChangeSetInput.
        :param disable_rollback: The disable_rollback of this ExecuteChangeSetInput.
        :param retain_except_on_create: The retain_except_on_create of this ExecuteChangeSetInput.
        """
        self.openapi_types = {
            'change_set_name': str,
            'stack_name': str,
            'client_request_token': str,
            'disable_rollback': bool,
            'retain_except_on_create': bool
        }

        self.attribute_map = {
            'change_set_name': 'ChangeSetName',
            'stack_name': 'StackName',
            'client_request_token': 'ClientRequestToken',
            'disable_rollback': 'DisableRollback',
            'retain_except_on_create': 'RetainExceptOnCreate'
        }

        self._change_set_name = change_set_name
        self._stack_name = stack_name
        self._client_request_token = client_request_token
        self._disable_rollback = disable_rollback
        self._retain_except_on_create = retain_except_on_create

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExecuteChangeSetInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExecuteChangeSetInput of this ExecuteChangeSetInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def change_set_name(self):
        """Gets the change_set_name of this ExecuteChangeSetInput.


        :return: The change_set_name of this ExecuteChangeSetInput.
        :rtype: str
        """
        return self._change_set_name

    @change_set_name.setter
    def change_set_name(self, change_set_name):
        """Sets the change_set_name of this ExecuteChangeSetInput.


        :param change_set_name: The change_set_name of this ExecuteChangeSetInput.
        :type change_set_name: str
        """
        if change_set_name is None:
            raise ValueError("Invalid value for `change_set_name`, must not be `None`")

        self._change_set_name = change_set_name

    @property
    def stack_name(self):
        """Gets the stack_name of this ExecuteChangeSetInput.


        :return: The stack_name of this ExecuteChangeSetInput.
        :rtype: str
        """
        return self._stack_name

    @stack_name.setter
    def stack_name(self, stack_name):
        """Sets the stack_name of this ExecuteChangeSetInput.


        :param stack_name: The stack_name of this ExecuteChangeSetInput.
        :type stack_name: str
        """

        self._stack_name = stack_name

    @property
    def client_request_token(self):
        """Gets the client_request_token of this ExecuteChangeSetInput.


        :return: The client_request_token of this ExecuteChangeSetInput.
        :rtype: str
        """
        return self._client_request_token

    @client_request_token.setter
    def client_request_token(self, client_request_token):
        """Sets the client_request_token of this ExecuteChangeSetInput.


        :param client_request_token: The client_request_token of this ExecuteChangeSetInput.
        :type client_request_token: str
        """

        self._client_request_token = client_request_token

    @property
    def disable_rollback(self):
        """Gets the disable_rollback of this ExecuteChangeSetInput.


        :return: The disable_rollback of this ExecuteChangeSetInput.
        :rtype: bool
        """
        return self._disable_rollback

    @disable_rollback.setter
    def disable_rollback(self, disable_rollback):
        """Sets the disable_rollback of this ExecuteChangeSetInput.


        :param disable_rollback: The disable_rollback of this ExecuteChangeSetInput.
        :type disable_rollback: bool
        """

        self._disable_rollback = disable_rollback

    @property
    def retain_except_on_create(self):
        """Gets the retain_except_on_create of this ExecuteChangeSetInput.


        :return: The retain_except_on_create of this ExecuteChangeSetInput.
        :rtype: bool
        """
        return self._retain_except_on_create

    @retain_except_on_create.setter
    def retain_except_on_create(self, retain_except_on_create):
        """Sets the retain_except_on_create of this ExecuteChangeSetInput.


        :param retain_except_on_create: The retain_except_on_create of this ExecuteChangeSetInput.
        :type retain_except_on_create: bool
        """

        self._retain_except_on_create = retain_except_on_create
