# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stack_resource_drift_status import StackResourceDriftStatus
from openapi_server import util


class StackInstanceResourceDriftsSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stack_id: str=None, logical_resource_id: str=None, physical_resource_id: str=None, physical_resource_id_context: List=None, resource_type: str=None, property_differences: List=None, stack_resource_drift_status: StackResourceDriftStatus=None, timestamp: datetime=None):
        """StackInstanceResourceDriftsSummary - a model defined in OpenAPI

        :param stack_id: The stack_id of this StackInstanceResourceDriftsSummary.
        :param logical_resource_id: The logical_resource_id of this StackInstanceResourceDriftsSummary.
        :param physical_resource_id: The physical_resource_id of this StackInstanceResourceDriftsSummary.
        :param physical_resource_id_context: The physical_resource_id_context of this StackInstanceResourceDriftsSummary.
        :param resource_type: The resource_type of this StackInstanceResourceDriftsSummary.
        :param property_differences: The property_differences of this StackInstanceResourceDriftsSummary.
        :param stack_resource_drift_status: The stack_resource_drift_status of this StackInstanceResourceDriftsSummary.
        :param timestamp: The timestamp of this StackInstanceResourceDriftsSummary.
        """
        self.openapi_types = {
            'stack_id': str,
            'logical_resource_id': str,
            'physical_resource_id': str,
            'physical_resource_id_context': List,
            'resource_type': str,
            'property_differences': List,
            'stack_resource_drift_status': StackResourceDriftStatus,
            'timestamp': datetime
        }

        self.attribute_map = {
            'stack_id': 'StackId',
            'logical_resource_id': 'LogicalResourceId',
            'physical_resource_id': 'PhysicalResourceId',
            'physical_resource_id_context': 'PhysicalResourceIdContext',
            'resource_type': 'ResourceType',
            'property_differences': 'PropertyDifferences',
            'stack_resource_drift_status': 'StackResourceDriftStatus',
            'timestamp': 'Timestamp'
        }

        self._stack_id = stack_id
        self._logical_resource_id = logical_resource_id
        self._physical_resource_id = physical_resource_id
        self._physical_resource_id_context = physical_resource_id_context
        self._resource_type = resource_type
        self._property_differences = property_differences
        self._stack_resource_drift_status = stack_resource_drift_status
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StackInstanceResourceDriftsSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StackInstanceResourceDriftsSummary of this StackInstanceResourceDriftsSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stack_id(self):
        """Gets the stack_id of this StackInstanceResourceDriftsSummary.


        :return: The stack_id of this StackInstanceResourceDriftsSummary.
        :rtype: str
        """
        return self._stack_id

    @stack_id.setter
    def stack_id(self, stack_id):
        """Sets the stack_id of this StackInstanceResourceDriftsSummary.


        :param stack_id: The stack_id of this StackInstanceResourceDriftsSummary.
        :type stack_id: str
        """
        if stack_id is None:
            raise ValueError("Invalid value for `stack_id`, must not be `None`")

        self._stack_id = stack_id

    @property
    def logical_resource_id(self):
        """Gets the logical_resource_id of this StackInstanceResourceDriftsSummary.


        :return: The logical_resource_id of this StackInstanceResourceDriftsSummary.
        :rtype: str
        """
        return self._logical_resource_id

    @logical_resource_id.setter
    def logical_resource_id(self, logical_resource_id):
        """Sets the logical_resource_id of this StackInstanceResourceDriftsSummary.


        :param logical_resource_id: The logical_resource_id of this StackInstanceResourceDriftsSummary.
        :type logical_resource_id: str
        """
        if logical_resource_id is None:
            raise ValueError("Invalid value for `logical_resource_id`, must not be `None`")

        self._logical_resource_id = logical_resource_id

    @property
    def physical_resource_id(self):
        """Gets the physical_resource_id of this StackInstanceResourceDriftsSummary.


        :return: The physical_resource_id of this StackInstanceResourceDriftsSummary.
        :rtype: str
        """
        return self._physical_resource_id

    @physical_resource_id.setter
    def physical_resource_id(self, physical_resource_id):
        """Sets the physical_resource_id of this StackInstanceResourceDriftsSummary.


        :param physical_resource_id: The physical_resource_id of this StackInstanceResourceDriftsSummary.
        :type physical_resource_id: str
        """

        self._physical_resource_id = physical_resource_id

    @property
    def physical_resource_id_context(self):
        """Gets the physical_resource_id_context of this StackInstanceResourceDriftsSummary.


        :return: The physical_resource_id_context of this StackInstanceResourceDriftsSummary.
        :rtype: List
        """
        return self._physical_resource_id_context

    @physical_resource_id_context.setter
    def physical_resource_id_context(self, physical_resource_id_context):
        """Sets the physical_resource_id_context of this StackInstanceResourceDriftsSummary.


        :param physical_resource_id_context: The physical_resource_id_context of this StackInstanceResourceDriftsSummary.
        :type physical_resource_id_context: List
        """

        self._physical_resource_id_context = physical_resource_id_context

    @property
    def resource_type(self):
        """Gets the resource_type of this StackInstanceResourceDriftsSummary.


        :return: The resource_type of this StackInstanceResourceDriftsSummary.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this StackInstanceResourceDriftsSummary.


        :param resource_type: The resource_type of this StackInstanceResourceDriftsSummary.
        :type resource_type: str
        """
        if resource_type is None:
            raise ValueError("Invalid value for `resource_type`, must not be `None`")

        self._resource_type = resource_type

    @property
    def property_differences(self):
        """Gets the property_differences of this StackInstanceResourceDriftsSummary.


        :return: The property_differences of this StackInstanceResourceDriftsSummary.
        :rtype: List
        """
        return self._property_differences

    @property_differences.setter
    def property_differences(self, property_differences):
        """Sets the property_differences of this StackInstanceResourceDriftsSummary.


        :param property_differences: The property_differences of this StackInstanceResourceDriftsSummary.
        :type property_differences: List
        """

        self._property_differences = property_differences

    @property
    def stack_resource_drift_status(self):
        """Gets the stack_resource_drift_status of this StackInstanceResourceDriftsSummary.


        :return: The stack_resource_drift_status of this StackInstanceResourceDriftsSummary.
        :rtype: StackResourceDriftStatus
        """
        return self._stack_resource_drift_status

    @stack_resource_drift_status.setter
    def stack_resource_drift_status(self, stack_resource_drift_status):
        """Sets the stack_resource_drift_status of this StackInstanceResourceDriftsSummary.


        :param stack_resource_drift_status: The stack_resource_drift_status of this StackInstanceResourceDriftsSummary.
        :type stack_resource_drift_status: StackResourceDriftStatus
        """
        if stack_resource_drift_status is None:
            raise ValueError("Invalid value for `stack_resource_drift_status`, must not be `None`")

        self._stack_resource_drift_status = stack_resource_drift_status

    @property
    def timestamp(self):
        """Gets the timestamp of this StackInstanceResourceDriftsSummary.


        :return: The timestamp of this StackInstanceResourceDriftsSummary.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this StackInstanceResourceDriftsSummary.


        :param timestamp: The timestamp of this StackInstanceResourceDriftsSummary.
        :type timestamp: datetime
        """
        if timestamp is None:
            raise ValueError("Invalid value for `timestamp`, must not be `None`")

        self._timestamp = timestamp
