# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.call_as import CallAs
from openapi_server.models.stack_set_status import StackSetStatus
from openapi_server import util


class ListStackSetsInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_token: str=None, max_results: int=None, status: StackSetStatus=None, call_as: CallAs=None):
        """ListStackSetsInput - a model defined in OpenAPI

        :param next_token: The next_token of this ListStackSetsInput.
        :param max_results: The max_results of this ListStackSetsInput.
        :param status: The status of this ListStackSetsInput.
        :param call_as: The call_as of this ListStackSetsInput.
        """
        self.openapi_types = {
            'next_token': str,
            'max_results': int,
            'status': StackSetStatus,
            'call_as': CallAs
        }

        self.attribute_map = {
            'next_token': 'NextToken',
            'max_results': 'MaxResults',
            'status': 'Status',
            'call_as': 'CallAs'
        }

        self._next_token = next_token
        self._max_results = max_results
        self._status = status
        self._call_as = call_as

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListStackSetsInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListStackSetsInput of this ListStackSetsInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_token(self):
        """Gets the next_token of this ListStackSetsInput.


        :return: The next_token of this ListStackSetsInput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListStackSetsInput.


        :param next_token: The next_token of this ListStackSetsInput.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListStackSetsInput.


        :return: The max_results of this ListStackSetsInput.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListStackSetsInput.


        :param max_results: The max_results of this ListStackSetsInput.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def status(self):
        """Gets the status of this ListStackSetsInput.


        :return: The status of this ListStackSetsInput.
        :rtype: StackSetStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ListStackSetsInput.


        :param status: The status of this ListStackSetsInput.
        :type status: StackSetStatus
        """

        self._status = status

    @property
    def call_as(self):
        """Gets the call_as of this ListStackSetsInput.


        :return: The call_as of this ListStackSetsInput.
        :rtype: CallAs
        """
        return self._call_as

    @call_as.setter
    def call_as(self, call_as):
        """Sets the call_as of this ListStackSetsInput.


        :param call_as: The call_as of this ListStackSetsInput.
        :type call_as: CallAs
        """

        self._call_as = call_as
