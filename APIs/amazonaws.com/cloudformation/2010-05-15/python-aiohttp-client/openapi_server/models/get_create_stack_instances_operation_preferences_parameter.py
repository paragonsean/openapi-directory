# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.region_concurrency_type import RegionConcurrencyType
from openapi_server import util


class GETCreateStackInstancesOperationPreferencesParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, region_concurrency_type: RegionConcurrencyType=None, region_order: List=None, failure_tolerance_count: int=None, failure_tolerance_percentage: int=None, max_concurrent_count: int=None, max_concurrent_percentage: int=None):
        """GETCreateStackInstancesOperationPreferencesParameter - a model defined in OpenAPI

        :param region_concurrency_type: The region_concurrency_type of this GETCreateStackInstancesOperationPreferencesParameter.
        :param region_order: The region_order of this GETCreateStackInstancesOperationPreferencesParameter.
        :param failure_tolerance_count: The failure_tolerance_count of this GETCreateStackInstancesOperationPreferencesParameter.
        :param failure_tolerance_percentage: The failure_tolerance_percentage of this GETCreateStackInstancesOperationPreferencesParameter.
        :param max_concurrent_count: The max_concurrent_count of this GETCreateStackInstancesOperationPreferencesParameter.
        :param max_concurrent_percentage: The max_concurrent_percentage of this GETCreateStackInstancesOperationPreferencesParameter.
        """
        self.openapi_types = {
            'region_concurrency_type': RegionConcurrencyType,
            'region_order': List,
            'failure_tolerance_count': int,
            'failure_tolerance_percentage': int,
            'max_concurrent_count': int,
            'max_concurrent_percentage': int
        }

        self.attribute_map = {
            'region_concurrency_type': 'RegionConcurrencyType',
            'region_order': 'RegionOrder',
            'failure_tolerance_count': 'FailureToleranceCount',
            'failure_tolerance_percentage': 'FailureTolerancePercentage',
            'max_concurrent_count': 'MaxConcurrentCount',
            'max_concurrent_percentage': 'MaxConcurrentPercentage'
        }

        self._region_concurrency_type = region_concurrency_type
        self._region_order = region_order
        self._failure_tolerance_count = failure_tolerance_count
        self._failure_tolerance_percentage = failure_tolerance_percentage
        self._max_concurrent_count = max_concurrent_count
        self._max_concurrent_percentage = max_concurrent_percentage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GETCreateStackInstancesOperationPreferencesParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GET_CreateStackInstances_OperationPreferences_parameter of this GETCreateStackInstancesOperationPreferencesParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def region_concurrency_type(self):
        """Gets the region_concurrency_type of this GETCreateStackInstancesOperationPreferencesParameter.


        :return: The region_concurrency_type of this GETCreateStackInstancesOperationPreferencesParameter.
        :rtype: RegionConcurrencyType
        """
        return self._region_concurrency_type

    @region_concurrency_type.setter
    def region_concurrency_type(self, region_concurrency_type):
        """Sets the region_concurrency_type of this GETCreateStackInstancesOperationPreferencesParameter.


        :param region_concurrency_type: The region_concurrency_type of this GETCreateStackInstancesOperationPreferencesParameter.
        :type region_concurrency_type: RegionConcurrencyType
        """

        self._region_concurrency_type = region_concurrency_type

    @property
    def region_order(self):
        """Gets the region_order of this GETCreateStackInstancesOperationPreferencesParameter.


        :return: The region_order of this GETCreateStackInstancesOperationPreferencesParameter.
        :rtype: List
        """
        return self._region_order

    @region_order.setter
    def region_order(self, region_order):
        """Sets the region_order of this GETCreateStackInstancesOperationPreferencesParameter.


        :param region_order: The region_order of this GETCreateStackInstancesOperationPreferencesParameter.
        :type region_order: List
        """

        self._region_order = region_order

    @property
    def failure_tolerance_count(self):
        """Gets the failure_tolerance_count of this GETCreateStackInstancesOperationPreferencesParameter.


        :return: The failure_tolerance_count of this GETCreateStackInstancesOperationPreferencesParameter.
        :rtype: int
        """
        return self._failure_tolerance_count

    @failure_tolerance_count.setter
    def failure_tolerance_count(self, failure_tolerance_count):
        """Sets the failure_tolerance_count of this GETCreateStackInstancesOperationPreferencesParameter.


        :param failure_tolerance_count: The failure_tolerance_count of this GETCreateStackInstancesOperationPreferencesParameter.
        :type failure_tolerance_count: int
        """

        self._failure_tolerance_count = failure_tolerance_count

    @property
    def failure_tolerance_percentage(self):
        """Gets the failure_tolerance_percentage of this GETCreateStackInstancesOperationPreferencesParameter.


        :return: The failure_tolerance_percentage of this GETCreateStackInstancesOperationPreferencesParameter.
        :rtype: int
        """
        return self._failure_tolerance_percentage

    @failure_tolerance_percentage.setter
    def failure_tolerance_percentage(self, failure_tolerance_percentage):
        """Sets the failure_tolerance_percentage of this GETCreateStackInstancesOperationPreferencesParameter.


        :param failure_tolerance_percentage: The failure_tolerance_percentage of this GETCreateStackInstancesOperationPreferencesParameter.
        :type failure_tolerance_percentage: int
        """

        self._failure_tolerance_percentage = failure_tolerance_percentage

    @property
    def max_concurrent_count(self):
        """Gets the max_concurrent_count of this GETCreateStackInstancesOperationPreferencesParameter.


        :return: The max_concurrent_count of this GETCreateStackInstancesOperationPreferencesParameter.
        :rtype: int
        """
        return self._max_concurrent_count

    @max_concurrent_count.setter
    def max_concurrent_count(self, max_concurrent_count):
        """Sets the max_concurrent_count of this GETCreateStackInstancesOperationPreferencesParameter.


        :param max_concurrent_count: The max_concurrent_count of this GETCreateStackInstancesOperationPreferencesParameter.
        :type max_concurrent_count: int
        """

        self._max_concurrent_count = max_concurrent_count

    @property
    def max_concurrent_percentage(self):
        """Gets the max_concurrent_percentage of this GETCreateStackInstancesOperationPreferencesParameter.


        :return: The max_concurrent_percentage of this GETCreateStackInstancesOperationPreferencesParameter.
        :rtype: int
        """
        return self._max_concurrent_percentage

    @max_concurrent_percentage.setter
    def max_concurrent_percentage(self, max_concurrent_percentage):
        """Sets the max_concurrent_percentage of this GETCreateStackInstancesOperationPreferencesParameter.


        :param max_concurrent_percentage: The max_concurrent_percentage of this GETCreateStackInstancesOperationPreferencesParameter.
        :type max_concurrent_percentage: int
        """

        self._max_concurrent_percentage = max_concurrent_percentage
