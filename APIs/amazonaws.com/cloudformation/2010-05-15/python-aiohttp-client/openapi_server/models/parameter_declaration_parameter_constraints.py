# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ParameterDeclarationParameterConstraints(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_values: List=None):
        """ParameterDeclarationParameterConstraints - a model defined in OpenAPI

        :param allowed_values: The allowed_values of this ParameterDeclarationParameterConstraints.
        """
        self.openapi_types = {
            'allowed_values': List
        }

        self.attribute_map = {
            'allowed_values': 'AllowedValues'
        }

        self._allowed_values = allowed_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParameterDeclarationParameterConstraints':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParameterDeclaration_ParameterConstraints of this ParameterDeclarationParameterConstraints.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_values(self):
        """Gets the allowed_values of this ParameterDeclarationParameterConstraints.


        :return: The allowed_values of this ParameterDeclarationParameterConstraints.
        :rtype: List
        """
        return self._allowed_values

    @allowed_values.setter
    def allowed_values(self, allowed_values):
        """Sets the allowed_values of this ParameterDeclarationParameterConstraints.


        :param allowed_values: The allowed_values of this ParameterDeclarationParameterConstraints.
        :type allowed_values: List
        """

        self._allowed_values = allowed_values
