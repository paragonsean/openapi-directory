# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListStackResourcesInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stack_name: str=None, next_token: str=None):
        """ListStackResourcesInput - a model defined in OpenAPI

        :param stack_name: The stack_name of this ListStackResourcesInput.
        :param next_token: The next_token of this ListStackResourcesInput.
        """
        self.openapi_types = {
            'stack_name': str,
            'next_token': str
        }

        self.attribute_map = {
            'stack_name': 'StackName',
            'next_token': 'NextToken'
        }

        self._stack_name = stack_name
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListStackResourcesInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListStackResourcesInput of this ListStackResourcesInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stack_name(self):
        """Gets the stack_name of this ListStackResourcesInput.


        :return: The stack_name of this ListStackResourcesInput.
        :rtype: str
        """
        return self._stack_name

    @stack_name.setter
    def stack_name(self, stack_name):
        """Sets the stack_name of this ListStackResourcesInput.


        :param stack_name: The stack_name of this ListStackResourcesInput.
        :type stack_name: str
        """
        if stack_name is None:
            raise ValueError("Invalid value for `stack_name`, must not be `None`")

        self._stack_name = stack_name

    @property
    def next_token(self):
        """Gets the next_token of this ListStackResourcesInput.


        :return: The next_token of this ListStackResourcesInput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListStackResourcesInput.


        :param next_token: The next_token of this ListStackResourcesInput.
        :type next_token: str
        """

        self._next_token = next_token
