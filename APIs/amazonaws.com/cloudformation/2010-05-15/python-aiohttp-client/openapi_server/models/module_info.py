# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ModuleInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type_hierarchy: str=None, logical_id_hierarchy: str=None):
        """ModuleInfo - a model defined in OpenAPI

        :param type_hierarchy: The type_hierarchy of this ModuleInfo.
        :param logical_id_hierarchy: The logical_id_hierarchy of this ModuleInfo.
        """
        self.openapi_types = {
            'type_hierarchy': str,
            'logical_id_hierarchy': str
        }

        self.attribute_map = {
            'type_hierarchy': 'TypeHierarchy',
            'logical_id_hierarchy': 'LogicalIdHierarchy'
        }

        self._type_hierarchy = type_hierarchy
        self._logical_id_hierarchy = logical_id_hierarchy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModuleInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModuleInfo of this ModuleInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type_hierarchy(self):
        """Gets the type_hierarchy of this ModuleInfo.


        :return: The type_hierarchy of this ModuleInfo.
        :rtype: str
        """
        return self._type_hierarchy

    @type_hierarchy.setter
    def type_hierarchy(self, type_hierarchy):
        """Sets the type_hierarchy of this ModuleInfo.


        :param type_hierarchy: The type_hierarchy of this ModuleInfo.
        :type type_hierarchy: str
        """

        self._type_hierarchy = type_hierarchy

    @property
    def logical_id_hierarchy(self):
        """Gets the logical_id_hierarchy of this ModuleInfo.


        :return: The logical_id_hierarchy of this ModuleInfo.
        :rtype: str
        """
        return self._logical_id_hierarchy

    @logical_id_hierarchy.setter
    def logical_id_hierarchy(self, logical_id_hierarchy):
        """Sets the logical_id_hierarchy of this ModuleInfo.


        :param logical_id_hierarchy: The logical_id_hierarchy of this ModuleInfo.
        :type logical_id_hierarchy: str
        """

        self._logical_id_hierarchy = logical_id_hierarchy
