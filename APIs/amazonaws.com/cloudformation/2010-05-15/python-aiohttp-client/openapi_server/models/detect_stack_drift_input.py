# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DetectStackDriftInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stack_name: str=None, logical_resource_ids: List=None):
        """DetectStackDriftInput - a model defined in OpenAPI

        :param stack_name: The stack_name of this DetectStackDriftInput.
        :param logical_resource_ids: The logical_resource_ids of this DetectStackDriftInput.
        """
        self.openapi_types = {
            'stack_name': str,
            'logical_resource_ids': List
        }

        self.attribute_map = {
            'stack_name': 'StackName',
            'logical_resource_ids': 'LogicalResourceIds'
        }

        self._stack_name = stack_name
        self._logical_resource_ids = logical_resource_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DetectStackDriftInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DetectStackDriftInput of this DetectStackDriftInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stack_name(self):
        """Gets the stack_name of this DetectStackDriftInput.


        :return: The stack_name of this DetectStackDriftInput.
        :rtype: str
        """
        return self._stack_name

    @stack_name.setter
    def stack_name(self, stack_name):
        """Sets the stack_name of this DetectStackDriftInput.


        :param stack_name: The stack_name of this DetectStackDriftInput.
        :type stack_name: str
        """
        if stack_name is None:
            raise ValueError("Invalid value for `stack_name`, must not be `None`")

        self._stack_name = stack_name

    @property
    def logical_resource_ids(self):
        """Gets the logical_resource_ids of this DetectStackDriftInput.


        :return: The logical_resource_ids of this DetectStackDriftInput.
        :rtype: List
        """
        return self._logical_resource_ids

    @logical_resource_ids.setter
    def logical_resource_ids(self, logical_resource_ids):
        """Sets the logical_resource_ids of this DetectStackDriftInput.


        :param logical_resource_ids: The logical_resource_ids of this DetectStackDriftInput.
        :type logical_resource_ids: List
        """

        self._logical_resource_ids = logical_resource_ids
