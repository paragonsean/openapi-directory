# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResourceIdentifierSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_type: str=None, logical_resource_ids: List=None, resource_identifiers: List=None):
        """ResourceIdentifierSummary - a model defined in OpenAPI

        :param resource_type: The resource_type of this ResourceIdentifierSummary.
        :param logical_resource_ids: The logical_resource_ids of this ResourceIdentifierSummary.
        :param resource_identifiers: The resource_identifiers of this ResourceIdentifierSummary.
        """
        self.openapi_types = {
            'resource_type': str,
            'logical_resource_ids': List,
            'resource_identifiers': List
        }

        self.attribute_map = {
            'resource_type': 'ResourceType',
            'logical_resource_ids': 'LogicalResourceIds',
            'resource_identifiers': 'ResourceIdentifiers'
        }

        self._resource_type = resource_type
        self._logical_resource_ids = logical_resource_ids
        self._resource_identifiers = resource_identifiers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceIdentifierSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceIdentifierSummary of this ResourceIdentifierSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_type(self):
        """Gets the resource_type of this ResourceIdentifierSummary.


        :return: The resource_type of this ResourceIdentifierSummary.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this ResourceIdentifierSummary.


        :param resource_type: The resource_type of this ResourceIdentifierSummary.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def logical_resource_ids(self):
        """Gets the logical_resource_ids of this ResourceIdentifierSummary.


        :return: The logical_resource_ids of this ResourceIdentifierSummary.
        :rtype: List
        """
        return self._logical_resource_ids

    @logical_resource_ids.setter
    def logical_resource_ids(self, logical_resource_ids):
        """Sets the logical_resource_ids of this ResourceIdentifierSummary.


        :param logical_resource_ids: The logical_resource_ids of this ResourceIdentifierSummary.
        :type logical_resource_ids: List
        """

        self._logical_resource_ids = logical_resource_ids

    @property
    def resource_identifiers(self):
        """Gets the resource_identifiers of this ResourceIdentifierSummary.


        :return: The resource_identifiers of this ResourceIdentifierSummary.
        :rtype: List
        """
        return self._resource_identifiers

    @resource_identifiers.setter
    def resource_identifiers(self, resource_identifiers):
        """Sets the resource_identifiers of this ResourceIdentifierSummary.


        :param resource_identifiers: The resource_identifiers of this ResourceIdentifierSummary.
        :type resource_identifiers: List
        """

        self._resource_identifiers = resource_identifiers
