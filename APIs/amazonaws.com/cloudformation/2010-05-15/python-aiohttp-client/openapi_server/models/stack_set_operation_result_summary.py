# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stack_set_operation_result_status import StackSetOperationResultStatus
from openapi_server.models.stack_set_operation_result_summary_account_gate_result import StackSetOperationResultSummaryAccountGateResult
from openapi_server import util


class StackSetOperationResultSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account: str=None, region: str=None, status: StackSetOperationResultStatus=None, status_reason: str=None, account_gate_result: StackSetOperationResultSummaryAccountGateResult=None, organizational_unit_id: str=None):
        """StackSetOperationResultSummary - a model defined in OpenAPI

        :param account: The account of this StackSetOperationResultSummary.
        :param region: The region of this StackSetOperationResultSummary.
        :param status: The status of this StackSetOperationResultSummary.
        :param status_reason: The status_reason of this StackSetOperationResultSummary.
        :param account_gate_result: The account_gate_result of this StackSetOperationResultSummary.
        :param organizational_unit_id: The organizational_unit_id of this StackSetOperationResultSummary.
        """
        self.openapi_types = {
            'account': str,
            'region': str,
            'status': StackSetOperationResultStatus,
            'status_reason': str,
            'account_gate_result': StackSetOperationResultSummaryAccountGateResult,
            'organizational_unit_id': str
        }

        self.attribute_map = {
            'account': 'Account',
            'region': 'Region',
            'status': 'Status',
            'status_reason': 'StatusReason',
            'account_gate_result': 'AccountGateResult',
            'organizational_unit_id': 'OrganizationalUnitId'
        }

        self._account = account
        self._region = region
        self._status = status
        self._status_reason = status_reason
        self._account_gate_result = account_gate_result
        self._organizational_unit_id = organizational_unit_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StackSetOperationResultSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StackSetOperationResultSummary of this StackSetOperationResultSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account(self):
        """Gets the account of this StackSetOperationResultSummary.


        :return: The account of this StackSetOperationResultSummary.
        :rtype: str
        """
        return self._account

    @account.setter
    def account(self, account):
        """Sets the account of this StackSetOperationResultSummary.


        :param account: The account of this StackSetOperationResultSummary.
        :type account: str
        """

        self._account = account

    @property
    def region(self):
        """Gets the region of this StackSetOperationResultSummary.


        :return: The region of this StackSetOperationResultSummary.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this StackSetOperationResultSummary.


        :param region: The region of this StackSetOperationResultSummary.
        :type region: str
        """

        self._region = region

    @property
    def status(self):
        """Gets the status of this StackSetOperationResultSummary.


        :return: The status of this StackSetOperationResultSummary.
        :rtype: StackSetOperationResultStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this StackSetOperationResultSummary.


        :param status: The status of this StackSetOperationResultSummary.
        :type status: StackSetOperationResultStatus
        """

        self._status = status

    @property
    def status_reason(self):
        """Gets the status_reason of this StackSetOperationResultSummary.


        :return: The status_reason of this StackSetOperationResultSummary.
        :rtype: str
        """
        return self._status_reason

    @status_reason.setter
    def status_reason(self, status_reason):
        """Sets the status_reason of this StackSetOperationResultSummary.


        :param status_reason: The status_reason of this StackSetOperationResultSummary.
        :type status_reason: str
        """

        self._status_reason = status_reason

    @property
    def account_gate_result(self):
        """Gets the account_gate_result of this StackSetOperationResultSummary.


        :return: The account_gate_result of this StackSetOperationResultSummary.
        :rtype: StackSetOperationResultSummaryAccountGateResult
        """
        return self._account_gate_result

    @account_gate_result.setter
    def account_gate_result(self, account_gate_result):
        """Sets the account_gate_result of this StackSetOperationResultSummary.


        :param account_gate_result: The account_gate_result of this StackSetOperationResultSummary.
        :type account_gate_result: StackSetOperationResultSummaryAccountGateResult
        """

        self._account_gate_result = account_gate_result

    @property
    def organizational_unit_id(self):
        """Gets the organizational_unit_id of this StackSetOperationResultSummary.


        :return: The organizational_unit_id of this StackSetOperationResultSummary.
        :rtype: str
        """
        return self._organizational_unit_id

    @organizational_unit_id.setter
    def organizational_unit_id(self, organizational_unit_id):
        """Sets the organizational_unit_id of this StackSetOperationResultSummary.


        :param organizational_unit_id: The organizational_unit_id of this StackSetOperationResultSummary.
        :type organizational_unit_id: str
        """

        self._organizational_unit_id = organizational_unit_id
