# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_stack_set_output_stack_set import DescribeStackSetOutputStackSet
from openapi_server import util


class DescribeStackSetOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stack_set: DescribeStackSetOutputStackSet=None):
        """DescribeStackSetOutput - a model defined in OpenAPI

        :param stack_set: The stack_set of this DescribeStackSetOutput.
        """
        self.openapi_types = {
            'stack_set': DescribeStackSetOutputStackSet
        }

        self.attribute_map = {
            'stack_set': 'StackSet'
        }

        self._stack_set = stack_set

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeStackSetOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeStackSetOutput of this DescribeStackSetOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stack_set(self):
        """Gets the stack_set of this DescribeStackSetOutput.


        :return: The stack_set of this DescribeStackSetOutput.
        :rtype: DescribeStackSetOutputStackSet
        """
        return self._stack_set

    @stack_set.setter
    def stack_set(self, stack_set):
        """Sets the stack_set of this DescribeStackSetOutput.


        :param stack_set: The stack_set of this DescribeStackSetOutput.
        :type stack_set: DescribeStackSetOutputStackSet
        """

        self._stack_set = stack_set
