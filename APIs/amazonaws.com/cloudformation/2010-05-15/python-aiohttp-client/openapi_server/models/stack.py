# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_change_set_output_rollback_configuration import DescribeChangeSetOutputRollbackConfiguration
from openapi_server.models.stack_drift_information import StackDriftInformation
from openapi_server.models.stack_status import StackStatus
from openapi_server import util


class Stack(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stack_id: str=None, stack_name: str=None, change_set_id: str=None, description: str=None, parameters: List=None, creation_time: datetime=None, deletion_time: datetime=None, last_updated_time: datetime=None, rollback_configuration: DescribeChangeSetOutputRollbackConfiguration=None, stack_status: StackStatus=None, stack_status_reason: str=None, disable_rollback: bool=None, notification_arns: List=None, timeout_in_minutes: int=None, capabilities: List=None, outputs: List=None, role_arn: str=None, tags: List=None, enable_termination_protection: bool=None, parent_id: str=None, root_id: str=None, drift_information: StackDriftInformation=None, retain_except_on_create: bool=None):
        """Stack - a model defined in OpenAPI

        :param stack_id: The stack_id of this Stack.
        :param stack_name: The stack_name of this Stack.
        :param change_set_id: The change_set_id of this Stack.
        :param description: The description of this Stack.
        :param parameters: The parameters of this Stack.
        :param creation_time: The creation_time of this Stack.
        :param deletion_time: The deletion_time of this Stack.
        :param last_updated_time: The last_updated_time of this Stack.
        :param rollback_configuration: The rollback_configuration of this Stack.
        :param stack_status: The stack_status of this Stack.
        :param stack_status_reason: The stack_status_reason of this Stack.
        :param disable_rollback: The disable_rollback of this Stack.
        :param notification_arns: The notification_arns of this Stack.
        :param timeout_in_minutes: The timeout_in_minutes of this Stack.
        :param capabilities: The capabilities of this Stack.
        :param outputs: The outputs of this Stack.
        :param role_arn: The role_arn of this Stack.
        :param tags: The tags of this Stack.
        :param enable_termination_protection: The enable_termination_protection of this Stack.
        :param parent_id: The parent_id of this Stack.
        :param root_id: The root_id of this Stack.
        :param drift_information: The drift_information of this Stack.
        :param retain_except_on_create: The retain_except_on_create of this Stack.
        """
        self.openapi_types = {
            'stack_id': str,
            'stack_name': str,
            'change_set_id': str,
            'description': str,
            'parameters': List,
            'creation_time': datetime,
            'deletion_time': datetime,
            'last_updated_time': datetime,
            'rollback_configuration': DescribeChangeSetOutputRollbackConfiguration,
            'stack_status': StackStatus,
            'stack_status_reason': str,
            'disable_rollback': bool,
            'notification_arns': List,
            'timeout_in_minutes': int,
            'capabilities': List,
            'outputs': List,
            'role_arn': str,
            'tags': List,
            'enable_termination_protection': bool,
            'parent_id': str,
            'root_id': str,
            'drift_information': StackDriftInformation,
            'retain_except_on_create': bool
        }

        self.attribute_map = {
            'stack_id': 'StackId',
            'stack_name': 'StackName',
            'change_set_id': 'ChangeSetId',
            'description': 'Description',
            'parameters': 'Parameters',
            'creation_time': 'CreationTime',
            'deletion_time': 'DeletionTime',
            'last_updated_time': 'LastUpdatedTime',
            'rollback_configuration': 'RollbackConfiguration',
            'stack_status': 'StackStatus',
            'stack_status_reason': 'StackStatusReason',
            'disable_rollback': 'DisableRollback',
            'notification_arns': 'NotificationARNs',
            'timeout_in_minutes': 'TimeoutInMinutes',
            'capabilities': 'Capabilities',
            'outputs': 'Outputs',
            'role_arn': 'RoleARN',
            'tags': 'Tags',
            'enable_termination_protection': 'EnableTerminationProtection',
            'parent_id': 'ParentId',
            'root_id': 'RootId',
            'drift_information': 'DriftInformation',
            'retain_except_on_create': 'RetainExceptOnCreate'
        }

        self._stack_id = stack_id
        self._stack_name = stack_name
        self._change_set_id = change_set_id
        self._description = description
        self._parameters = parameters
        self._creation_time = creation_time
        self._deletion_time = deletion_time
        self._last_updated_time = last_updated_time
        self._rollback_configuration = rollback_configuration
        self._stack_status = stack_status
        self._stack_status_reason = stack_status_reason
        self._disable_rollback = disable_rollback
        self._notification_arns = notification_arns
        self._timeout_in_minutes = timeout_in_minutes
        self._capabilities = capabilities
        self._outputs = outputs
        self._role_arn = role_arn
        self._tags = tags
        self._enable_termination_protection = enable_termination_protection
        self._parent_id = parent_id
        self._root_id = root_id
        self._drift_information = drift_information
        self._retain_except_on_create = retain_except_on_create

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Stack':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Stack of this Stack.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stack_id(self):
        """Gets the stack_id of this Stack.


        :return: The stack_id of this Stack.
        :rtype: str
        """
        return self._stack_id

    @stack_id.setter
    def stack_id(self, stack_id):
        """Sets the stack_id of this Stack.


        :param stack_id: The stack_id of this Stack.
        :type stack_id: str
        """

        self._stack_id = stack_id

    @property
    def stack_name(self):
        """Gets the stack_name of this Stack.


        :return: The stack_name of this Stack.
        :rtype: str
        """
        return self._stack_name

    @stack_name.setter
    def stack_name(self, stack_name):
        """Sets the stack_name of this Stack.


        :param stack_name: The stack_name of this Stack.
        :type stack_name: str
        """
        if stack_name is None:
            raise ValueError("Invalid value for `stack_name`, must not be `None`")

        self._stack_name = stack_name

    @property
    def change_set_id(self):
        """Gets the change_set_id of this Stack.


        :return: The change_set_id of this Stack.
        :rtype: str
        """
        return self._change_set_id

    @change_set_id.setter
    def change_set_id(self, change_set_id):
        """Sets the change_set_id of this Stack.


        :param change_set_id: The change_set_id of this Stack.
        :type change_set_id: str
        """

        self._change_set_id = change_set_id

    @property
    def description(self):
        """Gets the description of this Stack.


        :return: The description of this Stack.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Stack.


        :param description: The description of this Stack.
        :type description: str
        """

        self._description = description

    @property
    def parameters(self):
        """Gets the parameters of this Stack.


        :return: The parameters of this Stack.
        :rtype: List
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this Stack.


        :param parameters: The parameters of this Stack.
        :type parameters: List
        """

        self._parameters = parameters

    @property
    def creation_time(self):
        """Gets the creation_time of this Stack.


        :return: The creation_time of this Stack.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this Stack.


        :param creation_time: The creation_time of this Stack.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time

    @property
    def deletion_time(self):
        """Gets the deletion_time of this Stack.


        :return: The deletion_time of this Stack.
        :rtype: datetime
        """
        return self._deletion_time

    @deletion_time.setter
    def deletion_time(self, deletion_time):
        """Sets the deletion_time of this Stack.


        :param deletion_time: The deletion_time of this Stack.
        :type deletion_time: datetime
        """

        self._deletion_time = deletion_time

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this Stack.


        :return: The last_updated_time of this Stack.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this Stack.


        :param last_updated_time: The last_updated_time of this Stack.
        :type last_updated_time: datetime
        """

        self._last_updated_time = last_updated_time

    @property
    def rollback_configuration(self):
        """Gets the rollback_configuration of this Stack.


        :return: The rollback_configuration of this Stack.
        :rtype: DescribeChangeSetOutputRollbackConfiguration
        """
        return self._rollback_configuration

    @rollback_configuration.setter
    def rollback_configuration(self, rollback_configuration):
        """Sets the rollback_configuration of this Stack.


        :param rollback_configuration: The rollback_configuration of this Stack.
        :type rollback_configuration: DescribeChangeSetOutputRollbackConfiguration
        """

        self._rollback_configuration = rollback_configuration

    @property
    def stack_status(self):
        """Gets the stack_status of this Stack.


        :return: The stack_status of this Stack.
        :rtype: StackStatus
        """
        return self._stack_status

    @stack_status.setter
    def stack_status(self, stack_status):
        """Sets the stack_status of this Stack.


        :param stack_status: The stack_status of this Stack.
        :type stack_status: StackStatus
        """
        if stack_status is None:
            raise ValueError("Invalid value for `stack_status`, must not be `None`")

        self._stack_status = stack_status

    @property
    def stack_status_reason(self):
        """Gets the stack_status_reason of this Stack.


        :return: The stack_status_reason of this Stack.
        :rtype: str
        """
        return self._stack_status_reason

    @stack_status_reason.setter
    def stack_status_reason(self, stack_status_reason):
        """Sets the stack_status_reason of this Stack.


        :param stack_status_reason: The stack_status_reason of this Stack.
        :type stack_status_reason: str
        """

        self._stack_status_reason = stack_status_reason

    @property
    def disable_rollback(self):
        """Gets the disable_rollback of this Stack.


        :return: The disable_rollback of this Stack.
        :rtype: bool
        """
        return self._disable_rollback

    @disable_rollback.setter
    def disable_rollback(self, disable_rollback):
        """Sets the disable_rollback of this Stack.


        :param disable_rollback: The disable_rollback of this Stack.
        :type disable_rollback: bool
        """

        self._disable_rollback = disable_rollback

    @property
    def notification_arns(self):
        """Gets the notification_arns of this Stack.


        :return: The notification_arns of this Stack.
        :rtype: List
        """
        return self._notification_arns

    @notification_arns.setter
    def notification_arns(self, notification_arns):
        """Sets the notification_arns of this Stack.


        :param notification_arns: The notification_arns of this Stack.
        :type notification_arns: List
        """

        self._notification_arns = notification_arns

    @property
    def timeout_in_minutes(self):
        """Gets the timeout_in_minutes of this Stack.


        :return: The timeout_in_minutes of this Stack.
        :rtype: int
        """
        return self._timeout_in_minutes

    @timeout_in_minutes.setter
    def timeout_in_minutes(self, timeout_in_minutes):
        """Sets the timeout_in_minutes of this Stack.


        :param timeout_in_minutes: The timeout_in_minutes of this Stack.
        :type timeout_in_minutes: int
        """

        self._timeout_in_minutes = timeout_in_minutes

    @property
    def capabilities(self):
        """Gets the capabilities of this Stack.


        :return: The capabilities of this Stack.
        :rtype: List
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities):
        """Sets the capabilities of this Stack.


        :param capabilities: The capabilities of this Stack.
        :type capabilities: List
        """

        self._capabilities = capabilities

    @property
    def outputs(self):
        """Gets the outputs of this Stack.


        :return: The outputs of this Stack.
        :rtype: List
        """
        return self._outputs

    @outputs.setter
    def outputs(self, outputs):
        """Sets the outputs of this Stack.


        :param outputs: The outputs of this Stack.
        :type outputs: List
        """

        self._outputs = outputs

    @property
    def role_arn(self):
        """Gets the role_arn of this Stack.


        :return: The role_arn of this Stack.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this Stack.


        :param role_arn: The role_arn of this Stack.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def tags(self):
        """Gets the tags of this Stack.


        :return: The tags of this Stack.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Stack.


        :param tags: The tags of this Stack.
        :type tags: List
        """

        self._tags = tags

    @property
    def enable_termination_protection(self):
        """Gets the enable_termination_protection of this Stack.


        :return: The enable_termination_protection of this Stack.
        :rtype: bool
        """
        return self._enable_termination_protection

    @enable_termination_protection.setter
    def enable_termination_protection(self, enable_termination_protection):
        """Sets the enable_termination_protection of this Stack.


        :param enable_termination_protection: The enable_termination_protection of this Stack.
        :type enable_termination_protection: bool
        """

        self._enable_termination_protection = enable_termination_protection

    @property
    def parent_id(self):
        """Gets the parent_id of this Stack.


        :return: The parent_id of this Stack.
        :rtype: str
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this Stack.


        :param parent_id: The parent_id of this Stack.
        :type parent_id: str
        """

        self._parent_id = parent_id

    @property
    def root_id(self):
        """Gets the root_id of this Stack.


        :return: The root_id of this Stack.
        :rtype: str
        """
        return self._root_id

    @root_id.setter
    def root_id(self, root_id):
        """Sets the root_id of this Stack.


        :param root_id: The root_id of this Stack.
        :type root_id: str
        """

        self._root_id = root_id

    @property
    def drift_information(self):
        """Gets the drift_information of this Stack.


        :return: The drift_information of this Stack.
        :rtype: StackDriftInformation
        """
        return self._drift_information

    @drift_information.setter
    def drift_information(self, drift_information):
        """Sets the drift_information of this Stack.


        :param drift_information: The drift_information of this Stack.
        :type drift_information: StackDriftInformation
        """

        self._drift_information = drift_information

    @property
    def retain_except_on_create(self):
        """Gets the retain_except_on_create of this Stack.


        :return: The retain_except_on_create of this Stack.
        :rtype: bool
        """
        return self._retain_except_on_create

    @retain_except_on_create.setter
    def retain_except_on_create(self, retain_except_on_create):
        """Sets the retain_except_on_create of this Stack.


        :param retain_except_on_create: The retain_except_on_create of this Stack.
        :type retain_except_on_create: bool
        """

        self._retain_except_on_create = retain_except_on_create
