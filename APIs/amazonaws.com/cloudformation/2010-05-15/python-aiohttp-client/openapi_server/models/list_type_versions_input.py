# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deprecated_status import DeprecatedStatus
from openapi_server.models.registry_type import RegistryType
from openapi_server import util


class ListTypeVersionsInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: RegistryType=None, type_name: str=None, arn: str=None, max_results: int=None, next_token: str=None, deprecated_status: DeprecatedStatus=None, publisher_id: str=None):
        """ListTypeVersionsInput - a model defined in OpenAPI

        :param type: The type of this ListTypeVersionsInput.
        :param type_name: The type_name of this ListTypeVersionsInput.
        :param arn: The arn of this ListTypeVersionsInput.
        :param max_results: The max_results of this ListTypeVersionsInput.
        :param next_token: The next_token of this ListTypeVersionsInput.
        :param deprecated_status: The deprecated_status of this ListTypeVersionsInput.
        :param publisher_id: The publisher_id of this ListTypeVersionsInput.
        """
        self.openapi_types = {
            'type': RegistryType,
            'type_name': str,
            'arn': str,
            'max_results': int,
            'next_token': str,
            'deprecated_status': DeprecatedStatus,
            'publisher_id': str
        }

        self.attribute_map = {
            'type': 'Type',
            'type_name': 'TypeName',
            'arn': 'Arn',
            'max_results': 'MaxResults',
            'next_token': 'NextToken',
            'deprecated_status': 'DeprecatedStatus',
            'publisher_id': 'PublisherId'
        }

        self._type = type
        self._type_name = type_name
        self._arn = arn
        self._max_results = max_results
        self._next_token = next_token
        self._deprecated_status = deprecated_status
        self._publisher_id = publisher_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListTypeVersionsInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListTypeVersionsInput of this ListTypeVersionsInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this ListTypeVersionsInput.


        :return: The type of this ListTypeVersionsInput.
        :rtype: RegistryType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ListTypeVersionsInput.


        :param type: The type of this ListTypeVersionsInput.
        :type type: RegistryType
        """

        self._type = type

    @property
    def type_name(self):
        """Gets the type_name of this ListTypeVersionsInput.


        :return: The type_name of this ListTypeVersionsInput.
        :rtype: str
        """
        return self._type_name

    @type_name.setter
    def type_name(self, type_name):
        """Sets the type_name of this ListTypeVersionsInput.


        :param type_name: The type_name of this ListTypeVersionsInput.
        :type type_name: str
        """

        self._type_name = type_name

    @property
    def arn(self):
        """Gets the arn of this ListTypeVersionsInput.


        :return: The arn of this ListTypeVersionsInput.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this ListTypeVersionsInput.


        :param arn: The arn of this ListTypeVersionsInput.
        :type arn: str
        """

        self._arn = arn

    @property
    def max_results(self):
        """Gets the max_results of this ListTypeVersionsInput.


        :return: The max_results of this ListTypeVersionsInput.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListTypeVersionsInput.


        :param max_results: The max_results of this ListTypeVersionsInput.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this ListTypeVersionsInput.


        :return: The next_token of this ListTypeVersionsInput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListTypeVersionsInput.


        :param next_token: The next_token of this ListTypeVersionsInput.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def deprecated_status(self):
        """Gets the deprecated_status of this ListTypeVersionsInput.


        :return: The deprecated_status of this ListTypeVersionsInput.
        :rtype: DeprecatedStatus
        """
        return self._deprecated_status

    @deprecated_status.setter
    def deprecated_status(self, deprecated_status):
        """Sets the deprecated_status of this ListTypeVersionsInput.


        :param deprecated_status: The deprecated_status of this ListTypeVersionsInput.
        :type deprecated_status: DeprecatedStatus
        """

        self._deprecated_status = deprecated_status

    @property
    def publisher_id(self):
        """Gets the publisher_id of this ListTypeVersionsInput.


        :return: The publisher_id of this ListTypeVersionsInput.
        :rtype: str
        """
        return self._publisher_id

    @publisher_id.setter
    def publisher_id(self, publisher_id):
        """Sets the publisher_id of this ListTypeVersionsInput.


        :param publisher_id: The publisher_id of this ListTypeVersionsInput.
        :type publisher_id: str
        """

        self._publisher_id = publisher_id
