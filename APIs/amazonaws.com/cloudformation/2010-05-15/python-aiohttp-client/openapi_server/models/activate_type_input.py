# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.activate_type_input_logging_config import ActivateTypeInputLoggingConfig
from openapi_server.models.third_party_type import ThirdPartyType
from openapi_server.models.version_bump import VersionBump
from openapi_server import util


class ActivateTypeInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: ThirdPartyType=None, public_type_arn: str=None, publisher_id: str=None, type_name: str=None, type_name_alias: str=None, auto_update: bool=None, logging_config: ActivateTypeInputLoggingConfig=None, execution_role_arn: str=None, version_bump: VersionBump=None, major_version: int=None):
        """ActivateTypeInput - a model defined in OpenAPI

        :param type: The type of this ActivateTypeInput.
        :param public_type_arn: The public_type_arn of this ActivateTypeInput.
        :param publisher_id: The publisher_id of this ActivateTypeInput.
        :param type_name: The type_name of this ActivateTypeInput.
        :param type_name_alias: The type_name_alias of this ActivateTypeInput.
        :param auto_update: The auto_update of this ActivateTypeInput.
        :param logging_config: The logging_config of this ActivateTypeInput.
        :param execution_role_arn: The execution_role_arn of this ActivateTypeInput.
        :param version_bump: The version_bump of this ActivateTypeInput.
        :param major_version: The major_version of this ActivateTypeInput.
        """
        self.openapi_types = {
            'type': ThirdPartyType,
            'public_type_arn': str,
            'publisher_id': str,
            'type_name': str,
            'type_name_alias': str,
            'auto_update': bool,
            'logging_config': ActivateTypeInputLoggingConfig,
            'execution_role_arn': str,
            'version_bump': VersionBump,
            'major_version': int
        }

        self.attribute_map = {
            'type': 'Type',
            'public_type_arn': 'PublicTypeArn',
            'publisher_id': 'PublisherId',
            'type_name': 'TypeName',
            'type_name_alias': 'TypeNameAlias',
            'auto_update': 'AutoUpdate',
            'logging_config': 'LoggingConfig',
            'execution_role_arn': 'ExecutionRoleArn',
            'version_bump': 'VersionBump',
            'major_version': 'MajorVersion'
        }

        self._type = type
        self._public_type_arn = public_type_arn
        self._publisher_id = publisher_id
        self._type_name = type_name
        self._type_name_alias = type_name_alias
        self._auto_update = auto_update
        self._logging_config = logging_config
        self._execution_role_arn = execution_role_arn
        self._version_bump = version_bump
        self._major_version = major_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivateTypeInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivateTypeInput of this ActivateTypeInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this ActivateTypeInput.


        :return: The type of this ActivateTypeInput.
        :rtype: ThirdPartyType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ActivateTypeInput.


        :param type: The type of this ActivateTypeInput.
        :type type: ThirdPartyType
        """

        self._type = type

    @property
    def public_type_arn(self):
        """Gets the public_type_arn of this ActivateTypeInput.


        :return: The public_type_arn of this ActivateTypeInput.
        :rtype: str
        """
        return self._public_type_arn

    @public_type_arn.setter
    def public_type_arn(self, public_type_arn):
        """Sets the public_type_arn of this ActivateTypeInput.


        :param public_type_arn: The public_type_arn of this ActivateTypeInput.
        :type public_type_arn: str
        """

        self._public_type_arn = public_type_arn

    @property
    def publisher_id(self):
        """Gets the publisher_id of this ActivateTypeInput.


        :return: The publisher_id of this ActivateTypeInput.
        :rtype: str
        """
        return self._publisher_id

    @publisher_id.setter
    def publisher_id(self, publisher_id):
        """Sets the publisher_id of this ActivateTypeInput.


        :param publisher_id: The publisher_id of this ActivateTypeInput.
        :type publisher_id: str
        """

        self._publisher_id = publisher_id

    @property
    def type_name(self):
        """Gets the type_name of this ActivateTypeInput.


        :return: The type_name of this ActivateTypeInput.
        :rtype: str
        """
        return self._type_name

    @type_name.setter
    def type_name(self, type_name):
        """Sets the type_name of this ActivateTypeInput.


        :param type_name: The type_name of this ActivateTypeInput.
        :type type_name: str
        """

        self._type_name = type_name

    @property
    def type_name_alias(self):
        """Gets the type_name_alias of this ActivateTypeInput.


        :return: The type_name_alias of this ActivateTypeInput.
        :rtype: str
        """
        return self._type_name_alias

    @type_name_alias.setter
    def type_name_alias(self, type_name_alias):
        """Sets the type_name_alias of this ActivateTypeInput.


        :param type_name_alias: The type_name_alias of this ActivateTypeInput.
        :type type_name_alias: str
        """

        self._type_name_alias = type_name_alias

    @property
    def auto_update(self):
        """Gets the auto_update of this ActivateTypeInput.


        :return: The auto_update of this ActivateTypeInput.
        :rtype: bool
        """
        return self._auto_update

    @auto_update.setter
    def auto_update(self, auto_update):
        """Sets the auto_update of this ActivateTypeInput.


        :param auto_update: The auto_update of this ActivateTypeInput.
        :type auto_update: bool
        """

        self._auto_update = auto_update

    @property
    def logging_config(self):
        """Gets the logging_config of this ActivateTypeInput.


        :return: The logging_config of this ActivateTypeInput.
        :rtype: ActivateTypeInputLoggingConfig
        """
        return self._logging_config

    @logging_config.setter
    def logging_config(self, logging_config):
        """Sets the logging_config of this ActivateTypeInput.


        :param logging_config: The logging_config of this ActivateTypeInput.
        :type logging_config: ActivateTypeInputLoggingConfig
        """

        self._logging_config = logging_config

    @property
    def execution_role_arn(self):
        """Gets the execution_role_arn of this ActivateTypeInput.


        :return: The execution_role_arn of this ActivateTypeInput.
        :rtype: str
        """
        return self._execution_role_arn

    @execution_role_arn.setter
    def execution_role_arn(self, execution_role_arn):
        """Sets the execution_role_arn of this ActivateTypeInput.


        :param execution_role_arn: The execution_role_arn of this ActivateTypeInput.
        :type execution_role_arn: str
        """

        self._execution_role_arn = execution_role_arn

    @property
    def version_bump(self):
        """Gets the version_bump of this ActivateTypeInput.


        :return: The version_bump of this ActivateTypeInput.
        :rtype: VersionBump
        """
        return self._version_bump

    @version_bump.setter
    def version_bump(self, version_bump):
        """Sets the version_bump of this ActivateTypeInput.


        :param version_bump: The version_bump of this ActivateTypeInput.
        :type version_bump: VersionBump
        """

        self._version_bump = version_bump

    @property
    def major_version(self):
        """Gets the major_version of this ActivateTypeInput.


        :return: The major_version of this ActivateTypeInput.
        :rtype: int
        """
        return self._major_version

    @major_version.setter
    def major_version(self, major_version):
        """Sets the major_version of this ActivateTypeInput.


        :param major_version: The major_version of this ActivateTypeInput.
        :type major_version: int
        """

        self._major_version = major_version
