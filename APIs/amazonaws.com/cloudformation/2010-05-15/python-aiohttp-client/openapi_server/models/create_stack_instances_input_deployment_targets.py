# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_filter_type import AccountFilterType
from openapi_server import util


class CreateStackInstancesInputDeploymentTargets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accounts: List=None, accounts_url: str=None, organizational_unit_ids: List=None, account_filter_type: AccountFilterType=None):
        """CreateStackInstancesInputDeploymentTargets - a model defined in OpenAPI

        :param accounts: The accounts of this CreateStackInstancesInputDeploymentTargets.
        :param accounts_url: The accounts_url of this CreateStackInstancesInputDeploymentTargets.
        :param organizational_unit_ids: The organizational_unit_ids of this CreateStackInstancesInputDeploymentTargets.
        :param account_filter_type: The account_filter_type of this CreateStackInstancesInputDeploymentTargets.
        """
        self.openapi_types = {
            'accounts': List,
            'accounts_url': str,
            'organizational_unit_ids': List,
            'account_filter_type': AccountFilterType
        }

        self.attribute_map = {
            'accounts': 'Accounts',
            'accounts_url': 'AccountsUrl',
            'organizational_unit_ids': 'OrganizationalUnitIds',
            'account_filter_type': 'AccountFilterType'
        }

        self._accounts = accounts
        self._accounts_url = accounts_url
        self._organizational_unit_ids = organizational_unit_ids
        self._account_filter_type = account_filter_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateStackInstancesInputDeploymentTargets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateStackInstancesInput_DeploymentTargets of this CreateStackInstancesInputDeploymentTargets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accounts(self):
        """Gets the accounts of this CreateStackInstancesInputDeploymentTargets.


        :return: The accounts of this CreateStackInstancesInputDeploymentTargets.
        :rtype: List
        """
        return self._accounts

    @accounts.setter
    def accounts(self, accounts):
        """Sets the accounts of this CreateStackInstancesInputDeploymentTargets.


        :param accounts: The accounts of this CreateStackInstancesInputDeploymentTargets.
        :type accounts: List
        """

        self._accounts = accounts

    @property
    def accounts_url(self):
        """Gets the accounts_url of this CreateStackInstancesInputDeploymentTargets.


        :return: The accounts_url of this CreateStackInstancesInputDeploymentTargets.
        :rtype: str
        """
        return self._accounts_url

    @accounts_url.setter
    def accounts_url(self, accounts_url):
        """Sets the accounts_url of this CreateStackInstancesInputDeploymentTargets.


        :param accounts_url: The accounts_url of this CreateStackInstancesInputDeploymentTargets.
        :type accounts_url: str
        """

        self._accounts_url = accounts_url

    @property
    def organizational_unit_ids(self):
        """Gets the organizational_unit_ids of this CreateStackInstancesInputDeploymentTargets.


        :return: The organizational_unit_ids of this CreateStackInstancesInputDeploymentTargets.
        :rtype: List
        """
        return self._organizational_unit_ids

    @organizational_unit_ids.setter
    def organizational_unit_ids(self, organizational_unit_ids):
        """Sets the organizational_unit_ids of this CreateStackInstancesInputDeploymentTargets.


        :param organizational_unit_ids: The organizational_unit_ids of this CreateStackInstancesInputDeploymentTargets.
        :type organizational_unit_ids: List
        """

        self._organizational_unit_ids = organizational_unit_ids

    @property
    def account_filter_type(self):
        """Gets the account_filter_type of this CreateStackInstancesInputDeploymentTargets.


        :return: The account_filter_type of this CreateStackInstancesInputDeploymentTargets.
        :rtype: AccountFilterType
        """
        return self._account_filter_type

    @account_filter_type.setter
    def account_filter_type(self, account_filter_type):
        """Sets the account_filter_type of this CreateStackInstancesInputDeploymentTargets.


        :param account_filter_type: The account_filter_type of this CreateStackInstancesInputDeploymentTargets.
        :type account_filter_type: AccountFilterType
        """

        self._account_filter_type = account_filter_type
