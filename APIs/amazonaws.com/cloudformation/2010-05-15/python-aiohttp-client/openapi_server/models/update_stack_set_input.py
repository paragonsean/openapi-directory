# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.call_as import CallAs
from openapi_server.models.create_stack_instances_input_operation_preferences import CreateStackInstancesInputOperationPreferences
from openapi_server.models.create_stack_set_input_managed_execution import CreateStackSetInputManagedExecution
from openapi_server.models.permission_models import PermissionModels
from openapi_server.models.update_stack_set_input_auto_deployment import UpdateStackSetInputAutoDeployment
from openapi_server.models.update_stack_set_input_deployment_targets import UpdateStackSetInputDeploymentTargets
from openapi_server import util


class UpdateStackSetInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stack_set_name: str=None, description: str=None, template_body: str=None, template_url: str=None, use_previous_template: bool=None, parameters: List=None, capabilities: List=None, tags: List=None, operation_preferences: CreateStackInstancesInputOperationPreferences=None, administration_role_arn: str=None, execution_role_name: str=None, deployment_targets: UpdateStackSetInputDeploymentTargets=None, permission_model: PermissionModels=None, auto_deployment: UpdateStackSetInputAutoDeployment=None, operation_id: str=None, accounts: List=None, regions: List=None, call_as: CallAs=None, managed_execution: CreateStackSetInputManagedExecution=None):
        """UpdateStackSetInput - a model defined in OpenAPI

        :param stack_set_name: The stack_set_name of this UpdateStackSetInput.
        :param description: The description of this UpdateStackSetInput.
        :param template_body: The template_body of this UpdateStackSetInput.
        :param template_url: The template_url of this UpdateStackSetInput.
        :param use_previous_template: The use_previous_template of this UpdateStackSetInput.
        :param parameters: The parameters of this UpdateStackSetInput.
        :param capabilities: The capabilities of this UpdateStackSetInput.
        :param tags: The tags of this UpdateStackSetInput.
        :param operation_preferences: The operation_preferences of this UpdateStackSetInput.
        :param administration_role_arn: The administration_role_arn of this UpdateStackSetInput.
        :param execution_role_name: The execution_role_name of this UpdateStackSetInput.
        :param deployment_targets: The deployment_targets of this UpdateStackSetInput.
        :param permission_model: The permission_model of this UpdateStackSetInput.
        :param auto_deployment: The auto_deployment of this UpdateStackSetInput.
        :param operation_id: The operation_id of this UpdateStackSetInput.
        :param accounts: The accounts of this UpdateStackSetInput.
        :param regions: The regions of this UpdateStackSetInput.
        :param call_as: The call_as of this UpdateStackSetInput.
        :param managed_execution: The managed_execution of this UpdateStackSetInput.
        """
        self.openapi_types = {
            'stack_set_name': str,
            'description': str,
            'template_body': str,
            'template_url': str,
            'use_previous_template': bool,
            'parameters': List,
            'capabilities': List,
            'tags': List,
            'operation_preferences': CreateStackInstancesInputOperationPreferences,
            'administration_role_arn': str,
            'execution_role_name': str,
            'deployment_targets': UpdateStackSetInputDeploymentTargets,
            'permission_model': PermissionModels,
            'auto_deployment': UpdateStackSetInputAutoDeployment,
            'operation_id': str,
            'accounts': List,
            'regions': List,
            'call_as': CallAs,
            'managed_execution': CreateStackSetInputManagedExecution
        }

        self.attribute_map = {
            'stack_set_name': 'StackSetName',
            'description': 'Description',
            'template_body': 'TemplateBody',
            'template_url': 'TemplateURL',
            'use_previous_template': 'UsePreviousTemplate',
            'parameters': 'Parameters',
            'capabilities': 'Capabilities',
            'tags': 'Tags',
            'operation_preferences': 'OperationPreferences',
            'administration_role_arn': 'AdministrationRoleARN',
            'execution_role_name': 'ExecutionRoleName',
            'deployment_targets': 'DeploymentTargets',
            'permission_model': 'PermissionModel',
            'auto_deployment': 'AutoDeployment',
            'operation_id': 'OperationId',
            'accounts': 'Accounts',
            'regions': 'Regions',
            'call_as': 'CallAs',
            'managed_execution': 'ManagedExecution'
        }

        self._stack_set_name = stack_set_name
        self._description = description
        self._template_body = template_body
        self._template_url = template_url
        self._use_previous_template = use_previous_template
        self._parameters = parameters
        self._capabilities = capabilities
        self._tags = tags
        self._operation_preferences = operation_preferences
        self._administration_role_arn = administration_role_arn
        self._execution_role_name = execution_role_name
        self._deployment_targets = deployment_targets
        self._permission_model = permission_model
        self._auto_deployment = auto_deployment
        self._operation_id = operation_id
        self._accounts = accounts
        self._regions = regions
        self._call_as = call_as
        self._managed_execution = managed_execution

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateStackSetInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateStackSetInput of this UpdateStackSetInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stack_set_name(self):
        """Gets the stack_set_name of this UpdateStackSetInput.


        :return: The stack_set_name of this UpdateStackSetInput.
        :rtype: str
        """
        return self._stack_set_name

    @stack_set_name.setter
    def stack_set_name(self, stack_set_name):
        """Sets the stack_set_name of this UpdateStackSetInput.


        :param stack_set_name: The stack_set_name of this UpdateStackSetInput.
        :type stack_set_name: str
        """
        if stack_set_name is None:
            raise ValueError("Invalid value for `stack_set_name`, must not be `None`")

        self._stack_set_name = stack_set_name

    @property
    def description(self):
        """Gets the description of this UpdateStackSetInput.


        :return: The description of this UpdateStackSetInput.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateStackSetInput.


        :param description: The description of this UpdateStackSetInput.
        :type description: str
        """

        self._description = description

    @property
    def template_body(self):
        """Gets the template_body of this UpdateStackSetInput.


        :return: The template_body of this UpdateStackSetInput.
        :rtype: str
        """
        return self._template_body

    @template_body.setter
    def template_body(self, template_body):
        """Sets the template_body of this UpdateStackSetInput.


        :param template_body: The template_body of this UpdateStackSetInput.
        :type template_body: str
        """

        self._template_body = template_body

    @property
    def template_url(self):
        """Gets the template_url of this UpdateStackSetInput.


        :return: The template_url of this UpdateStackSetInput.
        :rtype: str
        """
        return self._template_url

    @template_url.setter
    def template_url(self, template_url):
        """Sets the template_url of this UpdateStackSetInput.


        :param template_url: The template_url of this UpdateStackSetInput.
        :type template_url: str
        """

        self._template_url = template_url

    @property
    def use_previous_template(self):
        """Gets the use_previous_template of this UpdateStackSetInput.


        :return: The use_previous_template of this UpdateStackSetInput.
        :rtype: bool
        """
        return self._use_previous_template

    @use_previous_template.setter
    def use_previous_template(self, use_previous_template):
        """Sets the use_previous_template of this UpdateStackSetInput.


        :param use_previous_template: The use_previous_template of this UpdateStackSetInput.
        :type use_previous_template: bool
        """

        self._use_previous_template = use_previous_template

    @property
    def parameters(self):
        """Gets the parameters of this UpdateStackSetInput.


        :return: The parameters of this UpdateStackSetInput.
        :rtype: List
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this UpdateStackSetInput.


        :param parameters: The parameters of this UpdateStackSetInput.
        :type parameters: List
        """

        self._parameters = parameters

    @property
    def capabilities(self):
        """Gets the capabilities of this UpdateStackSetInput.


        :return: The capabilities of this UpdateStackSetInput.
        :rtype: List
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities):
        """Sets the capabilities of this UpdateStackSetInput.


        :param capabilities: The capabilities of this UpdateStackSetInput.
        :type capabilities: List
        """

        self._capabilities = capabilities

    @property
    def tags(self):
        """Gets the tags of this UpdateStackSetInput.


        :return: The tags of this UpdateStackSetInput.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this UpdateStackSetInput.


        :param tags: The tags of this UpdateStackSetInput.
        :type tags: List
        """

        self._tags = tags

    @property
    def operation_preferences(self):
        """Gets the operation_preferences of this UpdateStackSetInput.


        :return: The operation_preferences of this UpdateStackSetInput.
        :rtype: CreateStackInstancesInputOperationPreferences
        """
        return self._operation_preferences

    @operation_preferences.setter
    def operation_preferences(self, operation_preferences):
        """Sets the operation_preferences of this UpdateStackSetInput.


        :param operation_preferences: The operation_preferences of this UpdateStackSetInput.
        :type operation_preferences: CreateStackInstancesInputOperationPreferences
        """

        self._operation_preferences = operation_preferences

    @property
    def administration_role_arn(self):
        """Gets the administration_role_arn of this UpdateStackSetInput.


        :return: The administration_role_arn of this UpdateStackSetInput.
        :rtype: str
        """
        return self._administration_role_arn

    @administration_role_arn.setter
    def administration_role_arn(self, administration_role_arn):
        """Sets the administration_role_arn of this UpdateStackSetInput.


        :param administration_role_arn: The administration_role_arn of this UpdateStackSetInput.
        :type administration_role_arn: str
        """

        self._administration_role_arn = administration_role_arn

    @property
    def execution_role_name(self):
        """Gets the execution_role_name of this UpdateStackSetInput.


        :return: The execution_role_name of this UpdateStackSetInput.
        :rtype: str
        """
        return self._execution_role_name

    @execution_role_name.setter
    def execution_role_name(self, execution_role_name):
        """Sets the execution_role_name of this UpdateStackSetInput.


        :param execution_role_name: The execution_role_name of this UpdateStackSetInput.
        :type execution_role_name: str
        """

        self._execution_role_name = execution_role_name

    @property
    def deployment_targets(self):
        """Gets the deployment_targets of this UpdateStackSetInput.


        :return: The deployment_targets of this UpdateStackSetInput.
        :rtype: UpdateStackSetInputDeploymentTargets
        """
        return self._deployment_targets

    @deployment_targets.setter
    def deployment_targets(self, deployment_targets):
        """Sets the deployment_targets of this UpdateStackSetInput.


        :param deployment_targets: The deployment_targets of this UpdateStackSetInput.
        :type deployment_targets: UpdateStackSetInputDeploymentTargets
        """

        self._deployment_targets = deployment_targets

    @property
    def permission_model(self):
        """Gets the permission_model of this UpdateStackSetInput.


        :return: The permission_model of this UpdateStackSetInput.
        :rtype: PermissionModels
        """
        return self._permission_model

    @permission_model.setter
    def permission_model(self, permission_model):
        """Sets the permission_model of this UpdateStackSetInput.


        :param permission_model: The permission_model of this UpdateStackSetInput.
        :type permission_model: PermissionModels
        """

        self._permission_model = permission_model

    @property
    def auto_deployment(self):
        """Gets the auto_deployment of this UpdateStackSetInput.


        :return: The auto_deployment of this UpdateStackSetInput.
        :rtype: UpdateStackSetInputAutoDeployment
        """
        return self._auto_deployment

    @auto_deployment.setter
    def auto_deployment(self, auto_deployment):
        """Sets the auto_deployment of this UpdateStackSetInput.


        :param auto_deployment: The auto_deployment of this UpdateStackSetInput.
        :type auto_deployment: UpdateStackSetInputAutoDeployment
        """

        self._auto_deployment = auto_deployment

    @property
    def operation_id(self):
        """Gets the operation_id of this UpdateStackSetInput.


        :return: The operation_id of this UpdateStackSetInput.
        :rtype: str
        """
        return self._operation_id

    @operation_id.setter
    def operation_id(self, operation_id):
        """Sets the operation_id of this UpdateStackSetInput.


        :param operation_id: The operation_id of this UpdateStackSetInput.
        :type operation_id: str
        """

        self._operation_id = operation_id

    @property
    def accounts(self):
        """Gets the accounts of this UpdateStackSetInput.


        :return: The accounts of this UpdateStackSetInput.
        :rtype: List
        """
        return self._accounts

    @accounts.setter
    def accounts(self, accounts):
        """Sets the accounts of this UpdateStackSetInput.


        :param accounts: The accounts of this UpdateStackSetInput.
        :type accounts: List
        """

        self._accounts = accounts

    @property
    def regions(self):
        """Gets the regions of this UpdateStackSetInput.


        :return: The regions of this UpdateStackSetInput.
        :rtype: List
        """
        return self._regions

    @regions.setter
    def regions(self, regions):
        """Sets the regions of this UpdateStackSetInput.


        :param regions: The regions of this UpdateStackSetInput.
        :type regions: List
        """

        self._regions = regions

    @property
    def call_as(self):
        """Gets the call_as of this UpdateStackSetInput.


        :return: The call_as of this UpdateStackSetInput.
        :rtype: CallAs
        """
        return self._call_as

    @call_as.setter
    def call_as(self, call_as):
        """Sets the call_as of this UpdateStackSetInput.


        :param call_as: The call_as of this UpdateStackSetInput.
        :type call_as: CallAs
        """

        self._call_as = call_as

    @property
    def managed_execution(self):
        """Gets the managed_execution of this UpdateStackSetInput.


        :return: The managed_execution of this UpdateStackSetInput.
        :rtype: CreateStackSetInputManagedExecution
        """
        return self._managed_execution

    @managed_execution.setter
    def managed_execution(self, managed_execution):
        """Sets the managed_execution of this UpdateStackSetInput.


        :param managed_execution: The managed_execution of this UpdateStackSetInput.
        :type managed_execution: CreateStackSetInputManagedExecution
        """

        self._managed_execution = managed_execution
