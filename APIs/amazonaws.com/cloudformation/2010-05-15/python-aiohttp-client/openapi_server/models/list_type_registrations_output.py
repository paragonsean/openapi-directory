# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListTypeRegistrationsOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, registration_token_list: List=None, next_token: str=None):
        """ListTypeRegistrationsOutput - a model defined in OpenAPI

        :param registration_token_list: The registration_token_list of this ListTypeRegistrationsOutput.
        :param next_token: The next_token of this ListTypeRegistrationsOutput.
        """
        self.openapi_types = {
            'registration_token_list': List,
            'next_token': str
        }

        self.attribute_map = {
            'registration_token_list': 'RegistrationTokenList',
            'next_token': 'NextToken'
        }

        self._registration_token_list = registration_token_list
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListTypeRegistrationsOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListTypeRegistrationsOutput of this ListTypeRegistrationsOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def registration_token_list(self):
        """Gets the registration_token_list of this ListTypeRegistrationsOutput.


        :return: The registration_token_list of this ListTypeRegistrationsOutput.
        :rtype: List
        """
        return self._registration_token_list

    @registration_token_list.setter
    def registration_token_list(self, registration_token_list):
        """Sets the registration_token_list of this ListTypeRegistrationsOutput.


        :param registration_token_list: The registration_token_list of this ListTypeRegistrationsOutput.
        :type registration_token_list: List
        """

        self._registration_token_list = registration_token_list

    @property
    def next_token(self):
        """Gets the next_token of this ListTypeRegistrationsOutput.


        :return: The next_token of this ListTypeRegistrationsOutput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListTypeRegistrationsOutput.


        :param next_token: The next_token of this ListTypeRegistrationsOutput.
        :type next_token: str
        """

        self._next_token = next_token
