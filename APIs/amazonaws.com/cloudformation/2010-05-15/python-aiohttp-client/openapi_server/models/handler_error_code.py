# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HandlerErrorCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    NOTUPDATABLE = 'NotUpdatable'
    INVALIDREQUEST = 'InvalidRequest'
    ACCESSDENIED = 'AccessDenied'
    INVALIDCREDENTIALS = 'InvalidCredentials'
    ALREADYEXISTS = 'AlreadyExists'
    NOTFOUND = 'NotFound'
    RESOURCECONFLICT = 'ResourceConflict'
    THROTTLING = 'Throttling'
    SERVICELIMITEXCEEDED = 'ServiceLimitExceeded'
    NOTSTABILIZED = 'NotStabilized'
    GENERALSERVICEEXCEPTION = 'GeneralServiceException'
    SERVICEINTERNALERROR = 'ServiceInternalError'
    NETWORKFAILURE = 'NetworkFailure'
    INTERNALFAILURE = 'InternalFailure'
    INVALIDTYPECONFIGURATION = 'InvalidTypeConfiguration'
    HANDLERINTERNALFAILURE = 'HandlerInternalFailure'
    NONCOMPLIANT = 'NonCompliant'
    UNKNOWN = 'Unknown'
    UNSUPPORTEDTARGET = 'UnsupportedTarget'

    def __init__(self):
        """HandlerErrorCode - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HandlerErrorCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HandlerErrorCode of this HandlerErrorCode.
        """
        return util.deserialize_model(dikt, cls)
