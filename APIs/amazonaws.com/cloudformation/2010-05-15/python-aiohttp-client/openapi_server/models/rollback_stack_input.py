# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RollbackStackInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stack_name: str=None, role_arn: str=None, client_request_token: str=None, retain_except_on_create: bool=None):
        """RollbackStackInput - a model defined in OpenAPI

        :param stack_name: The stack_name of this RollbackStackInput.
        :param role_arn: The role_arn of this RollbackStackInput.
        :param client_request_token: The client_request_token of this RollbackStackInput.
        :param retain_except_on_create: The retain_except_on_create of this RollbackStackInput.
        """
        self.openapi_types = {
            'stack_name': str,
            'role_arn': str,
            'client_request_token': str,
            'retain_except_on_create': bool
        }

        self.attribute_map = {
            'stack_name': 'StackName',
            'role_arn': 'RoleARN',
            'client_request_token': 'ClientRequestToken',
            'retain_except_on_create': 'RetainExceptOnCreate'
        }

        self._stack_name = stack_name
        self._role_arn = role_arn
        self._client_request_token = client_request_token
        self._retain_except_on_create = retain_except_on_create

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RollbackStackInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RollbackStackInput of this RollbackStackInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stack_name(self):
        """Gets the stack_name of this RollbackStackInput.


        :return: The stack_name of this RollbackStackInput.
        :rtype: str
        """
        return self._stack_name

    @stack_name.setter
    def stack_name(self, stack_name):
        """Sets the stack_name of this RollbackStackInput.


        :param stack_name: The stack_name of this RollbackStackInput.
        :type stack_name: str
        """
        if stack_name is None:
            raise ValueError("Invalid value for `stack_name`, must not be `None`")

        self._stack_name = stack_name

    @property
    def role_arn(self):
        """Gets the role_arn of this RollbackStackInput.


        :return: The role_arn of this RollbackStackInput.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this RollbackStackInput.


        :param role_arn: The role_arn of this RollbackStackInput.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def client_request_token(self):
        """Gets the client_request_token of this RollbackStackInput.


        :return: The client_request_token of this RollbackStackInput.
        :rtype: str
        """
        return self._client_request_token

    @client_request_token.setter
    def client_request_token(self, client_request_token):
        """Sets the client_request_token of this RollbackStackInput.


        :param client_request_token: The client_request_token of this RollbackStackInput.
        :type client_request_token: str
        """

        self._client_request_token = client_request_token

    @property
    def retain_except_on_create(self):
        """Gets the retain_except_on_create of this RollbackStackInput.


        :return: The retain_except_on_create of this RollbackStackInput.
        :rtype: bool
        """
        return self._retain_except_on_create

    @retain_except_on_create.setter
    def retain_except_on_create(self, retain_except_on_create):
        """Sets the retain_except_on_create of this RollbackStackInput.


        :param retain_except_on_create: The retain_except_on_create of this RollbackStackInput.
        :type retain_except_on_create: bool
        """

        self._retain_except_on_create = retain_except_on_create
