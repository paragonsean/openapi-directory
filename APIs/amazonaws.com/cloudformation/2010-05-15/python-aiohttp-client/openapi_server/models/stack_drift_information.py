# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stack_drift_status import StackDriftStatus
from openapi_server import util


class StackDriftInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stack_drift_status: StackDriftStatus=None, last_check_timestamp: datetime=None):
        """StackDriftInformation - a model defined in OpenAPI

        :param stack_drift_status: The stack_drift_status of this StackDriftInformation.
        :param last_check_timestamp: The last_check_timestamp of this StackDriftInformation.
        """
        self.openapi_types = {
            'stack_drift_status': StackDriftStatus,
            'last_check_timestamp': datetime
        }

        self.attribute_map = {
            'stack_drift_status': 'StackDriftStatus',
            'last_check_timestamp': 'LastCheckTimestamp'
        }

        self._stack_drift_status = stack_drift_status
        self._last_check_timestamp = last_check_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StackDriftInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Stack_DriftInformation of this StackDriftInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stack_drift_status(self):
        """Gets the stack_drift_status of this StackDriftInformation.


        :return: The stack_drift_status of this StackDriftInformation.
        :rtype: StackDriftStatus
        """
        return self._stack_drift_status

    @stack_drift_status.setter
    def stack_drift_status(self, stack_drift_status):
        """Sets the stack_drift_status of this StackDriftInformation.


        :param stack_drift_status: The stack_drift_status of this StackDriftInformation.
        :type stack_drift_status: StackDriftStatus
        """
        if stack_drift_status is None:
            raise ValueError("Invalid value for `stack_drift_status`, must not be `None`")

        self._stack_drift_status = stack_drift_status

    @property
    def last_check_timestamp(self):
        """Gets the last_check_timestamp of this StackDriftInformation.


        :return: The last_check_timestamp of this StackDriftInformation.
        :rtype: datetime
        """
        return self._last_check_timestamp

    @last_check_timestamp.setter
    def last_check_timestamp(self, last_check_timestamp):
        """Sets the last_check_timestamp of this StackDriftInformation.


        :param last_check_timestamp: The last_check_timestamp of this StackDriftInformation.
        :type last_check_timestamp: datetime
        """

        self._last_check_timestamp = last_check_timestamp
