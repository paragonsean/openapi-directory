# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_stack_set_input_managed_execution import CreateStackSetInputManagedExecution
from openapi_server.models.permission_models import PermissionModels
from openapi_server.models.stack_drift_status import StackDriftStatus
from openapi_server.models.stack_set_status import StackSetStatus
from openapi_server.models.stack_set_summary_auto_deployment import StackSetSummaryAutoDeployment
from openapi_server import util


class StackSetSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stack_set_name: str=None, stack_set_id: str=None, description: str=None, status: StackSetStatus=None, auto_deployment: StackSetSummaryAutoDeployment=None, permission_model: PermissionModels=None, drift_status: StackDriftStatus=None, last_drift_check_timestamp: datetime=None, managed_execution: CreateStackSetInputManagedExecution=None):
        """StackSetSummary - a model defined in OpenAPI

        :param stack_set_name: The stack_set_name of this StackSetSummary.
        :param stack_set_id: The stack_set_id of this StackSetSummary.
        :param description: The description of this StackSetSummary.
        :param status: The status of this StackSetSummary.
        :param auto_deployment: The auto_deployment of this StackSetSummary.
        :param permission_model: The permission_model of this StackSetSummary.
        :param drift_status: The drift_status of this StackSetSummary.
        :param last_drift_check_timestamp: The last_drift_check_timestamp of this StackSetSummary.
        :param managed_execution: The managed_execution of this StackSetSummary.
        """
        self.openapi_types = {
            'stack_set_name': str,
            'stack_set_id': str,
            'description': str,
            'status': StackSetStatus,
            'auto_deployment': StackSetSummaryAutoDeployment,
            'permission_model': PermissionModels,
            'drift_status': StackDriftStatus,
            'last_drift_check_timestamp': datetime,
            'managed_execution': CreateStackSetInputManagedExecution
        }

        self.attribute_map = {
            'stack_set_name': 'StackSetName',
            'stack_set_id': 'StackSetId',
            'description': 'Description',
            'status': 'Status',
            'auto_deployment': 'AutoDeployment',
            'permission_model': 'PermissionModel',
            'drift_status': 'DriftStatus',
            'last_drift_check_timestamp': 'LastDriftCheckTimestamp',
            'managed_execution': 'ManagedExecution'
        }

        self._stack_set_name = stack_set_name
        self._stack_set_id = stack_set_id
        self._description = description
        self._status = status
        self._auto_deployment = auto_deployment
        self._permission_model = permission_model
        self._drift_status = drift_status
        self._last_drift_check_timestamp = last_drift_check_timestamp
        self._managed_execution = managed_execution

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StackSetSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StackSetSummary of this StackSetSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stack_set_name(self):
        """Gets the stack_set_name of this StackSetSummary.


        :return: The stack_set_name of this StackSetSummary.
        :rtype: str
        """
        return self._stack_set_name

    @stack_set_name.setter
    def stack_set_name(self, stack_set_name):
        """Sets the stack_set_name of this StackSetSummary.


        :param stack_set_name: The stack_set_name of this StackSetSummary.
        :type stack_set_name: str
        """

        self._stack_set_name = stack_set_name

    @property
    def stack_set_id(self):
        """Gets the stack_set_id of this StackSetSummary.


        :return: The stack_set_id of this StackSetSummary.
        :rtype: str
        """
        return self._stack_set_id

    @stack_set_id.setter
    def stack_set_id(self, stack_set_id):
        """Sets the stack_set_id of this StackSetSummary.


        :param stack_set_id: The stack_set_id of this StackSetSummary.
        :type stack_set_id: str
        """

        self._stack_set_id = stack_set_id

    @property
    def description(self):
        """Gets the description of this StackSetSummary.


        :return: The description of this StackSetSummary.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this StackSetSummary.


        :param description: The description of this StackSetSummary.
        :type description: str
        """

        self._description = description

    @property
    def status(self):
        """Gets the status of this StackSetSummary.


        :return: The status of this StackSetSummary.
        :rtype: StackSetStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this StackSetSummary.


        :param status: The status of this StackSetSummary.
        :type status: StackSetStatus
        """

        self._status = status

    @property
    def auto_deployment(self):
        """Gets the auto_deployment of this StackSetSummary.


        :return: The auto_deployment of this StackSetSummary.
        :rtype: StackSetSummaryAutoDeployment
        """
        return self._auto_deployment

    @auto_deployment.setter
    def auto_deployment(self, auto_deployment):
        """Sets the auto_deployment of this StackSetSummary.


        :param auto_deployment: The auto_deployment of this StackSetSummary.
        :type auto_deployment: StackSetSummaryAutoDeployment
        """

        self._auto_deployment = auto_deployment

    @property
    def permission_model(self):
        """Gets the permission_model of this StackSetSummary.


        :return: The permission_model of this StackSetSummary.
        :rtype: PermissionModels
        """
        return self._permission_model

    @permission_model.setter
    def permission_model(self, permission_model):
        """Sets the permission_model of this StackSetSummary.


        :param permission_model: The permission_model of this StackSetSummary.
        :type permission_model: PermissionModels
        """

        self._permission_model = permission_model

    @property
    def drift_status(self):
        """Gets the drift_status of this StackSetSummary.


        :return: The drift_status of this StackSetSummary.
        :rtype: StackDriftStatus
        """
        return self._drift_status

    @drift_status.setter
    def drift_status(self, drift_status):
        """Sets the drift_status of this StackSetSummary.


        :param drift_status: The drift_status of this StackSetSummary.
        :type drift_status: StackDriftStatus
        """

        self._drift_status = drift_status

    @property
    def last_drift_check_timestamp(self):
        """Gets the last_drift_check_timestamp of this StackSetSummary.


        :return: The last_drift_check_timestamp of this StackSetSummary.
        :rtype: datetime
        """
        return self._last_drift_check_timestamp

    @last_drift_check_timestamp.setter
    def last_drift_check_timestamp(self, last_drift_check_timestamp):
        """Sets the last_drift_check_timestamp of this StackSetSummary.


        :param last_drift_check_timestamp: The last_drift_check_timestamp of this StackSetSummary.
        :type last_drift_check_timestamp: datetime
        """

        self._last_drift_check_timestamp = last_drift_check_timestamp

    @property
    def managed_execution(self):
        """Gets the managed_execution of this StackSetSummary.


        :return: The managed_execution of this StackSetSummary.
        :rtype: CreateStackSetInputManagedExecution
        """
        return self._managed_execution

    @managed_execution.setter
    def managed_execution(self, managed_execution):
        """Sets the managed_execution of this StackSetSummary.


        :param managed_execution: The managed_execution of this StackSetSummary.
        :type managed_execution: CreateStackSetInputManagedExecution
        """

        self._managed_execution = managed_execution
