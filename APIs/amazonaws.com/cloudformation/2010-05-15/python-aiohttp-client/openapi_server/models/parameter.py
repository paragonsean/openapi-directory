# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Parameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parameter_key: str=None, parameter_value: str=None, use_previous_value: bool=None, resolved_value: str=None):
        """Parameter - a model defined in OpenAPI

        :param parameter_key: The parameter_key of this Parameter.
        :param parameter_value: The parameter_value of this Parameter.
        :param use_previous_value: The use_previous_value of this Parameter.
        :param resolved_value: The resolved_value of this Parameter.
        """
        self.openapi_types = {
            'parameter_key': str,
            'parameter_value': str,
            'use_previous_value': bool,
            'resolved_value': str
        }

        self.attribute_map = {
            'parameter_key': 'ParameterKey',
            'parameter_value': 'ParameterValue',
            'use_previous_value': 'UsePreviousValue',
            'resolved_value': 'ResolvedValue'
        }

        self._parameter_key = parameter_key
        self._parameter_value = parameter_value
        self._use_previous_value = use_previous_value
        self._resolved_value = resolved_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Parameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Parameter of this Parameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parameter_key(self):
        """Gets the parameter_key of this Parameter.


        :return: The parameter_key of this Parameter.
        :rtype: str
        """
        return self._parameter_key

    @parameter_key.setter
    def parameter_key(self, parameter_key):
        """Sets the parameter_key of this Parameter.


        :param parameter_key: The parameter_key of this Parameter.
        :type parameter_key: str
        """

        self._parameter_key = parameter_key

    @property
    def parameter_value(self):
        """Gets the parameter_value of this Parameter.


        :return: The parameter_value of this Parameter.
        :rtype: str
        """
        return self._parameter_value

    @parameter_value.setter
    def parameter_value(self, parameter_value):
        """Sets the parameter_value of this Parameter.


        :param parameter_value: The parameter_value of this Parameter.
        :type parameter_value: str
        """

        self._parameter_value = parameter_value

    @property
    def use_previous_value(self):
        """Gets the use_previous_value of this Parameter.


        :return: The use_previous_value of this Parameter.
        :rtype: bool
        """
        return self._use_previous_value

    @use_previous_value.setter
    def use_previous_value(self, use_previous_value):
        """Sets the use_previous_value of this Parameter.


        :param use_previous_value: The use_previous_value of this Parameter.
        :type use_previous_value: bool
        """

        self._use_previous_value = use_previous_value

    @property
    def resolved_value(self):
        """Gets the resolved_value of this Parameter.


        :return: The resolved_value of this Parameter.
        :rtype: str
        """
        return self._resolved_value

    @resolved_value.setter
    def resolved_value(self, resolved_value):
        """Sets the resolved_value of this Parameter.


        :param resolved_value: The resolved_value of this Parameter.
        :type resolved_value: str
        """

        self._resolved_value = resolved_value
