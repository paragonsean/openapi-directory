# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.change_set_hooks_status import ChangeSetHooksStatus
from openapi_server import util


class DescribeChangeSetHooksOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, change_set_id: str=None, change_set_name: str=None, hooks: List=None, status: ChangeSetHooksStatus=None, next_token: str=None, stack_id: str=None, stack_name: str=None):
        """DescribeChangeSetHooksOutput - a model defined in OpenAPI

        :param change_set_id: The change_set_id of this DescribeChangeSetHooksOutput.
        :param change_set_name: The change_set_name of this DescribeChangeSetHooksOutput.
        :param hooks: The hooks of this DescribeChangeSetHooksOutput.
        :param status: The status of this DescribeChangeSetHooksOutput.
        :param next_token: The next_token of this DescribeChangeSetHooksOutput.
        :param stack_id: The stack_id of this DescribeChangeSetHooksOutput.
        :param stack_name: The stack_name of this DescribeChangeSetHooksOutput.
        """
        self.openapi_types = {
            'change_set_id': str,
            'change_set_name': str,
            'hooks': List,
            'status': ChangeSetHooksStatus,
            'next_token': str,
            'stack_id': str,
            'stack_name': str
        }

        self.attribute_map = {
            'change_set_id': 'ChangeSetId',
            'change_set_name': 'ChangeSetName',
            'hooks': 'Hooks',
            'status': 'Status',
            'next_token': 'NextToken',
            'stack_id': 'StackId',
            'stack_name': 'StackName'
        }

        self._change_set_id = change_set_id
        self._change_set_name = change_set_name
        self._hooks = hooks
        self._status = status
        self._next_token = next_token
        self._stack_id = stack_id
        self._stack_name = stack_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeChangeSetHooksOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeChangeSetHooksOutput of this DescribeChangeSetHooksOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def change_set_id(self):
        """Gets the change_set_id of this DescribeChangeSetHooksOutput.


        :return: The change_set_id of this DescribeChangeSetHooksOutput.
        :rtype: str
        """
        return self._change_set_id

    @change_set_id.setter
    def change_set_id(self, change_set_id):
        """Sets the change_set_id of this DescribeChangeSetHooksOutput.


        :param change_set_id: The change_set_id of this DescribeChangeSetHooksOutput.
        :type change_set_id: str
        """

        self._change_set_id = change_set_id

    @property
    def change_set_name(self):
        """Gets the change_set_name of this DescribeChangeSetHooksOutput.


        :return: The change_set_name of this DescribeChangeSetHooksOutput.
        :rtype: str
        """
        return self._change_set_name

    @change_set_name.setter
    def change_set_name(self, change_set_name):
        """Sets the change_set_name of this DescribeChangeSetHooksOutput.


        :param change_set_name: The change_set_name of this DescribeChangeSetHooksOutput.
        :type change_set_name: str
        """

        self._change_set_name = change_set_name

    @property
    def hooks(self):
        """Gets the hooks of this DescribeChangeSetHooksOutput.


        :return: The hooks of this DescribeChangeSetHooksOutput.
        :rtype: List
        """
        return self._hooks

    @hooks.setter
    def hooks(self, hooks):
        """Sets the hooks of this DescribeChangeSetHooksOutput.


        :param hooks: The hooks of this DescribeChangeSetHooksOutput.
        :type hooks: List
        """

        self._hooks = hooks

    @property
    def status(self):
        """Gets the status of this DescribeChangeSetHooksOutput.


        :return: The status of this DescribeChangeSetHooksOutput.
        :rtype: ChangeSetHooksStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeChangeSetHooksOutput.


        :param status: The status of this DescribeChangeSetHooksOutput.
        :type status: ChangeSetHooksStatus
        """

        self._status = status

    @property
    def next_token(self):
        """Gets the next_token of this DescribeChangeSetHooksOutput.


        :return: The next_token of this DescribeChangeSetHooksOutput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeChangeSetHooksOutput.


        :param next_token: The next_token of this DescribeChangeSetHooksOutput.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def stack_id(self):
        """Gets the stack_id of this DescribeChangeSetHooksOutput.


        :return: The stack_id of this DescribeChangeSetHooksOutput.
        :rtype: str
        """
        return self._stack_id

    @stack_id.setter
    def stack_id(self, stack_id):
        """Sets the stack_id of this DescribeChangeSetHooksOutput.


        :param stack_id: The stack_id of this DescribeChangeSetHooksOutput.
        :type stack_id: str
        """

        self._stack_id = stack_id

    @property
    def stack_name(self):
        """Gets the stack_name of this DescribeChangeSetHooksOutput.


        :return: The stack_name of this DescribeChangeSetHooksOutput.
        :rtype: str
        """
        return self._stack_name

    @stack_name.setter
    def stack_name(self, stack_name):
        """Sets the stack_name of this DescribeChangeSetHooksOutput.


        :param stack_name: The stack_name of this DescribeChangeSetHooksOutput.
        :type stack_name: str
        """

        self._stack_name = stack_name
