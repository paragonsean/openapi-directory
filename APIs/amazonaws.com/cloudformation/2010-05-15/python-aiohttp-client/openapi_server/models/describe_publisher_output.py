# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.identity_provider import IdentityProvider
from openapi_server.models.publisher_status import PublisherStatus
from openapi_server import util


class DescribePublisherOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, publisher_id: str=None, publisher_status: PublisherStatus=None, identity_provider: IdentityProvider=None, publisher_profile: str=None):
        """DescribePublisherOutput - a model defined in OpenAPI

        :param publisher_id: The publisher_id of this DescribePublisherOutput.
        :param publisher_status: The publisher_status of this DescribePublisherOutput.
        :param identity_provider: The identity_provider of this DescribePublisherOutput.
        :param publisher_profile: The publisher_profile of this DescribePublisherOutput.
        """
        self.openapi_types = {
            'publisher_id': str,
            'publisher_status': PublisherStatus,
            'identity_provider': IdentityProvider,
            'publisher_profile': str
        }

        self.attribute_map = {
            'publisher_id': 'PublisherId',
            'publisher_status': 'PublisherStatus',
            'identity_provider': 'IdentityProvider',
            'publisher_profile': 'PublisherProfile'
        }

        self._publisher_id = publisher_id
        self._publisher_status = publisher_status
        self._identity_provider = identity_provider
        self._publisher_profile = publisher_profile

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribePublisherOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribePublisherOutput of this DescribePublisherOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def publisher_id(self):
        """Gets the publisher_id of this DescribePublisherOutput.


        :return: The publisher_id of this DescribePublisherOutput.
        :rtype: str
        """
        return self._publisher_id

    @publisher_id.setter
    def publisher_id(self, publisher_id):
        """Sets the publisher_id of this DescribePublisherOutput.


        :param publisher_id: The publisher_id of this DescribePublisherOutput.
        :type publisher_id: str
        """

        self._publisher_id = publisher_id

    @property
    def publisher_status(self):
        """Gets the publisher_status of this DescribePublisherOutput.


        :return: The publisher_status of this DescribePublisherOutput.
        :rtype: PublisherStatus
        """
        return self._publisher_status

    @publisher_status.setter
    def publisher_status(self, publisher_status):
        """Sets the publisher_status of this DescribePublisherOutput.


        :param publisher_status: The publisher_status of this DescribePublisherOutput.
        :type publisher_status: PublisherStatus
        """

        self._publisher_status = publisher_status

    @property
    def identity_provider(self):
        """Gets the identity_provider of this DescribePublisherOutput.


        :return: The identity_provider of this DescribePublisherOutput.
        :rtype: IdentityProvider
        """
        return self._identity_provider

    @identity_provider.setter
    def identity_provider(self, identity_provider):
        """Sets the identity_provider of this DescribePublisherOutput.


        :param identity_provider: The identity_provider of this DescribePublisherOutput.
        :type identity_provider: IdentityProvider
        """

        self._identity_provider = identity_provider

    @property
    def publisher_profile(self):
        """Gets the publisher_profile of this DescribePublisherOutput.


        :return: The publisher_profile of this DescribePublisherOutput.
        :rtype: str
        """
        return self._publisher_profile

    @publisher_profile.setter
    def publisher_profile(self, publisher_profile):
        """Sets the publisher_profile of this DescribePublisherOutput.


        :param publisher_profile: The publisher_profile of this DescribePublisherOutput.
        :type publisher_profile: str
        """

        self._publisher_profile = publisher_profile
