# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.change_set_status import ChangeSetStatus
from openapi_server.models.execution_status import ExecutionStatus
from openapi_server import util


class ChangeSetSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stack_id: str=None, stack_name: str=None, change_set_id: str=None, change_set_name: str=None, execution_status: ExecutionStatus=None, status: ChangeSetStatus=None, status_reason: str=None, creation_time: datetime=None, description: str=None, include_nested_stacks: bool=None, parent_change_set_id: str=None, root_change_set_id: str=None):
        """ChangeSetSummary - a model defined in OpenAPI

        :param stack_id: The stack_id of this ChangeSetSummary.
        :param stack_name: The stack_name of this ChangeSetSummary.
        :param change_set_id: The change_set_id of this ChangeSetSummary.
        :param change_set_name: The change_set_name of this ChangeSetSummary.
        :param execution_status: The execution_status of this ChangeSetSummary.
        :param status: The status of this ChangeSetSummary.
        :param status_reason: The status_reason of this ChangeSetSummary.
        :param creation_time: The creation_time of this ChangeSetSummary.
        :param description: The description of this ChangeSetSummary.
        :param include_nested_stacks: The include_nested_stacks of this ChangeSetSummary.
        :param parent_change_set_id: The parent_change_set_id of this ChangeSetSummary.
        :param root_change_set_id: The root_change_set_id of this ChangeSetSummary.
        """
        self.openapi_types = {
            'stack_id': str,
            'stack_name': str,
            'change_set_id': str,
            'change_set_name': str,
            'execution_status': ExecutionStatus,
            'status': ChangeSetStatus,
            'status_reason': str,
            'creation_time': datetime,
            'description': str,
            'include_nested_stacks': bool,
            'parent_change_set_id': str,
            'root_change_set_id': str
        }

        self.attribute_map = {
            'stack_id': 'StackId',
            'stack_name': 'StackName',
            'change_set_id': 'ChangeSetId',
            'change_set_name': 'ChangeSetName',
            'execution_status': 'ExecutionStatus',
            'status': 'Status',
            'status_reason': 'StatusReason',
            'creation_time': 'CreationTime',
            'description': 'Description',
            'include_nested_stacks': 'IncludeNestedStacks',
            'parent_change_set_id': 'ParentChangeSetId',
            'root_change_set_id': 'RootChangeSetId'
        }

        self._stack_id = stack_id
        self._stack_name = stack_name
        self._change_set_id = change_set_id
        self._change_set_name = change_set_name
        self._execution_status = execution_status
        self._status = status
        self._status_reason = status_reason
        self._creation_time = creation_time
        self._description = description
        self._include_nested_stacks = include_nested_stacks
        self._parent_change_set_id = parent_change_set_id
        self._root_change_set_id = root_change_set_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChangeSetSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChangeSetSummary of this ChangeSetSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stack_id(self):
        """Gets the stack_id of this ChangeSetSummary.


        :return: The stack_id of this ChangeSetSummary.
        :rtype: str
        """
        return self._stack_id

    @stack_id.setter
    def stack_id(self, stack_id):
        """Sets the stack_id of this ChangeSetSummary.


        :param stack_id: The stack_id of this ChangeSetSummary.
        :type stack_id: str
        """

        self._stack_id = stack_id

    @property
    def stack_name(self):
        """Gets the stack_name of this ChangeSetSummary.


        :return: The stack_name of this ChangeSetSummary.
        :rtype: str
        """
        return self._stack_name

    @stack_name.setter
    def stack_name(self, stack_name):
        """Sets the stack_name of this ChangeSetSummary.


        :param stack_name: The stack_name of this ChangeSetSummary.
        :type stack_name: str
        """

        self._stack_name = stack_name

    @property
    def change_set_id(self):
        """Gets the change_set_id of this ChangeSetSummary.


        :return: The change_set_id of this ChangeSetSummary.
        :rtype: str
        """
        return self._change_set_id

    @change_set_id.setter
    def change_set_id(self, change_set_id):
        """Sets the change_set_id of this ChangeSetSummary.


        :param change_set_id: The change_set_id of this ChangeSetSummary.
        :type change_set_id: str
        """

        self._change_set_id = change_set_id

    @property
    def change_set_name(self):
        """Gets the change_set_name of this ChangeSetSummary.


        :return: The change_set_name of this ChangeSetSummary.
        :rtype: str
        """
        return self._change_set_name

    @change_set_name.setter
    def change_set_name(self, change_set_name):
        """Sets the change_set_name of this ChangeSetSummary.


        :param change_set_name: The change_set_name of this ChangeSetSummary.
        :type change_set_name: str
        """

        self._change_set_name = change_set_name

    @property
    def execution_status(self):
        """Gets the execution_status of this ChangeSetSummary.


        :return: The execution_status of this ChangeSetSummary.
        :rtype: ExecutionStatus
        """
        return self._execution_status

    @execution_status.setter
    def execution_status(self, execution_status):
        """Sets the execution_status of this ChangeSetSummary.


        :param execution_status: The execution_status of this ChangeSetSummary.
        :type execution_status: ExecutionStatus
        """

        self._execution_status = execution_status

    @property
    def status(self):
        """Gets the status of this ChangeSetSummary.


        :return: The status of this ChangeSetSummary.
        :rtype: ChangeSetStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ChangeSetSummary.


        :param status: The status of this ChangeSetSummary.
        :type status: ChangeSetStatus
        """

        self._status = status

    @property
    def status_reason(self):
        """Gets the status_reason of this ChangeSetSummary.


        :return: The status_reason of this ChangeSetSummary.
        :rtype: str
        """
        return self._status_reason

    @status_reason.setter
    def status_reason(self, status_reason):
        """Sets the status_reason of this ChangeSetSummary.


        :param status_reason: The status_reason of this ChangeSetSummary.
        :type status_reason: str
        """

        self._status_reason = status_reason

    @property
    def creation_time(self):
        """Gets the creation_time of this ChangeSetSummary.


        :return: The creation_time of this ChangeSetSummary.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this ChangeSetSummary.


        :param creation_time: The creation_time of this ChangeSetSummary.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def description(self):
        """Gets the description of this ChangeSetSummary.


        :return: The description of this ChangeSetSummary.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ChangeSetSummary.


        :param description: The description of this ChangeSetSummary.
        :type description: str
        """

        self._description = description

    @property
    def include_nested_stacks(self):
        """Gets the include_nested_stacks of this ChangeSetSummary.


        :return: The include_nested_stacks of this ChangeSetSummary.
        :rtype: bool
        """
        return self._include_nested_stacks

    @include_nested_stacks.setter
    def include_nested_stacks(self, include_nested_stacks):
        """Sets the include_nested_stacks of this ChangeSetSummary.


        :param include_nested_stacks: The include_nested_stacks of this ChangeSetSummary.
        :type include_nested_stacks: bool
        """

        self._include_nested_stacks = include_nested_stacks

    @property
    def parent_change_set_id(self):
        """Gets the parent_change_set_id of this ChangeSetSummary.


        :return: The parent_change_set_id of this ChangeSetSummary.
        :rtype: str
        """
        return self._parent_change_set_id

    @parent_change_set_id.setter
    def parent_change_set_id(self, parent_change_set_id):
        """Sets the parent_change_set_id of this ChangeSetSummary.


        :param parent_change_set_id: The parent_change_set_id of this ChangeSetSummary.
        :type parent_change_set_id: str
        """

        self._parent_change_set_id = parent_change_set_id

    @property
    def root_change_set_id(self):
        """Gets the root_change_set_id of this ChangeSetSummary.


        :return: The root_change_set_id of this ChangeSetSummary.
        :rtype: str
        """
        return self._root_change_set_id

    @root_change_set_id.setter
    def root_change_set_id(self, root_change_set_id):
        """Sets the root_change_set_id of this ChangeSetSummary.


        :param root_change_set_id: The root_change_set_id of this ChangeSetSummary.
        :type root_change_set_id: str
        """

        self._root_change_set_id = root_change_set_id
