# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.registration_status import RegistrationStatus
from openapi_server import util


class DescribeTypeRegistrationOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, progress_status: RegistrationStatus=None, description: str=None, type_arn: str=None, type_version_arn: str=None):
        """DescribeTypeRegistrationOutput - a model defined in OpenAPI

        :param progress_status: The progress_status of this DescribeTypeRegistrationOutput.
        :param description: The description of this DescribeTypeRegistrationOutput.
        :param type_arn: The type_arn of this DescribeTypeRegistrationOutput.
        :param type_version_arn: The type_version_arn of this DescribeTypeRegistrationOutput.
        """
        self.openapi_types = {
            'progress_status': RegistrationStatus,
            'description': str,
            'type_arn': str,
            'type_version_arn': str
        }

        self.attribute_map = {
            'progress_status': 'ProgressStatus',
            'description': 'Description',
            'type_arn': 'TypeArn',
            'type_version_arn': 'TypeVersionArn'
        }

        self._progress_status = progress_status
        self._description = description
        self._type_arn = type_arn
        self._type_version_arn = type_version_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeTypeRegistrationOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeTypeRegistrationOutput of this DescribeTypeRegistrationOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def progress_status(self):
        """Gets the progress_status of this DescribeTypeRegistrationOutput.


        :return: The progress_status of this DescribeTypeRegistrationOutput.
        :rtype: RegistrationStatus
        """
        return self._progress_status

    @progress_status.setter
    def progress_status(self, progress_status):
        """Sets the progress_status of this DescribeTypeRegistrationOutput.


        :param progress_status: The progress_status of this DescribeTypeRegistrationOutput.
        :type progress_status: RegistrationStatus
        """

        self._progress_status = progress_status

    @property
    def description(self):
        """Gets the description of this DescribeTypeRegistrationOutput.


        :return: The description of this DescribeTypeRegistrationOutput.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DescribeTypeRegistrationOutput.


        :param description: The description of this DescribeTypeRegistrationOutput.
        :type description: str
        """

        self._description = description

    @property
    def type_arn(self):
        """Gets the type_arn of this DescribeTypeRegistrationOutput.


        :return: The type_arn of this DescribeTypeRegistrationOutput.
        :rtype: str
        """
        return self._type_arn

    @type_arn.setter
    def type_arn(self, type_arn):
        """Sets the type_arn of this DescribeTypeRegistrationOutput.


        :param type_arn: The type_arn of this DescribeTypeRegistrationOutput.
        :type type_arn: str
        """

        self._type_arn = type_arn

    @property
    def type_version_arn(self):
        """Gets the type_version_arn of this DescribeTypeRegistrationOutput.


        :return: The type_version_arn of this DescribeTypeRegistrationOutput.
        :rtype: str
        """
        return self._type_version_arn

    @type_version_arn.setter
    def type_version_arn(self, type_version_arn):
        """Sets the type_version_arn of this DescribeTypeRegistrationOutput.


        :param type_version_arn: The type_version_arn of this DescribeTypeRegistrationOutput.
        :type type_version_arn: str
        """

        self._type_version_arn = type_version_arn
