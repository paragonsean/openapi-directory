# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stack_drift_status import StackDriftStatus
from openapi_server.models.stack_instance_stack_instance_status import StackInstanceStackInstanceStatus
from openapi_server.models.stack_instance_status import StackInstanceStatus
from openapi_server import util


class DescribeStackInstanceOutputStackInstance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stack_set_id: str=None, region: str=None, account: str=None, stack_id: str=None, parameter_overrides: List=None, status: StackInstanceStatus=None, stack_instance_status: StackInstanceStackInstanceStatus=None, status_reason: str=None, organizational_unit_id: str=None, drift_status: StackDriftStatus=None, last_drift_check_timestamp: datetime=None, last_operation_id: str=None):
        """DescribeStackInstanceOutputStackInstance - a model defined in OpenAPI

        :param stack_set_id: The stack_set_id of this DescribeStackInstanceOutputStackInstance.
        :param region: The region of this DescribeStackInstanceOutputStackInstance.
        :param account: The account of this DescribeStackInstanceOutputStackInstance.
        :param stack_id: The stack_id of this DescribeStackInstanceOutputStackInstance.
        :param parameter_overrides: The parameter_overrides of this DescribeStackInstanceOutputStackInstance.
        :param status: The status of this DescribeStackInstanceOutputStackInstance.
        :param stack_instance_status: The stack_instance_status of this DescribeStackInstanceOutputStackInstance.
        :param status_reason: The status_reason of this DescribeStackInstanceOutputStackInstance.
        :param organizational_unit_id: The organizational_unit_id of this DescribeStackInstanceOutputStackInstance.
        :param drift_status: The drift_status of this DescribeStackInstanceOutputStackInstance.
        :param last_drift_check_timestamp: The last_drift_check_timestamp of this DescribeStackInstanceOutputStackInstance.
        :param last_operation_id: The last_operation_id of this DescribeStackInstanceOutputStackInstance.
        """
        self.openapi_types = {
            'stack_set_id': str,
            'region': str,
            'account': str,
            'stack_id': str,
            'parameter_overrides': List,
            'status': StackInstanceStatus,
            'stack_instance_status': StackInstanceStackInstanceStatus,
            'status_reason': str,
            'organizational_unit_id': str,
            'drift_status': StackDriftStatus,
            'last_drift_check_timestamp': datetime,
            'last_operation_id': str
        }

        self.attribute_map = {
            'stack_set_id': 'StackSetId',
            'region': 'Region',
            'account': 'Account',
            'stack_id': 'StackId',
            'parameter_overrides': 'ParameterOverrides',
            'status': 'Status',
            'stack_instance_status': 'StackInstanceStatus',
            'status_reason': 'StatusReason',
            'organizational_unit_id': 'OrganizationalUnitId',
            'drift_status': 'DriftStatus',
            'last_drift_check_timestamp': 'LastDriftCheckTimestamp',
            'last_operation_id': 'LastOperationId'
        }

        self._stack_set_id = stack_set_id
        self._region = region
        self._account = account
        self._stack_id = stack_id
        self._parameter_overrides = parameter_overrides
        self._status = status
        self._stack_instance_status = stack_instance_status
        self._status_reason = status_reason
        self._organizational_unit_id = organizational_unit_id
        self._drift_status = drift_status
        self._last_drift_check_timestamp = last_drift_check_timestamp
        self._last_operation_id = last_operation_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeStackInstanceOutputStackInstance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeStackInstanceOutput_StackInstance of this DescribeStackInstanceOutputStackInstance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stack_set_id(self):
        """Gets the stack_set_id of this DescribeStackInstanceOutputStackInstance.


        :return: The stack_set_id of this DescribeStackInstanceOutputStackInstance.
        :rtype: str
        """
        return self._stack_set_id

    @stack_set_id.setter
    def stack_set_id(self, stack_set_id):
        """Sets the stack_set_id of this DescribeStackInstanceOutputStackInstance.


        :param stack_set_id: The stack_set_id of this DescribeStackInstanceOutputStackInstance.
        :type stack_set_id: str
        """

        self._stack_set_id = stack_set_id

    @property
    def region(self):
        """Gets the region of this DescribeStackInstanceOutputStackInstance.


        :return: The region of this DescribeStackInstanceOutputStackInstance.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this DescribeStackInstanceOutputStackInstance.


        :param region: The region of this DescribeStackInstanceOutputStackInstance.
        :type region: str
        """

        self._region = region

    @property
    def account(self):
        """Gets the account of this DescribeStackInstanceOutputStackInstance.


        :return: The account of this DescribeStackInstanceOutputStackInstance.
        :rtype: str
        """
        return self._account

    @account.setter
    def account(self, account):
        """Sets the account of this DescribeStackInstanceOutputStackInstance.


        :param account: The account of this DescribeStackInstanceOutputStackInstance.
        :type account: str
        """

        self._account = account

    @property
    def stack_id(self):
        """Gets the stack_id of this DescribeStackInstanceOutputStackInstance.


        :return: The stack_id of this DescribeStackInstanceOutputStackInstance.
        :rtype: str
        """
        return self._stack_id

    @stack_id.setter
    def stack_id(self, stack_id):
        """Sets the stack_id of this DescribeStackInstanceOutputStackInstance.


        :param stack_id: The stack_id of this DescribeStackInstanceOutputStackInstance.
        :type stack_id: str
        """

        self._stack_id = stack_id

    @property
    def parameter_overrides(self):
        """Gets the parameter_overrides of this DescribeStackInstanceOutputStackInstance.


        :return: The parameter_overrides of this DescribeStackInstanceOutputStackInstance.
        :rtype: List
        """
        return self._parameter_overrides

    @parameter_overrides.setter
    def parameter_overrides(self, parameter_overrides):
        """Sets the parameter_overrides of this DescribeStackInstanceOutputStackInstance.


        :param parameter_overrides: The parameter_overrides of this DescribeStackInstanceOutputStackInstance.
        :type parameter_overrides: List
        """

        self._parameter_overrides = parameter_overrides

    @property
    def status(self):
        """Gets the status of this DescribeStackInstanceOutputStackInstance.


        :return: The status of this DescribeStackInstanceOutputStackInstance.
        :rtype: StackInstanceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeStackInstanceOutputStackInstance.


        :param status: The status of this DescribeStackInstanceOutputStackInstance.
        :type status: StackInstanceStatus
        """

        self._status = status

    @property
    def stack_instance_status(self):
        """Gets the stack_instance_status of this DescribeStackInstanceOutputStackInstance.


        :return: The stack_instance_status of this DescribeStackInstanceOutputStackInstance.
        :rtype: StackInstanceStackInstanceStatus
        """
        return self._stack_instance_status

    @stack_instance_status.setter
    def stack_instance_status(self, stack_instance_status):
        """Sets the stack_instance_status of this DescribeStackInstanceOutputStackInstance.


        :param stack_instance_status: The stack_instance_status of this DescribeStackInstanceOutputStackInstance.
        :type stack_instance_status: StackInstanceStackInstanceStatus
        """

        self._stack_instance_status = stack_instance_status

    @property
    def status_reason(self):
        """Gets the status_reason of this DescribeStackInstanceOutputStackInstance.


        :return: The status_reason of this DescribeStackInstanceOutputStackInstance.
        :rtype: str
        """
        return self._status_reason

    @status_reason.setter
    def status_reason(self, status_reason):
        """Sets the status_reason of this DescribeStackInstanceOutputStackInstance.


        :param status_reason: The status_reason of this DescribeStackInstanceOutputStackInstance.
        :type status_reason: str
        """

        self._status_reason = status_reason

    @property
    def organizational_unit_id(self):
        """Gets the organizational_unit_id of this DescribeStackInstanceOutputStackInstance.


        :return: The organizational_unit_id of this DescribeStackInstanceOutputStackInstance.
        :rtype: str
        """
        return self._organizational_unit_id

    @organizational_unit_id.setter
    def organizational_unit_id(self, organizational_unit_id):
        """Sets the organizational_unit_id of this DescribeStackInstanceOutputStackInstance.


        :param organizational_unit_id: The organizational_unit_id of this DescribeStackInstanceOutputStackInstance.
        :type organizational_unit_id: str
        """

        self._organizational_unit_id = organizational_unit_id

    @property
    def drift_status(self):
        """Gets the drift_status of this DescribeStackInstanceOutputStackInstance.


        :return: The drift_status of this DescribeStackInstanceOutputStackInstance.
        :rtype: StackDriftStatus
        """
        return self._drift_status

    @drift_status.setter
    def drift_status(self, drift_status):
        """Sets the drift_status of this DescribeStackInstanceOutputStackInstance.


        :param drift_status: The drift_status of this DescribeStackInstanceOutputStackInstance.
        :type drift_status: StackDriftStatus
        """

        self._drift_status = drift_status

    @property
    def last_drift_check_timestamp(self):
        """Gets the last_drift_check_timestamp of this DescribeStackInstanceOutputStackInstance.


        :return: The last_drift_check_timestamp of this DescribeStackInstanceOutputStackInstance.
        :rtype: datetime
        """
        return self._last_drift_check_timestamp

    @last_drift_check_timestamp.setter
    def last_drift_check_timestamp(self, last_drift_check_timestamp):
        """Sets the last_drift_check_timestamp of this DescribeStackInstanceOutputStackInstance.


        :param last_drift_check_timestamp: The last_drift_check_timestamp of this DescribeStackInstanceOutputStackInstance.
        :type last_drift_check_timestamp: datetime
        """

        self._last_drift_check_timestamp = last_drift_check_timestamp

    @property
    def last_operation_id(self):
        """Gets the last_operation_id of this DescribeStackInstanceOutputStackInstance.


        :return: The last_operation_id of this DescribeStackInstanceOutputStackInstance.
        :rtype: str
        """
        return self._last_operation_id

    @last_operation_id.setter
    def last_operation_id(self, last_operation_id):
        """Sets the last_operation_id of this DescribeStackInstanceOutputStackInstance.


        :param last_operation_id: The last_operation_id of this DescribeStackInstanceOutputStackInstance.
        :type last_operation_id: str
        """

        self._last_operation_id = last_operation_id
