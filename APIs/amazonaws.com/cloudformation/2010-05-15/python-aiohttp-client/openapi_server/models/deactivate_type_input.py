# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.third_party_type import ThirdPartyType
from openapi_server import util


class DeactivateTypeInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type_name: str=None, type: ThirdPartyType=None, arn: str=None):
        """DeactivateTypeInput - a model defined in OpenAPI

        :param type_name: The type_name of this DeactivateTypeInput.
        :param type: The type of this DeactivateTypeInput.
        :param arn: The arn of this DeactivateTypeInput.
        """
        self.openapi_types = {
            'type_name': str,
            'type': ThirdPartyType,
            'arn': str
        }

        self.attribute_map = {
            'type_name': 'TypeName',
            'type': 'Type',
            'arn': 'Arn'
        }

        self._type_name = type_name
        self._type = type
        self._arn = arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeactivateTypeInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeactivateTypeInput of this DeactivateTypeInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type_name(self):
        """Gets the type_name of this DeactivateTypeInput.


        :return: The type_name of this DeactivateTypeInput.
        :rtype: str
        """
        return self._type_name

    @type_name.setter
    def type_name(self, type_name):
        """Sets the type_name of this DeactivateTypeInput.


        :param type_name: The type_name of this DeactivateTypeInput.
        :type type_name: str
        """

        self._type_name = type_name

    @property
    def type(self):
        """Gets the type of this DeactivateTypeInput.


        :return: The type of this DeactivateTypeInput.
        :rtype: ThirdPartyType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DeactivateTypeInput.


        :param type: The type of this DeactivateTypeInput.
        :type type: ThirdPartyType
        """

        self._type = type

    @property
    def arn(self):
        """Gets the arn of this DeactivateTypeInput.


        :return: The arn of this DeactivateTypeInput.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this DeactivateTypeInput.


        :param arn: The arn of this DeactivateTypeInput.
        :type arn: str
        """

        self._arn = arn
