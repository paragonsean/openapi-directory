# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TypeConfigurationDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, alias: str=None, configuration: str=None, last_updated: datetime=None, type_arn: str=None, type_name: str=None, is_default_configuration: bool=None):
        """TypeConfigurationDetails - a model defined in OpenAPI

        :param arn: The arn of this TypeConfigurationDetails.
        :param alias: The alias of this TypeConfigurationDetails.
        :param configuration: The configuration of this TypeConfigurationDetails.
        :param last_updated: The last_updated of this TypeConfigurationDetails.
        :param type_arn: The type_arn of this TypeConfigurationDetails.
        :param type_name: The type_name of this TypeConfigurationDetails.
        :param is_default_configuration: The is_default_configuration of this TypeConfigurationDetails.
        """
        self.openapi_types = {
            'arn': str,
            'alias': str,
            'configuration': str,
            'last_updated': datetime,
            'type_arn': str,
            'type_name': str,
            'is_default_configuration': bool
        }

        self.attribute_map = {
            'arn': 'Arn',
            'alias': 'Alias',
            'configuration': 'Configuration',
            'last_updated': 'LastUpdated',
            'type_arn': 'TypeArn',
            'type_name': 'TypeName',
            'is_default_configuration': 'IsDefaultConfiguration'
        }

        self._arn = arn
        self._alias = alias
        self._configuration = configuration
        self._last_updated = last_updated
        self._type_arn = type_arn
        self._type_name = type_name
        self._is_default_configuration = is_default_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TypeConfigurationDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TypeConfigurationDetails of this TypeConfigurationDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this TypeConfigurationDetails.


        :return: The arn of this TypeConfigurationDetails.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this TypeConfigurationDetails.


        :param arn: The arn of this TypeConfigurationDetails.
        :type arn: str
        """

        self._arn = arn

    @property
    def alias(self):
        """Gets the alias of this TypeConfigurationDetails.


        :return: The alias of this TypeConfigurationDetails.
        :rtype: str
        """
        return self._alias

    @alias.setter
    def alias(self, alias):
        """Sets the alias of this TypeConfigurationDetails.


        :param alias: The alias of this TypeConfigurationDetails.
        :type alias: str
        """

        self._alias = alias

    @property
    def configuration(self):
        """Gets the configuration of this TypeConfigurationDetails.


        :return: The configuration of this TypeConfigurationDetails.
        :rtype: str
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this TypeConfigurationDetails.


        :param configuration: The configuration of this TypeConfigurationDetails.
        :type configuration: str
        """

        self._configuration = configuration

    @property
    def last_updated(self):
        """Gets the last_updated of this TypeConfigurationDetails.


        :return: The last_updated of this TypeConfigurationDetails.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this TypeConfigurationDetails.


        :param last_updated: The last_updated of this TypeConfigurationDetails.
        :type last_updated: datetime
        """

        self._last_updated = last_updated

    @property
    def type_arn(self):
        """Gets the type_arn of this TypeConfigurationDetails.


        :return: The type_arn of this TypeConfigurationDetails.
        :rtype: str
        """
        return self._type_arn

    @type_arn.setter
    def type_arn(self, type_arn):
        """Sets the type_arn of this TypeConfigurationDetails.


        :param type_arn: The type_arn of this TypeConfigurationDetails.
        :type type_arn: str
        """

        self._type_arn = type_arn

    @property
    def type_name(self):
        """Gets the type_name of this TypeConfigurationDetails.


        :return: The type_name of this TypeConfigurationDetails.
        :rtype: str
        """
        return self._type_name

    @type_name.setter
    def type_name(self, type_name):
        """Sets the type_name of this TypeConfigurationDetails.


        :param type_name: The type_name of this TypeConfigurationDetails.
        :type type_name: str
        """

        self._type_name = type_name

    @property
    def is_default_configuration(self):
        """Gets the is_default_configuration of this TypeConfigurationDetails.


        :return: The is_default_configuration of this TypeConfigurationDetails.
        :rtype: bool
        """
        return self._is_default_configuration

    @is_default_configuration.setter
    def is_default_configuration(self, is_default_configuration):
        """Sets the is_default_configuration of this TypeConfigurationDetails.


        :param is_default_configuration: The is_default_configuration of this TypeConfigurationDetails.
        :type is_default_configuration: bool
        """

        self._is_default_configuration = is_default_configuration
