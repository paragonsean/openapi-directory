# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.call_as import CallAs
from openapi_server.models.detect_stack_set_drift_input_operation_preferences import DetectStackSetDriftInputOperationPreferences
from openapi_server import util


class ImportStacksToStackSetInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stack_set_name: str=None, stack_ids: List=None, stack_ids_url: str=None, organizational_unit_ids: List=None, operation_preferences: DetectStackSetDriftInputOperationPreferences=None, operation_id: str=None, call_as: CallAs=None):
        """ImportStacksToStackSetInput - a model defined in OpenAPI

        :param stack_set_name: The stack_set_name of this ImportStacksToStackSetInput.
        :param stack_ids: The stack_ids of this ImportStacksToStackSetInput.
        :param stack_ids_url: The stack_ids_url of this ImportStacksToStackSetInput.
        :param organizational_unit_ids: The organizational_unit_ids of this ImportStacksToStackSetInput.
        :param operation_preferences: The operation_preferences of this ImportStacksToStackSetInput.
        :param operation_id: The operation_id of this ImportStacksToStackSetInput.
        :param call_as: The call_as of this ImportStacksToStackSetInput.
        """
        self.openapi_types = {
            'stack_set_name': str,
            'stack_ids': List,
            'stack_ids_url': str,
            'organizational_unit_ids': List,
            'operation_preferences': DetectStackSetDriftInputOperationPreferences,
            'operation_id': str,
            'call_as': CallAs
        }

        self.attribute_map = {
            'stack_set_name': 'StackSetName',
            'stack_ids': 'StackIds',
            'stack_ids_url': 'StackIdsUrl',
            'organizational_unit_ids': 'OrganizationalUnitIds',
            'operation_preferences': 'OperationPreferences',
            'operation_id': 'OperationId',
            'call_as': 'CallAs'
        }

        self._stack_set_name = stack_set_name
        self._stack_ids = stack_ids
        self._stack_ids_url = stack_ids_url
        self._organizational_unit_ids = organizational_unit_ids
        self._operation_preferences = operation_preferences
        self._operation_id = operation_id
        self._call_as = call_as

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportStacksToStackSetInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportStacksToStackSetInput of this ImportStacksToStackSetInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stack_set_name(self):
        """Gets the stack_set_name of this ImportStacksToStackSetInput.


        :return: The stack_set_name of this ImportStacksToStackSetInput.
        :rtype: str
        """
        return self._stack_set_name

    @stack_set_name.setter
    def stack_set_name(self, stack_set_name):
        """Sets the stack_set_name of this ImportStacksToStackSetInput.


        :param stack_set_name: The stack_set_name of this ImportStacksToStackSetInput.
        :type stack_set_name: str
        """
        if stack_set_name is None:
            raise ValueError("Invalid value for `stack_set_name`, must not be `None`")

        self._stack_set_name = stack_set_name

    @property
    def stack_ids(self):
        """Gets the stack_ids of this ImportStacksToStackSetInput.


        :return: The stack_ids of this ImportStacksToStackSetInput.
        :rtype: List
        """
        return self._stack_ids

    @stack_ids.setter
    def stack_ids(self, stack_ids):
        """Sets the stack_ids of this ImportStacksToStackSetInput.


        :param stack_ids: The stack_ids of this ImportStacksToStackSetInput.
        :type stack_ids: List
        """

        self._stack_ids = stack_ids

    @property
    def stack_ids_url(self):
        """Gets the stack_ids_url of this ImportStacksToStackSetInput.


        :return: The stack_ids_url of this ImportStacksToStackSetInput.
        :rtype: str
        """
        return self._stack_ids_url

    @stack_ids_url.setter
    def stack_ids_url(self, stack_ids_url):
        """Sets the stack_ids_url of this ImportStacksToStackSetInput.


        :param stack_ids_url: The stack_ids_url of this ImportStacksToStackSetInput.
        :type stack_ids_url: str
        """

        self._stack_ids_url = stack_ids_url

    @property
    def organizational_unit_ids(self):
        """Gets the organizational_unit_ids of this ImportStacksToStackSetInput.


        :return: The organizational_unit_ids of this ImportStacksToStackSetInput.
        :rtype: List
        """
        return self._organizational_unit_ids

    @organizational_unit_ids.setter
    def organizational_unit_ids(self, organizational_unit_ids):
        """Sets the organizational_unit_ids of this ImportStacksToStackSetInput.


        :param organizational_unit_ids: The organizational_unit_ids of this ImportStacksToStackSetInput.
        :type organizational_unit_ids: List
        """

        self._organizational_unit_ids = organizational_unit_ids

    @property
    def operation_preferences(self):
        """Gets the operation_preferences of this ImportStacksToStackSetInput.


        :return: The operation_preferences of this ImportStacksToStackSetInput.
        :rtype: DetectStackSetDriftInputOperationPreferences
        """
        return self._operation_preferences

    @operation_preferences.setter
    def operation_preferences(self, operation_preferences):
        """Sets the operation_preferences of this ImportStacksToStackSetInput.


        :param operation_preferences: The operation_preferences of this ImportStacksToStackSetInput.
        :type operation_preferences: DetectStackSetDriftInputOperationPreferences
        """

        self._operation_preferences = operation_preferences

    @property
    def operation_id(self):
        """Gets the operation_id of this ImportStacksToStackSetInput.


        :return: The operation_id of this ImportStacksToStackSetInput.
        :rtype: str
        """
        return self._operation_id

    @operation_id.setter
    def operation_id(self, operation_id):
        """Sets the operation_id of this ImportStacksToStackSetInput.


        :param operation_id: The operation_id of this ImportStacksToStackSetInput.
        :type operation_id: str
        """

        self._operation_id = operation_id

    @property
    def call_as(self):
        """Gets the call_as of this ImportStacksToStackSetInput.


        :return: The call_as of this ImportStacksToStackSetInput.
        :rtype: CallAs
        """
        return self._call_as

    @call_as.setter
    def call_as(self, call_as):
        """Sets the call_as of this ImportStacksToStackSetInput.


        :param call_as: The call_as of this ImportStacksToStackSetInput.
        :type call_as: CallAs
        """

        self._call_as = call_as
