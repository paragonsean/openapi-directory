# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_stack_instance_output_stack_instance import DescribeStackInstanceOutputStackInstance
from openapi_server import util


class DescribeStackInstanceOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stack_instance: DescribeStackInstanceOutputStackInstance=None):
        """DescribeStackInstanceOutput - a model defined in OpenAPI

        :param stack_instance: The stack_instance of this DescribeStackInstanceOutput.
        """
        self.openapi_types = {
            'stack_instance': DescribeStackInstanceOutputStackInstance
        }

        self.attribute_map = {
            'stack_instance': 'StackInstance'
        }

        self._stack_instance = stack_instance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeStackInstanceOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeStackInstanceOutput of this DescribeStackInstanceOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stack_instance(self):
        """Gets the stack_instance of this DescribeStackInstanceOutput.


        :return: The stack_instance of this DescribeStackInstanceOutput.
        :rtype: DescribeStackInstanceOutputStackInstance
        """
        return self._stack_instance

    @stack_instance.setter
    def stack_instance(self, stack_instance):
        """Sets the stack_instance of this DescribeStackInstanceOutput.


        :param stack_instance: The stack_instance of this DescribeStackInstanceOutput.
        :type stack_instance: DescribeStackInstanceOutputStackInstance
        """

        self._stack_instance = stack_instance
