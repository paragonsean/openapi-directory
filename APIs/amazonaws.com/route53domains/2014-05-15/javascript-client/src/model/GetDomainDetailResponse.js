/**
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetDomainDetailResponseAdminContact from './GetDomainDetailResponseAdminContact';
import GetDomainDetailResponseRegistrantContact from './GetDomainDetailResponseRegistrantContact';
import GetDomainDetailResponseTechContact from './GetDomainDetailResponseTechContact';

/**
 * The GetDomainDetailResponse model module.
 * @module model/GetDomainDetailResponse
 * @version 2014-05-15
 */
class GetDomainDetailResponse {
    /**
     * Constructs a new <code>GetDomainDetailResponse</code>.
     * The GetDomainDetail response includes the following elements.
     * @alias module:model/GetDomainDetailResponse
     */
    constructor() { 
        
        GetDomainDetailResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetDomainDetailResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetDomainDetailResponse} obj Optional instance to populate.
     * @return {module:model/GetDomainDetailResponse} The populated <code>GetDomainDetailResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetDomainDetailResponse();

            if (data.hasOwnProperty('DomainName')) {
                obj['DomainName'] = ApiClient.convertToType(data['DomainName'], 'String');
            }
            if (data.hasOwnProperty('Nameservers')) {
                obj['Nameservers'] = ApiClient.convertToType(data['Nameservers'], Array);
            }
            if (data.hasOwnProperty('AutoRenew')) {
                obj['AutoRenew'] = ApiClient.convertToType(data['AutoRenew'], 'Boolean');
            }
            if (data.hasOwnProperty('AdminContact')) {
                obj['AdminContact'] = GetDomainDetailResponseAdminContact.constructFromObject(data['AdminContact']);
            }
            if (data.hasOwnProperty('RegistrantContact')) {
                obj['RegistrantContact'] = GetDomainDetailResponseRegistrantContact.constructFromObject(data['RegistrantContact']);
            }
            if (data.hasOwnProperty('TechContact')) {
                obj['TechContact'] = GetDomainDetailResponseTechContact.constructFromObject(data['TechContact']);
            }
            if (data.hasOwnProperty('AdminPrivacy')) {
                obj['AdminPrivacy'] = ApiClient.convertToType(data['AdminPrivacy'], 'Boolean');
            }
            if (data.hasOwnProperty('RegistrantPrivacy')) {
                obj['RegistrantPrivacy'] = ApiClient.convertToType(data['RegistrantPrivacy'], 'Boolean');
            }
            if (data.hasOwnProperty('TechPrivacy')) {
                obj['TechPrivacy'] = ApiClient.convertToType(data['TechPrivacy'], 'Boolean');
            }
            if (data.hasOwnProperty('RegistrarName')) {
                obj['RegistrarName'] = ApiClient.convertToType(data['RegistrarName'], 'String');
            }
            if (data.hasOwnProperty('WhoIsServer')) {
                obj['WhoIsServer'] = ApiClient.convertToType(data['WhoIsServer'], 'String');
            }
            if (data.hasOwnProperty('RegistrarUrl')) {
                obj['RegistrarUrl'] = ApiClient.convertToType(data['RegistrarUrl'], 'String');
            }
            if (data.hasOwnProperty('AbuseContactEmail')) {
                obj['AbuseContactEmail'] = ApiClient.convertToType(data['AbuseContactEmail'], 'String');
            }
            if (data.hasOwnProperty('AbuseContactPhone')) {
                obj['AbuseContactPhone'] = ApiClient.convertToType(data['AbuseContactPhone'], 'String');
            }
            if (data.hasOwnProperty('RegistryDomainId')) {
                obj['RegistryDomainId'] = ApiClient.convertToType(data['RegistryDomainId'], 'String');
            }
            if (data.hasOwnProperty('CreationDate')) {
                obj['CreationDate'] = ApiClient.convertToType(data['CreationDate'], 'Date');
            }
            if (data.hasOwnProperty('UpdatedDate')) {
                obj['UpdatedDate'] = ApiClient.convertToType(data['UpdatedDate'], 'Date');
            }
            if (data.hasOwnProperty('ExpirationDate')) {
                obj['ExpirationDate'] = ApiClient.convertToType(data['ExpirationDate'], 'Date');
            }
            if (data.hasOwnProperty('Reseller')) {
                obj['Reseller'] = ApiClient.convertToType(data['Reseller'], 'String');
            }
            if (data.hasOwnProperty('DnsSec')) {
                obj['DnsSec'] = ApiClient.convertToType(data['DnsSec'], 'String');
            }
            if (data.hasOwnProperty('StatusList')) {
                obj['StatusList'] = ApiClient.convertToType(data['StatusList'], Array);
            }
            if (data.hasOwnProperty('DnssecKeys')) {
                obj['DnssecKeys'] = ApiClient.convertToType(data['DnssecKeys'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetDomainDetailResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetDomainDetailResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `DomainName`
        if (data['DomainName']) { // data not null
          String.validateJSON(data['DomainName']);
        }
        // validate the optional field `Nameservers`
        if (data['Nameservers']) { // data not null
          Array.validateJSON(data['Nameservers']);
        }
        // validate the optional field `AutoRenew`
        if (data['AutoRenew']) { // data not null
          Boolean.validateJSON(data['AutoRenew']);
        }
        // validate the optional field `AdminContact`
        if (data['AdminContact']) { // data not null
          GetDomainDetailResponseAdminContact.validateJSON(data['AdminContact']);
        }
        // validate the optional field `RegistrantContact`
        if (data['RegistrantContact']) { // data not null
          GetDomainDetailResponseRegistrantContact.validateJSON(data['RegistrantContact']);
        }
        // validate the optional field `TechContact`
        if (data['TechContact']) { // data not null
          GetDomainDetailResponseTechContact.validateJSON(data['TechContact']);
        }
        // validate the optional field `AdminPrivacy`
        if (data['AdminPrivacy']) { // data not null
          Boolean.validateJSON(data['AdminPrivacy']);
        }
        // validate the optional field `RegistrantPrivacy`
        if (data['RegistrantPrivacy']) { // data not null
          Boolean.validateJSON(data['RegistrantPrivacy']);
        }
        // validate the optional field `TechPrivacy`
        if (data['TechPrivacy']) { // data not null
          Boolean.validateJSON(data['TechPrivacy']);
        }
        // validate the optional field `RegistrarName`
        if (data['RegistrarName']) { // data not null
          String.validateJSON(data['RegistrarName']);
        }
        // validate the optional field `WhoIsServer`
        if (data['WhoIsServer']) { // data not null
          String.validateJSON(data['WhoIsServer']);
        }
        // validate the optional field `RegistrarUrl`
        if (data['RegistrarUrl']) { // data not null
          String.validateJSON(data['RegistrarUrl']);
        }
        // validate the optional field `AbuseContactEmail`
        if (data['AbuseContactEmail']) { // data not null
          String.validateJSON(data['AbuseContactEmail']);
        }
        // validate the optional field `AbuseContactPhone`
        if (data['AbuseContactPhone']) { // data not null
          String.validateJSON(data['AbuseContactPhone']);
        }
        // validate the optional field `RegistryDomainId`
        if (data['RegistryDomainId']) { // data not null
          String.validateJSON(data['RegistryDomainId']);
        }
        // validate the optional field `CreationDate`
        if (data['CreationDate']) { // data not null
          Date.validateJSON(data['CreationDate']);
        }
        // validate the optional field `UpdatedDate`
        if (data['UpdatedDate']) { // data not null
          Date.validateJSON(data['UpdatedDate']);
        }
        // validate the optional field `ExpirationDate`
        if (data['ExpirationDate']) { // data not null
          Date.validateJSON(data['ExpirationDate']);
        }
        // validate the optional field `Reseller`
        if (data['Reseller']) { // data not null
          String.validateJSON(data['Reseller']);
        }
        // validate the optional field `DnsSec`
        if (data['DnsSec']) { // data not null
          String.validateJSON(data['DnsSec']);
        }
        // validate the optional field `StatusList`
        if (data['StatusList']) { // data not null
          Array.validateJSON(data['StatusList']);
        }
        // validate the optional field `DnssecKeys`
        if (data['DnssecKeys']) { // data not null
          Array.validateJSON(data['DnssecKeys']);
        }

        return true;
    }


}



/**
 * @member {String} DomainName
 */
GetDomainDetailResponse.prototype['DomainName'] = undefined;

/**
 * @member {Array} Nameservers
 */
GetDomainDetailResponse.prototype['Nameservers'] = undefined;

/**
 * @member {Boolean} AutoRenew
 */
GetDomainDetailResponse.prototype['AutoRenew'] = undefined;

/**
 * @member {module:model/GetDomainDetailResponseAdminContact} AdminContact
 */
GetDomainDetailResponse.prototype['AdminContact'] = undefined;

/**
 * @member {module:model/GetDomainDetailResponseRegistrantContact} RegistrantContact
 */
GetDomainDetailResponse.prototype['RegistrantContact'] = undefined;

/**
 * @member {module:model/GetDomainDetailResponseTechContact} TechContact
 */
GetDomainDetailResponse.prototype['TechContact'] = undefined;

/**
 * @member {Boolean} AdminPrivacy
 */
GetDomainDetailResponse.prototype['AdminPrivacy'] = undefined;

/**
 * @member {Boolean} RegistrantPrivacy
 */
GetDomainDetailResponse.prototype['RegistrantPrivacy'] = undefined;

/**
 * @member {Boolean} TechPrivacy
 */
GetDomainDetailResponse.prototype['TechPrivacy'] = undefined;

/**
 * @member {String} RegistrarName
 */
GetDomainDetailResponse.prototype['RegistrarName'] = undefined;

/**
 * @member {String} WhoIsServer
 */
GetDomainDetailResponse.prototype['WhoIsServer'] = undefined;

/**
 * @member {String} RegistrarUrl
 */
GetDomainDetailResponse.prototype['RegistrarUrl'] = undefined;

/**
 * @member {String} AbuseContactEmail
 */
GetDomainDetailResponse.prototype['AbuseContactEmail'] = undefined;

/**
 * @member {String} AbuseContactPhone
 */
GetDomainDetailResponse.prototype['AbuseContactPhone'] = undefined;

/**
 * @member {String} RegistryDomainId
 */
GetDomainDetailResponse.prototype['RegistryDomainId'] = undefined;

/**
 * @member {Date} CreationDate
 */
GetDomainDetailResponse.prototype['CreationDate'] = undefined;

/**
 * @member {Date} UpdatedDate
 */
GetDomainDetailResponse.prototype['UpdatedDate'] = undefined;

/**
 * @member {Date} ExpirationDate
 */
GetDomainDetailResponse.prototype['ExpirationDate'] = undefined;

/**
 * @member {String} Reseller
 */
GetDomainDetailResponse.prototype['Reseller'] = undefined;

/**
 * @member {String} DnsSec
 */
GetDomainDetailResponse.prototype['DnsSec'] = undefined;

/**
 * @member {Array} StatusList
 */
GetDomainDetailResponse.prototype['StatusList'] = undefined;

/**
 * @member {Array} DnssecKeys
 */
GetDomainDetailResponse.prototype['DnssecKeys'] = undefined;






export default GetDomainDetailResponse;

