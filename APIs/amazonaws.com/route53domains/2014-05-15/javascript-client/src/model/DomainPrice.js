/**
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DomainPriceChangeOwnershipPrice from './DomainPriceChangeOwnershipPrice';
import DomainPriceRegistrationPrice from './DomainPriceRegistrationPrice';
import DomainPriceRenewalPrice from './DomainPriceRenewalPrice';
import DomainPriceRestorationPrice from './DomainPriceRestorationPrice';
import DomainPriceTransferPrice from './DomainPriceTransferPrice';

/**
 * The DomainPrice model module.
 * @module model/DomainPrice
 * @version 2014-05-15
 */
class DomainPrice {
    /**
     * Constructs a new <code>DomainPrice</code>.
     * Information about the domain price associated with a TLD.
     * @alias module:model/DomainPrice
     */
    constructor() { 
        
        DomainPrice.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DomainPrice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DomainPrice} obj Optional instance to populate.
     * @return {module:model/DomainPrice} The populated <code>DomainPrice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DomainPrice();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('RegistrationPrice')) {
                obj['RegistrationPrice'] = DomainPriceRegistrationPrice.constructFromObject(data['RegistrationPrice']);
            }
            if (data.hasOwnProperty('TransferPrice')) {
                obj['TransferPrice'] = DomainPriceTransferPrice.constructFromObject(data['TransferPrice']);
            }
            if (data.hasOwnProperty('RenewalPrice')) {
                obj['RenewalPrice'] = DomainPriceRenewalPrice.constructFromObject(data['RenewalPrice']);
            }
            if (data.hasOwnProperty('ChangeOwnershipPrice')) {
                obj['ChangeOwnershipPrice'] = DomainPriceChangeOwnershipPrice.constructFromObject(data['ChangeOwnershipPrice']);
            }
            if (data.hasOwnProperty('RestorationPrice')) {
                obj['RestorationPrice'] = DomainPriceRestorationPrice.constructFromObject(data['RestorationPrice']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DomainPrice</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DomainPrice</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `RegistrationPrice`
        if (data['RegistrationPrice']) { // data not null
          DomainPriceRegistrationPrice.validateJSON(data['RegistrationPrice']);
        }
        // validate the optional field `TransferPrice`
        if (data['TransferPrice']) { // data not null
          DomainPriceTransferPrice.validateJSON(data['TransferPrice']);
        }
        // validate the optional field `RenewalPrice`
        if (data['RenewalPrice']) { // data not null
          DomainPriceRenewalPrice.validateJSON(data['RenewalPrice']);
        }
        // validate the optional field `ChangeOwnershipPrice`
        if (data['ChangeOwnershipPrice']) { // data not null
          DomainPriceChangeOwnershipPrice.validateJSON(data['ChangeOwnershipPrice']);
        }
        // validate the optional field `RestorationPrice`
        if (data['RestorationPrice']) { // data not null
          DomainPriceRestorationPrice.validateJSON(data['RestorationPrice']);
        }

        return true;
    }


}



/**
 * @member {String} Name
 */
DomainPrice.prototype['Name'] = undefined;

/**
 * @member {module:model/DomainPriceRegistrationPrice} RegistrationPrice
 */
DomainPrice.prototype['RegistrationPrice'] = undefined;

/**
 * @member {module:model/DomainPriceTransferPrice} TransferPrice
 */
DomainPrice.prototype['TransferPrice'] = undefined;

/**
 * @member {module:model/DomainPriceRenewalPrice} RenewalPrice
 */
DomainPrice.prototype['RenewalPrice'] = undefined;

/**
 * @member {module:model/DomainPriceChangeOwnershipPrice} ChangeOwnershipPrice
 */
DomainPrice.prototype['ChangeOwnershipPrice'] = undefined;

/**
 * @member {module:model/DomainPriceRestorationPrice} RestorationPrice
 */
DomainPrice.prototype['RestorationPrice'] = undefined;






export default DomainPrice;

