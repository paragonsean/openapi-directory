/**
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContactDetail from './ContactDetail';
import ContactType from './ContactType';
import CountryCode from './CountryCode';

/**
 * The GetDomainDetailResponseAdminContact model module.
 * @module model/GetDomainDetailResponseAdminContact
 * @version 2014-05-15
 */
class GetDomainDetailResponseAdminContact {
    /**
     * Constructs a new <code>GetDomainDetailResponseAdminContact</code>.
     * @alias module:model/GetDomainDetailResponseAdminContact
     * @implements module:model/ContactDetail
     */
    constructor() { 
        ContactDetail.initialize(this);
        GetDomainDetailResponseAdminContact.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetDomainDetailResponseAdminContact</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetDomainDetailResponseAdminContact} obj Optional instance to populate.
     * @return {module:model/GetDomainDetailResponseAdminContact} The populated <code>GetDomainDetailResponseAdminContact</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetDomainDetailResponseAdminContact();
            ContactDetail.constructFromObject(data, obj);

            if (data.hasOwnProperty('FirstName')) {
                obj['FirstName'] = ApiClient.convertToType(data['FirstName'], 'String');
            }
            if (data.hasOwnProperty('LastName')) {
                obj['LastName'] = ApiClient.convertToType(data['LastName'], 'String');
            }
            if (data.hasOwnProperty('ContactType')) {
                obj['ContactType'] = ApiClient.convertToType(data['ContactType'], ContactType);
            }
            if (data.hasOwnProperty('OrganizationName')) {
                obj['OrganizationName'] = ApiClient.convertToType(data['OrganizationName'], 'String');
            }
            if (data.hasOwnProperty('AddressLine1')) {
                obj['AddressLine1'] = ApiClient.convertToType(data['AddressLine1'], 'String');
            }
            if (data.hasOwnProperty('AddressLine2')) {
                obj['AddressLine2'] = ApiClient.convertToType(data['AddressLine2'], 'String');
            }
            if (data.hasOwnProperty('City')) {
                obj['City'] = ApiClient.convertToType(data['City'], 'String');
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], 'String');
            }
            if (data.hasOwnProperty('CountryCode')) {
                obj['CountryCode'] = ApiClient.convertToType(data['CountryCode'], CountryCode);
            }
            if (data.hasOwnProperty('ZipCode')) {
                obj['ZipCode'] = ApiClient.convertToType(data['ZipCode'], 'String');
            }
            if (data.hasOwnProperty('PhoneNumber')) {
                obj['PhoneNumber'] = ApiClient.convertToType(data['PhoneNumber'], 'String');
            }
            if (data.hasOwnProperty('Email')) {
                obj['Email'] = ApiClient.convertToType(data['Email'], 'String');
            }
            if (data.hasOwnProperty('Fax')) {
                obj['Fax'] = ApiClient.convertToType(data['Fax'], 'String');
            }
            if (data.hasOwnProperty('ExtraParams')) {
                obj['ExtraParams'] = ApiClient.convertToType(data['ExtraParams'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetDomainDetailResponseAdminContact</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetDomainDetailResponseAdminContact</code>.
     */
    static validateJSON(data) {
        // validate the optional field `FirstName`
        if (data['FirstName']) { // data not null
          String.validateJSON(data['FirstName']);
        }
        // validate the optional field `LastName`
        if (data['LastName']) { // data not null
          String.validateJSON(data['LastName']);
        }
        // validate the optional field `ContactType`
        if (data['ContactType']) { // data not null
          ContactType.validateJSON(data['ContactType']);
        }
        // validate the optional field `OrganizationName`
        if (data['OrganizationName']) { // data not null
          String.validateJSON(data['OrganizationName']);
        }
        // validate the optional field `AddressLine1`
        if (data['AddressLine1']) { // data not null
          String.validateJSON(data['AddressLine1']);
        }
        // validate the optional field `AddressLine2`
        if (data['AddressLine2']) { // data not null
          String.validateJSON(data['AddressLine2']);
        }
        // validate the optional field `City`
        if (data['City']) { // data not null
          String.validateJSON(data['City']);
        }
        // validate the optional field `State`
        if (data['State']) { // data not null
          String.validateJSON(data['State']);
        }
        // validate the optional field `CountryCode`
        if (data['CountryCode']) { // data not null
          CountryCode.validateJSON(data['CountryCode']);
        }
        // validate the optional field `ZipCode`
        if (data['ZipCode']) { // data not null
          String.validateJSON(data['ZipCode']);
        }
        // validate the optional field `PhoneNumber`
        if (data['PhoneNumber']) { // data not null
          String.validateJSON(data['PhoneNumber']);
        }
        // validate the optional field `Email`
        if (data['Email']) { // data not null
          String.validateJSON(data['Email']);
        }
        // validate the optional field `Fax`
        if (data['Fax']) { // data not null
          String.validateJSON(data['Fax']);
        }
        // validate the optional field `ExtraParams`
        if (data['ExtraParams']) { // data not null
          Array.validateJSON(data['ExtraParams']);
        }

        return true;
    }


}



/**
 * @member {String} FirstName
 */
GetDomainDetailResponseAdminContact.prototype['FirstName'] = undefined;

/**
 * @member {String} LastName
 */
GetDomainDetailResponseAdminContact.prototype['LastName'] = undefined;

/**
 * @member {module:model/ContactType} ContactType
 */
GetDomainDetailResponseAdminContact.prototype['ContactType'] = undefined;

/**
 * @member {String} OrganizationName
 */
GetDomainDetailResponseAdminContact.prototype['OrganizationName'] = undefined;

/**
 * @member {String} AddressLine1
 */
GetDomainDetailResponseAdminContact.prototype['AddressLine1'] = undefined;

/**
 * @member {String} AddressLine2
 */
GetDomainDetailResponseAdminContact.prototype['AddressLine2'] = undefined;

/**
 * @member {String} City
 */
GetDomainDetailResponseAdminContact.prototype['City'] = undefined;

/**
 * @member {String} State
 */
GetDomainDetailResponseAdminContact.prototype['State'] = undefined;

/**
 * @member {module:model/CountryCode} CountryCode
 */
GetDomainDetailResponseAdminContact.prototype['CountryCode'] = undefined;

/**
 * @member {String} ZipCode
 */
GetDomainDetailResponseAdminContact.prototype['ZipCode'] = undefined;

/**
 * @member {String} PhoneNumber
 */
GetDomainDetailResponseAdminContact.prototype['PhoneNumber'] = undefined;

/**
 * @member {String} Email
 */
GetDomainDetailResponseAdminContact.prototype['Email'] = undefined;

/**
 * @member {String} Fax
 */
GetDomainDetailResponseAdminContact.prototype['Fax'] = undefined;

/**
 * @member {Array} ExtraParams
 */
GetDomainDetailResponseAdminContact.prototype['ExtraParams'] = undefined;


// Implement ContactDetail interface:
/**
 * @member {String} FirstName
 */
ContactDetail.prototype['FirstName'] = undefined;
/**
 * @member {String} LastName
 */
ContactDetail.prototype['LastName'] = undefined;
/**
 * @member {module:model/ContactType} ContactType
 */
ContactDetail.prototype['ContactType'] = undefined;
/**
 * @member {String} OrganizationName
 */
ContactDetail.prototype['OrganizationName'] = undefined;
/**
 * @member {String} AddressLine1
 */
ContactDetail.prototype['AddressLine1'] = undefined;
/**
 * @member {String} AddressLine2
 */
ContactDetail.prototype['AddressLine2'] = undefined;
/**
 * @member {String} City
 */
ContactDetail.prototype['City'] = undefined;
/**
 * @member {String} State
 */
ContactDetail.prototype['State'] = undefined;
/**
 * @member {module:model/CountryCode} CountryCode
 */
ContactDetail.prototype['CountryCode'] = undefined;
/**
 * @member {String} ZipCode
 */
ContactDetail.prototype['ZipCode'] = undefined;
/**
 * @member {String} PhoneNumber
 */
ContactDetail.prototype['PhoneNumber'] = undefined;
/**
 * @member {String} Email
 */
ContactDetail.prototype['Email'] = undefined;
/**
 * @member {String} Fax
 */
ContactDetail.prototype['Fax'] = undefined;
/**
 * @member {Array} ExtraParams
 */
ContactDetail.prototype['ExtraParams'] = undefined;




export default GetDomainDetailResponseAdminContact;

