/**
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OperationStatus from './OperationStatus';
import OperationType from './OperationType';
import StatusFlag from './StatusFlag';

/**
 * The OperationSummary model module.
 * @module model/OperationSummary
 * @version 2014-05-15
 */
class OperationSummary {
    /**
     * Constructs a new <code>OperationSummary</code>.
     * OperationSummary includes the following elements.
     * @alias module:model/OperationSummary
     */
    constructor() { 
        
        OperationSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OperationSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OperationSummary} obj Optional instance to populate.
     * @return {module:model/OperationSummary} The populated <code>OperationSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OperationSummary();

            if (data.hasOwnProperty('OperationId')) {
                obj['OperationId'] = ApiClient.convertToType(data['OperationId'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], OperationStatus);
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], OperationType);
            }
            if (data.hasOwnProperty('SubmittedDate')) {
                obj['SubmittedDate'] = ApiClient.convertToType(data['SubmittedDate'], 'Date');
            }
            if (data.hasOwnProperty('DomainName')) {
                obj['DomainName'] = ApiClient.convertToType(data['DomainName'], 'String');
            }
            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
            if (data.hasOwnProperty('StatusFlag')) {
                obj['StatusFlag'] = ApiClient.convertToType(data['StatusFlag'], StatusFlag);
            }
            if (data.hasOwnProperty('LastUpdatedDate')) {
                obj['LastUpdatedDate'] = ApiClient.convertToType(data['LastUpdatedDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OperationSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OperationSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `OperationId`
        if (data['OperationId']) { // data not null
          String.validateJSON(data['OperationId']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          OperationStatus.validateJSON(data['Status']);
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          OperationType.validateJSON(data['Type']);
        }
        // validate the optional field `SubmittedDate`
        if (data['SubmittedDate']) { // data not null
          Date.validateJSON(data['SubmittedDate']);
        }
        // validate the optional field `DomainName`
        if (data['DomainName']) { // data not null
          String.validateJSON(data['DomainName']);
        }
        // validate the optional field `Message`
        if (data['Message']) { // data not null
          String.validateJSON(data['Message']);
        }
        // validate the optional field `StatusFlag`
        if (data['StatusFlag']) { // data not null
          StatusFlag.validateJSON(data['StatusFlag']);
        }
        // validate the optional field `LastUpdatedDate`
        if (data['LastUpdatedDate']) { // data not null
          Date.validateJSON(data['LastUpdatedDate']);
        }

        return true;
    }


}



/**
 * @member {String} OperationId
 */
OperationSummary.prototype['OperationId'] = undefined;

/**
 * @member {module:model/OperationStatus} Status
 */
OperationSummary.prototype['Status'] = undefined;

/**
 * @member {module:model/OperationType} Type
 */
OperationSummary.prototype['Type'] = undefined;

/**
 * @member {Date} SubmittedDate
 */
OperationSummary.prototype['SubmittedDate'] = undefined;

/**
 * @member {String} DomainName
 */
OperationSummary.prototype['DomainName'] = undefined;

/**
 * @member {String} Message
 */
OperationSummary.prototype['Message'] = undefined;

/**
 * @member {module:model/StatusFlag} StatusFlag
 */
OperationSummary.prototype['StatusFlag'] = undefined;

/**
 * @member {Date} LastUpdatedDate
 */
OperationSummary.prototype['LastUpdatedDate'] = undefined;






export default OperationSummary;

