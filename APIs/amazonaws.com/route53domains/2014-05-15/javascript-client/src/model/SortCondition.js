/**
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ListDomainsAttributeName from './ListDomainsAttributeName';
import SortOrder from './SortOrder';

/**
 * The SortCondition model module.
 * @module model/SortCondition
 * @version 2014-05-15
 */
class SortCondition {
    /**
     * Constructs a new <code>SortCondition</code>.
     * Information for sorting a list of domains.
     * @alias module:model/SortCondition
     * @param name {module:model/ListDomainsAttributeName} 
     * @param sortOrder {module:model/SortOrder} 
     */
    constructor(name, sortOrder) { 
        
        SortCondition.initialize(this, name, sortOrder);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, sortOrder) { 
        obj['Name'] = name;
        obj['SortOrder'] = sortOrder;
    }

    /**
     * Constructs a <code>SortCondition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SortCondition} obj Optional instance to populate.
     * @return {module:model/SortCondition} The populated <code>SortCondition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SortCondition();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], ListDomainsAttributeName);
            }
            if (data.hasOwnProperty('SortOrder')) {
                obj['SortOrder'] = ApiClient.convertToType(data['SortOrder'], SortOrder);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SortCondition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SortCondition</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SortCondition.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          ListDomainsAttributeName.validateJSON(data['Name']);
        }
        // validate the optional field `SortOrder`
        if (data['SortOrder']) { // data not null
          SortOrder.validateJSON(data['SortOrder']);
        }

        return true;
    }


}

SortCondition.RequiredProperties = ["Name", "SortOrder"];

/**
 * @member {module:model/ListDomainsAttributeName} Name
 */
SortCondition.prototype['Name'] = undefined;

/**
 * @member {module:model/SortOrder} SortOrder
 */
SortCondition.prototype['SortOrder'] = undefined;






export default SortCondition;

