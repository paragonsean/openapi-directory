/*
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets ExtraParamName
 */
@JsonAdapter(ExtraParamName.Adapter.class)
public enum ExtraParamName {
  
  DUNS_NUMBER("DUNS_NUMBER"),
  
  BRAND_NUMBER("BRAND_NUMBER"),
  
  BIRTH_DEPARTMENT("BIRTH_DEPARTMENT"),
  
  BIRTH_DATE_IN_YYYY_MM_DD("BIRTH_DATE_IN_YYYY_MM_DD"),
  
  BIRTH_COUNTRY("BIRTH_COUNTRY"),
  
  BIRTH_CITY("BIRTH_CITY"),
  
  DOCUMENT_NUMBER("DOCUMENT_NUMBER"),
  
  AU_ID_NUMBER("AU_ID_NUMBER"),
  
  AU_ID_TYPE("AU_ID_TYPE"),
  
  CA_LEGAL_TYPE("CA_LEGAL_TYPE"),
  
  CA_BUSINESS_ENTITY_TYPE("CA_BUSINESS_ENTITY_TYPE"),
  
  CA_LEGAL_REPRESENTATIVE("CA_LEGAL_REPRESENTATIVE"),
  
  CA_LEGAL_REPRESENTATIVE_CAPACITY("CA_LEGAL_REPRESENTATIVE_CAPACITY"),
  
  ES_IDENTIFICATION("ES_IDENTIFICATION"),
  
  ES_IDENTIFICATION_TYPE("ES_IDENTIFICATION_TYPE"),
  
  ES_LEGAL_FORM("ES_LEGAL_FORM"),
  
  FI_BUSINESS_NUMBER("FI_BUSINESS_NUMBER"),
  
  FI_ID_NUMBER("FI_ID_NUMBER"),
  
  FI_NATIONALITY("FI_NATIONALITY"),
  
  FI_ORGANIZATION_TYPE("FI_ORGANIZATION_TYPE"),
  
  IT_NATIONALITY("IT_NATIONALITY"),
  
  IT_PIN("IT_PIN"),
  
  IT_REGISTRANT_ENTITY_TYPE("IT_REGISTRANT_ENTITY_TYPE"),
  
  RU_PASSPORT_DATA("RU_PASSPORT_DATA"),
  
  SE_ID_NUMBER("SE_ID_NUMBER"),
  
  SG_ID_NUMBER("SG_ID_NUMBER"),
  
  VAT_NUMBER("VAT_NUMBER"),
  
  UK_CONTACT_TYPE("UK_CONTACT_TYPE"),
  
  UK_COMPANY_NUMBER("UK_COMPANY_NUMBER"),
  
  EU_COUNTRY_OF_CITIZENSHIP("EU_COUNTRY_OF_CITIZENSHIP"),
  
  AU_PRIORITY_TOKEN("AU_PRIORITY_TOKEN");

  private String value;

  ExtraParamName(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ExtraParamName fromValue(String value) {
    for (ExtraParamName b : ExtraParamName.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ExtraParamName> {
    @Override
    public void write(final JsonWriter jsonWriter, final ExtraParamName enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ExtraParamName read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ExtraParamName.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ExtraParamName.fromValue(value);
  }
}

