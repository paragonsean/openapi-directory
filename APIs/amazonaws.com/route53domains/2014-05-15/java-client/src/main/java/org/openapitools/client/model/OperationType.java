/*
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets OperationType
 */
@JsonAdapter(OperationType.Adapter.class)
public enum OperationType {
  
  REGISTER_DOMAIN("REGISTER_DOMAIN"),
  
  DELETE_DOMAIN("DELETE_DOMAIN"),
  
  TRANSFER_IN_DOMAIN("TRANSFER_IN_DOMAIN"),
  
  UPDATE_DOMAIN_CONTACT("UPDATE_DOMAIN_CONTACT"),
  
  UPDATE_NAMESERVER("UPDATE_NAMESERVER"),
  
  CHANGE_PRIVACY_PROTECTION("CHANGE_PRIVACY_PROTECTION"),
  
  DOMAIN_LOCK("DOMAIN_LOCK"),
  
  ENABLE_AUTORENEW("ENABLE_AUTORENEW"),
  
  DISABLE_AUTORENEW("DISABLE_AUTORENEW"),
  
  ADD_DNSSEC("ADD_DNSSEC"),
  
  REMOVE_DNSSEC("REMOVE_DNSSEC"),
  
  EXPIRE_DOMAIN("EXPIRE_DOMAIN"),
  
  TRANSFER_OUT_DOMAIN("TRANSFER_OUT_DOMAIN"),
  
  CHANGE_DOMAIN_OWNER("CHANGE_DOMAIN_OWNER"),
  
  RENEW_DOMAIN("RENEW_DOMAIN"),
  
  PUSH_DOMAIN("PUSH_DOMAIN"),
  
  INTERNAL_TRANSFER_OUT_DOMAIN("INTERNAL_TRANSFER_OUT_DOMAIN"),
  
  INTERNAL_TRANSFER_IN_DOMAIN("INTERNAL_TRANSFER_IN_DOMAIN");

  private String value;

  OperationType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static OperationType fromValue(String value) {
    for (OperationType b : OperationType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<OperationType> {
    @Override
    public void write(final JsonWriter jsonWriter, final OperationType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public OperationType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return OperationType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    OperationType.fromValue(value);
  }
}

