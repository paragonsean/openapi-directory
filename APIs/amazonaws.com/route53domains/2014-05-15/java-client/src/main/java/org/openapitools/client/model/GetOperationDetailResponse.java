/*
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.OperationStatus;
import org.openapitools.client.model.OperationType;
import org.openapitools.client.model.StatusFlag;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The GetOperationDetail response includes the following elements.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:05.093058-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetOperationDetailResponse {
  public static final String SERIALIZED_NAME_OPERATION_ID = "OperationId";
  @SerializedName(SERIALIZED_NAME_OPERATION_ID)
  private String operationId;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private OperationStatus status;

  public static final String SERIALIZED_NAME_MESSAGE = "Message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_DOMAIN_NAME = "DomainName";
  @SerializedName(SERIALIZED_NAME_DOMAIN_NAME)
  private String domainName;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private OperationType type;

  public static final String SERIALIZED_NAME_SUBMITTED_DATE = "SubmittedDate";
  @SerializedName(SERIALIZED_NAME_SUBMITTED_DATE)
  private OffsetDateTime submittedDate;

  public static final String SERIALIZED_NAME_LAST_UPDATED_DATE = "LastUpdatedDate";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_DATE)
  private OffsetDateTime lastUpdatedDate;

  public static final String SERIALIZED_NAME_STATUS_FLAG = "StatusFlag";
  @SerializedName(SERIALIZED_NAME_STATUS_FLAG)
  private StatusFlag statusFlag;

  public GetOperationDetailResponse() {
  }

  public GetOperationDetailResponse operationId(String operationId) {
    this.operationId = operationId;
    return this;
  }

  /**
   * Get operationId
   * @return operationId
   */
  @javax.annotation.Nullable
  public String getOperationId() {
    return operationId;
  }

  public void setOperationId(String operationId) {
    this.operationId = operationId;
  }


  public GetOperationDetailResponse status(OperationStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public OperationStatus getStatus() {
    return status;
  }

  public void setStatus(OperationStatus status) {
    this.status = status;
  }


  public GetOperationDetailResponse message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public GetOperationDetailResponse domainName(String domainName) {
    this.domainName = domainName;
    return this;
  }

  /**
   * Get domainName
   * @return domainName
   */
  @javax.annotation.Nullable
  public String getDomainName() {
    return domainName;
  }

  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }


  public GetOperationDetailResponse type(OperationType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public OperationType getType() {
    return type;
  }

  public void setType(OperationType type) {
    this.type = type;
  }


  public GetOperationDetailResponse submittedDate(OffsetDateTime submittedDate) {
    this.submittedDate = submittedDate;
    return this;
  }

  /**
   * Get submittedDate
   * @return submittedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getSubmittedDate() {
    return submittedDate;
  }

  public void setSubmittedDate(OffsetDateTime submittedDate) {
    this.submittedDate = submittedDate;
  }


  public GetOperationDetailResponse lastUpdatedDate(OffsetDateTime lastUpdatedDate) {
    this.lastUpdatedDate = lastUpdatedDate;
    return this;
  }

  /**
   * Get lastUpdatedDate
   * @return lastUpdatedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedDate() {
    return lastUpdatedDate;
  }

  public void setLastUpdatedDate(OffsetDateTime lastUpdatedDate) {
    this.lastUpdatedDate = lastUpdatedDate;
  }


  public GetOperationDetailResponse statusFlag(StatusFlag statusFlag) {
    this.statusFlag = statusFlag;
    return this;
  }

  /**
   * Get statusFlag
   * @return statusFlag
   */
  @javax.annotation.Nullable
  public StatusFlag getStatusFlag() {
    return statusFlag;
  }

  public void setStatusFlag(StatusFlag statusFlag) {
    this.statusFlag = statusFlag;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetOperationDetailResponse getOperationDetailResponse = (GetOperationDetailResponse) o;
    return Objects.equals(this.operationId, getOperationDetailResponse.operationId) &&
        Objects.equals(this.status, getOperationDetailResponse.status) &&
        Objects.equals(this.message, getOperationDetailResponse.message) &&
        Objects.equals(this.domainName, getOperationDetailResponse.domainName) &&
        Objects.equals(this.type, getOperationDetailResponse.type) &&
        Objects.equals(this.submittedDate, getOperationDetailResponse.submittedDate) &&
        Objects.equals(this.lastUpdatedDate, getOperationDetailResponse.lastUpdatedDate) &&
        Objects.equals(this.statusFlag, getOperationDetailResponse.statusFlag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operationId, status, message, domainName, type, submittedDate, lastUpdatedDate, statusFlag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetOperationDetailResponse {\n");
    sb.append("    operationId: ").append(toIndentedString(operationId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    submittedDate: ").append(toIndentedString(submittedDate)).append("\n");
    sb.append("    lastUpdatedDate: ").append(toIndentedString(lastUpdatedDate)).append("\n");
    sb.append("    statusFlag: ").append(toIndentedString(statusFlag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("OperationId");
    openapiFields.add("Status");
    openapiFields.add("Message");
    openapiFields.add("DomainName");
    openapiFields.add("Type");
    openapiFields.add("SubmittedDate");
    openapiFields.add("LastUpdatedDate");
    openapiFields.add("StatusFlag");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetOperationDetailResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetOperationDetailResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetOperationDetailResponse is not found in the empty JSON string", GetOperationDetailResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetOperationDetailResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetOperationDetailResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `OperationId`
      if (jsonObj.get("OperationId") != null && !jsonObj.get("OperationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OperationId"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        OperationStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `Message`
      if (jsonObj.get("Message") != null && !jsonObj.get("Message").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Message"));
      }
      // validate the optional field `DomainName`
      if (jsonObj.get("DomainName") != null && !jsonObj.get("DomainName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DomainName"));
      }
      // validate the optional field `Type`
      if (jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) {
        OperationType.validateJsonElement(jsonObj.get("Type"));
      }
      // validate the optional field `SubmittedDate`
      if (jsonObj.get("SubmittedDate") != null && !jsonObj.get("SubmittedDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("SubmittedDate"));
      }
      // validate the optional field `LastUpdatedDate`
      if (jsonObj.get("LastUpdatedDate") != null && !jsonObj.get("LastUpdatedDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdatedDate"));
      }
      // validate the optional field `StatusFlag`
      if (jsonObj.get("StatusFlag") != null && !jsonObj.get("StatusFlag").isJsonNull()) {
        StatusFlag.validateJsonElement(jsonObj.get("StatusFlag"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetOperationDetailResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetOperationDetailResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetOperationDetailResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetOperationDetailResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetOperationDetailResponse>() {
           @Override
           public void write(JsonWriter out, GetOperationDetailResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetOperationDetailResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetOperationDetailResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetOperationDetailResponse
   * @throws IOException if the JSON string is invalid with respect to GetOperationDetailResponse
   */
  public static GetOperationDetailResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetOperationDetailResponse.class);
  }

  /**
   * Convert an instance of GetOperationDetailResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

