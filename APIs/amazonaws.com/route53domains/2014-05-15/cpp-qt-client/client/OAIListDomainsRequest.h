/**
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListDomainsRequest.h
 *
 * The ListDomains request includes the following elements.
 */

#ifndef OAIListDomainsRequest_H
#define OAIListDomainsRequest_H

#include <QJsonObject>

#include "OAIListDomainsRequest_SortCondition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIListDomainsRequest_SortCondition;

class OAIListDomainsRequest : public OAIObject {
public:
    OAIListDomainsRequest();
    OAIListDomainsRequest(QString json);
    ~OAIListDomainsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getFilterConditions() const;
    void setFilterConditions(const QList &filter_conditions);
    bool is_filter_conditions_Set() const;
    bool is_filter_conditions_Valid() const;

    OAIListDomainsRequest_SortCondition getSortCondition() const;
    void setSortCondition(const OAIListDomainsRequest_SortCondition &sort_condition);
    bool is_sort_condition_Set() const;
    bool is_sort_condition_Valid() const;

    QString getMarker() const;
    void setMarker(const QString &marker);
    bool is_marker_Set() const;
    bool is_marker_Valid() const;

    qint32 getMaxItems() const;
    void setMaxItems(const qint32 &max_items);
    bool is_max_items_Set() const;
    bool is_max_items_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_filter_conditions;
    bool m_filter_conditions_isSet;
    bool m_filter_conditions_isValid;

    OAIListDomainsRequest_SortCondition m_sort_condition;
    bool m_sort_condition_isSet;
    bool m_sort_condition_isValid;

    QString m_marker;
    bool m_marker_isSet;
    bool m_marker_isValid;

    qint32 m_max_items;
    bool m_max_items_isSet;
    bool m_max_items_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListDomainsRequest)

#endif // OAIListDomainsRequest_H
