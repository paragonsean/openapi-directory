/**
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRegisterDomainRequest.h
 *
 * The RegisterDomain request includes the following elements.
 */

#ifndef OAIRegisterDomainRequest_H
#define OAIRegisterDomainRequest_H

#include <QJsonObject>

#include "OAIRegisterDomainRequest_AdminContact.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRegisterDomainRequest_AdminContact;

class OAIRegisterDomainRequest : public OAIObject {
public:
    OAIRegisterDomainRequest();
    OAIRegisterDomainRequest(QString json);
    ~OAIRegisterDomainRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    QString getIdnLangCode() const;
    void setIdnLangCode(const QString &idn_lang_code);
    bool is_idn_lang_code_Set() const;
    bool is_idn_lang_code_Valid() const;

    qint32 getDurationInYears() const;
    void setDurationInYears(const qint32 &duration_in_years);
    bool is_duration_in_years_Set() const;
    bool is_duration_in_years_Valid() const;

    bool getAutoRenew() const;
    void setAutoRenew(const bool &auto_renew);
    bool is_auto_renew_Set() const;
    bool is_auto_renew_Valid() const;

    OAIRegisterDomainRequest_AdminContact getAdminContact() const;
    void setAdminContact(const OAIRegisterDomainRequest_AdminContact &admin_contact);
    bool is_admin_contact_Set() const;
    bool is_admin_contact_Valid() const;

    OAIRegisterDomainRequest_AdminContact getRegistrantContact() const;
    void setRegistrantContact(const OAIRegisterDomainRequest_AdminContact &registrant_contact);
    bool is_registrant_contact_Set() const;
    bool is_registrant_contact_Valid() const;

    OAIRegisterDomainRequest_AdminContact getTechContact() const;
    void setTechContact(const OAIRegisterDomainRequest_AdminContact &tech_contact);
    bool is_tech_contact_Set() const;
    bool is_tech_contact_Valid() const;

    bool getPrivacyProtectAdminContact() const;
    void setPrivacyProtectAdminContact(const bool &privacy_protect_admin_contact);
    bool is_privacy_protect_admin_contact_Set() const;
    bool is_privacy_protect_admin_contact_Valid() const;

    bool getPrivacyProtectRegistrantContact() const;
    void setPrivacyProtectRegistrantContact(const bool &privacy_protect_registrant_contact);
    bool is_privacy_protect_registrant_contact_Set() const;
    bool is_privacy_protect_registrant_contact_Valid() const;

    bool getPrivacyProtectTechContact() const;
    void setPrivacyProtectTechContact(const bool &privacy_protect_tech_contact);
    bool is_privacy_protect_tech_contact_Set() const;
    bool is_privacy_protect_tech_contact_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;

    QString m_idn_lang_code;
    bool m_idn_lang_code_isSet;
    bool m_idn_lang_code_isValid;

    qint32 m_duration_in_years;
    bool m_duration_in_years_isSet;
    bool m_duration_in_years_isValid;

    bool m_auto_renew;
    bool m_auto_renew_isSet;
    bool m_auto_renew_isValid;

    OAIRegisterDomainRequest_AdminContact m_admin_contact;
    bool m_admin_contact_isSet;
    bool m_admin_contact_isValid;

    OAIRegisterDomainRequest_AdminContact m_registrant_contact;
    bool m_registrant_contact_isSet;
    bool m_registrant_contact_isValid;

    OAIRegisterDomainRequest_AdminContact m_tech_contact;
    bool m_tech_contact_isSet;
    bool m_tech_contact_isValid;

    bool m_privacy_protect_admin_contact;
    bool m_privacy_protect_admin_contact_isSet;
    bool m_privacy_protect_admin_contact_isValid;

    bool m_privacy_protect_registrant_contact;
    bool m_privacy_protect_registrant_contact_isSet;
    bool m_privacy_protect_registrant_contact_isValid;

    bool m_privacy_protect_tech_contact;
    bool m_privacy_protect_tech_contact_isSet;
    bool m_privacy_protect_tech_contact_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRegisterDomainRequest)

#endif // OAIRegisterDomainRequest_H
