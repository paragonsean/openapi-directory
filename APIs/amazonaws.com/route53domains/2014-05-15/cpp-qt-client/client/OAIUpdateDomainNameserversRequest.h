/**
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateDomainNameserversRequest.h
 *
 * &lt;p&gt;Replaces the current set of name servers for the domain with the specified set of name servers. If you use Amazon Route 53 as your DNS service, specify the four name servers in the delegation set for the hosted zone for the domain.&lt;/p&gt; &lt;p&gt;If successful, this operation returns an operation ID that you can use to track the progress and completion of the action. If the request is not completed successfully, the domain registrant will be notified by email. &lt;/p&gt;
 */

#ifndef OAIUpdateDomainNameserversRequest_H
#define OAIUpdateDomainNameserversRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateDomainNameserversRequest : public OAIObject {
public:
    OAIUpdateDomainNameserversRequest();
    OAIUpdateDomainNameserversRequest(QString json);
    ~OAIUpdateDomainNameserversRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    QString getFiAuthKey() const;
    void setFiAuthKey(const QString &fi_auth_key);
    bool is_fi_auth_key_Set() const;
    bool is_fi_auth_key_Valid() const;

    QList getNameservers() const;
    void setNameservers(const QList &nameservers);
    bool is_nameservers_Set() const;
    bool is_nameservers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;

    QString m_fi_auth_key;
    bool m_fi_auth_key_isSet;
    bool m_fi_auth_key_isValid;

    QList m_nameservers;
    bool m_nameservers_isSet;
    bool m_nameservers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateDomainNameserversRequest)

#endif // OAIUpdateDomainNameserversRequest_H
