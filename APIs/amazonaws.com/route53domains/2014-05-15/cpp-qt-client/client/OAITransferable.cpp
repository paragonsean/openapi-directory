/**
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransferable.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransferable::OAITransferable(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransferable::OAITransferable() {
    this->initializeModel();
}

OAITransferable::~OAITransferable() {}

void OAITransferable::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITransferable::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITransferable::fromJson(QString jsonString) {
    
    if ( jsonString.compare("TRANSFERABLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransferable::TRANSFERABLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNTRANSFERABLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransferable::UNTRANSFERABLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DONT_KNOW", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransferable::DONT_KNOW;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DOMAIN_IN_OWN_ACCOUNT", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransferable::DOMAIN_IN_OWN_ACCOUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DOMAIN_IN_ANOTHER_ACCOUNT", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransferable::DOMAIN_IN_ANOTHER_ACCOUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PREMIUM_DOMAIN", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransferable::PREMIUM_DOMAIN;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITransferable::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITransferable::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITransferable::TRANSFERABLE:
            val = "TRANSFERABLE";
            break;
        case eOAITransferable::UNTRANSFERABLE:
            val = "UNTRANSFERABLE";
            break;
        case eOAITransferable::DONT_KNOW:
            val = "DONT_KNOW";
            break;
        case eOAITransferable::DOMAIN_IN_OWN_ACCOUNT:
            val = "DOMAIN_IN_OWN_ACCOUNT";
            break;
        case eOAITransferable::DOMAIN_IN_ANOTHER_ACCOUNT:
            val = "DOMAIN_IN_ANOTHER_ACCOUNT";
            break;
        case eOAITransferable::PREMIUM_DOMAIN:
            val = "PREMIUM_DOMAIN";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITransferable::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITransferable::eOAITransferable OAITransferable::getValue() const {
    return m_value;
}

void OAITransferable::setValue(const OAITransferable::eOAITransferable& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITransferable::isSet() const {
    
    return m_value_isSet;
}

bool OAITransferable::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
