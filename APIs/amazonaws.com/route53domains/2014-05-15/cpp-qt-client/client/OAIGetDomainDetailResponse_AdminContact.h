/**
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetDomainDetailResponse_AdminContact.h
 *
 * 
 */

#ifndef OAIGetDomainDetailResponse_AdminContact_H
#define OAIGetDomainDetailResponse_AdminContact_H

#include <QJsonObject>

#include "OAIContactType.h"
#include "OAICountryCode.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetDomainDetailResponse_AdminContact : public OAIObject {
public:
    OAIGetDomainDetailResponse_AdminContact();
    OAIGetDomainDetailResponse_AdminContact(QString json);
    ~OAIGetDomainDetailResponse_AdminContact() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    OAIContactType getContactType() const;
    void setContactType(const OAIContactType &contact_type);
    bool is_contact_type_Set() const;
    bool is_contact_type_Valid() const;

    QString getOrganizationName() const;
    void setOrganizationName(const QString &organization_name);
    bool is_organization_name_Set() const;
    bool is_organization_name_Valid() const;

    QString getAddressLine1() const;
    void setAddressLine1(const QString &address_line1);
    bool is_address_line1_Set() const;
    bool is_address_line1_Valid() const;

    QString getAddressLine2() const;
    void setAddressLine2(const QString &address_line2);
    bool is_address_line2_Set() const;
    bool is_address_line2_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAICountryCode getCountryCode() const;
    void setCountryCode(const OAICountryCode &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    QString getZipCode() const;
    void setZipCode(const QString &zip_code);
    bool is_zip_code_Set() const;
    bool is_zip_code_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFax() const;
    void setFax(const QString &fax);
    bool is_fax_Set() const;
    bool is_fax_Valid() const;

    QList getExtraParams() const;
    void setExtraParams(const QList &extra_params);
    bool is_extra_params_Set() const;
    bool is_extra_params_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    OAIContactType m_contact_type;
    bool m_contact_type_isSet;
    bool m_contact_type_isValid;

    QString m_organization_name;
    bool m_organization_name_isSet;
    bool m_organization_name_isValid;

    QString m_address_line1;
    bool m_address_line1_isSet;
    bool m_address_line1_isValid;

    QString m_address_line2;
    bool m_address_line2_isSet;
    bool m_address_line2_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAICountryCode m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    QString m_zip_code;
    bool m_zip_code_isSet;
    bool m_zip_code_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_fax;
    bool m_fax_isSet;
    bool m_fax_isValid;

    QList m_extra_params;
    bool m_extra_params_isSet;
    bool m_extra_params_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetDomainDetailResponse_AdminContact)

#endif // OAIGetDomainDetailResponse_AdminContact_H
