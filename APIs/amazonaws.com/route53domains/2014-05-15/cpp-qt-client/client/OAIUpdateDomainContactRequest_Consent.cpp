/**
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateDomainContactRequest_Consent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateDomainContactRequest_Consent::OAIUpdateDomainContactRequest_Consent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateDomainContactRequest_Consent::OAIUpdateDomainContactRequest_Consent() {
    this->initializeModel();
}

OAIUpdateDomainContactRequest_Consent::~OAIUpdateDomainContactRequest_Consent() {}

void OAIUpdateDomainContactRequest_Consent::initializeModel() {

    m_max_price_isSet = false;
    m_max_price_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;
}

void OAIUpdateDomainContactRequest_Consent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateDomainContactRequest_Consent::fromJsonObject(QJsonObject json) {

    m_max_price_isValid = ::OpenAPI::fromJsonValue(m_max_price, json[QString("MaxPrice")]);
    m_max_price_isSet = !json[QString("MaxPrice")].isNull() && m_max_price_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("Currency")]);
    m_currency_isSet = !json[QString("Currency")].isNull() && m_currency_isValid;
}

QString OAIUpdateDomainContactRequest_Consent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateDomainContactRequest_Consent::asJsonObject() const {
    QJsonObject obj;
    if (m_max_price_isSet) {
        obj.insert(QString("MaxPrice"), ::OpenAPI::toJsonValue(m_max_price));
    }
    if (m_currency_isSet) {
        obj.insert(QString("Currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    return obj;
}

double OAIUpdateDomainContactRequest_Consent::getMaxPrice() const {
    return m_max_price;
}
void OAIUpdateDomainContactRequest_Consent::setMaxPrice(const double &max_price) {
    m_max_price = max_price;
    m_max_price_isSet = true;
}

bool OAIUpdateDomainContactRequest_Consent::is_max_price_Set() const{
    return m_max_price_isSet;
}

bool OAIUpdateDomainContactRequest_Consent::is_max_price_Valid() const{
    return m_max_price_isValid;
}

QString OAIUpdateDomainContactRequest_Consent::getCurrency() const {
    return m_currency;
}
void OAIUpdateDomainContactRequest_Consent::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIUpdateDomainContactRequest_Consent::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIUpdateDomainContactRequest_Consent::is_currency_Valid() const{
    return m_currency_isValid;
}

bool OAIUpdateDomainContactRequest_Consent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateDomainContactRequest_Consent::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_max_price_isValid && m_currency_isValid && true;
}

} // namespace OpenAPI
