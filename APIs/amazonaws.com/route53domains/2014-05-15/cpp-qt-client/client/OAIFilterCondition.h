/**
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilterCondition.h
 *
 * Information for the filtering of a list of domains returned by &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains__ListDomains.html\&quot;&gt;ListDomains&lt;/a&gt;.
 */

#ifndef OAIFilterCondition_H
#define OAIFilterCondition_H

#include <QJsonObject>

#include "OAIListDomainsAttributeName.h"
#include "OAIOperator.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFilterCondition : public OAIObject {
public:
    OAIFilterCondition();
    OAIFilterCondition(QString json);
    ~OAIFilterCondition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIListDomainsAttributeName getName() const;
    void setName(const OAIListDomainsAttributeName &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIOperator getROperator() const;
    void setROperator(const OAIOperator &r_operator);
    bool is_r_operator_Set() const;
    bool is_r_operator_Valid() const;

    QList getValues() const;
    void setValues(const QList &values);
    bool is_values_Set() const;
    bool is_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIListDomainsAttributeName m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIOperator m_r_operator;
    bool m_r_operator_isSet;
    bool m_r_operator_isValid;

    QList m_values;
    bool m_values_isSet;
    bool m_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilterCondition)

#endif // OAIFilterCondition_H
