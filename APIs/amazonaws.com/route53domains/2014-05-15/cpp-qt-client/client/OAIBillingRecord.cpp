/**
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillingRecord.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillingRecord::OAIBillingRecord(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillingRecord::OAIBillingRecord() {
    this->initializeModel();
}

OAIBillingRecord::~OAIBillingRecord() {}

void OAIBillingRecord::initializeModel() {

    m_domain_name_isSet = false;
    m_domain_name_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_invoice_id_isSet = false;
    m_invoice_id_isValid = false;

    m_bill_date_isSet = false;
    m_bill_date_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;
}

void OAIBillingRecord::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillingRecord::fromJsonObject(QJsonObject json) {

    m_domain_name_isValid = ::OpenAPI::fromJsonValue(m_domain_name, json[QString("DomainName")]);
    m_domain_name_isSet = !json[QString("DomainName")].isNull() && m_domain_name_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("Operation")]);
    m_operation_isSet = !json[QString("Operation")].isNull() && m_operation_isValid;

    m_invoice_id_isValid = ::OpenAPI::fromJsonValue(m_invoice_id, json[QString("InvoiceId")]);
    m_invoice_id_isSet = !json[QString("InvoiceId")].isNull() && m_invoice_id_isValid;

    m_bill_date_isValid = ::OpenAPI::fromJsonValue(m_bill_date, json[QString("BillDate")]);
    m_bill_date_isSet = !json[QString("BillDate")].isNull() && m_bill_date_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("Price")]);
    m_price_isSet = !json[QString("Price")].isNull() && m_price_isValid;
}

QString OAIBillingRecord::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillingRecord::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_name_isSet) {
        obj.insert(QString("DomainName"), ::OpenAPI::toJsonValue(m_domain_name));
    }
    if (m_operation.isSet()) {
        obj.insert(QString("Operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_invoice_id_isSet) {
        obj.insert(QString("InvoiceId"), ::OpenAPI::toJsonValue(m_invoice_id));
    }
    if (m_bill_date_isSet) {
        obj.insert(QString("BillDate"), ::OpenAPI::toJsonValue(m_bill_date));
    }
    if (m_price_isSet) {
        obj.insert(QString("Price"), ::OpenAPI::toJsonValue(m_price));
    }
    return obj;
}

QString OAIBillingRecord::getDomainName() const {
    return m_domain_name;
}
void OAIBillingRecord::setDomainName(const QString &domain_name) {
    m_domain_name = domain_name;
    m_domain_name_isSet = true;
}

bool OAIBillingRecord::is_domain_name_Set() const{
    return m_domain_name_isSet;
}

bool OAIBillingRecord::is_domain_name_Valid() const{
    return m_domain_name_isValid;
}

OAIOperationType OAIBillingRecord::getOperation() const {
    return m_operation;
}
void OAIBillingRecord::setOperation(const OAIOperationType &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIBillingRecord::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIBillingRecord::is_operation_Valid() const{
    return m_operation_isValid;
}

QString OAIBillingRecord::getInvoiceId() const {
    return m_invoice_id;
}
void OAIBillingRecord::setInvoiceId(const QString &invoice_id) {
    m_invoice_id = invoice_id;
    m_invoice_id_isSet = true;
}

bool OAIBillingRecord::is_invoice_id_Set() const{
    return m_invoice_id_isSet;
}

bool OAIBillingRecord::is_invoice_id_Valid() const{
    return m_invoice_id_isValid;
}

QDateTime OAIBillingRecord::getBillDate() const {
    return m_bill_date;
}
void OAIBillingRecord::setBillDate(const QDateTime &bill_date) {
    m_bill_date = bill_date;
    m_bill_date_isSet = true;
}

bool OAIBillingRecord::is_bill_date_Set() const{
    return m_bill_date_isSet;
}

bool OAIBillingRecord::is_bill_date_Valid() const{
    return m_bill_date_isValid;
}

double OAIBillingRecord::getPrice() const {
    return m_price;
}
void OAIBillingRecord::setPrice(const double &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIBillingRecord::is_price_Set() const{
    return m_price_isSet;
}

bool OAIBillingRecord::is_price_Valid() const{
    return m_price_isValid;
}

bool OAIBillingRecord::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillingRecord::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
