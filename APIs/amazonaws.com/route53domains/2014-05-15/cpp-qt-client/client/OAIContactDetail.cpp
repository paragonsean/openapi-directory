/**
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContactDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContactDetail::OAIContactDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContactDetail::OAIContactDetail() {
    this->initializeModel();
}

OAIContactDetail::~OAIContactDetail() {}

void OAIContactDetail::initializeModel() {

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_contact_type_isSet = false;
    m_contact_type_isValid = false;

    m_organization_name_isSet = false;
    m_organization_name_isValid = false;

    m_address_line1_isSet = false;
    m_address_line1_isValid = false;

    m_address_line2_isSet = false;
    m_address_line2_isValid = false;

    m_city_isSet = false;
    m_city_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_country_code_isSet = false;
    m_country_code_isValid = false;

    m_zip_code_isSet = false;
    m_zip_code_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_fax_isSet = false;
    m_fax_isValid = false;

    m_extra_params_isSet = false;
    m_extra_params_isValid = false;
}

void OAIContactDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContactDetail::fromJsonObject(QJsonObject json) {

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("FirstName")]);
    m_first_name_isSet = !json[QString("FirstName")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("LastName")]);
    m_last_name_isSet = !json[QString("LastName")].isNull() && m_last_name_isValid;

    m_contact_type_isValid = ::OpenAPI::fromJsonValue(m_contact_type, json[QString("ContactType")]);
    m_contact_type_isSet = !json[QString("ContactType")].isNull() && m_contact_type_isValid;

    m_organization_name_isValid = ::OpenAPI::fromJsonValue(m_organization_name, json[QString("OrganizationName")]);
    m_organization_name_isSet = !json[QString("OrganizationName")].isNull() && m_organization_name_isValid;

    m_address_line1_isValid = ::OpenAPI::fromJsonValue(m_address_line1, json[QString("AddressLine1")]);
    m_address_line1_isSet = !json[QString("AddressLine1")].isNull() && m_address_line1_isValid;

    m_address_line2_isValid = ::OpenAPI::fromJsonValue(m_address_line2, json[QString("AddressLine2")]);
    m_address_line2_isSet = !json[QString("AddressLine2")].isNull() && m_address_line2_isValid;

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("City")]);
    m_city_isSet = !json[QString("City")].isNull() && m_city_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("State")]);
    m_state_isSet = !json[QString("State")].isNull() && m_state_isValid;

    m_country_code_isValid = ::OpenAPI::fromJsonValue(m_country_code, json[QString("CountryCode")]);
    m_country_code_isSet = !json[QString("CountryCode")].isNull() && m_country_code_isValid;

    m_zip_code_isValid = ::OpenAPI::fromJsonValue(m_zip_code, json[QString("ZipCode")]);
    m_zip_code_isSet = !json[QString("ZipCode")].isNull() && m_zip_code_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("PhoneNumber")]);
    m_phone_number_isSet = !json[QString("PhoneNumber")].isNull() && m_phone_number_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("Email")]);
    m_email_isSet = !json[QString("Email")].isNull() && m_email_isValid;

    m_fax_isValid = ::OpenAPI::fromJsonValue(m_fax, json[QString("Fax")]);
    m_fax_isSet = !json[QString("Fax")].isNull() && m_fax_isValid;

    m_extra_params_isValid = ::OpenAPI::fromJsonValue(m_extra_params, json[QString("ExtraParams")]);
    m_extra_params_isSet = !json[QString("ExtraParams")].isNull() && m_extra_params_isValid;
}

QString OAIContactDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContactDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_first_name_isSet) {
        obj.insert(QString("FirstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("LastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_contact_type.isSet()) {
        obj.insert(QString("ContactType"), ::OpenAPI::toJsonValue(m_contact_type));
    }
    if (m_organization_name_isSet) {
        obj.insert(QString("OrganizationName"), ::OpenAPI::toJsonValue(m_organization_name));
    }
    if (m_address_line1_isSet) {
        obj.insert(QString("AddressLine1"), ::OpenAPI::toJsonValue(m_address_line1));
    }
    if (m_address_line2_isSet) {
        obj.insert(QString("AddressLine2"), ::OpenAPI::toJsonValue(m_address_line2));
    }
    if (m_city_isSet) {
        obj.insert(QString("City"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_state_isSet) {
        obj.insert(QString("State"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_country_code.isSet()) {
        obj.insert(QString("CountryCode"), ::OpenAPI::toJsonValue(m_country_code));
    }
    if (m_zip_code_isSet) {
        obj.insert(QString("ZipCode"), ::OpenAPI::toJsonValue(m_zip_code));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("PhoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_email_isSet) {
        obj.insert(QString("Email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_fax_isSet) {
        obj.insert(QString("Fax"), ::OpenAPI::toJsonValue(m_fax));
    }
    if (m_extra_params.isSet()) {
        obj.insert(QString("ExtraParams"), ::OpenAPI::toJsonValue(m_extra_params));
    }
    return obj;
}

QString OAIContactDetail::getFirstName() const {
    return m_first_name;
}
void OAIContactDetail::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIContactDetail::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIContactDetail::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIContactDetail::getLastName() const {
    return m_last_name;
}
void OAIContactDetail::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIContactDetail::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIContactDetail::is_last_name_Valid() const{
    return m_last_name_isValid;
}

OAIContactType OAIContactDetail::getContactType() const {
    return m_contact_type;
}
void OAIContactDetail::setContactType(const OAIContactType &contact_type) {
    m_contact_type = contact_type;
    m_contact_type_isSet = true;
}

bool OAIContactDetail::is_contact_type_Set() const{
    return m_contact_type_isSet;
}

bool OAIContactDetail::is_contact_type_Valid() const{
    return m_contact_type_isValid;
}

QString OAIContactDetail::getOrganizationName() const {
    return m_organization_name;
}
void OAIContactDetail::setOrganizationName(const QString &organization_name) {
    m_organization_name = organization_name;
    m_organization_name_isSet = true;
}

bool OAIContactDetail::is_organization_name_Set() const{
    return m_organization_name_isSet;
}

bool OAIContactDetail::is_organization_name_Valid() const{
    return m_organization_name_isValid;
}

QString OAIContactDetail::getAddressLine1() const {
    return m_address_line1;
}
void OAIContactDetail::setAddressLine1(const QString &address_line1) {
    m_address_line1 = address_line1;
    m_address_line1_isSet = true;
}

bool OAIContactDetail::is_address_line1_Set() const{
    return m_address_line1_isSet;
}

bool OAIContactDetail::is_address_line1_Valid() const{
    return m_address_line1_isValid;
}

QString OAIContactDetail::getAddressLine2() const {
    return m_address_line2;
}
void OAIContactDetail::setAddressLine2(const QString &address_line2) {
    m_address_line2 = address_line2;
    m_address_line2_isSet = true;
}

bool OAIContactDetail::is_address_line2_Set() const{
    return m_address_line2_isSet;
}

bool OAIContactDetail::is_address_line2_Valid() const{
    return m_address_line2_isValid;
}

QString OAIContactDetail::getCity() const {
    return m_city;
}
void OAIContactDetail::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAIContactDetail::is_city_Set() const{
    return m_city_isSet;
}

bool OAIContactDetail::is_city_Valid() const{
    return m_city_isValid;
}

QString OAIContactDetail::getState() const {
    return m_state;
}
void OAIContactDetail::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIContactDetail::is_state_Set() const{
    return m_state_isSet;
}

bool OAIContactDetail::is_state_Valid() const{
    return m_state_isValid;
}

OAICountryCode OAIContactDetail::getCountryCode() const {
    return m_country_code;
}
void OAIContactDetail::setCountryCode(const OAICountryCode &country_code) {
    m_country_code = country_code;
    m_country_code_isSet = true;
}

bool OAIContactDetail::is_country_code_Set() const{
    return m_country_code_isSet;
}

bool OAIContactDetail::is_country_code_Valid() const{
    return m_country_code_isValid;
}

QString OAIContactDetail::getZipCode() const {
    return m_zip_code;
}
void OAIContactDetail::setZipCode(const QString &zip_code) {
    m_zip_code = zip_code;
    m_zip_code_isSet = true;
}

bool OAIContactDetail::is_zip_code_Set() const{
    return m_zip_code_isSet;
}

bool OAIContactDetail::is_zip_code_Valid() const{
    return m_zip_code_isValid;
}

QString OAIContactDetail::getPhoneNumber() const {
    return m_phone_number;
}
void OAIContactDetail::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIContactDetail::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIContactDetail::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAIContactDetail::getEmail() const {
    return m_email;
}
void OAIContactDetail::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIContactDetail::is_email_Set() const{
    return m_email_isSet;
}

bool OAIContactDetail::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIContactDetail::getFax() const {
    return m_fax;
}
void OAIContactDetail::setFax(const QString &fax) {
    m_fax = fax;
    m_fax_isSet = true;
}

bool OAIContactDetail::is_fax_Set() const{
    return m_fax_isSet;
}

bool OAIContactDetail::is_fax_Valid() const{
    return m_fax_isValid;
}

QList OAIContactDetail::getExtraParams() const {
    return m_extra_params;
}
void OAIContactDetail::setExtraParams(const QList &extra_params) {
    m_extra_params = extra_params;
    m_extra_params_isSet = true;
}

bool OAIContactDetail::is_extra_params_Set() const{
    return m_extra_params_isSet;
}

bool OAIContactDetail::is_extra_params_Valid() const{
    return m_extra_params_isValid;
}

bool OAIContactDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_zip_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extra_params.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContactDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
