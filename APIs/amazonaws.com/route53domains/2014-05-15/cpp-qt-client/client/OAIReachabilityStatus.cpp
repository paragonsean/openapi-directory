/**
 * Amazon Route 53 Domains
 * Amazon Route 53 API actions let you register domain names and perform related operations.
 *
 * The version of the OpenAPI document: 2014-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReachabilityStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReachabilityStatus::OAIReachabilityStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReachabilityStatus::OAIReachabilityStatus() {
    this->initializeModel();
}

OAIReachabilityStatus::~OAIReachabilityStatus() {}

void OAIReachabilityStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIReachabilityStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIReachabilityStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PENDING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReachabilityStatus::PENDING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DONE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReachabilityStatus::DONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EXPIRED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReachabilityStatus::EXPIRED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIReachabilityStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIReachabilityStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIReachabilityStatus::PENDING:
            val = "PENDING";
            break;
        case eOAIReachabilityStatus::DONE:
            val = "DONE";
            break;
        case eOAIReachabilityStatus::EXPIRED:
            val = "EXPIRED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIReachabilityStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIReachabilityStatus::eOAIReachabilityStatus OAIReachabilityStatus::getValue() const {
    return m_value;
}

void OAIReachabilityStatus::setValue(const OAIReachabilityStatus::eOAIReachabilityStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIReachabilityStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIReachabilityStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
