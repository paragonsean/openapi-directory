# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_type import ContactType
from openapi_server.models.country_code import CountryCode
from openapi_server import util


class TransferDomainRequestAdminContact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_name: str=None, last_name: str=None, contact_type: ContactType=None, organization_name: str=None, address_line1: str=None, address_line2: str=None, city: str=None, state: str=None, country_code: CountryCode=None, zip_code: str=None, phone_number: str=None, email: str=None, fax: str=None, extra_params: List=None):
        """TransferDomainRequestAdminContact - a model defined in OpenAPI

        :param first_name: The first_name of this TransferDomainRequestAdminContact.
        :param last_name: The last_name of this TransferDomainRequestAdminContact.
        :param contact_type: The contact_type of this TransferDomainRequestAdminContact.
        :param organization_name: The organization_name of this TransferDomainRequestAdminContact.
        :param address_line1: The address_line1 of this TransferDomainRequestAdminContact.
        :param address_line2: The address_line2 of this TransferDomainRequestAdminContact.
        :param city: The city of this TransferDomainRequestAdminContact.
        :param state: The state of this TransferDomainRequestAdminContact.
        :param country_code: The country_code of this TransferDomainRequestAdminContact.
        :param zip_code: The zip_code of this TransferDomainRequestAdminContact.
        :param phone_number: The phone_number of this TransferDomainRequestAdminContact.
        :param email: The email of this TransferDomainRequestAdminContact.
        :param fax: The fax of this TransferDomainRequestAdminContact.
        :param extra_params: The extra_params of this TransferDomainRequestAdminContact.
        """
        self.openapi_types = {
            'first_name': str,
            'last_name': str,
            'contact_type': ContactType,
            'organization_name': str,
            'address_line1': str,
            'address_line2': str,
            'city': str,
            'state': str,
            'country_code': CountryCode,
            'zip_code': str,
            'phone_number': str,
            'email': str,
            'fax': str,
            'extra_params': List
        }

        self.attribute_map = {
            'first_name': 'FirstName',
            'last_name': 'LastName',
            'contact_type': 'ContactType',
            'organization_name': 'OrganizationName',
            'address_line1': 'AddressLine1',
            'address_line2': 'AddressLine2',
            'city': 'City',
            'state': 'State',
            'country_code': 'CountryCode',
            'zip_code': 'ZipCode',
            'phone_number': 'PhoneNumber',
            'email': 'Email',
            'fax': 'Fax',
            'extra_params': 'ExtraParams'
        }

        self._first_name = first_name
        self._last_name = last_name
        self._contact_type = contact_type
        self._organization_name = organization_name
        self._address_line1 = address_line1
        self._address_line2 = address_line2
        self._city = city
        self._state = state
        self._country_code = country_code
        self._zip_code = zip_code
        self._phone_number = phone_number
        self._email = email
        self._fax = fax
        self._extra_params = extra_params

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransferDomainRequestAdminContact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransferDomainRequest_AdminContact of this TransferDomainRequestAdminContact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_name(self):
        """Gets the first_name of this TransferDomainRequestAdminContact.


        :return: The first_name of this TransferDomainRequestAdminContact.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this TransferDomainRequestAdminContact.


        :param first_name: The first_name of this TransferDomainRequestAdminContact.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this TransferDomainRequestAdminContact.


        :return: The last_name of this TransferDomainRequestAdminContact.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this TransferDomainRequestAdminContact.


        :param last_name: The last_name of this TransferDomainRequestAdminContact.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def contact_type(self):
        """Gets the contact_type of this TransferDomainRequestAdminContact.


        :return: The contact_type of this TransferDomainRequestAdminContact.
        :rtype: ContactType
        """
        return self._contact_type

    @contact_type.setter
    def contact_type(self, contact_type):
        """Sets the contact_type of this TransferDomainRequestAdminContact.


        :param contact_type: The contact_type of this TransferDomainRequestAdminContact.
        :type contact_type: ContactType
        """

        self._contact_type = contact_type

    @property
    def organization_name(self):
        """Gets the organization_name of this TransferDomainRequestAdminContact.


        :return: The organization_name of this TransferDomainRequestAdminContact.
        :rtype: str
        """
        return self._organization_name

    @organization_name.setter
    def organization_name(self, organization_name):
        """Sets the organization_name of this TransferDomainRequestAdminContact.


        :param organization_name: The organization_name of this TransferDomainRequestAdminContact.
        :type organization_name: str
        """

        self._organization_name = organization_name

    @property
    def address_line1(self):
        """Gets the address_line1 of this TransferDomainRequestAdminContact.


        :return: The address_line1 of this TransferDomainRequestAdminContact.
        :rtype: str
        """
        return self._address_line1

    @address_line1.setter
    def address_line1(self, address_line1):
        """Sets the address_line1 of this TransferDomainRequestAdminContact.


        :param address_line1: The address_line1 of this TransferDomainRequestAdminContact.
        :type address_line1: str
        """

        self._address_line1 = address_line1

    @property
    def address_line2(self):
        """Gets the address_line2 of this TransferDomainRequestAdminContact.


        :return: The address_line2 of this TransferDomainRequestAdminContact.
        :rtype: str
        """
        return self._address_line2

    @address_line2.setter
    def address_line2(self, address_line2):
        """Sets the address_line2 of this TransferDomainRequestAdminContact.


        :param address_line2: The address_line2 of this TransferDomainRequestAdminContact.
        :type address_line2: str
        """

        self._address_line2 = address_line2

    @property
    def city(self):
        """Gets the city of this TransferDomainRequestAdminContact.


        :return: The city of this TransferDomainRequestAdminContact.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this TransferDomainRequestAdminContact.


        :param city: The city of this TransferDomainRequestAdminContact.
        :type city: str
        """

        self._city = city

    @property
    def state(self):
        """Gets the state of this TransferDomainRequestAdminContact.


        :return: The state of this TransferDomainRequestAdminContact.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this TransferDomainRequestAdminContact.


        :param state: The state of this TransferDomainRequestAdminContact.
        :type state: str
        """

        self._state = state

    @property
    def country_code(self):
        """Gets the country_code of this TransferDomainRequestAdminContact.


        :return: The country_code of this TransferDomainRequestAdminContact.
        :rtype: CountryCode
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this TransferDomainRequestAdminContact.


        :param country_code: The country_code of this TransferDomainRequestAdminContact.
        :type country_code: CountryCode
        """

        self._country_code = country_code

    @property
    def zip_code(self):
        """Gets the zip_code of this TransferDomainRequestAdminContact.


        :return: The zip_code of this TransferDomainRequestAdminContact.
        :rtype: str
        """
        return self._zip_code

    @zip_code.setter
    def zip_code(self, zip_code):
        """Sets the zip_code of this TransferDomainRequestAdminContact.


        :param zip_code: The zip_code of this TransferDomainRequestAdminContact.
        :type zip_code: str
        """

        self._zip_code = zip_code

    @property
    def phone_number(self):
        """Gets the phone_number of this TransferDomainRequestAdminContact.


        :return: The phone_number of this TransferDomainRequestAdminContact.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this TransferDomainRequestAdminContact.


        :param phone_number: The phone_number of this TransferDomainRequestAdminContact.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def email(self):
        """Gets the email of this TransferDomainRequestAdminContact.


        :return: The email of this TransferDomainRequestAdminContact.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this TransferDomainRequestAdminContact.


        :param email: The email of this TransferDomainRequestAdminContact.
        :type email: str
        """

        self._email = email

    @property
    def fax(self):
        """Gets the fax of this TransferDomainRequestAdminContact.


        :return: The fax of this TransferDomainRequestAdminContact.
        :rtype: str
        """
        return self._fax

    @fax.setter
    def fax(self, fax):
        """Sets the fax of this TransferDomainRequestAdminContact.


        :param fax: The fax of this TransferDomainRequestAdminContact.
        :type fax: str
        """

        self._fax = fax

    @property
    def extra_params(self):
        """Gets the extra_params of this TransferDomainRequestAdminContact.


        :return: The extra_params of this TransferDomainRequestAdminContact.
        :rtype: List
        """
        return self._extra_params

    @extra_params.setter
    def extra_params(self, extra_params):
        """Sets the extra_params of this TransferDomainRequestAdminContact.


        :param extra_params: The extra_params of this TransferDomainRequestAdminContact.
        :type extra_params: List
        """

        self._extra_params = extra_params
