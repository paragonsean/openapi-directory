# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_operations_sort_attribute_name import ListOperationsSortAttributeName
from openapi_server.models.sort_order import SortOrder
from openapi_server import util


class ListOperationsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, submitted_since: datetime=None, marker: str=None, max_items: int=None, status: List=None, type: List=None, sort_by: ListOperationsSortAttributeName=None, sort_order: SortOrder=None):
        """ListOperationsRequest - a model defined in OpenAPI

        :param submitted_since: The submitted_since of this ListOperationsRequest.
        :param marker: The marker of this ListOperationsRequest.
        :param max_items: The max_items of this ListOperationsRequest.
        :param status: The status of this ListOperationsRequest.
        :param type: The type of this ListOperationsRequest.
        :param sort_by: The sort_by of this ListOperationsRequest.
        :param sort_order: The sort_order of this ListOperationsRequest.
        """
        self.openapi_types = {
            'submitted_since': datetime,
            'marker': str,
            'max_items': int,
            'status': List,
            'type': List,
            'sort_by': ListOperationsSortAttributeName,
            'sort_order': SortOrder
        }

        self.attribute_map = {
            'submitted_since': 'SubmittedSince',
            'marker': 'Marker',
            'max_items': 'MaxItems',
            'status': 'Status',
            'type': 'Type',
            'sort_by': 'SortBy',
            'sort_order': 'SortOrder'
        }

        self._submitted_since = submitted_since
        self._marker = marker
        self._max_items = max_items
        self._status = status
        self._type = type
        self._sort_by = sort_by
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListOperationsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListOperationsRequest of this ListOperationsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def submitted_since(self):
        """Gets the submitted_since of this ListOperationsRequest.


        :return: The submitted_since of this ListOperationsRequest.
        :rtype: datetime
        """
        return self._submitted_since

    @submitted_since.setter
    def submitted_since(self, submitted_since):
        """Sets the submitted_since of this ListOperationsRequest.


        :param submitted_since: The submitted_since of this ListOperationsRequest.
        :type submitted_since: datetime
        """

        self._submitted_since = submitted_since

    @property
    def marker(self):
        """Gets the marker of this ListOperationsRequest.


        :return: The marker of this ListOperationsRequest.
        :rtype: str
        """
        return self._marker

    @marker.setter
    def marker(self, marker):
        """Sets the marker of this ListOperationsRequest.


        :param marker: The marker of this ListOperationsRequest.
        :type marker: str
        """

        self._marker = marker

    @property
    def max_items(self):
        """Gets the max_items of this ListOperationsRequest.


        :return: The max_items of this ListOperationsRequest.
        :rtype: int
        """
        return self._max_items

    @max_items.setter
    def max_items(self, max_items):
        """Sets the max_items of this ListOperationsRequest.


        :param max_items: The max_items of this ListOperationsRequest.
        :type max_items: int
        """

        self._max_items = max_items

    @property
    def status(self):
        """Gets the status of this ListOperationsRequest.


        :return: The status of this ListOperationsRequest.
        :rtype: List
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ListOperationsRequest.


        :param status: The status of this ListOperationsRequest.
        :type status: List
        """

        self._status = status

    @property
    def type(self):
        """Gets the type of this ListOperationsRequest.


        :return: The type of this ListOperationsRequest.
        :rtype: List
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ListOperationsRequest.


        :param type: The type of this ListOperationsRequest.
        :type type: List
        """

        self._type = type

    @property
    def sort_by(self):
        """Gets the sort_by of this ListOperationsRequest.


        :return: The sort_by of this ListOperationsRequest.
        :rtype: ListOperationsSortAttributeName
        """
        return self._sort_by

    @sort_by.setter
    def sort_by(self, sort_by):
        """Sets the sort_by of this ListOperationsRequest.


        :param sort_by: The sort_by of this ListOperationsRequest.
        :type sort_by: ListOperationsSortAttributeName
        """

        self._sort_by = sort_by

    @property
    def sort_order(self):
        """Gets the sort_order of this ListOperationsRequest.


        :return: The sort_order of this ListOperationsRequest.
        :rtype: SortOrder
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this ListOperationsRequest.


        :param sort_order: The sort_order of this ListOperationsRequest.
        :type sort_order: SortOrder
        """

        self._sort_order = sort_order
