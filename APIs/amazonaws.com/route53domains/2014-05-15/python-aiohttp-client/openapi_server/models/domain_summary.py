# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DomainSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_name: str=None, auto_renew: bool=None, transfer_lock: bool=None, expiry: datetime=None):
        """DomainSummary - a model defined in OpenAPI

        :param domain_name: The domain_name of this DomainSummary.
        :param auto_renew: The auto_renew of this DomainSummary.
        :param transfer_lock: The transfer_lock of this DomainSummary.
        :param expiry: The expiry of this DomainSummary.
        """
        self.openapi_types = {
            'domain_name': str,
            'auto_renew': bool,
            'transfer_lock': bool,
            'expiry': datetime
        }

        self.attribute_map = {
            'domain_name': 'DomainName',
            'auto_renew': 'AutoRenew',
            'transfer_lock': 'TransferLock',
            'expiry': 'Expiry'
        }

        self._domain_name = domain_name
        self._auto_renew = auto_renew
        self._transfer_lock = transfer_lock
        self._expiry = expiry

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainSummary of this DomainSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_name(self):
        """Gets the domain_name of this DomainSummary.


        :return: The domain_name of this DomainSummary.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this DomainSummary.


        :param domain_name: The domain_name of this DomainSummary.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def auto_renew(self):
        """Gets the auto_renew of this DomainSummary.


        :return: The auto_renew of this DomainSummary.
        :rtype: bool
        """
        return self._auto_renew

    @auto_renew.setter
    def auto_renew(self, auto_renew):
        """Sets the auto_renew of this DomainSummary.


        :param auto_renew: The auto_renew of this DomainSummary.
        :type auto_renew: bool
        """

        self._auto_renew = auto_renew

    @property
    def transfer_lock(self):
        """Gets the transfer_lock of this DomainSummary.


        :return: The transfer_lock of this DomainSummary.
        :rtype: bool
        """
        return self._transfer_lock

    @transfer_lock.setter
    def transfer_lock(self, transfer_lock):
        """Sets the transfer_lock of this DomainSummary.


        :param transfer_lock: The transfer_lock of this DomainSummary.
        :type transfer_lock: bool
        """

        self._transfer_lock = transfer_lock

    @property
    def expiry(self):
        """Gets the expiry of this DomainSummary.


        :return: The expiry of this DomainSummary.
        :rtype: datetime
        """
        return self._expiry

    @expiry.setter
    def expiry(self, expiry):
        """Sets the expiry of this DomainSummary.


        :param expiry: The expiry of this DomainSummary.
        :type expiry: datetime
        """

        self._expiry = expiry
