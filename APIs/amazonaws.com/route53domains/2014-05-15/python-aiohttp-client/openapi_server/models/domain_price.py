# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.domain_price_change_ownership_price import DomainPriceChangeOwnershipPrice
from openapi_server.models.domain_price_registration_price import DomainPriceRegistrationPrice
from openapi_server.models.domain_price_renewal_price import DomainPriceRenewalPrice
from openapi_server.models.domain_price_restoration_price import DomainPriceRestorationPrice
from openapi_server.models.domain_price_transfer_price import DomainPriceTransferPrice
from openapi_server import util


class DomainPrice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, registration_price: DomainPriceRegistrationPrice=None, transfer_price: DomainPriceTransferPrice=None, renewal_price: DomainPriceRenewalPrice=None, change_ownership_price: DomainPriceChangeOwnershipPrice=None, restoration_price: DomainPriceRestorationPrice=None):
        """DomainPrice - a model defined in OpenAPI

        :param name: The name of this DomainPrice.
        :param registration_price: The registration_price of this DomainPrice.
        :param transfer_price: The transfer_price of this DomainPrice.
        :param renewal_price: The renewal_price of this DomainPrice.
        :param change_ownership_price: The change_ownership_price of this DomainPrice.
        :param restoration_price: The restoration_price of this DomainPrice.
        """
        self.openapi_types = {
            'name': str,
            'registration_price': DomainPriceRegistrationPrice,
            'transfer_price': DomainPriceTransferPrice,
            'renewal_price': DomainPriceRenewalPrice,
            'change_ownership_price': DomainPriceChangeOwnershipPrice,
            'restoration_price': DomainPriceRestorationPrice
        }

        self.attribute_map = {
            'name': 'Name',
            'registration_price': 'RegistrationPrice',
            'transfer_price': 'TransferPrice',
            'renewal_price': 'RenewalPrice',
            'change_ownership_price': 'ChangeOwnershipPrice',
            'restoration_price': 'RestorationPrice'
        }

        self._name = name
        self._registration_price = registration_price
        self._transfer_price = transfer_price
        self._renewal_price = renewal_price
        self._change_ownership_price = change_ownership_price
        self._restoration_price = restoration_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainPrice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainPrice of this DomainPrice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this DomainPrice.


        :return: The name of this DomainPrice.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DomainPrice.


        :param name: The name of this DomainPrice.
        :type name: str
        """

        self._name = name

    @property
    def registration_price(self):
        """Gets the registration_price of this DomainPrice.


        :return: The registration_price of this DomainPrice.
        :rtype: DomainPriceRegistrationPrice
        """
        return self._registration_price

    @registration_price.setter
    def registration_price(self, registration_price):
        """Sets the registration_price of this DomainPrice.


        :param registration_price: The registration_price of this DomainPrice.
        :type registration_price: DomainPriceRegistrationPrice
        """

        self._registration_price = registration_price

    @property
    def transfer_price(self):
        """Gets the transfer_price of this DomainPrice.


        :return: The transfer_price of this DomainPrice.
        :rtype: DomainPriceTransferPrice
        """
        return self._transfer_price

    @transfer_price.setter
    def transfer_price(self, transfer_price):
        """Sets the transfer_price of this DomainPrice.


        :param transfer_price: The transfer_price of this DomainPrice.
        :type transfer_price: DomainPriceTransferPrice
        """

        self._transfer_price = transfer_price

    @property
    def renewal_price(self):
        """Gets the renewal_price of this DomainPrice.


        :return: The renewal_price of this DomainPrice.
        :rtype: DomainPriceRenewalPrice
        """
        return self._renewal_price

    @renewal_price.setter
    def renewal_price(self, renewal_price):
        """Sets the renewal_price of this DomainPrice.


        :param renewal_price: The renewal_price of this DomainPrice.
        :type renewal_price: DomainPriceRenewalPrice
        """

        self._renewal_price = renewal_price

    @property
    def change_ownership_price(self):
        """Gets the change_ownership_price of this DomainPrice.


        :return: The change_ownership_price of this DomainPrice.
        :rtype: DomainPriceChangeOwnershipPrice
        """
        return self._change_ownership_price

    @change_ownership_price.setter
    def change_ownership_price(self, change_ownership_price):
        """Sets the change_ownership_price of this DomainPrice.


        :param change_ownership_price: The change_ownership_price of this DomainPrice.
        :type change_ownership_price: DomainPriceChangeOwnershipPrice
        """

        self._change_ownership_price = change_ownership_price

    @property
    def restoration_price(self):
        """Gets the restoration_price of this DomainPrice.


        :return: The restoration_price of this DomainPrice.
        :rtype: DomainPriceRestorationPrice
        """
        return self._restoration_price

    @restoration_price.setter
    def restoration_price(self, restoration_price):
        """Sets the restoration_price of this DomainPrice.


        :param restoration_price: The restoration_price of this DomainPrice.
        :type restoration_price: DomainPriceRestorationPrice
        """

        self._restoration_price = restoration_price
