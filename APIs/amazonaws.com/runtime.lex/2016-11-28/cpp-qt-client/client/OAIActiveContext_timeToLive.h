/**
 * Amazon Lex Runtime Service
 * Amazon Lex provides both build and runtime endpoints. Each endpoint provides a set of operations (API). Your conversational bot uses the runtime API to understand user utterances (user input text or voice). For example, suppose a user says \"I want pizza\", your bot sends this input to Amazon Lex using the runtime API. Amazon Lex recognizes that the user request is for the OrderPizza intent (one of the intents defined in the bot). Then Amazon Lex engages in user conversation on behalf of the bot to elicit required information (slot values, such as pizza size and crust type), and then performs fulfillment activity (that you configured when you created the bot). You use the build-time API to create and manage your Amazon Lex bot. For a list of build-time operations, see the build-time API, . 
 *
 * The version of the OpenAPI document: 2016-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActiveContext_timeToLive.h
 *
 * 
 */

#ifndef OAIActiveContext_timeToLive_H
#define OAIActiveContext_timeToLive_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIActiveContext_timeToLive : public OAIObject {
public:
    OAIActiveContext_timeToLive();
    OAIActiveContext_timeToLive(QString json);
    ~OAIActiveContext_timeToLive() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getTimeToLiveInSeconds() const;
    void setTimeToLiveInSeconds(const qint32 &time_to_live_in_seconds);
    bool is_time_to_live_in_seconds_Set() const;
    bool is_time_to_live_in_seconds_Valid() const;

    qint32 getTurnsToLive() const;
    void setTurnsToLive(const qint32 &turns_to_live);
    bool is_turns_to_live_Set() const;
    bool is_turns_to_live_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_time_to_live_in_seconds;
    bool m_time_to_live_in_seconds_isSet;
    bool m_time_to_live_in_seconds_isValid;

    qint32 m_turns_to_live;
    bool m_turns_to_live_isSet;
    bool m_turns_to_live_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActiveContext_timeToLive)

#endif // OAIActiveContext_timeToLive_H
