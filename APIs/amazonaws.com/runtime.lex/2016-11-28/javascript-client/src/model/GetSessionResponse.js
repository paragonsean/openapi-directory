/**
 * Amazon Lex Runtime Service
 * Amazon Lex provides both build and runtime endpoints. Each endpoint provides a set of operations (API). Your conversational bot uses the runtime API to understand user utterances (user input text or voice). For example, suppose a user says \"I want pizza\", your bot sends this input to Amazon Lex using the runtime API. Amazon Lex recognizes that the user request is for the OrderPizza intent (one of the intents defined in the bot). Then Amazon Lex engages in user conversation on behalf of the bot to elicit required information (slot values, such as pizza size and crust type), and then performs fulfillment activity (that you configured when you created the bot). You use the build-time API to create and manage your Amazon Lex bot. For a list of build-time operations, see the build-time API, . 
 *
 * The version of the OpenAPI document: 2016-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetSessionResponseDialogAction from './GetSessionResponseDialogAction';

/**
 * The GetSessionResponse model module.
 * @module model/GetSessionResponse
 * @version 2016-11-28
 */
class GetSessionResponse {
    /**
     * Constructs a new <code>GetSessionResponse</code>.
     * @alias module:model/GetSessionResponse
     */
    constructor() { 
        
        GetSessionResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetSessionResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetSessionResponse} obj Optional instance to populate.
     * @return {module:model/GetSessionResponse} The populated <code>GetSessionResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetSessionResponse();

            if (data.hasOwnProperty('recentIntentSummaryView')) {
                obj['recentIntentSummaryView'] = ApiClient.convertToType(data['recentIntentSummaryView'], Array);
            }
            if (data.hasOwnProperty('sessionAttributes')) {
                obj['sessionAttributes'] = ApiClient.convertToType(data['sessionAttributes'], Object);
            }
            if (data.hasOwnProperty('sessionId')) {
                obj['sessionId'] = ApiClient.convertToType(data['sessionId'], 'String');
            }
            if (data.hasOwnProperty('dialogAction')) {
                obj['dialogAction'] = GetSessionResponseDialogAction.constructFromObject(data['dialogAction']);
            }
            if (data.hasOwnProperty('activeContexts')) {
                obj['activeContexts'] = ApiClient.convertToType(data['activeContexts'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetSessionResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetSessionResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `recentIntentSummaryView`
        if (data['recentIntentSummaryView']) { // data not null
          Array.validateJSON(data['recentIntentSummaryView']);
        }
        // validate the optional field `sessionAttributes`
        if (data['sessionAttributes']) { // data not null
          Object.validateJSON(data['sessionAttributes']);
        }
        // validate the optional field `sessionId`
        if (data['sessionId']) { // data not null
          String.validateJSON(data['sessionId']);
        }
        // validate the optional field `dialogAction`
        if (data['dialogAction']) { // data not null
          GetSessionResponseDialogAction.validateJSON(data['dialogAction']);
        }
        // validate the optional field `activeContexts`
        if (data['activeContexts']) { // data not null
          Array.validateJSON(data['activeContexts']);
        }

        return true;
    }


}



/**
 * @member {Array} recentIntentSummaryView
 */
GetSessionResponse.prototype['recentIntentSummaryView'] = undefined;

/**
 * @member {Object} sessionAttributes
 */
GetSessionResponse.prototype['sessionAttributes'] = undefined;

/**
 * @member {String} sessionId
 */
GetSessionResponse.prototype['sessionId'] = undefined;

/**
 * @member {module:model/GetSessionResponseDialogAction} dialogAction
 */
GetSessionResponse.prototype['dialogAction'] = undefined;

/**
 * @member {Array} activeContexts
 */
GetSessionResponse.prototype['activeContexts'] = undefined;






export default GetSessionResponse;

