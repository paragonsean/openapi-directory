# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.content_type import ContentType
from openapi_server import util


class ResponseCard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, version: str=None, content_type: ContentType=None, generic_attachments: List=None):
        """ResponseCard - a model defined in OpenAPI

        :param version: The version of this ResponseCard.
        :param content_type: The content_type of this ResponseCard.
        :param generic_attachments: The generic_attachments of this ResponseCard.
        """
        self.openapi_types = {
            'version': str,
            'content_type': ContentType,
            'generic_attachments': List
        }

        self.attribute_map = {
            'version': 'version',
            'content_type': 'contentType',
            'generic_attachments': 'genericAttachments'
        }

        self._version = version
        self._content_type = content_type
        self._generic_attachments = generic_attachments

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponseCard':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponseCard of this ResponseCard.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def version(self):
        """Gets the version of this ResponseCard.


        :return: The version of this ResponseCard.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ResponseCard.


        :param version: The version of this ResponseCard.
        :type version: str
        """

        self._version = version

    @property
    def content_type(self):
        """Gets the content_type of this ResponseCard.


        :return: The content_type of this ResponseCard.
        :rtype: ContentType
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this ResponseCard.


        :param content_type: The content_type of this ResponseCard.
        :type content_type: ContentType
        """

        self._content_type = content_type

    @property
    def generic_attachments(self):
        """Gets the generic_attachments of this ResponseCard.


        :return: The generic_attachments of this ResponseCard.
        :rtype: List
        """
        return self._generic_attachments

    @generic_attachments.setter
    def generic_attachments(self, generic_attachments):
        """Sets the generic_attachments of this ResponseCard.


        :param generic_attachments: The generic_attachments of this ResponseCard.
        :type generic_attachments: List
        """

        self._generic_attachments = generic_attachments
