# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PostContentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, input_stream: str=None):
        """PostContentRequest - a model defined in OpenAPI

        :param input_stream: The input_stream of this PostContentRequest.
        """
        self.openapi_types = {
            'input_stream': str
        }

        self.attribute_map = {
            'input_stream': 'inputStream'
        }

        self._input_stream = input_stream

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostContentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PostContent_request of this PostContentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def input_stream(self):
        """Gets the input_stream of this PostContentRequest.

        <p> User input in PCM or Opus audio format or text format as described in the <code>Content-Type</code> HTTP header. </p> <p>You can stream audio data to Amazon Lex or you can create a local buffer that captures all of the audio data before sending. In general, you get better performance if you stream audio data rather than buffering the data locally.</p>

        :return: The input_stream of this PostContentRequest.
        :rtype: str
        """
        return self._input_stream

    @input_stream.setter
    def input_stream(self, input_stream):
        """Sets the input_stream of this PostContentRequest.

        <p> User input in PCM or Opus audio format or text format as described in the <code>Content-Type</code> HTTP header. </p> <p>You can stream audio data to Amazon Lex or you can create a local buffer that captures all of the audio data before sending. In general, you get better performance if you stream audio data rather than buffering the data locally.</p>

        :param input_stream: The input_stream of this PostContentRequest.
        :type input_stream: str
        """
        if input_stream is None:
            raise ValueError("Invalid value for `input_stream`, must not be `None`")

        self._input_stream = input_stream
