# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.predicted_intent_nlu_intent_confidence import PredictedIntentNluIntentConfidence
from openapi_server import util


class PredictedIntent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, intent_name: str=None, nlu_intent_confidence: PredictedIntentNluIntentConfidence=None, slots: Dict=None):
        """PredictedIntent - a model defined in OpenAPI

        :param intent_name: The intent_name of this PredictedIntent.
        :param nlu_intent_confidence: The nlu_intent_confidence of this PredictedIntent.
        :param slots: The slots of this PredictedIntent.
        """
        self.openapi_types = {
            'intent_name': str,
            'nlu_intent_confidence': PredictedIntentNluIntentConfidence,
            'slots': Dict
        }

        self.attribute_map = {
            'intent_name': 'intentName',
            'nlu_intent_confidence': 'nluIntentConfidence',
            'slots': 'slots'
        }

        self._intent_name = intent_name
        self._nlu_intent_confidence = nlu_intent_confidence
        self._slots = slots

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PredictedIntent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PredictedIntent of this PredictedIntent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def intent_name(self):
        """Gets the intent_name of this PredictedIntent.


        :return: The intent_name of this PredictedIntent.
        :rtype: str
        """
        return self._intent_name

    @intent_name.setter
    def intent_name(self, intent_name):
        """Sets the intent_name of this PredictedIntent.


        :param intent_name: The intent_name of this PredictedIntent.
        :type intent_name: str
        """

        self._intent_name = intent_name

    @property
    def nlu_intent_confidence(self):
        """Gets the nlu_intent_confidence of this PredictedIntent.


        :return: The nlu_intent_confidence of this PredictedIntent.
        :rtype: PredictedIntentNluIntentConfidence
        """
        return self._nlu_intent_confidence

    @nlu_intent_confidence.setter
    def nlu_intent_confidence(self, nlu_intent_confidence):
        """Sets the nlu_intent_confidence of this PredictedIntent.


        :param nlu_intent_confidence: The nlu_intent_confidence of this PredictedIntent.
        :type nlu_intent_confidence: PredictedIntentNluIntentConfidence
        """

        self._nlu_intent_confidence = nlu_intent_confidence

    @property
    def slots(self):
        """Gets the slots of this PredictedIntent.


        :return: The slots of this PredictedIntent.
        :rtype: Dict
        """
        return self._slots

    @slots.setter
    def slots(self, slots):
        """Sets the slots of this PredictedIntent.


        :param slots: The slots of this PredictedIntent.
        :type slots: Dict
        """

        self._slots = slots
