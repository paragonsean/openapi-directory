/*
 * Amazon Lex Runtime Service
 * Amazon Lex provides both build and runtime endpoints. Each endpoint provides a set of operations (API). Your conversational bot uses the runtime API to understand user utterances (user input text or voice). For example, suppose a user says \"I want pizza\", your bot sends this input to Amazon Lex using the runtime API. Amazon Lex recognizes that the user request is for the OrderPizza intent (one of the intents defined in the bot). Then Amazon Lex engages in user conversation on behalf of the bot to elicit required information (slot values, such as pizza size and crust type), and then performs fulfillment activity (that you configured when you created the bot). You use the build-time API to create and manage your Amazon Lex bot. For a list of build-time operations, see the build-time API, . 
 *
 * The version of the OpenAPI document: 2016-11-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.DialogState;
import org.openapitools.client.model.MessageFormatType;
import org.openapitools.client.model.PostTextResponseNluIntentConfidence;
import org.openapitools.client.model.PostTextResponseResponseCard;
import org.openapitools.client.model.PostTextResponseSentimentResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PostTextResponse
 */
public class PostTextResponseTest {
    private final PostTextResponse model = new PostTextResponse();

    /**
     * Model tests for PostTextResponse
     */
    @Test
    public void testPostTextResponse() {
        // TODO: test PostTextResponse
    }

    /**
     * Test the property 'intentName'
     */
    @Test
    public void intentNameTest() {
        // TODO: test intentName
    }

    /**
     * Test the property 'nluIntentConfidence'
     */
    @Test
    public void nluIntentConfidenceTest() {
        // TODO: test nluIntentConfidence
    }

    /**
     * Test the property 'alternativeIntents'
     */
    @Test
    public void alternativeIntentsTest() {
        // TODO: test alternativeIntents
    }

    /**
     * Test the property 'slots'
     */
    @Test
    public void slotsTest() {
        // TODO: test slots
    }

    /**
     * Test the property 'sessionAttributes'
     */
    @Test
    public void sessionAttributesTest() {
        // TODO: test sessionAttributes
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'sentimentResponse'
     */
    @Test
    public void sentimentResponseTest() {
        // TODO: test sentimentResponse
    }

    /**
     * Test the property 'messageFormat'
     */
    @Test
    public void messageFormatTest() {
        // TODO: test messageFormat
    }

    /**
     * Test the property 'dialogState'
     */
    @Test
    public void dialogStateTest() {
        // TODO: test dialogState
    }

    /**
     * Test the property 'slotToElicit'
     */
    @Test
    public void slotToElicitTest() {
        // TODO: test slotToElicit
    }

    /**
     * Test the property 'responseCard'
     */
    @Test
    public void responseCardTest() {
        // TODO: test responseCard
    }

    /**
     * Test the property 'sessionId'
     */
    @Test
    public void sessionIdTest() {
        // TODO: test sessionId
    }

    /**
     * Test the property 'botVersion'
     */
    @Test
    public void botVersionTest() {
        // TODO: test botVersion
    }

    /**
     * Test the property 'activeContexts'
     */
    @Test
    public void activeContextsTest() {
        // TODO: test activeContexts
    }

}
