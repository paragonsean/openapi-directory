/**
 * Amazon OpenSearch Ingestion
 * Use the Amazon OpenSearch Ingestion API to create and manage ingestion pipelines. OpenSearch Ingestion is a fully managed data collector that delivers real-time log and trace data to OpenSearch Service domains. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ingestion.html\">Getting data into your cluster using OpenSearch Ingestion</a>.
 *
 * The version of the OpenAPI document: 2022-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ChangeProgressStage from './model/ChangeProgressStage';
import ChangeProgressStageStatuses from './model/ChangeProgressStageStatuses';
import ChangeProgressStatus from './model/ChangeProgressStatus';
import ChangeProgressStatuses from './model/ChangeProgressStatuses';
import CloudWatchLogDestination from './model/CloudWatchLogDestination';
import CreatePipelineRequest from './model/CreatePipelineRequest';
import CreatePipelineRequestLogPublishingOptions from './model/CreatePipelineRequestLogPublishingOptions';
import CreatePipelineRequestLogPublishingOptionsCloudWatchLogDestination from './model/CreatePipelineRequestLogPublishingOptionsCloudWatchLogDestination';
import CreatePipelineRequestVpcOptions from './model/CreatePipelineRequestVpcOptions';
import CreatePipelineResponse from './model/CreatePipelineResponse';
import CreatePipelineResponsePipeline from './model/CreatePipelineResponsePipeline';
import GetPipelineBlueprintResponse from './model/GetPipelineBlueprintResponse';
import GetPipelineBlueprintResponseBlueprint from './model/GetPipelineBlueprintResponseBlueprint';
import GetPipelineChangeProgressResponse from './model/GetPipelineChangeProgressResponse';
import GetPipelineResponse from './model/GetPipelineResponse';
import GetPipelineResponsePipeline from './model/GetPipelineResponsePipeline';
import ListPipelineBlueprintsResponse from './model/ListPipelineBlueprintsResponse';
import ListPipelinesResponse from './model/ListPipelinesResponse';
import ListTagsForResourceResponse from './model/ListTagsForResourceResponse';
import LogPublishingOptions from './model/LogPublishingOptions';
import Pipeline from './model/Pipeline';
import PipelineBlueprint from './model/PipelineBlueprint';
import PipelineBlueprintSummary from './model/PipelineBlueprintSummary';
import PipelineLogPublishingOptions from './model/PipelineLogPublishingOptions';
import PipelineStatus from './model/PipelineStatus';
import PipelineStatusReason from './model/PipelineStatusReason';
import PipelineSummary from './model/PipelineSummary';
import StartPipelineResponse from './model/StartPipelineResponse';
import StopPipelineResponse from './model/StopPipelineResponse';
import Tag from './model/Tag';
import TagResourceRequest from './model/TagResourceRequest';
import UntagResourceRequest from './model/UntagResourceRequest';
import UpdatePipelineRequest from './model/UpdatePipelineRequest';
import UpdatePipelineResponse from './model/UpdatePipelineResponse';
import UpdatePipelineResponsePipeline from './model/UpdatePipelineResponsePipeline';
import ValidatePipelineRequest from './model/ValidatePipelineRequest';
import ValidatePipelineResponse from './model/ValidatePipelineResponse';
import ValidationMessage from './model/ValidationMessage';
import VpcEndpoint from './model/VpcEndpoint';
import VpcEndpointVpcOptions from './model/VpcEndpointVpcOptions';
import VpcOptions from './model/VpcOptions';
import DefaultApi from './api/DefaultApi';


/**
* Use the Amazon OpenSearch Ingestion API to create and manage ingestion pipelines. OpenSearch Ingestion is a fully managed data collector that delivers real-time log and trace data to OpenSearch Service domains. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ingestion.html\&quot;&gt;Getting data into your cluster using OpenSearch Ingestion&lt;/a&gt;..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AmazonOpenSearchIngestion = require('index'); // See note below*.
* var xxxSvc = new AmazonOpenSearchIngestion.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AmazonOpenSearchIngestion.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AmazonOpenSearchIngestion.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AmazonOpenSearchIngestion.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2022-01-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ChangeProgressStage model constructor.
     * @property {module:model/ChangeProgressStage}
     */
    ChangeProgressStage,

    /**
     * The ChangeProgressStageStatuses model constructor.
     * @property {module:model/ChangeProgressStageStatuses}
     */
    ChangeProgressStageStatuses,

    /**
     * The ChangeProgressStatus model constructor.
     * @property {module:model/ChangeProgressStatus}
     */
    ChangeProgressStatus,

    /**
     * The ChangeProgressStatuses model constructor.
     * @property {module:model/ChangeProgressStatuses}
     */
    ChangeProgressStatuses,

    /**
     * The CloudWatchLogDestination model constructor.
     * @property {module:model/CloudWatchLogDestination}
     */
    CloudWatchLogDestination,

    /**
     * The CreatePipelineRequest model constructor.
     * @property {module:model/CreatePipelineRequest}
     */
    CreatePipelineRequest,

    /**
     * The CreatePipelineRequestLogPublishingOptions model constructor.
     * @property {module:model/CreatePipelineRequestLogPublishingOptions}
     */
    CreatePipelineRequestLogPublishingOptions,

    /**
     * The CreatePipelineRequestLogPublishingOptionsCloudWatchLogDestination model constructor.
     * @property {module:model/CreatePipelineRequestLogPublishingOptionsCloudWatchLogDestination}
     */
    CreatePipelineRequestLogPublishingOptionsCloudWatchLogDestination,

    /**
     * The CreatePipelineRequestVpcOptions model constructor.
     * @property {module:model/CreatePipelineRequestVpcOptions}
     */
    CreatePipelineRequestVpcOptions,

    /**
     * The CreatePipelineResponse model constructor.
     * @property {module:model/CreatePipelineResponse}
     */
    CreatePipelineResponse,

    /**
     * The CreatePipelineResponsePipeline model constructor.
     * @property {module:model/CreatePipelineResponsePipeline}
     */
    CreatePipelineResponsePipeline,

    /**
     * The GetPipelineBlueprintResponse model constructor.
     * @property {module:model/GetPipelineBlueprintResponse}
     */
    GetPipelineBlueprintResponse,

    /**
     * The GetPipelineBlueprintResponseBlueprint model constructor.
     * @property {module:model/GetPipelineBlueprintResponseBlueprint}
     */
    GetPipelineBlueprintResponseBlueprint,

    /**
     * The GetPipelineChangeProgressResponse model constructor.
     * @property {module:model/GetPipelineChangeProgressResponse}
     */
    GetPipelineChangeProgressResponse,

    /**
     * The GetPipelineResponse model constructor.
     * @property {module:model/GetPipelineResponse}
     */
    GetPipelineResponse,

    /**
     * The GetPipelineResponsePipeline model constructor.
     * @property {module:model/GetPipelineResponsePipeline}
     */
    GetPipelineResponsePipeline,

    /**
     * The ListPipelineBlueprintsResponse model constructor.
     * @property {module:model/ListPipelineBlueprintsResponse}
     */
    ListPipelineBlueprintsResponse,

    /**
     * The ListPipelinesResponse model constructor.
     * @property {module:model/ListPipelinesResponse}
     */
    ListPipelinesResponse,

    /**
     * The ListTagsForResourceResponse model constructor.
     * @property {module:model/ListTagsForResourceResponse}
     */
    ListTagsForResourceResponse,

    /**
     * The LogPublishingOptions model constructor.
     * @property {module:model/LogPublishingOptions}
     */
    LogPublishingOptions,

    /**
     * The Pipeline model constructor.
     * @property {module:model/Pipeline}
     */
    Pipeline,

    /**
     * The PipelineBlueprint model constructor.
     * @property {module:model/PipelineBlueprint}
     */
    PipelineBlueprint,

    /**
     * The PipelineBlueprintSummary model constructor.
     * @property {module:model/PipelineBlueprintSummary}
     */
    PipelineBlueprintSummary,

    /**
     * The PipelineLogPublishingOptions model constructor.
     * @property {module:model/PipelineLogPublishingOptions}
     */
    PipelineLogPublishingOptions,

    /**
     * The PipelineStatus model constructor.
     * @property {module:model/PipelineStatus}
     */
    PipelineStatus,

    /**
     * The PipelineStatusReason model constructor.
     * @property {module:model/PipelineStatusReason}
     */
    PipelineStatusReason,

    /**
     * The PipelineSummary model constructor.
     * @property {module:model/PipelineSummary}
     */
    PipelineSummary,

    /**
     * The StartPipelineResponse model constructor.
     * @property {module:model/StartPipelineResponse}
     */
    StartPipelineResponse,

    /**
     * The StopPipelineResponse model constructor.
     * @property {module:model/StopPipelineResponse}
     */
    StopPipelineResponse,

    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag,

    /**
     * The TagResourceRequest model constructor.
     * @property {module:model/TagResourceRequest}
     */
    TagResourceRequest,

    /**
     * The UntagResourceRequest model constructor.
     * @property {module:model/UntagResourceRequest}
     */
    UntagResourceRequest,

    /**
     * The UpdatePipelineRequest model constructor.
     * @property {module:model/UpdatePipelineRequest}
     */
    UpdatePipelineRequest,

    /**
     * The UpdatePipelineResponse model constructor.
     * @property {module:model/UpdatePipelineResponse}
     */
    UpdatePipelineResponse,

    /**
     * The UpdatePipelineResponsePipeline model constructor.
     * @property {module:model/UpdatePipelineResponsePipeline}
     */
    UpdatePipelineResponsePipeline,

    /**
     * The ValidatePipelineRequest model constructor.
     * @property {module:model/ValidatePipelineRequest}
     */
    ValidatePipelineRequest,

    /**
     * The ValidatePipelineResponse model constructor.
     * @property {module:model/ValidatePipelineResponse}
     */
    ValidatePipelineResponse,

    /**
     * The ValidationMessage model constructor.
     * @property {module:model/ValidationMessage}
     */
    ValidationMessage,

    /**
     * The VpcEndpoint model constructor.
     * @property {module:model/VpcEndpoint}
     */
    VpcEndpoint,

    /**
     * The VpcEndpointVpcOptions model constructor.
     * @property {module:model/VpcEndpointVpcOptions}
     */
    VpcEndpointVpcOptions,

    /**
     * The VpcOptions model constructor.
     * @property {module:model/VpcOptions}
     */
    VpcOptions,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
