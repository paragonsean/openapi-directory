/**
 * Amazon OpenSearch Ingestion
 * Use the Amazon OpenSearch Ingestion API to create and manage ingestion pipelines. OpenSearch Ingestion is a fully managed data collector that delivers real-time log and trace data to OpenSearch Service domains. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ingestion.html\">Getting data into your cluster using OpenSearch Ingestion</a>.
 *
 * The version of the OpenAPI document: 2022-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreatePipelineRequestLogPublishingOptions from './CreatePipelineRequestLogPublishingOptions';

/**
 * The UpdatePipelineRequest model module.
 * @module model/UpdatePipelineRequest
 * @version 2022-01-01
 */
class UpdatePipelineRequest {
    /**
     * Constructs a new <code>UpdatePipelineRequest</code>.
     * @alias module:model/UpdatePipelineRequest
     */
    constructor() { 
        
        UpdatePipelineRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdatePipelineRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdatePipelineRequest} obj Optional instance to populate.
     * @return {module:model/UpdatePipelineRequest} The populated <code>UpdatePipelineRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdatePipelineRequest();

            if (data.hasOwnProperty('MinUnits')) {
                obj['MinUnits'] = ApiClient.convertToType(data['MinUnits'], 'Number');
            }
            if (data.hasOwnProperty('MaxUnits')) {
                obj['MaxUnits'] = ApiClient.convertToType(data['MaxUnits'], 'Number');
            }
            if (data.hasOwnProperty('PipelineConfigurationBody')) {
                obj['PipelineConfigurationBody'] = ApiClient.convertToType(data['PipelineConfigurationBody'], 'String');
            }
            if (data.hasOwnProperty('LogPublishingOptions')) {
                obj['LogPublishingOptions'] = CreatePipelineRequestLogPublishingOptions.constructFromObject(data['LogPublishingOptions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdatePipelineRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdatePipelineRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['PipelineConfigurationBody'] && !(typeof data['PipelineConfigurationBody'] === 'string' || data['PipelineConfigurationBody'] instanceof String)) {
            throw new Error("Expected the field `PipelineConfigurationBody` to be a primitive type in the JSON string but got " + data['PipelineConfigurationBody']);
        }
        // validate the optional field `LogPublishingOptions`
        if (data['LogPublishingOptions']) { // data not null
          CreatePipelineRequestLogPublishingOptions.validateJSON(data['LogPublishingOptions']);
        }

        return true;
    }


}



/**
 * The minimum pipeline capacity, in Ingestion Compute Units (ICUs).
 * @member {Number} MinUnits
 */
UpdatePipelineRequest.prototype['MinUnits'] = undefined;

/**
 * The maximum pipeline capacity, in Ingestion Compute Units (ICUs)
 * @member {Number} MaxUnits
 */
UpdatePipelineRequest.prototype['MaxUnits'] = undefined;

/**
 * The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with <code>\\n</code>.
 * @member {String} PipelineConfigurationBody
 */
UpdatePipelineRequest.prototype['PipelineConfigurationBody'] = undefined;

/**
 * @member {module:model/CreatePipelineRequestLogPublishingOptions} LogPublishingOptions
 */
UpdatePipelineRequest.prototype['LogPublishingOptions'] = undefined;






export default UpdatePipelineRequest;

