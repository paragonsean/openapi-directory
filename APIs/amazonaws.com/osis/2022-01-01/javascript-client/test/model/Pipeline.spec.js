/**
 * Amazon OpenSearch Ingestion
 * Use the Amazon OpenSearch Ingestion API to create and manage ingestion pipelines. OpenSearch Ingestion is a fully managed data collector that delivers real-time log and trace data to OpenSearch Service domains. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ingestion.html\">Getting data into your cluster using OpenSearch Ingestion</a>.
 *
 * The version of the OpenAPI document: 2022-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonOpenSearchIngestion);
  }
}(this, function(expect, AmazonOpenSearchIngestion) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonOpenSearchIngestion.Pipeline();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Pipeline', function() {
    it('should create an instance of Pipeline', function() {
      // uncomment below and update the code to test Pipeline
      //var instance = new AmazonOpenSearchIngestion.Pipeline();
      //expect(instance).to.be.a(AmazonOpenSearchIngestion.Pipeline);
    });

    it('should have the property pipelineName (base name: "PipelineName")', function() {
      // uncomment below and update the code to test the property pipelineName
      //var instance = new AmazonOpenSearchIngestion.Pipeline();
      //expect(instance).to.be();
    });

    it('should have the property pipelineArn (base name: "PipelineArn")', function() {
      // uncomment below and update the code to test the property pipelineArn
      //var instance = new AmazonOpenSearchIngestion.Pipeline();
      //expect(instance).to.be();
    });

    it('should have the property minUnits (base name: "MinUnits")', function() {
      // uncomment below and update the code to test the property minUnits
      //var instance = new AmazonOpenSearchIngestion.Pipeline();
      //expect(instance).to.be();
    });

    it('should have the property maxUnits (base name: "MaxUnits")', function() {
      // uncomment below and update the code to test the property maxUnits
      //var instance = new AmazonOpenSearchIngestion.Pipeline();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AmazonOpenSearchIngestion.Pipeline();
      //expect(instance).to.be();
    });

    it('should have the property statusReason (base name: "StatusReason")', function() {
      // uncomment below and update the code to test the property statusReason
      //var instance = new AmazonOpenSearchIngestion.Pipeline();
      //expect(instance).to.be();
    });

    it('should have the property pipelineConfigurationBody (base name: "PipelineConfigurationBody")', function() {
      // uncomment below and update the code to test the property pipelineConfigurationBody
      //var instance = new AmazonOpenSearchIngestion.Pipeline();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "CreatedAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new AmazonOpenSearchIngestion.Pipeline();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdatedAt (base name: "LastUpdatedAt")', function() {
      // uncomment below and update the code to test the property lastUpdatedAt
      //var instance = new AmazonOpenSearchIngestion.Pipeline();
      //expect(instance).to.be();
    });

    it('should have the property ingestEndpointUrls (base name: "IngestEndpointUrls")', function() {
      // uncomment below and update the code to test the property ingestEndpointUrls
      //var instance = new AmazonOpenSearchIngestion.Pipeline();
      //expect(instance).to.be();
    });

    it('should have the property logPublishingOptions (base name: "LogPublishingOptions")', function() {
      // uncomment below and update the code to test the property logPublishingOptions
      //var instance = new AmazonOpenSearchIngestion.Pipeline();
      //expect(instance).to.be();
    });

    it('should have the property vpcEndpoints (base name: "VpcEndpoints")', function() {
      // uncomment below and update the code to test the property vpcEndpoints
      //var instance = new AmazonOpenSearchIngestion.Pipeline();
      //expect(instance).to.be();
    });

  });

}));
