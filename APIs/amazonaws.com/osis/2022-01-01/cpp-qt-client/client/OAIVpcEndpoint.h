/**
 * Amazon OpenSearch Ingestion
 * Use the Amazon OpenSearch Ingestion API to create and manage ingestion pipelines. OpenSearch Ingestion is a fully managed data collector that delivers real-time log and trace data to OpenSearch Service domains. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ingestion.html\">Getting data into your cluster using OpenSearch Ingestion</a>.
 *
 * The version of the OpenAPI document: 2022-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVpcEndpoint.h
 *
 * An OpenSearch Ingestion-managed VPC endpoint that will access one or more pipelines.
 */

#ifndef OAIVpcEndpoint_H
#define OAIVpcEndpoint_H

#include <QJsonObject>

#include "OAIVpcEndpoint_VpcOptions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVpcEndpoint_VpcOptions;

class OAIVpcEndpoint : public OAIObject {
public:
    OAIVpcEndpoint();
    OAIVpcEndpoint(QString json);
    ~OAIVpcEndpoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getVpcEndpointId() const;
    void setVpcEndpointId(const QString &vpc_endpoint_id);
    bool is_vpc_endpoint_id_Set() const;
    bool is_vpc_endpoint_id_Valid() const;

    QString getVpcId() const;
    void setVpcId(const QString &vpc_id);
    bool is_vpc_id_Set() const;
    bool is_vpc_id_Valid() const;

    OAIVpcEndpoint_VpcOptions getVpcOptions() const;
    void setVpcOptions(const OAIVpcEndpoint_VpcOptions &vpc_options);
    bool is_vpc_options_Set() const;
    bool is_vpc_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_vpc_endpoint_id;
    bool m_vpc_endpoint_id_isSet;
    bool m_vpc_endpoint_id_isValid;

    QString m_vpc_id;
    bool m_vpc_id_isSet;
    bool m_vpc_id_isValid;

    OAIVpcEndpoint_VpcOptions m_vpc_options;
    bool m_vpc_options_isSet;
    bool m_vpc_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVpcEndpoint)

#endif // OAIVpcEndpoint_H
