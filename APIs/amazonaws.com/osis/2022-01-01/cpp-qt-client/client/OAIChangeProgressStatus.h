/**
 * Amazon OpenSearch Ingestion
 * Use the Amazon OpenSearch Ingestion API to create and manage ingestion pipelines. OpenSearch Ingestion is a fully managed data collector that delivers real-time log and trace data to OpenSearch Service domains. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ingestion.html\">Getting data into your cluster using OpenSearch Ingestion</a>.
 *
 * The version of the OpenAPI document: 2022-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChangeProgressStatus.h
 *
 * The progress details of a pipeline configuration change.
 */

#ifndef OAIChangeProgressStatus_H
#define OAIChangeProgressStatus_H

#include <QJsonObject>

#include "OAIChangeProgressStatuses.h"
#include <QDateTime>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIChangeProgressStatus : public OAIObject {
public:
    OAIChangeProgressStatus();
    OAIChangeProgressStatus(QString json);
    ~OAIChangeProgressStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    OAIChangeProgressStatuses getStatus() const;
    void setStatus(const OAIChangeProgressStatuses &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getTotalNumberOfStages() const;
    void setTotalNumberOfStages(const qint32 &total_number_of_stages);
    bool is_total_number_of_stages_Set() const;
    bool is_total_number_of_stages_Valid() const;

    QList getChangeProgressStages() const;
    void setChangeProgressStages(const QList &change_progress_stages);
    bool is_change_progress_stages_Set() const;
    bool is_change_progress_stages_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    OAIChangeProgressStatuses m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_total_number_of_stages;
    bool m_total_number_of_stages_isSet;
    bool m_total_number_of_stages_isValid;

    QList m_change_progress_stages;
    bool m_change_progress_stages_isSet;
    bool m_change_progress_stages_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChangeProgressStatus)

#endif // OAIChangeProgressStatus_H
