/**
 * Amazon OpenSearch Ingestion
 * Use the Amazon OpenSearch Ingestion API to create and manage ingestion pipelines. OpenSearch Ingestion is a fully managed data collector that delivers real-time log and trace data to OpenSearch Service domains. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ingestion.html\">Getting data into your cluster using OpenSearch Ingestion</a>.
 *
 * The version of the OpenAPI document: 2022-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChangeProgressStatuses.h
 *
 * 
 */

#ifndef OAIChangeProgressStatuses_H
#define OAIChangeProgressStatuses_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIChangeProgressStatuses : public OAIEnum {
public:
    OAIChangeProgressStatuses();
    OAIChangeProgressStatuses(QString json);
    ~OAIChangeProgressStatuses() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIChangeProgressStatuses {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        PENDING, 
        IN_PROGRESS, 
        COMPLETED, 
        FAILED
    };
    OAIChangeProgressStatuses::eOAIChangeProgressStatuses getValue() const;
    void setValue(const OAIChangeProgressStatuses::eOAIChangeProgressStatuses& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIChangeProgressStatuses m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChangeProgressStatuses)

#endif // OAIChangeProgressStatuses_H
