/**
 * Amazon OpenSearch Ingestion
 * Use the Amazon OpenSearch Ingestion API to create and manage ingestion pipelines. OpenSearch Ingestion is a fully managed data collector that delivers real-time log and trace data to OpenSearch Service domains. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ingestion.html\">Getting data into your cluster using OpenSearch Ingestion</a>.
 *
 * The version of the OpenAPI document: 2022-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdatePipelineRequest.h
 *
 * 
 */

#ifndef OAIUpdatePipelineRequest_H
#define OAIUpdatePipelineRequest_H

#include <QJsonObject>

#include "OAICreatePipelineRequest_LogPublishingOptions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreatePipelineRequest_LogPublishingOptions;

class OAIUpdatePipelineRequest : public OAIObject {
public:
    OAIUpdatePipelineRequest();
    OAIUpdatePipelineRequest(QString json);
    ~OAIUpdatePipelineRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMinUnits() const;
    void setMinUnits(const qint32 &min_units);
    bool is_min_units_Set() const;
    bool is_min_units_Valid() const;

    qint32 getMaxUnits() const;
    void setMaxUnits(const qint32 &max_units);
    bool is_max_units_Set() const;
    bool is_max_units_Valid() const;

    QString getPipelineConfigurationBody() const;
    void setPipelineConfigurationBody(const QString &pipeline_configuration_body);
    bool is_pipeline_configuration_body_Set() const;
    bool is_pipeline_configuration_body_Valid() const;

    OAICreatePipelineRequest_LogPublishingOptions getLogPublishingOptions() const;
    void setLogPublishingOptions(const OAICreatePipelineRequest_LogPublishingOptions &log_publishing_options);
    bool is_log_publishing_options_Set() const;
    bool is_log_publishing_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_min_units;
    bool m_min_units_isSet;
    bool m_min_units_isValid;

    qint32 m_max_units;
    bool m_max_units_isSet;
    bool m_max_units_isValid;

    QString m_pipeline_configuration_body;
    bool m_pipeline_configuration_body_isSet;
    bool m_pipeline_configuration_body_isValid;

    OAICreatePipelineRequest_LogPublishingOptions m_log_publishing_options;
    bool m_log_publishing_options_isSet;
    bool m_log_publishing_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdatePipelineRequest)

#endif // OAIUpdatePipelineRequest_H
