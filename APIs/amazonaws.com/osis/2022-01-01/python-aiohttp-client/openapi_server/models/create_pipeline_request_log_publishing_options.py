# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_pipeline_request_log_publishing_options_cloud_watch_log_destination import CreatePipelineRequestLogPublishingOptionsCloudWatchLogDestination
from openapi_server import util


class CreatePipelineRequestLogPublishingOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_logging_enabled: bool=None, cloud_watch_log_destination: CreatePipelineRequestLogPublishingOptionsCloudWatchLogDestination=None):
        """CreatePipelineRequestLogPublishingOptions - a model defined in OpenAPI

        :param is_logging_enabled: The is_logging_enabled of this CreatePipelineRequestLogPublishingOptions.
        :param cloud_watch_log_destination: The cloud_watch_log_destination of this CreatePipelineRequestLogPublishingOptions.
        """
        self.openapi_types = {
            'is_logging_enabled': bool,
            'cloud_watch_log_destination': CreatePipelineRequestLogPublishingOptionsCloudWatchLogDestination
        }

        self.attribute_map = {
            'is_logging_enabled': 'IsLoggingEnabled',
            'cloud_watch_log_destination': 'CloudWatchLogDestination'
        }

        self._is_logging_enabled = is_logging_enabled
        self._cloud_watch_log_destination = cloud_watch_log_destination

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreatePipelineRequestLogPublishingOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreatePipelineRequest_LogPublishingOptions of this CreatePipelineRequestLogPublishingOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_logging_enabled(self):
        """Gets the is_logging_enabled of this CreatePipelineRequestLogPublishingOptions.


        :return: The is_logging_enabled of this CreatePipelineRequestLogPublishingOptions.
        :rtype: bool
        """
        return self._is_logging_enabled

    @is_logging_enabled.setter
    def is_logging_enabled(self, is_logging_enabled):
        """Sets the is_logging_enabled of this CreatePipelineRequestLogPublishingOptions.


        :param is_logging_enabled: The is_logging_enabled of this CreatePipelineRequestLogPublishingOptions.
        :type is_logging_enabled: bool
        """

        self._is_logging_enabled = is_logging_enabled

    @property
    def cloud_watch_log_destination(self):
        """Gets the cloud_watch_log_destination of this CreatePipelineRequestLogPublishingOptions.


        :return: The cloud_watch_log_destination of this CreatePipelineRequestLogPublishingOptions.
        :rtype: CreatePipelineRequestLogPublishingOptionsCloudWatchLogDestination
        """
        return self._cloud_watch_log_destination

    @cloud_watch_log_destination.setter
    def cloud_watch_log_destination(self, cloud_watch_log_destination):
        """Sets the cloud_watch_log_destination of this CreatePipelineRequestLogPublishingOptions.


        :param cloud_watch_log_destination: The cloud_watch_log_destination of this CreatePipelineRequestLogPublishingOptions.
        :type cloud_watch_log_destination: CreatePipelineRequestLogPublishingOptionsCloudWatchLogDestination
        """

        self._cloud_watch_log_destination = cloud_watch_log_destination
