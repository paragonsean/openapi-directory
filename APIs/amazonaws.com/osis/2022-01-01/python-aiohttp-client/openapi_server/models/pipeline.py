# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pipeline_log_publishing_options import PipelineLogPublishingOptions
from openapi_server.models.pipeline_status import PipelineStatus
from openapi_server.models.pipeline_status_reason import PipelineStatusReason
from openapi_server import util


class Pipeline(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pipeline_name: str=None, pipeline_arn: str=None, min_units: int=None, max_units: int=None, status: PipelineStatus=None, status_reason: PipelineStatusReason=None, pipeline_configuration_body: str=None, created_at: datetime=None, last_updated_at: datetime=None, ingest_endpoint_urls: List=None, log_publishing_options: PipelineLogPublishingOptions=None, vpc_endpoints: List=None):
        """Pipeline - a model defined in OpenAPI

        :param pipeline_name: The pipeline_name of this Pipeline.
        :param pipeline_arn: The pipeline_arn of this Pipeline.
        :param min_units: The min_units of this Pipeline.
        :param max_units: The max_units of this Pipeline.
        :param status: The status of this Pipeline.
        :param status_reason: The status_reason of this Pipeline.
        :param pipeline_configuration_body: The pipeline_configuration_body of this Pipeline.
        :param created_at: The created_at of this Pipeline.
        :param last_updated_at: The last_updated_at of this Pipeline.
        :param ingest_endpoint_urls: The ingest_endpoint_urls of this Pipeline.
        :param log_publishing_options: The log_publishing_options of this Pipeline.
        :param vpc_endpoints: The vpc_endpoints of this Pipeline.
        """
        self.openapi_types = {
            'pipeline_name': str,
            'pipeline_arn': str,
            'min_units': int,
            'max_units': int,
            'status': PipelineStatus,
            'status_reason': PipelineStatusReason,
            'pipeline_configuration_body': str,
            'created_at': datetime,
            'last_updated_at': datetime,
            'ingest_endpoint_urls': List,
            'log_publishing_options': PipelineLogPublishingOptions,
            'vpc_endpoints': List
        }

        self.attribute_map = {
            'pipeline_name': 'PipelineName',
            'pipeline_arn': 'PipelineArn',
            'min_units': 'MinUnits',
            'max_units': 'MaxUnits',
            'status': 'Status',
            'status_reason': 'StatusReason',
            'pipeline_configuration_body': 'PipelineConfigurationBody',
            'created_at': 'CreatedAt',
            'last_updated_at': 'LastUpdatedAt',
            'ingest_endpoint_urls': 'IngestEndpointUrls',
            'log_publishing_options': 'LogPublishingOptions',
            'vpc_endpoints': 'VpcEndpoints'
        }

        self._pipeline_name = pipeline_name
        self._pipeline_arn = pipeline_arn
        self._min_units = min_units
        self._max_units = max_units
        self._status = status
        self._status_reason = status_reason
        self._pipeline_configuration_body = pipeline_configuration_body
        self._created_at = created_at
        self._last_updated_at = last_updated_at
        self._ingest_endpoint_urls = ingest_endpoint_urls
        self._log_publishing_options = log_publishing_options
        self._vpc_endpoints = vpc_endpoints

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Pipeline':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Pipeline of this Pipeline.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pipeline_name(self):
        """Gets the pipeline_name of this Pipeline.


        :return: The pipeline_name of this Pipeline.
        :rtype: str
        """
        return self._pipeline_name

    @pipeline_name.setter
    def pipeline_name(self, pipeline_name):
        """Sets the pipeline_name of this Pipeline.


        :param pipeline_name: The pipeline_name of this Pipeline.
        :type pipeline_name: str
        """

        self._pipeline_name = pipeline_name

    @property
    def pipeline_arn(self):
        """Gets the pipeline_arn of this Pipeline.


        :return: The pipeline_arn of this Pipeline.
        :rtype: str
        """
        return self._pipeline_arn

    @pipeline_arn.setter
    def pipeline_arn(self, pipeline_arn):
        """Sets the pipeline_arn of this Pipeline.


        :param pipeline_arn: The pipeline_arn of this Pipeline.
        :type pipeline_arn: str
        """

        self._pipeline_arn = pipeline_arn

    @property
    def min_units(self):
        """Gets the min_units of this Pipeline.


        :return: The min_units of this Pipeline.
        :rtype: int
        """
        return self._min_units

    @min_units.setter
    def min_units(self, min_units):
        """Sets the min_units of this Pipeline.


        :param min_units: The min_units of this Pipeline.
        :type min_units: int
        """

        self._min_units = min_units

    @property
    def max_units(self):
        """Gets the max_units of this Pipeline.


        :return: The max_units of this Pipeline.
        :rtype: int
        """
        return self._max_units

    @max_units.setter
    def max_units(self, max_units):
        """Sets the max_units of this Pipeline.


        :param max_units: The max_units of this Pipeline.
        :type max_units: int
        """

        self._max_units = max_units

    @property
    def status(self):
        """Gets the status of this Pipeline.


        :return: The status of this Pipeline.
        :rtype: PipelineStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Pipeline.


        :param status: The status of this Pipeline.
        :type status: PipelineStatus
        """

        self._status = status

    @property
    def status_reason(self):
        """Gets the status_reason of this Pipeline.


        :return: The status_reason of this Pipeline.
        :rtype: PipelineStatusReason
        """
        return self._status_reason

    @status_reason.setter
    def status_reason(self, status_reason):
        """Sets the status_reason of this Pipeline.


        :param status_reason: The status_reason of this Pipeline.
        :type status_reason: PipelineStatusReason
        """

        self._status_reason = status_reason

    @property
    def pipeline_configuration_body(self):
        """Gets the pipeline_configuration_body of this Pipeline.


        :return: The pipeline_configuration_body of this Pipeline.
        :rtype: str
        """
        return self._pipeline_configuration_body

    @pipeline_configuration_body.setter
    def pipeline_configuration_body(self, pipeline_configuration_body):
        """Sets the pipeline_configuration_body of this Pipeline.


        :param pipeline_configuration_body: The pipeline_configuration_body of this Pipeline.
        :type pipeline_configuration_body: str
        """

        self._pipeline_configuration_body = pipeline_configuration_body

    @property
    def created_at(self):
        """Gets the created_at of this Pipeline.


        :return: The created_at of this Pipeline.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Pipeline.


        :param created_at: The created_at of this Pipeline.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def last_updated_at(self):
        """Gets the last_updated_at of this Pipeline.


        :return: The last_updated_at of this Pipeline.
        :rtype: datetime
        """
        return self._last_updated_at

    @last_updated_at.setter
    def last_updated_at(self, last_updated_at):
        """Sets the last_updated_at of this Pipeline.


        :param last_updated_at: The last_updated_at of this Pipeline.
        :type last_updated_at: datetime
        """

        self._last_updated_at = last_updated_at

    @property
    def ingest_endpoint_urls(self):
        """Gets the ingest_endpoint_urls of this Pipeline.


        :return: The ingest_endpoint_urls of this Pipeline.
        :rtype: List
        """
        return self._ingest_endpoint_urls

    @ingest_endpoint_urls.setter
    def ingest_endpoint_urls(self, ingest_endpoint_urls):
        """Sets the ingest_endpoint_urls of this Pipeline.


        :param ingest_endpoint_urls: The ingest_endpoint_urls of this Pipeline.
        :type ingest_endpoint_urls: List
        """

        self._ingest_endpoint_urls = ingest_endpoint_urls

    @property
    def log_publishing_options(self):
        """Gets the log_publishing_options of this Pipeline.


        :return: The log_publishing_options of this Pipeline.
        :rtype: PipelineLogPublishingOptions
        """
        return self._log_publishing_options

    @log_publishing_options.setter
    def log_publishing_options(self, log_publishing_options):
        """Sets the log_publishing_options of this Pipeline.


        :param log_publishing_options: The log_publishing_options of this Pipeline.
        :type log_publishing_options: PipelineLogPublishingOptions
        """

        self._log_publishing_options = log_publishing_options

    @property
    def vpc_endpoints(self):
        """Gets the vpc_endpoints of this Pipeline.


        :return: The vpc_endpoints of this Pipeline.
        :rtype: List
        """
        return self._vpc_endpoints

    @vpc_endpoints.setter
    def vpc_endpoints(self, vpc_endpoints):
        """Sets the vpc_endpoints of this Pipeline.


        :param vpc_endpoints: The vpc_endpoints of this Pipeline.
        :type vpc_endpoints: List
        """

        self._vpc_endpoints = vpc_endpoints
