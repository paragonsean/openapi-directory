# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ValidatePipelineRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pipeline_configuration_body: str=None):
        """ValidatePipelineRequest - a model defined in OpenAPI

        :param pipeline_configuration_body: The pipeline_configuration_body of this ValidatePipelineRequest.
        """
        self.openapi_types = {
            'pipeline_configuration_body': str
        }

        self.attribute_map = {
            'pipeline_configuration_body': 'PipelineConfigurationBody'
        }

        self._pipeline_configuration_body = pipeline_configuration_body

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ValidatePipelineRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ValidatePipeline_request of this ValidatePipelineRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pipeline_configuration_body(self):
        """Gets the pipeline_configuration_body of this ValidatePipelineRequest.

        The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with <code>\\n</code>.

        :return: The pipeline_configuration_body of this ValidatePipelineRequest.
        :rtype: str
        """
        return self._pipeline_configuration_body

    @pipeline_configuration_body.setter
    def pipeline_configuration_body(self, pipeline_configuration_body):
        """Sets the pipeline_configuration_body of this ValidatePipelineRequest.

        The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with <code>\\n</code>.

        :param pipeline_configuration_body: The pipeline_configuration_body of this ValidatePipelineRequest.
        :type pipeline_configuration_body: str
        """
        if pipeline_configuration_body is None:
            raise ValueError("Invalid value for `pipeline_configuration_body`, must not be `None`")
        if pipeline_configuration_body is not None and len(pipeline_configuration_body) > 24000:
            raise ValueError("Invalid value for `pipeline_configuration_body`, length must be less than or equal to `24000`")
        if pipeline_configuration_body is not None and len(pipeline_configuration_body) < 1:
            raise ValueError("Invalid value for `pipeline_configuration_body`, length must be greater than or equal to `1`")

        self._pipeline_configuration_body = pipeline_configuration_body
