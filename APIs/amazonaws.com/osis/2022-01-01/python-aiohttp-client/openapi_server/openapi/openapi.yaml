openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "Use the Amazon OpenSearch Ingestion API to create and manage ingestion\
    \ pipelines. OpenSearch Ingestion is a fully managed data collector that delivers\
    \ real-time log and trace data to OpenSearch Service domains. For more information,\
    \ see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ingestion.html\"\
    >Getting data into your cluster using OpenSearch Ingestion</a>."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon OpenSearch Ingestion
  version: 2022-01-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: osis
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/osis-2022-01-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/osis/
servers:
- description: The Amazon OpenSearch Ingestion multi-region endpoint
  url: "http://osis.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon OpenSearch Ingestion multi-region endpoint
  url: "https://osis.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon OpenSearch Ingestion endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://osis.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon OpenSearch Ingestion endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://osis.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /2022-01-01/osis/createPipeline:
    post:
      description: "Creates an OpenSearch Ingestion pipeline. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/creating-pipeline.html\"\
        >Creating Amazon OpenSearch Ingestion pipelines</a>."
      operationId: create_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePipeline_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePipelineResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /2022-01-01/osis/deletePipeline/{PipelineName}:
    delete:
      description: "Deletes an OpenSearch Ingestion pipeline. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/delete-pipeline.html\"\
        >Deleting Amazon OpenSearch Ingestion pipelines</a>."
      operationId: delete_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the pipeline to delete.
        explode: false
        in: path
        name: PipelineName
        required: true
        schema:
          maxLength: 28
          minLength: 3
          pattern: "[a-z][a-z0-9\\-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePipelineResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /2022-01-01/osis/getPipeline/{PipelineName}:
    get:
      description: Retrieves information about an OpenSearch Ingestion pipeline.
      operationId: get_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the pipeline to get information about.
        explode: false
        in: path
        name: PipelineName
        required: true
        schema:
          maxLength: 28
          minLength: 3
          pattern: "[a-z][a-z0-9\\-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPipelineResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /2022-01-01/osis/getPipelineBlueprint/{BlueprintName}:
    get:
      description: "Retrieves information about a specific blueprint for OpenSearch\
        \ Ingestion. Blueprints are templates for the configuration needed for a <code>CreatePipeline</code>\
        \ request. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/creating-pipeline.html#pipeline-blueprint\"\
        >Using blueprints to create a pipeline</a>."
      operationId: get_pipeline_blueprint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the blueprint to retrieve.
        explode: false
        in: path
        name: BlueprintName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPipelineBlueprintResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /2022-01-01/osis/getPipelineChangeProgress/{PipelineName}:
    get:
      description: "<p>Returns progress information for the current change happening\
        \ on an OpenSearch Ingestion pipeline. Currently, this operation only returns\
        \ information when a pipeline is being created.</p> <p>For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/creating-pipeline.html#get-pipeline-progress\"\
        >Tracking the status of pipeline creation</a>.</p>"
      operationId: get_pipeline_change_progress
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the pipeline.
        explode: false
        in: path
        name: PipelineName
        required: true
        schema:
          maxLength: 28
          minLength: 3
          pattern: "[a-z][a-z0-9\\-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPipelineChangeProgressResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /2022-01-01/osis/listPipelineBlueprints:
    post:
      description: "Retrieves a list of all available blueprints for Data Prepper.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/creating-pipeline.html#pipeline-blueprint\"\
        >Using blueprints to create a pipeline</a>."
      operationId: list_pipeline_blueprints
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelineBlueprintsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationTokenException'
          description: InvalidPaginationTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /2022-01-01/osis/listPipelines:
    get:
      description: "Lists all OpenSearch Ingestion pipelines in the current Amazon\
        \ Web Services account and Region. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/list-pipeline.html\"\
        >Viewing Amazon OpenSearch Ingestion pipelines</a>."
      operationId: list_pipelines
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: An optional parameter that specifies the maximum number of results
          to return. You can use <code>nextToken</code> to get the next page of results.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "If your initial <code>ListPipelines</code> operation returns\
          \ a <code>nextToken</code>, you can include the returned <code>nextToken</code>\
          \ in subsequent <code>ListPipelines</code> operations, which returns results\
          \ in the next page."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 3000
          minLength: 0
          pattern: "^([\\s\\S]*)$"
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelinesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationTokenException'
          description: InvalidPaginationTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /2022-01-01/osis/listTagsForResource/#arn:
    get:
      description: "Lists all resource tags associated with an OpenSearch Ingestion\
        \ pipeline. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/tag-pipeline.html\"\
        >Tagging Amazon OpenSearch Ingestion pipelines</a>."
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the pipeline to retrieve tags
          for.
        explode: true
        in: query
        name: arn
        required: true
        schema:
          maxLength: 76
          minLength: 46
          pattern: ^arn:(aws|aws\-cn|aws\-us\-gov|aws\-iso|aws\-iso\-b):osis:.+:pipeline\/.+$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /2022-01-01/osis/startPipeline/{PipelineName}:
    put:
      description: "Starts an OpenSearch Ingestion pipeline. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/pipeline--stop-start.html#pipeline--start\"\
        >Starting an OpenSearch Ingestion pipeline</a>."
      operationId: start_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the pipeline to start.
        explode: false
        in: path
        name: PipelineName
        required: true
        schema:
          maxLength: 28
          minLength: 3
          pattern: "[a-z][a-z0-9\\-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartPipelineResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /2022-01-01/osis/stopPipeline/{PipelineName}:
    put:
      description: "Stops an OpenSearch Ingestion pipeline. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/pipeline--stop-start.html#pipeline--stop\"\
        >Stopping an OpenSearch Ingestion pipeline</a>."
      operationId: stop_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the pipeline to stop.
        explode: false
        in: path
        name: PipelineName
        required: true
        schema:
          maxLength: 28
          minLength: 3
          pattern: "[a-z][a-z0-9\\-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopPipelineResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /2022-01-01/osis/tagResource/#arn:
    post:
      description: "Tags an OpenSearch Ingestion pipeline. For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/tag-pipeline.html\"\
        >Tagging Amazon OpenSearch Ingestion pipelines</a>."
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the pipeline to tag.
        explode: true
        in: query
        name: arn
        required: true
        schema:
          maxLength: 76
          minLength: 46
          pattern: ^arn:(aws|aws\-cn|aws\-us\-gov|aws\-iso|aws\-iso\-b):osis:.+:pipeline\/.+$
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /2022-01-01/osis/untagResource/#arn:
    post:
      description: "Removes one or more tags from an OpenSearch Ingestion pipeline.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/tag-pipeline.html\"\
        >Tagging Amazon OpenSearch Ingestion pipelines</a>."
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the pipeline to remove tags
          from.
        explode: true
        in: query
        name: arn
        required: true
        schema:
          maxLength: 76
          minLength: 46
          pattern: ^arn:(aws|aws\-cn|aws\-us\-gov|aws\-iso|aws\-iso\-b):osis:.+:pipeline\/.+$
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /2022-01-01/osis/updatePipeline/{PipelineName}:
    put:
      description: "Updates an OpenSearch Ingestion pipeline. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/update-pipeline.html\"\
        >Updating Amazon OpenSearch Ingestion pipelines</a>."
      operationId: update_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the pipeline to update.
        explode: false
        in: path
        name: PipelineName
        required: true
        schema:
          maxLength: 28
          minLength: 3
          pattern: "[a-z][a-z0-9\\-]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePipeline_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePipelineResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /2022-01-01/osis/validatePipeline:
    post:
      description: "Checks whether an OpenSearch Ingestion pipeline configuration\
        \ is valid prior to creation. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/creating-pipeline.html\"\
        >Creating Amazon OpenSearch Ingestion pipelines</a>."
      operationId: validate_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidatePipeline_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatePipelineResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreatePipelineResponse:
      example:
        Pipeline:
          Status: ""
          PipelineConfigurationBody: ""
          PipelineArn: ""
          MinUnits: ""
          LastUpdatedAt: ""
          VpcEndpoints: ""
          PipelineName: ""
          MaxUnits: ""
          StatusReason:
            Description: ""
          CreatedAt: ""
          LogPublishingOptions:
            CloudWatchLogDestination:
              LogGroup: ""
            IsLoggingEnabled: ""
          IngestEndpointUrls: ""
      properties:
        Pipeline:
          $ref: '#/components/schemas/CreatePipelineResponse_Pipeline'
      title: CreatePipelineResponse
      type: object
    Boolean:
      type: boolean
    CloudWatchLogDestination:
      description: The destination for OpenSearch Ingestion logs sent to Amazon CloudWatch.
      properties:
        LogGroup:
          allOf:
          - $ref: '#/components/schemas/LogGroup'
          - description: "The name of the CloudWatch Logs group to send pipeline logs\
              \ to. You can specify an existing log group or create a new one. For\
              \ example, <code>/aws/OpenSearchService/IngestionService/my-pipeline</code>."
          title: LogGroup
      required:
      - LogGroup
      title: CloudWatchLogDestination
      type: object
    SubnetIds:
      items:
        $ref: '#/components/schemas/SubnetId'
      maxItems: 12
      minItems: 1
      type: array
    SecurityGroupIds:
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      maxItems: 12
      minItems: 1
      type: array
    Tag:
      description: A tag (key-value pair) for an OpenSearch Ingestion pipeline.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The tag key. Tag keys must be unique for the pipeline to
              which they are attached.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: "The value assigned to the corresponding tag key. Tag values\
              \ can be null and don't have to be unique in a tag set. For example,\
              \ you can have a key value pair in a tag set of <code>project : Trinity</code>\
              \ and <code>cost-center : Trinity</code> "
          title: Value
      required:
      - Key
      - Value
      title: Tag
      type: object
    LimitExceededException: {}
    ValidationException: {}
    InternalException: {}
    AccessDeniedException: {}
    ResourceAlreadyExistsException: {}
    DeletePipelineResponse:
      properties: {}
      type: object
    ResourceNotFoundException: {}
    ConflictException: {}
    GetPipelineResponse:
      example:
        Pipeline:
          Status: ""
          PipelineConfigurationBody: ""
          PipelineArn: ""
          MinUnits: ""
          LastUpdatedAt: ""
          VpcEndpoints: ""
          PipelineName: ""
          MaxUnits: ""
          StatusReason:
            Description: ""
          CreatedAt: ""
          LogPublishingOptions:
            CloudWatchLogDestination:
              LogGroup: ""
            IsLoggingEnabled: ""
          IngestEndpointUrls: ""
      properties:
        Pipeline:
          $ref: '#/components/schemas/GetPipelineResponse_Pipeline'
      title: GetPipelineResponse
      type: object
    GetPipelineBlueprintResponse:
      example:
        Blueprint:
          PipelineConfigurationBody: ""
          BlueprintName: ""
      properties:
        Blueprint:
          $ref: '#/components/schemas/GetPipelineBlueprintResponse_Blueprint'
      title: GetPipelineBlueprintResponse
      type: object
    GetPipelineChangeProgressResponse:
      example:
        ChangeProgressStatuses: ""
      properties:
        ChangeProgressStatuses:
          allOf:
          - $ref: '#/components/schemas/ChangeProgressStatusList'
          - description: The current status of the change happening on the pipeline.
          title: ChangeProgressStatuses
      title: GetPipelineChangeProgressResponse
      type: object
    ListPipelineBlueprintsResponse:
      example:
        Blueprints: ""
      properties:
        Blueprints:
          allOf:
          - $ref: '#/components/schemas/PipelineBlueprintsSummaryList'
          - description: A list of available blueprints for Data Prepper.
          title: Blueprints
      title: ListPipelineBlueprintsResponse
      type: object
    InvalidPaginationTokenException: {}
    ListPipelinesResponse:
      example:
        NextToken: ""
        Pipelines: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "When <code>nextToken</code> is returned, there are more\
              \ results available. The value of <code>nextToken</code> is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page."
          title: NextToken
        Pipelines:
          allOf:
          - $ref: '#/components/schemas/PipelineSummaryList'
          - description: A list of all existing Data Prepper pipelines.
          title: Pipelines
      title: ListPipelinesResponse
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of tags associated with the given pipeline.
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    StartPipelineResponse:
      example:
        Pipeline:
          Status: ""
          PipelineConfigurationBody: ""
          PipelineArn: ""
          MinUnits: ""
          LastUpdatedAt: ""
          VpcEndpoints: ""
          PipelineName: ""
          MaxUnits: ""
          StatusReason:
            Description: ""
          CreatedAt: ""
          LogPublishingOptions:
            CloudWatchLogDestination:
              LogGroup: ""
            IsLoggingEnabled: ""
          IngestEndpointUrls: ""
      properties:
        Pipeline:
          $ref: '#/components/schemas/Pipeline'
      title: StartPipelineResponse
      type: object
    StopPipelineResponse:
      example:
        Pipeline:
          Status: ""
          PipelineConfigurationBody: ""
          PipelineArn: ""
          MinUnits: ""
          LastUpdatedAt: ""
          VpcEndpoints: ""
          PipelineName: ""
          MaxUnits: ""
          StatusReason:
            Description: ""
          CreatedAt: ""
          LogPublishingOptions:
            CloudWatchLogDestination:
              LogGroup: ""
            IsLoggingEnabled: ""
          IngestEndpointUrls: ""
      properties:
        Pipeline:
          $ref: '#/components/schemas/Pipeline'
      title: StopPipelineResponse
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    String:
      title: String
      type: string
    UpdatePipelineResponse:
      example:
        Pipeline:
          Status: ""
          PipelineConfigurationBody: ""
          PipelineArn: ""
          MinUnits: ""
          LastUpdatedAt: ""
          VpcEndpoints: ""
          PipelineName: ""
          MaxUnits: ""
          StatusReason:
            Description: ""
          CreatedAt: ""
          LogPublishingOptions:
            CloudWatchLogDestination:
              LogGroup: ""
            IsLoggingEnabled: ""
          IngestEndpointUrls: ""
      properties:
        Pipeline:
          $ref: '#/components/schemas/UpdatePipelineResponse_Pipeline'
      title: UpdatePipelineResponse
      type: object
    ValidatePipelineResponse:
      example:
        Errors: ""
        isValid: ""
      properties:
        isValid:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A boolean indicating whether or not the pipeline configuration
              is valid.
          title: isValid
        Errors:
          allOf:
          - $ref: '#/components/schemas/ValidationMessageList'
          - description: A list of errors if the configuration is invalid.
          title: Errors
      title: ValidatePipelineResponse
      type: object
    ChangeProgressStageStatuses:
      enum:
      - PENDING
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      title: ChangeProgressStageStatuses
      type: string
    Timestamp:
      format: date-time
      type: string
    ChangeProgressStage:
      description: Progress details for a specific stage of a pipeline configuration
        change.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the stage.
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/ChangeProgressStageStatuses'
          - description: The current status of the stage that the change is in.
          title: Status
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description of the stage.
          title: Description
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The most recent updated timestamp of the stage.
          title: LastUpdatedAt
      title: ChangeProgressStage
      type: object
    ChangeProgressStageList:
      items:
        $ref: '#/components/schemas/ChangeProgressStage'
      type: array
    ChangeProgressStatuses:
      enum:
      - PENDING
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      title: ChangeProgressStatuses
      type: string
    Integer:
      type: integer
    ChangeProgressStatus:
      description: The progress details of a pipeline configuration change.
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the configuration change is made on the
              pipeline.
          title: StartTime
        Status:
          allOf:
          - $ref: '#/components/schemas/ChangeProgressStatuses'
          - description: The overall status of the pipeline configuration change.
          title: Status
        TotalNumberOfStages:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of stages required for the pipeline configuration
              change.
          title: TotalNumberOfStages
        ChangeProgressStages:
          allOf:
          - $ref: '#/components/schemas/ChangeProgressStageList'
          - description: Information about the stages that the pipeline is going through
              to perform the configuration change.
          title: ChangeProgressStages
      title: ChangeProgressStatus
      type: object
    ChangeProgressStatusList:
      items:
        $ref: '#/components/schemas/ChangeProgressStatus'
      type: array
    LogGroup:
      maxLength: 512
      minLength: 1
      pattern: "\\/aws\\/vendedlogs\\/[\\.\\-_/#A-Za-z0-9]+"
      type: string
    PipelineName:
      maxLength: 28
      minLength: 3
      pattern: "[a-z][a-z0-9\\-]+"
      type: string
    PipelineUnits:
      maximum: 96
      minimum: 1
      type: integer
    PipelineConfigurationBody:
      maxLength: 24000
      minLength: 1
      type: string
    LogPublishingOptions:
      description: "Container for the values required to configure logging for the\
        \ pipeline. If you don't specify these values, OpenSearch Ingestion will not\
        \ publish logs from your application to CloudWatch Logs."
      properties:
        IsLoggingEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether logs should be published.
          title: IsLoggingEnabled
        CloudWatchLogDestination:
          $ref: '#/components/schemas/CreatePipeline_request_LogPublishingOptions_CloudWatchLogDestination'
      title: LogPublishingOptions
      type: object
    VpcOptions:
      description: Options that specify the subnets and security groups for an OpenSearch
        Ingestion VPC endpoint.
      properties:
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          - description: A list of subnet IDs associated with the VPC endpoint.
          title: SubnetIds
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: A list of security groups associated with the VPC endpoint.
          title: SecurityGroupIds
      required:
      - SubnetIds
      title: VpcOptions
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
    CreatePipelineRequest:
      example:
        PipelineConfigurationBody: ""
        MinUnits: ""
        PipelineName: ""
        VpcOptions:
          SubnetIds: ""
          SecurityGroupIds: ""
        MaxUnits: ""
        LogPublishingOptions:
          CloudWatchLogDestination:
            LogGroup: ""
          IsLoggingEnabled: ""
        Tags: ""
      properties:
        PipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the OpenSearch Ingestion pipeline to create.
              Pipeline names are unique across the pipelines owned by an account within
              an Amazon Web Services Region.
        MinUnits:
          allOf:
          - $ref: '#/components/schemas/PipelineUnits'
          - description: "The minimum pipeline capacity, in Ingestion Compute Units\
              \ (ICUs)."
        MaxUnits:
          allOf:
          - $ref: '#/components/schemas/PipelineUnits'
          - description: "The maximum pipeline capacity, in Ingestion Compute Units\
              \ (ICUs)."
        PipelineConfigurationBody:
          allOf:
          - $ref: '#/components/schemas/PipelineConfigurationBody'
          - description: "The pipeline configuration in YAML format. The command accepts\
              \ the pipeline configuration as a string or within a .yaml file. If\
              \ you provide the configuration as a string, each new line must be escaped\
              \ with <code>\\n</code>."
        LogPublishingOptions:
          $ref: '#/components/schemas/CreatePipelineRequest_LogPublishingOptions'
        VpcOptions:
          $ref: '#/components/schemas/CreatePipelineRequest_VpcOptions'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: List of tags to add to the pipeline upon creation.
      required:
      - MaxUnits
      - MinUnits
      - PipelineConfigurationBody
      - PipelineName
      title: CreatePipelineRequest
      type: object
    Pipeline:
      description: Information about an existing OpenSearch Ingestion pipeline.
      example:
        Status: ""
        PipelineConfigurationBody: ""
        PipelineArn: ""
        MinUnits: ""
        LastUpdatedAt: ""
        VpcEndpoints: ""
        PipelineName: ""
        MaxUnits: ""
        StatusReason:
          Description: ""
        CreatedAt: ""
        LogPublishingOptions:
          CloudWatchLogDestination:
            LogGroup: ""
          IsLoggingEnabled: ""
        IngestEndpointUrls: ""
      properties:
        PipelineName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the pipeline.
          title: PipelineName
        PipelineArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the pipeline.
          title: PipelineArn
        MinUnits:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The minimum pipeline capacity, in Ingestion Compute Units\
              \ (ICUs)."
          title: MinUnits
        MaxUnits:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The maximum pipeline capacity, in Ingestion Compute Units\
              \ (ICUs)."
          title: MaxUnits
        Status:
          allOf:
          - $ref: '#/components/schemas/PipelineStatus'
          - description: The current status of the pipeline.
          title: Status
        StatusReason:
          $ref: '#/components/schemas/Pipeline_StatusReason'
        PipelineConfigurationBody:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Data Prepper pipeline configuration in YAML format.
          title: PipelineConfigurationBody
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the pipeline was created.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the pipeline was last updated.
          title: LastUpdatedAt
        IngestEndpointUrls:
          allOf:
          - $ref: '#/components/schemas/IngestEndpointUrlsList'
          - description: "The ingestion endpoints for the pipeline, which you can\
              \ send data to."
          title: IngestEndpointUrls
        LogPublishingOptions:
          $ref: '#/components/schemas/Pipeline_LogPublishingOptions'
        VpcEndpoints:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointsList'
          - description: The VPC interface endpoints that have access to the pipeline.
          title: VpcEndpoints
      title: Pipeline
      type: object
    DeletePipelineRequest:
      properties: {}
      title: DeletePipelineRequest
      type: object
    GetPipelineBlueprintRequest:
      properties: {}
      title: GetPipelineBlueprintRequest
      type: object
    PipelineBlueprint:
      description: Container for information about an OpenSearch Ingestion blueprint.
      properties:
        BlueprintName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the blueprint.
          title: BlueprintName
        PipelineConfigurationBody:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The YAML configuration of the blueprint.
          title: PipelineConfigurationBody
      title: PipelineBlueprint
      type: object
    GetPipelineChangeProgressRequest:
      properties: {}
      title: GetPipelineChangeProgressRequest
      type: object
    GetPipelineRequest:
      properties: {}
      title: GetPipelineRequest
      type: object
    IngestEndpointUrlsList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    ListPipelineBlueprintsRequest:
      properties: {}
      title: ListPipelineBlueprintsRequest
      type: object
    PipelineBlueprintsSummaryList:
      items:
        $ref: '#/components/schemas/PipelineBlueprintSummary'
      type: array
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NextToken:
      maxLength: 3000
      minLength: 0
      pattern: "^([\\s\\S]*)$"
      type: string
    ListPipelinesRequest:
      properties: {}
      title: ListPipelinesRequest
      type: object
    PipelineSummaryList:
      items:
        $ref: '#/components/schemas/PipelineSummary'
      type: array
    PipelineArn:
      maxLength: 76
      minLength: 46
      pattern: ^arn:(aws|aws\-cn|aws\-us\-gov|aws\-iso|aws\-iso\-b):osis:.+:pipeline\/.+$
      type: string
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    PipelineStatus:
      enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - DELETING
      - CREATE_FAILED
      - UPDATE_FAILED
      - STARTING
      - START_FAILED
      - STOPPING
      - STOPPED
      title: PipelineStatus
      type: string
    PipelineStatusReason:
      description: Information about a pipeline's current status.
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description of why a pipeline has a certain status.
          title: Description
      title: PipelineStatusReason
      type: object
    VpcEndpointsList:
      items:
        $ref: '#/components/schemas/VpcEndpoint'
      type: array
    PipelineBlueprintSummary:
      description: A summary of an OpenSearch Ingestion blueprint.
      properties:
        BlueprintName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the blueprint.
          title: BlueprintName
      title: PipelineBlueprintSummary
      type: object
    PipelineSummary:
      description: Summary information for an OpenSearch Ingestion pipeline.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/PipelineStatus'
          - description: The current status of the pipeline.
          title: Status
        StatusReason:
          $ref: '#/components/schemas/PipelineStatusReason'
        PipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline.
          title: PipelineName
        PipelineArn:
          allOf:
          - $ref: '#/components/schemas/PipelineArn'
          - description: The Amazon Resource Name (ARN) of the pipeline.
          title: PipelineArn
        MinUnits:
          allOf:
          - $ref: '#/components/schemas/PipelineUnits'
          - description: "The minimum pipeline capacity, in Ingestion Compute Units\
              \ (ICUs)."
          title: MinUnits
        MaxUnits:
          allOf:
          - $ref: '#/components/schemas/PipelineUnits'
          - description: "The maximum pipeline capacity, in Ingestion Compute Units\
              \ (ICUs)."
          title: MaxUnits
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the pipeline was created.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the pipeline was last updated.
          title: LastUpdatedAt
      title: PipelineSummary
      type: object
    SecurityGroupId:
      maxLength: 20
      minLength: 11
      pattern: "sg-\\w{8}(\\w{9})?"
      title: SecurityGroupId
      type: string
    StartPipelineRequest:
      properties: {}
      title: StartPipelineRequest
      type: object
    StopPipelineRequest:
      properties: {}
      title: StopPipelineRequest
      type: object
    StringList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    SubnetId:
      maxLength: 24
      minLength: 15
      pattern: "subnet-\\w{8}(\\w{9})?"
      title: SubnetId
      type: string
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: .*
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: .*
      type: string
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The list of key-value tags to add to the pipeline.
      required:
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      example:
        TagKeys: ""
      properties:
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The tag keys to remove.
      required:
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdatePipelineRequest:
      example:
        PipelineConfigurationBody: ""
        MinUnits: ""
        MaxUnits: ""
        LogPublishingOptions:
          CloudWatchLogDestination:
            LogGroup: ""
          IsLoggingEnabled: ""
      properties:
        MinUnits:
          allOf:
          - $ref: '#/components/schemas/PipelineUnits'
          - description: "The minimum pipeline capacity, in Ingestion Compute Units\
              \ (ICUs)."
        MaxUnits:
          allOf:
          - $ref: '#/components/schemas/PipelineUnits'
          - description: "The maximum pipeline capacity, in Ingestion Compute Units\
              \ (ICUs)"
        PipelineConfigurationBody:
          allOf:
          - $ref: '#/components/schemas/PipelineConfigurationBody'
          - description: "The pipeline configuration in YAML format. The command accepts\
              \ the pipeline configuration as a string or within a .yaml file. If\
              \ you provide the configuration as a string, each new line must be escaped\
              \ with <code>\\n</code>."
        LogPublishingOptions:
          $ref: '#/components/schemas/CreatePipelineRequest_LogPublishingOptions'
      title: UpdatePipelineRequest
      type: object
    ValidatePipelineRequest:
      example:
        PipelineConfigurationBody: ""
      properties:
        PipelineConfigurationBody:
          allOf:
          - $ref: '#/components/schemas/PipelineConfigurationBody'
          - description: "The pipeline configuration in YAML format. The command accepts\
              \ the pipeline configuration as a string or within a .yaml file. If\
              \ you provide the configuration as a string, each new line must be escaped\
              \ with <code>\\n</code>."
      required:
      - PipelineConfigurationBody
      title: ValidatePipelineRequest
      type: object
    ValidationMessageList:
      items:
        $ref: '#/components/schemas/ValidationMessage'
      type: array
    ValidationMessage:
      description: A validation message associated with a <code>ValidatePipeline</code>
        request in OpenSearch Ingestion.
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The validation message.
          title: Message
      title: ValidationMessage
      type: object
    VpcEndpoint:
      description: An OpenSearch Ingestion-managed VPC endpoint that will access one
        or more pipelines.
      properties:
        VpcEndpointId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique identifier of the endpoint.
          title: VpcEndpointId
        VpcId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID for your VPC. Amazon Web Services PrivateLink generates
              this value when you create a VPC.
          title: VpcId
        VpcOptions:
          $ref: '#/components/schemas/VpcEndpoint_VpcOptions'
      title: VpcEndpoint
      type: object
    CreatePipeline_request_LogPublishingOptions_CloudWatchLogDestination:
      allOf:
      - $ref: '#/components/schemas/CloudWatchLogDestination'
      - description: The destination for OpenSearch Ingestion logs sent to Amazon
          CloudWatch Logs. This parameter is required if <code>IsLoggingEnabled</code>
          is set to <code>true</code>.
      example:
        LogGroup: ""
      title: CreatePipeline_request_LogPublishingOptions_CloudWatchLogDestination
    CreatePipeline_request_LogPublishingOptions:
      description: "Container for the values required to configure logging for the\
        \ pipeline. If you don't specify these values, OpenSearch Ingestion will not\
        \ publish logs from your application to CloudWatch Logs."
      properties:
        IsLoggingEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether logs should be published.
          title: IsLoggingEnabled
        CloudWatchLogDestination:
          $ref: '#/components/schemas/CreatePipeline_request_LogPublishingOptions_CloudWatchLogDestination'
      title: CreatePipeline_request_LogPublishingOptions
      type: object
    CreatePipeline_request_VpcOptions:
      description: Options that specify the subnets and security groups for an OpenSearch
        Ingestion VPC endpoint.
      properties:
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          - description: A list of subnet IDs associated with the VPC endpoint.
          title: SubnetIds
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: A list of security groups associated with the VPC endpoint.
          title: SecurityGroupIds
      title: CreatePipeline_request_VpcOptions
      type: object
    CreatePipeline_request:
      properties:
        PipelineName:
          description: The name of the OpenSearch Ingestion pipeline to create. Pipeline
            names are unique across the pipelines owned by an account within an Amazon
            Web Services Region.
          maxLength: 28
          minLength: 3
          pattern: "[a-z][a-z0-9\\-]+"
          title: PipelineName
          type: string
        MinUnits:
          description: "The minimum pipeline capacity, in Ingestion Compute Units\
            \ (ICUs)."
          maximum: 96
          minimum: 1
          title: MinUnits
          type: integer
        MaxUnits:
          description: "The maximum pipeline capacity, in Ingestion Compute Units\
            \ (ICUs)."
          maximum: 96
          minimum: 1
          title: MaxUnits
          type: integer
        PipelineConfigurationBody:
          description: "The pipeline configuration in YAML format. The command accepts\
            \ the pipeline configuration as a string or within a .yaml file. If you\
            \ provide the configuration as a string, each new line must be escaped\
            \ with <code>\\n</code>."
          maxLength: 24000
          minLength: 1
          title: PipelineConfigurationBody
          type: string
        LogPublishingOptions:
          $ref: '#/components/schemas/CreatePipeline_request_LogPublishingOptions'
        VpcOptions:
          $ref: '#/components/schemas/CreatePipeline_request_VpcOptions'
        Tags:
          description: List of tags to add to the pipeline upon creation.
          items:
            $ref: '#/components/schemas/Tag'
          title: Tags
          type: array
      required:
      - MaxUnits
      - MinUnits
      - PipelineConfigurationBody
      - PipelineName
      title: CreatePipeline_request
      type: object
    TagResource_request:
      properties:
        Tags:
          description: The list of key-value tags to add to the pipeline.
          items:
            $ref: '#/components/schemas/Tag'
          title: Tags
          type: array
      required:
      - Tags
      title: TagResource_request
      type: object
    UntagResource_request:
      properties:
        TagKeys:
          description: The tag keys to remove.
          items:
            $ref: '#/components/schemas/String'
          title: TagKeys
          type: array
      required:
      - TagKeys
      title: UntagResource_request
      type: object
    UpdatePipeline_request:
      properties:
        MinUnits:
          description: "The minimum pipeline capacity, in Ingestion Compute Units\
            \ (ICUs)."
          maximum: 96
          minimum: 1
          title: MinUnits
          type: integer
        MaxUnits:
          description: "The maximum pipeline capacity, in Ingestion Compute Units\
            \ (ICUs)"
          maximum: 96
          minimum: 1
          title: MaxUnits
          type: integer
        PipelineConfigurationBody:
          description: "The pipeline configuration in YAML format. The command accepts\
            \ the pipeline configuration as a string or within a .yaml file. If you\
            \ provide the configuration as a string, each new line must be escaped\
            \ with <code>\\n</code>."
          maxLength: 24000
          minLength: 1
          title: PipelineConfigurationBody
          type: string
        LogPublishingOptions:
          $ref: '#/components/schemas/CreatePipeline_request_LogPublishingOptions'
      title: UpdatePipeline_request
      type: object
    ValidatePipeline_request:
      properties:
        PipelineConfigurationBody:
          description: "The pipeline configuration in YAML format. The command accepts\
            \ the pipeline configuration as a string or within a .yaml file. If you\
            \ provide the configuration as a string, each new line must be escaped\
            \ with <code>\\n</code>."
          maxLength: 24000
          minLength: 1
          title: PipelineConfigurationBody
          type: string
      required:
      - PipelineConfigurationBody
      title: ValidatePipeline_request
      type: object
    CreatePipelineResponse_Pipeline:
      allOf:
      - $ref: '#/components/schemas/Pipeline'
      - description: Container for information about the created pipeline.
      example:
        Status: ""
        PipelineConfigurationBody: ""
        PipelineArn: ""
        MinUnits: ""
        LastUpdatedAt: ""
        VpcEndpoints: ""
        PipelineName: ""
        MaxUnits: ""
        StatusReason:
          Description: ""
        CreatedAt: ""
        LogPublishingOptions:
          CloudWatchLogDestination:
            LogGroup: ""
          IsLoggingEnabled: ""
        IngestEndpointUrls: ""
      title: CreatePipelineResponse_Pipeline
    GetPipelineResponse_Pipeline:
      allOf:
      - $ref: '#/components/schemas/Pipeline'
      - description: Detailed information about the requested pipeline.
      example:
        Status: ""
        PipelineConfigurationBody: ""
        PipelineArn: ""
        MinUnits: ""
        LastUpdatedAt: ""
        VpcEndpoints: ""
        PipelineName: ""
        MaxUnits: ""
        StatusReason:
          Description: ""
        CreatedAt: ""
        LogPublishingOptions:
          CloudWatchLogDestination:
            LogGroup: ""
          IsLoggingEnabled: ""
        IngestEndpointUrls: ""
      title: GetPipelineResponse_Pipeline
    GetPipelineBlueprintResponse_Blueprint:
      allOf:
      - $ref: '#/components/schemas/PipelineBlueprint'
      - description: The requested blueprint in YAML format.
      example:
        PipelineConfigurationBody: ""
        BlueprintName: ""
      title: GetPipelineBlueprintResponse_Blueprint
    UpdatePipelineResponse_Pipeline:
      allOf:
      - $ref: '#/components/schemas/Pipeline'
      - description: Container for information about the updated pipeline.
      example:
        Status: ""
        PipelineConfigurationBody: ""
        PipelineArn: ""
        MinUnits: ""
        LastUpdatedAt: ""
        VpcEndpoints: ""
        PipelineName: ""
        MaxUnits: ""
        StatusReason:
          Description: ""
        CreatedAt: ""
        LogPublishingOptions:
          CloudWatchLogDestination:
            LogGroup: ""
          IsLoggingEnabled: ""
        IngestEndpointUrls: ""
      title: UpdatePipelineResponse_Pipeline
    CreatePipelineRequest_LogPublishingOptions:
      allOf:
      - $ref: '#/components/schemas/LogPublishingOptions'
      - description: Key-value pairs to configure log publishing.
      example:
        CloudWatchLogDestination:
          LogGroup: ""
        IsLoggingEnabled: ""
      title: CreatePipelineRequest_LogPublishingOptions
    CreatePipelineRequest_VpcOptions:
      allOf:
      - $ref: '#/components/schemas/VpcOptions'
      - description: "Container for the values required to configure VPC access for\
          \ the pipeline. If you don't specify these values, OpenSearch Ingestion\
          \ creates the pipeline with a public endpoint."
      example:
        SubnetIds: ""
        SecurityGroupIds: ""
      title: CreatePipelineRequest_VpcOptions
    Pipeline_StatusReason:
      allOf:
      - $ref: '#/components/schemas/PipelineStatusReason'
      - description: The reason for the current status of the pipeline.
      example:
        Description: ""
      title: Pipeline_StatusReason
    Pipeline_LogPublishingOptions:
      allOf:
      - $ref: '#/components/schemas/LogPublishingOptions'
      - description: Key-value pairs that represent log publishing settings.
      example:
        CloudWatchLogDestination:
          LogGroup: ""
        IsLoggingEnabled: ""
      title: Pipeline_LogPublishingOptions
    VpcEndpoint_VpcOptions:
      allOf:
      - $ref: '#/components/schemas/VpcOptions'
      - description: "Information about the VPC, including associated subnets and\
          \ security groups."
      title: VpcEndpoint_VpcOptions
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
