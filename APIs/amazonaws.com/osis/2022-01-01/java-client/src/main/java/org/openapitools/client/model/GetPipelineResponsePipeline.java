/*
 * Amazon OpenSearch Ingestion
 * Use the Amazon OpenSearch Ingestion API to create and manage ingestion pipelines. OpenSearch Ingestion is a fully managed data collector that delivers real-time log and trace data to OpenSearch Service domains. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ingestion.html\">Getting data into your cluster using OpenSearch Ingestion</a>.
 *
 * The version of the OpenAPI document: 2022-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PipelineLogPublishingOptions;
import org.openapitools.client.model.PipelineStatus;
import org.openapitools.client.model.PipelineStatusReason;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetPipelineResponsePipeline
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:12.484894-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetPipelineResponsePipeline {
  public static final String SERIALIZED_NAME_PIPELINE_NAME = "PipelineName";
  @SerializedName(SERIALIZED_NAME_PIPELINE_NAME)
  private String pipelineName;

  public static final String SERIALIZED_NAME_PIPELINE_ARN = "PipelineArn";
  @SerializedName(SERIALIZED_NAME_PIPELINE_ARN)
  private String pipelineArn;

  public static final String SERIALIZED_NAME_MIN_UNITS = "MinUnits";
  @SerializedName(SERIALIZED_NAME_MIN_UNITS)
  private Integer minUnits;

  public static final String SERIALIZED_NAME_MAX_UNITS = "MaxUnits";
  @SerializedName(SERIALIZED_NAME_MAX_UNITS)
  private Integer maxUnits;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private PipelineStatus status;

  public static final String SERIALIZED_NAME_STATUS_REASON = "StatusReason";
  @SerializedName(SERIALIZED_NAME_STATUS_REASON)
  private PipelineStatusReason statusReason;

  public static final String SERIALIZED_NAME_PIPELINE_CONFIGURATION_BODY = "PipelineConfigurationBody";
  @SerializedName(SERIALIZED_NAME_PIPELINE_CONFIGURATION_BODY)
  private String pipelineConfigurationBody;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_LAST_UPDATED_AT = "LastUpdatedAt";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_AT)
  private OffsetDateTime lastUpdatedAt;

  public static final String SERIALIZED_NAME_INGEST_ENDPOINT_URLS = "IngestEndpointUrls";
  @SerializedName(SERIALIZED_NAME_INGEST_ENDPOINT_URLS)
  private List ingestEndpointUrls;

  public static final String SERIALIZED_NAME_LOG_PUBLISHING_OPTIONS = "LogPublishingOptions";
  @SerializedName(SERIALIZED_NAME_LOG_PUBLISHING_OPTIONS)
  private PipelineLogPublishingOptions logPublishingOptions;

  public static final String SERIALIZED_NAME_VPC_ENDPOINTS = "VpcEndpoints";
  @SerializedName(SERIALIZED_NAME_VPC_ENDPOINTS)
  private List vpcEndpoints;

  public GetPipelineResponsePipeline() {
  }

  public GetPipelineResponsePipeline pipelineName(String pipelineName) {
    this.pipelineName = pipelineName;
    return this;
  }

  /**
   * Get pipelineName
   * @return pipelineName
   */
  @javax.annotation.Nullable
  public String getPipelineName() {
    return pipelineName;
  }

  public void setPipelineName(String pipelineName) {
    this.pipelineName = pipelineName;
  }


  public GetPipelineResponsePipeline pipelineArn(String pipelineArn) {
    this.pipelineArn = pipelineArn;
    return this;
  }

  /**
   * Get pipelineArn
   * @return pipelineArn
   */
  @javax.annotation.Nullable
  public String getPipelineArn() {
    return pipelineArn;
  }

  public void setPipelineArn(String pipelineArn) {
    this.pipelineArn = pipelineArn;
  }


  public GetPipelineResponsePipeline minUnits(Integer minUnits) {
    this.minUnits = minUnits;
    return this;
  }

  /**
   * Get minUnits
   * @return minUnits
   */
  @javax.annotation.Nullable
  public Integer getMinUnits() {
    return minUnits;
  }

  public void setMinUnits(Integer minUnits) {
    this.minUnits = minUnits;
  }


  public GetPipelineResponsePipeline maxUnits(Integer maxUnits) {
    this.maxUnits = maxUnits;
    return this;
  }

  /**
   * Get maxUnits
   * @return maxUnits
   */
  @javax.annotation.Nullable
  public Integer getMaxUnits() {
    return maxUnits;
  }

  public void setMaxUnits(Integer maxUnits) {
    this.maxUnits = maxUnits;
  }


  public GetPipelineResponsePipeline status(PipelineStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public PipelineStatus getStatus() {
    return status;
  }

  public void setStatus(PipelineStatus status) {
    this.status = status;
  }


  public GetPipelineResponsePipeline statusReason(PipelineStatusReason statusReason) {
    this.statusReason = statusReason;
    return this;
  }

  /**
   * Get statusReason
   * @return statusReason
   */
  @javax.annotation.Nullable
  public PipelineStatusReason getStatusReason() {
    return statusReason;
  }

  public void setStatusReason(PipelineStatusReason statusReason) {
    this.statusReason = statusReason;
  }


  public GetPipelineResponsePipeline pipelineConfigurationBody(String pipelineConfigurationBody) {
    this.pipelineConfigurationBody = pipelineConfigurationBody;
    return this;
  }

  /**
   * Get pipelineConfigurationBody
   * @return pipelineConfigurationBody
   */
  @javax.annotation.Nullable
  public String getPipelineConfigurationBody() {
    return pipelineConfigurationBody;
  }

  public void setPipelineConfigurationBody(String pipelineConfigurationBody) {
    this.pipelineConfigurationBody = pipelineConfigurationBody;
  }


  public GetPipelineResponsePipeline createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public GetPipelineResponsePipeline lastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

  /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }


  public GetPipelineResponsePipeline ingestEndpointUrls(List ingestEndpointUrls) {
    this.ingestEndpointUrls = ingestEndpointUrls;
    return this;
  }

  /**
   * Get ingestEndpointUrls
   * @return ingestEndpointUrls
   */
  @javax.annotation.Nullable
  public List getIngestEndpointUrls() {
    return ingestEndpointUrls;
  }

  public void setIngestEndpointUrls(List ingestEndpointUrls) {
    this.ingestEndpointUrls = ingestEndpointUrls;
  }


  public GetPipelineResponsePipeline logPublishingOptions(PipelineLogPublishingOptions logPublishingOptions) {
    this.logPublishingOptions = logPublishingOptions;
    return this;
  }

  /**
   * Get logPublishingOptions
   * @return logPublishingOptions
   */
  @javax.annotation.Nullable
  public PipelineLogPublishingOptions getLogPublishingOptions() {
    return logPublishingOptions;
  }

  public void setLogPublishingOptions(PipelineLogPublishingOptions logPublishingOptions) {
    this.logPublishingOptions = logPublishingOptions;
  }


  public GetPipelineResponsePipeline vpcEndpoints(List vpcEndpoints) {
    this.vpcEndpoints = vpcEndpoints;
    return this;
  }

  /**
   * Get vpcEndpoints
   * @return vpcEndpoints
   */
  @javax.annotation.Nullable
  public List getVpcEndpoints() {
    return vpcEndpoints;
  }

  public void setVpcEndpoints(List vpcEndpoints) {
    this.vpcEndpoints = vpcEndpoints;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetPipelineResponsePipeline getPipelineResponsePipeline = (GetPipelineResponsePipeline) o;
    return Objects.equals(this.pipelineName, getPipelineResponsePipeline.pipelineName) &&
        Objects.equals(this.pipelineArn, getPipelineResponsePipeline.pipelineArn) &&
        Objects.equals(this.minUnits, getPipelineResponsePipeline.minUnits) &&
        Objects.equals(this.maxUnits, getPipelineResponsePipeline.maxUnits) &&
        Objects.equals(this.status, getPipelineResponsePipeline.status) &&
        Objects.equals(this.statusReason, getPipelineResponsePipeline.statusReason) &&
        Objects.equals(this.pipelineConfigurationBody, getPipelineResponsePipeline.pipelineConfigurationBody) &&
        Objects.equals(this.createdAt, getPipelineResponsePipeline.createdAt) &&
        Objects.equals(this.lastUpdatedAt, getPipelineResponsePipeline.lastUpdatedAt) &&
        Objects.equals(this.ingestEndpointUrls, getPipelineResponsePipeline.ingestEndpointUrls) &&
        Objects.equals(this.logPublishingOptions, getPipelineResponsePipeline.logPublishingOptions) &&
        Objects.equals(this.vpcEndpoints, getPipelineResponsePipeline.vpcEndpoints);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pipelineName, pipelineArn, minUnits, maxUnits, status, statusReason, pipelineConfigurationBody, createdAt, lastUpdatedAt, ingestEndpointUrls, logPublishingOptions, vpcEndpoints);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetPipelineResponsePipeline {\n");
    sb.append("    pipelineName: ").append(toIndentedString(pipelineName)).append("\n");
    sb.append("    pipelineArn: ").append(toIndentedString(pipelineArn)).append("\n");
    sb.append("    minUnits: ").append(toIndentedString(minUnits)).append("\n");
    sb.append("    maxUnits: ").append(toIndentedString(maxUnits)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusReason: ").append(toIndentedString(statusReason)).append("\n");
    sb.append("    pipelineConfigurationBody: ").append(toIndentedString(pipelineConfigurationBody)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    ingestEndpointUrls: ").append(toIndentedString(ingestEndpointUrls)).append("\n");
    sb.append("    logPublishingOptions: ").append(toIndentedString(logPublishingOptions)).append("\n");
    sb.append("    vpcEndpoints: ").append(toIndentedString(vpcEndpoints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("PipelineName");
    openapiFields.add("PipelineArn");
    openapiFields.add("MinUnits");
    openapiFields.add("MaxUnits");
    openapiFields.add("Status");
    openapiFields.add("StatusReason");
    openapiFields.add("PipelineConfigurationBody");
    openapiFields.add("CreatedAt");
    openapiFields.add("LastUpdatedAt");
    openapiFields.add("IngestEndpointUrls");
    openapiFields.add("LogPublishingOptions");
    openapiFields.add("VpcEndpoints");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetPipelineResponsePipeline
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetPipelineResponsePipeline.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetPipelineResponsePipeline is not found in the empty JSON string", GetPipelineResponsePipeline.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetPipelineResponsePipeline.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetPipelineResponsePipeline` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `PipelineName`
      if (jsonObj.get("PipelineName") != null && !jsonObj.get("PipelineName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PipelineName"));
      }
      // validate the optional field `PipelineArn`
      if (jsonObj.get("PipelineArn") != null && !jsonObj.get("PipelineArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PipelineArn"));
      }
      // validate the optional field `MinUnits`
      if (jsonObj.get("MinUnits") != null && !jsonObj.get("MinUnits").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MinUnits"));
      }
      // validate the optional field `MaxUnits`
      if (jsonObj.get("MaxUnits") != null && !jsonObj.get("MaxUnits").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxUnits"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        PipelineStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `StatusReason`
      if (jsonObj.get("StatusReason") != null && !jsonObj.get("StatusReason").isJsonNull()) {
        PipelineStatusReason.validateJsonElement(jsonObj.get("StatusReason"));
      }
      // validate the optional field `PipelineConfigurationBody`
      if (jsonObj.get("PipelineConfigurationBody") != null && !jsonObj.get("PipelineConfigurationBody").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PipelineConfigurationBody"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `LastUpdatedAt`
      if (jsonObj.get("LastUpdatedAt") != null && !jsonObj.get("LastUpdatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdatedAt"));
      }
      // validate the optional field `IngestEndpointUrls`
      if (jsonObj.get("IngestEndpointUrls") != null && !jsonObj.get("IngestEndpointUrls").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("IngestEndpointUrls"));
      }
      // validate the optional field `LogPublishingOptions`
      if (jsonObj.get("LogPublishingOptions") != null && !jsonObj.get("LogPublishingOptions").isJsonNull()) {
        PipelineLogPublishingOptions.validateJsonElement(jsonObj.get("LogPublishingOptions"));
      }
      // validate the optional field `VpcEndpoints`
      if (jsonObj.get("VpcEndpoints") != null && !jsonObj.get("VpcEndpoints").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("VpcEndpoints"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetPipelineResponsePipeline.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetPipelineResponsePipeline' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetPipelineResponsePipeline> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetPipelineResponsePipeline.class));

       return (TypeAdapter<T>) new TypeAdapter<GetPipelineResponsePipeline>() {
           @Override
           public void write(JsonWriter out, GetPipelineResponsePipeline value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetPipelineResponsePipeline read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetPipelineResponsePipeline given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetPipelineResponsePipeline
   * @throws IOException if the JSON string is invalid with respect to GetPipelineResponsePipeline
   */
  public static GetPipelineResponsePipeline fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetPipelineResponsePipeline.class);
  }

  /**
   * Convert an instance of GetPipelineResponsePipeline to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

