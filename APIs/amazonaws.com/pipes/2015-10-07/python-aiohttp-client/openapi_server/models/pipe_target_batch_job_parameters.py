# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pipe_target_batch_job_parameters_array_properties import PipeTargetBatchJobParametersArrayProperties
from openapi_server.models.pipe_target_batch_job_parameters_container_overrides import PipeTargetBatchJobParametersContainerOverrides
from openapi_server.models.pipe_target_batch_job_parameters_retry_strategy import PipeTargetBatchJobParametersRetryStrategy
from openapi_server import util


class PipeTargetBatchJobParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, array_properties: PipeTargetBatchJobParametersArrayProperties=None, container_overrides: PipeTargetBatchJobParametersContainerOverrides=None, depends_on: List=None, job_definition: str=None, job_name: str=None, parameters: Dict=None, retry_strategy: PipeTargetBatchJobParametersRetryStrategy=None):
        """PipeTargetBatchJobParameters - a model defined in OpenAPI

        :param array_properties: The array_properties of this PipeTargetBatchJobParameters.
        :param container_overrides: The container_overrides of this PipeTargetBatchJobParameters.
        :param depends_on: The depends_on of this PipeTargetBatchJobParameters.
        :param job_definition: The job_definition of this PipeTargetBatchJobParameters.
        :param job_name: The job_name of this PipeTargetBatchJobParameters.
        :param parameters: The parameters of this PipeTargetBatchJobParameters.
        :param retry_strategy: The retry_strategy of this PipeTargetBatchJobParameters.
        """
        self.openapi_types = {
            'array_properties': PipeTargetBatchJobParametersArrayProperties,
            'container_overrides': PipeTargetBatchJobParametersContainerOverrides,
            'depends_on': List,
            'job_definition': str,
            'job_name': str,
            'parameters': Dict,
            'retry_strategy': PipeTargetBatchJobParametersRetryStrategy
        }

        self.attribute_map = {
            'array_properties': 'ArrayProperties',
            'container_overrides': 'ContainerOverrides',
            'depends_on': 'DependsOn',
            'job_definition': 'JobDefinition',
            'job_name': 'JobName',
            'parameters': 'Parameters',
            'retry_strategy': 'RetryStrategy'
        }

        self._array_properties = array_properties
        self._container_overrides = container_overrides
        self._depends_on = depends_on
        self._job_definition = job_definition
        self._job_name = job_name
        self._parameters = parameters
        self._retry_strategy = retry_strategy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PipeTargetBatchJobParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PipeTargetBatchJobParameters of this PipeTargetBatchJobParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def array_properties(self):
        """Gets the array_properties of this PipeTargetBatchJobParameters.


        :return: The array_properties of this PipeTargetBatchJobParameters.
        :rtype: PipeTargetBatchJobParametersArrayProperties
        """
        return self._array_properties

    @array_properties.setter
    def array_properties(self, array_properties):
        """Sets the array_properties of this PipeTargetBatchJobParameters.


        :param array_properties: The array_properties of this PipeTargetBatchJobParameters.
        :type array_properties: PipeTargetBatchJobParametersArrayProperties
        """

        self._array_properties = array_properties

    @property
    def container_overrides(self):
        """Gets the container_overrides of this PipeTargetBatchJobParameters.


        :return: The container_overrides of this PipeTargetBatchJobParameters.
        :rtype: PipeTargetBatchJobParametersContainerOverrides
        """
        return self._container_overrides

    @container_overrides.setter
    def container_overrides(self, container_overrides):
        """Sets the container_overrides of this PipeTargetBatchJobParameters.


        :param container_overrides: The container_overrides of this PipeTargetBatchJobParameters.
        :type container_overrides: PipeTargetBatchJobParametersContainerOverrides
        """

        self._container_overrides = container_overrides

    @property
    def depends_on(self):
        """Gets the depends_on of this PipeTargetBatchJobParameters.


        :return: The depends_on of this PipeTargetBatchJobParameters.
        :rtype: List
        """
        return self._depends_on

    @depends_on.setter
    def depends_on(self, depends_on):
        """Sets the depends_on of this PipeTargetBatchJobParameters.


        :param depends_on: The depends_on of this PipeTargetBatchJobParameters.
        :type depends_on: List
        """

        self._depends_on = depends_on

    @property
    def job_definition(self):
        """Gets the job_definition of this PipeTargetBatchJobParameters.


        :return: The job_definition of this PipeTargetBatchJobParameters.
        :rtype: str
        """
        return self._job_definition

    @job_definition.setter
    def job_definition(self, job_definition):
        """Sets the job_definition of this PipeTargetBatchJobParameters.


        :param job_definition: The job_definition of this PipeTargetBatchJobParameters.
        :type job_definition: str
        """
        if job_definition is None:
            raise ValueError("Invalid value for `job_definition`, must not be `None`")

        self._job_definition = job_definition

    @property
    def job_name(self):
        """Gets the job_name of this PipeTargetBatchJobParameters.


        :return: The job_name of this PipeTargetBatchJobParameters.
        :rtype: str
        """
        return self._job_name

    @job_name.setter
    def job_name(self, job_name):
        """Sets the job_name of this PipeTargetBatchJobParameters.


        :param job_name: The job_name of this PipeTargetBatchJobParameters.
        :type job_name: str
        """
        if job_name is None:
            raise ValueError("Invalid value for `job_name`, must not be `None`")

        self._job_name = job_name

    @property
    def parameters(self):
        """Gets the parameters of this PipeTargetBatchJobParameters.


        :return: The parameters of this PipeTargetBatchJobParameters.
        :rtype: Dict
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this PipeTargetBatchJobParameters.


        :param parameters: The parameters of this PipeTargetBatchJobParameters.
        :type parameters: Dict
        """

        self._parameters = parameters

    @property
    def retry_strategy(self):
        """Gets the retry_strategy of this PipeTargetBatchJobParameters.


        :return: The retry_strategy of this PipeTargetBatchJobParameters.
        :rtype: PipeTargetBatchJobParametersRetryStrategy
        """
        return self._retry_strategy

    @retry_strategy.setter
    def retry_strategy(self, retry_strategy):
        """Sets the retry_strategy of this PipeTargetBatchJobParameters.


        :param retry_strategy: The retry_strategy of this PipeTargetBatchJobParameters.
        :type retry_strategy: PipeTargetBatchJobParametersRetryStrategy
        """

        self._retry_strategy = retry_strategy
