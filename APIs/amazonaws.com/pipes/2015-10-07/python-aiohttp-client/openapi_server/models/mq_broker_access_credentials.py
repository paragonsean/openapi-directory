# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MQBrokerAccessCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, basic_auth: str=None):
        """MQBrokerAccessCredentials - a model defined in OpenAPI

        :param basic_auth: The basic_auth of this MQBrokerAccessCredentials.
        """
        self.openapi_types = {
            'basic_auth': str
        }

        self.attribute_map = {
            'basic_auth': 'BasicAuth'
        }

        self._basic_auth = basic_auth

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MQBrokerAccessCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MQBrokerAccessCredentials of this MQBrokerAccessCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def basic_auth(self):
        """Gets the basic_auth of this MQBrokerAccessCredentials.


        :return: The basic_auth of this MQBrokerAccessCredentials.
        :rtype: str
        """
        return self._basic_auth

    @basic_auth.setter
    def basic_auth(self, basic_auth):
        """Sets the basic_auth of this MQBrokerAccessCredentials.


        :param basic_auth: The basic_auth of this MQBrokerAccessCredentials.
        :type basic_auth: str
        """

        self._basic_auth = basic_auth
