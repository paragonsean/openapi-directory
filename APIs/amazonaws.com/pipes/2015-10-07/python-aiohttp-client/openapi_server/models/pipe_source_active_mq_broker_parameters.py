# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pipe_source_active_mq_broker_parameters_credentials import PipeSourceActiveMQBrokerParametersCredentials
from openapi_server import util


class PipeSourceActiveMQBrokerParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batch_size: int=None, credentials: PipeSourceActiveMQBrokerParametersCredentials=None, maximum_batching_window_in_seconds: int=None, queue_name: str=None):
        """PipeSourceActiveMQBrokerParameters - a model defined in OpenAPI

        :param batch_size: The batch_size of this PipeSourceActiveMQBrokerParameters.
        :param credentials: The credentials of this PipeSourceActiveMQBrokerParameters.
        :param maximum_batching_window_in_seconds: The maximum_batching_window_in_seconds of this PipeSourceActiveMQBrokerParameters.
        :param queue_name: The queue_name of this PipeSourceActiveMQBrokerParameters.
        """
        self.openapi_types = {
            'batch_size': int,
            'credentials': PipeSourceActiveMQBrokerParametersCredentials,
            'maximum_batching_window_in_seconds': int,
            'queue_name': str
        }

        self.attribute_map = {
            'batch_size': 'BatchSize',
            'credentials': 'Credentials',
            'maximum_batching_window_in_seconds': 'MaximumBatchingWindowInSeconds',
            'queue_name': 'QueueName'
        }

        self._batch_size = batch_size
        self._credentials = credentials
        self._maximum_batching_window_in_seconds = maximum_batching_window_in_seconds
        self._queue_name = queue_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PipeSourceActiveMQBrokerParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PipeSourceActiveMQBrokerParameters of this PipeSourceActiveMQBrokerParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_size(self):
        """Gets the batch_size of this PipeSourceActiveMQBrokerParameters.


        :return: The batch_size of this PipeSourceActiveMQBrokerParameters.
        :rtype: int
        """
        return self._batch_size

    @batch_size.setter
    def batch_size(self, batch_size):
        """Sets the batch_size of this PipeSourceActiveMQBrokerParameters.


        :param batch_size: The batch_size of this PipeSourceActiveMQBrokerParameters.
        :type batch_size: int
        """

        self._batch_size = batch_size

    @property
    def credentials(self):
        """Gets the credentials of this PipeSourceActiveMQBrokerParameters.


        :return: The credentials of this PipeSourceActiveMQBrokerParameters.
        :rtype: PipeSourceActiveMQBrokerParametersCredentials
        """
        return self._credentials

    @credentials.setter
    def credentials(self, credentials):
        """Sets the credentials of this PipeSourceActiveMQBrokerParameters.


        :param credentials: The credentials of this PipeSourceActiveMQBrokerParameters.
        :type credentials: PipeSourceActiveMQBrokerParametersCredentials
        """
        if credentials is None:
            raise ValueError("Invalid value for `credentials`, must not be `None`")

        self._credentials = credentials

    @property
    def maximum_batching_window_in_seconds(self):
        """Gets the maximum_batching_window_in_seconds of this PipeSourceActiveMQBrokerParameters.


        :return: The maximum_batching_window_in_seconds of this PipeSourceActiveMQBrokerParameters.
        :rtype: int
        """
        return self._maximum_batching_window_in_seconds

    @maximum_batching_window_in_seconds.setter
    def maximum_batching_window_in_seconds(self, maximum_batching_window_in_seconds):
        """Sets the maximum_batching_window_in_seconds of this PipeSourceActiveMQBrokerParameters.


        :param maximum_batching_window_in_seconds: The maximum_batching_window_in_seconds of this PipeSourceActiveMQBrokerParameters.
        :type maximum_batching_window_in_seconds: int
        """

        self._maximum_batching_window_in_seconds = maximum_batching_window_in_seconds

    @property
    def queue_name(self):
        """Gets the queue_name of this PipeSourceActiveMQBrokerParameters.


        :return: The queue_name of this PipeSourceActiveMQBrokerParameters.
        :rtype: str
        """
        return self._queue_name

    @queue_name.setter
    def queue_name(self, queue_name):
        """Sets the queue_name of this PipeSourceActiveMQBrokerParameters.


        :param queue_name: The queue_name of this PipeSourceActiveMQBrokerParameters.
        :type queue_name: str
        """
        if queue_name is None:
            raise ValueError("Invalid value for `queue_name`, must not be `None`")

        self._queue_name = queue_name
