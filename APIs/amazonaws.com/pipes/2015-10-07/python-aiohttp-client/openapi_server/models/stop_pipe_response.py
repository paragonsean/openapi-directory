# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pipe_state import PipeState
from openapi_server.models.requested_pipe_state import RequestedPipeState
from openapi_server import util


class StopPipeResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, creation_time: datetime=None, current_state: PipeState=None, desired_state: RequestedPipeState=None, last_modified_time: datetime=None, name: str=None):
        """StopPipeResponse - a model defined in OpenAPI

        :param arn: The arn of this StopPipeResponse.
        :param creation_time: The creation_time of this StopPipeResponse.
        :param current_state: The current_state of this StopPipeResponse.
        :param desired_state: The desired_state of this StopPipeResponse.
        :param last_modified_time: The last_modified_time of this StopPipeResponse.
        :param name: The name of this StopPipeResponse.
        """
        self.openapi_types = {
            'arn': str,
            'creation_time': datetime,
            'current_state': PipeState,
            'desired_state': RequestedPipeState,
            'last_modified_time': datetime,
            'name': str
        }

        self.attribute_map = {
            'arn': 'Arn',
            'creation_time': 'CreationTime',
            'current_state': 'CurrentState',
            'desired_state': 'DesiredState',
            'last_modified_time': 'LastModifiedTime',
            'name': 'Name'
        }

        self._arn = arn
        self._creation_time = creation_time
        self._current_state = current_state
        self._desired_state = desired_state
        self._last_modified_time = last_modified_time
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StopPipeResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StopPipeResponse of this StopPipeResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this StopPipeResponse.


        :return: The arn of this StopPipeResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this StopPipeResponse.


        :param arn: The arn of this StopPipeResponse.
        :type arn: str
        """

        self._arn = arn

    @property
    def creation_time(self):
        """Gets the creation_time of this StopPipeResponse.


        :return: The creation_time of this StopPipeResponse.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this StopPipeResponse.


        :param creation_time: The creation_time of this StopPipeResponse.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def current_state(self):
        """Gets the current_state of this StopPipeResponse.


        :return: The current_state of this StopPipeResponse.
        :rtype: PipeState
        """
        return self._current_state

    @current_state.setter
    def current_state(self, current_state):
        """Sets the current_state of this StopPipeResponse.


        :param current_state: The current_state of this StopPipeResponse.
        :type current_state: PipeState
        """

        self._current_state = current_state

    @property
    def desired_state(self):
        """Gets the desired_state of this StopPipeResponse.


        :return: The desired_state of this StopPipeResponse.
        :rtype: RequestedPipeState
        """
        return self._desired_state

    @desired_state.setter
    def desired_state(self, desired_state):
        """Sets the desired_state of this StopPipeResponse.


        :param desired_state: The desired_state of this StopPipeResponse.
        :type desired_state: RequestedPipeState
        """

        self._desired_state = desired_state

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this StopPipeResponse.


        :return: The last_modified_time of this StopPipeResponse.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this StopPipeResponse.


        :param last_modified_time: The last_modified_time of this StopPipeResponse.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time

    @property
    def name(self):
        """Gets the name of this StopPipeResponse.


        :return: The name of this StopPipeResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StopPipeResponse.


        :param name: The name of this StopPipeResponse.
        :type name: str
        """

        self._name = name
