/**
 * Amazon EventBridge Pipes
 * Amazon EventBridge Pipes connects event sources to targets. Pipes reduces the need for specialized knowledge and integration code when developing event driven architectures. This helps ensures consistency across your companyâ€™s applications. With Pipes, the target can be any available EventBridge target. To set up a pipe, you select the event source, add optional event filtering, define optional enrichment, and select the target for the event data. 
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PipeTargetBatchJobParameters from './PipeTargetBatchJobParameters';
import PipeTargetBatchJobParametersArrayProperties from './PipeTargetBatchJobParametersArrayProperties';
import PipeTargetBatchJobParametersContainerOverrides from './PipeTargetBatchJobParametersContainerOverrides';
import PipeTargetBatchJobParametersRetryStrategy from './PipeTargetBatchJobParametersRetryStrategy';

/**
 * The UpdatePipeRequestTargetParametersBatchJobParameters model module.
 * @module model/UpdatePipeRequestTargetParametersBatchJobParameters
 * @version 2015-10-07
 */
class UpdatePipeRequestTargetParametersBatchJobParameters {
    /**
     * Constructs a new <code>UpdatePipeRequestTargetParametersBatchJobParameters</code>.
     * @alias module:model/UpdatePipeRequestTargetParametersBatchJobParameters
     * @implements module:model/PipeTargetBatchJobParameters
     * @param jobDefinition {String} 
     * @param jobName {String} 
     */
    constructor(jobDefinition, jobName) { 
        PipeTargetBatchJobParameters.initialize(this, jobDefinition, jobName);
        UpdatePipeRequestTargetParametersBatchJobParameters.initialize(this, jobDefinition, jobName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, jobDefinition, jobName) { 
        obj['JobDefinition'] = jobDefinition;
        obj['JobName'] = jobName;
    }

    /**
     * Constructs a <code>UpdatePipeRequestTargetParametersBatchJobParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdatePipeRequestTargetParametersBatchJobParameters} obj Optional instance to populate.
     * @return {module:model/UpdatePipeRequestTargetParametersBatchJobParameters} The populated <code>UpdatePipeRequestTargetParametersBatchJobParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdatePipeRequestTargetParametersBatchJobParameters();
            PipeTargetBatchJobParameters.constructFromObject(data, obj);

            if (data.hasOwnProperty('ArrayProperties')) {
                obj['ArrayProperties'] = PipeTargetBatchJobParametersArrayProperties.constructFromObject(data['ArrayProperties']);
            }
            if (data.hasOwnProperty('ContainerOverrides')) {
                obj['ContainerOverrides'] = PipeTargetBatchJobParametersContainerOverrides.constructFromObject(data['ContainerOverrides']);
            }
            if (data.hasOwnProperty('DependsOn')) {
                obj['DependsOn'] = ApiClient.convertToType(data['DependsOn'], Array);
            }
            if (data.hasOwnProperty('JobDefinition')) {
                obj['JobDefinition'] = ApiClient.convertToType(data['JobDefinition'], 'String');
            }
            if (data.hasOwnProperty('JobName')) {
                obj['JobName'] = ApiClient.convertToType(data['JobName'], 'String');
            }
            if (data.hasOwnProperty('Parameters')) {
                obj['Parameters'] = ApiClient.convertToType(data['Parameters'], Object);
            }
            if (data.hasOwnProperty('RetryStrategy')) {
                obj['RetryStrategy'] = PipeTargetBatchJobParametersRetryStrategy.constructFromObject(data['RetryStrategy']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdatePipeRequestTargetParametersBatchJobParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdatePipeRequestTargetParametersBatchJobParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdatePipeRequestTargetParametersBatchJobParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ArrayProperties`
        if (data['ArrayProperties']) { // data not null
          PipeTargetBatchJobParametersArrayProperties.validateJSON(data['ArrayProperties']);
        }
        // validate the optional field `ContainerOverrides`
        if (data['ContainerOverrides']) { // data not null
          PipeTargetBatchJobParametersContainerOverrides.validateJSON(data['ContainerOverrides']);
        }
        // validate the optional field `DependsOn`
        if (data['DependsOn']) { // data not null
          Array.validateJSON(data['DependsOn']);
        }
        // validate the optional field `JobDefinition`
        if (data['JobDefinition']) { // data not null
          String.validateJSON(data['JobDefinition']);
        }
        // validate the optional field `JobName`
        if (data['JobName']) { // data not null
          String.validateJSON(data['JobName']);
        }
        // validate the optional field `Parameters`
        if (data['Parameters']) { // data not null
          Object.validateJSON(data['Parameters']);
        }
        // validate the optional field `RetryStrategy`
        if (data['RetryStrategy']) { // data not null
          PipeTargetBatchJobParametersRetryStrategy.validateJSON(data['RetryStrategy']);
        }

        return true;
    }


}

UpdatePipeRequestTargetParametersBatchJobParameters.RequiredProperties = ["JobDefinition", "JobName"];

/**
 * @member {module:model/PipeTargetBatchJobParametersArrayProperties} ArrayProperties
 */
UpdatePipeRequestTargetParametersBatchJobParameters.prototype['ArrayProperties'] = undefined;

/**
 * @member {module:model/PipeTargetBatchJobParametersContainerOverrides} ContainerOverrides
 */
UpdatePipeRequestTargetParametersBatchJobParameters.prototype['ContainerOverrides'] = undefined;

/**
 * @member {Array} DependsOn
 */
UpdatePipeRequestTargetParametersBatchJobParameters.prototype['DependsOn'] = undefined;

/**
 * @member {String} JobDefinition
 */
UpdatePipeRequestTargetParametersBatchJobParameters.prototype['JobDefinition'] = undefined;

/**
 * @member {String} JobName
 */
UpdatePipeRequestTargetParametersBatchJobParameters.prototype['JobName'] = undefined;

/**
 * @member {Object} Parameters
 */
UpdatePipeRequestTargetParametersBatchJobParameters.prototype['Parameters'] = undefined;

/**
 * @member {module:model/PipeTargetBatchJobParametersRetryStrategy} RetryStrategy
 */
UpdatePipeRequestTargetParametersBatchJobParameters.prototype['RetryStrategy'] = undefined;


// Implement PipeTargetBatchJobParameters interface:
/**
 * @member {module:model/PipeTargetBatchJobParametersArrayProperties} ArrayProperties
 */
PipeTargetBatchJobParameters.prototype['ArrayProperties'] = undefined;
/**
 * @member {module:model/PipeTargetBatchJobParametersContainerOverrides} ContainerOverrides
 */
PipeTargetBatchJobParameters.prototype['ContainerOverrides'] = undefined;
/**
 * @member {Array} DependsOn
 */
PipeTargetBatchJobParameters.prototype['DependsOn'] = undefined;
/**
 * @member {String} JobDefinition
 */
PipeTargetBatchJobParameters.prototype['JobDefinition'] = undefined;
/**
 * @member {String} JobName
 */
PipeTargetBatchJobParameters.prototype['JobName'] = undefined;
/**
 * @member {Object} Parameters
 */
PipeTargetBatchJobParameters.prototype['Parameters'] = undefined;
/**
 * @member {module:model/PipeTargetBatchJobParametersRetryStrategy} RetryStrategy
 */
PipeTargetBatchJobParameters.prototype['RetryStrategy'] = undefined;




export default UpdatePipeRequestTargetParametersBatchJobParameters;

