/**
 * Amazon EventBridge Pipes
 * Amazon EventBridge Pipes connects event sources to targets. Pipes reduces the need for specialized knowledge and integration code when developing event driven architectures. This helps ensures consistency across your companyâ€™s applications. With Pipes, the target can be any available EventBridge target. To set up a pipe, you select the event source, add optional event filtering, define optional enrichment, and select the target for the event data. 
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BatchResourceRequirementType from './BatchResourceRequirementType';

/**
 * The BatchResourceRequirement model module.
 * @module model/BatchResourceRequirement
 * @version 2015-10-07
 */
class BatchResourceRequirement {
    /**
     * Constructs a new <code>BatchResourceRequirement</code>.
     * The type and amount of a resource to assign to a container. The supported resources include &lt;code&gt;GPU&lt;/code&gt;, &lt;code&gt;MEMORY&lt;/code&gt;, and &lt;code&gt;VCPU&lt;/code&gt;.
     * @alias module:model/BatchResourceRequirement
     * @param type {module:model/BatchResourceRequirementType} 
     * @param value {String} 
     */
    constructor(type, value) { 
        
        BatchResourceRequirement.initialize(this, type, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, value) { 
        obj['Type'] = type;
        obj['Value'] = value;
    }

    /**
     * Constructs a <code>BatchResourceRequirement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchResourceRequirement} obj Optional instance to populate.
     * @return {module:model/BatchResourceRequirement} The populated <code>BatchResourceRequirement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchResourceRequirement();

            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], BatchResourceRequirementType);
            }
            if (data.hasOwnProperty('Value')) {
                obj['Value'] = ApiClient.convertToType(data['Value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchResourceRequirement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchResourceRequirement</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BatchResourceRequirement.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          BatchResourceRequirementType.validateJSON(data['Type']);
        }
        // validate the optional field `Value`
        if (data['Value']) { // data not null
          String.validateJSON(data['Value']);
        }

        return true;
    }


}

BatchResourceRequirement.RequiredProperties = ["Type", "Value"];

/**
 * @member {module:model/BatchResourceRequirementType} Type
 */
BatchResourceRequirement.prototype['Type'] = undefined;

/**
 * @member {String} Value
 */
BatchResourceRequirement.prototype['Value'] = undefined;






export default BatchResourceRequirement;

