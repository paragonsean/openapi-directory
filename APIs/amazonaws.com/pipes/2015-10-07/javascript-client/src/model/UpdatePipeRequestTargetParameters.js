/**
 * Amazon EventBridge Pipes
 * Amazon EventBridge Pipes connects event sources to targets. Pipes reduces the need for specialized knowledge and integration code when developing event driven architectures. This helps ensures consistency across your companyâ€™s applications. With Pipes, the target can be any available EventBridge target. To set up a pipe, you select the event source, add optional event filtering, define optional enrichment, and select the target for the event data. 
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdatePipeRequestTargetParametersBatchJobParameters from './UpdatePipeRequestTargetParametersBatchJobParameters';
import UpdatePipeRequestTargetParametersCloudWatchLogsParameters from './UpdatePipeRequestTargetParametersCloudWatchLogsParameters';
import UpdatePipeRequestTargetParametersEcsTaskParameters from './UpdatePipeRequestTargetParametersEcsTaskParameters';
import UpdatePipeRequestTargetParametersEventBridgeEventBusParameters from './UpdatePipeRequestTargetParametersEventBridgeEventBusParameters';
import UpdatePipeRequestTargetParametersHttpParameters from './UpdatePipeRequestTargetParametersHttpParameters';
import UpdatePipeRequestTargetParametersKinesisStreamParameters from './UpdatePipeRequestTargetParametersKinesisStreamParameters';
import UpdatePipeRequestTargetParametersLambdaFunctionParameters from './UpdatePipeRequestTargetParametersLambdaFunctionParameters';
import UpdatePipeRequestTargetParametersRedshiftDataParameters from './UpdatePipeRequestTargetParametersRedshiftDataParameters';
import UpdatePipeRequestTargetParametersSageMakerPipelineParameters from './UpdatePipeRequestTargetParametersSageMakerPipelineParameters';
import UpdatePipeRequestTargetParametersSqsQueueParameters from './UpdatePipeRequestTargetParametersSqsQueueParameters';
import UpdatePipeRequestTargetParametersStepFunctionStateMachineParameters from './UpdatePipeRequestTargetParametersStepFunctionStateMachineParameters';

/**
 * The UpdatePipeRequestTargetParameters model module.
 * @module model/UpdatePipeRequestTargetParameters
 * @version 2015-10-07
 */
class UpdatePipeRequestTargetParameters {
    /**
     * Constructs a new <code>UpdatePipeRequestTargetParameters</code>.
     * The parameters required to set up a target for your pipe.
     * @alias module:model/UpdatePipeRequestTargetParameters
     */
    constructor() { 
        
        UpdatePipeRequestTargetParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdatePipeRequestTargetParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdatePipeRequestTargetParameters} obj Optional instance to populate.
     * @return {module:model/UpdatePipeRequestTargetParameters} The populated <code>UpdatePipeRequestTargetParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdatePipeRequestTargetParameters();

            if (data.hasOwnProperty('BatchJobParameters')) {
                obj['BatchJobParameters'] = UpdatePipeRequestTargetParametersBatchJobParameters.constructFromObject(data['BatchJobParameters']);
            }
            if (data.hasOwnProperty('CloudWatchLogsParameters')) {
                obj['CloudWatchLogsParameters'] = UpdatePipeRequestTargetParametersCloudWatchLogsParameters.constructFromObject(data['CloudWatchLogsParameters']);
            }
            if (data.hasOwnProperty('EcsTaskParameters')) {
                obj['EcsTaskParameters'] = UpdatePipeRequestTargetParametersEcsTaskParameters.constructFromObject(data['EcsTaskParameters']);
            }
            if (data.hasOwnProperty('EventBridgeEventBusParameters')) {
                obj['EventBridgeEventBusParameters'] = UpdatePipeRequestTargetParametersEventBridgeEventBusParameters.constructFromObject(data['EventBridgeEventBusParameters']);
            }
            if (data.hasOwnProperty('HttpParameters')) {
                obj['HttpParameters'] = UpdatePipeRequestTargetParametersHttpParameters.constructFromObject(data['HttpParameters']);
            }
            if (data.hasOwnProperty('InputTemplate')) {
                obj['InputTemplate'] = ApiClient.convertToType(data['InputTemplate'], 'String');
            }
            if (data.hasOwnProperty('KinesisStreamParameters')) {
                obj['KinesisStreamParameters'] = UpdatePipeRequestTargetParametersKinesisStreamParameters.constructFromObject(data['KinesisStreamParameters']);
            }
            if (data.hasOwnProperty('LambdaFunctionParameters')) {
                obj['LambdaFunctionParameters'] = UpdatePipeRequestTargetParametersLambdaFunctionParameters.constructFromObject(data['LambdaFunctionParameters']);
            }
            if (data.hasOwnProperty('RedshiftDataParameters')) {
                obj['RedshiftDataParameters'] = UpdatePipeRequestTargetParametersRedshiftDataParameters.constructFromObject(data['RedshiftDataParameters']);
            }
            if (data.hasOwnProperty('SageMakerPipelineParameters')) {
                obj['SageMakerPipelineParameters'] = UpdatePipeRequestTargetParametersSageMakerPipelineParameters.constructFromObject(data['SageMakerPipelineParameters']);
            }
            if (data.hasOwnProperty('SqsQueueParameters')) {
                obj['SqsQueueParameters'] = UpdatePipeRequestTargetParametersSqsQueueParameters.constructFromObject(data['SqsQueueParameters']);
            }
            if (data.hasOwnProperty('StepFunctionStateMachineParameters')) {
                obj['StepFunctionStateMachineParameters'] = UpdatePipeRequestTargetParametersStepFunctionStateMachineParameters.constructFromObject(data['StepFunctionStateMachineParameters']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdatePipeRequestTargetParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdatePipeRequestTargetParameters</code>.
     */
    static validateJSON(data) {
        // validate the optional field `BatchJobParameters`
        if (data['BatchJobParameters']) { // data not null
          UpdatePipeRequestTargetParametersBatchJobParameters.validateJSON(data['BatchJobParameters']);
        }
        // validate the optional field `CloudWatchLogsParameters`
        if (data['CloudWatchLogsParameters']) { // data not null
          UpdatePipeRequestTargetParametersCloudWatchLogsParameters.validateJSON(data['CloudWatchLogsParameters']);
        }
        // validate the optional field `EcsTaskParameters`
        if (data['EcsTaskParameters']) { // data not null
          UpdatePipeRequestTargetParametersEcsTaskParameters.validateJSON(data['EcsTaskParameters']);
        }
        // validate the optional field `EventBridgeEventBusParameters`
        if (data['EventBridgeEventBusParameters']) { // data not null
          UpdatePipeRequestTargetParametersEventBridgeEventBusParameters.validateJSON(data['EventBridgeEventBusParameters']);
        }
        // validate the optional field `HttpParameters`
        if (data['HttpParameters']) { // data not null
          UpdatePipeRequestTargetParametersHttpParameters.validateJSON(data['HttpParameters']);
        }
        // validate the optional field `InputTemplate`
        if (data['InputTemplate']) { // data not null
          String.validateJSON(data['InputTemplate']);
        }
        // validate the optional field `KinesisStreamParameters`
        if (data['KinesisStreamParameters']) { // data not null
          UpdatePipeRequestTargetParametersKinesisStreamParameters.validateJSON(data['KinesisStreamParameters']);
        }
        // validate the optional field `LambdaFunctionParameters`
        if (data['LambdaFunctionParameters']) { // data not null
          UpdatePipeRequestTargetParametersLambdaFunctionParameters.validateJSON(data['LambdaFunctionParameters']);
        }
        // validate the optional field `RedshiftDataParameters`
        if (data['RedshiftDataParameters']) { // data not null
          UpdatePipeRequestTargetParametersRedshiftDataParameters.validateJSON(data['RedshiftDataParameters']);
        }
        // validate the optional field `SageMakerPipelineParameters`
        if (data['SageMakerPipelineParameters']) { // data not null
          UpdatePipeRequestTargetParametersSageMakerPipelineParameters.validateJSON(data['SageMakerPipelineParameters']);
        }
        // validate the optional field `SqsQueueParameters`
        if (data['SqsQueueParameters']) { // data not null
          UpdatePipeRequestTargetParametersSqsQueueParameters.validateJSON(data['SqsQueueParameters']);
        }
        // validate the optional field `StepFunctionStateMachineParameters`
        if (data['StepFunctionStateMachineParameters']) { // data not null
          UpdatePipeRequestTargetParametersStepFunctionStateMachineParameters.validateJSON(data['StepFunctionStateMachineParameters']);
        }

        return true;
    }


}



/**
 * @member {module:model/UpdatePipeRequestTargetParametersBatchJobParameters} BatchJobParameters
 */
UpdatePipeRequestTargetParameters.prototype['BatchJobParameters'] = undefined;

/**
 * @member {module:model/UpdatePipeRequestTargetParametersCloudWatchLogsParameters} CloudWatchLogsParameters
 */
UpdatePipeRequestTargetParameters.prototype['CloudWatchLogsParameters'] = undefined;

/**
 * @member {module:model/UpdatePipeRequestTargetParametersEcsTaskParameters} EcsTaskParameters
 */
UpdatePipeRequestTargetParameters.prototype['EcsTaskParameters'] = undefined;

/**
 * @member {module:model/UpdatePipeRequestTargetParametersEventBridgeEventBusParameters} EventBridgeEventBusParameters
 */
UpdatePipeRequestTargetParameters.prototype['EventBridgeEventBusParameters'] = undefined;

/**
 * @member {module:model/UpdatePipeRequestTargetParametersHttpParameters} HttpParameters
 */
UpdatePipeRequestTargetParameters.prototype['HttpParameters'] = undefined;

/**
 * @member {String} InputTemplate
 */
UpdatePipeRequestTargetParameters.prototype['InputTemplate'] = undefined;

/**
 * @member {module:model/UpdatePipeRequestTargetParametersKinesisStreamParameters} KinesisStreamParameters
 */
UpdatePipeRequestTargetParameters.prototype['KinesisStreamParameters'] = undefined;

/**
 * @member {module:model/UpdatePipeRequestTargetParametersLambdaFunctionParameters} LambdaFunctionParameters
 */
UpdatePipeRequestTargetParameters.prototype['LambdaFunctionParameters'] = undefined;

/**
 * @member {module:model/UpdatePipeRequestTargetParametersRedshiftDataParameters} RedshiftDataParameters
 */
UpdatePipeRequestTargetParameters.prototype['RedshiftDataParameters'] = undefined;

/**
 * @member {module:model/UpdatePipeRequestTargetParametersSageMakerPipelineParameters} SageMakerPipelineParameters
 */
UpdatePipeRequestTargetParameters.prototype['SageMakerPipelineParameters'] = undefined;

/**
 * @member {module:model/UpdatePipeRequestTargetParametersSqsQueueParameters} SqsQueueParameters
 */
UpdatePipeRequestTargetParameters.prototype['SqsQueueParameters'] = undefined;

/**
 * @member {module:model/UpdatePipeRequestTargetParametersStepFunctionStateMachineParameters} StepFunctionStateMachineParameters
 */
UpdatePipeRequestTargetParameters.prototype['StepFunctionStateMachineParameters'] = undefined;






export default UpdatePipeRequestTargetParameters;

