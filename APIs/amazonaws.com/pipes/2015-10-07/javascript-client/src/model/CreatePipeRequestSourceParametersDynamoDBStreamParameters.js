/**
 * Amazon EventBridge Pipes
 * Amazon EventBridge Pipes connects event sources to targets. Pipes reduces the need for specialized knowledge and integration code when developing event driven architectures. This helps ensures consistency across your companyâ€™s applications. With Pipes, the target can be any available EventBridge target. To set up a pipe, you select the event source, add optional event filtering, define optional enrichment, and select the target for the event data. 
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DynamoDBStreamStartPosition from './DynamoDBStreamStartPosition';
import OnPartialBatchItemFailureStreams from './OnPartialBatchItemFailureStreams';
import PipeSourceDynamoDBStreamParameters from './PipeSourceDynamoDBStreamParameters';
import PipeSourceDynamoDBStreamParametersDeadLetterConfig from './PipeSourceDynamoDBStreamParametersDeadLetterConfig';

/**
 * The CreatePipeRequestSourceParametersDynamoDBStreamParameters model module.
 * @module model/CreatePipeRequestSourceParametersDynamoDBStreamParameters
 * @version 2015-10-07
 */
class CreatePipeRequestSourceParametersDynamoDBStreamParameters {
    /**
     * Constructs a new <code>CreatePipeRequestSourceParametersDynamoDBStreamParameters</code>.
     * @alias module:model/CreatePipeRequestSourceParametersDynamoDBStreamParameters
     * @implements module:model/PipeSourceDynamoDBStreamParameters
     * @param startingPosition {module:model/DynamoDBStreamStartPosition} 
     */
    constructor(startingPosition) { 
        PipeSourceDynamoDBStreamParameters.initialize(this, startingPosition);
        CreatePipeRequestSourceParametersDynamoDBStreamParameters.initialize(this, startingPosition);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, startingPosition) { 
        obj['StartingPosition'] = startingPosition;
    }

    /**
     * Constructs a <code>CreatePipeRequestSourceParametersDynamoDBStreamParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreatePipeRequestSourceParametersDynamoDBStreamParameters} obj Optional instance to populate.
     * @return {module:model/CreatePipeRequestSourceParametersDynamoDBStreamParameters} The populated <code>CreatePipeRequestSourceParametersDynamoDBStreamParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreatePipeRequestSourceParametersDynamoDBStreamParameters();
            PipeSourceDynamoDBStreamParameters.constructFromObject(data, obj);

            if (data.hasOwnProperty('BatchSize')) {
                obj['BatchSize'] = ApiClient.convertToType(data['BatchSize'], 'Number');
            }
            if (data.hasOwnProperty('DeadLetterConfig')) {
                obj['DeadLetterConfig'] = PipeSourceDynamoDBStreamParametersDeadLetterConfig.constructFromObject(data['DeadLetterConfig']);
            }
            if (data.hasOwnProperty('MaximumBatchingWindowInSeconds')) {
                obj['MaximumBatchingWindowInSeconds'] = ApiClient.convertToType(data['MaximumBatchingWindowInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('MaximumRecordAgeInSeconds')) {
                obj['MaximumRecordAgeInSeconds'] = ApiClient.convertToType(data['MaximumRecordAgeInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('MaximumRetryAttempts')) {
                obj['MaximumRetryAttempts'] = ApiClient.convertToType(data['MaximumRetryAttempts'], 'Number');
            }
            if (data.hasOwnProperty('OnPartialBatchItemFailure')) {
                obj['OnPartialBatchItemFailure'] = ApiClient.convertToType(data['OnPartialBatchItemFailure'], OnPartialBatchItemFailureStreams);
            }
            if (data.hasOwnProperty('ParallelizationFactor')) {
                obj['ParallelizationFactor'] = ApiClient.convertToType(data['ParallelizationFactor'], 'Number');
            }
            if (data.hasOwnProperty('StartingPosition')) {
                obj['StartingPosition'] = ApiClient.convertToType(data['StartingPosition'], DynamoDBStreamStartPosition);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreatePipeRequestSourceParametersDynamoDBStreamParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreatePipeRequestSourceParametersDynamoDBStreamParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreatePipeRequestSourceParametersDynamoDBStreamParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `BatchSize`
        if (data['BatchSize']) { // data not null
          Number.validateJSON(data['BatchSize']);
        }
        // validate the optional field `DeadLetterConfig`
        if (data['DeadLetterConfig']) { // data not null
          PipeSourceDynamoDBStreamParametersDeadLetterConfig.validateJSON(data['DeadLetterConfig']);
        }
        // validate the optional field `MaximumBatchingWindowInSeconds`
        if (data['MaximumBatchingWindowInSeconds']) { // data not null
          Number.validateJSON(data['MaximumBatchingWindowInSeconds']);
        }
        // validate the optional field `MaximumRecordAgeInSeconds`
        if (data['MaximumRecordAgeInSeconds']) { // data not null
          Number.validateJSON(data['MaximumRecordAgeInSeconds']);
        }
        // validate the optional field `MaximumRetryAttempts`
        if (data['MaximumRetryAttempts']) { // data not null
          Number.validateJSON(data['MaximumRetryAttempts']);
        }
        // validate the optional field `OnPartialBatchItemFailure`
        if (data['OnPartialBatchItemFailure']) { // data not null
          OnPartialBatchItemFailureStreams.validateJSON(data['OnPartialBatchItemFailure']);
        }
        // validate the optional field `ParallelizationFactor`
        if (data['ParallelizationFactor']) { // data not null
          Number.validateJSON(data['ParallelizationFactor']);
        }
        // validate the optional field `StartingPosition`
        if (data['StartingPosition']) { // data not null
          DynamoDBStreamStartPosition.validateJSON(data['StartingPosition']);
        }

        return true;
    }


}

CreatePipeRequestSourceParametersDynamoDBStreamParameters.RequiredProperties = ["StartingPosition"];

/**
 * @member {Number} BatchSize
 */
CreatePipeRequestSourceParametersDynamoDBStreamParameters.prototype['BatchSize'] = undefined;

/**
 * @member {module:model/PipeSourceDynamoDBStreamParametersDeadLetterConfig} DeadLetterConfig
 */
CreatePipeRequestSourceParametersDynamoDBStreamParameters.prototype['DeadLetterConfig'] = undefined;

/**
 * @member {Number} MaximumBatchingWindowInSeconds
 */
CreatePipeRequestSourceParametersDynamoDBStreamParameters.prototype['MaximumBatchingWindowInSeconds'] = undefined;

/**
 * @member {Number} MaximumRecordAgeInSeconds
 */
CreatePipeRequestSourceParametersDynamoDBStreamParameters.prototype['MaximumRecordAgeInSeconds'] = undefined;

/**
 * @member {Number} MaximumRetryAttempts
 */
CreatePipeRequestSourceParametersDynamoDBStreamParameters.prototype['MaximumRetryAttempts'] = undefined;

/**
 * @member {module:model/OnPartialBatchItemFailureStreams} OnPartialBatchItemFailure
 */
CreatePipeRequestSourceParametersDynamoDBStreamParameters.prototype['OnPartialBatchItemFailure'] = undefined;

/**
 * @member {Number} ParallelizationFactor
 */
CreatePipeRequestSourceParametersDynamoDBStreamParameters.prototype['ParallelizationFactor'] = undefined;

/**
 * @member {module:model/DynamoDBStreamStartPosition} StartingPosition
 */
CreatePipeRequestSourceParametersDynamoDBStreamParameters.prototype['StartingPosition'] = undefined;


// Implement PipeSourceDynamoDBStreamParameters interface:
/**
 * @member {Number} BatchSize
 */
PipeSourceDynamoDBStreamParameters.prototype['BatchSize'] = undefined;
/**
 * @member {module:model/PipeSourceDynamoDBStreamParametersDeadLetterConfig} DeadLetterConfig
 */
PipeSourceDynamoDBStreamParameters.prototype['DeadLetterConfig'] = undefined;
/**
 * @member {Number} MaximumBatchingWindowInSeconds
 */
PipeSourceDynamoDBStreamParameters.prototype['MaximumBatchingWindowInSeconds'] = undefined;
/**
 * @member {Number} MaximumRecordAgeInSeconds
 */
PipeSourceDynamoDBStreamParameters.prototype['MaximumRecordAgeInSeconds'] = undefined;
/**
 * @member {Number} MaximumRetryAttempts
 */
PipeSourceDynamoDBStreamParameters.prototype['MaximumRetryAttempts'] = undefined;
/**
 * @member {module:model/OnPartialBatchItemFailureStreams} OnPartialBatchItemFailure
 */
PipeSourceDynamoDBStreamParameters.prototype['OnPartialBatchItemFailure'] = undefined;
/**
 * @member {Number} ParallelizationFactor
 */
PipeSourceDynamoDBStreamParameters.prototype['ParallelizationFactor'] = undefined;
/**
 * @member {module:model/DynamoDBStreamStartPosition} StartingPosition
 */
PipeSourceDynamoDBStreamParameters.prototype['StartingPosition'] = undefined;




export default CreatePipeRequestSourceParametersDynamoDBStreamParameters;

