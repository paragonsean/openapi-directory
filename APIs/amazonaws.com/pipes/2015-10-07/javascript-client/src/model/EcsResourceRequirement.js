/**
 * Amazon EventBridge Pipes
 * Amazon EventBridge Pipes connects event sources to targets. Pipes reduces the need for specialized knowledge and integration code when developing event driven architectures. This helps ensures consistency across your companyâ€™s applications. With Pipes, the target can be any available EventBridge target. To set up a pipe, you select the event source, add optional event filtering, define optional enrichment, and select the target for the event data. 
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EcsResourceRequirementType from './EcsResourceRequirementType';

/**
 * The EcsResourceRequirement model module.
 * @module model/EcsResourceRequirement
 * @version 2015-10-07
 */
class EcsResourceRequirement {
    /**
     * Constructs a new <code>EcsResourceRequirement</code>.
     * The type and amount of a resource to assign to a container. The supported resource types are GPUs and Elastic Inference accelerators. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-gpu.html\&quot;&gt;Working with GPUs on Amazon ECS&lt;/a&gt; or &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-inference.html\&quot;&gt;Working with Amazon Elastic Inference on Amazon ECS&lt;/a&gt; in the &lt;i&gt;Amazon Elastic Container Service Developer Guide&lt;/i&gt; 
     * @alias module:model/EcsResourceRequirement
     * @param type {module:model/EcsResourceRequirementType} 
     * @param value {String} 
     */
    constructor(type, value) { 
        
        EcsResourceRequirement.initialize(this, type, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, value) { 
        obj['type'] = type;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>EcsResourceRequirement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EcsResourceRequirement} obj Optional instance to populate.
     * @return {module:model/EcsResourceRequirement} The populated <code>EcsResourceRequirement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EcsResourceRequirement();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], EcsResourceRequirementType);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EcsResourceRequirement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EcsResourceRequirement</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EcsResourceRequirement.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          EcsResourceRequirementType.validateJSON(data['type']);
        }
        // validate the optional field `value`
        if (data['value']) { // data not null
          String.validateJSON(data['value']);
        }

        return true;
    }


}

EcsResourceRequirement.RequiredProperties = ["type", "value"];

/**
 * @member {module:model/EcsResourceRequirementType} type
 */
EcsResourceRequirement.prototype['type'] = undefined;

/**
 * @member {String} value
 */
EcsResourceRequirement.prototype['value'] = undefined;






export default EcsResourceRequirement;

