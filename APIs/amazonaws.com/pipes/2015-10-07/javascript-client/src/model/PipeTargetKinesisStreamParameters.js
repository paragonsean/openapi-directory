/**
 * Amazon EventBridge Pipes
 * Amazon EventBridge Pipes connects event sources to targets. Pipes reduces the need for specialized knowledge and integration code when developing event driven architectures. This helps ensures consistency across your companyâ€™s applications. With Pipes, the target can be any available EventBridge target. To set up a pipe, you select the event source, add optional event filtering, define optional enrichment, and select the target for the event data. 
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PipeTargetKinesisStreamParameters model module.
 * @module model/PipeTargetKinesisStreamParameters
 * @version 2015-10-07
 */
class PipeTargetKinesisStreamParameters {
    /**
     * Constructs a new <code>PipeTargetKinesisStreamParameters</code>.
     * The parameters for using a Kinesis stream as a source.
     * @alias module:model/PipeTargetKinesisStreamParameters
     * @param partitionKey {String} 
     */
    constructor(partitionKey) { 
        
        PipeTargetKinesisStreamParameters.initialize(this, partitionKey);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, partitionKey) { 
        obj['PartitionKey'] = partitionKey;
    }

    /**
     * Constructs a <code>PipeTargetKinesisStreamParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PipeTargetKinesisStreamParameters} obj Optional instance to populate.
     * @return {module:model/PipeTargetKinesisStreamParameters} The populated <code>PipeTargetKinesisStreamParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PipeTargetKinesisStreamParameters();

            if (data.hasOwnProperty('PartitionKey')) {
                obj['PartitionKey'] = ApiClient.convertToType(data['PartitionKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PipeTargetKinesisStreamParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PipeTargetKinesisStreamParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PipeTargetKinesisStreamParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `PartitionKey`
        if (data['PartitionKey']) { // data not null
          String.validateJSON(data['PartitionKey']);
        }

        return true;
    }


}

PipeTargetKinesisStreamParameters.RequiredProperties = ["PartitionKey"];

/**
 * @member {String} PartitionKey
 */
PipeTargetKinesisStreamParameters.prototype['PartitionKey'] = undefined;






export default PipeTargetKinesisStreamParameters;

