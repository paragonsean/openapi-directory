/**
 * Amazon EventBridge Pipes
 * Amazon EventBridge Pipes connects event sources to targets. Pipes reduces the need for specialized knowledge and integration code when developing event driven architectures. This helps ensures consistency across your companyâ€™s applications. With Pipes, the target can be any available EventBridge target. To set up a pipe, you select the event source, add optional event filtering, define optional enrichment, and select the target for the event data. 
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PipeTargetHttpParameters model module.
 * @module model/PipeTargetHttpParameters
 * @version 2015-10-07
 */
class PipeTargetHttpParameters {
    /**
     * Constructs a new <code>PipeTargetHttpParameters</code>.
     * These are custom parameter to be used when the target is an API Gateway REST APIs or EventBridge ApiDestinations.
     * @alias module:model/PipeTargetHttpParameters
     */
    constructor() { 
        
        PipeTargetHttpParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PipeTargetHttpParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PipeTargetHttpParameters} obj Optional instance to populate.
     * @return {module:model/PipeTargetHttpParameters} The populated <code>PipeTargetHttpParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PipeTargetHttpParameters();

            if (data.hasOwnProperty('HeaderParameters')) {
                obj['HeaderParameters'] = ApiClient.convertToType(data['HeaderParameters'], Object);
            }
            if (data.hasOwnProperty('PathParameterValues')) {
                obj['PathParameterValues'] = ApiClient.convertToType(data['PathParameterValues'], Array);
            }
            if (data.hasOwnProperty('QueryStringParameters')) {
                obj['QueryStringParameters'] = ApiClient.convertToType(data['QueryStringParameters'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PipeTargetHttpParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PipeTargetHttpParameters</code>.
     */
    static validateJSON(data) {
        // validate the optional field `HeaderParameters`
        if (data['HeaderParameters']) { // data not null
          Object.validateJSON(data['HeaderParameters']);
        }
        // validate the optional field `PathParameterValues`
        if (data['PathParameterValues']) { // data not null
          Array.validateJSON(data['PathParameterValues']);
        }
        // validate the optional field `QueryStringParameters`
        if (data['QueryStringParameters']) { // data not null
          Object.validateJSON(data['QueryStringParameters']);
        }

        return true;
    }


}



/**
 * @member {Object} HeaderParameters
 */
PipeTargetHttpParameters.prototype['HeaderParameters'] = undefined;

/**
 * @member {Array} PathParameterValues
 */
PipeTargetHttpParameters.prototype['PathParameterValues'] = undefined;

/**
 * @member {Object} QueryStringParameters
 */
PipeTargetHttpParameters.prototype['QueryStringParameters'] = undefined;






export default PipeTargetHttpParameters;

