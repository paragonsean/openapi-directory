openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "Amazon EventBridge Pipes connects event sources to targets. Pipes\
    \ reduces the need for specialized knowledge and integration code when developing\
    \ event driven architectures. This helps ensures consistency across your companyâ€™\
    s applications. With Pipes, the target can be any available EventBridge target.\
    \ To set up a pipe, you select the event source, add optional event filtering,\
    \ define optional enrichment, and select the target for the event data. "
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon EventBridge Pipes
  version: 2015-10-07
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: pipes
  x-aws-signingName: pipes
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/pipes-2015-10-07.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/pipes/
servers:
- description: The Amazon EventBridge Pipes multi-region endpoint
  url: "http://pipes.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon EventBridge Pipes multi-region endpoint
  url: "https://pipes.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon EventBridge Pipes endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://pipes.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon EventBridge Pipes endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://pipes.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /v1/pipes/{Name}:
    delete:
      description: "Delete an existing pipe. For more information about pipes, see\
        \ <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes.html\"\
        >Amazon EventBridge Pipes</a> in the Amazon EventBridge User Guide."
      operationId: DeletePipe
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the pipe.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[\\.\\-_A-Za-z0-9]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePipeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-accepts:
      - application/json
    get:
      description: "Get the information about an existing pipe. For more information\
        \ about pipes, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes.html\"\
        >Amazon EventBridge Pipes</a> in the Amazon EventBridge User Guide."
      operationId: DescribePipe
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the pipe.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[\\.\\-_A-Za-z0-9]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePipeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-accepts:
      - application/json
    post:
      description: Create a pipe. Amazon EventBridge Pipes connect event sources to
        targets and reduces the need for specialized knowledge and integration code.
      operationId: CreatePipe
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the pipe.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[\\.\\-_A-Za-z0-9]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePipe_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePipeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: "<p>Update an existing pipe. When you call <code>UpdatePipe</code>,\
        \ only the fields that are included in the request are changed, the rest are\
        \ unchanged. The exception to this is if you modify any Amazon Web Services-service\
        \ specific fields in the <code>SourceParameters</code>, <code>EnrichmentParameters</code>,\
        \ or <code>TargetParameters</code> objects. The fields in these objects are\
        \ updated atomically as one and override existing values. This is by design\
        \ and means that if you don't specify an optional field in one of these Parameters\
        \ objects, that field will be set to its system-default value after the update.</p>\
        \ <p>For more information about pipes, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes.html\"\
        > Amazon EventBridge Pipes</a> in the Amazon EventBridge User Guide.</p>"
      operationId: UpdatePipe
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the pipe.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[\\.\\-_A-Za-z0-9]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePipe_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePipeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/pipes:
    get:
      description: "Get the pipes associated with this account. For more information\
        \ about pipes, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes.html\"\
        >Amazon EventBridge Pipes</a> in the Amazon EventBridge User Guide."
      operationId: ListPipes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The state the pipe is in.
        explode: true
        in: query
        name: CurrentState
        required: false
        schema:
          enum:
          - RUNNING
          - STOPPED
          - CREATING
          - UPDATING
          - DELETING
          - STARTING
          - STOPPING
          - CREATE_FAILED
          - UPDATE_FAILED
          - START_FAILED
          - STOP_FAILED
          type: string
        style: form
      - description: The state the pipe should be in.
        explode: true
        in: query
        name: DesiredState
        required: false
        schema:
          enum:
          - RUNNING
          - STOPPED
          type: string
        style: form
      - description: The maximum number of pipes to include in the response.
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "A value that will return a subset of the pipes associated with\
          \ this account. For example, <code>\"NamePrefix\": \"ABC\"</code> will return\
          \ all endpoints with \"ABC\" in the name."
        explode: true
        in: query
        name: NamePrefix
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[\\.\\-_A-Za-z0-9]+$"
          type: string
        style: form
      - description: "If <code>nextToken</code> is returned, there are more results\
          \ available. The value of <code>nextToken</code> is a unique pagination\
          \ token for each page. Make the call again using the returned token to retrieve\
          \ the next page. Keep all other arguments unchanged. Each pagination token\
          \ expires after 24 hours. Using an expired pagination token will return\
          \ an HTTP 400 InvalidToken error."
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          format: password
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: The prefix matching the pipe source.
        explode: true
        in: query
        name: SourcePrefix
        required: false
        schema:
          maxLength: 1600
          minLength: 1
          type: string
        style: form
      - description: The prefix matching the pipe target.
        explode: true
        in: query
        name: TargetPrefix
        required: false
        schema:
          maxLength: 1600
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    get:
      description: Displays the tags associated with a pipe.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the pipe for which you want to view tags.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 1
          pattern: "^arn:aws([a-z]|\\-)*:([a-zA-Z0-9\\-]+):([a-z]|\\d|\\-)*:([0-9]{12})?:(.+)$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-accepts:
      - application/json
    post:
      description: "<p>Assigns one or more tags (key-value pairs) to the specified\
        \ pipe. Tags can help you organize and categorize your resources. You can\
        \ also use them to scope user permissions by granting a user permission to\
        \ access or change only resources with certain tag values.</p> <p>Tags don't\
        \ have any semantic meaning to Amazon Web Services and are interpreted strictly\
        \ as strings of characters.</p> <p>You can use the <code>TagResource</code>\
        \ action with a pipe that already has tags. If you specify a new tag key,\
        \ this tag is appended to the list of tags associated with the pipe. If you\
        \ specify a tag key that is already associated with the pipe, the new tag\
        \ value that you specify replaces the previous value for that tag.</p> <p>You\
        \ can associate as many as 50 tags with a pipe.</p>"
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the pipe.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 1
          pattern: "^arn:aws([a-z]|\\-)*:([a-zA-Z0-9\\-]+):([a-z]|\\d|\\-)*:([0-9]{12})?:(.+)$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/pipes/{Name}/start:
    post:
      description: Start an existing pipe.
      operationId: StartPipe
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the pipe.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[\\.\\-_A-Za-z0-9]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartPipeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-accepts:
      - application/json
  /v1/pipes/{Name}/stop:
    post:
      description: Stop an existing pipe.
      operationId: StopPipe
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the pipe.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[\\.\\-_A-Za-z0-9]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopPipeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-accepts:
      - application/json
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Removes one or more tags from the specified pipes.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the pipe.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 1
          pattern: "^arn:aws([a-z]|\\-)*:([a-zA-Z0-9\\-]+):([a-z]|\\d|\\-)*:([0-9]{12})?:(.+)$"
          type: string
        style: simple
      - description: The list of tag keys to remove from the pipe.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 0
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreatePipeResponse:
      example:
        DesiredState: ""
        CurrentState: ""
        CreationTime: ""
        LastModifiedTime: ""
        Arn: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/PipeArn'
          - description: The ARN of the pipe.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the pipe was created.
        CurrentState:
          allOf:
          - $ref: '#/components/schemas/PipeState'
          - description: The state the pipe is in.
        DesiredState:
          allOf:
          - $ref: '#/components/schemas/RequestedPipeState'
          - description: The state the pipe should be in.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "When the pipe was last updated, in <a href=\"https://www.w3.org/TR/NOTE-datetime\"\
              >ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD)."
        Name:
          allOf:
          - $ref: '#/components/schemas/PipeName'
          - description: The name of the pipe.
      type: object
    PipeEnrichmentHttpParameters:
      description: "These are custom parameter to be used when the target is an API\
        \ Gateway REST APIs or EventBridge ApiDestinations. In the latter case, these\
        \ are merged with any InvocationParameters specified on the Connection, with\
        \ any values from the Connection taking precedence."
      properties:
        HeaderParameters:
          allOf:
          - $ref: '#/components/schemas/HeaderParametersMap'
          - description: The headers that need to be sent as part of request invoking
              the API Gateway REST API or EventBridge ApiDestination.
        PathParameterValues:
          allOf:
          - $ref: '#/components/schemas/PathParameterList'
          - description: The path parameter values to be used to populate API Gateway
              REST API or EventBridge ApiDestination path wildcards ("*").
        QueryStringParameters:
          allOf:
          - $ref: '#/components/schemas/QueryStringParametersMap'
          - description: The query string keys/values that need to be sent as part
              of request invoking the API Gateway REST API or EventBridge ApiDestination.
      type: object
    InputTemplate:
      format: password
      maxLength: 8192
      minLength: 0
      type: string
    PipeSourceActiveMQBrokerParameters:
      description: The parameters for using an Active MQ broker as a source.
      properties:
        BatchSize:
          allOf:
          - $ref: '#/components/schemas/LimitMax10000'
          - description: The maximum number of records to include in each batch.
        Credentials:
          $ref: '#/components/schemas/PipeSourceActiveMQBrokerParameters_Credentials'
        MaximumBatchingWindowInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumBatchingWindowInSeconds'
          - description: The maximum length of a time to wait for events.
        QueueName:
          allOf:
          - $ref: '#/components/schemas/MQBrokerQueueName'
          - description: The name of the destination queue to consume.
      required:
      - Credentials
      - QueueName
      type: object
    PipeSourceDynamoDBStreamParameters:
      description: The parameters for using a DynamoDB stream as a source.
      properties:
        BatchSize:
          allOf:
          - $ref: '#/components/schemas/LimitMax10000'
          - description: The maximum number of records to include in each batch.
        DeadLetterConfig:
          $ref: '#/components/schemas/PipeSourceDynamoDBStreamParameters_DeadLetterConfig'
        MaximumBatchingWindowInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumBatchingWindowInSeconds'
          - description: The maximum length of a time to wait for events.
        MaximumRecordAgeInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumRecordAgeInSeconds'
          - description: "(Streams only) Discard records older than the specified\
              \ age. The default value is -1, which sets the maximum age to infinite.\
              \ When the value is set to infinite, EventBridge never discards old\
              \ records. "
        MaximumRetryAttempts:
          allOf:
          - $ref: '#/components/schemas/MaximumRetryAttemptsESM'
          - description: "(Streams only) Discard records after the specified number\
              \ of retries. The default value is -1, which sets the maximum number\
              \ of retries to infinite. When MaximumRetryAttempts is infinite, EventBridge\
              \ retries failed records until the record expires in the event source."
        OnPartialBatchItemFailure:
          allOf:
          - $ref: '#/components/schemas/OnPartialBatchItemFailureStreams'
          - description: (Streams only) Define how to handle item process failures.
              <code>AUTOMATIC_BISECT</code> halves each batch and retry each half
              until all the records are processed or there is one failed message left
              in the batch.
        ParallelizationFactor:
          allOf:
          - $ref: '#/components/schemas/LimitMax10'
          - description: (Streams only) The number of batches to process concurrently
              from each shard. The default value is 1.
        StartingPosition:
          allOf:
          - $ref: '#/components/schemas/DynamoDBStreamStartPosition'
          - description: (Streams only) The position in a stream from which to start
              reading.
      required:
      - StartingPosition
      type: object
    FilterCriteria:
      description: "The collection of event patterns used to filter events. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html\"\
        >Events and Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>."
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: The event patterns.
      type: object
    PipeSourceKinesisStreamParameters:
      description: The parameters for using a Kinesis stream as a source.
      properties:
        BatchSize:
          allOf:
          - $ref: '#/components/schemas/LimitMax10000'
          - description: The maximum number of records to include in each batch.
        DeadLetterConfig:
          $ref: '#/components/schemas/PipeSourceDynamoDBStreamParameters_DeadLetterConfig'
        MaximumBatchingWindowInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumBatchingWindowInSeconds'
          - description: The maximum length of a time to wait for events.
        MaximumRecordAgeInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumRecordAgeInSeconds'
          - description: "(Streams only) Discard records older than the specified\
              \ age. The default value is -1, which sets the maximum age to infinite.\
              \ When the value is set to infinite, EventBridge never discards old\
              \ records. "
        MaximumRetryAttempts:
          allOf:
          - $ref: '#/components/schemas/MaximumRetryAttemptsESM'
          - description: "(Streams only) Discard records after the specified number\
              \ of retries. The default value is -1, which sets the maximum number\
              \ of retries to infinite. When MaximumRetryAttempts is infinite, EventBridge\
              \ retries failed records until the record expires in the event source."
        OnPartialBatchItemFailure:
          allOf:
          - $ref: '#/components/schemas/OnPartialBatchItemFailureStreams'
          - description: (Streams only) Define how to handle item process failures.
              <code>AUTOMATIC_BISECT</code> halves each batch and retry each half
              until all the records are processed or there is one failed message left
              in the batch.
        ParallelizationFactor:
          allOf:
          - $ref: '#/components/schemas/LimitMax10'
          - description: (Streams only) The number of batches to process concurrently
              from each shard. The default value is 1.
        StartingPosition:
          allOf:
          - $ref: '#/components/schemas/KinesisStreamStartPosition'
          - description: (Streams only) The position in a stream from which to start
              reading.
        StartingPositionTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "With <code>StartingPosition</code> set to <code>AT_TIMESTAMP</code>,\
              \ the time from which to start reading, in Unix time seconds."
      required:
      - StartingPosition
      type: object
    PipeSourceManagedStreamingKafkaParameters:
      description: The parameters for using an MSK stream as a source.
      properties:
        BatchSize:
          allOf:
          - $ref: '#/components/schemas/LimitMax10000'
          - description: The maximum number of records to include in each batch.
        ConsumerGroupID:
          allOf:
          - $ref: '#/components/schemas/URI'
          - description: The name of the destination queue to consume.
        Credentials:
          $ref: '#/components/schemas/PipeSourceManagedStreamingKafkaParameters_Credentials'
        MaximumBatchingWindowInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumBatchingWindowInSeconds'
          - description: The maximum length of a time to wait for events.
        StartingPosition:
          allOf:
          - $ref: '#/components/schemas/MSKStartPosition'
          - description: (Streams only) The position in a stream from which to start
              reading.
        TopicName:
          allOf:
          - $ref: '#/components/schemas/KafkaTopicName'
          - description: The name of the topic that the pipe will read from.
      required:
      - TopicName
      type: object
    PipeSourceRabbitMQBrokerParameters:
      description: The parameters for using a Rabbit MQ broker as a source.
      properties:
        BatchSize:
          allOf:
          - $ref: '#/components/schemas/LimitMax10000'
          - description: The maximum number of records to include in each batch.
        Credentials:
          $ref: '#/components/schemas/PipeSourceActiveMQBrokerParameters_Credentials'
        MaximumBatchingWindowInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumBatchingWindowInSeconds'
          - description: The maximum length of a time to wait for events.
        QueueName:
          allOf:
          - $ref: '#/components/schemas/MQBrokerQueueName'
          - description: The name of the destination queue to consume.
        VirtualHost:
          allOf:
          - $ref: '#/components/schemas/URI'
          - description: The name of the virtual host associated with the source broker.
      required:
      - Credentials
      - QueueName
      type: object
    PipeSourceSelfManagedKafkaParameters:
      description: The parameters for using a self-managed Apache Kafka stream as
        a source.
      properties:
        AdditionalBootstrapServers:
          allOf:
          - $ref: '#/components/schemas/KafkaBootstrapServers'
          - description: An array of server URLs.
        BatchSize:
          allOf:
          - $ref: '#/components/schemas/LimitMax10000'
          - description: The maximum number of records to include in each batch.
        ConsumerGroupID:
          allOf:
          - $ref: '#/components/schemas/URI'
          - description: The name of the destination queue to consume.
        Credentials:
          $ref: '#/components/schemas/PipeSourceSelfManagedKafkaParameters_Credentials'
        MaximumBatchingWindowInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumBatchingWindowInSeconds'
          - description: The maximum length of a time to wait for events.
        ServerRootCaCertificate:
          allOf:
          - $ref: '#/components/schemas/SecretManagerArn'
          - description: The ARN of the Secrets Manager secret used for certification.
        StartingPosition:
          allOf:
          - $ref: '#/components/schemas/SelfManagedKafkaStartPosition'
          - description: (Streams only) The position in a stream from which to start
              reading.
        TopicName:
          allOf:
          - $ref: '#/components/schemas/KafkaTopicName'
          - description: The name of the topic that the pipe will read from.
        Vpc:
          $ref: '#/components/schemas/PipeSourceSelfManagedKafkaParameters_Vpc'
      required:
      - TopicName
      type: object
    PipeSourceSqsQueueParameters:
      description: The parameters for using a Amazon SQS stream as a source.
      properties:
        BatchSize:
          allOf:
          - $ref: '#/components/schemas/LimitMax10000'
          - description: The maximum number of records to include in each batch.
        MaximumBatchingWindowInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumBatchingWindowInSeconds'
          - description: The maximum length of a time to wait for events.
      type: object
    TagValue:
      format: password
      maxLength: 256
      minLength: 0
      type: string
    PipeTargetBatchJobParameters:
      description: The parameters for using an Batch job as a target.
      properties:
        ArrayProperties:
          $ref: '#/components/schemas/PipeTargetBatchJobParameters_ArrayProperties'
        ContainerOverrides:
          $ref: '#/components/schemas/PipeTargetBatchJobParameters_ContainerOverrides'
        DependsOn:
          allOf:
          - $ref: '#/components/schemas/BatchDependsOn'
          - description: "A list of dependencies for the job. A job can depend upon\
              \ a maximum of 20 jobs. You can specify a <code>SEQUENTIAL</code> type\
              \ dependency without specifying a job ID for array jobs so that each\
              \ child array job completes sequentially, starting at index 0. You can\
              \ also specify an <code>N_TO_N</code> type dependency with a job ID\
              \ for array jobs. In that case, each index child of this job must wait\
              \ for the corresponding index child of each dependency to complete before\
              \ it can begin."
        JobDefinition:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The job definition used by this job. This value can be one\
              \ of <code>name</code>, <code>name:revision</code>, or the Amazon Resource\
              \ Name (ARN) for the job definition. If name is specified without a\
              \ revision then the latest active revision is used."
        JobName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of the job. It can be up to 128 letters long. The\
              \ first character must be alphanumeric, can contain uppercase and lowercase\
              \ letters, numbers, hyphens (-), and underscores (_)."
        Parameters:
          allOf:
          - $ref: '#/components/schemas/BatchParametersMap'
          - description: Additional parameters passed to the job that replace parameter
              substitution placeholders that are set in the job definition. Parameters
              are specified as a key and value pair mapping. Parameters included here
              override any corresponding parameter defaults from the job definition.
        RetryStrategy:
          $ref: '#/components/schemas/PipeTargetBatchJobParameters_RetryStrategy'
      required:
      - JobDefinition
      - JobName
      type: object
    PipeTargetCloudWatchLogsParameters:
      description: The parameters for using an CloudWatch Logs log stream as a target.
      properties:
        LogStreamName:
          allOf:
          - $ref: '#/components/schemas/LogStreamName'
          - description: The name of the log stream.
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/JsonPath'
          - description: "The time the event occurred, expressed as the number of\
              \ milliseconds after Jan 1, 1970 00:00:00 UTC."
      type: object
    PipeTargetEcsTaskParameters:
      description: The parameters for using an Amazon ECS task as a target.
      properties:
        CapacityProviderStrategy:
          allOf:
          - $ref: '#/components/schemas/CapacityProviderStrategy'
          - description: "<p>The capacity provider strategy to use for the task.</p>\
              \ <p>If a <code>capacityProviderStrategy</code> is specified, the <code>launchType</code>\
              \ parameter must be omitted. If no <code>capacityProviderStrategy</code>\
              \ or launchType is specified, the <code>defaultCapacityProviderStrategy</code>\
              \ for the cluster is used. </p>"
        EnableECSManagedTags:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Specifies whether to enable Amazon ECS managed tags for\
              \ the task. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html\"\
              >Tagging Your Amazon ECS Resources</a> in the Amazon Elastic Container\
              \ Service Developer Guide. "
        EnableExecuteCommand:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Whether or not to enable the execute command functionality\
              \ for the containers in this task. If true, this enables execute command\
              \ functionality on all containers in the task."
        Group:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies an Amazon ECS task group for the task. The maximum
              length is 255 characters.
        LaunchType:
          allOf:
          - $ref: '#/components/schemas/LaunchType'
          - description: "Specifies the launch type on which your task is running.\
              \ The launch type that you specify here must match one of the launch\
              \ type (compatibilities) of the target task. The <code>FARGATE</code>\
              \ value is supported only in the Regions where Fargate with Amazon ECS\
              \ is supported. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS-Fargate.html\"\
              >Fargate on Amazon ECS</a> in the <i>Amazon Elastic Container Service\
              \ Developer Guide</i>."
        NetworkConfiguration:
          $ref: '#/components/schemas/PipeTargetEcsTaskParameters_NetworkConfiguration'
        Overrides:
          $ref: '#/components/schemas/PipeTargetEcsTaskParameters_Overrides'
        PlacementConstraints:
          allOf:
          - $ref: '#/components/schemas/PlacementConstraints'
          - description: An array of placement constraint objects to use for the task.
              You can specify up to 10 constraints per task (including constraints
              in the task definition and those specified at runtime).
        PlacementStrategy:
          allOf:
          - $ref: '#/components/schemas/PlacementStrategies'
          - description: 'The placement strategy objects to use for the task. You
              can specify a maximum of five strategy rules per task. '
        PlatformVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the platform version for the task. Specify\
              \ only the numeric portion of the platform version, such as <code>1.1.0</code>.</p>\
              \ <p>This structure is used only if <code>LaunchType</code> is <code>FARGATE</code>.\
              \ For more information about valid platform versions, see <a href=\"\
              https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html\"\
              >Fargate Platform Versions</a> in the <i>Amazon Elastic Container Service\
              \ Developer Guide</i>.</p>"
        PropagateTags:
          allOf:
          - $ref: '#/components/schemas/PropagateTags'
          - description: "Specifies whether to propagate the tags from the task definition\
              \ to the task. If no value is specified, the tags are not propagated.\
              \ Tags can only be propagated to the task during task creation. To add\
              \ tags to a task after task creation, use the <code>TagResource</code>\
              \ API action. "
        ReferenceId:
          allOf:
          - $ref: '#/components/schemas/ReferenceId'
          - description: The reference ID to use for the task.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "The metadata that you apply to the task to help you categorize\
              \ and organize them. Each tag consists of a key and an optional value,\
              \ both of which you define. To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html#ECS-RunTask-request-tags\"\
              >RunTask</a> in the Amazon ECS API Reference."
        TaskCount:
          allOf:
          - $ref: '#/components/schemas/LimitMin1'
          - description: The number of tasks to create based on <code>TaskDefinition</code>.
              The default is 1.
        TaskDefinitionArn:
          allOf:
          - $ref: '#/components/schemas/ArnOrJsonPath'
          - description: 'The ARN of the task definition to use if the event target
              is an Amazon ECS task. '
      required:
      - TaskDefinitionArn
      type: object
    PipeTargetEventBridgeEventBusParameters:
      description: The parameters for using an EventBridge event bus as a target.
      properties:
        DetailType:
          allOf:
          - $ref: '#/components/schemas/EventBridgeDetailType'
          - description: "A free-form string, with a maximum of 128 characters, used\
              \ to decide what fields to expect in the event detail."
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/EventBridgeEndpointId'
          - description: "<p>The URL subdomain of the endpoint. For example, if the\
              \ URL for Endpoint is https://abcde.veo.endpoints.event.amazonaws.com,\
              \ then the EndpointId is <code>abcde.veo</code>.</p> <important> <p>When\
              \ using Java, you must include <code>auth-crt</code> on the class path.</p>\
              \ </important>"
        Resources:
          allOf:
          - $ref: '#/components/schemas/EventBridgeEventResourceList'
          - description: "Amazon Web Services resources, identified by Amazon Resource\
              \ Name (ARN), which the event primarily concerns. Any number, including\
              \ zero, may be present."
        Source:
          allOf:
          - $ref: '#/components/schemas/EventBridgeEventSource'
          - description: The source of the event.
        Time:
          allOf:
          - $ref: '#/components/schemas/JsonPath'
          - description: "The time stamp of the event, per <a href=\"https://www.rfc-editor.org/rfc/rfc3339.txt\"\
              >RFC3339</a>. If no time stamp is provided, the time stamp of the <a\
              \ href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEvents.html\"\
              >PutEvents</a> call is used."
      type: object
    PipeTargetHttpParameters:
      description: These are custom parameter to be used when the target is an API
        Gateway REST APIs or EventBridge ApiDestinations.
      properties:
        HeaderParameters:
          allOf:
          - $ref: '#/components/schemas/HeaderParametersMap'
          - description: The headers that need to be sent as part of request invoking
              the API Gateway REST API or EventBridge ApiDestination.
        PathParameterValues:
          allOf:
          - $ref: '#/components/schemas/PathParameterList'
          - description: The path parameter values to be used to populate API Gateway
              REST API or EventBridge ApiDestination path wildcards ("*").
        QueryStringParameters:
          allOf:
          - $ref: '#/components/schemas/QueryStringParametersMap'
          - description: The query string keys/values that need to be sent as part
              of request invoking the API Gateway REST API or EventBridge ApiDestination.
      type: object
    PipeTargetKinesisStreamParameters:
      description: The parameters for using a Kinesis stream as a source.
      properties:
        PartitionKey:
          allOf:
          - $ref: '#/components/schemas/KinesisPartitionKey'
          - description: "Determines which shard in the stream the data record is\
              \ assigned to. Partition keys are Unicode strings with a maximum length\
              \ limit of 256 characters for each key. Amazon Kinesis Data Streams\
              \ uses the partition key as input to a hash function that maps the partition\
              \ key and associated data to a specific shard. Specifically, an MD5\
              \ hash function is used to map partition keys to 128-bit integer values\
              \ and to map associated data records to shards. As a result of this\
              \ hashing mechanism, all data records with the same partition key map\
              \ to the same shard within the stream."
      required:
      - PartitionKey
      type: object
    PipeTargetLambdaFunctionParameters:
      description: The parameters for using a Lambda function as a target.
      properties:
        InvocationType:
          allOf:
          - $ref: '#/components/schemas/PipeTargetInvocationType'
          - description: <p>Choose from the following options.</p> <ul> <li> <p> <code>RequestResponse</code>
              (default) - Invoke the function synchronously. Keep the connection open
              until the function returns a response or times out. The API response
              includes the function response and additional data.</p> </li> <li> <p>
              <code>Event</code> - Invoke the function asynchronously. Send events
              that fail multiple times to the function's dead-letter queue (if it's
              configured). The API response only includes a status code.</p> </li>
              <li> <p> <code>DryRun</code> - Validate parameter values and verify
              that the user or role has permission to invoke the function.</p> </li>
              </ul>
      type: object
    PipeTargetRedshiftDataParameters:
      description: These are custom parameters to be used when the target is a Amazon
        Redshift cluster to invoke the Amazon Redshift Data API ExecuteStatement.
      properties:
        Database:
          allOf:
          - $ref: '#/components/schemas/Database'
          - description: The name of the database. Required when authenticating using
              temporary credentials.
        DbUser:
          allOf:
          - $ref: '#/components/schemas/DbUser'
          - description: The database user name. Required when authenticating using
              temporary credentials.
        SecretManagerArn:
          allOf:
          - $ref: '#/components/schemas/SecretManagerArnOrJsonPath'
          - description: The name or ARN of the secret that enables access to the
              database. Required when authenticating using SageMaker.
        Sqls:
          allOf:
          - $ref: '#/components/schemas/Sqls'
          - description: The SQL statement text to run.
        StatementName:
          allOf:
          - $ref: '#/components/schemas/StatementName'
          - description: The name of the SQL statement. You can name the SQL statement
              when you create it to identify the query.
        WithEvent:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether to send an event back to EventBridge after
              the SQL statement runs.
      required:
      - Database
      - Sqls
      type: object
    PipeTargetSageMakerPipelineParameters:
      description: The parameters for using a SageMaker pipeline as a target.
      properties:
        PipelineParameterList:
          allOf:
          - $ref: '#/components/schemas/SageMakerPipelineParameterList'
          - description: List of Parameter names and values for SageMaker Model Building
              Pipeline execution.
      type: object
    PipeTargetSqsQueueParameters:
      description: The parameters for using a Amazon SQS stream as a source.
      properties:
        MessageDeduplicationId:
          allOf:
          - $ref: '#/components/schemas/MessageDeduplicationId'
          - description: <p>This parameter applies only to FIFO (first-in-first-out)
              queues.</p> <p>The token used for deduplication of sent messages.</p>
        MessageGroupId:
          allOf:
          - $ref: '#/components/schemas/MessageGroupId'
          - description: The FIFO message group ID to use as the target.
      type: object
    PipeTargetStateMachineParameters:
      description: The parameters for using a Step Functions state machine as a target.
      properties:
        InvocationType:
          allOf:
          - $ref: '#/components/schemas/PipeTargetInvocationType'
          - description: Specify whether to wait for the state machine to finish or
              not.
      type: object
    InternalException: {}
    ValidationException: {}
    ThrottlingException: {}
    NotFoundException: {}
    ConflictException: {}
    ServiceQuotaExceededException: {}
    DeletePipeResponse:
      example:
        DesiredState: ""
        CurrentState: ""
        CreationTime: ""
        LastModifiedTime: ""
        Arn: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/PipeArn'
          - description: The ARN of the pipe.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the pipe was created.
        CurrentState:
          allOf:
          - $ref: '#/components/schemas/PipeState'
          - description: The state the pipe is in.
        DesiredState:
          allOf:
          - $ref: '#/components/schemas/RequestedPipeStateDescribeResponse'
          - description: The state the pipe should be in.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "When the pipe was last updated, in <a href=\"https://www.w3.org/TR/NOTE-datetime\"\
              >ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD)."
        Name:
          allOf:
          - $ref: '#/components/schemas/PipeName'
          - description: The name of the pipe.
      type: object
    DescribePipeResponse:
      example:
        Enrichment: ""
        Description: ""
        TargetParameters:
          HttpParameters:
            PathParameterValues: ""
            HeaderParameters: ""
            QueryStringParameters: ""
          StepFunctionStateMachineParameters:
            InvocationType: ""
          SqsQueueParameters:
            MessageGroupId: ""
            MessageDeduplicationId: ""
          CloudWatchLogsParameters:
            LogStreamName: ""
            Timestamp: ""
          KinesisStreamParameters:
            PartitionKey: ""
          InputTemplate: ""
          SageMakerPipelineParameters:
            PipelineParameterList: ""
          EventBridgeEventBusParameters:
            DetailType: ""
            EndpointId: ""
            Time: ""
            Resources: ""
            Source: ""
          BatchJobParameters:
            DependsOn: ""
            Parameters: ""
            ArrayProperties:
              Size: ""
            JobName: ""
            RetryStrategy:
              Attempts: ""
            ContainerOverrides:
              Command: ""
              Environment: ""
              InstanceType: ""
              ResourceRequirements: ""
            JobDefinition: ""
          EcsTaskParameters:
            PlatformVersion: ""
            Group: ""
            EnableECSManagedTags: ""
            EnableExecuteCommand: ""
            PlacementConstraints: ""
            PropagateTags: ""
            TaskCount: ""
            PlacementStrategy: ""
            CapacityProviderStrategy: ""
            LaunchType: ""
            ReferenceId: ""
            Overrides:
              ExecutionRoleArn: ""
              TaskRoleArn: ""
              Memory: ""
              Cpu: ""
              InferenceAcceleratorOverrides: ""
              EphemeralStorage:
                sizeInGiB: ""
              ContainerOverrides: ""
            NetworkConfiguration:
              awsvpcConfiguration:
                SecurityGroups: ""
                Subnets: ""
                AssignPublicIp: ""
            Tags: ""
            TaskDefinitionArn: ""
          LambdaFunctionParameters:
            InvocationType: ""
          RedshiftDataParameters:
            StatementName: ""
            Sqls: ""
            Database: ""
            SecretManagerArn: ""
            DbUser: ""
            WithEvent: ""
        EnrichmentParameters:
          HttpParameters:
            PathParameterValues: ""
            HeaderParameters: ""
            QueryStringParameters: ""
          InputTemplate: ""
        RoleArn: ""
        Source: ""
        Name: ""
        Target: ""
        DesiredState: ""
        StateReason: ""
        CurrentState: ""
        CreationTime: ""
        LastModifiedTime: ""
        Arn: ""
        SourceParameters:
          ManagedStreamingKafkaParameters:
            StartingPosition: ""
            BatchSize: ""
            ConsumerGroupID: ""
            Credentials:
              ClientCertificateTlsAuth: ""
              SaslScram512Auth: ""
            MaximumBatchingWindowInSeconds: ""
            TopicName: ""
          DynamoDBStreamParameters:
            StartingPosition: ""
            BatchSize: ""
            MaximumRetryAttempts: ""
            OnPartialBatchItemFailure: ""
            DeadLetterConfig:
              Arn: ""
            ParallelizationFactor: ""
            MaximumRecordAgeInSeconds: ""
            MaximumBatchingWindowInSeconds: ""
          SelfManagedKafkaParameters:
            StartingPosition: ""
            BatchSize: ""
            ConsumerGroupID: ""
            AdditionalBootstrapServers: ""
            Vpc:
              Subnets: ""
              SecurityGroup: ""
            Credentials:
              BasicAuth: ""
              SaslScram256Auth: ""
              ClientCertificateTlsAuth: ""
              SaslScram512Auth: ""
            ServerRootCaCertificate: ""
            MaximumBatchingWindowInSeconds: ""
            TopicName: ""
          RabbitMQBrokerParameters:
            BatchSize: ""
            VirtualHost: ""
            QueueName: ""
            Credentials:
              BasicAuth: ""
            MaximumBatchingWindowInSeconds: ""
          SqsQueueParameters:
            BatchSize: ""
            MaximumBatchingWindowInSeconds: ""
          KinesisStreamParameters:
            StartingPosition: ""
            BatchSize: ""
            MaximumRetryAttempts: ""
            OnPartialBatchItemFailure: ""
            DeadLetterConfig:
              Arn: ""
            ParallelizationFactor: ""
            MaximumRecordAgeInSeconds: ""
            StartingPositionTimestamp: ""
            MaximumBatchingWindowInSeconds: ""
          FilterCriteria:
            Filters: ""
          ActiveMQBrokerParameters:
            BatchSize: ""
            QueueName: ""
            Credentials:
              BasicAuth: ""
            MaximumBatchingWindowInSeconds: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/PipeArn'
          - description: The ARN of the pipe.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the pipe was created.
        CurrentState:
          allOf:
          - $ref: '#/components/schemas/PipeState'
          - description: The state the pipe is in.
        Description:
          allOf:
          - $ref: '#/components/schemas/PipeDescription'
          - description: A description of the pipe.
        DesiredState:
          allOf:
          - $ref: '#/components/schemas/RequestedPipeStateDescribeResponse'
          - description: The state the pipe should be in.
        Enrichment:
          allOf:
          - $ref: '#/components/schemas/OptionalArn'
          - description: The ARN of the enrichment resource.
        EnrichmentParameters:
          $ref: '#/components/schemas/DescribePipeResponse_EnrichmentParameters'
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "When the pipe was last updated, in <a href=\"https://www.w3.org/TR/NOTE-datetime\"\
              >ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD)."
        Name:
          allOf:
          - $ref: '#/components/schemas/PipeName'
          - description: The name of the pipe.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the role that allows the pipe to send data to
              the target.
        Source:
          allOf:
          - $ref: '#/components/schemas/ArnOrUrl'
          - description: The ARN of the source resource.
        SourceParameters:
          $ref: '#/components/schemas/DescribePipeResponse_SourceParameters'
        StateReason:
          allOf:
          - $ref: '#/components/schemas/PipeStateReason'
          - description: The reason the pipe is in its current state.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of key-value pairs to associate with the pipe.
        Target:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the target resource.
        TargetParameters:
          $ref: '#/components/schemas/DescribePipeResponse_TargetParameters'
      type: object
    ListPipesResponse:
      example:
        NextToken: ""
        Pipes: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If <code>nextToken</code> is returned, there are more results\
              \ available. The value of <code>nextToken</code> is a unique pagination\
              \ token for each page. Make the call again using the returned token\
              \ to retrieve the next page. Keep all other arguments unchanged. Each\
              \ pagination token expires after 24 hours. Using an expired pagination\
              \ token will return an HTTP 400 InvalidToken error."
        Pipes:
          allOf:
          - $ref: '#/components/schemas/PipeList'
          - description: The pipes returned by the call.
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of key-value pairs to associate with the pipe.
      type: object
    StartPipeResponse:
      example:
        DesiredState: ""
        CurrentState: ""
        CreationTime: ""
        LastModifiedTime: ""
        Arn: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/PipeArn'
          - description: The ARN of the pipe.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the pipe was created.
        CurrentState:
          allOf:
          - $ref: '#/components/schemas/PipeState'
          - description: The state the pipe is in.
        DesiredState:
          allOf:
          - $ref: '#/components/schemas/RequestedPipeState'
          - description: The state the pipe should be in.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "When the pipe was last updated, in <a href=\"https://www.w3.org/TR/NOTE-datetime\"\
              >ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD)."
        Name:
          allOf:
          - $ref: '#/components/schemas/PipeName'
          - description: The name of the pipe.
      type: object
    StopPipeResponse:
      example:
        DesiredState: ""
        CurrentState: ""
        CreationTime: ""
        LastModifiedTime: ""
        Arn: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/PipeArn'
          - description: The ARN of the pipe.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the pipe was created.
        CurrentState:
          allOf:
          - $ref: '#/components/schemas/PipeState'
          - description: The state the pipe is in.
        DesiredState:
          allOf:
          - $ref: '#/components/schemas/RequestedPipeState'
          - description: The state the pipe should be in.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "When the pipe was last updated, in <a href=\"https://www.w3.org/TR/NOTE-datetime\"\
              >ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD)."
        Name:
          allOf:
          - $ref: '#/components/schemas/PipeName'
          - description: The name of the pipe.
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      type: string
    UpdatePipeResponse:
      example:
        DesiredState: ""
        CurrentState: ""
        CreationTime: ""
        LastModifiedTime: ""
        Arn: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/PipeArn'
          - description: The ARN of the pipe.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the pipe was created.
        CurrentState:
          allOf:
          - $ref: '#/components/schemas/PipeState'
          - description: The state the pipe is in.
        DesiredState:
          allOf:
          - $ref: '#/components/schemas/RequestedPipeState'
          - description: The state the pipe should be in.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "When the pipe was last updated, in <a href=\"https://www.w3.org/TR/NOTE-datetime\"\
              >ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD)."
        Name:
          allOf:
          - $ref: '#/components/schemas/PipeName'
          - description: The name of the pipe.
      type: object
    UpdatePipeSourceActiveMQBrokerParameters:
      description: The parameters for using an Active MQ broker as a source.
      properties:
        BatchSize:
          allOf:
          - $ref: '#/components/schemas/LimitMax10000'
          - description: The maximum number of records to include in each batch.
        Credentials:
          $ref: '#/components/schemas/PipeSourceActiveMQBrokerParameters_Credentials'
        MaximumBatchingWindowInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumBatchingWindowInSeconds'
          - description: The maximum length of a time to wait for events.
      required:
      - Credentials
      type: object
    UpdatePipeSourceDynamoDBStreamParameters:
      description: The parameters for using a DynamoDB stream as a source.
      properties:
        BatchSize:
          allOf:
          - $ref: '#/components/schemas/LimitMax10000'
          - description: The maximum number of records to include in each batch.
        DeadLetterConfig:
          $ref: '#/components/schemas/PipeSourceDynamoDBStreamParameters_DeadLetterConfig'
        MaximumBatchingWindowInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumBatchingWindowInSeconds'
          - description: The maximum length of a time to wait for events.
        MaximumRecordAgeInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumRecordAgeInSeconds'
          - description: "(Streams only) Discard records older than the specified\
              \ age. The default value is -1, which sets the maximum age to infinite.\
              \ When the value is set to infinite, EventBridge never discards old\
              \ records. "
        MaximumRetryAttempts:
          allOf:
          - $ref: '#/components/schemas/MaximumRetryAttemptsESM'
          - description: "(Streams only) Discard records after the specified number\
              \ of retries. The default value is -1, which sets the maximum number\
              \ of retries to infinite. When MaximumRetryAttempts is infinite, EventBridge\
              \ retries failed records until the record expires in the event source."
        OnPartialBatchItemFailure:
          allOf:
          - $ref: '#/components/schemas/OnPartialBatchItemFailureStreams'
          - description: (Streams only) Define how to handle item process failures.
              <code>AUTOMATIC_BISECT</code> halves each batch and retry each half
              until all the records are processed or there is one failed message left
              in the batch.
        ParallelizationFactor:
          allOf:
          - $ref: '#/components/schemas/LimitMax10'
          - description: (Streams only) The number of batches to process concurrently
              from each shard. The default value is 1.
      type: object
    UpdatePipeSourceKinesisStreamParameters:
      description: The parameters for using a Kinesis stream as a source.
      properties:
        BatchSize:
          allOf:
          - $ref: '#/components/schemas/LimitMax10000'
          - description: The maximum number of records to include in each batch.
        DeadLetterConfig:
          $ref: '#/components/schemas/PipeSourceDynamoDBStreamParameters_DeadLetterConfig'
        MaximumBatchingWindowInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumBatchingWindowInSeconds'
          - description: The maximum length of a time to wait for events.
        MaximumRecordAgeInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumRecordAgeInSeconds'
          - description: "(Streams only) Discard records older than the specified\
              \ age. The default value is -1, which sets the maximum age to infinite.\
              \ When the value is set to infinite, EventBridge never discards old\
              \ records. "
        MaximumRetryAttempts:
          allOf:
          - $ref: '#/components/schemas/MaximumRetryAttemptsESM'
          - description: "(Streams only) Discard records after the specified number\
              \ of retries. The default value is -1, which sets the maximum number\
              \ of retries to infinite. When MaximumRetryAttempts is infinite, EventBridge\
              \ retries failed records until the record expires in the event source."
        OnPartialBatchItemFailure:
          allOf:
          - $ref: '#/components/schemas/OnPartialBatchItemFailureStreams'
          - description: (Streams only) Define how to handle item process failures.
              <code>AUTOMATIC_BISECT</code> halves each batch and retry each half
              until all the records are processed or there is one failed message left
              in the batch.
        ParallelizationFactor:
          allOf:
          - $ref: '#/components/schemas/LimitMax10'
          - description: (Streams only) The number of batches to process concurrently
              from each shard. The default value is 1.
      type: object
    UpdatePipeSourceManagedStreamingKafkaParameters:
      description: The parameters for using an MSK stream as a source.
      properties:
        BatchSize:
          allOf:
          - $ref: '#/components/schemas/LimitMax10000'
          - description: The maximum number of records to include in each batch.
        Credentials:
          $ref: '#/components/schemas/PipeSourceManagedStreamingKafkaParameters_Credentials'
        MaximumBatchingWindowInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumBatchingWindowInSeconds'
          - description: The maximum length of a time to wait for events.
      type: object
    UpdatePipeSourceRabbitMQBrokerParameters:
      description: The parameters for using a Rabbit MQ broker as a source.
      properties:
        BatchSize:
          allOf:
          - $ref: '#/components/schemas/LimitMax10000'
          - description: The maximum number of records to include in each batch.
        Credentials:
          $ref: '#/components/schemas/PipeSourceActiveMQBrokerParameters_Credentials'
        MaximumBatchingWindowInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumBatchingWindowInSeconds'
          - description: The maximum length of a time to wait for events.
      required:
      - Credentials
      type: object
    UpdatePipeSourceSelfManagedKafkaParameters:
      description: The parameters for using a self-managed Apache Kafka stream as
        a source.
      properties:
        BatchSize:
          allOf:
          - $ref: '#/components/schemas/LimitMax10000'
          - description: The maximum number of records to include in each batch.
        Credentials:
          $ref: '#/components/schemas/PipeSourceSelfManagedKafkaParameters_Credentials'
        MaximumBatchingWindowInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumBatchingWindowInSeconds'
          - description: The maximum length of a time to wait for events.
        ServerRootCaCertificate:
          allOf:
          - $ref: '#/components/schemas/SecretManagerArn'
          - description: The ARN of the Secrets Manager secret used for certification.
        Vpc:
          $ref: '#/components/schemas/PipeSourceSelfManagedKafkaParameters_Vpc'
      type: object
    UpdatePipeSourceSqsQueueParameters:
      description: The parameters for using a Amazon SQS stream as a source.
      properties:
        BatchSize:
          allOf:
          - $ref: '#/components/schemas/LimitMax10000'
          - description: The maximum number of records to include in each batch.
        MaximumBatchingWindowInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumBatchingWindowInSeconds'
          - description: The maximum length of a time to wait for events.
      type: object
    Arn:
      maxLength: 1600
      minLength: 1
      pattern: "^arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-]+):([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\\
        d{1})?:(\\d{12})?:(.+)$"
      type: string
    ArnOrJsonPath:
      maxLength: 1600
      minLength: 1
      pattern: "^arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-]+):([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\\
        d{1})?:(\\d{12})?:(.+)|(\\$(\\.[\\w/_-]+(\\[(\\d+|\\*)\\])*)*)$"
      type: string
    ArnOrUrl:
      maxLength: 1600
      minLength: 1
      pattern: "^smk://(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\\
        -]*[A-Za-z0-9]):[0-9]{1,5}|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-]+):([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\\
        d{1})?:(\\d{12})?:(.+)$"
      type: string
    AssignPublicIp:
      enum:
      - ENABLED
      - DISABLED
      type: string
    SecurityGroups:
      items:
        $ref: '#/components/schemas/SecurityGroup'
      maxItems: 5
      minItems: 0
      type: array
    Subnets:
      items:
        $ref: '#/components/schemas/Subnet'
      maxItems: 16
      minItems: 0
      type: array
    AwsVpcConfiguration:
      description: "This structure specifies the VPC subnets and security groups for\
        \ the task, and whether a public IP address is to be used. This structure\
        \ is relevant only for ECS tasks that use the <code>awsvpc</code> network\
        \ mode."
      properties:
        AssignPublicIp:
          allOf:
          - $ref: '#/components/schemas/AssignPublicIp'
          - description: Specifies whether the task's elastic network interface receives
              a public IP address. You can specify <code>ENABLED</code> only when
              <code>LaunchType</code> in <code>EcsParameters</code> is set to <code>FARGATE</code>.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroups'
          - description: "Specifies the security groups associated with the task.\
              \ These security groups must all be in the same VPC. You can specify\
              \ as many as five security groups. If you do not specify a security\
              \ group, the default security group for the VPC is used."
        Subnets:
          allOf:
          - $ref: '#/components/schemas/Subnets'
          - description: Specifies the subnets associated with the task. These subnets
              must all be in the same VPC. You can specify as many as 16 subnets.
      required:
      - Subnets
      type: object
    BatchArraySize:
      maximum: 10000
      minimum: 2
      type: integer
    BatchArrayProperties:
      description: "The array properties for the submitted job, such as the size of\
        \ the array. The array size can be between 2 and 10,000. If you specify array\
        \ properties for a job, it becomes an array job. This parameter is used only\
        \ if the target is an Batch job."
      properties:
        Size:
          allOf:
          - $ref: '#/components/schemas/BatchArraySize'
          - description: "The size of the array, if this is an array batch job."
      type: object
    StringList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    BatchEnvironmentVariableList:
      items:
        $ref: '#/components/schemas/BatchEnvironmentVariable'
      type: array
    String:
      type: string
    BatchResourceRequirementsList:
      items:
        $ref: '#/components/schemas/BatchResourceRequirement'
      type: array
    BatchContainerOverrides:
      description: The overrides that are sent to a container.
      properties:
        Command:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The command to send to the container that overrides the default
              command from the Docker image or the task definition.
        Environment:
          allOf:
          - $ref: '#/components/schemas/BatchEnvironmentVariableList'
          - description: "<p>The environment variables to send to the container. You\
              \ can add new environment variables, which are added to the container\
              \ at launch, or you can override the existing environment variables\
              \ from the Docker image or the task definition.</p> <note> <p>Environment\
              \ variables cannot start with \"<code>Batch</code>\". This naming convention\
              \ is reserved for variables that Batch sets.</p> </note>"
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The instance type to use for a multi-node parallel job.</p>\
              \ <note> <p>This parameter isn't applicable to single-node container\
              \ jobs or jobs that run on Fargate resources, and shouldn't be provided.</p>\
              \ </note>"
        ResourceRequirements:
          allOf:
          - $ref: '#/components/schemas/BatchResourceRequirementsList'
          - description: "The type and amount of resources to assign to a container.\
              \ This overrides the settings in the job definition. The supported resources\
              \ include <code>GPU</code>, <code>MEMORY</code>, and <code>VCPU</code>."
      type: object
    BatchJobDependency:
      description: An object that represents an Batch job dependency.
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The job ID of the Batch job that's associated with this dependency.
        Type:
          allOf:
          - $ref: '#/components/schemas/BatchJobDependencyType'
          - description: The type of the job dependency.
      type: object
    BatchDependsOn:
      items:
        $ref: '#/components/schemas/BatchJobDependency'
      maxItems: 20
      minItems: 0
      type: array
    BatchEnvironmentVariable:
      description: "<p>The environment variables to send to the container. You can\
        \ add new environment variables, which are added to the container at launch,\
        \ or you can override the existing environment variables from the Docker image\
        \ or the task definition.</p> <note> <p>Environment variables cannot start\
        \ with \"<code>Batch</code>\". This naming convention is reserved for variables\
        \ that Batch sets.</p> </note>"
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of the key-value pair. For environment variables,\
              \ this is the name of the environment variable."
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The value of the key-value pair. For environment variables,\
              \ this is the value of the environment variable."
      type: object
    BatchJobDependencyType:
      enum:
      - N_TO_N
      - SEQUENTIAL
      type: string
    BatchParametersMap:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    BatchResourceRequirementType:
      enum:
      - GPU
      - MEMORY
      - VCPU
      type: string
    BatchResourceRequirement:
      description: "The type and amount of a resource to assign to a container. The\
        \ supported resources include <code>GPU</code>, <code>MEMORY</code>, and <code>VCPU</code>."
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/BatchResourceRequirementType'
          - description: "The type of resource to assign to a container. The supported\
              \ resources include <code>GPU</code>, <code>MEMORY</code>, and <code>VCPU</code>."
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The quantity of the specified resource to reserve for\
              \ the container. The values vary based on the <code>type</code> specified.</p>\
              \ <dl> <dt>type=\"GPU\"</dt> <dd> <p>The number of physical GPUs to\
              \ reserve for the container. Make sure that the number of GPUs reserved\
              \ for all containers in a job doesn't exceed the number of available\
              \ GPUs on the compute resource that the job is launched on.</p> <note>\
              \ <p>GPUs aren't available for jobs that are running on Fargate resources.</p>\
              \ </note> </dd> <dt>type=\"MEMORY\"</dt> <dd> <p>The memory hard limit\
              \ (in MiB) present to the container. This parameter is supported for\
              \ jobs that are running on EC2 resources. If your container attempts\
              \ to exceed the memory specified, the container is terminated. This\
              \ parameter maps to <code>Memory</code> in the <a href=\"https://docs.docker.com/engine/api/v1.23/#create-a-container\"\
              > Create a container</a> section of the <a href=\"https://docs.docker.com/engine/api/v1.23/\"\
              >Docker Remote API</a> and the <code>--memory</code> option to <a href=\"\
              https://docs.docker.com/engine/reference/run/\">docker run</a>. You\
              \ must specify at least 4 MiB of memory for a job. This is required\
              \ but can be specified in several places for multi-node parallel (MNP)\
              \ jobs. It must be specified for each node at least once. This parameter\
              \ maps to <code>Memory</code> in the <a href=\"https://docs.docker.com/engine/api/v1.23/#create-a-container\"\
              > Create a container</a> section of the <a href=\"https://docs.docker.com/engine/api/v1.23/\"\
              >Docker Remote API</a> and the <code>--memory</code> option to <a href=\"\
              https://docs.docker.com/engine/reference/run/\">docker run</a>.</p>\
              \ <note> <p>If you're trying to maximize your resource utilization by\
              \ providing your jobs as much memory as possible for a particular instance\
              \ type, see <a href=\"https://docs.aws.amazon.com/batch/latest/userguide/memory-management.html\"\
              >Memory management</a> in the <i>Batch User Guide</i>.</p> </note> <p>For\
              \ jobs that are running on Fargate resources, then <code>value</code>\
              \ is the hard limit (in MiB), and must match one of the supported values\
              \ and the <code>VCPU</code> values must be one of the values supported\
              \ for that memory value.</p> <dl> <dt>value = 512</dt> <dd> <p> <code>VCPU</code>\
              \ = 0.25</p> </dd> <dt>value = 1024</dt> <dd> <p> <code>VCPU</code>\
              \ = 0.25 or 0.5</p> </dd> <dt>value = 2048</dt> <dd> <p> <code>VCPU</code>\
              \ = 0.25, 0.5, or 1</p> </dd> <dt>value = 3072</dt> <dd> <p> <code>VCPU</code>\
              \ = 0.5, or 1</p> </dd> <dt>value = 4096</dt> <dd> <p> <code>VCPU</code>\
              \ = 0.5, 1, or 2</p> </dd> <dt>value = 5120, 6144, or 7168</dt> <dd>\
              \ <p> <code>VCPU</code> = 1 or 2</p> </dd> <dt>value = 8192</dt> <dd>\
              \ <p> <code>VCPU</code> = 1, 2, 4, or 8</p> </dd> <dt>value = 9216,\
              \ 10240, 11264, 12288, 13312, 14336, or 15360</dt> <dd> <p> <code>VCPU</code>\
              \ = 2 or 4</p> </dd> <dt>value = 16384</dt> <dd> <p> <code>VCPU</code>\
              \ = 2, 4, or 8</p> </dd> <dt>value = 17408, 18432, 19456, 21504, 22528,\
              \ 23552, 25600, 26624, 27648, 29696, or 30720</dt> <dd> <p> <code>VCPU</code>\
              \ = 4</p> </dd> <dt>value = 20480, 24576, or 28672</dt> <dd> <p> <code>VCPU</code>\
              \ = 4 or 8</p> </dd> <dt>value = 36864, 45056, 53248, or 61440</dt>\
              \ <dd> <p> <code>VCPU</code> = 8</p> </dd> <dt>value = 32768, 40960,\
              \ 49152, or 57344</dt> <dd> <p> <code>VCPU</code> = 8 or 16</p> </dd>\
              \ <dt>value = 65536, 73728, 81920, 90112, 98304, 106496, 114688, or\
              \ 122880</dt> <dd> <p> <code>VCPU</code> = 16</p> </dd> </dl> </dd>\
              \ <dt>type=\"VCPU\"</dt> <dd> <p>The number of vCPUs reserved for the\
              \ container. This parameter maps to <code>CpuShares</code> in the <a\
              \ href=\"https://docs.docker.com/engine/api/v1.23/#create-a-container\"\
              > Create a container</a> section of the <a href=\"https://docs.docker.com/engine/api/v1.23/\"\
              >Docker Remote API</a> and the <code>--cpu-shares</code> option to <a\
              \ href=\"https://docs.docker.com/engine/reference/run/\">docker run</a>.\
              \ Each vCPU is equivalent to 1,024 CPU shares. For EC2 resources, you\
              \ must specify at least one vCPU. This is required but can be specified\
              \ in several places; it must be specified for each node at least once.</p>\
              \ <p>The default for the Fargate On-Demand vCPU resource count quota\
              \ is 6 vCPUs. For more information about Fargate quotas, see <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/ecs-service.html#service-quotas-fargate\"\
              >Fargate quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>\
              \ <p>For jobs that are running on Fargate resources, then <code>value</code>\
              \ must match one of the supported values and the <code>MEMORY</code>\
              \ values must be one of the values supported for that <code>VCPU</code>\
              \ value. The supported values are 0.25, 0.5, 1, 2, 4, 8, and 16</p>\
              \ <dl> <dt>value = 0.25</dt> <dd> <p> <code>MEMORY</code> = 512, 1024,\
              \ or 2048</p> </dd> <dt>value = 0.5</dt> <dd> <p> <code>MEMORY</code>\
              \ = 1024, 2048, 3072, or 4096</p> </dd> <dt>value = 1</dt> <dd> <p>\
              \ <code>MEMORY</code> = 2048, 3072, 4096, 5120, 6144, 7168, or 8192</p>\
              \ </dd> <dt>value = 2</dt> <dd> <p> <code>MEMORY</code> = 4096, 5120,\
              \ 6144, 7168, 8192, 9216, 10240, 11264, 12288, 13312, 14336, 15360,\
              \ or 16384</p> </dd> <dt>value = 4</dt> <dd> <p> <code>MEMORY</code>\
              \ = 8192, 9216, 10240, 11264, 12288, 13312, 14336, 15360, 16384, 17408,\
              \ 18432, 19456, 20480, 21504, 22528, 23552, 24576, 25600, 26624, 27648,\
              \ 28672, 29696, or 30720</p> </dd> <dt>value = 8</dt> <dd> <p> <code>MEMORY</code>\
              \ = 16384, 20480, 24576, 28672, 32768, 36864, 40960, 45056, 49152, 53248,\
              \ 57344, or 61440 </p> </dd> <dt>value = 16</dt> <dd> <p> <code>MEMORY</code>\
              \ = 32768, 40960, 49152, 57344, 65536, 73728, 81920, 90112, 98304, 106496,\
              \ 114688, or 122880 </p> </dd> </dl> </dd> </dl>"
      required:
      - Type
      - Value
      type: object
    BatchRetryAttempts:
      maximum: 10
      minimum: 1
      type: integer
    BatchRetryStrategy:
      description: "The retry strategy that's associated with a job. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/batch/latest/userguide/job_retries.html\"\
        > Automated job retries</a> in the <i>Batch User Guide</i>."
      properties:
        Attempts:
          allOf:
          - $ref: '#/components/schemas/BatchRetryAttempts'
          - description: "The number of times to move a job to the <code>RUNNABLE</code>\
              \ status. If the value of <code>attempts</code> is greater than one,\
              \ the job is retried on failure the same number of attempts as the value."
      type: object
    Boolean:
      type: boolean
    CapacityProvider:
      format: password
      maxLength: 255
      minLength: 1
      type: string
    CapacityProviderStrategyItem:
      description: "The details of a capacity provider strategy. To learn more, see\
        \ <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CapacityProviderStrategyItem.html\"\
        >CapacityProviderStrategyItem</a> in the Amazon ECS API Reference."
      properties:
        base:
          allOf:
          - $ref: '#/components/schemas/CapacityProviderStrategyItemBase'
          - description: "The base value designates how many tasks, at a minimum,\
              \ to run on the specified capacity provider. Only one capacity provider\
              \ in a capacity provider strategy can have a base defined. If no value\
              \ is specified, the default value of 0 is used. "
        capacityProvider:
          allOf:
          - $ref: '#/components/schemas/CapacityProvider'
          - description: The short name of the capacity provider.
        weight:
          allOf:
          - $ref: '#/components/schemas/CapacityProviderStrategyItemWeight'
          - description: "The weight value designates the relative percentage of the\
              \ total number of tasks launched that should use the specified capacity\
              \ provider. The weight value is taken into consideration after the base\
              \ value, if defined, is satisfied."
      required:
      - capacityProvider
      type: object
    CapacityProviderStrategy:
      items:
        $ref: '#/components/schemas/CapacityProviderStrategyItem'
      maxItems: 6
      minItems: 0
      type: array
    CapacityProviderStrategyItemBase:
      maximum: 100000
      minimum: 0
      type: integer
    CapacityProviderStrategyItemWeight:
      maximum: 1000
      minimum: 0
      type: integer
    PipeDescription:
      format: password
      maxLength: 512
      minLength: 0
      pattern: ^.*$
      type: string
    RequestedPipeState:
      enum:
      - RUNNING
      - STOPPED
      type: string
    OptionalArn:
      maxLength: 1600
      minLength: 0
      pattern: "^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-]+):([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\\
        d{1})?:(\\d{12})?:(.+)$"
      type: string
    PipeEnrichmentParameters:
      description: The parameters required to set up enrichment on your pipe.
      properties:
        HttpParameters:
          $ref: '#/components/schemas/UpdatePipe_request_EnrichmentParameters_HttpParameters'
        InputTemplate:
          allOf:
          - $ref: '#/components/schemas/InputTemplate'
          - description: "Valid JSON text passed to the enrichment. In this case,\
              \ nothing from the event itself is passed to the enrichment. For more\
              \ information, see <a href=\"http://www.rfc-editor.org/rfc/rfc7159.txt\"\
              >The JavaScript Object Notation (JSON) Data Interchange Format</a>."
      type: object
    PipeName:
      maxLength: 64
      minLength: 1
      pattern: "^[\\.\\-_A-Za-z0-9]+$"
      type: string
    RoleArn:
      maxLength: 1600
      minLength: 1
      pattern: "^arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z0-9+=,.@\\-_/]+$"
      type: string
    PipeSourceParameters:
      description: The parameters required to set up a source for your pipe.
      properties:
        ActiveMQBrokerParameters:
          $ref: '#/components/schemas/CreatePipe_request_SourceParameters_ActiveMQBrokerParameters'
        DynamoDBStreamParameters:
          $ref: '#/components/schemas/CreatePipe_request_SourceParameters_DynamoDBStreamParameters'
        FilterCriteria:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_FilterCriteria'
        KinesisStreamParameters:
          $ref: '#/components/schemas/CreatePipe_request_SourceParameters_KinesisStreamParameters'
        ManagedStreamingKafkaParameters:
          $ref: '#/components/schemas/CreatePipe_request_SourceParameters_ManagedStreamingKafkaParameters'
        RabbitMQBrokerParameters:
          $ref: '#/components/schemas/CreatePipe_request_SourceParameters_RabbitMQBrokerParameters'
        SelfManagedKafkaParameters:
          $ref: '#/components/schemas/CreatePipe_request_SourceParameters_SelfManagedKafkaParameters'
        SqsQueueParameters:
          $ref: '#/components/schemas/CreatePipe_request_SourceParameters_SqsQueueParameters'
      type: object
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 1
      type: object
    PipeTargetParameters:
      description: The parameters required to set up a target for your pipe.
      properties:
        BatchJobParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_BatchJobParameters'
        CloudWatchLogsParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_CloudWatchLogsParameters'
        EcsTaskParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_EcsTaskParameters'
        EventBridgeEventBusParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_EventBridgeEventBusParameters'
        HttpParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_HttpParameters'
        InputTemplate:
          allOf:
          - $ref: '#/components/schemas/InputTemplate'
          - description: "Valid JSON text passed to the target. In this case, nothing\
              \ from the event itself is passed to the target. For more information,\
              \ see <a href=\"http://www.rfc-editor.org/rfc/rfc7159.txt\">The JavaScript\
              \ Object Notation (JSON) Data Interchange Format</a>."
        KinesisStreamParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_KinesisStreamParameters'
        LambdaFunctionParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_LambdaFunctionParameters'
        RedshiftDataParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_RedshiftDataParameters'
        SageMakerPipelineParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_SageMakerPipelineParameters'
        SqsQueueParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_SqsQueueParameters'
        StepFunctionStateMachineParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_StepFunctionStateMachineParameters'
      type: object
    CreatePipeRequest:
      example:
        Enrichment: ""
        Target: ""
        Description: ""
        DesiredState: ""
        TargetParameters:
          HttpParameters:
            PathParameterValues: ""
            HeaderParameters: ""
            QueryStringParameters: ""
          StepFunctionStateMachineParameters:
            InvocationType: ""
          SqsQueueParameters:
            MessageGroupId: ""
            MessageDeduplicationId: ""
          CloudWatchLogsParameters:
            LogStreamName: ""
            Timestamp: ""
          KinesisStreamParameters:
            PartitionKey: ""
          InputTemplate: ""
          SageMakerPipelineParameters:
            PipelineParameterList: ""
          EventBridgeEventBusParameters:
            DetailType: ""
            EndpointId: ""
            Time: ""
            Resources: ""
            Source: ""
          BatchJobParameters:
            DependsOn: ""
            Parameters: ""
            ArrayProperties:
              Size: ""
            JobName: ""
            RetryStrategy:
              Attempts: ""
            ContainerOverrides:
              Command: ""
              Environment: ""
              InstanceType: ""
              ResourceRequirements: ""
            JobDefinition: ""
          EcsTaskParameters:
            PlatformVersion: ""
            Group: ""
            EnableECSManagedTags: ""
            EnableExecuteCommand: ""
            PlacementConstraints: ""
            PropagateTags: ""
            TaskCount: ""
            PlacementStrategy: ""
            CapacityProviderStrategy: ""
            LaunchType: ""
            ReferenceId: ""
            Overrides:
              ExecutionRoleArn: ""
              TaskRoleArn: ""
              Memory: ""
              Cpu: ""
              InferenceAcceleratorOverrides: ""
              EphemeralStorage:
                sizeInGiB: ""
              ContainerOverrides: ""
            NetworkConfiguration:
              awsvpcConfiguration:
                SecurityGroups: ""
                Subnets: ""
                AssignPublicIp: ""
            Tags: ""
            TaskDefinitionArn: ""
          LambdaFunctionParameters:
            InvocationType: ""
          RedshiftDataParameters:
            StatementName: ""
            Sqls: ""
            Database: ""
            SecretManagerArn: ""
            DbUser: ""
            WithEvent: ""
        EnrichmentParameters:
          HttpParameters:
            PathParameterValues: ""
            HeaderParameters: ""
            QueryStringParameters: ""
          InputTemplate: ""
        RoleArn: ""
        Source: ""
        SourceParameters:
          ManagedStreamingKafkaParameters:
            StartingPosition: ""
            BatchSize: ""
            ConsumerGroupID: ""
            Credentials:
              ClientCertificateTlsAuth: ""
              SaslScram512Auth: ""
            MaximumBatchingWindowInSeconds: ""
            TopicName: ""
          DynamoDBStreamParameters:
            StartingPosition: ""
            BatchSize: ""
            MaximumRetryAttempts: ""
            OnPartialBatchItemFailure: ""
            DeadLetterConfig:
              Arn: ""
            ParallelizationFactor: ""
            MaximumRecordAgeInSeconds: ""
            MaximumBatchingWindowInSeconds: ""
          SelfManagedKafkaParameters:
            StartingPosition: ""
            BatchSize: ""
            ConsumerGroupID: ""
            AdditionalBootstrapServers: ""
            Vpc:
              Subnets: ""
              SecurityGroup: ""
            Credentials:
              BasicAuth: ""
              SaslScram256Auth: ""
              ClientCertificateTlsAuth: ""
              SaslScram512Auth: ""
            ServerRootCaCertificate: ""
            MaximumBatchingWindowInSeconds: ""
            TopicName: ""
          RabbitMQBrokerParameters:
            BatchSize: ""
            VirtualHost: ""
            QueueName: ""
            Credentials:
              BasicAuth: ""
            MaximumBatchingWindowInSeconds: ""
          SqsQueueParameters:
            BatchSize: ""
            MaximumBatchingWindowInSeconds: ""
          KinesisStreamParameters:
            StartingPosition: ""
            BatchSize: ""
            MaximumRetryAttempts: ""
            OnPartialBatchItemFailure: ""
            DeadLetterConfig:
              Arn: ""
            ParallelizationFactor: ""
            MaximumRecordAgeInSeconds: ""
            StartingPositionTimestamp: ""
            MaximumBatchingWindowInSeconds: ""
          FilterCriteria:
            Filters: ""
          ActiveMQBrokerParameters:
            BatchSize: ""
            QueueName: ""
            Credentials:
              BasicAuth: ""
            MaximumBatchingWindowInSeconds: ""
        Tags: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/PipeDescription'
          - description: A description of the pipe.
        DesiredState:
          allOf:
          - $ref: '#/components/schemas/RequestedPipeState'
          - description: The state the pipe should be in.
        Enrichment:
          allOf:
          - $ref: '#/components/schemas/OptionalArn'
          - description: The ARN of the enrichment resource.
        EnrichmentParameters:
          $ref: '#/components/schemas/DescribePipeResponse_EnrichmentParameters'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the role that allows the pipe to send data to
              the target.
        Source:
          allOf:
          - $ref: '#/components/schemas/ArnOrUrl'
          - description: The ARN of the source resource.
        SourceParameters:
          $ref: '#/components/schemas/DescribePipeResponse_SourceParameters'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of key-value pairs to associate with the pipe.
        Target:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the target resource.
        TargetParameters:
          $ref: '#/components/schemas/DescribePipeResponse_TargetParameters'
      required:
      - RoleArn
      - Source
      - Target
      title: CreatePipeRequest
      type: object
    PipeArn:
      maxLength: 1600
      minLength: 1
      pattern: "^arn:aws([a-z]|\\-)*:([a-zA-Z0-9\\-]+):([a-z]|\\d|\\-)*:([0-9]{12})?:(.+)$"
      type: string
    Timestamp:
      format: date-time
      type: string
    PipeState:
      enum:
      - RUNNING
      - STOPPED
      - CREATING
      - UPDATING
      - DELETING
      - STARTING
      - STOPPING
      - CREATE_FAILED
      - UPDATE_FAILED
      - START_FAILED
      - STOP_FAILED
      type: string
    Database:
      description: // Redshift Database
      format: password
      maxLength: 64
      minLength: 1
      type: string
    DbUser:
      description: // Database user name
      format: password
      maxLength: 128
      minLength: 1
      type: string
    DeadLetterConfig:
      description: A <code>DeadLetterConfig</code> object that contains information
        about a dead-letter queue configuration.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the Amazon SQS queue specified as the target for
              the dead-letter queue.
      type: object
    DeletePipeRequest:
      properties: {}
      title: DeletePipeRequest
      type: object
    RequestedPipeStateDescribeResponse:
      enum:
      - RUNNING
      - STOPPED
      - DELETED
      type: string
    DescribePipeRequest:
      properties: {}
      title: DescribePipeRequest
      type: object
    PipeStateReason:
      maxLength: 512
      minLength: 0
      pattern: ^.*$
      type: string
    DynamoDBStreamStartPosition:
      enum:
      - TRIM_HORIZON
      - LATEST
      type: string
    Integer:
      type: integer
    EcsEnvironmentVariableList:
      items:
        $ref: '#/components/schemas/EcsEnvironmentVariable'
      type: array
    EcsEnvironmentFileList:
      items:
        $ref: '#/components/schemas/EcsEnvironmentFile'
      type: array
    EcsResourceRequirementsList:
      items:
        $ref: '#/components/schemas/EcsResourceRequirement'
      type: array
    EcsContainerOverride:
      description: "The overrides that are sent to a container. An empty container\
        \ override can be passed in. An example of an empty container override is\
        \ <code>{\"containerOverrides\": [ ] }</code>. If a non-empty container override\
        \ is specified, the <code>name</code> parameter must be included."
      properties:
        Command:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The command to send to the container that overrides the default
              command from the Docker image or the task definition. You must also
              specify a container name.
        Cpu:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The number of <code>cpu</code> units reserved for the container,\
              \ instead of the default value from the task definition. You must also\
              \ specify a container name."
        Environment:
          allOf:
          - $ref: '#/components/schemas/EcsEnvironmentVariableList'
          - description: "The environment variables to send to the container. You\
              \ can add new environment variables, which are added to the container\
              \ at launch, or you can override the existing environment variables\
              \ from the Docker image or the task definition. You must also specify\
              \ a container name."
        EnvironmentFiles:
          allOf:
          - $ref: '#/components/schemas/EcsEnvironmentFileList'
          - description: "A list of files containing the environment variables to\
              \ pass to a container, instead of the value from the container definition."
        Memory:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The hard limit (in MiB) of memory to present to the container,\
              \ instead of the default value from the task definition. If your container\
              \ attempts to exceed the memory specified here, the container is killed.\
              \ You must also specify a container name."
        MemoryReservation:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The soft limit (in MiB) of memory to reserve for the container,\
              \ instead of the default value from the task definition. You must also\
              \ specify a container name."
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the container that receives the override. This
              parameter is required if any override is specified.
        ResourceRequirements:
          allOf:
          - $ref: '#/components/schemas/EcsResourceRequirementsList'
          - description: "The type and amount of a resource to assign to a container,\
              \ instead of the default value from the task definition. The only supported\
              \ resource is a GPU."
      type: object
    EcsContainerOverrideList:
      items:
        $ref: '#/components/schemas/EcsContainerOverride'
      type: array
    EcsEnvironmentFileType:
      enum:
      - s3
      type: string
    EcsEnvironmentFile:
      description: "<p>A list of files containing the environment variables to pass\
        \ to a container. You can specify up to ten environment files. The file must\
        \ have a <code>.env</code> file extension. Each line in an environment file\
        \ should contain an environment variable in <code>VARIABLE=VALUE</code> format.\
        \ Lines beginning with <code>#</code> are treated as comments and are ignored.\
        \ For more information about the environment variable file syntax, see <a\
        \ href=\"https://docs.docker.com/compose/env-file/\">Declare default environment\
        \ variables in file</a>.</p> <p>If there are environment variables specified\
        \ using the <code>environment</code> parameter in a container definition,\
        \ they take precedence over the variables contained within an environment\
        \ file. If multiple environment files are specified that contain the same\
        \ variable, they're processed from the top down. We recommend that you use\
        \ unique variable names. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html\"\
        >Specifying environment variables</a> in the <i>Amazon Elastic Container Service\
        \ Developer Guide</i>.</p> <p>This parameter is only supported for tasks hosted\
        \ on Fargate using the following platform versions:</p> <ul> <li> <p>Linux\
        \ platform version <code>1.4.0</code> or later.</p> </li> <li> <p>Windows\
        \ platform version <code>1.0.0</code> or later.</p> </li> </ul>"
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/EcsEnvironmentFileType'
          - description: The file type to use. The only supported value is <code>s3</code>.
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the Amazon S3 object containing
              the environment variable file.
      required:
      - type
      - value
      type: object
    EcsEnvironmentVariable:
      description: "The environment variables to send to the container. You can add\
        \ new environment variables, which are added to the container at launch, or\
        \ you can override the existing environment variables from the Docker image\
        \ or the task definition. You must also specify a container name."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of the key-value pair. For environment variables,\
              \ this is the name of the environment variable."
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The value of the key-value pair. For environment variables,\
              \ this is the value of the environment variable."
      type: object
    EphemeralStorageSize:
      maximum: 200
      minimum: 21
      type: integer
    EcsEphemeralStorage:
      description: "<p>The amount of ephemeral storage to allocate for the task. This\
        \ parameter is used to expand the total amount of ephemeral storage available,\
        \ beyond the default amount, for tasks hosted on Fargate. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/userguide/using_data_volumes.html\"\
        >Fargate task storage</a> in the <i>Amazon ECS User Guide for Fargate</i>.</p>\
        \ <note> <p>This parameter is only supported for tasks hosted on Fargate using\
        \ Linux platform version <code>1.4.0</code> or later. This parameter is not\
        \ supported for Windows containers on Fargate.</p> </note>"
      properties:
        sizeInGiB:
          allOf:
          - $ref: '#/components/schemas/EphemeralStorageSize'
          - description: "The total amount, in GiB, of ephemeral storage to set for\
              \ the task. The minimum supported value is <code>21</code> GiB and the\
              \ maximum supported value is <code>200</code> GiB."
      required:
      - sizeInGiB
      type: object
    EcsInferenceAcceleratorOverride:
      description: "Details on an Elastic Inference accelerator task override. This\
        \ parameter is used to override the Elastic Inference accelerator specified\
        \ in the task definition. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/userguide/ecs-inference.html\"\
        >Working with Amazon Elastic Inference on Amazon ECS</a> in the <i>Amazon\
        \ Elastic Container Service Developer Guide</i>."
      properties:
        deviceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Elastic Inference accelerator device name to override
              for the task. This parameter must match a <code>deviceName</code> specified
              in the task definition.
        deviceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Elastic Inference accelerator type to use.
      type: object
    EcsInferenceAcceleratorOverrideList:
      items:
        $ref: '#/components/schemas/EcsInferenceAcceleratorOverride'
      type: array
    EcsResourceRequirementType:
      enum:
      - GPU
      - InferenceAccelerator
      type: string
    EcsResourceRequirement:
      description: "The type and amount of a resource to assign to a container. The\
        \ supported resource types are GPUs and Elastic Inference accelerators. For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-gpu.html\"\
        >Working with GPUs on Amazon ECS</a> or <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-inference.html\"\
        >Working with Amazon Elastic Inference on Amazon ECS</a> in the <i>Amazon\
        \ Elastic Container Service Developer Guide</i> "
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/EcsResourceRequirementType'
          - description: The type of resource to assign to a container. The supported
              values are <code>GPU</code> or <code>InferenceAccelerator</code>.
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The value for the specified resource type.</p> <p>If\
              \ the <code>GPU</code> type is used, the value is the number of physical\
              \ <code>GPUs</code> the Amazon ECS container agent reserves for the\
              \ container. The number of GPUs that's reserved for all containers in\
              \ a task can't exceed the number of available GPUs on the container\
              \ instance that the task is launched on.</p> <p>If the <code>InferenceAccelerator</code>\
              \ type is used, the <code>value</code> matches the <code>deviceName</code>\
              \ for an InferenceAccelerator specified in a task definition.</p>"
      required:
      - type
      - value
      type: object
    EcsTaskOverride:
      description: The overrides that are associated with a task.
      properties:
        ContainerOverrides:
          allOf:
          - $ref: '#/components/schemas/EcsContainerOverrideList'
          - description: One or more container overrides that are sent to a task.
        Cpu:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The cpu override for the task.
        EphemeralStorage:
          $ref: '#/components/schemas/EcsTaskOverride_EphemeralStorage'
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ArnOrJsonPath'
          - description: "The Amazon Resource Name (ARN) of the task execution IAM\
              \ role override for the task. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_execution_IAM_role.html\"\
              >Amazon ECS task execution IAM role</a> in the <i>Amazon Elastic Container\
              \ Service Developer Guide</i>."
        InferenceAcceleratorOverrides:
          allOf:
          - $ref: '#/components/schemas/EcsInferenceAcceleratorOverrideList'
          - description: The Elastic Inference accelerator override for the task.
        Memory:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The memory override for the task.
        TaskRoleArn:
          allOf:
          - $ref: '#/components/schemas/ArnOrJsonPath'
          - description: "The Amazon Resource Name (ARN) of the IAM role that containers\
              \ in this task can assume. All containers in this task are granted the\
              \ permissions that are specified in this role. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html\"\
              >IAM Role for Tasks</a> in the <i>Amazon Elastic Container Service Developer\
              \ Guide</i>."
      type: object
    EndpointString:
      format: password
      maxLength: 300
      minLength: 1
      pattern: "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\\
        -]*[A-Za-z0-9]):[0-9]{1,5}$"
      type: string
    EventBridgeDetailType:
      format: password
      maxLength: 128
      minLength: 1
      type: string
    EventBridgeEndpointId:
      format: password
      maxLength: 50
      minLength: 1
      pattern: "^[A-Za-z0-9\\-]+[\\.][A-Za-z0-9\\-]+$"
      type: string
    EventBridgeEventResourceList:
      items:
        $ref: '#/components/schemas/ArnOrJsonPath'
      maxItems: 10
      minItems: 0
      type: array
    EventBridgeEventSource:
      format: password
      maxLength: 256
      minLength: 1
      pattern: "(?=[/\\.\\-_A-Za-z0-9]+)((?!aws\\.).*)|(\\$(\\.[\\w/_-]+(\\[(\\d+|\\\
        *)\\])*)*)"
      type: string
    EventPattern:
      format: password
      maxLength: 4096
      minLength: 0
      type: string
    Filter:
      description: "Filter events using an event pattern. For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html\"\
        >Events and Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>."
      properties:
        Pattern:
          allOf:
          - $ref: '#/components/schemas/EventPattern'
          - description: The event pattern.
      type: object
    FilterList:
      items:
        $ref: '#/components/schemas/Filter'
      maxItems: 5
      minItems: 0
      type: array
    HeaderKey:
      maxLength: 512
      minLength: 0
      pattern: "^[!#$%&'*+-.^_`|~0-9a-zA-Z]+|(\\$(\\.[\\w/_-]+(\\[(\\d+|\\*)\\])*)*)$"
      type: string
    HeaderValue:
      format: password
      maxLength: 512
      minLength: 0
      pattern: "^[ \\t]*[\\x20-\\x7E]+([ \\t]+[\\x20-\\x7E]+)*[ \\t]*|(\\$(\\.[\\\
        w/_-]+(\\[(\\d+|\\*)\\])*)*)$"
      type: string
    HeaderParametersMap:
      additionalProperties:
        $ref: '#/components/schemas/HeaderValue'
      type: object
    JsonPath:
      maxLength: 256
      minLength: 1
      pattern: "^\\$(\\.[\\w/_-]+(\\[(\\d+|\\*)\\])*)*$"
      type: string
    KafkaBootstrapServers:
      items:
        $ref: '#/components/schemas/EndpointString'
      maxItems: 2
      minItems: 0
      type: array
    KafkaTopicName:
      format: password
      maxLength: 249
      minLength: 1
      pattern: "^[^.]([a-zA-Z0-9\\-_.]+)$"
      type: string
    KinesisPartitionKey:
      format: password
      maxLength: 256
      minLength: 0
      type: string
    KinesisStreamStartPosition:
      enum:
      - TRIM_HORIZON
      - LATEST
      - AT_TIMESTAMP
      type: string
    LaunchType:
      enum:
      - EC2
      - FARGATE
      - EXTERNAL
      type: string
    LimitMax10:
      maximum: 10
      minimum: 1
      type: integer
    LimitMax100:
      maximum: 100
      minimum: 1
      type: integer
    LimitMax10000:
      maximum: 10000
      minimum: 1
      type: integer
    LimitMin1:
      minimum: 1
      type: integer
    NextToken:
      format: password
      maxLength: 2048
      minLength: 1
      type: string
    ResourceArn:
      maxLength: 1600
      minLength: 1
      type: string
    ListPipesRequest:
      properties: {}
      title: ListPipesRequest
      type: object
    PipeList:
      items:
        $ref: '#/components/schemas/Pipe'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    LogStreamName:
      maxLength: 256
      minLength: 1
      type: string
    SecretManagerArn:
      description: // Optional SecretManager ARN which stores the database credentials
      maxLength: 1600
      minLength: 1
      pattern: "^(^arn:aws([a-z]|\\-)*:secretsmanager:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\\
        d{1}):(\\d{12}):secret:.+)$"
      type: string
    MQBrokerAccessCredentials:
      description: The Secrets Manager secret that stores your broker credentials.
      properties:
        BasicAuth:
          allOf:
          - $ref: '#/components/schemas/SecretManagerArn'
          - description: The ARN of the Secrets Manager secret.
      type: object
    MQBrokerQueueName:
      format: password
      maxLength: 1000
      minLength: 1
      pattern: "^[\\s\\S]*$"
      type: string
    MSKAccessCredentials:
      description: The Secrets Manager secret that stores your stream credentials.
      properties:
        ClientCertificateTlsAuth:
          allOf:
          - $ref: '#/components/schemas/SecretManagerArn'
          - description: The ARN of the Secrets Manager secret.
        SaslScram512Auth:
          allOf:
          - $ref: '#/components/schemas/SecretManagerArn'
          - description: The ARN of the Secrets Manager secret.
      type: object
    MSKStartPosition:
      enum:
      - TRIM_HORIZON
      - LATEST
      type: string
    MaximumBatchingWindowInSeconds:
      maximum: 300
      minimum: 0
      type: integer
    MaximumRecordAgeInSeconds:
      maximum: 604800
      minimum: -1
      type: integer
    MaximumRetryAttemptsESM:
      maximum: 10000
      minimum: -1
      type: integer
    MessageDeduplicationId:
      format: password
      maxLength: 100
      minLength: 0
      type: string
    MessageGroupId:
      format: password
      maxLength: 100
      minLength: 0
      type: string
    NetworkConfiguration:
      description: This structure specifies the network configuration for an Amazon
        ECS task.
      properties:
        awsvpcConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration_awsvpcConfiguration'
      type: object
    OnPartialBatchItemFailureStreams:
      enum:
      - AUTOMATIC_BISECT
      type: string
    PathParameter:
      format: password
      pattern: "^(?!\\s*$).+|(\\$(\\.[\\w/_-]+(\\[(\\d+|\\*)\\])*)*)$"
      type: string
    PathParameterList:
      items:
        $ref: '#/components/schemas/PathParameter'
      maxItems: 1
      minItems: 0
      type: array
    Pipe:
      description: An object that represents a pipe. Amazon EventBridgePipes connect
        event sources to targets and reduces the need for specialized knowledge and
        integration code.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/PipeArn'
          - description: The ARN of the pipe.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the pipe was created.
        CurrentState:
          allOf:
          - $ref: '#/components/schemas/PipeState'
          - description: The state the pipe is in.
        DesiredState:
          allOf:
          - $ref: '#/components/schemas/RequestedPipeState'
          - description: The state the pipe should be in.
        Enrichment:
          allOf:
          - $ref: '#/components/schemas/OptionalArn'
          - description: The ARN of the enrichment resource.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "When the pipe was last updated, in <a href=\"https://www.w3.org/TR/NOTE-datetime\"\
              >ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD)."
        Name:
          allOf:
          - $ref: '#/components/schemas/PipeName'
          - description: The name of the pipe.
        Source:
          allOf:
          - $ref: '#/components/schemas/ArnOrUrl'
          - description: The ARN of the source resource.
        StateReason:
          allOf:
          - $ref: '#/components/schemas/PipeStateReason'
          - description: The reason the pipe is in its current state.
        Target:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the target resource.
      type: object
    QueryStringParametersMap:
      additionalProperties:
        $ref: '#/components/schemas/QueryStringValue'
      type: object
    URI:
      format: password
      maxLength: 200
      minLength: 1
      pattern: "^[a-zA-Z0-9-\\/*:_+=.@-]*$"
      type: string
    SelfManagedKafkaAccessConfigurationCredentials:
      description: The Secrets Manager secret that stores your stream credentials.
      properties:
        BasicAuth:
          allOf:
          - $ref: '#/components/schemas/SecretManagerArn'
          - description: The ARN of the Secrets Manager secret.
        ClientCertificateTlsAuth:
          allOf:
          - $ref: '#/components/schemas/SecretManagerArn'
          - description: The ARN of the Secrets Manager secret.
        SaslScram256Auth:
          allOf:
          - $ref: '#/components/schemas/SecretManagerArn'
          - description: The ARN of the Secrets Manager secret.
        SaslScram512Auth:
          allOf:
          - $ref: '#/components/schemas/SecretManagerArn'
          - description: The ARN of the Secrets Manager secret.
      type: object
    SelfManagedKafkaStartPosition:
      enum:
      - TRIM_HORIZON
      - LATEST
      type: string
    SelfManagedKafkaAccessConfigurationVpc:
      description: "This structure specifies the VPC subnets and security groups for\
        \ the stream, and whether a public IP address is to be used."
      properties:
        SecurityGroup:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: "Specifies the security groups associated with the stream.\
              \ These security groups must all be in the same VPC. You can specify\
              \ as many as five security groups. If you do not specify a security\
              \ group, the default security group for the VPC is used."
        Subnets:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          - description: Specifies the subnets associated with the stream. These subnets
              must all be in the same VPC. You can specify as many as 16 subnets.
      type: object
    PlacementConstraints:
      items:
        $ref: '#/components/schemas/PlacementConstraint'
      maxItems: 10
      minItems: 0
      type: array
    PlacementStrategies:
      items:
        $ref: '#/components/schemas/PlacementStrategy'
      maxItems: 5
      minItems: 0
      type: array
    PropagateTags:
      enum:
      - TASK_DEFINITION
      type: string
    ReferenceId:
      format: password
      maxLength: 1024
      minLength: 0
      type: string
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
    PipeTargetInvocationType:
      enum:
      - REQUEST_RESPONSE
      - FIRE_AND_FORGET
      type: string
    SecretManagerArnOrJsonPath:
      description: "// For targets, can either specify an ARN or a jsonpath pointing\
        \ to the ARN."
      maxLength: 1600
      minLength: 1
      pattern: "^(^arn:aws([a-z]|\\-)*:secretsmanager:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\\
        d{1}):(\\d{12}):secret:.+)|(\\$(\\.[\\w/_-]+(\\[(\\d+|\\*)\\])*)*)$"
      type: string
    Sqls:
      description: // A list of SQLs.
      items:
        $ref: '#/components/schemas/Sql'
      minItems: 1
      type: array
    StatementName:
      description: // A name for Redshift DataAPI statement which can be used as filter
        of // ListStatement.
      format: password
      maxLength: 500
      minLength: 1
      type: string
    SageMakerPipelineParameterList:
      items:
        $ref: '#/components/schemas/SageMakerPipelineParameter'
      maxItems: 200
      minItems: 0
      type: array
    PlacementConstraintExpression:
      format: password
      maxLength: 2000
      minLength: 0
      type: string
    PlacementConstraintType:
      enum:
      - distinctInstance
      - memberOf
      type: string
    PlacementConstraint:
      description: "An object representing a constraint on task placement. To learn\
        \ more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html\"\
        >Task Placement Constraints</a> in the Amazon Elastic Container Service Developer\
        \ Guide."
      properties:
        expression:
          allOf:
          - $ref: '#/components/schemas/PlacementConstraintExpression'
          - description: "A cluster query language expression to apply to the constraint.\
              \ You cannot specify an expression if the constraint type is <code>distinctInstance</code>.\
              \ To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html\"\
              >Cluster Query Language</a> in the Amazon Elastic Container Service\
              \ Developer Guide. "
        type:
          allOf:
          - $ref: '#/components/schemas/PlacementConstraintType'
          - description: 'The type of constraint. Use distinctInstance to ensure that
              each task in a particular group is running on a different container
              instance. Use memberOf to restrict the selection to a group of valid
              candidates. '
      type: object
    PlacementStrategy:
      description: "The task placement strategy for a task or service. To learn more,\
        \ see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html\"\
        >Task Placement Strategies</a> in the Amazon Elastic Container Service Service\
        \ Developer Guide."
      properties:
        field:
          allOf:
          - $ref: '#/components/schemas/PlacementStrategyField'
          - description: "The field to apply the placement strategy against. For the\
              \ spread placement strategy, valid values are instanceId (or host, which\
              \ has the same effect), or any platform or custom attribute that is\
              \ applied to a container instance, such as attribute:ecs.availability-zone.\
              \ For the binpack placement strategy, valid values are cpu and memory.\
              \ For the random placement strategy, this field is not used. "
        type:
          allOf:
          - $ref: '#/components/schemas/PlacementStrategyType'
          - description: "The type of placement strategy. The random placement strategy\
              \ randomly places tasks on available candidates. The spread placement\
              \ strategy spreads placement across available candidates evenly based\
              \ on the field parameter. The binpack strategy places tasks on available\
              \ candidates that have the least available amount of the resource that\
              \ is specified with the field parameter. For example, if you binpack\
              \ on memory, a task is placed on the instance with the least amount\
              \ of remaining memory (but still enough to run the task). "
      type: object
    PlacementStrategyField:
      format: password
      maxLength: 255
      minLength: 0
      type: string
    PlacementStrategyType:
      enum:
      - random
      - spread
      - binpack
      type: string
    QueryStringKey:
      maxLength: 512
      minLength: 0
      pattern: "^[^\\x00-\\x1F\\x7F]+|(\\$(\\.[\\w/_-]+(\\[(\\d+|\\*)\\])*)*)$"
      type: string
    QueryStringValue:
      format: password
      maxLength: 512
      minLength: 0
      pattern: "^[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F]+|(\\$(\\.[\\w/_-]+(\\[(\\\
        d+|\\*)\\])*)*)$"
      type: string
    SageMakerPipelineParameterName:
      format: password
      maxLength: 256
      minLength: 1
      pattern: "^[a-zA-Z0-9](-*[a-zA-Z0-9])*|(\\$(\\.[\\w/_-]+(\\[(\\d+|\\*)\\])*)*)$"
      type: string
    SageMakerPipelineParameterValue:
      format: password
      maxLength: 1024
      minLength: 0
      type: string
    SageMakerPipelineParameter:
      description: Name/Value pair of a parameter to start execution of a SageMaker
        Model Building Pipeline.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/SageMakerPipelineParameterName'
          - description: Name of parameter to start execution of a SageMaker Model
              Building Pipeline.
        Value:
          allOf:
          - $ref: '#/components/schemas/SageMakerPipelineParameterValue'
          - description: Value of parameter to start execution of a SageMaker Model
              Building Pipeline.
      required:
      - Name
      - Value
      type: object
    SecurityGroup:
      format: password
      maxLength: 1024
      minLength: 1
      pattern: "^sg-[0-9a-zA-Z]*|(\\$(\\.[\\w/_-]+(\\[(\\d+|\\*)\\])*)*)$"
      type: string
    SecurityGroupId:
      format: password
      maxLength: 1024
      minLength: 1
      pattern: "^sg-[0-9a-zA-Z]*$"
      type: string
    SecurityGroupIds:
      description: List of SecurityGroupId.
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      maxItems: 5
      minItems: 0
      type: array
    SubnetIds:
      description: List of SubnetId.
      items:
        $ref: '#/components/schemas/SubnetId'
      maxItems: 16
      minItems: 0
      type: array
    Sql:
      description: // A single Redshift SQL
      format: password
      maxLength: 100000
      minLength: 1
      type: string
    StartPipeRequest:
      properties: {}
      title: StartPipeRequest
      type: object
    StopPipeRequest:
      properties: {}
      title: StopPipeRequest
      type: object
    Subnet:
      format: password
      maxLength: 1024
      minLength: 1
      pattern: "^subnet-[0-9a-z]*|(\\$(\\.[\\w/_-]+(\\[(\\d+|\\*)\\])*)*)$"
      type: string
    SubnetId:
      format: password
      maxLength: 1024
      minLength: 1
      pattern: "^subnet-[0-9a-z]*$"
      type: string
    Tag:
      description: "A key-value pair associated with an Amazon Web Services resource.\
        \ In EventBridge, rules and event buses support tagging."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: A string you can use to assign a value. The combination of
              tag keys and values can help you organize and categorize your resources.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value for the specified tag key.
      required:
      - Key
      - Value
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of key-value pairs associated with the pipe.
      required:
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdatePipeSourceParameters:
      description: The parameters required to set up a source for your pipe.
      properties:
        ActiveMQBrokerParameters:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_ActiveMQBrokerParameters'
        DynamoDBStreamParameters:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_DynamoDBStreamParameters'
        FilterCriteria:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_FilterCriteria'
        KinesisStreamParameters:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_KinesisStreamParameters'
        ManagedStreamingKafkaParameters:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_ManagedStreamingKafkaParameters'
        RabbitMQBrokerParameters:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_RabbitMQBrokerParameters'
        SelfManagedKafkaParameters:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_SelfManagedKafkaParameters'
        SqsQueueParameters:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_SqsQueueParameters'
      type: object
    UpdatePipeRequest:
      example:
        Enrichment: ""
        Target: ""
        Description: ""
        DesiredState: ""
        TargetParameters:
          HttpParameters:
            PathParameterValues: ""
            HeaderParameters: ""
            QueryStringParameters: ""
          StepFunctionStateMachineParameters:
            InvocationType: ""
          SqsQueueParameters:
            MessageGroupId: ""
            MessageDeduplicationId: ""
          CloudWatchLogsParameters:
            LogStreamName: ""
            Timestamp: ""
          KinesisStreamParameters:
            PartitionKey: ""
          InputTemplate: ""
          SageMakerPipelineParameters:
            PipelineParameterList: ""
          EventBridgeEventBusParameters:
            DetailType: ""
            EndpointId: ""
            Time: ""
            Resources: ""
            Source: ""
          BatchJobParameters:
            DependsOn: ""
            Parameters: ""
            ArrayProperties:
              Size: ""
            JobName: ""
            RetryStrategy:
              Attempts: ""
            ContainerOverrides:
              Command: ""
              Environment: ""
              InstanceType: ""
              ResourceRequirements: ""
            JobDefinition: ""
          EcsTaskParameters:
            PlatformVersion: ""
            Group: ""
            EnableECSManagedTags: ""
            EnableExecuteCommand: ""
            PlacementConstraints: ""
            PropagateTags: ""
            TaskCount: ""
            PlacementStrategy: ""
            CapacityProviderStrategy: ""
            LaunchType: ""
            ReferenceId: ""
            Overrides:
              ExecutionRoleArn: ""
              TaskRoleArn: ""
              Memory: ""
              Cpu: ""
              InferenceAcceleratorOverrides: ""
              EphemeralStorage:
                sizeInGiB: ""
              ContainerOverrides: ""
            NetworkConfiguration:
              awsvpcConfiguration:
                SecurityGroups: ""
                Subnets: ""
                AssignPublicIp: ""
            Tags: ""
            TaskDefinitionArn: ""
          LambdaFunctionParameters:
            InvocationType: ""
          RedshiftDataParameters:
            StatementName: ""
            Sqls: ""
            Database: ""
            SecretManagerArn: ""
            DbUser: ""
            WithEvent: ""
        EnrichmentParameters:
          HttpParameters:
            PathParameterValues: ""
            HeaderParameters: ""
            QueryStringParameters: ""
          InputTemplate: ""
        RoleArn: ""
        SourceParameters:
          ManagedStreamingKafkaParameters:
            BatchSize: ""
            Credentials:
              ClientCertificateTlsAuth: ""
              SaslScram512Auth: ""
            MaximumBatchingWindowInSeconds: ""
          DynamoDBStreamParameters:
            BatchSize: ""
            MaximumRetryAttempts: ""
            OnPartialBatchItemFailure: ""
            DeadLetterConfig:
              Arn: ""
            ParallelizationFactor: ""
            MaximumRecordAgeInSeconds: ""
            MaximumBatchingWindowInSeconds: ""
          SelfManagedKafkaParameters:
            BatchSize: ""
            Vpc:
              Subnets: ""
              SecurityGroup: ""
            Credentials:
              BasicAuth: ""
              SaslScram256Auth: ""
              ClientCertificateTlsAuth: ""
              SaslScram512Auth: ""
            ServerRootCaCertificate: ""
            MaximumBatchingWindowInSeconds: ""
          RabbitMQBrokerParameters:
            BatchSize: ""
            Credentials:
              BasicAuth: ""
            MaximumBatchingWindowInSeconds: ""
          SqsQueueParameters:
            BatchSize: ""
            MaximumBatchingWindowInSeconds: ""
          KinesisStreamParameters:
            BatchSize: ""
            MaximumRetryAttempts: ""
            OnPartialBatchItemFailure: ""
            DeadLetterConfig:
              Arn: ""
            ParallelizationFactor: ""
            MaximumRecordAgeInSeconds: ""
            MaximumBatchingWindowInSeconds: ""
          FilterCriteria:
            Filters: ""
          ActiveMQBrokerParameters:
            BatchSize: ""
            Credentials:
              BasicAuth: ""
            MaximumBatchingWindowInSeconds: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/PipeDescription'
          - description: A description of the pipe.
        DesiredState:
          allOf:
          - $ref: '#/components/schemas/RequestedPipeState'
          - description: The state the pipe should be in.
        Enrichment:
          allOf:
          - $ref: '#/components/schemas/OptionalArn'
          - description: The ARN of the enrichment resource.
        EnrichmentParameters:
          $ref: '#/components/schemas/DescribePipeResponse_EnrichmentParameters'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the role that allows the pipe to send data to
              the target.
        SourceParameters:
          $ref: '#/components/schemas/UpdatePipeRequest_SourceParameters'
        Target:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the target resource.
        TargetParameters:
          $ref: '#/components/schemas/DescribePipeResponse_TargetParameters'
      required:
      - RoleArn
      title: UpdatePipeRequest
      type: object
    UpdatePipe_request_EnrichmentParameters_HttpParameters:
      allOf:
      - $ref: '#/components/schemas/PipeEnrichmentHttpParameters'
      - description: "<p>Contains the HTTP parameters to use when the target is a\
          \ API Gateway REST endpoint or EventBridge ApiDestination.</p> <p>If you\
          \ specify an API Gateway REST API or EventBridge ApiDestination as a target,\
          \ you can use this parameter to specify headers, path parameters, and query\
          \ string keys/values as part of your target invoking request. If you're\
          \ using ApiDestinations, the corresponding Connection can also have these\
          \ values configured. In case of any conflicting keys, values from the Connection\
          \ take precedence.</p>"
      example:
        PathParameterValues: ""
        HeaderParameters: ""
        QueryStringParameters: ""
    UpdatePipe_request_EnrichmentParameters:
      description: The parameters required to set up enrichment on your pipe.
      properties:
        HttpParameters:
          $ref: '#/components/schemas/UpdatePipe_request_EnrichmentParameters_HttpParameters'
        InputTemplate:
          allOf:
          - $ref: '#/components/schemas/InputTemplate'
          - description: "Valid JSON text passed to the enrichment. In this case,\
              \ nothing from the event itself is passed to the enrichment. For more\
              \ information, see <a href=\"http://www.rfc-editor.org/rfc/rfc7159.txt\"\
              >The JavaScript Object Notation (JSON) Data Interchange Format</a>."
      type: object
    UpdatePipe_request_SourceParameters_ActiveMQBrokerParameters:
      allOf:
      - $ref: '#/components/schemas/UpdatePipeSourceActiveMQBrokerParameters'
      - description: The parameters for using an Active MQ broker as a source.
      example:
        BatchSize: ""
        Credentials:
          BasicAuth: ""
        MaximumBatchingWindowInSeconds: ""
    UpdatePipe_request_SourceParameters_DynamoDBStreamParameters:
      allOf:
      - $ref: '#/components/schemas/UpdatePipeSourceDynamoDBStreamParameters'
      - description: The parameters for using a DynamoDB stream as a source.
      example:
        BatchSize: ""
        MaximumRetryAttempts: ""
        OnPartialBatchItemFailure: ""
        DeadLetterConfig:
          Arn: ""
        ParallelizationFactor: ""
        MaximumRecordAgeInSeconds: ""
        MaximumBatchingWindowInSeconds: ""
    UpdatePipe_request_SourceParameters_FilterCriteria:
      allOf:
      - $ref: '#/components/schemas/FilterCriteria'
      - description: "The collection of event patterns used to filter events. For\
          \ more information, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html\"\
          >Events and Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>."
      example:
        Filters: ""
    UpdatePipe_request_SourceParameters_KinesisStreamParameters:
      allOf:
      - $ref: '#/components/schemas/UpdatePipeSourceKinesisStreamParameters'
      - description: The parameters for using a Kinesis stream as a source.
      example:
        BatchSize: ""
        MaximumRetryAttempts: ""
        OnPartialBatchItemFailure: ""
        DeadLetterConfig:
          Arn: ""
        ParallelizationFactor: ""
        MaximumRecordAgeInSeconds: ""
        MaximumBatchingWindowInSeconds: ""
    UpdatePipe_request_SourceParameters_ManagedStreamingKafkaParameters:
      allOf:
      - $ref: '#/components/schemas/UpdatePipeSourceManagedStreamingKafkaParameters'
      - description: The parameters for using an MSK stream as a source.
      example:
        BatchSize: ""
        Credentials:
          ClientCertificateTlsAuth: ""
          SaslScram512Auth: ""
        MaximumBatchingWindowInSeconds: ""
    UpdatePipe_request_SourceParameters_RabbitMQBrokerParameters:
      allOf:
      - $ref: '#/components/schemas/UpdatePipeSourceRabbitMQBrokerParameters'
      - description: The parameters for using a Rabbit MQ broker as a source.
      example:
        BatchSize: ""
        Credentials:
          BasicAuth: ""
        MaximumBatchingWindowInSeconds: ""
    UpdatePipe_request_SourceParameters_SelfManagedKafkaParameters:
      allOf:
      - $ref: '#/components/schemas/UpdatePipeSourceSelfManagedKafkaParameters'
      - description: The parameters for using a self-managed Apache Kafka stream as
          a source.
      example:
        BatchSize: ""
        Vpc:
          Subnets: ""
          SecurityGroup: ""
        Credentials:
          BasicAuth: ""
          SaslScram256Auth: ""
          ClientCertificateTlsAuth: ""
          SaslScram512Auth: ""
        ServerRootCaCertificate: ""
        MaximumBatchingWindowInSeconds: ""
    UpdatePipe_request_SourceParameters_SqsQueueParameters:
      allOf:
      - $ref: '#/components/schemas/UpdatePipeSourceSqsQueueParameters'
      - description: The parameters for using a Amazon SQS stream as a source.
      example:
        BatchSize: ""
        MaximumBatchingWindowInSeconds: ""
    UpdatePipe_request_SourceParameters:
      description: The parameters required to set up a source for your pipe.
      properties:
        ActiveMQBrokerParameters:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_ActiveMQBrokerParameters'
        DynamoDBStreamParameters:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_DynamoDBStreamParameters'
        FilterCriteria:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_FilterCriteria'
        KinesisStreamParameters:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_KinesisStreamParameters'
        ManagedStreamingKafkaParameters:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_ManagedStreamingKafkaParameters'
        RabbitMQBrokerParameters:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_RabbitMQBrokerParameters'
        SelfManagedKafkaParameters:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_SelfManagedKafkaParameters'
        SqsQueueParameters:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_SqsQueueParameters'
      type: object
    UpdatePipe_request_TargetParameters_BatchJobParameters:
      allOf:
      - $ref: '#/components/schemas/PipeTargetBatchJobParameters'
      - description: The parameters for using an Batch job as a target.
      example:
        DependsOn: ""
        Parameters: ""
        ArrayProperties:
          Size: ""
        JobName: ""
        RetryStrategy:
          Attempts: ""
        ContainerOverrides:
          Command: ""
          Environment: ""
          InstanceType: ""
          ResourceRequirements: ""
        JobDefinition: ""
    UpdatePipe_request_TargetParameters_CloudWatchLogsParameters:
      allOf:
      - $ref: '#/components/schemas/PipeTargetCloudWatchLogsParameters'
      - description: The parameters for using an CloudWatch Logs log stream as a target.
      example:
        LogStreamName: ""
        Timestamp: ""
    UpdatePipe_request_TargetParameters_EcsTaskParameters:
      allOf:
      - $ref: '#/components/schemas/PipeTargetEcsTaskParameters'
      - description: The parameters for using an Amazon ECS task as a target.
      example:
        PlatformVersion: ""
        Group: ""
        EnableECSManagedTags: ""
        EnableExecuteCommand: ""
        PlacementConstraints: ""
        PropagateTags: ""
        TaskCount: ""
        PlacementStrategy: ""
        CapacityProviderStrategy: ""
        LaunchType: ""
        ReferenceId: ""
        Overrides:
          ExecutionRoleArn: ""
          TaskRoleArn: ""
          Memory: ""
          Cpu: ""
          InferenceAcceleratorOverrides: ""
          EphemeralStorage:
            sizeInGiB: ""
          ContainerOverrides: ""
        NetworkConfiguration:
          awsvpcConfiguration:
            SecurityGroups: ""
            Subnets: ""
            AssignPublicIp: ""
        Tags: ""
        TaskDefinitionArn: ""
    UpdatePipe_request_TargetParameters_EventBridgeEventBusParameters:
      allOf:
      - $ref: '#/components/schemas/PipeTargetEventBridgeEventBusParameters'
      - description: The parameters for using an EventBridge event bus as a target.
      example:
        DetailType: ""
        EndpointId: ""
        Time: ""
        Resources: ""
        Source: ""
    UpdatePipe_request_TargetParameters_HttpParameters:
      allOf:
      - $ref: '#/components/schemas/PipeTargetHttpParameters'
      - description: These are custom parameter to be used when the target is an API
          Gateway REST APIs or EventBridge ApiDestinations.
      example:
        PathParameterValues: ""
        HeaderParameters: ""
        QueryStringParameters: ""
    UpdatePipe_request_TargetParameters_KinesisStreamParameters:
      allOf:
      - $ref: '#/components/schemas/PipeTargetKinesisStreamParameters'
      - description: The parameters for using a Kinesis stream as a source.
      example:
        PartitionKey: ""
    UpdatePipe_request_TargetParameters_LambdaFunctionParameters:
      allOf:
      - $ref: '#/components/schemas/PipeTargetLambdaFunctionParameters'
      - description: The parameters for using a Lambda function as a target.
      example:
        InvocationType: ""
    UpdatePipe_request_TargetParameters_RedshiftDataParameters:
      allOf:
      - $ref: '#/components/schemas/PipeTargetRedshiftDataParameters'
      - description: These are custom parameters to be used when the target is a Amazon
          Redshift cluster to invoke the Amazon Redshift Data API ExecuteStatement.
      example:
        StatementName: ""
        Sqls: ""
        Database: ""
        SecretManagerArn: ""
        DbUser: ""
        WithEvent: ""
    UpdatePipe_request_TargetParameters_SageMakerPipelineParameters:
      allOf:
      - $ref: '#/components/schemas/PipeTargetSageMakerPipelineParameters'
      - description: The parameters for using a SageMaker pipeline as a target.
      example:
        PipelineParameterList: ""
    UpdatePipe_request_TargetParameters_SqsQueueParameters:
      allOf:
      - $ref: '#/components/schemas/PipeTargetSqsQueueParameters'
      - description: The parameters for using a Amazon SQS stream as a source.
      example:
        MessageGroupId: ""
        MessageDeduplicationId: ""
    UpdatePipe_request_TargetParameters_StepFunctionStateMachineParameters:
      allOf:
      - $ref: '#/components/schemas/PipeTargetStateMachineParameters'
      - description: The parameters for using a Step Functions state machine as a
          target.
      example:
        InvocationType: ""
    UpdatePipe_request_TargetParameters:
      description: The parameters required to set up a target for your pipe.
      properties:
        BatchJobParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_BatchJobParameters'
        CloudWatchLogsParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_CloudWatchLogsParameters'
        EcsTaskParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_EcsTaskParameters'
        EventBridgeEventBusParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_EventBridgeEventBusParameters'
        HttpParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_HttpParameters'
        InputTemplate:
          allOf:
          - $ref: '#/components/schemas/InputTemplate'
          - description: "Valid JSON text passed to the target. In this case, nothing\
              \ from the event itself is passed to the target. For more information,\
              \ see <a href=\"http://www.rfc-editor.org/rfc/rfc7159.txt\">The JavaScript\
              \ Object Notation (JSON) Data Interchange Format</a>."
        KinesisStreamParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_KinesisStreamParameters'
        LambdaFunctionParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_LambdaFunctionParameters'
        RedshiftDataParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_RedshiftDataParameters'
        SageMakerPipelineParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_SageMakerPipelineParameters'
        SqsQueueParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_SqsQueueParameters'
        StepFunctionStateMachineParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters_StepFunctionStateMachineParameters'
      type: object
    UpdatePipe_request:
      properties:
        Description:
          description: A description of the pipe.
          format: password
          maxLength: 512
          minLength: 0
          pattern: ^.*$
          type: string
        DesiredState:
          description: The state the pipe should be in.
          enum:
          - RUNNING
          - STOPPED
          type: string
        Enrichment:
          description: The ARN of the enrichment resource.
          maxLength: 1600
          minLength: 0
          pattern: "^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-]+):([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\\
            d{1})?:(\\d{12})?:(.+)$"
          type: string
        EnrichmentParameters:
          $ref: '#/components/schemas/UpdatePipe_request_EnrichmentParameters'
        RoleArn:
          description: The ARN of the role that allows the pipe to send data to the
            target.
          maxLength: 1600
          minLength: 1
          pattern: "^arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z0-9+=,.@\\-_/]+$"
          type: string
        SourceParameters:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters'
        Target:
          description: The ARN of the target resource.
          maxLength: 1600
          minLength: 1
          pattern: "^arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-]+):([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\\
            d{1})?:(\\d{12})?:(.+)$"
          type: string
        TargetParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters'
      required:
      - RoleArn
      type: object
    CreatePipe_request_SourceParameters_ActiveMQBrokerParameters:
      allOf:
      - $ref: '#/components/schemas/PipeSourceActiveMQBrokerParameters'
      - description: The parameters for using an Active MQ broker as a source.
      example:
        BatchSize: ""
        QueueName: ""
        Credentials:
          BasicAuth: ""
        MaximumBatchingWindowInSeconds: ""
    CreatePipe_request_SourceParameters_DynamoDBStreamParameters:
      allOf:
      - $ref: '#/components/schemas/PipeSourceDynamoDBStreamParameters'
      - description: The parameters for using a DynamoDB stream as a source.
      example:
        StartingPosition: ""
        BatchSize: ""
        MaximumRetryAttempts: ""
        OnPartialBatchItemFailure: ""
        DeadLetterConfig:
          Arn: ""
        ParallelizationFactor: ""
        MaximumRecordAgeInSeconds: ""
        MaximumBatchingWindowInSeconds: ""
    CreatePipe_request_SourceParameters_KinesisStreamParameters:
      allOf:
      - $ref: '#/components/schemas/PipeSourceKinesisStreamParameters'
      - description: The parameters for using a Kinesis stream as a source.
      example:
        StartingPosition: ""
        BatchSize: ""
        MaximumRetryAttempts: ""
        OnPartialBatchItemFailure: ""
        DeadLetterConfig:
          Arn: ""
        ParallelizationFactor: ""
        MaximumRecordAgeInSeconds: ""
        StartingPositionTimestamp: ""
        MaximumBatchingWindowInSeconds: ""
    CreatePipe_request_SourceParameters_ManagedStreamingKafkaParameters:
      allOf:
      - $ref: '#/components/schemas/PipeSourceManagedStreamingKafkaParameters'
      - description: The parameters for using an MSK stream as a source.
      example:
        StartingPosition: ""
        BatchSize: ""
        ConsumerGroupID: ""
        Credentials:
          ClientCertificateTlsAuth: ""
          SaslScram512Auth: ""
        MaximumBatchingWindowInSeconds: ""
        TopicName: ""
    CreatePipe_request_SourceParameters_RabbitMQBrokerParameters:
      allOf:
      - $ref: '#/components/schemas/PipeSourceRabbitMQBrokerParameters'
      - description: The parameters for using a Rabbit MQ broker as a source.
      example:
        BatchSize: ""
        VirtualHost: ""
        QueueName: ""
        Credentials:
          BasicAuth: ""
        MaximumBatchingWindowInSeconds: ""
    CreatePipe_request_SourceParameters_SelfManagedKafkaParameters:
      allOf:
      - $ref: '#/components/schemas/PipeSourceSelfManagedKafkaParameters'
      - description: The parameters for using a self-managed Apache Kafka stream as
          a source.
      example:
        StartingPosition: ""
        BatchSize: ""
        ConsumerGroupID: ""
        AdditionalBootstrapServers: ""
        Vpc:
          Subnets: ""
          SecurityGroup: ""
        Credentials:
          BasicAuth: ""
          SaslScram256Auth: ""
          ClientCertificateTlsAuth: ""
          SaslScram512Auth: ""
        ServerRootCaCertificate: ""
        MaximumBatchingWindowInSeconds: ""
        TopicName: ""
    CreatePipe_request_SourceParameters_SqsQueueParameters:
      allOf:
      - $ref: '#/components/schemas/PipeSourceSqsQueueParameters'
      - description: The parameters for using a Amazon SQS stream as a source.
      example:
        BatchSize: ""
        MaximumBatchingWindowInSeconds: ""
    CreatePipe_request_SourceParameters:
      description: The parameters required to set up a source for your pipe.
      properties:
        ActiveMQBrokerParameters:
          $ref: '#/components/schemas/CreatePipe_request_SourceParameters_ActiveMQBrokerParameters'
        DynamoDBStreamParameters:
          $ref: '#/components/schemas/CreatePipe_request_SourceParameters_DynamoDBStreamParameters'
        FilterCriteria:
          $ref: '#/components/schemas/UpdatePipe_request_SourceParameters_FilterCriteria'
        KinesisStreamParameters:
          $ref: '#/components/schemas/CreatePipe_request_SourceParameters_KinesisStreamParameters'
        ManagedStreamingKafkaParameters:
          $ref: '#/components/schemas/CreatePipe_request_SourceParameters_ManagedStreamingKafkaParameters'
        RabbitMQBrokerParameters:
          $ref: '#/components/schemas/CreatePipe_request_SourceParameters_RabbitMQBrokerParameters'
        SelfManagedKafkaParameters:
          $ref: '#/components/schemas/CreatePipe_request_SourceParameters_SelfManagedKafkaParameters'
        SqsQueueParameters:
          $ref: '#/components/schemas/CreatePipe_request_SourceParameters_SqsQueueParameters'
      type: object
    CreatePipe_request:
      properties:
        Description:
          description: A description of the pipe.
          format: password
          maxLength: 512
          minLength: 0
          pattern: ^.*$
          type: string
        DesiredState:
          description: The state the pipe should be in.
          enum:
          - RUNNING
          - STOPPED
          type: string
        Enrichment:
          description: The ARN of the enrichment resource.
          maxLength: 1600
          minLength: 0
          pattern: "^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-]+):([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\\
            d{1})?:(\\d{12})?:(.+)$"
          type: string
        EnrichmentParameters:
          $ref: '#/components/schemas/UpdatePipe_request_EnrichmentParameters'
        RoleArn:
          description: The ARN of the role that allows the pipe to send data to the
            target.
          maxLength: 1600
          minLength: 1
          pattern: "^arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z0-9+=,.@\\-_/]+$"
          type: string
        Source:
          description: The ARN of the source resource.
          maxLength: 1600
          minLength: 1
          pattern: "^smk://(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\\
            .)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9]):[0-9]{1,5}|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\\
            -]+):([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1})?:(\\d{12})?:(.+)$"
          type: string
        SourceParameters:
          $ref: '#/components/schemas/CreatePipe_request_SourceParameters'
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The list of key-value pairs to associate with the pipe.
          maxProperties: 50
          minProperties: 1
          type: object
        Target:
          description: The ARN of the target resource.
          maxLength: 1600
          minLength: 1
          pattern: "^arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-]+):([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\\
            d{1})?:(\\d{12})?:(.+)$"
          type: string
        TargetParameters:
          $ref: '#/components/schemas/UpdatePipe_request_TargetParameters'
      required:
      - RoleArn
      - Source
      - Target
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The list of key-value pairs associated with the pipe.
          maxProperties: 50
          minProperties: 1
          type: object
      required:
      - tags
      type: object
    PipeSourceActiveMQBrokerParameters_Credentials:
      allOf:
      - $ref: '#/components/schemas/MQBrokerAccessCredentials'
      - description: The credentials needed to access the resource.
      example:
        BasicAuth: ""
    PipeSourceDynamoDBStreamParameters_DeadLetterConfig:
      allOf:
      - $ref: '#/components/schemas/DeadLetterConfig'
      - description: Define the target queue to send dead-letter queue events to.
      example:
        Arn: ""
    PipeSourceManagedStreamingKafkaParameters_Credentials:
      allOf:
      - $ref: '#/components/schemas/MSKAccessCredentials'
      - description: The credentials needed to access the resource.
      example:
        ClientCertificateTlsAuth: ""
        SaslScram512Auth: ""
    PipeSourceSelfManagedKafkaParameters_Credentials:
      allOf:
      - $ref: '#/components/schemas/SelfManagedKafkaAccessConfigurationCredentials'
      - description: The credentials needed to access the resource.
      example:
        BasicAuth: ""
        SaslScram256Auth: ""
        ClientCertificateTlsAuth: ""
        SaslScram512Auth: ""
    PipeSourceSelfManagedKafkaParameters_Vpc:
      allOf:
      - $ref: '#/components/schemas/SelfManagedKafkaAccessConfigurationVpc'
      - description: "This structure specifies the VPC subnets and security groups\
          \ for the stream, and whether a public IP address is to be used."
      example:
        Subnets: ""
        SecurityGroup: ""
    PipeTargetBatchJobParameters_ArrayProperties:
      allOf:
      - $ref: '#/components/schemas/BatchArrayProperties'
      - description: "The array properties for the submitted job, such as the size\
          \ of the array. The array size can be between 2 and 10,000. If you specify\
          \ array properties for a job, it becomes an array job. This parameter is\
          \ used only if the target is an Batch job."
      example:
        Size: ""
    PipeTargetBatchJobParameters_ContainerOverrides:
      allOf:
      - $ref: '#/components/schemas/BatchContainerOverrides'
      - description: The overrides that are sent to a container.
      example:
        Command: ""
        Environment: ""
        InstanceType: ""
        ResourceRequirements: ""
    PipeTargetBatchJobParameters_RetryStrategy:
      allOf:
      - $ref: '#/components/schemas/BatchRetryStrategy'
      - description: "The retry strategy to use for failed jobs. When a retry strategy\
          \ is specified here, it overrides the retry strategy defined in the job\
          \ definition."
      example:
        Attempts: ""
    PipeTargetEcsTaskParameters_NetworkConfiguration:
      allOf:
      - $ref: '#/components/schemas/NetworkConfiguration'
      - description: "<p>Use this structure if the Amazon ECS task uses the <code>awsvpc</code>\
          \ network mode. This structure specifies the VPC subnets and security groups\
          \ associated with the task, and whether a public IP address is to be used.\
          \ This structure is required if <code>LaunchType</code> is <code>FARGATE</code>\
          \ because the <code>awsvpc</code> mode is required for Fargate tasks.</p>\
          \ <p>If you specify <code>NetworkConfiguration</code> when the target ECS\
          \ task does not use the <code>awsvpc</code> network mode, the task fails.</p>"
      example:
        awsvpcConfiguration:
          SecurityGroups: ""
          Subnets: ""
          AssignPublicIp: ""
    PipeTargetEcsTaskParameters_Overrides:
      allOf:
      - $ref: '#/components/schemas/EcsTaskOverride'
      - description: The overrides that are associated with a task.
      example:
        ExecutionRoleArn: ""
        TaskRoleArn: ""
        Memory: ""
        Cpu: ""
        InferenceAcceleratorOverrides: ""
        EphemeralStorage:
          sizeInGiB: ""
        ContainerOverrides: ""
    DescribePipeResponse_EnrichmentParameters:
      allOf:
      - $ref: '#/components/schemas/PipeEnrichmentParameters'
      - description: The parameters required to set up enrichment on your pipe.
      example:
        HttpParameters:
          PathParameterValues: ""
          HeaderParameters: ""
          QueryStringParameters: ""
        InputTemplate: ""
    DescribePipeResponse_SourceParameters:
      allOf:
      - $ref: '#/components/schemas/PipeSourceParameters'
      - description: The parameters required to set up a source for your pipe.
      example:
        ManagedStreamingKafkaParameters:
          StartingPosition: ""
          BatchSize: ""
          ConsumerGroupID: ""
          Credentials:
            ClientCertificateTlsAuth: ""
            SaslScram512Auth: ""
          MaximumBatchingWindowInSeconds: ""
          TopicName: ""
        DynamoDBStreamParameters:
          StartingPosition: ""
          BatchSize: ""
          MaximumRetryAttempts: ""
          OnPartialBatchItemFailure: ""
          DeadLetterConfig:
            Arn: ""
          ParallelizationFactor: ""
          MaximumRecordAgeInSeconds: ""
          MaximumBatchingWindowInSeconds: ""
        SelfManagedKafkaParameters:
          StartingPosition: ""
          BatchSize: ""
          ConsumerGroupID: ""
          AdditionalBootstrapServers: ""
          Vpc:
            Subnets: ""
            SecurityGroup: ""
          Credentials:
            BasicAuth: ""
            SaslScram256Auth: ""
            ClientCertificateTlsAuth: ""
            SaslScram512Auth: ""
          ServerRootCaCertificate: ""
          MaximumBatchingWindowInSeconds: ""
          TopicName: ""
        RabbitMQBrokerParameters:
          BatchSize: ""
          VirtualHost: ""
          QueueName: ""
          Credentials:
            BasicAuth: ""
          MaximumBatchingWindowInSeconds: ""
        SqsQueueParameters:
          BatchSize: ""
          MaximumBatchingWindowInSeconds: ""
        KinesisStreamParameters:
          StartingPosition: ""
          BatchSize: ""
          MaximumRetryAttempts: ""
          OnPartialBatchItemFailure: ""
          DeadLetterConfig:
            Arn: ""
          ParallelizationFactor: ""
          MaximumRecordAgeInSeconds: ""
          StartingPositionTimestamp: ""
          MaximumBatchingWindowInSeconds: ""
        FilterCriteria:
          Filters: ""
        ActiveMQBrokerParameters:
          BatchSize: ""
          QueueName: ""
          Credentials:
            BasicAuth: ""
          MaximumBatchingWindowInSeconds: ""
    DescribePipeResponse_TargetParameters:
      allOf:
      - $ref: '#/components/schemas/PipeTargetParameters'
      - description: The parameters required to set up a target for your pipe.
      example:
        HttpParameters:
          PathParameterValues: ""
          HeaderParameters: ""
          QueryStringParameters: ""
        StepFunctionStateMachineParameters:
          InvocationType: ""
        SqsQueueParameters:
          MessageGroupId: ""
          MessageDeduplicationId: ""
        CloudWatchLogsParameters:
          LogStreamName: ""
          Timestamp: ""
        KinesisStreamParameters:
          PartitionKey: ""
        InputTemplate: ""
        SageMakerPipelineParameters:
          PipelineParameterList: ""
        EventBridgeEventBusParameters:
          DetailType: ""
          EndpointId: ""
          Time: ""
          Resources: ""
          Source: ""
        BatchJobParameters:
          DependsOn: ""
          Parameters: ""
          ArrayProperties:
            Size: ""
          JobName: ""
          RetryStrategy:
            Attempts: ""
          ContainerOverrides:
            Command: ""
            Environment: ""
            InstanceType: ""
            ResourceRequirements: ""
          JobDefinition: ""
        EcsTaskParameters:
          PlatformVersion: ""
          Group: ""
          EnableECSManagedTags: ""
          EnableExecuteCommand: ""
          PlacementConstraints: ""
          PropagateTags: ""
          TaskCount: ""
          PlacementStrategy: ""
          CapacityProviderStrategy: ""
          LaunchType: ""
          ReferenceId: ""
          Overrides:
            ExecutionRoleArn: ""
            TaskRoleArn: ""
            Memory: ""
            Cpu: ""
            InferenceAcceleratorOverrides: ""
            EphemeralStorage:
              sizeInGiB: ""
            ContainerOverrides: ""
          NetworkConfiguration:
            awsvpcConfiguration:
              SecurityGroups: ""
              Subnets: ""
              AssignPublicIp: ""
          Tags: ""
          TaskDefinitionArn: ""
        LambdaFunctionParameters:
          InvocationType: ""
        RedshiftDataParameters:
          StatementName: ""
          Sqls: ""
          Database: ""
          SecretManagerArn: ""
          DbUser: ""
          WithEvent: ""
    EcsTaskOverride_EphemeralStorage:
      allOf:
      - $ref: '#/components/schemas/EcsEphemeralStorage'
      - description: <p>The ephemeral storage setting override for the task.</p> <note>
          <p>This parameter is only supported for tasks hosted on Fargate that use
          the following platform versions:</p> <ul> <li> <p>Linux platform version
          <code>1.4.0</code> or later.</p> </li> <li> <p>Windows platform version
          <code>1.0.0</code> or later.</p> </li> </ul> </note>
      example:
        sizeInGiB: ""
    NetworkConfiguration_awsvpcConfiguration:
      allOf:
      - $ref: '#/components/schemas/AwsVpcConfiguration'
      - description: "Use this structure to specify the VPC subnets and security groups\
          \ for the task, and whether a public IP address is to be used. This structure\
          \ is relevant only for ECS tasks that use the <code>awsvpc</code> network\
          \ mode."
      example:
        SecurityGroups: ""
        Subnets: ""
        AssignPublicIp: ""
    UpdatePipeRequest_SourceParameters:
      allOf:
      - $ref: '#/components/schemas/UpdatePipeSourceParameters'
      - description: The parameters required to set up a source for your pipe.
      example:
        ManagedStreamingKafkaParameters:
          BatchSize: ""
          Credentials:
            ClientCertificateTlsAuth: ""
            SaslScram512Auth: ""
          MaximumBatchingWindowInSeconds: ""
        DynamoDBStreamParameters:
          BatchSize: ""
          MaximumRetryAttempts: ""
          OnPartialBatchItemFailure: ""
          DeadLetterConfig:
            Arn: ""
          ParallelizationFactor: ""
          MaximumRecordAgeInSeconds: ""
          MaximumBatchingWindowInSeconds: ""
        SelfManagedKafkaParameters:
          BatchSize: ""
          Vpc:
            Subnets: ""
            SecurityGroup: ""
          Credentials:
            BasicAuth: ""
            SaslScram256Auth: ""
            ClientCertificateTlsAuth: ""
            SaslScram512Auth: ""
          ServerRootCaCertificate: ""
          MaximumBatchingWindowInSeconds: ""
        RabbitMQBrokerParameters:
          BatchSize: ""
          Credentials:
            BasicAuth: ""
          MaximumBatchingWindowInSeconds: ""
        SqsQueueParameters:
          BatchSize: ""
          MaximumBatchingWindowInSeconds: ""
        KinesisStreamParameters:
          BatchSize: ""
          MaximumRetryAttempts: ""
          OnPartialBatchItemFailure: ""
          DeadLetterConfig:
            Arn: ""
          ParallelizationFactor: ""
          MaximumRecordAgeInSeconds: ""
          MaximumBatchingWindowInSeconds: ""
        FilterCriteria:
          Filters: ""
        ActiveMQBrokerParameters:
          BatchSize: ""
          Credentials:
            BasicAuth: ""
          MaximumBatchingWindowInSeconds: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

