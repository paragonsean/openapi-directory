/*
 * Amazon EventBridge Pipes
 * Amazon EventBridge Pipes connects event sources to targets. Pipes reduces the need for specialized knowledge and integration code when developing event driven architectures. This helps ensures consistency across your companyâ€™s applications. With Pipes, the target can be any available EventBridge target. To set up a pipe, you select the event source, add optional event filtering, define optional enrichment, and select the target for the event data. 
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.MSKStartPosition;
import org.openapitools.client.model.PipeSourceManagedStreamingKafkaParametersCredentials;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PipeSourceManagedStreamingKafkaParameters
 */
public class PipeSourceManagedStreamingKafkaParametersTest {
    private final PipeSourceManagedStreamingKafkaParameters model = new PipeSourceManagedStreamingKafkaParameters();

    /**
     * Model tests for PipeSourceManagedStreamingKafkaParameters
     */
    @Test
    public void testPipeSourceManagedStreamingKafkaParameters() {
        // TODO: test PipeSourceManagedStreamingKafkaParameters
    }

    /**
     * Test the property 'batchSize'
     */
    @Test
    public void batchSizeTest() {
        // TODO: test batchSize
    }

    /**
     * Test the property 'consumerGroupID'
     */
    @Test
    public void consumerGroupIDTest() {
        // TODO: test consumerGroupID
    }

    /**
     * Test the property 'credentials'
     */
    @Test
    public void credentialsTest() {
        // TODO: test credentials
    }

    /**
     * Test the property 'maximumBatchingWindowInSeconds'
     */
    @Test
    public void maximumBatchingWindowInSecondsTest() {
        // TODO: test maximumBatchingWindowInSeconds
    }

    /**
     * Test the property 'startingPosition'
     */
    @Test
    public void startingPositionTest() {
        // TODO: test startingPosition
    }

    /**
     * Test the property 'topicName'
     */
    @Test
    public void topicNameTest() {
        // TODO: test topicName
    }

}
