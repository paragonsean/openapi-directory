/*
 * Amazon EventBridge Pipes
 * Amazon EventBridge Pipes connects event sources to targets. Pipes reduces the need for specialized knowledge and integration code when developing event driven architectures. This helps ensures consistency across your companyâ€™s applications. With Pipes, the target can be any available EventBridge target. To set up a pipe, you select the event source, add optional event filtering, define optional enrichment, and select the target for the event data. 
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.EcsTaskOverrideEphemeralStorage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PipeTargetEcsTaskParametersOverrides
 */
public class PipeTargetEcsTaskParametersOverridesTest {
    private final PipeTargetEcsTaskParametersOverrides model = new PipeTargetEcsTaskParametersOverrides();

    /**
     * Model tests for PipeTargetEcsTaskParametersOverrides
     */
    @Test
    public void testPipeTargetEcsTaskParametersOverrides() {
        // TODO: test PipeTargetEcsTaskParametersOverrides
    }

    /**
     * Test the property 'containerOverrides'
     */
    @Test
    public void containerOverridesTest() {
        // TODO: test containerOverrides
    }

    /**
     * Test the property 'cpu'
     */
    @Test
    public void cpuTest() {
        // TODO: test cpu
    }

    /**
     * Test the property 'ephemeralStorage'
     */
    @Test
    public void ephemeralStorageTest() {
        // TODO: test ephemeralStorage
    }

    /**
     * Test the property 'executionRoleArn'
     */
    @Test
    public void executionRoleArnTest() {
        // TODO: test executionRoleArn
    }

    /**
     * Test the property 'inferenceAcceleratorOverrides'
     */
    @Test
    public void inferenceAcceleratorOverridesTest() {
        // TODO: test inferenceAcceleratorOverrides
    }

    /**
     * Test the property 'memory'
     */
    @Test
    public void memoryTest() {
        // TODO: test memory
    }

    /**
     * Test the property 'taskRoleArn'
     */
    @Test
    public void taskRoleArnTest() {
        // TODO: test taskRoleArn
    }

}
