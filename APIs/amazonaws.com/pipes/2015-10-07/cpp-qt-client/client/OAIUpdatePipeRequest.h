/**
 * Amazon EventBridge Pipes
 * Amazon EventBridge Pipes connects event sources to targets. Pipes reduces the need for specialized knowledge and integration code when developing event driven architectures. This helps ensures consistency across your companyâ€™s applications. With Pipes, the target can be any available EventBridge target. To set up a pipe, you select the event source, add optional event filtering, define optional enrichment, and select the target for the event data. 
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdatePipeRequest.h
 *
 * 
 */

#ifndef OAIUpdatePipeRequest_H
#define OAIUpdatePipeRequest_H

#include <QJsonObject>

#include "OAIDescribePipeResponse_EnrichmentParameters.h"
#include "OAIDescribePipeResponse_TargetParameters.h"
#include "OAIRequestedPipeState.h"
#include "OAIUpdatePipeRequest_SourceParameters.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribePipeResponse_EnrichmentParameters;
class OAIUpdatePipeRequest_SourceParameters;
class OAIDescribePipeResponse_TargetParameters;

class OAIUpdatePipeRequest : public OAIObject {
public:
    OAIUpdatePipeRequest();
    OAIUpdatePipeRequest(QString json);
    ~OAIUpdatePipeRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIRequestedPipeState getDesiredState() const;
    void setDesiredState(const OAIRequestedPipeState &desired_state);
    bool is_desired_state_Set() const;
    bool is_desired_state_Valid() const;

    QString getEnrichment() const;
    void setEnrichment(const QString &enrichment);
    bool is_enrichment_Set() const;
    bool is_enrichment_Valid() const;

    OAIDescribePipeResponse_EnrichmentParameters getEnrichmentParameters() const;
    void setEnrichmentParameters(const OAIDescribePipeResponse_EnrichmentParameters &enrichment_parameters);
    bool is_enrichment_parameters_Set() const;
    bool is_enrichment_parameters_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    OAIUpdatePipeRequest_SourceParameters getSourceParameters() const;
    void setSourceParameters(const OAIUpdatePipeRequest_SourceParameters &source_parameters);
    bool is_source_parameters_Set() const;
    bool is_source_parameters_Valid() const;

    QString getTarget() const;
    void setTarget(const QString &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    OAIDescribePipeResponse_TargetParameters getTargetParameters() const;
    void setTargetParameters(const OAIDescribePipeResponse_TargetParameters &target_parameters);
    bool is_target_parameters_Set() const;
    bool is_target_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIRequestedPipeState m_desired_state;
    bool m_desired_state_isSet;
    bool m_desired_state_isValid;

    QString m_enrichment;
    bool m_enrichment_isSet;
    bool m_enrichment_isValid;

    OAIDescribePipeResponse_EnrichmentParameters m_enrichment_parameters;
    bool m_enrichment_parameters_isSet;
    bool m_enrichment_parameters_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    OAIUpdatePipeRequest_SourceParameters m_source_parameters;
    bool m_source_parameters_isSet;
    bool m_source_parameters_isValid;

    QString m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    OAIDescribePipeResponse_TargetParameters m_target_parameters;
    bool m_target_parameters_isSet;
    bool m_target_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdatePipeRequest)

#endif // OAIUpdatePipeRequest_H
