/**
 * Amazon EventBridge Pipes
 * Amazon EventBridge Pipes connects event sources to targets. Pipes reduces the need for specialized knowledge and integration code when developing event driven architectures. This helps ensures consistency across your companyâ€™s applications. With Pipes, the target can be any available EventBridge target. To set up a pipe, you select the event source, add optional event filtering, define optional enrichment, and select the target for the event data. 
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribePipeResponse_TargetParameters.h
 *
 * 
 */

#ifndef OAIDescribePipeResponse_TargetParameters_H
#define OAIDescribePipeResponse_TargetParameters_H

#include <QJsonObject>

#include "OAIUpdatePipe_request_TargetParameters_BatchJobParameters.h"
#include "OAIUpdatePipe_request_TargetParameters_CloudWatchLogsParameters.h"
#include "OAIUpdatePipe_request_TargetParameters_EcsTaskParameters.h"
#include "OAIUpdatePipe_request_TargetParameters_EventBridgeEventBusParameters.h"
#include "OAIUpdatePipe_request_TargetParameters_HttpParameters.h"
#include "OAIUpdatePipe_request_TargetParameters_KinesisStreamParameters.h"
#include "OAIUpdatePipe_request_TargetParameters_LambdaFunctionParameters.h"
#include "OAIUpdatePipe_request_TargetParameters_RedshiftDataParameters.h"
#include "OAIUpdatePipe_request_TargetParameters_SageMakerPipelineParameters.h"
#include "OAIUpdatePipe_request_TargetParameters_SqsQueueParameters.h"
#include "OAIUpdatePipe_request_TargetParameters_StepFunctionStateMachineParameters.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdatePipe_request_TargetParameters_BatchJobParameters;
class OAIUpdatePipe_request_TargetParameters_CloudWatchLogsParameters;
class OAIUpdatePipe_request_TargetParameters_EcsTaskParameters;
class OAIUpdatePipe_request_TargetParameters_EventBridgeEventBusParameters;
class OAIUpdatePipe_request_TargetParameters_HttpParameters;
class OAIUpdatePipe_request_TargetParameters_KinesisStreamParameters;
class OAIUpdatePipe_request_TargetParameters_LambdaFunctionParameters;
class OAIUpdatePipe_request_TargetParameters_RedshiftDataParameters;
class OAIUpdatePipe_request_TargetParameters_SageMakerPipelineParameters;
class OAIUpdatePipe_request_TargetParameters_SqsQueueParameters;
class OAIUpdatePipe_request_TargetParameters_StepFunctionStateMachineParameters;

class OAIDescribePipeResponse_TargetParameters : public OAIObject {
public:
    OAIDescribePipeResponse_TargetParameters();
    OAIDescribePipeResponse_TargetParameters(QString json);
    ~OAIDescribePipeResponse_TargetParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUpdatePipe_request_TargetParameters_BatchJobParameters getBatchJobParameters() const;
    void setBatchJobParameters(const OAIUpdatePipe_request_TargetParameters_BatchJobParameters &batch_job_parameters);
    bool is_batch_job_parameters_Set() const;
    bool is_batch_job_parameters_Valid() const;

    OAIUpdatePipe_request_TargetParameters_CloudWatchLogsParameters getCloudWatchLogsParameters() const;
    void setCloudWatchLogsParameters(const OAIUpdatePipe_request_TargetParameters_CloudWatchLogsParameters &cloud_watch_logs_parameters);
    bool is_cloud_watch_logs_parameters_Set() const;
    bool is_cloud_watch_logs_parameters_Valid() const;

    OAIUpdatePipe_request_TargetParameters_EcsTaskParameters getEcsTaskParameters() const;
    void setEcsTaskParameters(const OAIUpdatePipe_request_TargetParameters_EcsTaskParameters &ecs_task_parameters);
    bool is_ecs_task_parameters_Set() const;
    bool is_ecs_task_parameters_Valid() const;

    OAIUpdatePipe_request_TargetParameters_EventBridgeEventBusParameters getEventBridgeEventBusParameters() const;
    void setEventBridgeEventBusParameters(const OAIUpdatePipe_request_TargetParameters_EventBridgeEventBusParameters &event_bridge_event_bus_parameters);
    bool is_event_bridge_event_bus_parameters_Set() const;
    bool is_event_bridge_event_bus_parameters_Valid() const;

    OAIUpdatePipe_request_TargetParameters_HttpParameters getHttpParameters() const;
    void setHttpParameters(const OAIUpdatePipe_request_TargetParameters_HttpParameters &http_parameters);
    bool is_http_parameters_Set() const;
    bool is_http_parameters_Valid() const;

    QString getInputTemplate() const;
    void setInputTemplate(const QString &input_template);
    bool is_input_template_Set() const;
    bool is_input_template_Valid() const;

    OAIUpdatePipe_request_TargetParameters_KinesisStreamParameters getKinesisStreamParameters() const;
    void setKinesisStreamParameters(const OAIUpdatePipe_request_TargetParameters_KinesisStreamParameters &kinesis_stream_parameters);
    bool is_kinesis_stream_parameters_Set() const;
    bool is_kinesis_stream_parameters_Valid() const;

    OAIUpdatePipe_request_TargetParameters_LambdaFunctionParameters getLambdaFunctionParameters() const;
    void setLambdaFunctionParameters(const OAIUpdatePipe_request_TargetParameters_LambdaFunctionParameters &lambda_function_parameters);
    bool is_lambda_function_parameters_Set() const;
    bool is_lambda_function_parameters_Valid() const;

    OAIUpdatePipe_request_TargetParameters_RedshiftDataParameters getRedshiftDataParameters() const;
    void setRedshiftDataParameters(const OAIUpdatePipe_request_TargetParameters_RedshiftDataParameters &redshift_data_parameters);
    bool is_redshift_data_parameters_Set() const;
    bool is_redshift_data_parameters_Valid() const;

    OAIUpdatePipe_request_TargetParameters_SageMakerPipelineParameters getSageMakerPipelineParameters() const;
    void setSageMakerPipelineParameters(const OAIUpdatePipe_request_TargetParameters_SageMakerPipelineParameters &sage_maker_pipeline_parameters);
    bool is_sage_maker_pipeline_parameters_Set() const;
    bool is_sage_maker_pipeline_parameters_Valid() const;

    OAIUpdatePipe_request_TargetParameters_SqsQueueParameters getSqsQueueParameters() const;
    void setSqsQueueParameters(const OAIUpdatePipe_request_TargetParameters_SqsQueueParameters &sqs_queue_parameters);
    bool is_sqs_queue_parameters_Set() const;
    bool is_sqs_queue_parameters_Valid() const;

    OAIUpdatePipe_request_TargetParameters_StepFunctionStateMachineParameters getStepFunctionStateMachineParameters() const;
    void setStepFunctionStateMachineParameters(const OAIUpdatePipe_request_TargetParameters_StepFunctionStateMachineParameters &step_function_state_machine_parameters);
    bool is_step_function_state_machine_parameters_Set() const;
    bool is_step_function_state_machine_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUpdatePipe_request_TargetParameters_BatchJobParameters m_batch_job_parameters;
    bool m_batch_job_parameters_isSet;
    bool m_batch_job_parameters_isValid;

    OAIUpdatePipe_request_TargetParameters_CloudWatchLogsParameters m_cloud_watch_logs_parameters;
    bool m_cloud_watch_logs_parameters_isSet;
    bool m_cloud_watch_logs_parameters_isValid;

    OAIUpdatePipe_request_TargetParameters_EcsTaskParameters m_ecs_task_parameters;
    bool m_ecs_task_parameters_isSet;
    bool m_ecs_task_parameters_isValid;

    OAIUpdatePipe_request_TargetParameters_EventBridgeEventBusParameters m_event_bridge_event_bus_parameters;
    bool m_event_bridge_event_bus_parameters_isSet;
    bool m_event_bridge_event_bus_parameters_isValid;

    OAIUpdatePipe_request_TargetParameters_HttpParameters m_http_parameters;
    bool m_http_parameters_isSet;
    bool m_http_parameters_isValid;

    QString m_input_template;
    bool m_input_template_isSet;
    bool m_input_template_isValid;

    OAIUpdatePipe_request_TargetParameters_KinesisStreamParameters m_kinesis_stream_parameters;
    bool m_kinesis_stream_parameters_isSet;
    bool m_kinesis_stream_parameters_isValid;

    OAIUpdatePipe_request_TargetParameters_LambdaFunctionParameters m_lambda_function_parameters;
    bool m_lambda_function_parameters_isSet;
    bool m_lambda_function_parameters_isValid;

    OAIUpdatePipe_request_TargetParameters_RedshiftDataParameters m_redshift_data_parameters;
    bool m_redshift_data_parameters_isSet;
    bool m_redshift_data_parameters_isValid;

    OAIUpdatePipe_request_TargetParameters_SageMakerPipelineParameters m_sage_maker_pipeline_parameters;
    bool m_sage_maker_pipeline_parameters_isSet;
    bool m_sage_maker_pipeline_parameters_isValid;

    OAIUpdatePipe_request_TargetParameters_SqsQueueParameters m_sqs_queue_parameters;
    bool m_sqs_queue_parameters_isSet;
    bool m_sqs_queue_parameters_isValid;

    OAIUpdatePipe_request_TargetParameters_StepFunctionStateMachineParameters m_step_function_state_machine_parameters;
    bool m_step_function_state_machine_parameters_isSet;
    bool m_step_function_state_machine_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribePipeResponse_TargetParameters)

#endif // OAIDescribePipeResponse_TargetParameters_H
