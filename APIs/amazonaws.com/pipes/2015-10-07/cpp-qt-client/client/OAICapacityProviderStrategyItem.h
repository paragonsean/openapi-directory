/**
 * Amazon EventBridge Pipes
 * Amazon EventBridge Pipes connects event sources to targets. Pipes reduces the need for specialized knowledge and integration code when developing event driven architectures. This helps ensures consistency across your companyâ€™s applications. With Pipes, the target can be any available EventBridge target. To set up a pipe, you select the event source, add optional event filtering, define optional enrichment, and select the target for the event data. 
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICapacityProviderStrategyItem.h
 *
 * The details of a capacity provider strategy. To learn more, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CapacityProviderStrategyItem.html\&quot;&gt;CapacityProviderStrategyItem&lt;/a&gt; in the Amazon ECS API Reference.
 */

#ifndef OAICapacityProviderStrategyItem_H
#define OAICapacityProviderStrategyItem_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICapacityProviderStrategyItem : public OAIObject {
public:
    OAICapacityProviderStrategyItem();
    OAICapacityProviderStrategyItem(QString json);
    ~OAICapacityProviderStrategyItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBase() const;
    void setBase(const qint32 &base);
    bool is_base_Set() const;
    bool is_base_Valid() const;

    QString getCapacityProvider() const;
    void setCapacityProvider(const QString &capacity_provider);
    bool is_capacity_provider_Set() const;
    bool is_capacity_provider_Valid() const;

    qint32 getWeight() const;
    void setWeight(const qint32 &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_base;
    bool m_base_isSet;
    bool m_base_isValid;

    QString m_capacity_provider;
    bool m_capacity_provider_isSet;
    bool m_capacity_provider_isValid;

    qint32 m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICapacityProviderStrategyItem)

#endif // OAICapacityProviderStrategyItem_H
