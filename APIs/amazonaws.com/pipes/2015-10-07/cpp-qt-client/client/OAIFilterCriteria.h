/**
 * Amazon EventBridge Pipes
 * Amazon EventBridge Pipes connects event sources to targets. Pipes reduces the need for specialized knowledge and integration code when developing event driven architectures. This helps ensures consistency across your companyâ€™s applications. With Pipes, the target can be any available EventBridge target. To set up a pipe, you select the event source, add optional event filtering, define optional enrichment, and select the target for the event data. 
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilterCriteria.h
 *
 * The collection of event patterns used to filter events. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html\&quot;&gt;Events and Event Patterns&lt;/a&gt; in the &lt;i&gt;Amazon EventBridge User Guide&lt;/i&gt;.
 */

#ifndef OAIFilterCriteria_H
#define OAIFilterCriteria_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFilterCriteria : public OAIObject {
public:
    OAIFilterCriteria();
    OAIFilterCriteria(QString json);
    ~OAIFilterCriteria() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getFilters() const;
    void setFilters(const QList &filters);
    bool is_filters_Set() const;
    bool is_filters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_filters;
    bool m_filters_isSet;
    bool m_filters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilterCriteria)

#endif // OAIFilterCriteria_H
