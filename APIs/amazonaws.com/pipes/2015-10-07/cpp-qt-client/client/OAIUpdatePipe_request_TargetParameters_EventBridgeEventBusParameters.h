/**
 * Amazon EventBridge Pipes
 * Amazon EventBridge Pipes connects event sources to targets. Pipes reduces the need for specialized knowledge and integration code when developing event driven architectures. This helps ensures consistency across your companyâ€™s applications. With Pipes, the target can be any available EventBridge target. To set up a pipe, you select the event source, add optional event filtering, define optional enrichment, and select the target for the event data. 
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdatePipe_request_TargetParameters_EventBridgeEventBusParameters.h
 *
 * 
 */

#ifndef OAIUpdatePipe_request_TargetParameters_EventBridgeEventBusParameters_H
#define OAIUpdatePipe_request_TargetParameters_EventBridgeEventBusParameters_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdatePipe_request_TargetParameters_EventBridgeEventBusParameters : public OAIObject {
public:
    OAIUpdatePipe_request_TargetParameters_EventBridgeEventBusParameters();
    OAIUpdatePipe_request_TargetParameters_EventBridgeEventBusParameters(QString json);
    ~OAIUpdatePipe_request_TargetParameters_EventBridgeEventBusParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDetailType() const;
    void setDetailType(const QString &detail_type);
    bool is_detail_type_Set() const;
    bool is_detail_type_Valid() const;

    QString getEndpointId() const;
    void setEndpointId(const QString &endpoint_id);
    bool is_endpoint_id_Set() const;
    bool is_endpoint_id_Valid() const;

    QList getResources() const;
    void setResources(const QList &resources);
    bool is_resources_Set() const;
    bool is_resources_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getTime() const;
    void setTime(const QString &time);
    bool is_time_Set() const;
    bool is_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_detail_type;
    bool m_detail_type_isSet;
    bool m_detail_type_isValid;

    QString m_endpoint_id;
    bool m_endpoint_id_isSet;
    bool m_endpoint_id_isValid;

    QList m_resources;
    bool m_resources_isSet;
    bool m_resources_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_time;
    bool m_time_isSet;
    bool m_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdatePipe_request_TargetParameters_EventBridgeEventBusParameters)

#endif // OAIUpdatePipe_request_TargetParameters_EventBridgeEventBusParameters_H
