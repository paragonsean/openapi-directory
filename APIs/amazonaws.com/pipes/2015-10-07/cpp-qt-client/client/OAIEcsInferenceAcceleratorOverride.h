/**
 * Amazon EventBridge Pipes
 * Amazon EventBridge Pipes connects event sources to targets. Pipes reduces the need for specialized knowledge and integration code when developing event driven architectures. This helps ensures consistency across your companyâ€™s applications. With Pipes, the target can be any available EventBridge target. To set up a pipe, you select the event source, add optional event filtering, define optional enrichment, and select the target for the event data. 
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEcsInferenceAcceleratorOverride.h
 *
 * Details on an Elastic Inference accelerator task override. This parameter is used to override the Elastic Inference accelerator specified in the task definition. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonECS/latest/userguide/ecs-inference.html\&quot;&gt;Working with Amazon Elastic Inference on Amazon ECS&lt;/a&gt; in the &lt;i&gt;Amazon Elastic Container Service Developer Guide&lt;/i&gt;.
 */

#ifndef OAIEcsInferenceAcceleratorOverride_H
#define OAIEcsInferenceAcceleratorOverride_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEcsInferenceAcceleratorOverride : public OAIObject {
public:
    OAIEcsInferenceAcceleratorOverride();
    OAIEcsInferenceAcceleratorOverride(QString json);
    ~OAIEcsInferenceAcceleratorOverride() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDeviceName() const;
    void setDeviceName(const QString &device_name);
    bool is_device_name_Set() const;
    bool is_device_name_Valid() const;

    QString getDeviceType() const;
    void setDeviceType(const QString &device_type);
    bool is_device_type_Set() const;
    bool is_device_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_device_name;
    bool m_device_name_isSet;
    bool m_device_name_isValid;

    QString m_device_type;
    bool m_device_type_isSet;
    bool m_device_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEcsInferenceAcceleratorOverride)

#endif // OAIEcsInferenceAcceleratorOverride_H
