/*
 * AWS Step Functions
 * <fullname>Step Functions</fullname> <p>Step Functions is a service that lets you coordinate the components of distributed applications and microservices using visual workflows.</p> <p>You can use Step Functions to build applications from individual components, each of which performs a discrete function, or <i>task</i>, allowing you to scale and change applications quickly. Step Functions provides a console that helps visualize the components of your application as a series of steps. Step Functions automatically triggers and tracks each step, and retries steps when there are errors, so your application executes predictably and in the right order every time. Step Functions logs the state of each step, so you can quickly diagnose and debug any issues.</p> <p>Step Functions manages operations and underlying infrastructure to ensure your application is available at any scale. You can run tasks on Amazon Web Services, your own servers, or any system that has access to Amazon Web Services. You can access and use Step Functions using the console, the Amazon Web Services SDKs, or an HTTP API. For more information about Step Functions, see the <i> <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html\">Step Functions Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ExecutionStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ExecutionListItem
 */
public class ExecutionListItemTest {
    private final ExecutionListItem model = new ExecutionListItem();

    /**
     * Model tests for ExecutionListItem
     */
    @Test
    public void testExecutionListItem() {
        // TODO: test ExecutionListItem
    }

    /**
     * Test the property 'executionArn'
     */
    @Test
    public void executionArnTest() {
        // TODO: test executionArn
    }

    /**
     * Test the property 'stateMachineArn'
     */
    @Test
    public void stateMachineArnTest() {
        // TODO: test stateMachineArn
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'startDate'
     */
    @Test
    public void startDateTest() {
        // TODO: test startDate
    }

    /**
     * Test the property 'stopDate'
     */
    @Test
    public void stopDateTest() {
        // TODO: test stopDate
    }

    /**
     * Test the property 'mapRunArn'
     */
    @Test
    public void mapRunArnTest() {
        // TODO: test mapRunArn
    }

    /**
     * Test the property 'itemCount'
     */
    @Test
    public void itemCountTest() {
        // TODO: test itemCount
    }

    /**
     * Test the property 'stateMachineVersionArn'
     */
    @Test
    public void stateMachineVersionArnTest() {
        // TODO: test stateMachineVersionArn
    }

    /**
     * Test the property 'stateMachineAliasArn'
     */
    @Test
    public void stateMachineAliasArnTest() {
        // TODO: test stateMachineAliasArn
    }

}
