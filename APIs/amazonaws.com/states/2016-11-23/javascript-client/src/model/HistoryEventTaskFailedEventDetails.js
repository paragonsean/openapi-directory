/**
 * AWS Step Functions
 * <fullname>Step Functions</fullname> <p>Step Functions is a service that lets you coordinate the components of distributed applications and microservices using visual workflows.</p> <p>You can use Step Functions to build applications from individual components, each of which performs a discrete function, or <i>task</i>, allowing you to scale and change applications quickly. Step Functions provides a console that helps visualize the components of your application as a series of steps. Step Functions automatically triggers and tracks each step, and retries steps when there are errors, so your application executes predictably and in the right order every time. Step Functions logs the state of each step, so you can quickly diagnose and debug any issues.</p> <p>Step Functions manages operations and underlying infrastructure to ensure your application is available at any scale. You can run tasks on Amazon Web Services, your own servers, or any system that has access to Amazon Web Services. You can access and use Step Functions using the console, the Amazon Web Services SDKs, or an HTTP API. For more information about Step Functions, see the <i> <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html\">Step Functions Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TaskFailedEventDetails from './TaskFailedEventDetails';

/**
 * The HistoryEventTaskFailedEventDetails model module.
 * @module model/HistoryEventTaskFailedEventDetails
 * @version 2016-11-23
 */
class HistoryEventTaskFailedEventDetails {
    /**
     * Constructs a new <code>HistoryEventTaskFailedEventDetails</code>.
     * @alias module:model/HistoryEventTaskFailedEventDetails
     * @implements module:model/TaskFailedEventDetails
     * @param resourceType {String} 
     * @param resource {String} 
     */
    constructor(resourceType, resource) { 
        TaskFailedEventDetails.initialize(this, resourceType, resource);
        HistoryEventTaskFailedEventDetails.initialize(this, resourceType, resource);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resourceType, resource) { 
        obj['resourceType'] = resourceType;
        obj['resource'] = resource;
    }

    /**
     * Constructs a <code>HistoryEventTaskFailedEventDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistoryEventTaskFailedEventDetails} obj Optional instance to populate.
     * @return {module:model/HistoryEventTaskFailedEventDetails} The populated <code>HistoryEventTaskFailedEventDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistoryEventTaskFailedEventDetails();
            TaskFailedEventDetails.constructFromObject(data, obj);

            if (data.hasOwnProperty('resourceType')) {
                obj['resourceType'] = ApiClient.convertToType(data['resourceType'], 'String');
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = ApiClient.convertToType(data['resource'], 'String');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('cause')) {
                obj['cause'] = ApiClient.convertToType(data['cause'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HistoryEventTaskFailedEventDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HistoryEventTaskFailedEventDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HistoryEventTaskFailedEventDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `resourceType`
        if (data['resourceType']) { // data not null
          String.validateJSON(data['resourceType']);
        }
        // validate the optional field `resource`
        if (data['resource']) { // data not null
          String.validateJSON(data['resource']);
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          String.validateJSON(data['error']);
        }
        // validate the optional field `cause`
        if (data['cause']) { // data not null
          String.validateJSON(data['cause']);
        }

        return true;
    }


}

HistoryEventTaskFailedEventDetails.RequiredProperties = ["resourceType", "resource"];

/**
 * @member {String} resourceType
 */
HistoryEventTaskFailedEventDetails.prototype['resourceType'] = undefined;

/**
 * @member {String} resource
 */
HistoryEventTaskFailedEventDetails.prototype['resource'] = undefined;

/**
 * @member {String} error
 */
HistoryEventTaskFailedEventDetails.prototype['error'] = undefined;

/**
 * @member {String} cause
 */
HistoryEventTaskFailedEventDetails.prototype['cause'] = undefined;


// Implement TaskFailedEventDetails interface:
/**
 * @member {String} resourceType
 */
TaskFailedEventDetails.prototype['resourceType'] = undefined;
/**
 * @member {String} resource
 */
TaskFailedEventDetails.prototype['resource'] = undefined;
/**
 * @member {String} error
 */
TaskFailedEventDetails.prototype['error'] = undefined;
/**
 * @member {String} cause
 */
TaskFailedEventDetails.prototype['cause'] = undefined;




export default HistoryEventTaskFailedEventDetails;

