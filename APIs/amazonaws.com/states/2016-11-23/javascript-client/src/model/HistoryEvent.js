/**
 * AWS Step Functions
 * <fullname>Step Functions</fullname> <p>Step Functions is a service that lets you coordinate the components of distributed applications and microservices using visual workflows.</p> <p>You can use Step Functions to build applications from individual components, each of which performs a discrete function, or <i>task</i>, allowing you to scale and change applications quickly. Step Functions provides a console that helps visualize the components of your application as a series of steps. Step Functions automatically triggers and tracks each step, and retries steps when there are errors, so your application executes predictably and in the right order every time. Step Functions logs the state of each step, so you can quickly diagnose and debug any issues.</p> <p>Step Functions manages operations and underlying infrastructure to ensure your application is available at any scale. You can run tasks on Amazon Web Services, your own servers, or any system that has access to Amazon Web Services. You can access and use Step Functions using the console, the Amazon Web Services SDKs, or an HTTP API. For more information about Step Functions, see the <i> <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html\">Step Functions Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ActivityFailedEventDetails from './ActivityFailedEventDetails';
import ActivityScheduledEventDetails from './ActivityScheduledEventDetails';
import ActivityStartedEventDetails from './ActivityStartedEventDetails';
import ActivitySucceededEventDetails from './ActivitySucceededEventDetails';
import ActivityTimedOutEventDetails from './ActivityTimedOutEventDetails';
import ExecutionAbortedEventDetails from './ExecutionAbortedEventDetails';
import ExecutionFailedEventDetails from './ExecutionFailedEventDetails';
import ExecutionStartedEventDetails from './ExecutionStartedEventDetails';
import ExecutionSucceededEventDetails from './ExecutionSucceededEventDetails';
import ExecutionTimedOutEventDetails from './ExecutionTimedOutEventDetails';
import HistoryEventActivityScheduleFailedEventDetails from './HistoryEventActivityScheduleFailedEventDetails';
import HistoryEventLambdaFunctionStartFailedEventDetails from './HistoryEventLambdaFunctionStartFailedEventDetails';
import HistoryEventLambdaFunctionSucceededEventDetails from './HistoryEventLambdaFunctionSucceededEventDetails';
import HistoryEventMapIterationAbortedEventDetails from './HistoryEventMapIterationAbortedEventDetails';
import HistoryEventMapIterationFailedEventDetails from './HistoryEventMapIterationFailedEventDetails';
import HistoryEventMapIterationStartedEventDetails from './HistoryEventMapIterationStartedEventDetails';
import HistoryEventMapIterationSucceededEventDetails from './HistoryEventMapIterationSucceededEventDetails';
import HistoryEventMapRunFailedEventDetails from './HistoryEventMapRunFailedEventDetails';
import HistoryEventMapRunStartedEventDetails from './HistoryEventMapRunStartedEventDetails';
import HistoryEventMapStateStartedEventDetails from './HistoryEventMapStateStartedEventDetails';
import HistoryEventTaskFailedEventDetails from './HistoryEventTaskFailedEventDetails';
import HistoryEventTaskScheduledEventDetails from './HistoryEventTaskScheduledEventDetails';
import HistoryEventTaskStartFailedEventDetails from './HistoryEventTaskStartFailedEventDetails';
import HistoryEventTaskStartedEventDetails from './HistoryEventTaskStartedEventDetails';
import HistoryEventTaskSubmitFailedEventDetails from './HistoryEventTaskSubmitFailedEventDetails';
import HistoryEventTaskSubmittedEventDetails from './HistoryEventTaskSubmittedEventDetails';
import HistoryEventTaskSucceededEventDetails from './HistoryEventTaskSucceededEventDetails';
import HistoryEventTaskTimedOutEventDetails from './HistoryEventTaskTimedOutEventDetails';
import HistoryEventType from './HistoryEventType';
import LambdaFunctionFailedEventDetails from './LambdaFunctionFailedEventDetails';
import LambdaFunctionScheduleFailedEventDetails from './LambdaFunctionScheduleFailedEventDetails';
import LambdaFunctionScheduledEventDetails from './LambdaFunctionScheduledEventDetails';
import LambdaFunctionTimedOutEventDetails from './LambdaFunctionTimedOutEventDetails';
import StateEnteredEventDetails from './StateEnteredEventDetails';
import StateExitedEventDetails from './StateExitedEventDetails';

/**
 * The HistoryEvent model module.
 * @module model/HistoryEvent
 * @version 2016-11-23
 */
class HistoryEvent {
    /**
     * Constructs a new <code>HistoryEvent</code>.
     * Contains details about the events of an execution.
     * @alias module:model/HistoryEvent
     * @param timestamp {Date} 
     * @param type {module:model/HistoryEventType} 
     * @param id {Number} 
     */
    constructor(timestamp, type, id) { 
        
        HistoryEvent.initialize(this, timestamp, type, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, timestamp, type, id) { 
        obj['timestamp'] = timestamp;
        obj['type'] = type;
        obj['id'] = id;
    }

    /**
     * Constructs a <code>HistoryEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistoryEvent} obj Optional instance to populate.
     * @return {module:model/HistoryEvent} The populated <code>HistoryEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistoryEvent();

            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], HistoryEventType);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('previousEventId')) {
                obj['previousEventId'] = ApiClient.convertToType(data['previousEventId'], 'Number');
            }
            if (data.hasOwnProperty('activityFailedEventDetails')) {
                obj['activityFailedEventDetails'] = ActivityFailedEventDetails.constructFromObject(data['activityFailedEventDetails']);
            }
            if (data.hasOwnProperty('activityScheduleFailedEventDetails')) {
                obj['activityScheduleFailedEventDetails'] = HistoryEventActivityScheduleFailedEventDetails.constructFromObject(data['activityScheduleFailedEventDetails']);
            }
            if (data.hasOwnProperty('activityScheduledEventDetails')) {
                obj['activityScheduledEventDetails'] = ActivityScheduledEventDetails.constructFromObject(data['activityScheduledEventDetails']);
            }
            if (data.hasOwnProperty('activityStartedEventDetails')) {
                obj['activityStartedEventDetails'] = ActivityStartedEventDetails.constructFromObject(data['activityStartedEventDetails']);
            }
            if (data.hasOwnProperty('activitySucceededEventDetails')) {
                obj['activitySucceededEventDetails'] = ActivitySucceededEventDetails.constructFromObject(data['activitySucceededEventDetails']);
            }
            if (data.hasOwnProperty('activityTimedOutEventDetails')) {
                obj['activityTimedOutEventDetails'] = ActivityTimedOutEventDetails.constructFromObject(data['activityTimedOutEventDetails']);
            }
            if (data.hasOwnProperty('taskFailedEventDetails')) {
                obj['taskFailedEventDetails'] = HistoryEventTaskFailedEventDetails.constructFromObject(data['taskFailedEventDetails']);
            }
            if (data.hasOwnProperty('taskScheduledEventDetails')) {
                obj['taskScheduledEventDetails'] = HistoryEventTaskScheduledEventDetails.constructFromObject(data['taskScheduledEventDetails']);
            }
            if (data.hasOwnProperty('taskStartFailedEventDetails')) {
                obj['taskStartFailedEventDetails'] = HistoryEventTaskStartFailedEventDetails.constructFromObject(data['taskStartFailedEventDetails']);
            }
            if (data.hasOwnProperty('taskStartedEventDetails')) {
                obj['taskStartedEventDetails'] = HistoryEventTaskStartedEventDetails.constructFromObject(data['taskStartedEventDetails']);
            }
            if (data.hasOwnProperty('taskSubmitFailedEventDetails')) {
                obj['taskSubmitFailedEventDetails'] = HistoryEventTaskSubmitFailedEventDetails.constructFromObject(data['taskSubmitFailedEventDetails']);
            }
            if (data.hasOwnProperty('taskSubmittedEventDetails')) {
                obj['taskSubmittedEventDetails'] = HistoryEventTaskSubmittedEventDetails.constructFromObject(data['taskSubmittedEventDetails']);
            }
            if (data.hasOwnProperty('taskSucceededEventDetails')) {
                obj['taskSucceededEventDetails'] = HistoryEventTaskSucceededEventDetails.constructFromObject(data['taskSucceededEventDetails']);
            }
            if (data.hasOwnProperty('taskTimedOutEventDetails')) {
                obj['taskTimedOutEventDetails'] = HistoryEventTaskTimedOutEventDetails.constructFromObject(data['taskTimedOutEventDetails']);
            }
            if (data.hasOwnProperty('executionFailedEventDetails')) {
                obj['executionFailedEventDetails'] = ExecutionFailedEventDetails.constructFromObject(data['executionFailedEventDetails']);
            }
            if (data.hasOwnProperty('executionStartedEventDetails')) {
                obj['executionStartedEventDetails'] = ExecutionStartedEventDetails.constructFromObject(data['executionStartedEventDetails']);
            }
            if (data.hasOwnProperty('executionSucceededEventDetails')) {
                obj['executionSucceededEventDetails'] = ExecutionSucceededEventDetails.constructFromObject(data['executionSucceededEventDetails']);
            }
            if (data.hasOwnProperty('executionAbortedEventDetails')) {
                obj['executionAbortedEventDetails'] = ExecutionAbortedEventDetails.constructFromObject(data['executionAbortedEventDetails']);
            }
            if (data.hasOwnProperty('executionTimedOutEventDetails')) {
                obj['executionTimedOutEventDetails'] = ExecutionTimedOutEventDetails.constructFromObject(data['executionTimedOutEventDetails']);
            }
            if (data.hasOwnProperty('mapStateStartedEventDetails')) {
                obj['mapStateStartedEventDetails'] = HistoryEventMapStateStartedEventDetails.constructFromObject(data['mapStateStartedEventDetails']);
            }
            if (data.hasOwnProperty('mapIterationStartedEventDetails')) {
                obj['mapIterationStartedEventDetails'] = HistoryEventMapIterationStartedEventDetails.constructFromObject(data['mapIterationStartedEventDetails']);
            }
            if (data.hasOwnProperty('mapIterationSucceededEventDetails')) {
                obj['mapIterationSucceededEventDetails'] = HistoryEventMapIterationSucceededEventDetails.constructFromObject(data['mapIterationSucceededEventDetails']);
            }
            if (data.hasOwnProperty('mapIterationFailedEventDetails')) {
                obj['mapIterationFailedEventDetails'] = HistoryEventMapIterationFailedEventDetails.constructFromObject(data['mapIterationFailedEventDetails']);
            }
            if (data.hasOwnProperty('mapIterationAbortedEventDetails')) {
                obj['mapIterationAbortedEventDetails'] = HistoryEventMapIterationAbortedEventDetails.constructFromObject(data['mapIterationAbortedEventDetails']);
            }
            if (data.hasOwnProperty('lambdaFunctionFailedEventDetails')) {
                obj['lambdaFunctionFailedEventDetails'] = LambdaFunctionFailedEventDetails.constructFromObject(data['lambdaFunctionFailedEventDetails']);
            }
            if (data.hasOwnProperty('lambdaFunctionScheduleFailedEventDetails')) {
                obj['lambdaFunctionScheduleFailedEventDetails'] = LambdaFunctionScheduleFailedEventDetails.constructFromObject(data['lambdaFunctionScheduleFailedEventDetails']);
            }
            if (data.hasOwnProperty('lambdaFunctionScheduledEventDetails')) {
                obj['lambdaFunctionScheduledEventDetails'] = LambdaFunctionScheduledEventDetails.constructFromObject(data['lambdaFunctionScheduledEventDetails']);
            }
            if (data.hasOwnProperty('lambdaFunctionStartFailedEventDetails')) {
                obj['lambdaFunctionStartFailedEventDetails'] = HistoryEventLambdaFunctionStartFailedEventDetails.constructFromObject(data['lambdaFunctionStartFailedEventDetails']);
            }
            if (data.hasOwnProperty('lambdaFunctionSucceededEventDetails')) {
                obj['lambdaFunctionSucceededEventDetails'] = HistoryEventLambdaFunctionSucceededEventDetails.constructFromObject(data['lambdaFunctionSucceededEventDetails']);
            }
            if (data.hasOwnProperty('lambdaFunctionTimedOutEventDetails')) {
                obj['lambdaFunctionTimedOutEventDetails'] = LambdaFunctionTimedOutEventDetails.constructFromObject(data['lambdaFunctionTimedOutEventDetails']);
            }
            if (data.hasOwnProperty('stateEnteredEventDetails')) {
                obj['stateEnteredEventDetails'] = StateEnteredEventDetails.constructFromObject(data['stateEnteredEventDetails']);
            }
            if (data.hasOwnProperty('stateExitedEventDetails')) {
                obj['stateExitedEventDetails'] = StateExitedEventDetails.constructFromObject(data['stateExitedEventDetails']);
            }
            if (data.hasOwnProperty('mapRunStartedEventDetails')) {
                obj['mapRunStartedEventDetails'] = HistoryEventMapRunStartedEventDetails.constructFromObject(data['mapRunStartedEventDetails']);
            }
            if (data.hasOwnProperty('mapRunFailedEventDetails')) {
                obj['mapRunFailedEventDetails'] = HistoryEventMapRunFailedEventDetails.constructFromObject(data['mapRunFailedEventDetails']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HistoryEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HistoryEvent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HistoryEvent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `timestamp`
        if (data['timestamp']) { // data not null
          Date.validateJSON(data['timestamp']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          HistoryEventType.validateJSON(data['type']);
        }
        // validate the optional field `id`
        if (data['id']) { // data not null
          Number.validateJSON(data['id']);
        }
        // validate the optional field `previousEventId`
        if (data['previousEventId']) { // data not null
          Number.validateJSON(data['previousEventId']);
        }
        // validate the optional field `activityFailedEventDetails`
        if (data['activityFailedEventDetails']) { // data not null
          ActivityFailedEventDetails.validateJSON(data['activityFailedEventDetails']);
        }
        // validate the optional field `activityScheduleFailedEventDetails`
        if (data['activityScheduleFailedEventDetails']) { // data not null
          HistoryEventActivityScheduleFailedEventDetails.validateJSON(data['activityScheduleFailedEventDetails']);
        }
        // validate the optional field `activityScheduledEventDetails`
        if (data['activityScheduledEventDetails']) { // data not null
          ActivityScheduledEventDetails.validateJSON(data['activityScheduledEventDetails']);
        }
        // validate the optional field `activityStartedEventDetails`
        if (data['activityStartedEventDetails']) { // data not null
          ActivityStartedEventDetails.validateJSON(data['activityStartedEventDetails']);
        }
        // validate the optional field `activitySucceededEventDetails`
        if (data['activitySucceededEventDetails']) { // data not null
          ActivitySucceededEventDetails.validateJSON(data['activitySucceededEventDetails']);
        }
        // validate the optional field `activityTimedOutEventDetails`
        if (data['activityTimedOutEventDetails']) { // data not null
          ActivityTimedOutEventDetails.validateJSON(data['activityTimedOutEventDetails']);
        }
        // validate the optional field `taskFailedEventDetails`
        if (data['taskFailedEventDetails']) { // data not null
          HistoryEventTaskFailedEventDetails.validateJSON(data['taskFailedEventDetails']);
        }
        // validate the optional field `taskScheduledEventDetails`
        if (data['taskScheduledEventDetails']) { // data not null
          HistoryEventTaskScheduledEventDetails.validateJSON(data['taskScheduledEventDetails']);
        }
        // validate the optional field `taskStartFailedEventDetails`
        if (data['taskStartFailedEventDetails']) { // data not null
          HistoryEventTaskStartFailedEventDetails.validateJSON(data['taskStartFailedEventDetails']);
        }
        // validate the optional field `taskStartedEventDetails`
        if (data['taskStartedEventDetails']) { // data not null
          HistoryEventTaskStartedEventDetails.validateJSON(data['taskStartedEventDetails']);
        }
        // validate the optional field `taskSubmitFailedEventDetails`
        if (data['taskSubmitFailedEventDetails']) { // data not null
          HistoryEventTaskSubmitFailedEventDetails.validateJSON(data['taskSubmitFailedEventDetails']);
        }
        // validate the optional field `taskSubmittedEventDetails`
        if (data['taskSubmittedEventDetails']) { // data not null
          HistoryEventTaskSubmittedEventDetails.validateJSON(data['taskSubmittedEventDetails']);
        }
        // validate the optional field `taskSucceededEventDetails`
        if (data['taskSucceededEventDetails']) { // data not null
          HistoryEventTaskSucceededEventDetails.validateJSON(data['taskSucceededEventDetails']);
        }
        // validate the optional field `taskTimedOutEventDetails`
        if (data['taskTimedOutEventDetails']) { // data not null
          HistoryEventTaskTimedOutEventDetails.validateJSON(data['taskTimedOutEventDetails']);
        }
        // validate the optional field `executionFailedEventDetails`
        if (data['executionFailedEventDetails']) { // data not null
          ExecutionFailedEventDetails.validateJSON(data['executionFailedEventDetails']);
        }
        // validate the optional field `executionStartedEventDetails`
        if (data['executionStartedEventDetails']) { // data not null
          ExecutionStartedEventDetails.validateJSON(data['executionStartedEventDetails']);
        }
        // validate the optional field `executionSucceededEventDetails`
        if (data['executionSucceededEventDetails']) { // data not null
          ExecutionSucceededEventDetails.validateJSON(data['executionSucceededEventDetails']);
        }
        // validate the optional field `executionAbortedEventDetails`
        if (data['executionAbortedEventDetails']) { // data not null
          ExecutionAbortedEventDetails.validateJSON(data['executionAbortedEventDetails']);
        }
        // validate the optional field `executionTimedOutEventDetails`
        if (data['executionTimedOutEventDetails']) { // data not null
          ExecutionTimedOutEventDetails.validateJSON(data['executionTimedOutEventDetails']);
        }
        // validate the optional field `mapStateStartedEventDetails`
        if (data['mapStateStartedEventDetails']) { // data not null
          HistoryEventMapStateStartedEventDetails.validateJSON(data['mapStateStartedEventDetails']);
        }
        // validate the optional field `mapIterationStartedEventDetails`
        if (data['mapIterationStartedEventDetails']) { // data not null
          HistoryEventMapIterationStartedEventDetails.validateJSON(data['mapIterationStartedEventDetails']);
        }
        // validate the optional field `mapIterationSucceededEventDetails`
        if (data['mapIterationSucceededEventDetails']) { // data not null
          HistoryEventMapIterationSucceededEventDetails.validateJSON(data['mapIterationSucceededEventDetails']);
        }
        // validate the optional field `mapIterationFailedEventDetails`
        if (data['mapIterationFailedEventDetails']) { // data not null
          HistoryEventMapIterationFailedEventDetails.validateJSON(data['mapIterationFailedEventDetails']);
        }
        // validate the optional field `mapIterationAbortedEventDetails`
        if (data['mapIterationAbortedEventDetails']) { // data not null
          HistoryEventMapIterationAbortedEventDetails.validateJSON(data['mapIterationAbortedEventDetails']);
        }
        // validate the optional field `lambdaFunctionFailedEventDetails`
        if (data['lambdaFunctionFailedEventDetails']) { // data not null
          LambdaFunctionFailedEventDetails.validateJSON(data['lambdaFunctionFailedEventDetails']);
        }
        // validate the optional field `lambdaFunctionScheduleFailedEventDetails`
        if (data['lambdaFunctionScheduleFailedEventDetails']) { // data not null
          LambdaFunctionScheduleFailedEventDetails.validateJSON(data['lambdaFunctionScheduleFailedEventDetails']);
        }
        // validate the optional field `lambdaFunctionScheduledEventDetails`
        if (data['lambdaFunctionScheduledEventDetails']) { // data not null
          LambdaFunctionScheduledEventDetails.validateJSON(data['lambdaFunctionScheduledEventDetails']);
        }
        // validate the optional field `lambdaFunctionStartFailedEventDetails`
        if (data['lambdaFunctionStartFailedEventDetails']) { // data not null
          HistoryEventLambdaFunctionStartFailedEventDetails.validateJSON(data['lambdaFunctionStartFailedEventDetails']);
        }
        // validate the optional field `lambdaFunctionSucceededEventDetails`
        if (data['lambdaFunctionSucceededEventDetails']) { // data not null
          HistoryEventLambdaFunctionSucceededEventDetails.validateJSON(data['lambdaFunctionSucceededEventDetails']);
        }
        // validate the optional field `lambdaFunctionTimedOutEventDetails`
        if (data['lambdaFunctionTimedOutEventDetails']) { // data not null
          LambdaFunctionTimedOutEventDetails.validateJSON(data['lambdaFunctionTimedOutEventDetails']);
        }
        // validate the optional field `stateEnteredEventDetails`
        if (data['stateEnteredEventDetails']) { // data not null
          StateEnteredEventDetails.validateJSON(data['stateEnteredEventDetails']);
        }
        // validate the optional field `stateExitedEventDetails`
        if (data['stateExitedEventDetails']) { // data not null
          StateExitedEventDetails.validateJSON(data['stateExitedEventDetails']);
        }
        // validate the optional field `mapRunStartedEventDetails`
        if (data['mapRunStartedEventDetails']) { // data not null
          HistoryEventMapRunStartedEventDetails.validateJSON(data['mapRunStartedEventDetails']);
        }
        // validate the optional field `mapRunFailedEventDetails`
        if (data['mapRunFailedEventDetails']) { // data not null
          HistoryEventMapRunFailedEventDetails.validateJSON(data['mapRunFailedEventDetails']);
        }

        return true;
    }


}

HistoryEvent.RequiredProperties = ["timestamp", "type", "id"];

/**
 * @member {Date} timestamp
 */
HistoryEvent.prototype['timestamp'] = undefined;

/**
 * @member {module:model/HistoryEventType} type
 */
HistoryEvent.prototype['type'] = undefined;

/**
 * @member {Number} id
 */
HistoryEvent.prototype['id'] = undefined;

/**
 * @member {Number} previousEventId
 */
HistoryEvent.prototype['previousEventId'] = undefined;

/**
 * @member {module:model/ActivityFailedEventDetails} activityFailedEventDetails
 */
HistoryEvent.prototype['activityFailedEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventActivityScheduleFailedEventDetails} activityScheduleFailedEventDetails
 */
HistoryEvent.prototype['activityScheduleFailedEventDetails'] = undefined;

/**
 * @member {module:model/ActivityScheduledEventDetails} activityScheduledEventDetails
 */
HistoryEvent.prototype['activityScheduledEventDetails'] = undefined;

/**
 * @member {module:model/ActivityStartedEventDetails} activityStartedEventDetails
 */
HistoryEvent.prototype['activityStartedEventDetails'] = undefined;

/**
 * @member {module:model/ActivitySucceededEventDetails} activitySucceededEventDetails
 */
HistoryEvent.prototype['activitySucceededEventDetails'] = undefined;

/**
 * @member {module:model/ActivityTimedOutEventDetails} activityTimedOutEventDetails
 */
HistoryEvent.prototype['activityTimedOutEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventTaskFailedEventDetails} taskFailedEventDetails
 */
HistoryEvent.prototype['taskFailedEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventTaskScheduledEventDetails} taskScheduledEventDetails
 */
HistoryEvent.prototype['taskScheduledEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventTaskStartFailedEventDetails} taskStartFailedEventDetails
 */
HistoryEvent.prototype['taskStartFailedEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventTaskStartedEventDetails} taskStartedEventDetails
 */
HistoryEvent.prototype['taskStartedEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventTaskSubmitFailedEventDetails} taskSubmitFailedEventDetails
 */
HistoryEvent.prototype['taskSubmitFailedEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventTaskSubmittedEventDetails} taskSubmittedEventDetails
 */
HistoryEvent.prototype['taskSubmittedEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventTaskSucceededEventDetails} taskSucceededEventDetails
 */
HistoryEvent.prototype['taskSucceededEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventTaskTimedOutEventDetails} taskTimedOutEventDetails
 */
HistoryEvent.prototype['taskTimedOutEventDetails'] = undefined;

/**
 * @member {module:model/ExecutionFailedEventDetails} executionFailedEventDetails
 */
HistoryEvent.prototype['executionFailedEventDetails'] = undefined;

/**
 * @member {module:model/ExecutionStartedEventDetails} executionStartedEventDetails
 */
HistoryEvent.prototype['executionStartedEventDetails'] = undefined;

/**
 * @member {module:model/ExecutionSucceededEventDetails} executionSucceededEventDetails
 */
HistoryEvent.prototype['executionSucceededEventDetails'] = undefined;

/**
 * @member {module:model/ExecutionAbortedEventDetails} executionAbortedEventDetails
 */
HistoryEvent.prototype['executionAbortedEventDetails'] = undefined;

/**
 * @member {module:model/ExecutionTimedOutEventDetails} executionTimedOutEventDetails
 */
HistoryEvent.prototype['executionTimedOutEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventMapStateStartedEventDetails} mapStateStartedEventDetails
 */
HistoryEvent.prototype['mapStateStartedEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventMapIterationStartedEventDetails} mapIterationStartedEventDetails
 */
HistoryEvent.prototype['mapIterationStartedEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventMapIterationSucceededEventDetails} mapIterationSucceededEventDetails
 */
HistoryEvent.prototype['mapIterationSucceededEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventMapIterationFailedEventDetails} mapIterationFailedEventDetails
 */
HistoryEvent.prototype['mapIterationFailedEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventMapIterationAbortedEventDetails} mapIterationAbortedEventDetails
 */
HistoryEvent.prototype['mapIterationAbortedEventDetails'] = undefined;

/**
 * @member {module:model/LambdaFunctionFailedEventDetails} lambdaFunctionFailedEventDetails
 */
HistoryEvent.prototype['lambdaFunctionFailedEventDetails'] = undefined;

/**
 * @member {module:model/LambdaFunctionScheduleFailedEventDetails} lambdaFunctionScheduleFailedEventDetails
 */
HistoryEvent.prototype['lambdaFunctionScheduleFailedEventDetails'] = undefined;

/**
 * @member {module:model/LambdaFunctionScheduledEventDetails} lambdaFunctionScheduledEventDetails
 */
HistoryEvent.prototype['lambdaFunctionScheduledEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventLambdaFunctionStartFailedEventDetails} lambdaFunctionStartFailedEventDetails
 */
HistoryEvent.prototype['lambdaFunctionStartFailedEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventLambdaFunctionSucceededEventDetails} lambdaFunctionSucceededEventDetails
 */
HistoryEvent.prototype['lambdaFunctionSucceededEventDetails'] = undefined;

/**
 * @member {module:model/LambdaFunctionTimedOutEventDetails} lambdaFunctionTimedOutEventDetails
 */
HistoryEvent.prototype['lambdaFunctionTimedOutEventDetails'] = undefined;

/**
 * @member {module:model/StateEnteredEventDetails} stateEnteredEventDetails
 */
HistoryEvent.prototype['stateEnteredEventDetails'] = undefined;

/**
 * @member {module:model/StateExitedEventDetails} stateExitedEventDetails
 */
HistoryEvent.prototype['stateExitedEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventMapRunStartedEventDetails} mapRunStartedEventDetails
 */
HistoryEvent.prototype['mapRunStartedEventDetails'] = undefined;

/**
 * @member {module:model/HistoryEventMapRunFailedEventDetails} mapRunFailedEventDetails
 */
HistoryEvent.prototype['mapRunFailedEventDetails'] = undefined;






export default HistoryEvent;

