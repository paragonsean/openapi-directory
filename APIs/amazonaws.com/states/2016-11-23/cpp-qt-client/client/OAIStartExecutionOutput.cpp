/**
 * AWS Step Functions
 * <fullname>Step Functions</fullname> <p>Step Functions is a service that lets you coordinate the components of distributed applications and microservices using visual workflows.</p> <p>You can use Step Functions to build applications from individual components, each of which performs a discrete function, or <i>task</i>, allowing you to scale and change applications quickly. Step Functions provides a console that helps visualize the components of your application as a series of steps. Step Functions automatically triggers and tracks each step, and retries steps when there are errors, so your application executes predictably and in the right order every time. Step Functions logs the state of each step, so you can quickly diagnose and debug any issues.</p> <p>Step Functions manages operations and underlying infrastructure to ensure your application is available at any scale. You can run tasks on Amazon Web Services, your own servers, or any system that has access to Amazon Web Services. You can access and use Step Functions using the console, the Amazon Web Services SDKs, or an HTTP API. For more information about Step Functions, see the <i> <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html\">Step Functions Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartExecutionOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartExecutionOutput::OAIStartExecutionOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartExecutionOutput::OAIStartExecutionOutput() {
    this->initializeModel();
}

OAIStartExecutionOutput::~OAIStartExecutionOutput() {}

void OAIStartExecutionOutput::initializeModel() {

    m_execution_arn_isSet = false;
    m_execution_arn_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;
}

void OAIStartExecutionOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartExecutionOutput::fromJsonObject(QJsonObject json) {

    m_execution_arn_isValid = ::OpenAPI::fromJsonValue(m_execution_arn, json[QString("executionArn")]);
    m_execution_arn_isSet = !json[QString("executionArn")].isNull() && m_execution_arn_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;
}

QString OAIStartExecutionOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartExecutionOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_execution_arn_isSet) {
        obj.insert(QString("executionArn"), ::OpenAPI::toJsonValue(m_execution_arn));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    return obj;
}

QString OAIStartExecutionOutput::getExecutionArn() const {
    return m_execution_arn;
}
void OAIStartExecutionOutput::setExecutionArn(const QString &execution_arn) {
    m_execution_arn = execution_arn;
    m_execution_arn_isSet = true;
}

bool OAIStartExecutionOutput::is_execution_arn_Set() const{
    return m_execution_arn_isSet;
}

bool OAIStartExecutionOutput::is_execution_arn_Valid() const{
    return m_execution_arn_isValid;
}

QDateTime OAIStartExecutionOutput::getStartDate() const {
    return m_start_date;
}
void OAIStartExecutionOutput::setStartDate(const QDateTime &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIStartExecutionOutput::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIStartExecutionOutput::is_start_date_Valid() const{
    return m_start_date_isValid;
}

bool OAIStartExecutionOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_execution_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartExecutionOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_execution_arn_isValid && m_start_date_isValid && true;
}

} // namespace OpenAPI
