/**
 * AWS Step Functions
 * <fullname>Step Functions</fullname> <p>Step Functions is a service that lets you coordinate the components of distributed applications and microservices using visual workflows.</p> <p>You can use Step Functions to build applications from individual components, each of which performs a discrete function, or <i>task</i>, allowing you to scale and change applications quickly. Step Functions provides a console that helps visualize the components of your application as a series of steps. Step Functions automatically triggers and tracks each step, and retries steps when there are errors, so your application executes predictably and in the right order every time. Step Functions logs the state of each step, so you can quickly diagnose and debug any issues.</p> <p>Step Functions manages operations and underlying infrastructure to ensure your application is available at any scale. You can run tasks on Amazon Web Services, your own servers, or any system that has access to Amazon Web Services. You can access and use Step Functions using the console, the Amazon Web Services SDKs, or an HTTP API. For more information about Step Functions, see the <i> <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html\">Step Functions Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetExecutionHistoryInput.h
 *
 * 
 */

#ifndef OAIGetExecutionHistoryInput_H
#define OAIGetExecutionHistoryInput_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetExecutionHistoryInput : public OAIObject {
public:
    OAIGetExecutionHistoryInput();
    OAIGetExecutionHistoryInput(QString json);
    ~OAIGetExecutionHistoryInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExecutionArn() const;
    void setExecutionArn(const QString &execution_arn);
    bool is_execution_arn_Set() const;
    bool is_execution_arn_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    bool getReverseOrder() const;
    void setReverseOrder(const bool &reverse_order);
    bool is_reverse_order_Set() const;
    bool is_reverse_order_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    bool getIncludeExecutionData() const;
    void setIncludeExecutionData(const bool &include_execution_data);
    bool is_include_execution_data_Set() const;
    bool is_include_execution_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_execution_arn;
    bool m_execution_arn_isSet;
    bool m_execution_arn_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    bool m_reverse_order;
    bool m_reverse_order_isSet;
    bool m_reverse_order_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    bool m_include_execution_data;
    bool m_include_execution_data_isSet;
    bool m_include_execution_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetExecutionHistoryInput)

#endif // OAIGetExecutionHistoryInput_H
