/**
 * AWS Step Functions
 * <fullname>Step Functions</fullname> <p>Step Functions is a service that lets you coordinate the components of distributed applications and microservices using visual workflows.</p> <p>You can use Step Functions to build applications from individual components, each of which performs a discrete function, or <i>task</i>, allowing you to scale and change applications quickly. Step Functions provides a console that helps visualize the components of your application as a series of steps. Step Functions automatically triggers and tracks each step, and retries steps when there are errors, so your application executes predictably and in the right order every time. Step Functions logs the state of each step, so you can quickly diagnose and debug any issues.</p> <p>Step Functions manages operations and underlying infrastructure to ensure your application is available at any scale. You can run tasks on Amazon Web Services, your own servers, or any system that has access to Amazon Web Services. You can access and use Step Functions using the console, the Amazon Web Services SDKs, or an HTTP API. For more information about Step Functions, see the <i> <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html\">Step Functions Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeMapRunOutput_itemCounts.h
 *
 * 
 */

#ifndef OAIDescribeMapRunOutput_itemCounts_H
#define OAIDescribeMapRunOutput_itemCounts_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeMapRunOutput_itemCounts : public OAIObject {
public:
    OAIDescribeMapRunOutput_itemCounts();
    OAIDescribeMapRunOutput_itemCounts(QString json);
    ~OAIDescribeMapRunOutput_itemCounts() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPending() const;
    void setPending(const qint32 &pending);
    bool is_pending_Set() const;
    bool is_pending_Valid() const;

    qint32 getRunning() const;
    void setRunning(const qint32 &running);
    bool is_running_Set() const;
    bool is_running_Valid() const;

    qint32 getSucceeded() const;
    void setSucceeded(const qint32 &succeeded);
    bool is_succeeded_Set() const;
    bool is_succeeded_Valid() const;

    qint32 getFailed() const;
    void setFailed(const qint32 &failed);
    bool is_failed_Set() const;
    bool is_failed_Valid() const;

    qint32 getTimedOut() const;
    void setTimedOut(const qint32 &timed_out);
    bool is_timed_out_Set() const;
    bool is_timed_out_Valid() const;

    qint32 getAborted() const;
    void setAborted(const qint32 &aborted);
    bool is_aborted_Set() const;
    bool is_aborted_Valid() const;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    qint32 getResultsWritten() const;
    void setResultsWritten(const qint32 &results_written);
    bool is_results_written_Set() const;
    bool is_results_written_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_pending;
    bool m_pending_isSet;
    bool m_pending_isValid;

    qint32 m_running;
    bool m_running_isSet;
    bool m_running_isValid;

    qint32 m_succeeded;
    bool m_succeeded_isSet;
    bool m_succeeded_isValid;

    qint32 m_failed;
    bool m_failed_isSet;
    bool m_failed_isValid;

    qint32 m_timed_out;
    bool m_timed_out_isSet;
    bool m_timed_out_isValid;

    qint32 m_aborted;
    bool m_aborted_isSet;
    bool m_aborted_isValid;

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    qint32 m_results_written;
    bool m_results_written_isSet;
    bool m_results_written_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeMapRunOutput_itemCounts)

#endif // OAIDescribeMapRunOutput_itemCounts_H
