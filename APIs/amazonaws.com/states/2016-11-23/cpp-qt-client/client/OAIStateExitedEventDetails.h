/**
 * AWS Step Functions
 * <fullname>Step Functions</fullname> <p>Step Functions is a service that lets you coordinate the components of distributed applications and microservices using visual workflows.</p> <p>You can use Step Functions to build applications from individual components, each of which performs a discrete function, or <i>task</i>, allowing you to scale and change applications quickly. Step Functions provides a console that helps visualize the components of your application as a series of steps. Step Functions automatically triggers and tracks each step, and retries steps when there are errors, so your application executes predictably and in the right order every time. Step Functions logs the state of each step, so you can quickly diagnose and debug any issues.</p> <p>Step Functions manages operations and underlying infrastructure to ensure your application is available at any scale. You can run tasks on Amazon Web Services, your own servers, or any system that has access to Amazon Web Services. You can access and use Step Functions using the console, the Amazon Web Services SDKs, or an HTTP API. For more information about Step Functions, see the <i> <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html\">Step Functions Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStateExitedEventDetails.h
 *
 * Contains details about an exit from a state during an execution.
 */

#ifndef OAIStateExitedEventDetails_H
#define OAIStateExitedEventDetails_H

#include <QJsonObject>

#include "OAIActivitySucceededEventDetails_outputDetails.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIActivitySucceededEventDetails_outputDetails;

class OAIStateExitedEventDetails : public OAIObject {
public:
    OAIStateExitedEventDetails();
    OAIStateExitedEventDetails(QString json);
    ~OAIStateExitedEventDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOutput() const;
    void setOutput(const QString &output);
    bool is_output_Set() const;
    bool is_output_Valid() const;

    OAIActivitySucceededEventDetails_outputDetails getOutputDetails() const;
    void setOutputDetails(const OAIActivitySucceededEventDetails_outputDetails &output_details);
    bool is_output_details_Set() const;
    bool is_output_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_output;
    bool m_output_isSet;
    bool m_output_isValid;

    OAIActivitySucceededEventDetails_outputDetails m_output_details;
    bool m_output_details_isSet;
    bool m_output_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStateExitedEventDetails)

#endif // OAIStateExitedEventDetails_H
