/**
 * AWS Step Functions
 * <fullname>Step Functions</fullname> <p>Step Functions is a service that lets you coordinate the components of distributed applications and microservices using visual workflows.</p> <p>You can use Step Functions to build applications from individual components, each of which performs a discrete function, or <i>task</i>, allowing you to scale and change applications quickly. Step Functions provides a console that helps visualize the components of your application as a series of steps. Step Functions automatically triggers and tracks each step, and retries steps when there are errors, so your application executes predictably and in the right order every time. Step Functions logs the state of each step, so you can quickly diagnose and debug any issues.</p> <p>Step Functions manages operations and underlying infrastructure to ensure your application is available at any scale. You can run tasks on Amazon Web Services, your own servers, or any system that has access to Amazon Web Services. You can access and use Step Functions using the console, the Amazon Web Services SDKs, or an HTTP API. For more information about Step Functions, see the <i> <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html\">Step Functions Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateStateMachineInput_loggingConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateStateMachineInput_loggingConfiguration::OAICreateStateMachineInput_loggingConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateStateMachineInput_loggingConfiguration::OAICreateStateMachineInput_loggingConfiguration() {
    this->initializeModel();
}

OAICreateStateMachineInput_loggingConfiguration::~OAICreateStateMachineInput_loggingConfiguration() {}

void OAICreateStateMachineInput_loggingConfiguration::initializeModel() {

    m_level_isSet = false;
    m_level_isValid = false;

    m_include_execution_data_isSet = false;
    m_include_execution_data_isValid = false;

    m_destinations_isSet = false;
    m_destinations_isValid = false;
}

void OAICreateStateMachineInput_loggingConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateStateMachineInput_loggingConfiguration::fromJsonObject(QJsonObject json) {

    m_level_isValid = ::OpenAPI::fromJsonValue(m_level, json[QString("level")]);
    m_level_isSet = !json[QString("level")].isNull() && m_level_isValid;

    m_include_execution_data_isValid = ::OpenAPI::fromJsonValue(m_include_execution_data, json[QString("includeExecutionData")]);
    m_include_execution_data_isSet = !json[QString("includeExecutionData")].isNull() && m_include_execution_data_isValid;

    m_destinations_isValid = ::OpenAPI::fromJsonValue(m_destinations, json[QString("destinations")]);
    m_destinations_isSet = !json[QString("destinations")].isNull() && m_destinations_isValid;
}

QString OAICreateStateMachineInput_loggingConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateStateMachineInput_loggingConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_level.isSet()) {
        obj.insert(QString("level"), ::OpenAPI::toJsonValue(m_level));
    }
    if (m_include_execution_data_isSet) {
        obj.insert(QString("includeExecutionData"), ::OpenAPI::toJsonValue(m_include_execution_data));
    }
    if (m_destinations.isSet()) {
        obj.insert(QString("destinations"), ::OpenAPI::toJsonValue(m_destinations));
    }
    return obj;
}

OAILogLevel OAICreateStateMachineInput_loggingConfiguration::getLevel() const {
    return m_level;
}
void OAICreateStateMachineInput_loggingConfiguration::setLevel(const OAILogLevel &level) {
    m_level = level;
    m_level_isSet = true;
}

bool OAICreateStateMachineInput_loggingConfiguration::is_level_Set() const{
    return m_level_isSet;
}

bool OAICreateStateMachineInput_loggingConfiguration::is_level_Valid() const{
    return m_level_isValid;
}

bool OAICreateStateMachineInput_loggingConfiguration::getIncludeExecutionData() const {
    return m_include_execution_data;
}
void OAICreateStateMachineInput_loggingConfiguration::setIncludeExecutionData(const bool &include_execution_data) {
    m_include_execution_data = include_execution_data;
    m_include_execution_data_isSet = true;
}

bool OAICreateStateMachineInput_loggingConfiguration::is_include_execution_data_Set() const{
    return m_include_execution_data_isSet;
}

bool OAICreateStateMachineInput_loggingConfiguration::is_include_execution_data_Valid() const{
    return m_include_execution_data_isValid;
}

QList OAICreateStateMachineInput_loggingConfiguration::getDestinations() const {
    return m_destinations;
}
void OAICreateStateMachineInput_loggingConfiguration::setDestinations(const QList &destinations) {
    m_destinations = destinations;
    m_destinations_isSet = true;
}

bool OAICreateStateMachineInput_loggingConfiguration::is_destinations_Set() const{
    return m_destinations_isSet;
}

bool OAICreateStateMachineInput_loggingConfiguration::is_destinations_Valid() const{
    return m_destinations_isValid;
}

bool OAICreateStateMachineInput_loggingConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_level.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_execution_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destinations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateStateMachineInput_loggingConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
