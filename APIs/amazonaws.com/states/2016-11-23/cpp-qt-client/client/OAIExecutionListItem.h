/**
 * AWS Step Functions
 * <fullname>Step Functions</fullname> <p>Step Functions is a service that lets you coordinate the components of distributed applications and microservices using visual workflows.</p> <p>You can use Step Functions to build applications from individual components, each of which performs a discrete function, or <i>task</i>, allowing you to scale and change applications quickly. Step Functions provides a console that helps visualize the components of your application as a series of steps. Step Functions automatically triggers and tracks each step, and retries steps when there are errors, so your application executes predictably and in the right order every time. Step Functions logs the state of each step, so you can quickly diagnose and debug any issues.</p> <p>Step Functions manages operations and underlying infrastructure to ensure your application is available at any scale. You can run tasks on Amazon Web Services, your own servers, or any system that has access to Amazon Web Services. You can access and use Step Functions using the console, the Amazon Web Services SDKs, or an HTTP API. For more information about Step Functions, see the <i> <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html\">Step Functions Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExecutionListItem.h
 *
 * Contains details about an execution.
 */

#ifndef OAIExecutionListItem_H
#define OAIExecutionListItem_H

#include <QJsonObject>

#include "OAIExecutionStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExecutionListItem : public OAIObject {
public:
    OAIExecutionListItem();
    OAIExecutionListItem(QString json);
    ~OAIExecutionListItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExecutionArn() const;
    void setExecutionArn(const QString &execution_arn);
    bool is_execution_arn_Set() const;
    bool is_execution_arn_Valid() const;

    QString getStateMachineArn() const;
    void setStateMachineArn(const QString &state_machine_arn);
    bool is_state_machine_arn_Set() const;
    bool is_state_machine_arn_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIExecutionStatus getStatus() const;
    void setStatus(const OAIExecutionStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QDateTime getStopDate() const;
    void setStopDate(const QDateTime &stop_date);
    bool is_stop_date_Set() const;
    bool is_stop_date_Valid() const;

    QString getMapRunArn() const;
    void setMapRunArn(const QString &map_run_arn);
    bool is_map_run_arn_Set() const;
    bool is_map_run_arn_Valid() const;

    qint32 getItemCount() const;
    void setItemCount(const qint32 &item_count);
    bool is_item_count_Set() const;
    bool is_item_count_Valid() const;

    QString getStateMachineVersionArn() const;
    void setStateMachineVersionArn(const QString &state_machine_version_arn);
    bool is_state_machine_version_arn_Set() const;
    bool is_state_machine_version_arn_Valid() const;

    QString getStateMachineAliasArn() const;
    void setStateMachineAliasArn(const QString &state_machine_alias_arn);
    bool is_state_machine_alias_arn_Set() const;
    bool is_state_machine_alias_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_execution_arn;
    bool m_execution_arn_isSet;
    bool m_execution_arn_isValid;

    QString m_state_machine_arn;
    bool m_state_machine_arn_isSet;
    bool m_state_machine_arn_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIExecutionStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QDateTime m_stop_date;
    bool m_stop_date_isSet;
    bool m_stop_date_isValid;

    QString m_map_run_arn;
    bool m_map_run_arn_isSet;
    bool m_map_run_arn_isValid;

    qint32 m_item_count;
    bool m_item_count_isSet;
    bool m_item_count_isValid;

    QString m_state_machine_version_arn;
    bool m_state_machine_version_arn_isSet;
    bool m_state_machine_version_arn_isValid;

    QString m_state_machine_alias_arn;
    bool m_state_machine_alias_arn_isSet;
    bool m_state_machine_alias_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExecutionListItem)

#endif // OAIExecutionListItem_H
