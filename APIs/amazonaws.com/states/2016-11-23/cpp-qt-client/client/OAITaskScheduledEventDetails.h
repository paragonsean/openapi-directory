/**
 * AWS Step Functions
 * <fullname>Step Functions</fullname> <p>Step Functions is a service that lets you coordinate the components of distributed applications and microservices using visual workflows.</p> <p>You can use Step Functions to build applications from individual components, each of which performs a discrete function, or <i>task</i>, allowing you to scale and change applications quickly. Step Functions provides a console that helps visualize the components of your application as a series of steps. Step Functions automatically triggers and tracks each step, and retries steps when there are errors, so your application executes predictably and in the right order every time. Step Functions logs the state of each step, so you can quickly diagnose and debug any issues.</p> <p>Step Functions manages operations and underlying infrastructure to ensure your application is available at any scale. You can run tasks on Amazon Web Services, your own servers, or any system that has access to Amazon Web Services. You can access and use Step Functions using the console, the Amazon Web Services SDKs, or an HTTP API. For more information about Step Functions, see the <i> <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html\">Step Functions Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaskScheduledEventDetails.h
 *
 * Contains details about a task scheduled during an execution.
 */

#ifndef OAITaskScheduledEventDetails_H
#define OAITaskScheduledEventDetails_H

#include <QJsonObject>

#include "OAITaskScheduledEventDetails_taskCredentials.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITaskScheduledEventDetails_taskCredentials;

class OAITaskScheduledEventDetails : public OAIObject {
public:
    OAITaskScheduledEventDetails();
    OAITaskScheduledEventDetails(QString json);
    ~OAITaskScheduledEventDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    QString getResource() const;
    void setResource(const QString &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getParameters() const;
    void setParameters(const QString &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    qint32 getTimeoutInSeconds() const;
    void setTimeoutInSeconds(const qint32 &timeout_in_seconds);
    bool is_timeout_in_seconds_Set() const;
    bool is_timeout_in_seconds_Valid() const;

    qint32 getHeartbeatInSeconds() const;
    void setHeartbeatInSeconds(const qint32 &heartbeat_in_seconds);
    bool is_heartbeat_in_seconds_Set() const;
    bool is_heartbeat_in_seconds_Valid() const;

    OAITaskScheduledEventDetails_taskCredentials getTaskCredentials() const;
    void setTaskCredentials(const OAITaskScheduledEventDetails_taskCredentials &task_credentials);
    bool is_task_credentials_Set() const;
    bool is_task_credentials_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    QString m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    qint32 m_timeout_in_seconds;
    bool m_timeout_in_seconds_isSet;
    bool m_timeout_in_seconds_isValid;

    qint32 m_heartbeat_in_seconds;
    bool m_heartbeat_in_seconds_isSet;
    bool m_heartbeat_in_seconds_isValid;

    OAITaskScheduledEventDetails_taskCredentials m_task_credentials;
    bool m_task_credentials_isSet;
    bool m_task_credentials_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaskScheduledEventDetails)

#endif // OAITaskScheduledEventDetails_H
