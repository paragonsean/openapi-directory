# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeActivityOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_arn: str=None, name: str=None, creation_date: datetime=None):
        """DescribeActivityOutput - a model defined in OpenAPI

        :param activity_arn: The activity_arn of this DescribeActivityOutput.
        :param name: The name of this DescribeActivityOutput.
        :param creation_date: The creation_date of this DescribeActivityOutput.
        """
        self.openapi_types = {
            'activity_arn': str,
            'name': str,
            'creation_date': datetime
        }

        self.attribute_map = {
            'activity_arn': 'activityArn',
            'name': 'name',
            'creation_date': 'creationDate'
        }

        self._activity_arn = activity_arn
        self._name = name
        self._creation_date = creation_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeActivityOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeActivityOutput of this DescribeActivityOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_arn(self):
        """Gets the activity_arn of this DescribeActivityOutput.


        :return: The activity_arn of this DescribeActivityOutput.
        :rtype: str
        """
        return self._activity_arn

    @activity_arn.setter
    def activity_arn(self, activity_arn):
        """Sets the activity_arn of this DescribeActivityOutput.


        :param activity_arn: The activity_arn of this DescribeActivityOutput.
        :type activity_arn: str
        """
        if activity_arn is None:
            raise ValueError("Invalid value for `activity_arn`, must not be `None`")

        self._activity_arn = activity_arn

    @property
    def name(self):
        """Gets the name of this DescribeActivityOutput.


        :return: The name of this DescribeActivityOutput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DescribeActivityOutput.


        :param name: The name of this DescribeActivityOutput.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def creation_date(self):
        """Gets the creation_date of this DescribeActivityOutput.


        :return: The creation_date of this DescribeActivityOutput.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this DescribeActivityOutput.


        :param creation_date: The creation_date of this DescribeActivityOutput.
        :type creation_date: datetime
        """
        if creation_date is None:
            raise ValueError("Invalid value for `creation_date`, must not be `None`")

        self._creation_date = creation_date
