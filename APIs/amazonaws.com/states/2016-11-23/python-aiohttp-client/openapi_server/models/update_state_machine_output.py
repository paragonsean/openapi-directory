# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateStateMachineOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, update_date: datetime=None, revision_id: str=None, state_machine_version_arn: str=None):
        """UpdateStateMachineOutput - a model defined in OpenAPI

        :param update_date: The update_date of this UpdateStateMachineOutput.
        :param revision_id: The revision_id of this UpdateStateMachineOutput.
        :param state_machine_version_arn: The state_machine_version_arn of this UpdateStateMachineOutput.
        """
        self.openapi_types = {
            'update_date': datetime,
            'revision_id': str,
            'state_machine_version_arn': str
        }

        self.attribute_map = {
            'update_date': 'updateDate',
            'revision_id': 'revisionId',
            'state_machine_version_arn': 'stateMachineVersionArn'
        }

        self._update_date = update_date
        self._revision_id = revision_id
        self._state_machine_version_arn = state_machine_version_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateStateMachineOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateStateMachineOutput of this UpdateStateMachineOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def update_date(self):
        """Gets the update_date of this UpdateStateMachineOutput.


        :return: The update_date of this UpdateStateMachineOutput.
        :rtype: datetime
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date):
        """Sets the update_date of this UpdateStateMachineOutput.


        :param update_date: The update_date of this UpdateStateMachineOutput.
        :type update_date: datetime
        """
        if update_date is None:
            raise ValueError("Invalid value for `update_date`, must not be `None`")

        self._update_date = update_date

    @property
    def revision_id(self):
        """Gets the revision_id of this UpdateStateMachineOutput.


        :return: The revision_id of this UpdateStateMachineOutput.
        :rtype: str
        """
        return self._revision_id

    @revision_id.setter
    def revision_id(self, revision_id):
        """Sets the revision_id of this UpdateStateMachineOutput.


        :param revision_id: The revision_id of this UpdateStateMachineOutput.
        :type revision_id: str
        """

        self._revision_id = revision_id

    @property
    def state_machine_version_arn(self):
        """Gets the state_machine_version_arn of this UpdateStateMachineOutput.


        :return: The state_machine_version_arn of this UpdateStateMachineOutput.
        :rtype: str
        """
        return self._state_machine_version_arn

    @state_machine_version_arn.setter
    def state_machine_version_arn(self, state_machine_version_arn):
        """Sets the state_machine_version_arn of this UpdateStateMachineOutput.


        :param state_machine_version_arn: The state_machine_version_arn of this UpdateStateMachineOutput.
        :type state_machine_version_arn: str
        """

        self._state_machine_version_arn = state_machine_version_arn
