# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RoutingConfigurationListItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, state_machine_version_arn: str=None, weight: int=None):
        """RoutingConfigurationListItem - a model defined in OpenAPI

        :param state_machine_version_arn: The state_machine_version_arn of this RoutingConfigurationListItem.
        :param weight: The weight of this RoutingConfigurationListItem.
        """
        self.openapi_types = {
            'state_machine_version_arn': str,
            'weight': int
        }

        self.attribute_map = {
            'state_machine_version_arn': 'stateMachineVersionArn',
            'weight': 'weight'
        }

        self._state_machine_version_arn = state_machine_version_arn
        self._weight = weight

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RoutingConfigurationListItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RoutingConfigurationListItem of this RoutingConfigurationListItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def state_machine_version_arn(self):
        """Gets the state_machine_version_arn of this RoutingConfigurationListItem.


        :return: The state_machine_version_arn of this RoutingConfigurationListItem.
        :rtype: str
        """
        return self._state_machine_version_arn

    @state_machine_version_arn.setter
    def state_machine_version_arn(self, state_machine_version_arn):
        """Sets the state_machine_version_arn of this RoutingConfigurationListItem.


        :param state_machine_version_arn: The state_machine_version_arn of this RoutingConfigurationListItem.
        :type state_machine_version_arn: str
        """
        if state_machine_version_arn is None:
            raise ValueError("Invalid value for `state_machine_version_arn`, must not be `None`")

        self._state_machine_version_arn = state_machine_version_arn

    @property
    def weight(self):
        """Gets the weight of this RoutingConfigurationListItem.


        :return: The weight of this RoutingConfigurationListItem.
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this RoutingConfigurationListItem.


        :param weight: The weight of this RoutingConfigurationListItem.
        :type weight: int
        """
        if weight is None:
            raise ValueError("Invalid value for `weight`, must not be `None`")

        self._weight = weight
