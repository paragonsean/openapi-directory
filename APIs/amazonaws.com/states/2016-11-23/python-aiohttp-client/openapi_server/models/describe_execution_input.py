# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeExecutionInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, execution_arn: str=None):
        """DescribeExecutionInput - a model defined in OpenAPI

        :param execution_arn: The execution_arn of this DescribeExecutionInput.
        """
        self.openapi_types = {
            'execution_arn': str
        }

        self.attribute_map = {
            'execution_arn': 'executionArn'
        }

        self._execution_arn = execution_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeExecutionInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeExecutionInput of this DescribeExecutionInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def execution_arn(self):
        """Gets the execution_arn of this DescribeExecutionInput.


        :return: The execution_arn of this DescribeExecutionInput.
        :rtype: str
        """
        return self._execution_arn

    @execution_arn.setter
    def execution_arn(self, execution_arn):
        """Sets the execution_arn of this DescribeExecutionInput.


        :param execution_arn: The execution_arn of this DescribeExecutionInput.
        :type execution_arn: str
        """
        if execution_arn is None:
            raise ValueError("Invalid value for `execution_arn`, must not be `None`")

        self._execution_arn = execution_arn
