# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StopExecutionOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stop_date: datetime=None):
        """StopExecutionOutput - a model defined in OpenAPI

        :param stop_date: The stop_date of this StopExecutionOutput.
        """
        self.openapi_types = {
            'stop_date': datetime
        }

        self.attribute_map = {
            'stop_date': 'stopDate'
        }

        self._stop_date = stop_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StopExecutionOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StopExecutionOutput of this StopExecutionOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stop_date(self):
        """Gets the stop_date of this StopExecutionOutput.


        :return: The stop_date of this StopExecutionOutput.
        :rtype: datetime
        """
        return self._stop_date

    @stop_date.setter
    def stop_date(self, stop_date):
        """Sets the stop_date of this StopExecutionOutput.


        :param stop_date: The stop_date of this StopExecutionOutput.
        :type stop_date: datetime
        """
        if stop_date is None:
            raise ValueError("Invalid value for `stop_date`, must not be `None`")

        self._stop_date = stop_date
