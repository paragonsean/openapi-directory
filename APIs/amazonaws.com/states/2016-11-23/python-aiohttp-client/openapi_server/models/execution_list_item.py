# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.execution_status import ExecutionStatus
from openapi_server import util


class ExecutionListItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, execution_arn: str=None, state_machine_arn: str=None, name: str=None, status: ExecutionStatus=None, start_date: datetime=None, stop_date: datetime=None, map_run_arn: str=None, item_count: int=None, state_machine_version_arn: str=None, state_machine_alias_arn: str=None):
        """ExecutionListItem - a model defined in OpenAPI

        :param execution_arn: The execution_arn of this ExecutionListItem.
        :param state_machine_arn: The state_machine_arn of this ExecutionListItem.
        :param name: The name of this ExecutionListItem.
        :param status: The status of this ExecutionListItem.
        :param start_date: The start_date of this ExecutionListItem.
        :param stop_date: The stop_date of this ExecutionListItem.
        :param map_run_arn: The map_run_arn of this ExecutionListItem.
        :param item_count: The item_count of this ExecutionListItem.
        :param state_machine_version_arn: The state_machine_version_arn of this ExecutionListItem.
        :param state_machine_alias_arn: The state_machine_alias_arn of this ExecutionListItem.
        """
        self.openapi_types = {
            'execution_arn': str,
            'state_machine_arn': str,
            'name': str,
            'status': ExecutionStatus,
            'start_date': datetime,
            'stop_date': datetime,
            'map_run_arn': str,
            'item_count': int,
            'state_machine_version_arn': str,
            'state_machine_alias_arn': str
        }

        self.attribute_map = {
            'execution_arn': 'executionArn',
            'state_machine_arn': 'stateMachineArn',
            'name': 'name',
            'status': 'status',
            'start_date': 'startDate',
            'stop_date': 'stopDate',
            'map_run_arn': 'mapRunArn',
            'item_count': 'itemCount',
            'state_machine_version_arn': 'stateMachineVersionArn',
            'state_machine_alias_arn': 'stateMachineAliasArn'
        }

        self._execution_arn = execution_arn
        self._state_machine_arn = state_machine_arn
        self._name = name
        self._status = status
        self._start_date = start_date
        self._stop_date = stop_date
        self._map_run_arn = map_run_arn
        self._item_count = item_count
        self._state_machine_version_arn = state_machine_version_arn
        self._state_machine_alias_arn = state_machine_alias_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExecutionListItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExecutionListItem of this ExecutionListItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def execution_arn(self):
        """Gets the execution_arn of this ExecutionListItem.


        :return: The execution_arn of this ExecutionListItem.
        :rtype: str
        """
        return self._execution_arn

    @execution_arn.setter
    def execution_arn(self, execution_arn):
        """Sets the execution_arn of this ExecutionListItem.


        :param execution_arn: The execution_arn of this ExecutionListItem.
        :type execution_arn: str
        """
        if execution_arn is None:
            raise ValueError("Invalid value for `execution_arn`, must not be `None`")

        self._execution_arn = execution_arn

    @property
    def state_machine_arn(self):
        """Gets the state_machine_arn of this ExecutionListItem.


        :return: The state_machine_arn of this ExecutionListItem.
        :rtype: str
        """
        return self._state_machine_arn

    @state_machine_arn.setter
    def state_machine_arn(self, state_machine_arn):
        """Sets the state_machine_arn of this ExecutionListItem.


        :param state_machine_arn: The state_machine_arn of this ExecutionListItem.
        :type state_machine_arn: str
        """
        if state_machine_arn is None:
            raise ValueError("Invalid value for `state_machine_arn`, must not be `None`")

        self._state_machine_arn = state_machine_arn

    @property
    def name(self):
        """Gets the name of this ExecutionListItem.


        :return: The name of this ExecutionListItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ExecutionListItem.


        :param name: The name of this ExecutionListItem.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def status(self):
        """Gets the status of this ExecutionListItem.


        :return: The status of this ExecutionListItem.
        :rtype: ExecutionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ExecutionListItem.


        :param status: The status of this ExecutionListItem.
        :type status: ExecutionStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def start_date(self):
        """Gets the start_date of this ExecutionListItem.


        :return: The start_date of this ExecutionListItem.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this ExecutionListItem.


        :param start_date: The start_date of this ExecutionListItem.
        :type start_date: datetime
        """
        if start_date is None:
            raise ValueError("Invalid value for `start_date`, must not be `None`")

        self._start_date = start_date

    @property
    def stop_date(self):
        """Gets the stop_date of this ExecutionListItem.


        :return: The stop_date of this ExecutionListItem.
        :rtype: datetime
        """
        return self._stop_date

    @stop_date.setter
    def stop_date(self, stop_date):
        """Sets the stop_date of this ExecutionListItem.


        :param stop_date: The stop_date of this ExecutionListItem.
        :type stop_date: datetime
        """

        self._stop_date = stop_date

    @property
    def map_run_arn(self):
        """Gets the map_run_arn of this ExecutionListItem.


        :return: The map_run_arn of this ExecutionListItem.
        :rtype: str
        """
        return self._map_run_arn

    @map_run_arn.setter
    def map_run_arn(self, map_run_arn):
        """Sets the map_run_arn of this ExecutionListItem.


        :param map_run_arn: The map_run_arn of this ExecutionListItem.
        :type map_run_arn: str
        """

        self._map_run_arn = map_run_arn

    @property
    def item_count(self):
        """Gets the item_count of this ExecutionListItem.


        :return: The item_count of this ExecutionListItem.
        :rtype: int
        """
        return self._item_count

    @item_count.setter
    def item_count(self, item_count):
        """Sets the item_count of this ExecutionListItem.


        :param item_count: The item_count of this ExecutionListItem.
        :type item_count: int
        """

        self._item_count = item_count

    @property
    def state_machine_version_arn(self):
        """Gets the state_machine_version_arn of this ExecutionListItem.


        :return: The state_machine_version_arn of this ExecutionListItem.
        :rtype: str
        """
        return self._state_machine_version_arn

    @state_machine_version_arn.setter
    def state_machine_version_arn(self, state_machine_version_arn):
        """Sets the state_machine_version_arn of this ExecutionListItem.


        :param state_machine_version_arn: The state_machine_version_arn of this ExecutionListItem.
        :type state_machine_version_arn: str
        """

        self._state_machine_version_arn = state_machine_version_arn

    @property
    def state_machine_alias_arn(self):
        """Gets the state_machine_alias_arn of this ExecutionListItem.


        :return: The state_machine_alias_arn of this ExecutionListItem.
        :rtype: str
        """
        return self._state_machine_alias_arn

    @state_machine_alias_arn.setter
    def state_machine_alias_arn(self, state_machine_alias_arn):
        """Sets the state_machine_alias_arn of this ExecutionListItem.


        :param state_machine_alias_arn: The state_machine_alias_arn of this ExecutionListItem.
        :type state_machine_alias_arn: str
        """

        self._state_machine_alias_arn = state_machine_alias_arn
