# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateStateMachineAliasOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, update_date: datetime=None):
        """UpdateStateMachineAliasOutput - a model defined in OpenAPI

        :param update_date: The update_date of this UpdateStateMachineAliasOutput.
        """
        self.openapi_types = {
            'update_date': datetime
        }

        self.attribute_map = {
            'update_date': 'updateDate'
        }

        self._update_date = update_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateStateMachineAliasOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateStateMachineAliasOutput of this UpdateStateMachineAliasOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def update_date(self):
        """Gets the update_date of this UpdateStateMachineAliasOutput.


        :return: The update_date of this UpdateStateMachineAliasOutput.
        :rtype: datetime
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date):
        """Sets the update_date of this UpdateStateMachineAliasOutput.


        :param update_date: The update_date of this UpdateStateMachineAliasOutput.
        :type update_date: datetime
        """
        if update_date is None:
            raise ValueError("Invalid value for `update_date`, must not be `None`")

        self._update_date = update_date
