# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartSyncExecutionInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, state_machine_arn: str=None, name: str=None, input: str=None, trace_header: str=None):
        """StartSyncExecutionInput - a model defined in OpenAPI

        :param state_machine_arn: The state_machine_arn of this StartSyncExecutionInput.
        :param name: The name of this StartSyncExecutionInput.
        :param input: The input of this StartSyncExecutionInput.
        :param trace_header: The trace_header of this StartSyncExecutionInput.
        """
        self.openapi_types = {
            'state_machine_arn': str,
            'name': str,
            'input': str,
            'trace_header': str
        }

        self.attribute_map = {
            'state_machine_arn': 'stateMachineArn',
            'name': 'name',
            'input': 'input',
            'trace_header': 'traceHeader'
        }

        self._state_machine_arn = state_machine_arn
        self._name = name
        self._input = input
        self._trace_header = trace_header

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartSyncExecutionInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartSyncExecutionInput of this StartSyncExecutionInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def state_machine_arn(self):
        """Gets the state_machine_arn of this StartSyncExecutionInput.


        :return: The state_machine_arn of this StartSyncExecutionInput.
        :rtype: str
        """
        return self._state_machine_arn

    @state_machine_arn.setter
    def state_machine_arn(self, state_machine_arn):
        """Sets the state_machine_arn of this StartSyncExecutionInput.


        :param state_machine_arn: The state_machine_arn of this StartSyncExecutionInput.
        :type state_machine_arn: str
        """
        if state_machine_arn is None:
            raise ValueError("Invalid value for `state_machine_arn`, must not be `None`")

        self._state_machine_arn = state_machine_arn

    @property
    def name(self):
        """Gets the name of this StartSyncExecutionInput.


        :return: The name of this StartSyncExecutionInput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StartSyncExecutionInput.


        :param name: The name of this StartSyncExecutionInput.
        :type name: str
        """

        self._name = name

    @property
    def input(self):
        """Gets the input of this StartSyncExecutionInput.


        :return: The input of this StartSyncExecutionInput.
        :rtype: str
        """
        return self._input

    @input.setter
    def input(self, input):
        """Sets the input of this StartSyncExecutionInput.


        :param input: The input of this StartSyncExecutionInput.
        :type input: str
        """

        self._input = input

    @property
    def trace_header(self):
        """Gets the trace_header of this StartSyncExecutionInput.


        :return: The trace_header of this StartSyncExecutionInput.
        :rtype: str
        """
        return self._trace_header

    @trace_header.setter
    def trace_header(self, trace_header):
        """Sets the trace_header of this StartSyncExecutionInput.


        :param trace_header: The trace_header of this StartSyncExecutionInput.
        :type trace_header: str
        """

        self._trace_header = trace_header
