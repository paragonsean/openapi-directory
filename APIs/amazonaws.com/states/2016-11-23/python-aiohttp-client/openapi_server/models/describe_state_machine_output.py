# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_state_machine_input_tracing_configuration import CreateStateMachineInputTracingConfiguration
from openapi_server.models.logging_configuration import LoggingConfiguration
from openapi_server.models.state_machine_status import StateMachineStatus
from openapi_server.models.state_machine_type import StateMachineType
from openapi_server import util


class DescribeStateMachineOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, state_machine_arn: str=None, name: str=None, status: StateMachineStatus=None, definition: str=None, role_arn: str=None, type: StateMachineType=None, creation_date: datetime=None, logging_configuration: LoggingConfiguration=None, tracing_configuration: CreateStateMachineInputTracingConfiguration=None, label: str=None, revision_id: str=None, description: str=None):
        """DescribeStateMachineOutput - a model defined in OpenAPI

        :param state_machine_arn: The state_machine_arn of this DescribeStateMachineOutput.
        :param name: The name of this DescribeStateMachineOutput.
        :param status: The status of this DescribeStateMachineOutput.
        :param definition: The definition of this DescribeStateMachineOutput.
        :param role_arn: The role_arn of this DescribeStateMachineOutput.
        :param type: The type of this DescribeStateMachineOutput.
        :param creation_date: The creation_date of this DescribeStateMachineOutput.
        :param logging_configuration: The logging_configuration of this DescribeStateMachineOutput.
        :param tracing_configuration: The tracing_configuration of this DescribeStateMachineOutput.
        :param label: The label of this DescribeStateMachineOutput.
        :param revision_id: The revision_id of this DescribeStateMachineOutput.
        :param description: The description of this DescribeStateMachineOutput.
        """
        self.openapi_types = {
            'state_machine_arn': str,
            'name': str,
            'status': StateMachineStatus,
            'definition': str,
            'role_arn': str,
            'type': StateMachineType,
            'creation_date': datetime,
            'logging_configuration': LoggingConfiguration,
            'tracing_configuration': CreateStateMachineInputTracingConfiguration,
            'label': str,
            'revision_id': str,
            'description': str
        }

        self.attribute_map = {
            'state_machine_arn': 'stateMachineArn',
            'name': 'name',
            'status': 'status',
            'definition': 'definition',
            'role_arn': 'roleArn',
            'type': 'type',
            'creation_date': 'creationDate',
            'logging_configuration': 'loggingConfiguration',
            'tracing_configuration': 'tracingConfiguration',
            'label': 'label',
            'revision_id': 'revisionId',
            'description': 'description'
        }

        self._state_machine_arn = state_machine_arn
        self._name = name
        self._status = status
        self._definition = definition
        self._role_arn = role_arn
        self._type = type
        self._creation_date = creation_date
        self._logging_configuration = logging_configuration
        self._tracing_configuration = tracing_configuration
        self._label = label
        self._revision_id = revision_id
        self._description = description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeStateMachineOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeStateMachineOutput of this DescribeStateMachineOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def state_machine_arn(self):
        """Gets the state_machine_arn of this DescribeStateMachineOutput.


        :return: The state_machine_arn of this DescribeStateMachineOutput.
        :rtype: str
        """
        return self._state_machine_arn

    @state_machine_arn.setter
    def state_machine_arn(self, state_machine_arn):
        """Sets the state_machine_arn of this DescribeStateMachineOutput.


        :param state_machine_arn: The state_machine_arn of this DescribeStateMachineOutput.
        :type state_machine_arn: str
        """
        if state_machine_arn is None:
            raise ValueError("Invalid value for `state_machine_arn`, must not be `None`")

        self._state_machine_arn = state_machine_arn

    @property
    def name(self):
        """Gets the name of this DescribeStateMachineOutput.


        :return: The name of this DescribeStateMachineOutput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DescribeStateMachineOutput.


        :param name: The name of this DescribeStateMachineOutput.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def status(self):
        """Gets the status of this DescribeStateMachineOutput.


        :return: The status of this DescribeStateMachineOutput.
        :rtype: StateMachineStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeStateMachineOutput.


        :param status: The status of this DescribeStateMachineOutput.
        :type status: StateMachineStatus
        """

        self._status = status

    @property
    def definition(self):
        """Gets the definition of this DescribeStateMachineOutput.


        :return: The definition of this DescribeStateMachineOutput.
        :rtype: str
        """
        return self._definition

    @definition.setter
    def definition(self, definition):
        """Sets the definition of this DescribeStateMachineOutput.


        :param definition: The definition of this DescribeStateMachineOutput.
        :type definition: str
        """
        if definition is None:
            raise ValueError("Invalid value for `definition`, must not be `None`")

        self._definition = definition

    @property
    def role_arn(self):
        """Gets the role_arn of this DescribeStateMachineOutput.


        :return: The role_arn of this DescribeStateMachineOutput.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this DescribeStateMachineOutput.


        :param role_arn: The role_arn of this DescribeStateMachineOutput.
        :type role_arn: str
        """
        if role_arn is None:
            raise ValueError("Invalid value for `role_arn`, must not be `None`")

        self._role_arn = role_arn

    @property
    def type(self):
        """Gets the type of this DescribeStateMachineOutput.


        :return: The type of this DescribeStateMachineOutput.
        :rtype: StateMachineType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DescribeStateMachineOutput.


        :param type: The type of this DescribeStateMachineOutput.
        :type type: StateMachineType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def creation_date(self):
        """Gets the creation_date of this DescribeStateMachineOutput.


        :return: The creation_date of this DescribeStateMachineOutput.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this DescribeStateMachineOutput.


        :param creation_date: The creation_date of this DescribeStateMachineOutput.
        :type creation_date: datetime
        """
        if creation_date is None:
            raise ValueError("Invalid value for `creation_date`, must not be `None`")

        self._creation_date = creation_date

    @property
    def logging_configuration(self):
        """Gets the logging_configuration of this DescribeStateMachineOutput.


        :return: The logging_configuration of this DescribeStateMachineOutput.
        :rtype: LoggingConfiguration
        """
        return self._logging_configuration

    @logging_configuration.setter
    def logging_configuration(self, logging_configuration):
        """Sets the logging_configuration of this DescribeStateMachineOutput.


        :param logging_configuration: The logging_configuration of this DescribeStateMachineOutput.
        :type logging_configuration: LoggingConfiguration
        """

        self._logging_configuration = logging_configuration

    @property
    def tracing_configuration(self):
        """Gets the tracing_configuration of this DescribeStateMachineOutput.


        :return: The tracing_configuration of this DescribeStateMachineOutput.
        :rtype: CreateStateMachineInputTracingConfiguration
        """
        return self._tracing_configuration

    @tracing_configuration.setter
    def tracing_configuration(self, tracing_configuration):
        """Sets the tracing_configuration of this DescribeStateMachineOutput.


        :param tracing_configuration: The tracing_configuration of this DescribeStateMachineOutput.
        :type tracing_configuration: CreateStateMachineInputTracingConfiguration
        """

        self._tracing_configuration = tracing_configuration

    @property
    def label(self):
        """Gets the label of this DescribeStateMachineOutput.


        :return: The label of this DescribeStateMachineOutput.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this DescribeStateMachineOutput.


        :param label: The label of this DescribeStateMachineOutput.
        :type label: str
        """

        self._label = label

    @property
    def revision_id(self):
        """Gets the revision_id of this DescribeStateMachineOutput.


        :return: The revision_id of this DescribeStateMachineOutput.
        :rtype: str
        """
        return self._revision_id

    @revision_id.setter
    def revision_id(self, revision_id):
        """Sets the revision_id of this DescribeStateMachineOutput.


        :param revision_id: The revision_id of this DescribeStateMachineOutput.
        :type revision_id: str
        """

        self._revision_id = revision_id

    @property
    def description(self):
        """Gets the description of this DescribeStateMachineOutput.


        :return: The description of this DescribeStateMachineOutput.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DescribeStateMachineOutput.


        :param description: The description of this DescribeStateMachineOutput.
        :type description: str
        """

        self._description = description
