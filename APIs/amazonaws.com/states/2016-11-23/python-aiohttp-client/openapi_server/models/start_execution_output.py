# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartExecutionOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, execution_arn: str=None, start_date: datetime=None):
        """StartExecutionOutput - a model defined in OpenAPI

        :param execution_arn: The execution_arn of this StartExecutionOutput.
        :param start_date: The start_date of this StartExecutionOutput.
        """
        self.openapi_types = {
            'execution_arn': str,
            'start_date': datetime
        }

        self.attribute_map = {
            'execution_arn': 'executionArn',
            'start_date': 'startDate'
        }

        self._execution_arn = execution_arn
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartExecutionOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartExecutionOutput of this StartExecutionOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def execution_arn(self):
        """Gets the execution_arn of this StartExecutionOutput.


        :return: The execution_arn of this StartExecutionOutput.
        :rtype: str
        """
        return self._execution_arn

    @execution_arn.setter
    def execution_arn(self, execution_arn):
        """Sets the execution_arn of this StartExecutionOutput.


        :param execution_arn: The execution_arn of this StartExecutionOutput.
        :type execution_arn: str
        """
        if execution_arn is None:
            raise ValueError("Invalid value for `execution_arn`, must not be `None`")

        self._execution_arn = execution_arn

    @property
    def start_date(self):
        """Gets the start_date of this StartExecutionOutput.


        :return: The start_date of this StartExecutionOutput.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this StartExecutionOutput.


        :param start_date: The start_date of this StartExecutionOutput.
        :type start_date: datetime
        """
        if start_date is None:
            raise ValueError("Invalid value for `start_date`, must not be `None`")

        self._start_date = start_date
