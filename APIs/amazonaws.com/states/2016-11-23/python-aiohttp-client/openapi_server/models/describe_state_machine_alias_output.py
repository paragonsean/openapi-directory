# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeStateMachineAliasOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, state_machine_alias_arn: str=None, name: str=None, description: str=None, routing_configuration: List=None, creation_date: datetime=None, update_date: datetime=None):
        """DescribeStateMachineAliasOutput - a model defined in OpenAPI

        :param state_machine_alias_arn: The state_machine_alias_arn of this DescribeStateMachineAliasOutput.
        :param name: The name of this DescribeStateMachineAliasOutput.
        :param description: The description of this DescribeStateMachineAliasOutput.
        :param routing_configuration: The routing_configuration of this DescribeStateMachineAliasOutput.
        :param creation_date: The creation_date of this DescribeStateMachineAliasOutput.
        :param update_date: The update_date of this DescribeStateMachineAliasOutput.
        """
        self.openapi_types = {
            'state_machine_alias_arn': str,
            'name': str,
            'description': str,
            'routing_configuration': List,
            'creation_date': datetime,
            'update_date': datetime
        }

        self.attribute_map = {
            'state_machine_alias_arn': 'stateMachineAliasArn',
            'name': 'name',
            'description': 'description',
            'routing_configuration': 'routingConfiguration',
            'creation_date': 'creationDate',
            'update_date': 'updateDate'
        }

        self._state_machine_alias_arn = state_machine_alias_arn
        self._name = name
        self._description = description
        self._routing_configuration = routing_configuration
        self._creation_date = creation_date
        self._update_date = update_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeStateMachineAliasOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeStateMachineAliasOutput of this DescribeStateMachineAliasOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def state_machine_alias_arn(self):
        """Gets the state_machine_alias_arn of this DescribeStateMachineAliasOutput.


        :return: The state_machine_alias_arn of this DescribeStateMachineAliasOutput.
        :rtype: str
        """
        return self._state_machine_alias_arn

    @state_machine_alias_arn.setter
    def state_machine_alias_arn(self, state_machine_alias_arn):
        """Sets the state_machine_alias_arn of this DescribeStateMachineAliasOutput.


        :param state_machine_alias_arn: The state_machine_alias_arn of this DescribeStateMachineAliasOutput.
        :type state_machine_alias_arn: str
        """

        self._state_machine_alias_arn = state_machine_alias_arn

    @property
    def name(self):
        """Gets the name of this DescribeStateMachineAliasOutput.


        :return: The name of this DescribeStateMachineAliasOutput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DescribeStateMachineAliasOutput.


        :param name: The name of this DescribeStateMachineAliasOutput.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this DescribeStateMachineAliasOutput.


        :return: The description of this DescribeStateMachineAliasOutput.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DescribeStateMachineAliasOutput.


        :param description: The description of this DescribeStateMachineAliasOutput.
        :type description: str
        """

        self._description = description

    @property
    def routing_configuration(self):
        """Gets the routing_configuration of this DescribeStateMachineAliasOutput.


        :return: The routing_configuration of this DescribeStateMachineAliasOutput.
        :rtype: List
        """
        return self._routing_configuration

    @routing_configuration.setter
    def routing_configuration(self, routing_configuration):
        """Sets the routing_configuration of this DescribeStateMachineAliasOutput.


        :param routing_configuration: The routing_configuration of this DescribeStateMachineAliasOutput.
        :type routing_configuration: List
        """

        self._routing_configuration = routing_configuration

    @property
    def creation_date(self):
        """Gets the creation_date of this DescribeStateMachineAliasOutput.


        :return: The creation_date of this DescribeStateMachineAliasOutput.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this DescribeStateMachineAliasOutput.


        :param creation_date: The creation_date of this DescribeStateMachineAliasOutput.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def update_date(self):
        """Gets the update_date of this DescribeStateMachineAliasOutput.


        :return: The update_date of this DescribeStateMachineAliasOutput.
        :rtype: datetime
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date):
        """Sets the update_date of this DescribeStateMachineAliasOutput.


        :param update_date: The update_date of this DescribeStateMachineAliasOutput.
        :type update_date: datetime
        """

        self._update_date = update_date
