/*
 * AWS Support
 * <fullname>Amazon Web Services Support</fullname> <p>The <i>Amazon Web Services Support API Reference</i> is intended for programmers who need detailed information about the Amazon Web Services Support operations and data types. You can use the API to manage your support cases programmatically. The Amazon Web Services Support API uses HTTP methods that return results in JSON format.</p> <note> <ul> <li> <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. </p> </li> <li> <p>If you call the Amazon Web Services Support API from an account that doesn't have a Business, Enterprise On-Ramp, or Enterprise Support plan, the <code>SubscriptionRequiredException</code> error message appears. For information about changing your support plan, see <a href=\"http://aws.amazon.com/premiumsupport/\">Amazon Web Services Support</a>.</p> </li> </ul> </note> <p>You can also use the Amazon Web Services Support API to access features for <a href=\"http://aws.amazon.com/premiumsupport/trustedadvisor/\">Trusted Advisor</a>. You can return a list of checks and their descriptions, get check results, specify checks to refresh, and get the refresh status of checks.</p> <p>You can manage your support cases with the following Amazon Web Services Support API operations:</p> <ul> <li> <p>The <a>CreateCase</a>, <a>DescribeCases</a>, <a>DescribeAttachment</a>, and <a>ResolveCase</a> operations create Amazon Web Services Support cases, retrieve information about cases, and resolve cases.</p> </li> <li> <p>The <a>DescribeCommunications</a>, <a>AddCommunicationToCase</a>, and <a>AddAttachmentsToSet</a> operations retrieve and add communications and attachments to Amazon Web Services Support cases.</p> </li> <li> <p>The <a>DescribeServices</a> and <a>DescribeSeverityLevels</a> operations return Amazon Web Service names, service codes, service categories, and problem severity levels. You use these values when you call the <a>CreateCase</a> operation.</p> </li> </ul> <p>You can also use the Amazon Web Services Support API to call the Trusted Advisor operations. For more information, see <a href=\"https://docs.aws.amazon.com/\">Trusted Advisor</a> in the <i>Amazon Web Services Support User Guide</i>.</p> <p>For authentication of requests, Amazon Web Services Support uses <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a>.</p> <p>For more information about this service and the endpoints to use, see <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html\">About the Amazon Web Services Support API</a> in the <i>Amazon Web Services Support User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2013-04-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeCasesRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:01.110966-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeCasesRequest {
  public static final String SERIALIZED_NAME_CASE_ID_LIST = "caseIdList";
  @SerializedName(SERIALIZED_NAME_CASE_ID_LIST)
  private List caseIdList;

  public static final String SERIALIZED_NAME_DISPLAY_ID = "displayId";
  @SerializedName(SERIALIZED_NAME_DISPLAY_ID)
  private String displayId;

  public static final String SERIALIZED_NAME_AFTER_TIME = "afterTime";
  @SerializedName(SERIALIZED_NAME_AFTER_TIME)
  private String afterTime;

  public static final String SERIALIZED_NAME_BEFORE_TIME = "beforeTime";
  @SerializedName(SERIALIZED_NAME_BEFORE_TIME)
  private String beforeTime;

  public static final String SERIALIZED_NAME_INCLUDE_RESOLVED_CASES = "includeResolvedCases";
  @SerializedName(SERIALIZED_NAME_INCLUDE_RESOLVED_CASES)
  private Boolean includeResolvedCases;

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "nextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public static final String SERIALIZED_NAME_MAX_RESULTS = "maxResults";
  @SerializedName(SERIALIZED_NAME_MAX_RESULTS)
  private Integer maxResults;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_INCLUDE_COMMUNICATIONS = "includeCommunications";
  @SerializedName(SERIALIZED_NAME_INCLUDE_COMMUNICATIONS)
  private Boolean includeCommunications;

  public DescribeCasesRequest() {
  }

  public DescribeCasesRequest caseIdList(List caseIdList) {
    this.caseIdList = caseIdList;
    return this;
  }

  /**
   * Get caseIdList
   * @return caseIdList
   */
  @javax.annotation.Nullable
  public List getCaseIdList() {
    return caseIdList;
  }

  public void setCaseIdList(List caseIdList) {
    this.caseIdList = caseIdList;
  }


  public DescribeCasesRequest displayId(String displayId) {
    this.displayId = displayId;
    return this;
  }

  /**
   * Get displayId
   * @return displayId
   */
  @javax.annotation.Nullable
  public String getDisplayId() {
    return displayId;
  }

  public void setDisplayId(String displayId) {
    this.displayId = displayId;
  }


  public DescribeCasesRequest afterTime(String afterTime) {
    this.afterTime = afterTime;
    return this;
  }

  /**
   * Get afterTime
   * @return afterTime
   */
  @javax.annotation.Nullable
  public String getAfterTime() {
    return afterTime;
  }

  public void setAfterTime(String afterTime) {
    this.afterTime = afterTime;
  }


  public DescribeCasesRequest beforeTime(String beforeTime) {
    this.beforeTime = beforeTime;
    return this;
  }

  /**
   * Get beforeTime
   * @return beforeTime
   */
  @javax.annotation.Nullable
  public String getBeforeTime() {
    return beforeTime;
  }

  public void setBeforeTime(String beforeTime) {
    this.beforeTime = beforeTime;
  }


  public DescribeCasesRequest includeResolvedCases(Boolean includeResolvedCases) {
    this.includeResolvedCases = includeResolvedCases;
    return this;
  }

  /**
   * Get includeResolvedCases
   * @return includeResolvedCases
   */
  @javax.annotation.Nullable
  public Boolean getIncludeResolvedCases() {
    return includeResolvedCases;
  }

  public void setIncludeResolvedCases(Boolean includeResolvedCases) {
    this.includeResolvedCases = includeResolvedCases;
  }


  public DescribeCasesRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * Get nextToken
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }


  public DescribeCasesRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

  /**
   * Get maxResults
   * @return maxResults
   */
  @javax.annotation.Nullable
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }


  public DescribeCasesRequest language(String language) {
    this.language = language;
    return this;
  }

  /**
   * Get language
   * @return language
   */
  @javax.annotation.Nullable
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }


  public DescribeCasesRequest includeCommunications(Boolean includeCommunications) {
    this.includeCommunications = includeCommunications;
    return this;
  }

  /**
   * Get includeCommunications
   * @return includeCommunications
   */
  @javax.annotation.Nullable
  public Boolean getIncludeCommunications() {
    return includeCommunications;
  }

  public void setIncludeCommunications(Boolean includeCommunications) {
    this.includeCommunications = includeCommunications;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeCasesRequest describeCasesRequest = (DescribeCasesRequest) o;
    return Objects.equals(this.caseIdList, describeCasesRequest.caseIdList) &&
        Objects.equals(this.displayId, describeCasesRequest.displayId) &&
        Objects.equals(this.afterTime, describeCasesRequest.afterTime) &&
        Objects.equals(this.beforeTime, describeCasesRequest.beforeTime) &&
        Objects.equals(this.includeResolvedCases, describeCasesRequest.includeResolvedCases) &&
        Objects.equals(this.nextToken, describeCasesRequest.nextToken) &&
        Objects.equals(this.maxResults, describeCasesRequest.maxResults) &&
        Objects.equals(this.language, describeCasesRequest.language) &&
        Objects.equals(this.includeCommunications, describeCasesRequest.includeCommunications);
  }

  @Override
  public int hashCode() {
    return Objects.hash(caseIdList, displayId, afterTime, beforeTime, includeResolvedCases, nextToken, maxResults, language, includeCommunications);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeCasesRequest {\n");
    sb.append("    caseIdList: ").append(toIndentedString(caseIdList)).append("\n");
    sb.append("    displayId: ").append(toIndentedString(displayId)).append("\n");
    sb.append("    afterTime: ").append(toIndentedString(afterTime)).append("\n");
    sb.append("    beforeTime: ").append(toIndentedString(beforeTime)).append("\n");
    sb.append("    includeResolvedCases: ").append(toIndentedString(includeResolvedCases)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    includeCommunications: ").append(toIndentedString(includeCommunications)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("caseIdList");
    openapiFields.add("displayId");
    openapiFields.add("afterTime");
    openapiFields.add("beforeTime");
    openapiFields.add("includeResolvedCases");
    openapiFields.add("nextToken");
    openapiFields.add("maxResults");
    openapiFields.add("language");
    openapiFields.add("includeCommunications");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeCasesRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeCasesRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeCasesRequest is not found in the empty JSON string", DescribeCasesRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeCasesRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeCasesRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `caseIdList`
      if (jsonObj.get("caseIdList") != null && !jsonObj.get("caseIdList").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("caseIdList"));
      }
      // validate the optional field `displayId`
      if (jsonObj.get("displayId") != null && !jsonObj.get("displayId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("displayId"));
      }
      // validate the optional field `afterTime`
      if (jsonObj.get("afterTime") != null && !jsonObj.get("afterTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("afterTime"));
      }
      // validate the optional field `beforeTime`
      if (jsonObj.get("beforeTime") != null && !jsonObj.get("beforeTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("beforeTime"));
      }
      // validate the optional field `includeResolvedCases`
      if (jsonObj.get("includeResolvedCases") != null && !jsonObj.get("includeResolvedCases").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("includeResolvedCases"));
      }
      // validate the optional field `nextToken`
      if (jsonObj.get("nextToken") != null && !jsonObj.get("nextToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("nextToken"));
      }
      // validate the optional field `maxResults`
      if (jsonObj.get("maxResults") != null && !jsonObj.get("maxResults").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("maxResults"));
      }
      // validate the optional field `language`
      if (jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("language"));
      }
      // validate the optional field `includeCommunications`
      if (jsonObj.get("includeCommunications") != null && !jsonObj.get("includeCommunications").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("includeCommunications"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeCasesRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeCasesRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeCasesRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeCasesRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeCasesRequest>() {
           @Override
           public void write(JsonWriter out, DescribeCasesRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeCasesRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeCasesRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeCasesRequest
   * @throws IOException if the JSON string is invalid with respect to DescribeCasesRequest
   */
  public static DescribeCasesRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeCasesRequest.class);
  }

  /**
   * Convert an instance of DescribeCasesRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

