/*
 * AWS Support
 * <fullname>Amazon Web Services Support</fullname> <p>The <i>Amazon Web Services Support API Reference</i> is intended for programmers who need detailed information about the Amazon Web Services Support operations and data types. You can use the API to manage your support cases programmatically. The Amazon Web Services Support API uses HTTP methods that return results in JSON format.</p> <note> <ul> <li> <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. </p> </li> <li> <p>If you call the Amazon Web Services Support API from an account that doesn't have a Business, Enterprise On-Ramp, or Enterprise Support plan, the <code>SubscriptionRequiredException</code> error message appears. For information about changing your support plan, see <a href=\"http://aws.amazon.com/premiumsupport/\">Amazon Web Services Support</a>.</p> </li> </ul> </note> <p>You can also use the Amazon Web Services Support API to access features for <a href=\"http://aws.amazon.com/premiumsupport/trustedadvisor/\">Trusted Advisor</a>. You can return a list of checks and their descriptions, get check results, specify checks to refresh, and get the refresh status of checks.</p> <p>You can manage your support cases with the following Amazon Web Services Support API operations:</p> <ul> <li> <p>The <a>CreateCase</a>, <a>DescribeCases</a>, <a>DescribeAttachment</a>, and <a>ResolveCase</a> operations create Amazon Web Services Support cases, retrieve information about cases, and resolve cases.</p> </li> <li> <p>The <a>DescribeCommunications</a>, <a>AddCommunicationToCase</a>, and <a>AddAttachmentsToSet</a> operations retrieve and add communications and attachments to Amazon Web Services Support cases.</p> </li> <li> <p>The <a>DescribeServices</a> and <a>DescribeSeverityLevels</a> operations return Amazon Web Service names, service codes, service categories, and problem severity levels. You use these values when you call the <a>CreateCase</a> operation.</p> </li> </ul> <p>You can also use the Amazon Web Services Support API to call the Trusted Advisor operations. For more information, see <a href=\"https://docs.aws.amazon.com/\">Trusted Advisor</a> in the <i>Amazon Web Services Support User Guide</i>.</p> <p>For authentication of requests, Amazon Web Services Support uses <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a>.</p> <p>For more information about this service and the endpoints to use, see <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html\">About the Amazon Web Services Support API</a> in the <i>Amazon Web Services Support User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2013-04-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CaseDetailsRecentCommunications;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;A JSON-formatted object that contains the metadata for a support case. It is contained in the response from a &lt;a&gt;DescribeCases&lt;/a&gt; request. &lt;b&gt;CaseDetails&lt;/b&gt; contains the following fields:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;caseId&lt;/b&gt; - The support case ID requested or returned in the call. The case ID is an alphanumeric string formatted as shown in this example: case-&lt;i&gt;12345678910-2013-c4c1d2bf33c5cf47&lt;/i&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;categoryCode&lt;/b&gt; - The category of problem for the support case. Corresponds to the &lt;code&gt;CategoryCode&lt;/code&gt; values returned by a call to &lt;a&gt;DescribeServices&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;displayId&lt;/b&gt; - The identifier for the case on pages in the Amazon Web Services Support Center.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;language&lt;/b&gt; - The language in which Amazon Web Services Support handles the case. Amazon Web Services Support currently supports Chinese (“zh”), English (\&quot;en\&quot;), Japanese (\&quot;ja\&quot;) and Korean (“ko”). You must specify the ISO 639-1 code for the &lt;code&gt;language&lt;/code&gt; parameter if you want support in that language.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;nextToken&lt;/b&gt; - A resumption point for pagination.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;recentCommunications&lt;/b&gt; - One or more &lt;a&gt;Communication&lt;/a&gt; objects. Fields of these objects are &lt;code&gt;attachments&lt;/code&gt;, &lt;code&gt;body&lt;/code&gt;, &lt;code&gt;caseId&lt;/code&gt;, &lt;code&gt;submittedBy&lt;/code&gt;, and &lt;code&gt;timeCreated&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;serviceCode&lt;/b&gt; - The identifier for the Amazon Web Services service that corresponds to the service code defined in the call to &lt;a&gt;DescribeServices&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;severityCode&lt;/b&gt; - The severity code assigned to the case. Contains one of the values returned by the call to &lt;a&gt;DescribeSeverityLevels&lt;/a&gt;. The possible values are: &lt;code&gt;low&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;, &lt;code&gt;urgent&lt;/code&gt;, and &lt;code&gt;critical&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;status&lt;/b&gt; - The status of the case in the Amazon Web Services Support Center. Valid values:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;opened&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;pending-customer-action&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;reopened&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;resolved&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;unassigned&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;work-in-progress&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;subject&lt;/b&gt; - The subject line of the case.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;submittedBy&lt;/b&gt; - The email address of the account that submitted the case.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;timeCreated&lt;/b&gt; - The time the case was created, in ISO-8601 format.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:01.110966-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CaseDetails {
  public static final String SERIALIZED_NAME_CASE_ID = "caseId";
  @SerializedName(SERIALIZED_NAME_CASE_ID)
  private String caseId;

  public static final String SERIALIZED_NAME_DISPLAY_ID = "displayId";
  @SerializedName(SERIALIZED_NAME_DISPLAY_ID)
  private String displayId;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_SERVICE_CODE = "serviceCode";
  @SerializedName(SERIALIZED_NAME_SERVICE_CODE)
  private String serviceCode;

  public static final String SERIALIZED_NAME_CATEGORY_CODE = "categoryCode";
  @SerializedName(SERIALIZED_NAME_CATEGORY_CODE)
  private String categoryCode;

  public static final String SERIALIZED_NAME_SEVERITY_CODE = "severityCode";
  @SerializedName(SERIALIZED_NAME_SEVERITY_CODE)
  private String severityCode;

  public static final String SERIALIZED_NAME_SUBMITTED_BY = "submittedBy";
  @SerializedName(SERIALIZED_NAME_SUBMITTED_BY)
  private String submittedBy;

  public static final String SERIALIZED_NAME_TIME_CREATED = "timeCreated";
  @SerializedName(SERIALIZED_NAME_TIME_CREATED)
  private String timeCreated;

  public static final String SERIALIZED_NAME_RECENT_COMMUNICATIONS = "recentCommunications";
  @SerializedName(SERIALIZED_NAME_RECENT_COMMUNICATIONS)
  private CaseDetailsRecentCommunications recentCommunications;

  public static final String SERIALIZED_NAME_CC_EMAIL_ADDRESSES = "ccEmailAddresses";
  @SerializedName(SERIALIZED_NAME_CC_EMAIL_ADDRESSES)
  private List ccEmailAddresses;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public CaseDetails() {
  }

  public CaseDetails caseId(String caseId) {
    this.caseId = caseId;
    return this;
  }

  /**
   * Get caseId
   * @return caseId
   */
  @javax.annotation.Nullable
  public String getCaseId() {
    return caseId;
  }

  public void setCaseId(String caseId) {
    this.caseId = caseId;
  }


  public CaseDetails displayId(String displayId) {
    this.displayId = displayId;
    return this;
  }

  /**
   * Get displayId
   * @return displayId
   */
  @javax.annotation.Nullable
  public String getDisplayId() {
    return displayId;
  }

  public void setDisplayId(String displayId) {
    this.displayId = displayId;
  }


  public CaseDetails subject(String subject) {
    this.subject = subject;
    return this;
  }

  /**
   * Get subject
   * @return subject
   */
  @javax.annotation.Nullable
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }


  public CaseDetails status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public CaseDetails serviceCode(String serviceCode) {
    this.serviceCode = serviceCode;
    return this;
  }

  /**
   * Get serviceCode
   * @return serviceCode
   */
  @javax.annotation.Nullable
  public String getServiceCode() {
    return serviceCode;
  }

  public void setServiceCode(String serviceCode) {
    this.serviceCode = serviceCode;
  }


  public CaseDetails categoryCode(String categoryCode) {
    this.categoryCode = categoryCode;
    return this;
  }

  /**
   * Get categoryCode
   * @return categoryCode
   */
  @javax.annotation.Nullable
  public String getCategoryCode() {
    return categoryCode;
  }

  public void setCategoryCode(String categoryCode) {
    this.categoryCode = categoryCode;
  }


  public CaseDetails severityCode(String severityCode) {
    this.severityCode = severityCode;
    return this;
  }

  /**
   * Get severityCode
   * @return severityCode
   */
  @javax.annotation.Nullable
  public String getSeverityCode() {
    return severityCode;
  }

  public void setSeverityCode(String severityCode) {
    this.severityCode = severityCode;
  }


  public CaseDetails submittedBy(String submittedBy) {
    this.submittedBy = submittedBy;
    return this;
  }

  /**
   * Get submittedBy
   * @return submittedBy
   */
  @javax.annotation.Nullable
  public String getSubmittedBy() {
    return submittedBy;
  }

  public void setSubmittedBy(String submittedBy) {
    this.submittedBy = submittedBy;
  }


  public CaseDetails timeCreated(String timeCreated) {
    this.timeCreated = timeCreated;
    return this;
  }

  /**
   * Get timeCreated
   * @return timeCreated
   */
  @javax.annotation.Nullable
  public String getTimeCreated() {
    return timeCreated;
  }

  public void setTimeCreated(String timeCreated) {
    this.timeCreated = timeCreated;
  }


  public CaseDetails recentCommunications(CaseDetailsRecentCommunications recentCommunications) {
    this.recentCommunications = recentCommunications;
    return this;
  }

  /**
   * Get recentCommunications
   * @return recentCommunications
   */
  @javax.annotation.Nullable
  public CaseDetailsRecentCommunications getRecentCommunications() {
    return recentCommunications;
  }

  public void setRecentCommunications(CaseDetailsRecentCommunications recentCommunications) {
    this.recentCommunications = recentCommunications;
  }


  public CaseDetails ccEmailAddresses(List ccEmailAddresses) {
    this.ccEmailAddresses = ccEmailAddresses;
    return this;
  }

  /**
   * Get ccEmailAddresses
   * @return ccEmailAddresses
   */
  @javax.annotation.Nullable
  public List getCcEmailAddresses() {
    return ccEmailAddresses;
  }

  public void setCcEmailAddresses(List ccEmailAddresses) {
    this.ccEmailAddresses = ccEmailAddresses;
  }


  public CaseDetails language(String language) {
    this.language = language;
    return this;
  }

  /**
   * Get language
   * @return language
   */
  @javax.annotation.Nullable
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CaseDetails caseDetails = (CaseDetails) o;
    return Objects.equals(this.caseId, caseDetails.caseId) &&
        Objects.equals(this.displayId, caseDetails.displayId) &&
        Objects.equals(this.subject, caseDetails.subject) &&
        Objects.equals(this.status, caseDetails.status) &&
        Objects.equals(this.serviceCode, caseDetails.serviceCode) &&
        Objects.equals(this.categoryCode, caseDetails.categoryCode) &&
        Objects.equals(this.severityCode, caseDetails.severityCode) &&
        Objects.equals(this.submittedBy, caseDetails.submittedBy) &&
        Objects.equals(this.timeCreated, caseDetails.timeCreated) &&
        Objects.equals(this.recentCommunications, caseDetails.recentCommunications) &&
        Objects.equals(this.ccEmailAddresses, caseDetails.ccEmailAddresses) &&
        Objects.equals(this.language, caseDetails.language);
  }

  @Override
  public int hashCode() {
    return Objects.hash(caseId, displayId, subject, status, serviceCode, categoryCode, severityCode, submittedBy, timeCreated, recentCommunications, ccEmailAddresses, language);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CaseDetails {\n");
    sb.append("    caseId: ").append(toIndentedString(caseId)).append("\n");
    sb.append("    displayId: ").append(toIndentedString(displayId)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    serviceCode: ").append(toIndentedString(serviceCode)).append("\n");
    sb.append("    categoryCode: ").append(toIndentedString(categoryCode)).append("\n");
    sb.append("    severityCode: ").append(toIndentedString(severityCode)).append("\n");
    sb.append("    submittedBy: ").append(toIndentedString(submittedBy)).append("\n");
    sb.append("    timeCreated: ").append(toIndentedString(timeCreated)).append("\n");
    sb.append("    recentCommunications: ").append(toIndentedString(recentCommunications)).append("\n");
    sb.append("    ccEmailAddresses: ").append(toIndentedString(ccEmailAddresses)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("caseId");
    openapiFields.add("displayId");
    openapiFields.add("subject");
    openapiFields.add("status");
    openapiFields.add("serviceCode");
    openapiFields.add("categoryCode");
    openapiFields.add("severityCode");
    openapiFields.add("submittedBy");
    openapiFields.add("timeCreated");
    openapiFields.add("recentCommunications");
    openapiFields.add("ccEmailAddresses");
    openapiFields.add("language");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CaseDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CaseDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CaseDetails is not found in the empty JSON string", CaseDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CaseDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CaseDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `caseId`
      if (jsonObj.get("caseId") != null && !jsonObj.get("caseId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("caseId"));
      }
      // validate the optional field `displayId`
      if (jsonObj.get("displayId") != null && !jsonObj.get("displayId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("displayId"));
      }
      // validate the optional field `subject`
      if (jsonObj.get("subject") != null && !jsonObj.get("subject").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("subject"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `serviceCode`
      if (jsonObj.get("serviceCode") != null && !jsonObj.get("serviceCode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("serviceCode"));
      }
      // validate the optional field `categoryCode`
      if (jsonObj.get("categoryCode") != null && !jsonObj.get("categoryCode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("categoryCode"));
      }
      // validate the optional field `severityCode`
      if (jsonObj.get("severityCode") != null && !jsonObj.get("severityCode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("severityCode"));
      }
      // validate the optional field `submittedBy`
      if (jsonObj.get("submittedBy") != null && !jsonObj.get("submittedBy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("submittedBy"));
      }
      // validate the optional field `timeCreated`
      if (jsonObj.get("timeCreated") != null && !jsonObj.get("timeCreated").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("timeCreated"));
      }
      // validate the optional field `recentCommunications`
      if (jsonObj.get("recentCommunications") != null && !jsonObj.get("recentCommunications").isJsonNull()) {
        CaseDetailsRecentCommunications.validateJsonElement(jsonObj.get("recentCommunications"));
      }
      // validate the optional field `ccEmailAddresses`
      if (jsonObj.get("ccEmailAddresses") != null && !jsonObj.get("ccEmailAddresses").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ccEmailAddresses"));
      }
      // validate the optional field `language`
      if (jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("language"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CaseDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CaseDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CaseDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CaseDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<CaseDetails>() {
           @Override
           public void write(JsonWriter out, CaseDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CaseDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CaseDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CaseDetails
   * @throws IOException if the JSON string is invalid with respect to CaseDetails
   */
  public static CaseDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CaseDetails.class);
  }

  /**
   * Convert an instance of CaseDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

