/*
 * AWS Support
 * <fullname>Amazon Web Services Support</fullname> <p>The <i>Amazon Web Services Support API Reference</i> is intended for programmers who need detailed information about the Amazon Web Services Support operations and data types. You can use the API to manage your support cases programmatically. The Amazon Web Services Support API uses HTTP methods that return results in JSON format.</p> <note> <ul> <li> <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. </p> </li> <li> <p>If you call the Amazon Web Services Support API from an account that doesn't have a Business, Enterprise On-Ramp, or Enterprise Support plan, the <code>SubscriptionRequiredException</code> error message appears. For information about changing your support plan, see <a href=\"http://aws.amazon.com/premiumsupport/\">Amazon Web Services Support</a>.</p> </li> </ul> </note> <p>You can also use the Amazon Web Services Support API to access features for <a href=\"http://aws.amazon.com/premiumsupport/trustedadvisor/\">Trusted Advisor</a>. You can return a list of checks and their descriptions, get check results, specify checks to refresh, and get the refresh status of checks.</p> <p>You can manage your support cases with the following Amazon Web Services Support API operations:</p> <ul> <li> <p>The <a>CreateCase</a>, <a>DescribeCases</a>, <a>DescribeAttachment</a>, and <a>ResolveCase</a> operations create Amazon Web Services Support cases, retrieve information about cases, and resolve cases.</p> </li> <li> <p>The <a>DescribeCommunications</a>, <a>AddCommunicationToCase</a>, and <a>AddAttachmentsToSet</a> operations retrieve and add communications and attachments to Amazon Web Services Support cases.</p> </li> <li> <p>The <a>DescribeServices</a> and <a>DescribeSeverityLevels</a> operations return Amazon Web Service names, service codes, service categories, and problem severity levels. You use these values when you call the <a>CreateCase</a> operation.</p> </li> </ul> <p>You can also use the Amazon Web Services Support API to call the Trusted Advisor operations. For more information, see <a href=\"https://docs.aws.amazon.com/\">Trusted Advisor</a> in the <i>Amazon Web Services Support User Guide</i>.</p> <p>For authentication of requests, Amazon Web Services Support uses <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a>.</p> <p>For more information about this service and the endpoints to use, see <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html\">About the Amazon Web Services Support API</a> in the <i>Amazon Web Services Support User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2013-04-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.AddAttachmentsToSetRequest;
import org.openapitools.client.model.AddAttachmentsToSetResponse;
import org.openapitools.client.model.AddCommunicationToCaseRequest;
import org.openapitools.client.model.AddCommunicationToCaseResponse;
import org.openapitools.client.model.CreateCaseRequest;
import org.openapitools.client.model.CreateCaseResponse;
import org.openapitools.client.model.DescribeAttachmentRequest;
import org.openapitools.client.model.DescribeAttachmentResponse;
import org.openapitools.client.model.DescribeCasesRequest;
import org.openapitools.client.model.DescribeCasesResponse;
import org.openapitools.client.model.DescribeCommunicationsRequest;
import org.openapitools.client.model.DescribeCommunicationsResponse;
import org.openapitools.client.model.DescribeCreateCaseOptionsRequest;
import org.openapitools.client.model.DescribeCreateCaseOptionsResponse;
import org.openapitools.client.model.DescribeServicesRequest;
import org.openapitools.client.model.DescribeServicesResponse;
import org.openapitools.client.model.DescribeSeverityLevelsRequest;
import org.openapitools.client.model.DescribeSeverityLevelsResponse;
import org.openapitools.client.model.DescribeSupportedLanguagesRequest;
import org.openapitools.client.model.DescribeSupportedLanguagesResponse;
import org.openapitools.client.model.DescribeTrustedAdvisorCheckRefreshStatusesRequest;
import org.openapitools.client.model.DescribeTrustedAdvisorCheckRefreshStatusesResponse;
import org.openapitools.client.model.DescribeTrustedAdvisorCheckResultRequest;
import org.openapitools.client.model.DescribeTrustedAdvisorCheckResultResponse;
import org.openapitools.client.model.DescribeTrustedAdvisorCheckSummariesRequest;
import org.openapitools.client.model.DescribeTrustedAdvisorCheckSummariesResponse;
import org.openapitools.client.model.DescribeTrustedAdvisorChecksRequest;
import org.openapitools.client.model.DescribeTrustedAdvisorChecksResponse;
import org.openapitools.client.model.RefreshTrustedAdvisorCheckRequest;
import org.openapitools.client.model.RefreshTrustedAdvisorCheckResponse;
import org.openapitools.client.model.ResolveCaseRequest;
import org.openapitools.client.model.ResolveCaseResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DefaultApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DefaultApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DefaultApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for addAttachmentsToSet
     * @param xAmzTarget  (required)
     * @param addAttachmentsToSetRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> AttachmentSetIdNotFound </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> AttachmentSetExpired </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> AttachmentSetSizeLimitExceeded </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> AttachmentLimitExceeded </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addAttachmentsToSetCall(String xAmzTarget, AddAttachmentsToSetRequest addAttachmentsToSetRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = addAttachmentsToSetRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=AWSSupport_20130415.AddAttachmentsToSet";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addAttachmentsToSetValidateBeforeCall(String xAmzTarget, AddAttachmentsToSetRequest addAttachmentsToSetRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling addAttachmentsToSet(Async)");
        }

        // verify the required parameter 'addAttachmentsToSetRequest' is set
        if (addAttachmentsToSetRequest == null) {
            throw new ApiException("Missing the required parameter 'addAttachmentsToSetRequest' when calling addAttachmentsToSet(Async)");
        }

        return addAttachmentsToSetCall(xAmzTarget, addAttachmentsToSetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;p&gt;Adds one or more attachments to an attachment set. &lt;/p&gt; &lt;p&gt;An attachment set is a temporary container for attachments that you add to a case or case communication. The set is available for 1 hour after it&#39;s created. The &lt;code&gt;expiryTime&lt;/code&gt; returned in the response is when the set expires. &lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param addAttachmentsToSetRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return AddAttachmentsToSetResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> AttachmentSetIdNotFound </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> AttachmentSetExpired </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> AttachmentSetSizeLimitExceeded </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> AttachmentLimitExceeded </td><td>  -  </td></tr>
     </table>
     */
    public AddAttachmentsToSetResponse addAttachmentsToSet(String xAmzTarget, AddAttachmentsToSetRequest addAttachmentsToSetRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<AddAttachmentsToSetResponse> localVarResp = addAttachmentsToSetWithHttpInfo(xAmzTarget, addAttachmentsToSetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;p&gt;Adds one or more attachments to an attachment set. &lt;/p&gt; &lt;p&gt;An attachment set is a temporary container for attachments that you add to a case or case communication. The set is available for 1 hour after it&#39;s created. The &lt;code&gt;expiryTime&lt;/code&gt; returned in the response is when the set expires. &lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param addAttachmentsToSetRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;AddAttachmentsToSetResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> AttachmentSetIdNotFound </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> AttachmentSetExpired </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> AttachmentSetSizeLimitExceeded </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> AttachmentLimitExceeded </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AddAttachmentsToSetResponse> addAttachmentsToSetWithHttpInfo(String xAmzTarget, AddAttachmentsToSetRequest addAttachmentsToSetRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = addAttachmentsToSetValidateBeforeCall(xAmzTarget, addAttachmentsToSetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<AddAttachmentsToSetResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;p&gt;Adds one or more attachments to an attachment set. &lt;/p&gt; &lt;p&gt;An attachment set is a temporary container for attachments that you add to a case or case communication. The set is available for 1 hour after it&#39;s created. The &lt;code&gt;expiryTime&lt;/code&gt; returned in the response is when the set expires. &lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param addAttachmentsToSetRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> AttachmentSetIdNotFound </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> AttachmentSetExpired </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> AttachmentSetSizeLimitExceeded </td><td>  -  </td></tr>
        <tr><td> 484 </td><td> AttachmentLimitExceeded </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addAttachmentsToSetAsync(String xAmzTarget, AddAttachmentsToSetRequest addAttachmentsToSetRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<AddAttachmentsToSetResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = addAttachmentsToSetValidateBeforeCall(xAmzTarget, addAttachmentsToSetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<AddAttachmentsToSetResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for addCommunicationToCase
     * @param xAmzTarget  (required)
     * @param addCommunicationToCaseRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseIdNotFound </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> AttachmentSetIdNotFound </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> AttachmentSetExpired </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addCommunicationToCaseCall(String xAmzTarget, AddCommunicationToCaseRequest addCommunicationToCaseRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = addCommunicationToCaseRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=AWSSupport_20130415.AddCommunicationToCase";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addCommunicationToCaseValidateBeforeCall(String xAmzTarget, AddCommunicationToCaseRequest addCommunicationToCaseRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling addCommunicationToCase(Async)");
        }

        // verify the required parameter 'addCommunicationToCaseRequest' is set
        if (addCommunicationToCaseRequest == null) {
            throw new ApiException("Missing the required parameter 'addCommunicationToCaseRequest' when calling addCommunicationToCase(Async)");
        }

        return addCommunicationToCaseCall(xAmzTarget, addCommunicationToCaseRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;p&gt;Adds additional customer communication to an Amazon Web Services Support case. Use the &lt;code&gt;caseId&lt;/code&gt; parameter to identify the case to which to add communication. You can list a set of email addresses to copy on the communication by using the &lt;code&gt;ccEmailAddresses&lt;/code&gt; parameter. The &lt;code&gt;communicationBody&lt;/code&gt; value contains the text of the communication.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param addCommunicationToCaseRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return AddCommunicationToCaseResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseIdNotFound </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> AttachmentSetIdNotFound </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> AttachmentSetExpired </td><td>  -  </td></tr>
     </table>
     */
    public AddCommunicationToCaseResponse addCommunicationToCase(String xAmzTarget, AddCommunicationToCaseRequest addCommunicationToCaseRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<AddCommunicationToCaseResponse> localVarResp = addCommunicationToCaseWithHttpInfo(xAmzTarget, addCommunicationToCaseRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;p&gt;Adds additional customer communication to an Amazon Web Services Support case. Use the &lt;code&gt;caseId&lt;/code&gt; parameter to identify the case to which to add communication. You can list a set of email addresses to copy on the communication by using the &lt;code&gt;ccEmailAddresses&lt;/code&gt; parameter. The &lt;code&gt;communicationBody&lt;/code&gt; value contains the text of the communication.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param addCommunicationToCaseRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;AddCommunicationToCaseResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseIdNotFound </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> AttachmentSetIdNotFound </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> AttachmentSetExpired </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AddCommunicationToCaseResponse> addCommunicationToCaseWithHttpInfo(String xAmzTarget, AddCommunicationToCaseRequest addCommunicationToCaseRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = addCommunicationToCaseValidateBeforeCall(xAmzTarget, addCommunicationToCaseRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<AddCommunicationToCaseResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;p&gt;Adds additional customer communication to an Amazon Web Services Support case. Use the &lt;code&gt;caseId&lt;/code&gt; parameter to identify the case to which to add communication. You can list a set of email addresses to copy on the communication by using the &lt;code&gt;ccEmailAddresses&lt;/code&gt; parameter. The &lt;code&gt;communicationBody&lt;/code&gt; value contains the text of the communication.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param addCommunicationToCaseRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseIdNotFound </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> AttachmentSetIdNotFound </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> AttachmentSetExpired </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addCommunicationToCaseAsync(String xAmzTarget, AddCommunicationToCaseRequest addCommunicationToCaseRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<AddCommunicationToCaseResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = addCommunicationToCaseValidateBeforeCall(xAmzTarget, addCommunicationToCaseRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<AddCommunicationToCaseResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for createCase
     * @param xAmzTarget  (required)
     * @param createCaseRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseCreationLimitExceeded </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> AttachmentSetIdNotFound </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> AttachmentSetExpired </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createCaseCall(String xAmzTarget, CreateCaseRequest createCaseRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = createCaseRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=AWSSupport_20130415.CreateCase";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createCaseValidateBeforeCall(String xAmzTarget, CreateCaseRequest createCaseRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling createCase(Async)");
        }

        // verify the required parameter 'createCaseRequest' is set
        if (createCaseRequest == null) {
            throw new ApiException("Missing the required parameter 'createCaseRequest' when calling createCase(Async)");
        }

        return createCaseCall(xAmzTarget, createCaseRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;p&gt;Creates a case in the Amazon Web Services Support Center. This operation is similar to how you create a case in the Amazon Web Services Support Center &lt;a href&#x3D;\&quot;https://console.aws.amazon.com/support/home#/case/create\&quot;&gt;Create Case&lt;/a&gt; page.&lt;/p&gt; &lt;p&gt;The Amazon Web Services Support API doesn&#39;t support requesting service limit increases. You can submit a service limit increase in the following ways: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Submit a request from the Amazon Web Services Support Center &lt;a href&#x3D;\&quot;https://console.aws.amazon.com/support/home#/case/create\&quot;&gt;Create Case&lt;/a&gt; page.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use the Service Quotas &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/servicequotas/2019-06-24/apireference/API_RequestServiceQuotaIncrease.html\&quot;&gt;RequestServiceQuotaIncrease&lt;/a&gt; operation.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;A successful &lt;code&gt;CreateCase&lt;/code&gt; request returns an Amazon Web Services Support case number. You can use the &lt;a&gt;DescribeCases&lt;/a&gt; operation and specify the case number to get existing Amazon Web Services Support cases. After you create a case, use the &lt;a&gt;AddCommunicationToCase&lt;/a&gt; operation to add additional communication or attachments to an existing case.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;caseId&lt;/code&gt; is separate from the &lt;code&gt;displayId&lt;/code&gt; that appears in the &lt;a href&#x3D;\&quot;https://console.aws.amazon.com/support\&quot;&gt;Amazon Web Services Support Center&lt;/a&gt;. Use the &lt;a&gt;DescribeCases&lt;/a&gt; operation to get the &lt;code&gt;displayId&lt;/code&gt;.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param createCaseRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return CreateCaseResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseCreationLimitExceeded </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> AttachmentSetIdNotFound </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> AttachmentSetExpired </td><td>  -  </td></tr>
     </table>
     */
    public CreateCaseResponse createCase(String xAmzTarget, CreateCaseRequest createCaseRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<CreateCaseResponse> localVarResp = createCaseWithHttpInfo(xAmzTarget, createCaseRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;p&gt;Creates a case in the Amazon Web Services Support Center. This operation is similar to how you create a case in the Amazon Web Services Support Center &lt;a href&#x3D;\&quot;https://console.aws.amazon.com/support/home#/case/create\&quot;&gt;Create Case&lt;/a&gt; page.&lt;/p&gt; &lt;p&gt;The Amazon Web Services Support API doesn&#39;t support requesting service limit increases. You can submit a service limit increase in the following ways: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Submit a request from the Amazon Web Services Support Center &lt;a href&#x3D;\&quot;https://console.aws.amazon.com/support/home#/case/create\&quot;&gt;Create Case&lt;/a&gt; page.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use the Service Quotas &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/servicequotas/2019-06-24/apireference/API_RequestServiceQuotaIncrease.html\&quot;&gt;RequestServiceQuotaIncrease&lt;/a&gt; operation.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;A successful &lt;code&gt;CreateCase&lt;/code&gt; request returns an Amazon Web Services Support case number. You can use the &lt;a&gt;DescribeCases&lt;/a&gt; operation and specify the case number to get existing Amazon Web Services Support cases. After you create a case, use the &lt;a&gt;AddCommunicationToCase&lt;/a&gt; operation to add additional communication or attachments to an existing case.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;caseId&lt;/code&gt; is separate from the &lt;code&gt;displayId&lt;/code&gt; that appears in the &lt;a href&#x3D;\&quot;https://console.aws.amazon.com/support\&quot;&gt;Amazon Web Services Support Center&lt;/a&gt;. Use the &lt;a&gt;DescribeCases&lt;/a&gt; operation to get the &lt;code&gt;displayId&lt;/code&gt;.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param createCaseRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;CreateCaseResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseCreationLimitExceeded </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> AttachmentSetIdNotFound </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> AttachmentSetExpired </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CreateCaseResponse> createCaseWithHttpInfo(String xAmzTarget, CreateCaseRequest createCaseRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = createCaseValidateBeforeCall(xAmzTarget, createCaseRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<CreateCaseResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;p&gt;Creates a case in the Amazon Web Services Support Center. This operation is similar to how you create a case in the Amazon Web Services Support Center &lt;a href&#x3D;\&quot;https://console.aws.amazon.com/support/home#/case/create\&quot;&gt;Create Case&lt;/a&gt; page.&lt;/p&gt; &lt;p&gt;The Amazon Web Services Support API doesn&#39;t support requesting service limit increases. You can submit a service limit increase in the following ways: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Submit a request from the Amazon Web Services Support Center &lt;a href&#x3D;\&quot;https://console.aws.amazon.com/support/home#/case/create\&quot;&gt;Create Case&lt;/a&gt; page.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use the Service Quotas &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/servicequotas/2019-06-24/apireference/API_RequestServiceQuotaIncrease.html\&quot;&gt;RequestServiceQuotaIncrease&lt;/a&gt; operation.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;A successful &lt;code&gt;CreateCase&lt;/code&gt; request returns an Amazon Web Services Support case number. You can use the &lt;a&gt;DescribeCases&lt;/a&gt; operation and specify the case number to get existing Amazon Web Services Support cases. After you create a case, use the &lt;a&gt;AddCommunicationToCase&lt;/a&gt; operation to add additional communication or attachments to an existing case.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;caseId&lt;/code&gt; is separate from the &lt;code&gt;displayId&lt;/code&gt; that appears in the &lt;a href&#x3D;\&quot;https://console.aws.amazon.com/support\&quot;&gt;Amazon Web Services Support Center&lt;/a&gt;. Use the &lt;a&gt;DescribeCases&lt;/a&gt; operation to get the &lt;code&gt;displayId&lt;/code&gt;.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param createCaseRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseCreationLimitExceeded </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> AttachmentSetIdNotFound </td><td>  -  </td></tr>
        <tr><td> 483 </td><td> AttachmentSetExpired </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createCaseAsync(String xAmzTarget, CreateCaseRequest createCaseRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<CreateCaseResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = createCaseValidateBeforeCall(xAmzTarget, createCaseRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<CreateCaseResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for describeAttachment
     * @param xAmzTarget  (required)
     * @param describeAttachmentRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> DescribeAttachmentLimitExceeded </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> AttachmentIdNotFound </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeAttachmentCall(String xAmzTarget, DescribeAttachmentRequest describeAttachmentRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = describeAttachmentRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=AWSSupport_20130415.DescribeAttachment";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call describeAttachmentValidateBeforeCall(String xAmzTarget, DescribeAttachmentRequest describeAttachmentRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling describeAttachment(Async)");
        }

        // verify the required parameter 'describeAttachmentRequest' is set
        if (describeAttachmentRequest == null) {
            throw new ApiException("Missing the required parameter 'describeAttachmentRequest' when calling describeAttachment(Async)");
        }

        return describeAttachmentCall(xAmzTarget, describeAttachmentRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;p&gt;Returns the attachment that has the specified ID. Attachments can include screenshots, error logs, or other files that describe your issue. Attachment IDs are generated by the case management system when you add an attachment to a case or case communication. Attachment IDs are returned in the &lt;a&gt;AttachmentDetails&lt;/a&gt; objects that are returned by the &lt;a&gt;DescribeCommunications&lt;/a&gt; operation.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeAttachmentRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return DescribeAttachmentResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> DescribeAttachmentLimitExceeded </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> AttachmentIdNotFound </td><td>  -  </td></tr>
     </table>
     */
    public DescribeAttachmentResponse describeAttachment(String xAmzTarget, DescribeAttachmentRequest describeAttachmentRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<DescribeAttachmentResponse> localVarResp = describeAttachmentWithHttpInfo(xAmzTarget, describeAttachmentRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;p&gt;Returns the attachment that has the specified ID. Attachments can include screenshots, error logs, or other files that describe your issue. Attachment IDs are generated by the case management system when you add an attachment to a case or case communication. Attachment IDs are returned in the &lt;a&gt;AttachmentDetails&lt;/a&gt; objects that are returned by the &lt;a&gt;DescribeCommunications&lt;/a&gt; operation.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeAttachmentRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;DescribeAttachmentResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> DescribeAttachmentLimitExceeded </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> AttachmentIdNotFound </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DescribeAttachmentResponse> describeAttachmentWithHttpInfo(String xAmzTarget, DescribeAttachmentRequest describeAttachmentRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = describeAttachmentValidateBeforeCall(xAmzTarget, describeAttachmentRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<DescribeAttachmentResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;p&gt;Returns the attachment that has the specified ID. Attachments can include screenshots, error logs, or other files that describe your issue. Attachment IDs are generated by the case management system when you add an attachment to a case or case communication. Attachment IDs are returned in the &lt;a&gt;AttachmentDetails&lt;/a&gt; objects that are returned by the &lt;a&gt;DescribeCommunications&lt;/a&gt; operation.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeAttachmentRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> DescribeAttachmentLimitExceeded </td><td>  -  </td></tr>
        <tr><td> 482 </td><td> AttachmentIdNotFound </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeAttachmentAsync(String xAmzTarget, DescribeAttachmentRequest describeAttachmentRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<DescribeAttachmentResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = describeAttachmentValidateBeforeCall(xAmzTarget, describeAttachmentRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<DescribeAttachmentResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for describeCases
     * @param xAmzTarget  (required)
     * @param describeCasesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param maxResults Pagination limit (optional)
     * @param nextToken Pagination token (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseIdNotFound </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeCasesCall(String xAmzTarget, DescribeCasesRequest describeCasesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, String maxResults, String nextToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = describeCasesRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=AWSSupport_20130415.DescribeCases";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        if (nextToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("nextToken", nextToken));
        }

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call describeCasesValidateBeforeCall(String xAmzTarget, DescribeCasesRequest describeCasesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, String maxResults, String nextToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling describeCases(Async)");
        }

        // verify the required parameter 'describeCasesRequest' is set
        if (describeCasesRequest == null) {
            throw new ApiException("Missing the required parameter 'describeCasesRequest' when calling describeCases(Async)");
        }

        return describeCasesCall(xAmzTarget, describeCasesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, _callback);

    }

    /**
     * 
     * &lt;p&gt;Returns a list of cases that you specify by passing one or more case IDs. You can use the &lt;code&gt;afterTime&lt;/code&gt; and &lt;code&gt;beforeTime&lt;/code&gt; parameters to filter the cases by date. You can set values for the &lt;code&gt;includeResolvedCases&lt;/code&gt; and &lt;code&gt;includeCommunications&lt;/code&gt; parameters to specify how much information to return.&lt;/p&gt; &lt;p&gt;The response returns the following in JSON format:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;One or more &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/APIReference/API_CaseDetails.html\&quot;&gt;CaseDetails&lt;/a&gt; data types.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;One or more &lt;code&gt;nextToken&lt;/code&gt; values, which specify where to paginate the returned records represented by the &lt;code&gt;CaseDetails&lt;/code&gt; objects.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Case data is available for 12 months after creation. If a case was created more than 12 months ago, a request might return an error.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeCasesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param maxResults Pagination limit (optional)
     * @param nextToken Pagination token (optional)
     * @return DescribeCasesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseIdNotFound </td><td>  -  </td></tr>
     </table>
     */
    public DescribeCasesResponse describeCases(String xAmzTarget, DescribeCasesRequest describeCasesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, String maxResults, String nextToken) throws ApiException {
        ApiResponse<DescribeCasesResponse> localVarResp = describeCasesWithHttpInfo(xAmzTarget, describeCasesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;p&gt;Returns a list of cases that you specify by passing one or more case IDs. You can use the &lt;code&gt;afterTime&lt;/code&gt; and &lt;code&gt;beforeTime&lt;/code&gt; parameters to filter the cases by date. You can set values for the &lt;code&gt;includeResolvedCases&lt;/code&gt; and &lt;code&gt;includeCommunications&lt;/code&gt; parameters to specify how much information to return.&lt;/p&gt; &lt;p&gt;The response returns the following in JSON format:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;One or more &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/APIReference/API_CaseDetails.html\&quot;&gt;CaseDetails&lt;/a&gt; data types.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;One or more &lt;code&gt;nextToken&lt;/code&gt; values, which specify where to paginate the returned records represented by the &lt;code&gt;CaseDetails&lt;/code&gt; objects.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Case data is available for 12 months after creation. If a case was created more than 12 months ago, a request might return an error.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeCasesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param maxResults Pagination limit (optional)
     * @param nextToken Pagination token (optional)
     * @return ApiResponse&lt;DescribeCasesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseIdNotFound </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DescribeCasesResponse> describeCasesWithHttpInfo(String xAmzTarget, DescribeCasesRequest describeCasesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, String maxResults, String nextToken) throws ApiException {
        okhttp3.Call localVarCall = describeCasesValidateBeforeCall(xAmzTarget, describeCasesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, null);
        Type localVarReturnType = new TypeToken<DescribeCasesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;p&gt;Returns a list of cases that you specify by passing one or more case IDs. You can use the &lt;code&gt;afterTime&lt;/code&gt; and &lt;code&gt;beforeTime&lt;/code&gt; parameters to filter the cases by date. You can set values for the &lt;code&gt;includeResolvedCases&lt;/code&gt; and &lt;code&gt;includeCommunications&lt;/code&gt; parameters to specify how much information to return.&lt;/p&gt; &lt;p&gt;The response returns the following in JSON format:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;One or more &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/APIReference/API_CaseDetails.html\&quot;&gt;CaseDetails&lt;/a&gt; data types.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;One or more &lt;code&gt;nextToken&lt;/code&gt; values, which specify where to paginate the returned records represented by the &lt;code&gt;CaseDetails&lt;/code&gt; objects.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Case data is available for 12 months after creation. If a case was created more than 12 months ago, a request might return an error.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeCasesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param maxResults Pagination limit (optional)
     * @param nextToken Pagination token (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseIdNotFound </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeCasesAsync(String xAmzTarget, DescribeCasesRequest describeCasesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, String maxResults, String nextToken, final ApiCallback<DescribeCasesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = describeCasesValidateBeforeCall(xAmzTarget, describeCasesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, _callback);
        Type localVarReturnType = new TypeToken<DescribeCasesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for describeCommunications
     * @param xAmzTarget  (required)
     * @param describeCommunicationsRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param maxResults Pagination limit (optional)
     * @param nextToken Pagination token (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseIdNotFound </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeCommunicationsCall(String xAmzTarget, DescribeCommunicationsRequest describeCommunicationsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, String maxResults, String nextToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = describeCommunicationsRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=AWSSupport_20130415.DescribeCommunications";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (maxResults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxResults", maxResults));
        }

        if (nextToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("nextToken", nextToken));
        }

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call describeCommunicationsValidateBeforeCall(String xAmzTarget, DescribeCommunicationsRequest describeCommunicationsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, String maxResults, String nextToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling describeCommunications(Async)");
        }

        // verify the required parameter 'describeCommunicationsRequest' is set
        if (describeCommunicationsRequest == null) {
            throw new ApiException("Missing the required parameter 'describeCommunicationsRequest' when calling describeCommunications(Async)");
        }

        return describeCommunicationsCall(xAmzTarget, describeCommunicationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, _callback);

    }

    /**
     * 
     * &lt;p&gt;Returns communications and attachments for one or more support cases. Use the &lt;code&gt;afterTime&lt;/code&gt; and &lt;code&gt;beforeTime&lt;/code&gt; parameters to filter by date. You can use the &lt;code&gt;caseId&lt;/code&gt; parameter to restrict the results to a specific case.&lt;/p&gt; &lt;p&gt;Case data is available for 12 months after creation. If a case was created more than 12 months ago, a request for data might cause an error.&lt;/p&gt; &lt;p&gt;You can use the &lt;code&gt;maxResults&lt;/code&gt; and &lt;code&gt;nextToken&lt;/code&gt; parameters to control the pagination of the results. Set &lt;code&gt;maxResults&lt;/code&gt; to the number of cases that you want to display on each page, and use &lt;code&gt;nextToken&lt;/code&gt; to specify the resumption of pagination.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeCommunicationsRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param maxResults Pagination limit (optional)
     * @param nextToken Pagination token (optional)
     * @return DescribeCommunicationsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseIdNotFound </td><td>  -  </td></tr>
     </table>
     */
    public DescribeCommunicationsResponse describeCommunications(String xAmzTarget, DescribeCommunicationsRequest describeCommunicationsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, String maxResults, String nextToken) throws ApiException {
        ApiResponse<DescribeCommunicationsResponse> localVarResp = describeCommunicationsWithHttpInfo(xAmzTarget, describeCommunicationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;p&gt;Returns communications and attachments for one or more support cases. Use the &lt;code&gt;afterTime&lt;/code&gt; and &lt;code&gt;beforeTime&lt;/code&gt; parameters to filter by date. You can use the &lt;code&gt;caseId&lt;/code&gt; parameter to restrict the results to a specific case.&lt;/p&gt; &lt;p&gt;Case data is available for 12 months after creation. If a case was created more than 12 months ago, a request for data might cause an error.&lt;/p&gt; &lt;p&gt;You can use the &lt;code&gt;maxResults&lt;/code&gt; and &lt;code&gt;nextToken&lt;/code&gt; parameters to control the pagination of the results. Set &lt;code&gt;maxResults&lt;/code&gt; to the number of cases that you want to display on each page, and use &lt;code&gt;nextToken&lt;/code&gt; to specify the resumption of pagination.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeCommunicationsRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param maxResults Pagination limit (optional)
     * @param nextToken Pagination token (optional)
     * @return ApiResponse&lt;DescribeCommunicationsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseIdNotFound </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DescribeCommunicationsResponse> describeCommunicationsWithHttpInfo(String xAmzTarget, DescribeCommunicationsRequest describeCommunicationsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, String maxResults, String nextToken) throws ApiException {
        okhttp3.Call localVarCall = describeCommunicationsValidateBeforeCall(xAmzTarget, describeCommunicationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, null);
        Type localVarReturnType = new TypeToken<DescribeCommunicationsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;p&gt;Returns communications and attachments for one or more support cases. Use the &lt;code&gt;afterTime&lt;/code&gt; and &lt;code&gt;beforeTime&lt;/code&gt; parameters to filter by date. You can use the &lt;code&gt;caseId&lt;/code&gt; parameter to restrict the results to a specific case.&lt;/p&gt; &lt;p&gt;Case data is available for 12 months after creation. If a case was created more than 12 months ago, a request for data might cause an error.&lt;/p&gt; &lt;p&gt;You can use the &lt;code&gt;maxResults&lt;/code&gt; and &lt;code&gt;nextToken&lt;/code&gt; parameters to control the pagination of the results. Set &lt;code&gt;maxResults&lt;/code&gt; to the number of cases that you want to display on each page, and use &lt;code&gt;nextToken&lt;/code&gt; to specify the resumption of pagination.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeCommunicationsRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param maxResults Pagination limit (optional)
     * @param nextToken Pagination token (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseIdNotFound </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeCommunicationsAsync(String xAmzTarget, DescribeCommunicationsRequest describeCommunicationsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, String maxResults, String nextToken, final ApiCallback<DescribeCommunicationsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = describeCommunicationsValidateBeforeCall(xAmzTarget, describeCommunicationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, _callback);
        Type localVarReturnType = new TypeToken<DescribeCommunicationsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for describeCreateCaseOptions
     * @param xAmzTarget  (required)
     * @param describeCreateCaseOptionsRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeCreateCaseOptionsCall(String xAmzTarget, DescribeCreateCaseOptionsRequest describeCreateCaseOptionsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = describeCreateCaseOptionsRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=AWSSupport_20130415.DescribeCreateCaseOptions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call describeCreateCaseOptionsValidateBeforeCall(String xAmzTarget, DescribeCreateCaseOptionsRequest describeCreateCaseOptionsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling describeCreateCaseOptions(Async)");
        }

        // verify the required parameter 'describeCreateCaseOptionsRequest' is set
        if (describeCreateCaseOptionsRequest == null) {
            throw new ApiException("Missing the required parameter 'describeCreateCaseOptionsRequest' when calling describeCreateCaseOptions(Async)");
        }

        return describeCreateCaseOptionsCall(xAmzTarget, describeCreateCaseOptionsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;p&gt;Returns a list of CreateCaseOption types along with the corresponding supported hours and language availability. You can specify the &lt;code&gt;language&lt;/code&gt; &lt;code&gt;categoryCode&lt;/code&gt;, &lt;code&gt;issueType&lt;/code&gt; and &lt;code&gt;serviceCode&lt;/code&gt; used to retrieve the CreateCaseOptions.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeCreateCaseOptionsRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return DescribeCreateCaseOptionsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public DescribeCreateCaseOptionsResponse describeCreateCaseOptions(String xAmzTarget, DescribeCreateCaseOptionsRequest describeCreateCaseOptionsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<DescribeCreateCaseOptionsResponse> localVarResp = describeCreateCaseOptionsWithHttpInfo(xAmzTarget, describeCreateCaseOptionsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;p&gt;Returns a list of CreateCaseOption types along with the corresponding supported hours and language availability. You can specify the &lt;code&gt;language&lt;/code&gt; &lt;code&gt;categoryCode&lt;/code&gt;, &lt;code&gt;issueType&lt;/code&gt; and &lt;code&gt;serviceCode&lt;/code&gt; used to retrieve the CreateCaseOptions.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeCreateCaseOptionsRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;DescribeCreateCaseOptionsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DescribeCreateCaseOptionsResponse> describeCreateCaseOptionsWithHttpInfo(String xAmzTarget, DescribeCreateCaseOptionsRequest describeCreateCaseOptionsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = describeCreateCaseOptionsValidateBeforeCall(xAmzTarget, describeCreateCaseOptionsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<DescribeCreateCaseOptionsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;p&gt;Returns a list of CreateCaseOption types along with the corresponding supported hours and language availability. You can specify the &lt;code&gt;language&lt;/code&gt; &lt;code&gt;categoryCode&lt;/code&gt;, &lt;code&gt;issueType&lt;/code&gt; and &lt;code&gt;serviceCode&lt;/code&gt; used to retrieve the CreateCaseOptions.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeCreateCaseOptionsRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeCreateCaseOptionsAsync(String xAmzTarget, DescribeCreateCaseOptionsRequest describeCreateCaseOptionsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<DescribeCreateCaseOptionsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = describeCreateCaseOptionsValidateBeforeCall(xAmzTarget, describeCreateCaseOptionsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<DescribeCreateCaseOptionsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for describeServices
     * @param xAmzTarget  (required)
     * @param describeServicesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeServicesCall(String xAmzTarget, DescribeServicesRequest describeServicesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = describeServicesRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=AWSSupport_20130415.DescribeServices";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call describeServicesValidateBeforeCall(String xAmzTarget, DescribeServicesRequest describeServicesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling describeServices(Async)");
        }

        // verify the required parameter 'describeServicesRequest' is set
        if (describeServicesRequest == null) {
            throw new ApiException("Missing the required parameter 'describeServicesRequest' when calling describeServices(Async)");
        }

        return describeServicesCall(xAmzTarget, describeServicesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;p&gt;Returns the current list of Amazon Web Services services and a list of service categories for each service. You then use service names and categories in your &lt;a&gt;CreateCase&lt;/a&gt; requests. Each Amazon Web Services service has its own set of categories.&lt;/p&gt; &lt;p&gt;The service codes and category codes correspond to the values that appear in the &lt;b&gt;Service&lt;/b&gt; and &lt;b&gt;Category&lt;/b&gt; lists on the Amazon Web Services Support Center &lt;a href&#x3D;\&quot;https://console.aws.amazon.com/support/home#/case/create\&quot;&gt;Create Case&lt;/a&gt; page. The values in those fields don&#39;t necessarily match the service codes and categories returned by the &lt;code&gt;DescribeServices&lt;/code&gt; operation. Always use the service codes and categories that the &lt;code&gt;DescribeServices&lt;/code&gt; operation returns, so that you have the most recent set of service and category codes.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeServicesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return DescribeServicesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
     </table>
     */
    public DescribeServicesResponse describeServices(String xAmzTarget, DescribeServicesRequest describeServicesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<DescribeServicesResponse> localVarResp = describeServicesWithHttpInfo(xAmzTarget, describeServicesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;p&gt;Returns the current list of Amazon Web Services services and a list of service categories for each service. You then use service names and categories in your &lt;a&gt;CreateCase&lt;/a&gt; requests. Each Amazon Web Services service has its own set of categories.&lt;/p&gt; &lt;p&gt;The service codes and category codes correspond to the values that appear in the &lt;b&gt;Service&lt;/b&gt; and &lt;b&gt;Category&lt;/b&gt; lists on the Amazon Web Services Support Center &lt;a href&#x3D;\&quot;https://console.aws.amazon.com/support/home#/case/create\&quot;&gt;Create Case&lt;/a&gt; page. The values in those fields don&#39;t necessarily match the service codes and categories returned by the &lt;code&gt;DescribeServices&lt;/code&gt; operation. Always use the service codes and categories that the &lt;code&gt;DescribeServices&lt;/code&gt; operation returns, so that you have the most recent set of service and category codes.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeServicesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;DescribeServicesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DescribeServicesResponse> describeServicesWithHttpInfo(String xAmzTarget, DescribeServicesRequest describeServicesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = describeServicesValidateBeforeCall(xAmzTarget, describeServicesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<DescribeServicesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;p&gt;Returns the current list of Amazon Web Services services and a list of service categories for each service. You then use service names and categories in your &lt;a&gt;CreateCase&lt;/a&gt; requests. Each Amazon Web Services service has its own set of categories.&lt;/p&gt; &lt;p&gt;The service codes and category codes correspond to the values that appear in the &lt;b&gt;Service&lt;/b&gt; and &lt;b&gt;Category&lt;/b&gt; lists on the Amazon Web Services Support Center &lt;a href&#x3D;\&quot;https://console.aws.amazon.com/support/home#/case/create\&quot;&gt;Create Case&lt;/a&gt; page. The values in those fields don&#39;t necessarily match the service codes and categories returned by the &lt;code&gt;DescribeServices&lt;/code&gt; operation. Always use the service codes and categories that the &lt;code&gt;DescribeServices&lt;/code&gt; operation returns, so that you have the most recent set of service and category codes.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeServicesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeServicesAsync(String xAmzTarget, DescribeServicesRequest describeServicesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<DescribeServicesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = describeServicesValidateBeforeCall(xAmzTarget, describeServicesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<DescribeServicesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for describeSeverityLevels
     * @param xAmzTarget  (required)
     * @param describeSeverityLevelsRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeSeverityLevelsCall(String xAmzTarget, DescribeSeverityLevelsRequest describeSeverityLevelsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = describeSeverityLevelsRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=AWSSupport_20130415.DescribeSeverityLevels";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call describeSeverityLevelsValidateBeforeCall(String xAmzTarget, DescribeSeverityLevelsRequest describeSeverityLevelsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling describeSeverityLevels(Async)");
        }

        // verify the required parameter 'describeSeverityLevelsRequest' is set
        if (describeSeverityLevelsRequest == null) {
            throw new ApiException("Missing the required parameter 'describeSeverityLevelsRequest' when calling describeSeverityLevels(Async)");
        }

        return describeSeverityLevelsCall(xAmzTarget, describeSeverityLevelsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;p&gt;Returns the list of severity levels that you can assign to a support case. The severity level for a case is also a field in the &lt;a&gt;CaseDetails&lt;/a&gt; data type that you include for a &lt;a&gt;CreateCase&lt;/a&gt; request.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeSeverityLevelsRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return DescribeSeverityLevelsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
     </table>
     */
    public DescribeSeverityLevelsResponse describeSeverityLevels(String xAmzTarget, DescribeSeverityLevelsRequest describeSeverityLevelsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<DescribeSeverityLevelsResponse> localVarResp = describeSeverityLevelsWithHttpInfo(xAmzTarget, describeSeverityLevelsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;p&gt;Returns the list of severity levels that you can assign to a support case. The severity level for a case is also a field in the &lt;a&gt;CaseDetails&lt;/a&gt; data type that you include for a &lt;a&gt;CreateCase&lt;/a&gt; request.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeSeverityLevelsRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;DescribeSeverityLevelsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DescribeSeverityLevelsResponse> describeSeverityLevelsWithHttpInfo(String xAmzTarget, DescribeSeverityLevelsRequest describeSeverityLevelsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = describeSeverityLevelsValidateBeforeCall(xAmzTarget, describeSeverityLevelsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<DescribeSeverityLevelsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;p&gt;Returns the list of severity levels that you can assign to a support case. The severity level for a case is also a field in the &lt;a&gt;CaseDetails&lt;/a&gt; data type that you include for a &lt;a&gt;CreateCase&lt;/a&gt; request.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeSeverityLevelsRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeSeverityLevelsAsync(String xAmzTarget, DescribeSeverityLevelsRequest describeSeverityLevelsRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<DescribeSeverityLevelsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = describeSeverityLevelsValidateBeforeCall(xAmzTarget, describeSeverityLevelsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<DescribeSeverityLevelsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for describeSupportedLanguages
     * @param xAmzTarget  (required)
     * @param describeSupportedLanguagesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeSupportedLanguagesCall(String xAmzTarget, DescribeSupportedLanguagesRequest describeSupportedLanguagesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = describeSupportedLanguagesRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=AWSSupport_20130415.DescribeSupportedLanguages";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call describeSupportedLanguagesValidateBeforeCall(String xAmzTarget, DescribeSupportedLanguagesRequest describeSupportedLanguagesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling describeSupportedLanguages(Async)");
        }

        // verify the required parameter 'describeSupportedLanguagesRequest' is set
        if (describeSupportedLanguagesRequest == null) {
            throw new ApiException("Missing the required parameter 'describeSupportedLanguagesRequest' when calling describeSupportedLanguages(Async)");
        }

        return describeSupportedLanguagesCall(xAmzTarget, describeSupportedLanguagesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;p&gt;Returns a list of supported languages for a specified &lt;code&gt;categoryCode&lt;/code&gt;, &lt;code&gt;issueType&lt;/code&gt; and &lt;code&gt;serviceCode&lt;/code&gt;. The returned supported languages will include a ISO 639-1 code for the &lt;code&gt;language&lt;/code&gt;, and the language display name.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeSupportedLanguagesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return DescribeSupportedLanguagesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public DescribeSupportedLanguagesResponse describeSupportedLanguages(String xAmzTarget, DescribeSupportedLanguagesRequest describeSupportedLanguagesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<DescribeSupportedLanguagesResponse> localVarResp = describeSupportedLanguagesWithHttpInfo(xAmzTarget, describeSupportedLanguagesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;p&gt;Returns a list of supported languages for a specified &lt;code&gt;categoryCode&lt;/code&gt;, &lt;code&gt;issueType&lt;/code&gt; and &lt;code&gt;serviceCode&lt;/code&gt;. The returned supported languages will include a ISO 639-1 code for the &lt;code&gt;language&lt;/code&gt;, and the language display name.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeSupportedLanguagesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;DescribeSupportedLanguagesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DescribeSupportedLanguagesResponse> describeSupportedLanguagesWithHttpInfo(String xAmzTarget, DescribeSupportedLanguagesRequest describeSupportedLanguagesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = describeSupportedLanguagesValidateBeforeCall(xAmzTarget, describeSupportedLanguagesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<DescribeSupportedLanguagesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;p&gt;Returns a list of supported languages for a specified &lt;code&gt;categoryCode&lt;/code&gt;, &lt;code&gt;issueType&lt;/code&gt; and &lt;code&gt;serviceCode&lt;/code&gt;. The returned supported languages will include a ISO 639-1 code for the &lt;code&gt;language&lt;/code&gt;, and the language display name.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param describeSupportedLanguagesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeSupportedLanguagesAsync(String xAmzTarget, DescribeSupportedLanguagesRequest describeSupportedLanguagesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<DescribeSupportedLanguagesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = describeSupportedLanguagesValidateBeforeCall(xAmzTarget, describeSupportedLanguagesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<DescribeSupportedLanguagesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for describeTrustedAdvisorCheckRefreshStatuses
     * @param xAmzTarget  (required)
     * @param describeTrustedAdvisorCheckRefreshStatusesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeTrustedAdvisorCheckRefreshStatusesCall(String xAmzTarget, DescribeTrustedAdvisorCheckRefreshStatusesRequest describeTrustedAdvisorCheckRefreshStatusesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = describeTrustedAdvisorCheckRefreshStatusesRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=AWSSupport_20130415.DescribeTrustedAdvisorCheckRefreshStatuses";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call describeTrustedAdvisorCheckRefreshStatusesValidateBeforeCall(String xAmzTarget, DescribeTrustedAdvisorCheckRefreshStatusesRequest describeTrustedAdvisorCheckRefreshStatusesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling describeTrustedAdvisorCheckRefreshStatuses(Async)");
        }

        // verify the required parameter 'describeTrustedAdvisorCheckRefreshStatusesRequest' is set
        if (describeTrustedAdvisorCheckRefreshStatusesRequest == null) {
            throw new ApiException("Missing the required parameter 'describeTrustedAdvisorCheckRefreshStatusesRequest' when calling describeTrustedAdvisorCheckRefreshStatuses(Async)");
        }

        return describeTrustedAdvisorCheckRefreshStatusesCall(xAmzTarget, describeTrustedAdvisorCheckRefreshStatusesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;p&gt;Returns the refresh status of the Trusted Advisor checks that have the specified check IDs. You can get the check IDs by calling the &lt;a&gt;DescribeTrustedAdvisorChecks&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;Some checks are refreshed automatically, and you can&#39;t return their refresh statuses by using the &lt;code&gt;DescribeTrustedAdvisorCheckRefreshStatuses&lt;/code&gt; operation. If you call this operation for these checks, you might see an &lt;code&gt;InvalidParameterValue&lt;/code&gt; error.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt; &lt;p&gt;To call the Trusted Advisor operations in the Amazon Web Services Support API, you must use the US East (N. Virginia) endpoint. Currently, the US West (Oregon) and Europe (Ireland) endpoints don&#39;t support the Trusted Advisor operations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html#endpoint\&quot;&gt;About the Amazon Web Services Support API&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Support User Guide&lt;/i&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param describeTrustedAdvisorCheckRefreshStatusesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return DescribeTrustedAdvisorCheckRefreshStatusesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public DescribeTrustedAdvisorCheckRefreshStatusesResponse describeTrustedAdvisorCheckRefreshStatuses(String xAmzTarget, DescribeTrustedAdvisorCheckRefreshStatusesRequest describeTrustedAdvisorCheckRefreshStatusesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<DescribeTrustedAdvisorCheckRefreshStatusesResponse> localVarResp = describeTrustedAdvisorCheckRefreshStatusesWithHttpInfo(xAmzTarget, describeTrustedAdvisorCheckRefreshStatusesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;p&gt;Returns the refresh status of the Trusted Advisor checks that have the specified check IDs. You can get the check IDs by calling the &lt;a&gt;DescribeTrustedAdvisorChecks&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;Some checks are refreshed automatically, and you can&#39;t return their refresh statuses by using the &lt;code&gt;DescribeTrustedAdvisorCheckRefreshStatuses&lt;/code&gt; operation. If you call this operation for these checks, you might see an &lt;code&gt;InvalidParameterValue&lt;/code&gt; error.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt; &lt;p&gt;To call the Trusted Advisor operations in the Amazon Web Services Support API, you must use the US East (N. Virginia) endpoint. Currently, the US West (Oregon) and Europe (Ireland) endpoints don&#39;t support the Trusted Advisor operations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html#endpoint\&quot;&gt;About the Amazon Web Services Support API&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Support User Guide&lt;/i&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param describeTrustedAdvisorCheckRefreshStatusesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;DescribeTrustedAdvisorCheckRefreshStatusesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DescribeTrustedAdvisorCheckRefreshStatusesResponse> describeTrustedAdvisorCheckRefreshStatusesWithHttpInfo(String xAmzTarget, DescribeTrustedAdvisorCheckRefreshStatusesRequest describeTrustedAdvisorCheckRefreshStatusesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = describeTrustedAdvisorCheckRefreshStatusesValidateBeforeCall(xAmzTarget, describeTrustedAdvisorCheckRefreshStatusesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<DescribeTrustedAdvisorCheckRefreshStatusesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;p&gt;Returns the refresh status of the Trusted Advisor checks that have the specified check IDs. You can get the check IDs by calling the &lt;a&gt;DescribeTrustedAdvisorChecks&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;Some checks are refreshed automatically, and you can&#39;t return their refresh statuses by using the &lt;code&gt;DescribeTrustedAdvisorCheckRefreshStatuses&lt;/code&gt; operation. If you call this operation for these checks, you might see an &lt;code&gt;InvalidParameterValue&lt;/code&gt; error.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt; &lt;p&gt;To call the Trusted Advisor operations in the Amazon Web Services Support API, you must use the US East (N. Virginia) endpoint. Currently, the US West (Oregon) and Europe (Ireland) endpoints don&#39;t support the Trusted Advisor operations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html#endpoint\&quot;&gt;About the Amazon Web Services Support API&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Support User Guide&lt;/i&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param describeTrustedAdvisorCheckRefreshStatusesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeTrustedAdvisorCheckRefreshStatusesAsync(String xAmzTarget, DescribeTrustedAdvisorCheckRefreshStatusesRequest describeTrustedAdvisorCheckRefreshStatusesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<DescribeTrustedAdvisorCheckRefreshStatusesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = describeTrustedAdvisorCheckRefreshStatusesValidateBeforeCall(xAmzTarget, describeTrustedAdvisorCheckRefreshStatusesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<DescribeTrustedAdvisorCheckRefreshStatusesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for describeTrustedAdvisorCheckResult
     * @param xAmzTarget  (required)
     * @param describeTrustedAdvisorCheckResultRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeTrustedAdvisorCheckResultCall(String xAmzTarget, DescribeTrustedAdvisorCheckResultRequest describeTrustedAdvisorCheckResultRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = describeTrustedAdvisorCheckResultRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=AWSSupport_20130415.DescribeTrustedAdvisorCheckResult";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call describeTrustedAdvisorCheckResultValidateBeforeCall(String xAmzTarget, DescribeTrustedAdvisorCheckResultRequest describeTrustedAdvisorCheckResultRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling describeTrustedAdvisorCheckResult(Async)");
        }

        // verify the required parameter 'describeTrustedAdvisorCheckResultRequest' is set
        if (describeTrustedAdvisorCheckResultRequest == null) {
            throw new ApiException("Missing the required parameter 'describeTrustedAdvisorCheckResultRequest' when calling describeTrustedAdvisorCheckResult(Async)");
        }

        return describeTrustedAdvisorCheckResultCall(xAmzTarget, describeTrustedAdvisorCheckResultRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;p&gt;Returns the results of the Trusted Advisor check that has the specified check ID. You can get the check IDs by calling the &lt;a&gt;DescribeTrustedAdvisorChecks&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;The response contains a &lt;a&gt;TrustedAdvisorCheckResult&lt;/a&gt; object, which contains these three objects:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;TrustedAdvisorCategorySpecificSummary&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;TrustedAdvisorResourceDetail&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;TrustedAdvisorResourcesSummary&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In addition, the response contains these fields:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;status&lt;/b&gt; - The alert status of the check can be &lt;code&gt;ok&lt;/code&gt; (green), &lt;code&gt;warning&lt;/code&gt; (yellow), &lt;code&gt;error&lt;/code&gt; (red), or &lt;code&gt;not_available&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;timestamp&lt;/b&gt; - The time of the last refresh of the check.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;checkId&lt;/b&gt; - The unique identifier for the check.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt; &lt;p&gt;To call the Trusted Advisor operations in the Amazon Web Services Support API, you must use the US East (N. Virginia) endpoint. Currently, the US West (Oregon) and Europe (Ireland) endpoints don&#39;t support the Trusted Advisor operations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html#endpoint\&quot;&gt;About the Amazon Web Services Support API&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Support User Guide&lt;/i&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param describeTrustedAdvisorCheckResultRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return DescribeTrustedAdvisorCheckResultResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public DescribeTrustedAdvisorCheckResultResponse describeTrustedAdvisorCheckResult(String xAmzTarget, DescribeTrustedAdvisorCheckResultRequest describeTrustedAdvisorCheckResultRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<DescribeTrustedAdvisorCheckResultResponse> localVarResp = describeTrustedAdvisorCheckResultWithHttpInfo(xAmzTarget, describeTrustedAdvisorCheckResultRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;p&gt;Returns the results of the Trusted Advisor check that has the specified check ID. You can get the check IDs by calling the &lt;a&gt;DescribeTrustedAdvisorChecks&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;The response contains a &lt;a&gt;TrustedAdvisorCheckResult&lt;/a&gt; object, which contains these three objects:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;TrustedAdvisorCategorySpecificSummary&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;TrustedAdvisorResourceDetail&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;TrustedAdvisorResourcesSummary&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In addition, the response contains these fields:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;status&lt;/b&gt; - The alert status of the check can be &lt;code&gt;ok&lt;/code&gt; (green), &lt;code&gt;warning&lt;/code&gt; (yellow), &lt;code&gt;error&lt;/code&gt; (red), or &lt;code&gt;not_available&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;timestamp&lt;/b&gt; - The time of the last refresh of the check.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;checkId&lt;/b&gt; - The unique identifier for the check.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt; &lt;p&gt;To call the Trusted Advisor operations in the Amazon Web Services Support API, you must use the US East (N. Virginia) endpoint. Currently, the US West (Oregon) and Europe (Ireland) endpoints don&#39;t support the Trusted Advisor operations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html#endpoint\&quot;&gt;About the Amazon Web Services Support API&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Support User Guide&lt;/i&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param describeTrustedAdvisorCheckResultRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;DescribeTrustedAdvisorCheckResultResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DescribeTrustedAdvisorCheckResultResponse> describeTrustedAdvisorCheckResultWithHttpInfo(String xAmzTarget, DescribeTrustedAdvisorCheckResultRequest describeTrustedAdvisorCheckResultRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = describeTrustedAdvisorCheckResultValidateBeforeCall(xAmzTarget, describeTrustedAdvisorCheckResultRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<DescribeTrustedAdvisorCheckResultResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;p&gt;Returns the results of the Trusted Advisor check that has the specified check ID. You can get the check IDs by calling the &lt;a&gt;DescribeTrustedAdvisorChecks&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;The response contains a &lt;a&gt;TrustedAdvisorCheckResult&lt;/a&gt; object, which contains these three objects:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;TrustedAdvisorCategorySpecificSummary&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;TrustedAdvisorResourceDetail&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;TrustedAdvisorResourcesSummary&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In addition, the response contains these fields:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;status&lt;/b&gt; - The alert status of the check can be &lt;code&gt;ok&lt;/code&gt; (green), &lt;code&gt;warning&lt;/code&gt; (yellow), &lt;code&gt;error&lt;/code&gt; (red), or &lt;code&gt;not_available&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;timestamp&lt;/b&gt; - The time of the last refresh of the check.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;checkId&lt;/b&gt; - The unique identifier for the check.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt; &lt;p&gt;To call the Trusted Advisor operations in the Amazon Web Services Support API, you must use the US East (N. Virginia) endpoint. Currently, the US West (Oregon) and Europe (Ireland) endpoints don&#39;t support the Trusted Advisor operations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html#endpoint\&quot;&gt;About the Amazon Web Services Support API&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Support User Guide&lt;/i&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param describeTrustedAdvisorCheckResultRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeTrustedAdvisorCheckResultAsync(String xAmzTarget, DescribeTrustedAdvisorCheckResultRequest describeTrustedAdvisorCheckResultRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<DescribeTrustedAdvisorCheckResultResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = describeTrustedAdvisorCheckResultValidateBeforeCall(xAmzTarget, describeTrustedAdvisorCheckResultRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<DescribeTrustedAdvisorCheckResultResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for describeTrustedAdvisorCheckSummaries
     * @param xAmzTarget  (required)
     * @param describeTrustedAdvisorCheckSummariesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeTrustedAdvisorCheckSummariesCall(String xAmzTarget, DescribeTrustedAdvisorCheckSummariesRequest describeTrustedAdvisorCheckSummariesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = describeTrustedAdvisorCheckSummariesRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=AWSSupport_20130415.DescribeTrustedAdvisorCheckSummaries";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call describeTrustedAdvisorCheckSummariesValidateBeforeCall(String xAmzTarget, DescribeTrustedAdvisorCheckSummariesRequest describeTrustedAdvisorCheckSummariesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling describeTrustedAdvisorCheckSummaries(Async)");
        }

        // verify the required parameter 'describeTrustedAdvisorCheckSummariesRequest' is set
        if (describeTrustedAdvisorCheckSummariesRequest == null) {
            throw new ApiException("Missing the required parameter 'describeTrustedAdvisorCheckSummariesRequest' when calling describeTrustedAdvisorCheckSummaries(Async)");
        }

        return describeTrustedAdvisorCheckSummariesCall(xAmzTarget, describeTrustedAdvisorCheckSummariesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;p&gt;Returns the results for the Trusted Advisor check summaries for the check IDs that you specified. You can get the check IDs by calling the &lt;a&gt;DescribeTrustedAdvisorChecks&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;The response contains an array of &lt;a&gt;TrustedAdvisorCheckSummary&lt;/a&gt; objects.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt; &lt;p&gt;To call the Trusted Advisor operations in the Amazon Web Services Support API, you must use the US East (N. Virginia) endpoint. Currently, the US West (Oregon) and Europe (Ireland) endpoints don&#39;t support the Trusted Advisor operations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html#endpoint\&quot;&gt;About the Amazon Web Services Support API&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Support User Guide&lt;/i&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param describeTrustedAdvisorCheckSummariesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return DescribeTrustedAdvisorCheckSummariesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public DescribeTrustedAdvisorCheckSummariesResponse describeTrustedAdvisorCheckSummaries(String xAmzTarget, DescribeTrustedAdvisorCheckSummariesRequest describeTrustedAdvisorCheckSummariesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<DescribeTrustedAdvisorCheckSummariesResponse> localVarResp = describeTrustedAdvisorCheckSummariesWithHttpInfo(xAmzTarget, describeTrustedAdvisorCheckSummariesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;p&gt;Returns the results for the Trusted Advisor check summaries for the check IDs that you specified. You can get the check IDs by calling the &lt;a&gt;DescribeTrustedAdvisorChecks&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;The response contains an array of &lt;a&gt;TrustedAdvisorCheckSummary&lt;/a&gt; objects.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt; &lt;p&gt;To call the Trusted Advisor operations in the Amazon Web Services Support API, you must use the US East (N. Virginia) endpoint. Currently, the US West (Oregon) and Europe (Ireland) endpoints don&#39;t support the Trusted Advisor operations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html#endpoint\&quot;&gt;About the Amazon Web Services Support API&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Support User Guide&lt;/i&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param describeTrustedAdvisorCheckSummariesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;DescribeTrustedAdvisorCheckSummariesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DescribeTrustedAdvisorCheckSummariesResponse> describeTrustedAdvisorCheckSummariesWithHttpInfo(String xAmzTarget, DescribeTrustedAdvisorCheckSummariesRequest describeTrustedAdvisorCheckSummariesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = describeTrustedAdvisorCheckSummariesValidateBeforeCall(xAmzTarget, describeTrustedAdvisorCheckSummariesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<DescribeTrustedAdvisorCheckSummariesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;p&gt;Returns the results for the Trusted Advisor check summaries for the check IDs that you specified. You can get the check IDs by calling the &lt;a&gt;DescribeTrustedAdvisorChecks&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;The response contains an array of &lt;a&gt;TrustedAdvisorCheckSummary&lt;/a&gt; objects.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt; &lt;p&gt;To call the Trusted Advisor operations in the Amazon Web Services Support API, you must use the US East (N. Virginia) endpoint. Currently, the US West (Oregon) and Europe (Ireland) endpoints don&#39;t support the Trusted Advisor operations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html#endpoint\&quot;&gt;About the Amazon Web Services Support API&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Support User Guide&lt;/i&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param describeTrustedAdvisorCheckSummariesRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeTrustedAdvisorCheckSummariesAsync(String xAmzTarget, DescribeTrustedAdvisorCheckSummariesRequest describeTrustedAdvisorCheckSummariesRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<DescribeTrustedAdvisorCheckSummariesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = describeTrustedAdvisorCheckSummariesValidateBeforeCall(xAmzTarget, describeTrustedAdvisorCheckSummariesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<DescribeTrustedAdvisorCheckSummariesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for describeTrustedAdvisorChecks
     * @param xAmzTarget  (required)
     * @param describeTrustedAdvisorChecksRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeTrustedAdvisorChecksCall(String xAmzTarget, DescribeTrustedAdvisorChecksRequest describeTrustedAdvisorChecksRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = describeTrustedAdvisorChecksRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=AWSSupport_20130415.DescribeTrustedAdvisorChecks";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call describeTrustedAdvisorChecksValidateBeforeCall(String xAmzTarget, DescribeTrustedAdvisorChecksRequest describeTrustedAdvisorChecksRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling describeTrustedAdvisorChecks(Async)");
        }

        // verify the required parameter 'describeTrustedAdvisorChecksRequest' is set
        if (describeTrustedAdvisorChecksRequest == null) {
            throw new ApiException("Missing the required parameter 'describeTrustedAdvisorChecksRequest' when calling describeTrustedAdvisorChecks(Async)");
        }

        return describeTrustedAdvisorChecksCall(xAmzTarget, describeTrustedAdvisorChecksRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;p&gt;Returns information about all available Trusted Advisor checks, including the name, ID, category, description, and metadata. You must specify a language code.&lt;/p&gt; &lt;p&gt;The response contains a &lt;a&gt;TrustedAdvisorCheckDescription&lt;/a&gt; object for each check. You must set the Amazon Web Services Region to us-east-1.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The names and descriptions for Trusted Advisor checks are subject to change. We recommend that you specify the check ID in your code to uniquely identify a check.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt; &lt;p&gt;To call the Trusted Advisor operations in the Amazon Web Services Support API, you must use the US East (N. Virginia) endpoint. Currently, the US West (Oregon) and Europe (Ireland) endpoints don&#39;t support the Trusted Advisor operations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html#endpoint\&quot;&gt;About the Amazon Web Services Support API&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Support User Guide&lt;/i&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param describeTrustedAdvisorChecksRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return DescribeTrustedAdvisorChecksResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public DescribeTrustedAdvisorChecksResponse describeTrustedAdvisorChecks(String xAmzTarget, DescribeTrustedAdvisorChecksRequest describeTrustedAdvisorChecksRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<DescribeTrustedAdvisorChecksResponse> localVarResp = describeTrustedAdvisorChecksWithHttpInfo(xAmzTarget, describeTrustedAdvisorChecksRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;p&gt;Returns information about all available Trusted Advisor checks, including the name, ID, category, description, and metadata. You must specify a language code.&lt;/p&gt; &lt;p&gt;The response contains a &lt;a&gt;TrustedAdvisorCheckDescription&lt;/a&gt; object for each check. You must set the Amazon Web Services Region to us-east-1.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The names and descriptions for Trusted Advisor checks are subject to change. We recommend that you specify the check ID in your code to uniquely identify a check.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt; &lt;p&gt;To call the Trusted Advisor operations in the Amazon Web Services Support API, you must use the US East (N. Virginia) endpoint. Currently, the US West (Oregon) and Europe (Ireland) endpoints don&#39;t support the Trusted Advisor operations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html#endpoint\&quot;&gt;About the Amazon Web Services Support API&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Support User Guide&lt;/i&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param describeTrustedAdvisorChecksRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;DescribeTrustedAdvisorChecksResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DescribeTrustedAdvisorChecksResponse> describeTrustedAdvisorChecksWithHttpInfo(String xAmzTarget, DescribeTrustedAdvisorChecksRequest describeTrustedAdvisorChecksRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = describeTrustedAdvisorChecksValidateBeforeCall(xAmzTarget, describeTrustedAdvisorChecksRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<DescribeTrustedAdvisorChecksResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;p&gt;Returns information about all available Trusted Advisor checks, including the name, ID, category, description, and metadata. You must specify a language code.&lt;/p&gt; &lt;p&gt;The response contains a &lt;a&gt;TrustedAdvisorCheckDescription&lt;/a&gt; object for each check. You must set the Amazon Web Services Region to us-east-1.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The names and descriptions for Trusted Advisor checks are subject to change. We recommend that you specify the check ID in your code to uniquely identify a check.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt; &lt;p&gt;To call the Trusted Advisor operations in the Amazon Web Services Support API, you must use the US East (N. Virginia) endpoint. Currently, the US West (Oregon) and Europe (Ireland) endpoints don&#39;t support the Trusted Advisor operations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html#endpoint\&quot;&gt;About the Amazon Web Services Support API&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Support User Guide&lt;/i&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param describeTrustedAdvisorChecksRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> ThrottlingException </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call describeTrustedAdvisorChecksAsync(String xAmzTarget, DescribeTrustedAdvisorChecksRequest describeTrustedAdvisorChecksRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<DescribeTrustedAdvisorChecksResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = describeTrustedAdvisorChecksValidateBeforeCall(xAmzTarget, describeTrustedAdvisorChecksRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<DescribeTrustedAdvisorChecksResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for refreshTrustedAdvisorCheck
     * @param xAmzTarget  (required)
     * @param refreshTrustedAdvisorCheckRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call refreshTrustedAdvisorCheckCall(String xAmzTarget, RefreshTrustedAdvisorCheckRequest refreshTrustedAdvisorCheckRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = refreshTrustedAdvisorCheckRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=AWSSupport_20130415.RefreshTrustedAdvisorCheck";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call refreshTrustedAdvisorCheckValidateBeforeCall(String xAmzTarget, RefreshTrustedAdvisorCheckRequest refreshTrustedAdvisorCheckRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling refreshTrustedAdvisorCheck(Async)");
        }

        // verify the required parameter 'refreshTrustedAdvisorCheckRequest' is set
        if (refreshTrustedAdvisorCheckRequest == null) {
            throw new ApiException("Missing the required parameter 'refreshTrustedAdvisorCheckRequest' when calling refreshTrustedAdvisorCheck(Async)");
        }

        return refreshTrustedAdvisorCheckCall(xAmzTarget, refreshTrustedAdvisorCheckRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;p&gt;Refreshes the Trusted Advisor check that you specify using the check ID. You can get the check IDs by calling the &lt;a&gt;DescribeTrustedAdvisorChecks&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;Some checks are refreshed automatically. If you call the &lt;code&gt;RefreshTrustedAdvisorCheck&lt;/code&gt; operation to refresh them, you might see the &lt;code&gt;InvalidParameterValue&lt;/code&gt; error.&lt;/p&gt; &lt;p&gt;The response contains a &lt;a&gt;TrustedAdvisorCheckRefreshStatus&lt;/a&gt; object.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt; &lt;p&gt;To call the Trusted Advisor operations in the Amazon Web Services Support API, you must use the US East (N. Virginia) endpoint. Currently, the US West (Oregon) and Europe (Ireland) endpoints don&#39;t support the Trusted Advisor operations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html#endpoint\&quot;&gt;About the Amazon Web Services Support API&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Support User Guide&lt;/i&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param refreshTrustedAdvisorCheckRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return RefreshTrustedAdvisorCheckResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
     </table>
     */
    public RefreshTrustedAdvisorCheckResponse refreshTrustedAdvisorCheck(String xAmzTarget, RefreshTrustedAdvisorCheckRequest refreshTrustedAdvisorCheckRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<RefreshTrustedAdvisorCheckResponse> localVarResp = refreshTrustedAdvisorCheckWithHttpInfo(xAmzTarget, refreshTrustedAdvisorCheckRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;p&gt;Refreshes the Trusted Advisor check that you specify using the check ID. You can get the check IDs by calling the &lt;a&gt;DescribeTrustedAdvisorChecks&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;Some checks are refreshed automatically. If you call the &lt;code&gt;RefreshTrustedAdvisorCheck&lt;/code&gt; operation to refresh them, you might see the &lt;code&gt;InvalidParameterValue&lt;/code&gt; error.&lt;/p&gt; &lt;p&gt;The response contains a &lt;a&gt;TrustedAdvisorCheckRefreshStatus&lt;/a&gt; object.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt; &lt;p&gt;To call the Trusted Advisor operations in the Amazon Web Services Support API, you must use the US East (N. Virginia) endpoint. Currently, the US West (Oregon) and Europe (Ireland) endpoints don&#39;t support the Trusted Advisor operations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html#endpoint\&quot;&gt;About the Amazon Web Services Support API&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Support User Guide&lt;/i&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param refreshTrustedAdvisorCheckRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;RefreshTrustedAdvisorCheckResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RefreshTrustedAdvisorCheckResponse> refreshTrustedAdvisorCheckWithHttpInfo(String xAmzTarget, RefreshTrustedAdvisorCheckRequest refreshTrustedAdvisorCheckRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = refreshTrustedAdvisorCheckValidateBeforeCall(xAmzTarget, refreshTrustedAdvisorCheckRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<RefreshTrustedAdvisorCheckResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;p&gt;Refreshes the Trusted Advisor check that you specify using the check ID. You can get the check IDs by calling the &lt;a&gt;DescribeTrustedAdvisorChecks&lt;/a&gt; operation.&lt;/p&gt; &lt;p&gt;Some checks are refreshed automatically. If you call the &lt;code&gt;RefreshTrustedAdvisorCheck&lt;/code&gt; operation to refresh them, you might see the &lt;code&gt;InvalidParameterValue&lt;/code&gt; error.&lt;/p&gt; &lt;p&gt;The response contains a &lt;a&gt;TrustedAdvisorCheckRefreshStatus&lt;/a&gt; object.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt; &lt;p&gt;To call the Trusted Advisor operations in the Amazon Web Services Support API, you must use the US East (N. Virginia) endpoint. Currently, the US West (Oregon) and Europe (Ireland) endpoints don&#39;t support the Trusted Advisor operations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html#endpoint\&quot;&gt;About the Amazon Web Services Support API&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Support User Guide&lt;/i&gt;.&lt;/p&gt;
     * @param xAmzTarget  (required)
     * @param refreshTrustedAdvisorCheckRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call refreshTrustedAdvisorCheckAsync(String xAmzTarget, RefreshTrustedAdvisorCheckRequest refreshTrustedAdvisorCheckRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<RefreshTrustedAdvisorCheckResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = refreshTrustedAdvisorCheckValidateBeforeCall(xAmzTarget, refreshTrustedAdvisorCheckRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<RefreshTrustedAdvisorCheckResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for resolveCase
     * @param xAmzTarget  (required)
     * @param resolveCaseRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseIdNotFound </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call resolveCaseCall(String xAmzTarget, ResolveCaseRequest resolveCaseRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = resolveCaseRequest;

        // create path and map variables
        String localVarPath = "/#X-Amz-Target=AWSSupport_20130415.ResolveCase";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAmzContentSha256 != null) {
            localVarHeaderParams.put("X-Amz-Content-Sha256", localVarApiClient.parameterToString(xAmzContentSha256));
        }

        if (xAmzDate != null) {
            localVarHeaderParams.put("X-Amz-Date", localVarApiClient.parameterToString(xAmzDate));
        }

        if (xAmzAlgorithm != null) {
            localVarHeaderParams.put("X-Amz-Algorithm", localVarApiClient.parameterToString(xAmzAlgorithm));
        }

        if (xAmzCredential != null) {
            localVarHeaderParams.put("X-Amz-Credential", localVarApiClient.parameterToString(xAmzCredential));
        }

        if (xAmzSecurityToken != null) {
            localVarHeaderParams.put("X-Amz-Security-Token", localVarApiClient.parameterToString(xAmzSecurityToken));
        }

        if (xAmzSignature != null) {
            localVarHeaderParams.put("X-Amz-Signature", localVarApiClient.parameterToString(xAmzSignature));
        }

        if (xAmzSignedHeaders != null) {
            localVarHeaderParams.put("X-Amz-SignedHeaders", localVarApiClient.parameterToString(xAmzSignedHeaders));
        }

        if (xAmzTarget != null) {
            localVarHeaderParams.put("X-Amz-Target", localVarApiClient.parameterToString(xAmzTarget));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "hmac" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call resolveCaseValidateBeforeCall(String xAmzTarget, ResolveCaseRequest resolveCaseRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAmzTarget' is set
        if (xAmzTarget == null) {
            throw new ApiException("Missing the required parameter 'xAmzTarget' when calling resolveCase(Async)");
        }

        // verify the required parameter 'resolveCaseRequest' is set
        if (resolveCaseRequest == null) {
            throw new ApiException("Missing the required parameter 'resolveCaseRequest' when calling resolveCase(Async)");
        }

        return resolveCaseCall(xAmzTarget, resolveCaseRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);

    }

    /**
     * 
     * &lt;p&gt;Resolves a support case. This operation takes a &lt;code&gt;caseId&lt;/code&gt; and returns the initial and final state of the case.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param resolveCaseRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ResolveCaseResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseIdNotFound </td><td>  -  </td></tr>
     </table>
     */
    public ResolveCaseResponse resolveCase(String xAmzTarget, ResolveCaseRequest resolveCaseRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        ApiResponse<ResolveCaseResponse> localVarResp = resolveCaseWithHttpInfo(xAmzTarget, resolveCaseRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        return localVarResp.getData();
    }

    /**
     * 
     * &lt;p&gt;Resolves a support case. This operation takes a &lt;code&gt;caseId&lt;/code&gt; and returns the initial and final state of the case.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param resolveCaseRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @return ApiResponse&lt;ResolveCaseResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseIdNotFound </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResolveCaseResponse> resolveCaseWithHttpInfo(String xAmzTarget, ResolveCaseRequest resolveCaseRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders) throws ApiException {
        okhttp3.Call localVarCall = resolveCaseValidateBeforeCall(xAmzTarget, resolveCaseRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, null);
        Type localVarReturnType = new TypeToken<ResolveCaseResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * &lt;p&gt;Resolves a support case. This operation takes a &lt;code&gt;caseId&lt;/code&gt; and returns the initial and final state of the case.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you call the Amazon Web Services Support API from an account that doesn&#39;t have a Business, Enterprise On-Ramp, or Enterprise Support plan, the &lt;code&gt;SubscriptionRequiredException&lt;/code&gt; error message appears. For information about changing your support plan, see &lt;a href&#x3D;\&quot;http://aws.amazon.com/premiumsupport/\&quot;&gt;Amazon Web Services Support&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     * @param xAmzTarget  (required)
     * @param resolveCaseRequest  (required)
     * @param xAmzContentSha256  (optional)
     * @param xAmzDate  (optional)
     * @param xAmzAlgorithm  (optional)
     * @param xAmzCredential  (optional)
     * @param xAmzSecurityToken  (optional)
     * @param xAmzSignature  (optional)
     * @param xAmzSignedHeaders  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 480 </td><td> InternalServerError </td><td>  -  </td></tr>
        <tr><td> 481 </td><td> CaseIdNotFound </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call resolveCaseAsync(String xAmzTarget, ResolveCaseRequest resolveCaseRequest, String xAmzContentSha256, String xAmzDate, String xAmzAlgorithm, String xAmzCredential, String xAmzSecurityToken, String xAmzSignature, String xAmzSignedHeaders, final ApiCallback<ResolveCaseResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = resolveCaseValidateBeforeCall(xAmzTarget, resolveCaseRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, _callback);
        Type localVarReturnType = new TypeToken<ResolveCaseResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
