/*
 * AWS Support
 * <fullname>Amazon Web Services Support</fullname> <p>The <i>Amazon Web Services Support API Reference</i> is intended for programmers who need detailed information about the Amazon Web Services Support operations and data types. You can use the API to manage your support cases programmatically. The Amazon Web Services Support API uses HTTP methods that return results in JSON format.</p> <note> <ul> <li> <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. </p> </li> <li> <p>If you call the Amazon Web Services Support API from an account that doesn't have a Business, Enterprise On-Ramp, or Enterprise Support plan, the <code>SubscriptionRequiredException</code> error message appears. For information about changing your support plan, see <a href=\"http://aws.amazon.com/premiumsupport/\">Amazon Web Services Support</a>.</p> </li> </ul> </note> <p>You can also use the Amazon Web Services Support API to access features for <a href=\"http://aws.amazon.com/premiumsupport/trustedadvisor/\">Trusted Advisor</a>. You can return a list of checks and their descriptions, get check results, specify checks to refresh, and get the refresh status of checks.</p> <p>You can manage your support cases with the following Amazon Web Services Support API operations:</p> <ul> <li> <p>The <a>CreateCase</a>, <a>DescribeCases</a>, <a>DescribeAttachment</a>, and <a>ResolveCase</a> operations create Amazon Web Services Support cases, retrieve information about cases, and resolve cases.</p> </li> <li> <p>The <a>DescribeCommunications</a>, <a>AddCommunicationToCase</a>, and <a>AddAttachmentsToSet</a> operations retrieve and add communications and attachments to Amazon Web Services Support cases.</p> </li> <li> <p>The <a>DescribeServices</a> and <a>DescribeSeverityLevels</a> operations return Amazon Web Service names, service codes, service categories, and problem severity levels. You use these values when you call the <a>CreateCase</a> operation.</p> </li> </ul> <p>You can also use the Amazon Web Services Support API to call the Trusted Advisor operations. For more information, see <a href=\"https://docs.aws.amazon.com/\">Trusted Advisor</a> in the <i>Amazon Web Services Support User Guide</i>.</p> <p>For authentication of requests, Amazon Web Services Support uses <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a>.</p> <p>For more information about this service and the endpoints to use, see <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html\">About the Amazon Web Services Support API</a> in the <i>Amazon Web Services Support User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2013-04-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateCaseRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:01.110966-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateCaseRequest {
  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_SERVICE_CODE = "serviceCode";
  @SerializedName(SERIALIZED_NAME_SERVICE_CODE)
  private String serviceCode;

  public static final String SERIALIZED_NAME_SEVERITY_CODE = "severityCode";
  @SerializedName(SERIALIZED_NAME_SEVERITY_CODE)
  private String severityCode;

  public static final String SERIALIZED_NAME_CATEGORY_CODE = "categoryCode";
  @SerializedName(SERIALIZED_NAME_CATEGORY_CODE)
  private String categoryCode;

  public static final String SERIALIZED_NAME_COMMUNICATION_BODY = "communicationBody";
  @SerializedName(SERIALIZED_NAME_COMMUNICATION_BODY)
  private String communicationBody;

  public static final String SERIALIZED_NAME_CC_EMAIL_ADDRESSES = "ccEmailAddresses";
  @SerializedName(SERIALIZED_NAME_CC_EMAIL_ADDRESSES)
  private List ccEmailAddresses;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_ISSUE_TYPE = "issueType";
  @SerializedName(SERIALIZED_NAME_ISSUE_TYPE)
  private String issueType;

  public static final String SERIALIZED_NAME_ATTACHMENT_SET_ID = "attachmentSetId";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT_SET_ID)
  private String attachmentSetId;

  public CreateCaseRequest() {
  }

  public CreateCaseRequest subject(String subject) {
    this.subject = subject;
    return this;
  }

  /**
   * Get subject
   * @return subject
   */
  @javax.annotation.Nonnull
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }


  public CreateCaseRequest serviceCode(String serviceCode) {
    this.serviceCode = serviceCode;
    return this;
  }

  /**
   * Get serviceCode
   * @return serviceCode
   */
  @javax.annotation.Nullable
  public String getServiceCode() {
    return serviceCode;
  }

  public void setServiceCode(String serviceCode) {
    this.serviceCode = serviceCode;
  }


  public CreateCaseRequest severityCode(String severityCode) {
    this.severityCode = severityCode;
    return this;
  }

  /**
   * Get severityCode
   * @return severityCode
   */
  @javax.annotation.Nullable
  public String getSeverityCode() {
    return severityCode;
  }

  public void setSeverityCode(String severityCode) {
    this.severityCode = severityCode;
  }


  public CreateCaseRequest categoryCode(String categoryCode) {
    this.categoryCode = categoryCode;
    return this;
  }

  /**
   * Get categoryCode
   * @return categoryCode
   */
  @javax.annotation.Nullable
  public String getCategoryCode() {
    return categoryCode;
  }

  public void setCategoryCode(String categoryCode) {
    this.categoryCode = categoryCode;
  }


  public CreateCaseRequest communicationBody(String communicationBody) {
    this.communicationBody = communicationBody;
    return this;
  }

  /**
   * Get communicationBody
   * @return communicationBody
   */
  @javax.annotation.Nonnull
  public String getCommunicationBody() {
    return communicationBody;
  }

  public void setCommunicationBody(String communicationBody) {
    this.communicationBody = communicationBody;
  }


  public CreateCaseRequest ccEmailAddresses(List ccEmailAddresses) {
    this.ccEmailAddresses = ccEmailAddresses;
    return this;
  }

  /**
   * Get ccEmailAddresses
   * @return ccEmailAddresses
   */
  @javax.annotation.Nullable
  public List getCcEmailAddresses() {
    return ccEmailAddresses;
  }

  public void setCcEmailAddresses(List ccEmailAddresses) {
    this.ccEmailAddresses = ccEmailAddresses;
  }


  public CreateCaseRequest language(String language) {
    this.language = language;
    return this;
  }

  /**
   * Get language
   * @return language
   */
  @javax.annotation.Nullable
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }


  public CreateCaseRequest issueType(String issueType) {
    this.issueType = issueType;
    return this;
  }

  /**
   * Get issueType
   * @return issueType
   */
  @javax.annotation.Nullable
  public String getIssueType() {
    return issueType;
  }

  public void setIssueType(String issueType) {
    this.issueType = issueType;
  }


  public CreateCaseRequest attachmentSetId(String attachmentSetId) {
    this.attachmentSetId = attachmentSetId;
    return this;
  }

  /**
   * Get attachmentSetId
   * @return attachmentSetId
   */
  @javax.annotation.Nullable
  public String getAttachmentSetId() {
    return attachmentSetId;
  }

  public void setAttachmentSetId(String attachmentSetId) {
    this.attachmentSetId = attachmentSetId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCaseRequest createCaseRequest = (CreateCaseRequest) o;
    return Objects.equals(this.subject, createCaseRequest.subject) &&
        Objects.equals(this.serviceCode, createCaseRequest.serviceCode) &&
        Objects.equals(this.severityCode, createCaseRequest.severityCode) &&
        Objects.equals(this.categoryCode, createCaseRequest.categoryCode) &&
        Objects.equals(this.communicationBody, createCaseRequest.communicationBody) &&
        Objects.equals(this.ccEmailAddresses, createCaseRequest.ccEmailAddresses) &&
        Objects.equals(this.language, createCaseRequest.language) &&
        Objects.equals(this.issueType, createCaseRequest.issueType) &&
        Objects.equals(this.attachmentSetId, createCaseRequest.attachmentSetId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subject, serviceCode, severityCode, categoryCode, communicationBody, ccEmailAddresses, language, issueType, attachmentSetId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCaseRequest {\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    serviceCode: ").append(toIndentedString(serviceCode)).append("\n");
    sb.append("    severityCode: ").append(toIndentedString(severityCode)).append("\n");
    sb.append("    categoryCode: ").append(toIndentedString(categoryCode)).append("\n");
    sb.append("    communicationBody: ").append(toIndentedString(communicationBody)).append("\n");
    sb.append("    ccEmailAddresses: ").append(toIndentedString(ccEmailAddresses)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    issueType: ").append(toIndentedString(issueType)).append("\n");
    sb.append("    attachmentSetId: ").append(toIndentedString(attachmentSetId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("subject");
    openapiFields.add("serviceCode");
    openapiFields.add("severityCode");
    openapiFields.add("categoryCode");
    openapiFields.add("communicationBody");
    openapiFields.add("ccEmailAddresses");
    openapiFields.add("language");
    openapiFields.add("issueType");
    openapiFields.add("attachmentSetId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("subject");
    openapiRequiredFields.add("communicationBody");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateCaseRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateCaseRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateCaseRequest is not found in the empty JSON string", CreateCaseRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateCaseRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateCaseRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateCaseRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `subject`
      String.validateJsonElement(jsonObj.get("subject"));
      // validate the optional field `serviceCode`
      if (jsonObj.get("serviceCode") != null && !jsonObj.get("serviceCode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("serviceCode"));
      }
      // validate the optional field `severityCode`
      if (jsonObj.get("severityCode") != null && !jsonObj.get("severityCode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("severityCode"));
      }
      // validate the optional field `categoryCode`
      if (jsonObj.get("categoryCode") != null && !jsonObj.get("categoryCode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("categoryCode"));
      }
      // validate the required field `communicationBody`
      String.validateJsonElement(jsonObj.get("communicationBody"));
      // validate the optional field `ccEmailAddresses`
      if (jsonObj.get("ccEmailAddresses") != null && !jsonObj.get("ccEmailAddresses").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ccEmailAddresses"));
      }
      // validate the optional field `language`
      if (jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("language"));
      }
      // validate the optional field `issueType`
      if (jsonObj.get("issueType") != null && !jsonObj.get("issueType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("issueType"));
      }
      // validate the optional field `attachmentSetId`
      if (jsonObj.get("attachmentSetId") != null && !jsonObj.get("attachmentSetId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("attachmentSetId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateCaseRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateCaseRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateCaseRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateCaseRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateCaseRequest>() {
           @Override
           public void write(JsonWriter out, CreateCaseRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateCaseRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateCaseRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateCaseRequest
   * @throws IOException if the JSON string is invalid with respect to CreateCaseRequest
   */
  public static CreateCaseRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateCaseRequest.class);
  }

  /**
   * Convert an instance of CreateCaseRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

