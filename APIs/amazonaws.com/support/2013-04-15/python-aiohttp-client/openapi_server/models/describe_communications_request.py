# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeCommunicationsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, case_id: str=None, before_time: str=None, after_time: str=None, next_token: str=None, max_results: int=None):
        """DescribeCommunicationsRequest - a model defined in OpenAPI

        :param case_id: The case_id of this DescribeCommunicationsRequest.
        :param before_time: The before_time of this DescribeCommunicationsRequest.
        :param after_time: The after_time of this DescribeCommunicationsRequest.
        :param next_token: The next_token of this DescribeCommunicationsRequest.
        :param max_results: The max_results of this DescribeCommunicationsRequest.
        """
        self.openapi_types = {
            'case_id': str,
            'before_time': str,
            'after_time': str,
            'next_token': str,
            'max_results': int
        }

        self.attribute_map = {
            'case_id': 'caseId',
            'before_time': 'beforeTime',
            'after_time': 'afterTime',
            'next_token': 'nextToken',
            'max_results': 'maxResults'
        }

        self._case_id = case_id
        self._before_time = before_time
        self._after_time = after_time
        self._next_token = next_token
        self._max_results = max_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeCommunicationsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeCommunicationsRequest of this DescribeCommunicationsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def case_id(self):
        """Gets the case_id of this DescribeCommunicationsRequest.


        :return: The case_id of this DescribeCommunicationsRequest.
        :rtype: str
        """
        return self._case_id

    @case_id.setter
    def case_id(self, case_id):
        """Sets the case_id of this DescribeCommunicationsRequest.


        :param case_id: The case_id of this DescribeCommunicationsRequest.
        :type case_id: str
        """
        if case_id is None:
            raise ValueError("Invalid value for `case_id`, must not be `None`")

        self._case_id = case_id

    @property
    def before_time(self):
        """Gets the before_time of this DescribeCommunicationsRequest.


        :return: The before_time of this DescribeCommunicationsRequest.
        :rtype: str
        """
        return self._before_time

    @before_time.setter
    def before_time(self, before_time):
        """Sets the before_time of this DescribeCommunicationsRequest.


        :param before_time: The before_time of this DescribeCommunicationsRequest.
        :type before_time: str
        """

        self._before_time = before_time

    @property
    def after_time(self):
        """Gets the after_time of this DescribeCommunicationsRequest.


        :return: The after_time of this DescribeCommunicationsRequest.
        :rtype: str
        """
        return self._after_time

    @after_time.setter
    def after_time(self, after_time):
        """Sets the after_time of this DescribeCommunicationsRequest.


        :param after_time: The after_time of this DescribeCommunicationsRequest.
        :type after_time: str
        """

        self._after_time = after_time

    @property
    def next_token(self):
        """Gets the next_token of this DescribeCommunicationsRequest.


        :return: The next_token of this DescribeCommunicationsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeCommunicationsRequest.


        :param next_token: The next_token of this DescribeCommunicationsRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this DescribeCommunicationsRequest.


        :return: The max_results of this DescribeCommunicationsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this DescribeCommunicationsRequest.


        :param max_results: The max_results of this DescribeCommunicationsRequest.
        :type max_results: int
        """

        self._max_results = max_results
