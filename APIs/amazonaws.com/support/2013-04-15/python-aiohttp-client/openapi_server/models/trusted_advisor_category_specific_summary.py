# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.trusted_advisor_category_specific_summary_cost_optimizing import TrustedAdvisorCategorySpecificSummaryCostOptimizing
from openapi_server import util


class TrustedAdvisorCategorySpecificSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost_optimizing: TrustedAdvisorCategorySpecificSummaryCostOptimizing=None):
        """TrustedAdvisorCategorySpecificSummary - a model defined in OpenAPI

        :param cost_optimizing: The cost_optimizing of this TrustedAdvisorCategorySpecificSummary.
        """
        self.openapi_types = {
            'cost_optimizing': TrustedAdvisorCategorySpecificSummaryCostOptimizing
        }

        self.attribute_map = {
            'cost_optimizing': 'costOptimizing'
        }

        self._cost_optimizing = cost_optimizing

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrustedAdvisorCategorySpecificSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TrustedAdvisorCategorySpecificSummary of this TrustedAdvisorCategorySpecificSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost_optimizing(self):
        """Gets the cost_optimizing of this TrustedAdvisorCategorySpecificSummary.


        :return: The cost_optimizing of this TrustedAdvisorCategorySpecificSummary.
        :rtype: TrustedAdvisorCategorySpecificSummaryCostOptimizing
        """
        return self._cost_optimizing

    @cost_optimizing.setter
    def cost_optimizing(self, cost_optimizing):
        """Sets the cost_optimizing of this TrustedAdvisorCategorySpecificSummary.


        :param cost_optimizing: The cost_optimizing of this TrustedAdvisorCategorySpecificSummary.
        :type cost_optimizing: TrustedAdvisorCategorySpecificSummaryCostOptimizing
        """

        self._cost_optimizing = cost_optimizing
