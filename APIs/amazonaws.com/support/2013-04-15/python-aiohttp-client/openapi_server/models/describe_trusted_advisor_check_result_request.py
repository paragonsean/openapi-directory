# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeTrustedAdvisorCheckResultRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, check_id: str=None, language: str=None):
        """DescribeTrustedAdvisorCheckResultRequest - a model defined in OpenAPI

        :param check_id: The check_id of this DescribeTrustedAdvisorCheckResultRequest.
        :param language: The language of this DescribeTrustedAdvisorCheckResultRequest.
        """
        self.openapi_types = {
            'check_id': str,
            'language': str
        }

        self.attribute_map = {
            'check_id': 'checkId',
            'language': 'language'
        }

        self._check_id = check_id
        self._language = language

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeTrustedAdvisorCheckResultRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeTrustedAdvisorCheckResultRequest of this DescribeTrustedAdvisorCheckResultRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def check_id(self):
        """Gets the check_id of this DescribeTrustedAdvisorCheckResultRequest.


        :return: The check_id of this DescribeTrustedAdvisorCheckResultRequest.
        :rtype: str
        """
        return self._check_id

    @check_id.setter
    def check_id(self, check_id):
        """Sets the check_id of this DescribeTrustedAdvisorCheckResultRequest.


        :param check_id: The check_id of this DescribeTrustedAdvisorCheckResultRequest.
        :type check_id: str
        """
        if check_id is None:
            raise ValueError("Invalid value for `check_id`, must not be `None`")

        self._check_id = check_id

    @property
    def language(self):
        """Gets the language of this DescribeTrustedAdvisorCheckResultRequest.


        :return: The language of this DescribeTrustedAdvisorCheckResultRequest.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this DescribeTrustedAdvisorCheckResultRequest.


        :param language: The language of this DescribeTrustedAdvisorCheckResultRequest.
        :type language: str
        """

        self._language = language
