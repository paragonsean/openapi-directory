# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddCommunicationToCaseRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, case_id: str=None, communication_body: str=None, cc_email_addresses: List=None, attachment_set_id: str=None):
        """AddCommunicationToCaseRequest - a model defined in OpenAPI

        :param case_id: The case_id of this AddCommunicationToCaseRequest.
        :param communication_body: The communication_body of this AddCommunicationToCaseRequest.
        :param cc_email_addresses: The cc_email_addresses of this AddCommunicationToCaseRequest.
        :param attachment_set_id: The attachment_set_id of this AddCommunicationToCaseRequest.
        """
        self.openapi_types = {
            'case_id': str,
            'communication_body': str,
            'cc_email_addresses': List,
            'attachment_set_id': str
        }

        self.attribute_map = {
            'case_id': 'caseId',
            'communication_body': 'communicationBody',
            'cc_email_addresses': 'ccEmailAddresses',
            'attachment_set_id': 'attachmentSetId'
        }

        self._case_id = case_id
        self._communication_body = communication_body
        self._cc_email_addresses = cc_email_addresses
        self._attachment_set_id = attachment_set_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddCommunicationToCaseRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddCommunicationToCaseRequest of this AddCommunicationToCaseRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def case_id(self):
        """Gets the case_id of this AddCommunicationToCaseRequest.


        :return: The case_id of this AddCommunicationToCaseRequest.
        :rtype: str
        """
        return self._case_id

    @case_id.setter
    def case_id(self, case_id):
        """Sets the case_id of this AddCommunicationToCaseRequest.


        :param case_id: The case_id of this AddCommunicationToCaseRequest.
        :type case_id: str
        """

        self._case_id = case_id

    @property
    def communication_body(self):
        """Gets the communication_body of this AddCommunicationToCaseRequest.


        :return: The communication_body of this AddCommunicationToCaseRequest.
        :rtype: str
        """
        return self._communication_body

    @communication_body.setter
    def communication_body(self, communication_body):
        """Sets the communication_body of this AddCommunicationToCaseRequest.


        :param communication_body: The communication_body of this AddCommunicationToCaseRequest.
        :type communication_body: str
        """
        if communication_body is None:
            raise ValueError("Invalid value for `communication_body`, must not be `None`")

        self._communication_body = communication_body

    @property
    def cc_email_addresses(self):
        """Gets the cc_email_addresses of this AddCommunicationToCaseRequest.


        :return: The cc_email_addresses of this AddCommunicationToCaseRequest.
        :rtype: List
        """
        return self._cc_email_addresses

    @cc_email_addresses.setter
    def cc_email_addresses(self, cc_email_addresses):
        """Sets the cc_email_addresses of this AddCommunicationToCaseRequest.


        :param cc_email_addresses: The cc_email_addresses of this AddCommunicationToCaseRequest.
        :type cc_email_addresses: List
        """

        self._cc_email_addresses = cc_email_addresses

    @property
    def attachment_set_id(self):
        """Gets the attachment_set_id of this AddCommunicationToCaseRequest.


        :return: The attachment_set_id of this AddCommunicationToCaseRequest.
        :rtype: str
        """
        return self._attachment_set_id

    @attachment_set_id.setter
    def attachment_set_id(self, attachment_set_id):
        """Sets the attachment_set_id of this AddCommunicationToCaseRequest.


        :param attachment_set_id: The attachment_set_id of this AddCommunicationToCaseRequest.
        :type attachment_set_id: str
        """

        self._attachment_set_id = attachment_set_id
