# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.case_details_recent_communications import CaseDetailsRecentCommunications
from openapi_server import util


class CaseDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, case_id: str=None, display_id: str=None, subject: str=None, status: str=None, service_code: str=None, category_code: str=None, severity_code: str=None, submitted_by: str=None, time_created: str=None, recent_communications: CaseDetailsRecentCommunications=None, cc_email_addresses: List=None, language: str=None):
        """CaseDetails - a model defined in OpenAPI

        :param case_id: The case_id of this CaseDetails.
        :param display_id: The display_id of this CaseDetails.
        :param subject: The subject of this CaseDetails.
        :param status: The status of this CaseDetails.
        :param service_code: The service_code of this CaseDetails.
        :param category_code: The category_code of this CaseDetails.
        :param severity_code: The severity_code of this CaseDetails.
        :param submitted_by: The submitted_by of this CaseDetails.
        :param time_created: The time_created of this CaseDetails.
        :param recent_communications: The recent_communications of this CaseDetails.
        :param cc_email_addresses: The cc_email_addresses of this CaseDetails.
        :param language: The language of this CaseDetails.
        """
        self.openapi_types = {
            'case_id': str,
            'display_id': str,
            'subject': str,
            'status': str,
            'service_code': str,
            'category_code': str,
            'severity_code': str,
            'submitted_by': str,
            'time_created': str,
            'recent_communications': CaseDetailsRecentCommunications,
            'cc_email_addresses': List,
            'language': str
        }

        self.attribute_map = {
            'case_id': 'caseId',
            'display_id': 'displayId',
            'subject': 'subject',
            'status': 'status',
            'service_code': 'serviceCode',
            'category_code': 'categoryCode',
            'severity_code': 'severityCode',
            'submitted_by': 'submittedBy',
            'time_created': 'timeCreated',
            'recent_communications': 'recentCommunications',
            'cc_email_addresses': 'ccEmailAddresses',
            'language': 'language'
        }

        self._case_id = case_id
        self._display_id = display_id
        self._subject = subject
        self._status = status
        self._service_code = service_code
        self._category_code = category_code
        self._severity_code = severity_code
        self._submitted_by = submitted_by
        self._time_created = time_created
        self._recent_communications = recent_communications
        self._cc_email_addresses = cc_email_addresses
        self._language = language

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CaseDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CaseDetails of this CaseDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def case_id(self):
        """Gets the case_id of this CaseDetails.


        :return: The case_id of this CaseDetails.
        :rtype: str
        """
        return self._case_id

    @case_id.setter
    def case_id(self, case_id):
        """Sets the case_id of this CaseDetails.


        :param case_id: The case_id of this CaseDetails.
        :type case_id: str
        """

        self._case_id = case_id

    @property
    def display_id(self):
        """Gets the display_id of this CaseDetails.


        :return: The display_id of this CaseDetails.
        :rtype: str
        """
        return self._display_id

    @display_id.setter
    def display_id(self, display_id):
        """Sets the display_id of this CaseDetails.


        :param display_id: The display_id of this CaseDetails.
        :type display_id: str
        """

        self._display_id = display_id

    @property
    def subject(self):
        """Gets the subject of this CaseDetails.


        :return: The subject of this CaseDetails.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this CaseDetails.


        :param subject: The subject of this CaseDetails.
        :type subject: str
        """

        self._subject = subject

    @property
    def status(self):
        """Gets the status of this CaseDetails.


        :return: The status of this CaseDetails.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CaseDetails.


        :param status: The status of this CaseDetails.
        :type status: str
        """

        self._status = status

    @property
    def service_code(self):
        """Gets the service_code of this CaseDetails.


        :return: The service_code of this CaseDetails.
        :rtype: str
        """
        return self._service_code

    @service_code.setter
    def service_code(self, service_code):
        """Sets the service_code of this CaseDetails.


        :param service_code: The service_code of this CaseDetails.
        :type service_code: str
        """

        self._service_code = service_code

    @property
    def category_code(self):
        """Gets the category_code of this CaseDetails.


        :return: The category_code of this CaseDetails.
        :rtype: str
        """
        return self._category_code

    @category_code.setter
    def category_code(self, category_code):
        """Sets the category_code of this CaseDetails.


        :param category_code: The category_code of this CaseDetails.
        :type category_code: str
        """

        self._category_code = category_code

    @property
    def severity_code(self):
        """Gets the severity_code of this CaseDetails.


        :return: The severity_code of this CaseDetails.
        :rtype: str
        """
        return self._severity_code

    @severity_code.setter
    def severity_code(self, severity_code):
        """Sets the severity_code of this CaseDetails.


        :param severity_code: The severity_code of this CaseDetails.
        :type severity_code: str
        """

        self._severity_code = severity_code

    @property
    def submitted_by(self):
        """Gets the submitted_by of this CaseDetails.


        :return: The submitted_by of this CaseDetails.
        :rtype: str
        """
        return self._submitted_by

    @submitted_by.setter
    def submitted_by(self, submitted_by):
        """Sets the submitted_by of this CaseDetails.


        :param submitted_by: The submitted_by of this CaseDetails.
        :type submitted_by: str
        """

        self._submitted_by = submitted_by

    @property
    def time_created(self):
        """Gets the time_created of this CaseDetails.


        :return: The time_created of this CaseDetails.
        :rtype: str
        """
        return self._time_created

    @time_created.setter
    def time_created(self, time_created):
        """Sets the time_created of this CaseDetails.


        :param time_created: The time_created of this CaseDetails.
        :type time_created: str
        """

        self._time_created = time_created

    @property
    def recent_communications(self):
        """Gets the recent_communications of this CaseDetails.


        :return: The recent_communications of this CaseDetails.
        :rtype: CaseDetailsRecentCommunications
        """
        return self._recent_communications

    @recent_communications.setter
    def recent_communications(self, recent_communications):
        """Sets the recent_communications of this CaseDetails.


        :param recent_communications: The recent_communications of this CaseDetails.
        :type recent_communications: CaseDetailsRecentCommunications
        """

        self._recent_communications = recent_communications

    @property
    def cc_email_addresses(self):
        """Gets the cc_email_addresses of this CaseDetails.


        :return: The cc_email_addresses of this CaseDetails.
        :rtype: List
        """
        return self._cc_email_addresses

    @cc_email_addresses.setter
    def cc_email_addresses(self, cc_email_addresses):
        """Sets the cc_email_addresses of this CaseDetails.


        :param cc_email_addresses: The cc_email_addresses of this CaseDetails.
        :type cc_email_addresses: List
        """

        self._cc_email_addresses = cc_email_addresses

    @property
    def language(self):
        """Gets the language of this CaseDetails.


        :return: The language of this CaseDetails.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this CaseDetails.


        :param language: The language of this CaseDetails.
        :type language: str
        """

        self._language = language
