/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeMLModelsInput.h
 *
 * 
 */

#ifndef OAIDescribeMLModelsInput_H
#define OAIDescribeMLModelsInput_H

#include <QJsonObject>

#include "OAIMLModelFilterVariable.h"
#include "OAISortOrder.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeMLModelsInput : public OAIObject {
public:
    OAIDescribeMLModelsInput();
    OAIDescribeMLModelsInput(QString json);
    ~OAIDescribeMLModelsInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMLModelFilterVariable getFilterVariable() const;
    void setFilterVariable(const OAIMLModelFilterVariable &filter_variable);
    bool is_filter_variable_Set() const;
    bool is_filter_variable_Valid() const;

    QString getEq() const;
    void setEq(const QString &eq);
    bool is_eq_Set() const;
    bool is_eq_Valid() const;

    QString getGt() const;
    void setGt(const QString &gt);
    bool is_gt_Set() const;
    bool is_gt_Valid() const;

    QString getLt() const;
    void setLt(const QString &lt);
    bool is_lt_Set() const;
    bool is_lt_Valid() const;

    QString getGe() const;
    void setGe(const QString &ge);
    bool is_ge_Set() const;
    bool is_ge_Valid() const;

    QString getLe() const;
    void setLe(const QString &le);
    bool is_le_Set() const;
    bool is_le_Valid() const;

    QString getNe() const;
    void setNe(const QString &ne);
    bool is_ne_Set() const;
    bool is_ne_Valid() const;

    QString getPrefix() const;
    void setPrefix(const QString &prefix);
    bool is_prefix_Set() const;
    bool is_prefix_Valid() const;

    OAISortOrder getSortOrder() const;
    void setSortOrder(const OAISortOrder &sort_order);
    bool is_sort_order_Set() const;
    bool is_sort_order_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMLModelFilterVariable m_filter_variable;
    bool m_filter_variable_isSet;
    bool m_filter_variable_isValid;

    QString m_eq;
    bool m_eq_isSet;
    bool m_eq_isValid;

    QString m_gt;
    bool m_gt_isSet;
    bool m_gt_isValid;

    QString m_lt;
    bool m_lt_isSet;
    bool m_lt_isValid;

    QString m_ge;
    bool m_ge_isSet;
    bool m_ge_isValid;

    QString m_le;
    bool m_le_isSet;
    bool m_le_isValid;

    QString m_ne;
    bool m_ne_isSet;
    bool m_ne_isValid;

    QString m_prefix;
    bool m_prefix_isSet;
    bool m_prefix_isValid;

    OAISortOrder m_sort_order;
    bool m_sort_order_isSet;
    bool m_sort_order_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeMLModelsInput)

#endif // OAIDescribeMLModelsInput_H
