/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteTagsInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteTagsInput::OAIDeleteTagsInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteTagsInput::OAIDeleteTagsInput() {
    this->initializeModel();
}

OAIDeleteTagsInput::~OAIDeleteTagsInput() {}

void OAIDeleteTagsInput::initializeModel() {

    m_tag_keys_isSet = false;
    m_tag_keys_isValid = false;

    m_resource_id_isSet = false;
    m_resource_id_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;
}

void OAIDeleteTagsInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteTagsInput::fromJsonObject(QJsonObject json) {

    m_tag_keys_isValid = ::OpenAPI::fromJsonValue(m_tag_keys, json[QString("TagKeys")]);
    m_tag_keys_isSet = !json[QString("TagKeys")].isNull() && m_tag_keys_isValid;

    m_resource_id_isValid = ::OpenAPI::fromJsonValue(m_resource_id, json[QString("ResourceId")]);
    m_resource_id_isSet = !json[QString("ResourceId")].isNull() && m_resource_id_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("ResourceType")]);
    m_resource_type_isSet = !json[QString("ResourceType")].isNull() && m_resource_type_isValid;
}

QString OAIDeleteTagsInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteTagsInput::asJsonObject() const {
    QJsonObject obj;
    if (m_tag_keys.isSet()) {
        obj.insert(QString("TagKeys"), ::OpenAPI::toJsonValue(m_tag_keys));
    }
    if (m_resource_id_isSet) {
        obj.insert(QString("ResourceId"), ::OpenAPI::toJsonValue(m_resource_id));
    }
    if (m_resource_type.isSet()) {
        obj.insert(QString("ResourceType"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    return obj;
}

QList OAIDeleteTagsInput::getTagKeys() const {
    return m_tag_keys;
}
void OAIDeleteTagsInput::setTagKeys(const QList &tag_keys) {
    m_tag_keys = tag_keys;
    m_tag_keys_isSet = true;
}

bool OAIDeleteTagsInput::is_tag_keys_Set() const{
    return m_tag_keys_isSet;
}

bool OAIDeleteTagsInput::is_tag_keys_Valid() const{
    return m_tag_keys_isValid;
}

QString OAIDeleteTagsInput::getResourceId() const {
    return m_resource_id;
}
void OAIDeleteTagsInput::setResourceId(const QString &resource_id) {
    m_resource_id = resource_id;
    m_resource_id_isSet = true;
}

bool OAIDeleteTagsInput::is_resource_id_Set() const{
    return m_resource_id_isSet;
}

bool OAIDeleteTagsInput::is_resource_id_Valid() const{
    return m_resource_id_isValid;
}

OAITaggableResourceType OAIDeleteTagsInput::getResourceType() const {
    return m_resource_type;
}
void OAIDeleteTagsInput::setResourceType(const OAITaggableResourceType &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAIDeleteTagsInput::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAIDeleteTagsInput::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

bool OAIDeleteTagsInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tag_keys.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteTagsInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_tag_keys_isValid && m_resource_id_isValid && m_resource_type_isValid && true;
}

} // namespace OpenAPI
