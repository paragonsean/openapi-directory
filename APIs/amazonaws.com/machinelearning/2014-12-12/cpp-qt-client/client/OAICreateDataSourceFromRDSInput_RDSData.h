/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateDataSourceFromRDSInput_RDSData.h
 *
 * 
 */

#ifndef OAICreateDataSourceFromRDSInput_RDSData_H
#define OAICreateDataSourceFromRDSInput_RDSData_H

#include <QJsonObject>

#include "OAIRDSDataSpec_DatabaseCredentials.h"
#include "OAIRDSDataSpec_DatabaseInformation.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRDSDataSpec_DatabaseInformation;
class OAIRDSDataSpec_DatabaseCredentials;

class OAICreateDataSourceFromRDSInput_RDSData : public OAIObject {
public:
    OAICreateDataSourceFromRDSInput_RDSData();
    OAICreateDataSourceFromRDSInput_RDSData(QString json);
    ~OAICreateDataSourceFromRDSInput_RDSData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRDSDataSpec_DatabaseInformation getDatabaseInformation() const;
    void setDatabaseInformation(const OAIRDSDataSpec_DatabaseInformation &database_information);
    bool is_database_information_Set() const;
    bool is_database_information_Valid() const;

    QString getSelectSqlQuery() const;
    void setSelectSqlQuery(const QString &select_sql_query);
    bool is_select_sql_query_Set() const;
    bool is_select_sql_query_Valid() const;

    OAIRDSDataSpec_DatabaseCredentials getDatabaseCredentials() const;
    void setDatabaseCredentials(const OAIRDSDataSpec_DatabaseCredentials &database_credentials);
    bool is_database_credentials_Set() const;
    bool is_database_credentials_Valid() const;

    QString getS3StagingLocation() const;
    void setS3StagingLocation(const QString &s3_staging_location);
    bool is_s3_staging_location_Set() const;
    bool is_s3_staging_location_Valid() const;

    QString getDataRearrangement() const;
    void setDataRearrangement(const QString &data_rearrangement);
    bool is_data_rearrangement_Set() const;
    bool is_data_rearrangement_Valid() const;

    QString getDataSchema() const;
    void setDataSchema(const QString &data_schema);
    bool is_data_schema_Set() const;
    bool is_data_schema_Valid() const;

    QString getDataSchemaUri() const;
    void setDataSchemaUri(const QString &data_schema_uri);
    bool is_data_schema_uri_Set() const;
    bool is_data_schema_uri_Valid() const;

    QString getResourceRole() const;
    void setResourceRole(const QString &resource_role);
    bool is_resource_role_Set() const;
    bool is_resource_role_Valid() const;

    QString getServiceRole() const;
    void setServiceRole(const QString &service_role);
    bool is_service_role_Set() const;
    bool is_service_role_Valid() const;

    QString getSubnetId() const;
    void setSubnetId(const QString &subnet_id);
    bool is_subnet_id_Set() const;
    bool is_subnet_id_Valid() const;

    QList getSecurityGroupIds() const;
    void setSecurityGroupIds(const QList &security_group_ids);
    bool is_security_group_ids_Set() const;
    bool is_security_group_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRDSDataSpec_DatabaseInformation m_database_information;
    bool m_database_information_isSet;
    bool m_database_information_isValid;

    QString m_select_sql_query;
    bool m_select_sql_query_isSet;
    bool m_select_sql_query_isValid;

    OAIRDSDataSpec_DatabaseCredentials m_database_credentials;
    bool m_database_credentials_isSet;
    bool m_database_credentials_isValid;

    QString m_s3_staging_location;
    bool m_s3_staging_location_isSet;
    bool m_s3_staging_location_isValid;

    QString m_data_rearrangement;
    bool m_data_rearrangement_isSet;
    bool m_data_rearrangement_isValid;

    QString m_data_schema;
    bool m_data_schema_isSet;
    bool m_data_schema_isValid;

    QString m_data_schema_uri;
    bool m_data_schema_uri_isSet;
    bool m_data_schema_uri_isValid;

    QString m_resource_role;
    bool m_resource_role_isSet;
    bool m_resource_role_isValid;

    QString m_service_role;
    bool m_service_role_isSet;
    bool m_service_role_isValid;

    QString m_subnet_id;
    bool m_subnet_id_isSet;
    bool m_subnet_id_isValid;

    QList m_security_group_ids;
    bool m_security_group_ids_isSet;
    bool m_security_group_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateDataSourceFromRDSInput_RDSData)

#endif // OAICreateDataSourceFromRDSInput_RDSData_H
