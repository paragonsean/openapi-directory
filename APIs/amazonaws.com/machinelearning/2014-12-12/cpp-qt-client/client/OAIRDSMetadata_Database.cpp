/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRDSMetadata_Database.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRDSMetadata_Database::OAIRDSMetadata_Database(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRDSMetadata_Database::OAIRDSMetadata_Database() {
    this->initializeModel();
}

OAIRDSMetadata_Database::~OAIRDSMetadata_Database() {}

void OAIRDSMetadata_Database::initializeModel() {

    m_instance_identifier_isSet = false;
    m_instance_identifier_isValid = false;

    m_database_name_isSet = false;
    m_database_name_isValid = false;
}

void OAIRDSMetadata_Database::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRDSMetadata_Database::fromJsonObject(QJsonObject json) {

    m_instance_identifier_isValid = ::OpenAPI::fromJsonValue(m_instance_identifier, json[QString("InstanceIdentifier")]);
    m_instance_identifier_isSet = !json[QString("InstanceIdentifier")].isNull() && m_instance_identifier_isValid;

    m_database_name_isValid = ::OpenAPI::fromJsonValue(m_database_name, json[QString("DatabaseName")]);
    m_database_name_isSet = !json[QString("DatabaseName")].isNull() && m_database_name_isValid;
}

QString OAIRDSMetadata_Database::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRDSMetadata_Database::asJsonObject() const {
    QJsonObject obj;
    if (m_instance_identifier_isSet) {
        obj.insert(QString("InstanceIdentifier"), ::OpenAPI::toJsonValue(m_instance_identifier));
    }
    if (m_database_name_isSet) {
        obj.insert(QString("DatabaseName"), ::OpenAPI::toJsonValue(m_database_name));
    }
    return obj;
}

QString OAIRDSMetadata_Database::getInstanceIdentifier() const {
    return m_instance_identifier;
}
void OAIRDSMetadata_Database::setInstanceIdentifier(const QString &instance_identifier) {
    m_instance_identifier = instance_identifier;
    m_instance_identifier_isSet = true;
}

bool OAIRDSMetadata_Database::is_instance_identifier_Set() const{
    return m_instance_identifier_isSet;
}

bool OAIRDSMetadata_Database::is_instance_identifier_Valid() const{
    return m_instance_identifier_isValid;
}

QString OAIRDSMetadata_Database::getDatabaseName() const {
    return m_database_name;
}
void OAIRDSMetadata_Database::setDatabaseName(const QString &database_name) {
    m_database_name = database_name;
    m_database_name_isSet = true;
}

bool OAIRDSMetadata_Database::is_database_name_Set() const{
    return m_database_name_isSet;
}

bool OAIRDSMetadata_Database::is_database_name_Valid() const{
    return m_database_name_isValid;
}

bool OAIRDSMetadata_Database::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_database_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRDSMetadata_Database::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_instance_identifier_isValid && m_database_name_isValid && true;
}

} // namespace OpenAPI
