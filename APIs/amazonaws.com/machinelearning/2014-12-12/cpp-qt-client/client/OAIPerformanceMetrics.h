/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPerformanceMetrics.h
 *
 * &lt;p&gt;Measurements of how well the &lt;code&gt;MLModel&lt;/code&gt; performed on known observations. One of the following metrics is returned, based on the type of the &lt;code&gt;MLModel&lt;/code&gt;: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;BinaryAUC: The binary &lt;code&gt;MLModel&lt;/code&gt; uses the Area Under the Curve (AUC) technique to measure performance. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;RegressionRMSE: The regression &lt;code&gt;MLModel&lt;/code&gt; uses the Root Mean Square Error (RMSE) technique to measure performance. RMSE measures the difference between predicted and actual values for a single variable.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MulticlassAvgFScore: The multiclass &lt;code&gt;MLModel&lt;/code&gt; uses the F1 score technique to measure performance. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; For more information about performance metrics, please see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/machine-learning/latest/dg\&quot;&gt;Amazon Machine Learning Developer Guide&lt;/a&gt;. &lt;/p&gt;
 */

#ifndef OAIPerformanceMetrics_H
#define OAIPerformanceMetrics_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPerformanceMetrics : public OAIObject {
public:
    OAIPerformanceMetrics();
    OAIPerformanceMetrics(QString json);
    ~OAIPerformanceMetrics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getProperties() const;
    void setProperties(const QMap<QString, QString> &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPerformanceMetrics)

#endif // OAIPerformanceMetrics_H
