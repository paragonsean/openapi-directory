/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataSourceFilterVariable.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataSourceFilterVariable::OAIDataSourceFilterVariable(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataSourceFilterVariable::OAIDataSourceFilterVariable() {
    this->initializeModel();
}

OAIDataSourceFilterVariable::~OAIDataSourceFilterVariable() {}

void OAIDataSourceFilterVariable::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDataSourceFilterVariable::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDataSourceFilterVariable::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CreatedAt", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataSourceFilterVariable::CREATEDAT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LastUpdatedAt", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataSourceFilterVariable::LASTUPDATEDAT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Status", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataSourceFilterVariable::STATUS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Name", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataSourceFilterVariable::NAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DataLocationS3", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataSourceFilterVariable::DATALOCATIONS3;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IAMUser", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataSourceFilterVariable::IAMUSER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDataSourceFilterVariable::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDataSourceFilterVariable::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDataSourceFilterVariable::CREATEDAT:
            val = "CreatedAt";
            break;
        case eOAIDataSourceFilterVariable::LASTUPDATEDAT:
            val = "LastUpdatedAt";
            break;
        case eOAIDataSourceFilterVariable::STATUS:
            val = "Status";
            break;
        case eOAIDataSourceFilterVariable::NAME:
            val = "Name";
            break;
        case eOAIDataSourceFilterVariable::DATALOCATIONS3:
            val = "DataLocationS3";
            break;
        case eOAIDataSourceFilterVariable::IAMUSER:
            val = "IAMUser";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDataSourceFilterVariable::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDataSourceFilterVariable::eOAIDataSourceFilterVariable OAIDataSourceFilterVariable::getValue() const {
    return m_value;
}

void OAIDataSourceFilterVariable::setValue(const OAIDataSourceFilterVariable::eOAIDataSourceFilterVariable& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDataSourceFilterVariable::isSet() const {
    
    return m_value_isSet;
}

bool OAIDataSourceFilterVariable::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
