/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMLModel.h
 *
 * &lt;p&gt; Represents the output of a &lt;code&gt;GetMLModel&lt;/code&gt; operation. &lt;/p&gt; &lt;p&gt;The content consists of the detailed metadata and the current status of the &lt;code&gt;MLModel&lt;/code&gt;.&lt;/p&gt;
 */

#ifndef OAIMLModel_H
#define OAIMLModel_H

#include <QJsonObject>

#include "OAIAlgorithm.h"
#include "OAIEntityStatus.h"
#include "OAIMLModelType.h"
#include "OAIMLModel_EndpointInfo.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMLModel_EndpointInfo;

class OAIMLModel : public OAIObject {
public:
    OAIMLModel();
    OAIMLModel(QString json);
    ~OAIMLModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMlModelId() const;
    void setMlModelId(const QString &ml_model_id);
    bool is_ml_model_id_Set() const;
    bool is_ml_model_id_Valid() const;

    QString getTrainingDataSourceId() const;
    void setTrainingDataSourceId(const QString &training_data_source_id);
    bool is_training_data_source_id_Set() const;
    bool is_training_data_source_id_Valid() const;

    QString getCreatedByIamUser() const;
    void setCreatedByIamUser(const QString &created_by_iam_user);
    bool is_created_by_iam_user_Set() const;
    bool is_created_by_iam_user_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getLastUpdatedAt() const;
    void setLastUpdatedAt(const QDateTime &last_updated_at);
    bool is_last_updated_at_Set() const;
    bool is_last_updated_at_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIEntityStatus getStatus() const;
    void setStatus(const OAIEntityStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getSizeInBytes() const;
    void setSizeInBytes(const qint32 &size_in_bytes);
    bool is_size_in_bytes_Set() const;
    bool is_size_in_bytes_Valid() const;

    OAIMLModel_EndpointInfo getEndpointInfo() const;
    void setEndpointInfo(const OAIMLModel_EndpointInfo &endpoint_info);
    bool is_endpoint_info_Set() const;
    bool is_endpoint_info_Valid() const;

    QMap getTrainingParameters() const;
    void setTrainingParameters(const QMap &training_parameters);
    bool is_training_parameters_Set() const;
    bool is_training_parameters_Valid() const;

    QString getInputDataLocationS3() const;
    void setInputDataLocationS3(const QString &input_data_location_s3);
    bool is_input_data_location_s3_Set() const;
    bool is_input_data_location_s3_Valid() const;

    OAIAlgorithm getAlgorithm() const;
    void setAlgorithm(const OAIAlgorithm &algorithm);
    bool is_algorithm_Set() const;
    bool is_algorithm_Valid() const;

    OAIMLModelType getMlModelType() const;
    void setMlModelType(const OAIMLModelType &ml_model_type);
    bool is_ml_model_type_Set() const;
    bool is_ml_model_type_Valid() const;

    float getScoreThreshold() const;
    void setScoreThreshold(const float &score_threshold);
    bool is_score_threshold_Set() const;
    bool is_score_threshold_Valid() const;

    QDateTime getScoreThresholdLastUpdatedAt() const;
    void setScoreThresholdLastUpdatedAt(const QDateTime &score_threshold_last_updated_at);
    bool is_score_threshold_last_updated_at_Set() const;
    bool is_score_threshold_last_updated_at_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    qint32 getComputeTime() const;
    void setComputeTime(const qint32 &compute_time);
    bool is_compute_time_Set() const;
    bool is_compute_time_Valid() const;

    QDateTime getFinishedAt() const;
    void setFinishedAt(const QDateTime &finished_at);
    bool is_finished_at_Set() const;
    bool is_finished_at_Valid() const;

    QDateTime getStartedAt() const;
    void setStartedAt(const QDateTime &started_at);
    bool is_started_at_Set() const;
    bool is_started_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_ml_model_id;
    bool m_ml_model_id_isSet;
    bool m_ml_model_id_isValid;

    QString m_training_data_source_id;
    bool m_training_data_source_id_isSet;
    bool m_training_data_source_id_isValid;

    QString m_created_by_iam_user;
    bool m_created_by_iam_user_isSet;
    bool m_created_by_iam_user_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_last_updated_at;
    bool m_last_updated_at_isSet;
    bool m_last_updated_at_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIEntityStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_size_in_bytes;
    bool m_size_in_bytes_isSet;
    bool m_size_in_bytes_isValid;

    OAIMLModel_EndpointInfo m_endpoint_info;
    bool m_endpoint_info_isSet;
    bool m_endpoint_info_isValid;

    QMap m_training_parameters;
    bool m_training_parameters_isSet;
    bool m_training_parameters_isValid;

    QString m_input_data_location_s3;
    bool m_input_data_location_s3_isSet;
    bool m_input_data_location_s3_isValid;

    OAIAlgorithm m_algorithm;
    bool m_algorithm_isSet;
    bool m_algorithm_isValid;

    OAIMLModelType m_ml_model_type;
    bool m_ml_model_type_isSet;
    bool m_ml_model_type_isValid;

    float m_score_threshold;
    bool m_score_threshold_isSet;
    bool m_score_threshold_isValid;

    QDateTime m_score_threshold_last_updated_at;
    bool m_score_threshold_last_updated_at_isSet;
    bool m_score_threshold_last_updated_at_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    qint32 m_compute_time;
    bool m_compute_time_isSet;
    bool m_compute_time_isValid;

    QDateTime m_finished_at;
    bool m_finished_at_isSet;
    bool m_finished_at_isValid;

    QDateTime m_started_at;
    bool m_started_at_isSet;
    bool m_started_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMLModel)

#endif // OAIMLModel_H
