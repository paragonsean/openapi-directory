/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPrediction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPrediction::OAIPrediction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPrediction::OAIPrediction() {
    this->initializeModel();
}

OAIPrediction::~OAIPrediction() {}

void OAIPrediction::initializeModel() {

    m_predicted_label_isSet = false;
    m_predicted_label_isValid = false;

    m_predicted_value_isSet = false;
    m_predicted_value_isValid = false;

    m_predicted_scores_isSet = false;
    m_predicted_scores_isValid = false;

    m_details_isSet = false;
    m_details_isValid = false;
}

void OAIPrediction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPrediction::fromJsonObject(QJsonObject json) {

    m_predicted_label_isValid = ::OpenAPI::fromJsonValue(m_predicted_label, json[QString("predictedLabel")]);
    m_predicted_label_isSet = !json[QString("predictedLabel")].isNull() && m_predicted_label_isValid;

    m_predicted_value_isValid = ::OpenAPI::fromJsonValue(m_predicted_value, json[QString("predictedValue")]);
    m_predicted_value_isSet = !json[QString("predictedValue")].isNull() && m_predicted_value_isValid;

    m_predicted_scores_isValid = ::OpenAPI::fromJsonValue(m_predicted_scores, json[QString("predictedScores")]);
    m_predicted_scores_isSet = !json[QString("predictedScores")].isNull() && m_predicted_scores_isValid;

    m_details_isValid = ::OpenAPI::fromJsonValue(m_details, json[QString("details")]);
    m_details_isSet = !json[QString("details")].isNull() && m_details_isValid;
}

QString OAIPrediction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPrediction::asJsonObject() const {
    QJsonObject obj;
    if (m_predicted_label_isSet) {
        obj.insert(QString("predictedLabel"), ::OpenAPI::toJsonValue(m_predicted_label));
    }
    if (m_predicted_value_isSet) {
        obj.insert(QString("predictedValue"), ::OpenAPI::toJsonValue(m_predicted_value));
    }
    if (m_predicted_scores.size() > 0) {
        obj.insert(QString("predictedScores"), ::OpenAPI::toJsonValue(m_predicted_scores));
    }
    if (m_details.size() > 0) {
        obj.insert(QString("details"), ::OpenAPI::toJsonValue(m_details));
    }
    return obj;
}

QString OAIPrediction::getPredictedLabel() const {
    return m_predicted_label;
}
void OAIPrediction::setPredictedLabel(const QString &predicted_label) {
    m_predicted_label = predicted_label;
    m_predicted_label_isSet = true;
}

bool OAIPrediction::is_predicted_label_Set() const{
    return m_predicted_label_isSet;
}

bool OAIPrediction::is_predicted_label_Valid() const{
    return m_predicted_label_isValid;
}

float OAIPrediction::getPredictedValue() const {
    return m_predicted_value;
}
void OAIPrediction::setPredictedValue(const float &predicted_value) {
    m_predicted_value = predicted_value;
    m_predicted_value_isSet = true;
}

bool OAIPrediction::is_predicted_value_Set() const{
    return m_predicted_value_isSet;
}

bool OAIPrediction::is_predicted_value_Valid() const{
    return m_predicted_value_isValid;
}

QMap<QString, float> OAIPrediction::getPredictedScores() const {
    return m_predicted_scores;
}
void OAIPrediction::setPredictedScores(const QMap<QString, float> &predicted_scores) {
    m_predicted_scores = predicted_scores;
    m_predicted_scores_isSet = true;
}

bool OAIPrediction::is_predicted_scores_Set() const{
    return m_predicted_scores_isSet;
}

bool OAIPrediction::is_predicted_scores_Valid() const{
    return m_predicted_scores_isValid;
}

QMap<QString, QString> OAIPrediction::getDetails() const {
    return m_details;
}
void OAIPrediction::setDetails(const QMap<QString, QString> &details) {
    m_details = details;
    m_details_isSet = true;
}

bool OAIPrediction::is_details_Set() const{
    return m_details_isSet;
}

bool OAIPrediction::is_details_Valid() const{
    return m_details_isValid;
}

bool OAIPrediction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_predicted_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_predicted_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_predicted_scores.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPrediction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
