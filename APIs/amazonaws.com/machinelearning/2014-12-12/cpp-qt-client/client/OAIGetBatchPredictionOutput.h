/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetBatchPredictionOutput.h
 *
 * Represents the output of a &lt;code&gt;GetBatchPrediction&lt;/code&gt; operation and describes a &lt;code&gt;BatchPrediction&lt;/code&gt;.
 */

#ifndef OAIGetBatchPredictionOutput_H
#define OAIGetBatchPredictionOutput_H

#include <QJsonObject>

#include "OAIEntityStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetBatchPredictionOutput : public OAIObject {
public:
    OAIGetBatchPredictionOutput();
    OAIGetBatchPredictionOutput(QString json);
    ~OAIGetBatchPredictionOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBatchPredictionId() const;
    void setBatchPredictionId(const QString &batch_prediction_id);
    bool is_batch_prediction_id_Set() const;
    bool is_batch_prediction_id_Valid() const;

    QString getMlModelId() const;
    void setMlModelId(const QString &ml_model_id);
    bool is_ml_model_id_Set() const;
    bool is_ml_model_id_Valid() const;

    QString getBatchPredictionDataSourceId() const;
    void setBatchPredictionDataSourceId(const QString &batch_prediction_data_source_id);
    bool is_batch_prediction_data_source_id_Set() const;
    bool is_batch_prediction_data_source_id_Valid() const;

    QString getInputDataLocationS3() const;
    void setInputDataLocationS3(const QString &input_data_location_s3);
    bool is_input_data_location_s3_Set() const;
    bool is_input_data_location_s3_Valid() const;

    QString getCreatedByIamUser() const;
    void setCreatedByIamUser(const QString &created_by_iam_user);
    bool is_created_by_iam_user_Set() const;
    bool is_created_by_iam_user_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getLastUpdatedAt() const;
    void setLastUpdatedAt(const QDateTime &last_updated_at);
    bool is_last_updated_at_Set() const;
    bool is_last_updated_at_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIEntityStatus getStatus() const;
    void setStatus(const OAIEntityStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getOutputUri() const;
    void setOutputUri(const QString &output_uri);
    bool is_output_uri_Set() const;
    bool is_output_uri_Valid() const;

    QString getLogUri() const;
    void setLogUri(const QString &log_uri);
    bool is_log_uri_Set() const;
    bool is_log_uri_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    qint32 getComputeTime() const;
    void setComputeTime(const qint32 &compute_time);
    bool is_compute_time_Set() const;
    bool is_compute_time_Valid() const;

    QDateTime getFinishedAt() const;
    void setFinishedAt(const QDateTime &finished_at);
    bool is_finished_at_Set() const;
    bool is_finished_at_Valid() const;

    QDateTime getStartedAt() const;
    void setStartedAt(const QDateTime &started_at);
    bool is_started_at_Set() const;
    bool is_started_at_Valid() const;

    qint32 getTotalRecordCount() const;
    void setTotalRecordCount(const qint32 &total_record_count);
    bool is_total_record_count_Set() const;
    bool is_total_record_count_Valid() const;

    qint32 getInvalidRecordCount() const;
    void setInvalidRecordCount(const qint32 &invalid_record_count);
    bool is_invalid_record_count_Set() const;
    bool is_invalid_record_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_batch_prediction_id;
    bool m_batch_prediction_id_isSet;
    bool m_batch_prediction_id_isValid;

    QString m_ml_model_id;
    bool m_ml_model_id_isSet;
    bool m_ml_model_id_isValid;

    QString m_batch_prediction_data_source_id;
    bool m_batch_prediction_data_source_id_isSet;
    bool m_batch_prediction_data_source_id_isValid;

    QString m_input_data_location_s3;
    bool m_input_data_location_s3_isSet;
    bool m_input_data_location_s3_isValid;

    QString m_created_by_iam_user;
    bool m_created_by_iam_user_isSet;
    bool m_created_by_iam_user_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_last_updated_at;
    bool m_last_updated_at_isSet;
    bool m_last_updated_at_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIEntityStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_output_uri;
    bool m_output_uri_isSet;
    bool m_output_uri_isValid;

    QString m_log_uri;
    bool m_log_uri_isSet;
    bool m_log_uri_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    qint32 m_compute_time;
    bool m_compute_time_isSet;
    bool m_compute_time_isValid;

    QDateTime m_finished_at;
    bool m_finished_at_isSet;
    bool m_finished_at_isValid;

    QDateTime m_started_at;
    bool m_started_at_isSet;
    bool m_started_at_isValid;

    qint32 m_total_record_count;
    bool m_total_record_count_isSet;
    bool m_total_record_count_isValid;

    qint32 m_invalid_record_count;
    bool m_invalid_record_count_isSet;
    bool m_invalid_record_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetBatchPredictionOutput)

#endif // OAIGetBatchPredictionOutput_H
