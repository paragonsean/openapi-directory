/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITaggableResourceType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITaggableResourceType::OAITaggableResourceType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITaggableResourceType::OAITaggableResourceType() {
    this->initializeModel();
}

OAITaggableResourceType::~OAITaggableResourceType() {}

void OAITaggableResourceType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITaggableResourceType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITaggableResourceType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("BatchPrediction", Qt::CaseInsensitive) == 0) {
        m_value = eOAITaggableResourceType::BATCHPREDICTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DataSource", Qt::CaseInsensitive) == 0) {
        m_value = eOAITaggableResourceType::DATASOURCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Evaluation", Qt::CaseInsensitive) == 0) {
        m_value = eOAITaggableResourceType::EVALUATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MLModel", Qt::CaseInsensitive) == 0) {
        m_value = eOAITaggableResourceType::MLMODEL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITaggableResourceType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITaggableResourceType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITaggableResourceType::BATCHPREDICTION:
            val = "BatchPrediction";
            break;
        case eOAITaggableResourceType::DATASOURCE:
            val = "DataSource";
            break;
        case eOAITaggableResourceType::EVALUATION:
            val = "Evaluation";
            break;
        case eOAITaggableResourceType::MLMODEL:
            val = "MLModel";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITaggableResourceType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITaggableResourceType::eOAITaggableResourceType OAITaggableResourceType::getValue() const {
    return m_value;
}

void OAITaggableResourceType::setValue(const OAITaggableResourceType::eOAITaggableResourceType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITaggableResourceType::isSet() const {
    
    return m_value_isSet;
}

bool OAITaggableResourceType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
