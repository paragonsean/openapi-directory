/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteRealtimeEndpointOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteRealtimeEndpointOutput::OAIDeleteRealtimeEndpointOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteRealtimeEndpointOutput::OAIDeleteRealtimeEndpointOutput() {
    this->initializeModel();
}

OAIDeleteRealtimeEndpointOutput::~OAIDeleteRealtimeEndpointOutput() {}

void OAIDeleteRealtimeEndpointOutput::initializeModel() {

    m_ml_model_id_isSet = false;
    m_ml_model_id_isValid = false;

    m_realtime_endpoint_info_isSet = false;
    m_realtime_endpoint_info_isValid = false;
}

void OAIDeleteRealtimeEndpointOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteRealtimeEndpointOutput::fromJsonObject(QJsonObject json) {

    m_ml_model_id_isValid = ::OpenAPI::fromJsonValue(m_ml_model_id, json[QString("MLModelId")]);
    m_ml_model_id_isSet = !json[QString("MLModelId")].isNull() && m_ml_model_id_isValid;

    m_realtime_endpoint_info_isValid = ::OpenAPI::fromJsonValue(m_realtime_endpoint_info, json[QString("RealtimeEndpointInfo")]);
    m_realtime_endpoint_info_isSet = !json[QString("RealtimeEndpointInfo")].isNull() && m_realtime_endpoint_info_isValid;
}

QString OAIDeleteRealtimeEndpointOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteRealtimeEndpointOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_ml_model_id_isSet) {
        obj.insert(QString("MLModelId"), ::OpenAPI::toJsonValue(m_ml_model_id));
    }
    if (m_realtime_endpoint_info.isSet()) {
        obj.insert(QString("RealtimeEndpointInfo"), ::OpenAPI::toJsonValue(m_realtime_endpoint_info));
    }
    return obj;
}

QString OAIDeleteRealtimeEndpointOutput::getMlModelId() const {
    return m_ml_model_id;
}
void OAIDeleteRealtimeEndpointOutput::setMlModelId(const QString &ml_model_id) {
    m_ml_model_id = ml_model_id;
    m_ml_model_id_isSet = true;
}

bool OAIDeleteRealtimeEndpointOutput::is_ml_model_id_Set() const{
    return m_ml_model_id_isSet;
}

bool OAIDeleteRealtimeEndpointOutput::is_ml_model_id_Valid() const{
    return m_ml_model_id_isValid;
}

OAICreateRealtimeEndpointOutput_RealtimeEndpointInfo OAIDeleteRealtimeEndpointOutput::getRealtimeEndpointInfo() const {
    return m_realtime_endpoint_info;
}
void OAIDeleteRealtimeEndpointOutput::setRealtimeEndpointInfo(const OAICreateRealtimeEndpointOutput_RealtimeEndpointInfo &realtime_endpoint_info) {
    m_realtime_endpoint_info = realtime_endpoint_info;
    m_realtime_endpoint_info_isSet = true;
}

bool OAIDeleteRealtimeEndpointOutput::is_realtime_endpoint_info_Set() const{
    return m_realtime_endpoint_info_isSet;
}

bool OAIDeleteRealtimeEndpointOutput::is_realtime_endpoint_info_Valid() const{
    return m_realtime_endpoint_info_isValid;
}

bool OAIDeleteRealtimeEndpointOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ml_model_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_realtime_endpoint_info.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteRealtimeEndpointOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
