/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataSource.h
 *
 * &lt;p&gt; Represents the output of the &lt;code&gt;GetDataSource&lt;/code&gt; operation. &lt;/p&gt; &lt;p&gt; The content consists of the detailed metadata and data file information and the current status of the &lt;code&gt;DataSource&lt;/code&gt;. &lt;/p&gt;
 */

#ifndef OAIDataSource_H
#define OAIDataSource_H

#include <QJsonObject>

#include "OAIEntityStatus.h"
#include "OAIRDSMetadata.h"
#include "OAIRedshiftMetadata.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRedshiftMetadata;
class OAIRDSMetadata;

class OAIDataSource : public OAIObject {
public:
    OAIDataSource();
    OAIDataSource(QString json);
    ~OAIDataSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSourceId() const;
    void setDataSourceId(const QString &data_source_id);
    bool is_data_source_id_Set() const;
    bool is_data_source_id_Valid() const;

    QString getDataLocationS3() const;
    void setDataLocationS3(const QString &data_location_s3);
    bool is_data_location_s3_Set() const;
    bool is_data_location_s3_Valid() const;

    QString getDataRearrangement() const;
    void setDataRearrangement(const QString &data_rearrangement);
    bool is_data_rearrangement_Set() const;
    bool is_data_rearrangement_Valid() const;

    QString getCreatedByIamUser() const;
    void setCreatedByIamUser(const QString &created_by_iam_user);
    bool is_created_by_iam_user_Set() const;
    bool is_created_by_iam_user_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getLastUpdatedAt() const;
    void setLastUpdatedAt(const QDateTime &last_updated_at);
    bool is_last_updated_at_Set() const;
    bool is_last_updated_at_Valid() const;

    qint32 getDataSizeInBytes() const;
    void setDataSizeInBytes(const qint32 &data_size_in_bytes);
    bool is_data_size_in_bytes_Set() const;
    bool is_data_size_in_bytes_Valid() const;

    qint32 getNumberOfFiles() const;
    void setNumberOfFiles(const qint32 &number_of_files);
    bool is_number_of_files_Set() const;
    bool is_number_of_files_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIEntityStatus getStatus() const;
    void setStatus(const OAIEntityStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    OAIRedshiftMetadata getRedshiftMetadata() const;
    void setRedshiftMetadata(const OAIRedshiftMetadata &redshift_metadata);
    bool is_redshift_metadata_Set() const;
    bool is_redshift_metadata_Valid() const;

    OAIRDSMetadata getRdsMetadata() const;
    void setRdsMetadata(const OAIRDSMetadata &rds_metadata);
    bool is_rds_metadata_Set() const;
    bool is_rds_metadata_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    bool getComputeStatistics() const;
    void setComputeStatistics(const bool &compute_statistics);
    bool is_compute_statistics_Set() const;
    bool is_compute_statistics_Valid() const;

    qint32 getComputeTime() const;
    void setComputeTime(const qint32 &compute_time);
    bool is_compute_time_Set() const;
    bool is_compute_time_Valid() const;

    QDateTime getFinishedAt() const;
    void setFinishedAt(const QDateTime &finished_at);
    bool is_finished_at_Set() const;
    bool is_finished_at_Valid() const;

    QDateTime getStartedAt() const;
    void setStartedAt(const QDateTime &started_at);
    bool is_started_at_Set() const;
    bool is_started_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_source_id;
    bool m_data_source_id_isSet;
    bool m_data_source_id_isValid;

    QString m_data_location_s3;
    bool m_data_location_s3_isSet;
    bool m_data_location_s3_isValid;

    QString m_data_rearrangement;
    bool m_data_rearrangement_isSet;
    bool m_data_rearrangement_isValid;

    QString m_created_by_iam_user;
    bool m_created_by_iam_user_isSet;
    bool m_created_by_iam_user_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_last_updated_at;
    bool m_last_updated_at_isSet;
    bool m_last_updated_at_isValid;

    qint32 m_data_size_in_bytes;
    bool m_data_size_in_bytes_isSet;
    bool m_data_size_in_bytes_isValid;

    qint32 m_number_of_files;
    bool m_number_of_files_isSet;
    bool m_number_of_files_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIEntityStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    OAIRedshiftMetadata m_redshift_metadata;
    bool m_redshift_metadata_isSet;
    bool m_redshift_metadata_isValid;

    OAIRDSMetadata m_rds_metadata;
    bool m_rds_metadata_isSet;
    bool m_rds_metadata_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    bool m_compute_statistics;
    bool m_compute_statistics_isSet;
    bool m_compute_statistics_isValid;

    qint32 m_compute_time;
    bool m_compute_time_isSet;
    bool m_compute_time_isValid;

    QDateTime m_finished_at;
    bool m_finished_at_isSet;
    bool m_finished_at_isValid;

    QDateTime m_started_at;
    bool m_started_at_isSet;
    bool m_started_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataSource)

#endif // OAIDataSource_H
