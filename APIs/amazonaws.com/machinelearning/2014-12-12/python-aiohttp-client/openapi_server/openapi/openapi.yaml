openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: Definition of the public APIs exposed by Amazon Machine Learning
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Machine Learning
  version: 2014-12-12
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: machinelearning
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/machinelearning-2014-12-12.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/machinelearning/
servers:
- description: The Amazon Machine Learning multi-region endpoint
  url: "http://machinelearning.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Machine Learning multi-region endpoint
  url: "https://machinelearning.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Machine Learning endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://machinelearning.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Machine Learning endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://machinelearning.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=AmazonML_20141212.AddTags:
    post:
      description: "Adds one or more tags to an object, up to a limit of 10. Each\
        \ tag consists of a key and an optional value. If you add a tag using a key\
        \ that is already associated with the ML object, <code>AddTags</code> updates\
        \ the tag's value."
      operationId: add_tags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.AddTags
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTagsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTagsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagException'
          description: InvalidTagException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagLimitExceededException'
          description: TagLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.CreateBatchPrediction:
    post:
      description: "<p>Generates predictions for a group of observations. The observations\
        \ to process exist in one or more data files referenced by a <code>DataSource</code>.\
        \ This operation creates a new <code>BatchPrediction</code>, and uses an <code>MLModel</code>\
        \ and the data files referenced by the <code>DataSource</code> as information\
        \ sources. </p> <p> <code>CreateBatchPrediction</code> is an asynchronous\
        \ operation. In response to <code>CreateBatchPrediction</code>, Amazon Machine\
        \ Learning (Amazon ML) immediately returns and sets the <code>BatchPrediction</code>\
        \ status to <code>PENDING</code>. After the <code>BatchPrediction</code> completes,\
        \ Amazon ML sets the status to <code>COMPLETED</code>. </p> <p>You can poll\
        \ for status updates by using the <a>GetBatchPrediction</a> operation and\
        \ checking the <code>Status</code> parameter of the result. After the <code>COMPLETED</code>\
        \ status appears, the results are available in the location specified by the\
        \ <code>OutputUri</code> parameter.</p>"
      operationId: create_batch_prediction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.CreateBatchPrediction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBatchPredictionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBatchPredictionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.CreateDataSourceFromRDS:
    post:
      description: "<p>Creates a <code>DataSource</code> object from an <a href=\"\
        http://aws.amazon.com/rds/\"> Amazon Relational Database Service</a> (Amazon\
        \ RDS). A <code>DataSource</code> references data that can be used to perform\
        \ <code>CreateMLModel</code>, <code>CreateEvaluation</code>, or <code>CreateBatchPrediction</code>\
        \ operations.</p> <p> <code>CreateDataSourceFromRDS</code> is an asynchronous\
        \ operation. In response to <code>CreateDataSourceFromRDS</code>, Amazon Machine\
        \ Learning (Amazon ML) immediately returns and sets the <code>DataSource</code>\
        \ status to <code>PENDING</code>. After the <code>DataSource</code> is created\
        \ and ready for use, Amazon ML sets the <code>Status</code> parameter to <code>COMPLETED</code>.\
        \ <code>DataSource</code> in the <code>COMPLETED</code> or <code>PENDING</code>\
        \ state can be used only to perform <code>&gt;CreateMLModel</code>&gt;, <code>CreateEvaluation</code>,\
        \ or <code>CreateBatchPrediction</code> operations. </p> <p> If Amazon ML\
        \ cannot accept the input source, it sets the <code>Status</code> parameter\
        \ to <code>FAILED</code> and includes an error message in the <code>Message</code>\
        \ attribute of the <code>GetDataSource</code> operation response. </p>"
      operationId: create_data_source_from_rds
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.CreateDataSourceFromRDS
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataSourceFromRDSInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataSourceFromRDSOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.CreateDataSourceFromRedshift:
    post:
      description: "<p>Creates a <code>DataSource</code> from a database hosted on\
        \ an Amazon Redshift cluster. A <code>DataSource</code> references data that\
        \ can be used to perform either <code>CreateMLModel</code>, <code>CreateEvaluation</code>,\
        \ or <code>CreateBatchPrediction</code> operations.</p> <p> <code>CreateDataSourceFromRedshift</code>\
        \ is an asynchronous operation. In response to <code>CreateDataSourceFromRedshift</code>,\
        \ Amazon Machine Learning (Amazon ML) immediately returns and sets the <code>DataSource</code>\
        \ status to <code>PENDING</code>. After the <code>DataSource</code> is created\
        \ and ready for use, Amazon ML sets the <code>Status</code> parameter to <code>COMPLETED</code>.\
        \ <code>DataSource</code> in <code>COMPLETED</code> or <code>PENDING</code>\
        \ states can be used to perform only <code>CreateMLModel</code>, <code>CreateEvaluation</code>,\
        \ or <code>CreateBatchPrediction</code> operations. </p> <p> If Amazon ML\
        \ can't accept the input source, it sets the <code>Status</code> parameter\
        \ to <code>FAILED</code> and includes an error message in the <code>Message</code>\
        \ attribute of the <code>GetDataSource</code> operation response. </p> <p>The\
        \ observations should be contained in the database hosted on an Amazon Redshift\
        \ cluster and should be specified by a <code>SelectSqlQuery</code> query.\
        \ Amazon ML executes an <code>Unload</code> command in Amazon Redshift to\
        \ transfer the result set of the <code>SelectSqlQuery</code> query to <code>S3StagingLocation</code>.</p>\
        \ <p>After the <code>DataSource</code> has been created, it's ready for use\
        \ in evaluations and batch predictions. If you plan to use the <code>DataSource</code>\
        \ to train an <code>MLModel</code>, the <code>DataSource</code> also requires\
        \ a recipe. A recipe describes how each input variable will be used in training\
        \ an <code>MLModel</code>. Will the variable be included or excluded from\
        \ training? Will the variable be manipulated; for example, will it be combined\
        \ with another variable or will it be split apart into word combinations?\
        \ The recipe provides answers to these questions.</p> <p>You can't change\
        \ an existing datasource, but you can copy and modify the settings from an\
        \ existing Amazon Redshift datasource to create a new datasource. To do so,\
        \ call <code>GetDataSource</code> for an existing datasource and copy the\
        \ values to a <code>CreateDataSource</code> call. Change the settings that\
        \ you want to change and make sure that all required fields have the appropriate\
        \ values.</p>"
      operationId: create_data_source_from_redshift
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.CreateDataSourceFromRedshift
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataSourceFromRedshiftInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataSourceFromRedshiftOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.CreateDataSourceFromS3:
    post:
      description: "<p>Creates a <code>DataSource</code> object. A <code>DataSource</code>\
        \ references data that can be used to perform <code>CreateMLModel</code>,\
        \ <code>CreateEvaluation</code>, or <code>CreateBatchPrediction</code> operations.</p>\
        \ <p> <code>CreateDataSourceFromS3</code> is an asynchronous operation. In\
        \ response to <code>CreateDataSourceFromS3</code>, Amazon Machine Learning\
        \ (Amazon ML) immediately returns and sets the <code>DataSource</code> status\
        \ to <code>PENDING</code>. After the <code>DataSource</code> has been created\
        \ and is ready for use, Amazon ML sets the <code>Status</code> parameter to\
        \ <code>COMPLETED</code>. <code>DataSource</code> in the <code>COMPLETED</code>\
        \ or <code>PENDING</code> state can be used to perform only <code>CreateMLModel</code>,\
        \ <code>CreateEvaluation</code> or <code>CreateBatchPrediction</code> operations.\
        \ </p> <p> If Amazon ML can't accept the input source, it sets the <code>Status</code>\
        \ parameter to <code>FAILED</code> and includes an error message in the <code>Message</code>\
        \ attribute of the <code>GetDataSource</code> operation response. </p> <p>The\
        \ observation data used in a <code>DataSource</code> should be ready to use;\
        \ that is, it should have a consistent structure, and missing data values\
        \ should be kept to a minimum. The observation data must reside in one or\
        \ more .csv files in an Amazon Simple Storage Service (Amazon S3) location,\
        \ along with a schema that describes the data items by name and type. The\
        \ same schema must be used for all of the data files referenced by the <code>DataSource</code>.\
        \ </p> <p>After the <code>DataSource</code> has been created, it's ready to\
        \ use in evaluations and batch predictions. If you plan to use the <code>DataSource</code>\
        \ to train an <code>MLModel</code>, the <code>DataSource</code> also needs\
        \ a recipe. A recipe describes how each input variable will be used in training\
        \ an <code>MLModel</code>. Will the variable be included or excluded from\
        \ training? Will the variable be manipulated; for example, will it be combined\
        \ with another variable or will it be split apart into word combinations?\
        \ The recipe provides answers to these questions.</p>"
      operationId: create_data_source_from_s3
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.CreateDataSourceFromS3
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataSourceFromS3Input'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataSourceFromS3Output'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.CreateEvaluation:
    post:
      description: "<p>Creates a new <code>Evaluation</code> of an <code>MLModel</code>.\
        \ An <code>MLModel</code> is evaluated on a set of observations associated\
        \ to a <code>DataSource</code>. Like a <code>DataSource</code> for an <code>MLModel</code>,\
        \ the <code>DataSource</code> for an <code>Evaluation</code> contains values\
        \ for the <code>Target Variable</code>. The <code>Evaluation</code> compares\
        \ the predicted result for each observation to the actual outcome and provides\
        \ a summary so that you know how effective the <code>MLModel</code> functions\
        \ on the test data. Evaluation generates a relevant performance metric, such\
        \ as BinaryAUC, RegressionRMSE or MulticlassAvgFScore based on the corresponding\
        \ <code>MLModelType</code>: <code>BINARY</code>, <code>REGRESSION</code> or\
        \ <code>MULTICLASS</code>. </p> <p> <code>CreateEvaluation</code> is an asynchronous\
        \ operation. In response to <code>CreateEvaluation</code>, Amazon Machine\
        \ Learning (Amazon ML) immediately returns and sets the evaluation status\
        \ to <code>PENDING</code>. After the <code>Evaluation</code> is created and\
        \ ready for use, Amazon ML sets the status to <code>COMPLETED</code>. </p>\
        \ <p>You can use the <code>GetEvaluation</code> operation to check progress\
        \ of the evaluation during the creation operation.</p>"
      operationId: create_evaluation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.CreateEvaluation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEvaluationInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEvaluationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.CreateMLModel:
    post:
      description: "<p>Creates a new <code>MLModel</code> using the <code>DataSource</code>\
        \ and the recipe as information sources. </p> <p>An <code>MLModel</code> is\
        \ nearly immutable. Users can update only the <code>MLModelName</code> and\
        \ the <code>ScoreThreshold</code> in an <code>MLModel</code> without creating\
        \ a new <code>MLModel</code>. </p> <p> <code>CreateMLModel</code> is an asynchronous\
        \ operation. In response to <code>CreateMLModel</code>, Amazon Machine Learning\
        \ (Amazon ML) immediately returns and sets the <code>MLModel</code> status\
        \ to <code>PENDING</code>. After the <code>MLModel</code> has been created\
        \ and ready is for use, Amazon ML sets the status to <code>COMPLETED</code>.\
        \ </p> <p>You can use the <code>GetMLModel</code> operation to check the progress\
        \ of the <code>MLModel</code> during the creation operation.</p> <p> <code>CreateMLModel</code>\
        \ requires a <code>DataSource</code> with computed statistics, which can be\
        \ created by setting <code>ComputeStatistics</code> to <code>true</code> in\
        \ <code>CreateDataSourceFromRDS</code>, <code>CreateDataSourceFromS3</code>,\
        \ or <code>CreateDataSourceFromRedshift</code> operations. </p>"
      operationId: create_ml_model
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.CreateMLModel
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMLModelInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMLModelOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.CreateRealtimeEndpoint:
    post:
      description: "Creates a real-time endpoint for the <code>MLModel</code>. The\
        \ endpoint contains the URI of the <code>MLModel</code>; that is, the location\
        \ to send real-time prediction requests for the specified <code>MLModel</code>."
      operationId: create_realtime_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.CreateRealtimeEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRealtimeEndpointInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRealtimeEndpointOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.DeleteBatchPrediction:
    post:
      description: "<p>Assigns the DELETED status to a <code>BatchPrediction</code>,\
        \ rendering it unusable.</p> <p>After using the <code>DeleteBatchPrediction</code>\
        \ operation, you can use the <a>GetBatchPrediction</a> operation to verify\
        \ that the status of the <code>BatchPrediction</code> changed to DELETED.</p>\
        \ <p> <b>Caution:</b> The result of the <code>DeleteBatchPrediction</code>\
        \ operation is irreversible.</p>"
      operationId: delete_batch_prediction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.DeleteBatchPrediction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBatchPredictionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBatchPredictionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.DeleteDataSource:
    post:
      description: "<p>Assigns the DELETED status to a <code>DataSource</code>, rendering\
        \ it unusable.</p> <p>After using the <code>DeleteDataSource</code> operation,\
        \ you can use the <a>GetDataSource</a> operation to verify that the status\
        \ of the <code>DataSource</code> changed to DELETED.</p> <p> <b>Caution:</b>\
        \ The results of the <code>DeleteDataSource</code> operation are irreversible.</p>"
      operationId: delete_data_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.DeleteDataSource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDataSourceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataSourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.DeleteEvaluation:
    post:
      description: "<p>Assigns the <code>DELETED</code> status to an <code>Evaluation</code>,\
        \ rendering it unusable.</p> <p>After invoking the <code>DeleteEvaluation</code>\
        \ operation, you can use the <code>GetEvaluation</code> operation to verify\
        \ that the status of the <code>Evaluation</code> changed to <code>DELETED</code>.</p>\
        \ <p> <b>Caution:</b> The results of the <code>DeleteEvaluation</code> operation\
        \ are irreversible.</p>"
      operationId: delete_evaluation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.DeleteEvaluation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEvaluationInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEvaluationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.DeleteMLModel:
    post:
      description: "<p>Assigns the <code>DELETED</code> status to an <code>MLModel</code>,\
        \ rendering it unusable.</p> <p>After using the <code>DeleteMLModel</code>\
        \ operation, you can use the <code>GetMLModel</code> operation to verify that\
        \ the status of the <code>MLModel</code> changed to DELETED.</p> <p> <b>Caution:</b>\
        \ The result of the <code>DeleteMLModel</code> operation is irreversible.</p>"
      operationId: delete_ml_model
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.DeleteMLModel
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMLModelInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMLModelOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.DeleteRealtimeEndpoint:
    post:
      description: Deletes a real time endpoint of an <code>MLModel</code>.
      operationId: delete_realtime_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.DeleteRealtimeEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRealtimeEndpointInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRealtimeEndpointOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.DeleteTags:
    post:
      description: "<p>Deletes the specified tags associated with an ML object. After\
        \ this operation is complete, you can't recover deleted tags.</p> <p>If you\
        \ specify a tag that doesn't exist, Amazon ML ignores it.</p>"
      operationId: delete_tags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.DeleteTags
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTagsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTagsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagException'
          description: InvalidTagException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.DescribeBatchPredictions:
    post:
      description: Returns a list of <code>BatchPrediction</code> operations that
        match the search criteria in the request.
      operationId: describe_batch_predictions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.DescribeBatchPredictions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeBatchPredictionsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBatchPredictionsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.DescribeDataSources:
    post:
      description: Returns a list of <code>DataSource</code> that match the search
        criteria in the request.
      operationId: describe_data_sources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.DescribeDataSources
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDataSourcesInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDataSourcesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.DescribeEvaluations:
    post:
      description: Returns a list of <code>DescribeEvaluations</code> that match the
        search criteria in the request.
      operationId: describe_evaluations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.DescribeEvaluations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEvaluationsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEvaluationsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.DescribeMLModels:
    post:
      description: Returns a list of <code>MLModel</code> that match the search criteria
        in the request.
      operationId: describe_ml_models
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.DescribeMLModels
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMLModelsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMLModelsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.DescribeTags:
    post:
      description: Describes one or more of the tags for your Amazon ML object.
      operationId: describe_tags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.DescribeTags
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTagsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTagsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.GetBatchPrediction:
    post:
      description: "Returns a <code>BatchPrediction</code> that includes detailed\
        \ metadata, status, and data file information for a <code>Batch Prediction</code>\
        \ request."
      operationId: get_batch_prediction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.GetBatchPrediction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBatchPredictionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBatchPredictionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.GetDataSource:
    post:
      description: "<p>Returns a <code>DataSource</code> that includes metadata and\
        \ data file information, as well as the current status of the <code>DataSource</code>.</p>\
        \ <p> <code>GetDataSource</code> provides results in normal or verbose format.\
        \ The verbose format adds the schema description and the list of files pointed\
        \ to by the DataSource to the normal format.</p>"
      operationId: get_data_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.GetDataSource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDataSourceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataSourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.GetEvaluation:
    post:
      description: Returns an <code>Evaluation</code> that includes metadata as well
        as the current status of the <code>Evaluation</code>.
      operationId: get_evaluation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.GetEvaluation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEvaluationInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEvaluationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.GetMLModel:
    post:
      description: "<p>Returns an <code>MLModel</code> that includes detailed metadata,\
        \ data source information, and the current status of the <code>MLModel</code>.</p>\
        \ <p> <code>GetMLModel</code> provides results in normal or verbose format.\
        \ </p>"
      operationId: get_ml_model
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.GetMLModel
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMLModelInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMLModelOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.Predict:
    post:
      description: <p>Generates a prediction for the observation using the specified
        <code>ML Model</code>.</p> <p> <b>Note:</b> Not all response parameters will
        be populated. Whether a response parameter is populated depends on the type
        of model requested.</p>
      operationId: predict
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.Predict
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictorNotMountedException'
          description: PredictorNotMountedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.UpdateBatchPrediction:
    post:
      description: <p>Updates the <code>BatchPredictionName</code> of a <code>BatchPrediction</code>.</p>
        <p>You can use the <code>GetBatchPrediction</code> operation to view the contents
        of the updated data element.</p>
      operationId: update_batch_prediction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.UpdateBatchPrediction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBatchPredictionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBatchPredictionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.UpdateDataSource:
    post:
      description: <p>Updates the <code>DataSourceName</code> of a <code>DataSource</code>.</p>
        <p>You can use the <code>GetDataSource</code> operation to view the contents
        of the updated data element.</p>
      operationId: update_data_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.UpdateDataSource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDataSourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.UpdateEvaluation:
    post:
      description: <p>Updates the <code>EvaluationName</code> of an <code>Evaluation</code>.</p>
        <p>You can use the <code>GetEvaluation</code> operation to view the contents
        of the updated data element.</p>
      operationId: update_evaluation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.UpdateEvaluation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEvaluationInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEvaluationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonML_20141212.UpdateMLModel:
    post:
      description: <p>Updates the <code>MLModelName</code> and the <code>ScoreThreshold</code>
        of an <code>MLModel</code>.</p> <p>You can use the <code>GetMLModel</code>
        operation to view the contents of the updated data element.</p>
      operationId: update_ml_model
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonML_20141212.UpdateMLModel
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMLModelInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMLModelOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AddTagsOutput:
      description: Amazon ML returns the following elements.
      example:
        ResourceId: ""
        ResourceType: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the ML object that was tagged.
          title: ResourceId
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/TaggableResourceType'
          - description: The type of the ML object that was tagged.
          title: ResourceType
      title: AddTagsOutput
      type: object
    AddTagsInput:
      example:
        ResourceId: ""
        ResourceType: ""
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "The key-value pairs to use to create tags. If you specify\
              \ a key without specifying a value, Amazon ML creates a tag with the\
              \ specified key and a value of null."
          title: Tags
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: "The ID of the ML object to tag. For example, <code>exampleModelId</code>."
          title: ResourceId
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/TaggableResourceType'
          - description: The type of the ML object to tag.
          title: ResourceType
      required:
      - ResourceId
      - ResourceType
      - Tags
      title: AddTagsInput
      type: object
    InvalidInputException: {}
    InvalidTagException: {}
    TagLimitExceededException: {}
    ResourceNotFoundException: {}
    InternalServerException: {}
    CreateBatchPredictionOutput:
      description: "<p> Represents the output of a <code>CreateBatchPrediction</code>\
        \ operation, and is an acknowledgement that Amazon ML received the request.</p>\
        \ <p>The <code>CreateBatchPrediction</code> operation is asynchronous. You\
        \ can poll for status updates by using the <code>&gt;GetBatchPrediction</code>\
        \ operation and checking the <code>Status</code> parameter of the result.\
        \ </p>"
      example:
        BatchPredictionId: ""
      properties:
        BatchPredictionId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: A user-supplied ID that uniquely identifies the <code>BatchPrediction</code>.
              This value is identical to the value of the <code>BatchPredictionId</code>
              in the request.
          title: BatchPredictionId
      title: CreateBatchPredictionOutput
      type: object
    CreateBatchPredictionInput:
      example:
        BatchPredictionName: ""
        BatchPredictionId: ""
        OutputUri: ""
        MLModelId: ""
        BatchPredictionDataSourceId: ""
      properties:
        BatchPredictionId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: A user-supplied ID that uniquely identifies the <code>BatchPrediction</code>.
          title: BatchPredictionId
        BatchPredictionName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: A user-supplied name or description of the <code>BatchPrediction</code>.
              <code>BatchPredictionName</code> can only use the UTF-8 character set.
          title: BatchPredictionName
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: 'The ID of the <code>MLModel</code> that will generate predictions
              for the group of observations. '
          title: MLModelId
        BatchPredictionDataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the <code>DataSource</code> that points to the
              group of observations to predict.
          title: BatchPredictionDataSourceId
        OutputUri:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: "<p>The location of an Amazon Simple Storage Service (Amazon\
              \ S3) bucket or directory to store the batch prediction results. The\
              \ following substrings are not allowed in the <code>s3 key</code> portion\
              \ of the <code>outputURI</code> field: ':', '//', '/./', '/../'.</p>\
              \ <p>Amazon ML needs permissions to store and retrieve the logs on your\
              \ behalf. For information about how to set permissions, see the <a href=\"\
              https://docs.aws.amazon.com/machine-learning/latest/dg\">Amazon Machine\
              \ Learning Developer Guide</a>.</p>"
          title: OutputUri
      required:
      - BatchPredictionDataSourceId
      - BatchPredictionId
      - MLModelId
      - OutputUri
      title: CreateBatchPredictionInput
      type: object
    IdempotentParameterMismatchException: {}
    CreateDataSourceFromRDSOutput:
      description: "<p> Represents the output of a <code>CreateDataSourceFromRDS</code>\
        \ operation, and is an acknowledgement that Amazon ML received the request.</p>\
        \ <p>The <code>CreateDataSourceFromRDS</code>&gt; operation is asynchronous.\
        \ You can poll for updates by using the <code>GetBatchPrediction</code> operation\
        \ and checking the <code>Status</code> parameter. You can inspect the <code>Message</code>\
        \ when <code>Status</code> shows up as <code>FAILED</code>. You can also check\
        \ the progress of the copy operation by going to the <code>DataPipeline</code>\
        \ console and looking up the pipeline using the <code>pipelineId </code> from\
        \ the describe call.</p>"
      example:
        DataSourceId: ""
      properties:
        DataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: 'A user-supplied ID that uniquely identifies the datasource.
              This value should be identical to the value of the <code>DataSourceID</code>
              in the request. '
          title: DataSourceId
      title: CreateDataSourceFromRDSOutput
      type: object
    CreateDataSourceFromRDSInput:
      example:
        RDSData:
          DataSchema: ""
          DatabaseInformation:
            DatabaseName: DatabaseName
            InstanceIdentifier: ""
          DatabaseCredentials:
            Username: Username
            Password: Password
          S3StagingLocation: ""
          ServiceRole: ""
          DataSchemaUri: ""
          ResourceRole: ""
          SubnetId: ""
          SecurityGroupIds: ""
          SelectSqlQuery: ""
          DataRearrangement: ""
        DataSourceName: ""
        ComputeStatistics: ""
        DataSourceId: ""
        RoleARN: ""
      properties:
        DataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: "A user-supplied ID that uniquely identifies the <code>DataSource</code>.\
              \ Typically, an Amazon Resource Number (ARN) becomes the ID for a <code>DataSource</code>."
          title: DataSourceId
        DataSourceName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: A user-supplied name or description of the <code>DataSource</code>.
          title: DataSourceName
        RDSData:
          $ref: '#/components/schemas/CreateDataSourceFromRDSInput_RDSData'
        RoleARN:
          allOf:
          - $ref: '#/components/schemas/RoleARN'
          - description: <p>The role that Amazon ML assumes on behalf of the user
              to create and activate a data pipeline in the user's account and copy
              data using the <code>SelectSqlQuery</code> query from Amazon RDS to
              Amazon S3.</p> <p/>
          title: RoleARN
        ComputeStatistics:
          allOf:
          - $ref: '#/components/schemas/ComputeStatistics'
          - description: 'The compute statistics for a <code>DataSource</code>. The
              statistics are generated from the observation data referenced by a <code>DataSource</code>.
              Amazon ML uses the statistics internally during <code>MLModel</code>
              training. This parameter must be set to <code>true</code> if the <code/>DataSource<code/>
              needs to be used for <code>MLModel</code> training. '
          title: ComputeStatistics
      required:
      - DataSourceId
      - RDSData
      - RoleARN
      title: CreateDataSourceFromRDSInput
      type: object
    CreateDataSourceFromRedshiftOutput:
      description: "<p> Represents the output of a <code>CreateDataSourceFromRedshift</code>\
        \ operation, and is an acknowledgement that Amazon ML received the request.</p>\
        \ <p>The <code>CreateDataSourceFromRedshift</code> operation is asynchronous.\
        \ You can poll for updates by using the <code>GetBatchPrediction</code> operation\
        \ and checking the <code>Status</code> parameter. </p>"
      example:
        DataSourceId: ""
      properties:
        DataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: 'A user-supplied ID that uniquely identifies the datasource.
              This value should be identical to the value of the <code>DataSourceID</code>
              in the request. '
          title: DataSourceId
      title: CreateDataSourceFromRedshiftOutput
      type: object
    CreateDataSourceFromRedshiftInput:
      example:
        DataSourceName: ""
        ComputeStatistics: ""
        DataSpec:
          DataSchema: ""
          DatabaseInformation:
            DatabaseName: DatabaseName
            ClusterIdentifier: ClusterIdentifier
          DatabaseCredentials:
            Username: Username
            Password: Password
          S3StagingLocation: ""
          DataSchemaUri: ""
          SelectSqlQuery: ""
          DataRearrangement: ""
        DataSourceId: ""
        RoleARN: ""
      properties:
        DataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: A user-supplied ID that uniquely identifies the <code>DataSource</code>.
          title: DataSourceId
        DataSourceName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: 'A user-supplied name or description of the <code>DataSource</code>. '
          title: DataSourceName
        DataSpec:
          $ref: '#/components/schemas/CreateDataSourceFromRedshiftInput_DataSpec'
        RoleARN:
          allOf:
          - $ref: '#/components/schemas/RoleARN'
          - description: <p>A fully specified role Amazon Resource Name (ARN). Amazon
              ML assumes the role on behalf of the user to create the following:</p>
              <ul> <li> <p>A security group to allow Amazon ML to execute the <code>SelectSqlQuery</code>
              query on an Amazon Redshift cluster</p> </li> <li> <p>An Amazon S3 bucket
              policy to grant Amazon ML read/write permissions on the <code>S3StagingLocation</code>
              </p> </li> </ul>
          title: RoleARN
        ComputeStatistics:
          allOf:
          - $ref: '#/components/schemas/ComputeStatistics'
          - description: The compute statistics for a <code>DataSource</code>. The
              statistics are generated from the observation data referenced by a <code>DataSource</code>.
              Amazon ML uses the statistics internally during <code>MLModel</code>
              training. This parameter must be set to <code>true</code> if the <code>DataSource</code>
              needs to be used for <code>MLModel</code> training.
          title: ComputeStatistics
      required:
      - DataSourceId
      - DataSpec
      - RoleARN
      title: CreateDataSourceFromRedshiftInput
      type: object
    CreateDataSourceFromS3Output:
      description: "<p> Represents the output of a <code>CreateDataSourceFromS3</code>\
        \ operation, and is an acknowledgement that Amazon ML received the request.</p>\
        \ <p>The <code>CreateDataSourceFromS3</code> operation is asynchronous. You\
        \ can poll for updates by using the <code>GetBatchPrediction</code> operation\
        \ and checking the <code>Status</code> parameter. </p>"
      example:
        DataSourceId: ""
      properties:
        DataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: 'A user-supplied ID that uniquely identifies the <code>DataSource</code>.
              This value should be identical to the value of the <code>DataSourceID</code>
              in the request. '
          title: DataSourceId
      title: CreateDataSourceFromS3Output
      type: object
    CreateDataSourceFromS3Input:
      example:
        DataSourceName: ""
        ComputeStatistics: ""
        DataSpec:
          DataSchema: ""
          DataLocationS3: ""
          DataSchemaLocationS3: ""
          DataRearrangement: ""
        DataSourceId: ""
      properties:
        DataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: 'A user-supplied identifier that uniquely identifies the
              <code>DataSource</code>. '
          title: DataSourceId
        DataSourceName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: 'A user-supplied name or description of the <code>DataSource</code>. '
          title: DataSourceName
        DataSpec:
          $ref: '#/components/schemas/CreateDataSourceFromS3Input_DataSpec'
        ComputeStatistics:
          allOf:
          - $ref: '#/components/schemas/ComputeStatistics'
          - description: The compute statistics for a <code>DataSource</code>. The
              statistics are generated from the observation data referenced by a <code>DataSource</code>.
              Amazon ML uses the statistics internally during <code>MLModel</code>
              training. This parameter must be set to <code>true</code> if the <code/>DataSource<code/>
              needs to be used for <code>MLModel</code> training.
          title: ComputeStatistics
      required:
      - DataSourceId
      - DataSpec
      title: CreateDataSourceFromS3Input
      type: object
    CreateEvaluationOutput:
      description: "<p> Represents the output of a <code>CreateEvaluation</code> operation,\
        \ and is an acknowledgement that Amazon ML received the request.</p> <p> <code>CreateEvaluation</code>\
        \ operation is asynchronous. You can poll for status updates by using the\
        \ <code>GetEvcaluation</code> operation and checking the <code>Status</code>\
        \ parameter. </p>"
      example:
        EvaluationId: ""
      properties:
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The user-supplied ID that uniquely identifies the <code>Evaluation</code>.
              This value should be identical to the value of the <code>EvaluationId</code>
              in the request.
          title: EvaluationId
      title: CreateEvaluationOutput
      type: object
    CreateEvaluationInput:
      example:
        EvaluationId: ""
        EvaluationDataSourceId: ""
        MLModelId: ""
        EvaluationName: ""
      properties:
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: A user-supplied ID that uniquely identifies the <code>Evaluation</code>.
          title: EvaluationId
        EvaluationName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: A user-supplied name or description of the <code>Evaluation</code>.
          title: EvaluationName
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: <p>The ID of the <code>MLModel</code> to evaluate.</p> <p>The
              schema used in creating the <code>MLModel</code> must match the schema
              of the <code>DataSource</code> used in the <code>Evaluation</code>.</p>
          title: MLModelId
        EvaluationDataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the <code>DataSource</code> for the evaluation.
              The schema of the <code>DataSource</code> must match the schema used
              to create the <code>MLModel</code>.
          title: EvaluationDataSourceId
      required:
      - EvaluationDataSourceId
      - EvaluationId
      - MLModelId
      title: CreateEvaluationInput
      type: object
    CreateMLModelOutput:
      description: "<p> Represents the output of a <code>CreateMLModel</code> operation,\
        \ and is an acknowledgement that Amazon ML received the request.</p> <p>The\
        \ <code>CreateMLModel</code> operation is asynchronous. You can poll for status\
        \ updates by using the <code>GetMLModel</code> operation and checking the\
        \ <code>Status</code> parameter. </p>"
      example:
        MLModelId: ""
      properties:
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: 'A user-supplied ID that uniquely identifies the <code>MLModel</code>.
              This value should be identical to the value of the <code>MLModelId</code>
              in the request. '
          title: MLModelId
      title: CreateMLModelOutput
      type: object
    CreateMLModelInput:
      example:
        TrainingDataSourceId: ""
        Parameters: ""
        MLModelType: ""
        Recipe: ""
        MLModelName: ""
        MLModelId: ""
        RecipeUri: ""
      properties:
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: A user-supplied ID that uniquely identifies the <code>MLModel</code>.
          title: MLModelId
        MLModelName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: A user-supplied name or description of the <code>MLModel</code>.
          title: MLModelName
        MLModelType:
          allOf:
          - $ref: '#/components/schemas/MLModelType'
          - description: "<p>The category of supervised learning that this <code>MLModel</code>\
              \ will address. Choose from the following types:</p> <ul> <li> <p>Choose\
              \ <code>REGRESSION</code> if the <code>MLModel</code> will be used to\
              \ predict a numeric value.</p> </li> <li> <p>Choose <code>BINARY</code>\
              \ if the <code>MLModel</code> result has two possible values.</p> </li>\
              \ <li> <p>Choose <code>MULTICLASS</code> if the <code>MLModel</code>\
              \ result has a limited number of values.</p> </li> </ul> <p> For more\
              \ information, see the <a href=\"https://docs.aws.amazon.com/machine-learning/latest/dg\"\
              >Amazon Machine Learning Developer Guide</a>.</p>"
          title: MLModelType
        Parameters:
          allOf:
          - $ref: '#/components/schemas/TrainingParameters'
          - description: "<p>A list of the training parameters in the <code>MLModel</code>.\
              \ The list is implemented as a map of key-value pairs.</p> <p>The following\
              \ is the current set of training parameters:</p> <ul> <li> <p> <code>sgd.maxMLModelSizeInBytes</code>\
              \ - The maximum allowed size of the model. Depending on the input data,\
              \ the size of the model might affect its performance.</p> <p> The value\
              \ is an integer that ranges from <code>100000</code> to <code>2147483648</code>.\
              \ The default value is <code>33554432</code>.</p> </li> <li> <p> <code>sgd.maxPasses</code>\
              \ - The number of times that the training process traverses the observations\
              \ to build the <code>MLModel</code>. The value is an integer that ranges\
              \ from <code>1</code> to <code>10000</code>. The default value is <code>10</code>.</p>\
              \ </li> <li> <p> <code>sgd.shuffleType</code> - Whether Amazon ML shuffles\
              \ the training data. Shuffling the data improves a model's ability to\
              \ find the optimal solution for a variety of data types. The valid values\
              \ are <code>auto</code> and <code>none</code>. The default value is\
              \ <code>none</code>. We strongly recommend that you shuffle your data.</p>\
              \ </li> <li> <p> <code>sgd.l1RegularizationAmount</code> - The coefficient\
              \ regularization L1 norm. It controls overfitting the data by penalizing\
              \ large coefficients. This tends to drive coefficients to zero, resulting\
              \ in a sparse feature set. If you use this parameter, start by specifying\
              \ a small value, such as <code>1.0E-08</code>.</p> <p>The value is a\
              \ double that ranges from <code>0</code> to <code>MAX_DOUBLE</code>.\
              \ The default is to not use L1 normalization. This parameter can't be\
              \ used when <code>L2</code> is specified. Use this parameter sparingly.</p>\
              \ </li> <li> <p> <code>sgd.l2RegularizationAmount</code> - The coefficient\
              \ regularization L2 norm. It controls overfitting the data by penalizing\
              \ large coefficients. This tends to drive coefficients to small, nonzero\
              \ values. If you use this parameter, start by specifying a small value,\
              \ such as <code>1.0E-08</code>.</p> <p>The value is a double that ranges\
              \ from <code>0</code> to <code>MAX_DOUBLE</code>. The default is to\
              \ not use L2 normalization. This parameter can't be used when <code>L1</code>\
              \ is specified. Use this parameter sparingly.</p> </li> </ul>"
          title: Parameters
        TrainingDataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The <code>DataSource</code> that points to the training data.
          title: TrainingDataSourceId
        Recipe:
          allOf:
          - $ref: '#/components/schemas/Recipe'
          - description: "The data recipe for creating the <code>MLModel</code>. You\
              \ must specify either the recipe or its URI. If you don't specify a\
              \ recipe or its URI, Amazon ML creates a default."
          title: Recipe
        RecipeUri:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: "The Amazon Simple Storage Service (Amazon S3) location and\
              \ file name that contains the <code>MLModel</code> recipe. You must\
              \ specify either the recipe or its URI. If you don't specify a recipe\
              \ or its URI, Amazon ML creates a default."
          title: RecipeUri
      required:
      - MLModelId
      - MLModelType
      - TrainingDataSourceId
      title: CreateMLModelInput
      type: object
    CreateRealtimeEndpointOutput:
      description: "<p>Represents the output of an <code>CreateRealtimeEndpoint</code>\
        \ operation.</p> <p>The result contains the <code>MLModelId</code> and the\
        \ endpoint information for the <code>MLModel</code>.</p> <p> <b>Note:</b>\
        \ The endpoint information includes the URI of the <code>MLModel</code>; that\
        \ is, the location to send online prediction requests for the specified <code>MLModel</code>.</p>"
      example:
        RealtimeEndpointInfo:
          EndpointStatus: ""
          PeakRequestsPerSecond: ""
          CreatedAt: ""
          EndpointUrl: ""
        MLModelId: ""
      properties:
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: A user-supplied ID that uniquely identifies the <code>MLModel</code>.
              This value should be identical to the value of the <code>MLModelId</code>
              in the request.
          title: MLModelId
        RealtimeEndpointInfo:
          $ref: '#/components/schemas/CreateRealtimeEndpointOutput_RealtimeEndpointInfo'
      title: CreateRealtimeEndpointOutput
      type: object
    CreateRealtimeEndpointInput:
      example:
        MLModelId: ""
      properties:
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID assigned to the <code>MLModel</code> during creation.
          title: MLModelId
      required:
      - MLModelId
      title: CreateRealtimeEndpointInput
      type: object
    DeleteBatchPredictionOutput:
      description: <p> Represents the output of a <code>DeleteBatchPrediction</code>
        operation.</p> <p>You can use the <code>GetBatchPrediction</code> operation
        and check the value of the <code>Status</code> parameter to see whether a
        <code>BatchPrediction</code> is marked as <code>DELETED</code>.</p>
      example:
        BatchPredictionId: ""
      properties:
        BatchPredictionId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: A user-supplied ID that uniquely identifies the <code>BatchPrediction</code>.
              This value should be identical to the value of the <code>BatchPredictionID</code>
              in the request.
          title: BatchPredictionId
      title: DeleteBatchPredictionOutput
      type: object
    DeleteBatchPredictionInput:
      example:
        BatchPredictionId: ""
      properties:
        BatchPredictionId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: A user-supplied ID that uniquely identifies the <code>BatchPrediction</code>.
          title: BatchPredictionId
      required:
      - BatchPredictionId
      title: DeleteBatchPredictionInput
      type: object
    DeleteDataSourceOutput:
      description: ' Represents the output of a <code>DeleteDataSource</code> operation.'
      example:
        DataSourceId: ""
      properties:
        DataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: A user-supplied ID that uniquely identifies the <code>DataSource</code>.
              This value should be identical to the value of the <code>DataSourceID</code>
              in the request.
          title: DataSourceId
      title: DeleteDataSourceOutput
      type: object
    DeleteDataSourceInput:
      example:
        DataSourceId: ""
      properties:
        DataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: A user-supplied ID that uniquely identifies the <code>DataSource</code>.
          title: DataSourceId
      required:
      - DataSourceId
      title: DeleteDataSourceInput
      type: object
    DeleteEvaluationOutput:
      description: <p> Represents the output of a <code>DeleteEvaluation</code> operation.
        The output indicates that Amazon Machine Learning (Amazon ML) received the
        request.</p> <p>You can use the <code>GetEvaluation</code> operation and check
        the value of the <code>Status</code> parameter to see whether an <code>Evaluation</code>
        is marked as <code>DELETED</code>.</p>
      example:
        EvaluationId: ""
      properties:
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: A user-supplied ID that uniquely identifies the <code>Evaluation</code>.
              This value should be identical to the value of the <code>EvaluationId</code>
              in the request.
          title: EvaluationId
      title: DeleteEvaluationOutput
      type: object
    DeleteEvaluationInput:
      example:
        EvaluationId: ""
      properties:
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: A user-supplied ID that uniquely identifies the <code>Evaluation</code>
              to delete.
          title: EvaluationId
      required:
      - EvaluationId
      title: DeleteEvaluationInput
      type: object
    DeleteMLModelOutput:
      description: <p>Represents the output of a <code>DeleteMLModel</code> operation.</p>
        <p>You can use the <code>GetMLModel</code> operation and check the value of
        the <code>Status</code> parameter to see whether an <code>MLModel</code> is
        marked as <code>DELETED</code>.</p>
      example:
        MLModelId: ""
      properties:
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: A user-supplied ID that uniquely identifies the <code>MLModel</code>.
              This value should be identical to the value of the <code>MLModelID</code>
              in the request.
          title: MLModelId
      title: DeleteMLModelOutput
      type: object
    DeleteMLModelInput:
      example:
        MLModelId: ""
      properties:
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: A user-supplied ID that uniquely identifies the <code>MLModel</code>.
          title: MLModelId
      required:
      - MLModelId
      title: DeleteMLModelInput
      type: object
    DeleteRealtimeEndpointOutput:
      description: <p>Represents the output of an <code>DeleteRealtimeEndpoint</code>
        operation.</p> <p>The result contains the <code>MLModelId</code> and the endpoint
        information for the <code>MLModel</code>. </p>
      example:
        RealtimeEndpointInfo:
          EndpointStatus: ""
          PeakRequestsPerSecond: ""
          CreatedAt: ""
          EndpointUrl: ""
        MLModelId: ""
      properties:
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: A user-supplied ID that uniquely identifies the <code>MLModel</code>.
              This value should be identical to the value of the <code>MLModelId</code>
              in the request.
          title: MLModelId
        RealtimeEndpointInfo:
          $ref: '#/components/schemas/CreateRealtimeEndpointOutput_RealtimeEndpointInfo'
      title: DeleteRealtimeEndpointOutput
      type: object
    DeleteRealtimeEndpointInput:
      example:
        MLModelId: ""
      properties:
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID assigned to the <code>MLModel</code> during creation.
          title: MLModelId
      required:
      - MLModelId
      title: DeleteRealtimeEndpointInput
      type: object
    DeleteTagsOutput:
      description: Amazon ML returns the following elements.
      example:
        ResourceId: ""
        ResourceType: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the ML object from which tags were deleted.
          title: ResourceId
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/TaggableResourceType'
          - description: The type of the ML object from which tags were deleted.
          title: ResourceType
      title: DeleteTagsOutput
      type: object
    DeleteTagsInput:
      example:
        ResourceId: ""
        ResourceType: ""
        TagKeys: ""
      properties:
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: One or more tags to delete.
          title: TagKeys
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: "The ID of the tagged ML object. For example, <code>exampleModelId</code>."
          title: ResourceId
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/TaggableResourceType'
          - description: The type of the tagged ML object.
          title: ResourceType
      required:
      - ResourceId
      - ResourceType
      - TagKeys
      title: DeleteTagsInput
      type: object
    DescribeBatchPredictionsOutput:
      description: Represents the output of a <code>DescribeBatchPredictions</code>
        operation. The content is essentially a list of <code>BatchPrediction</code>s.
      example:
        NextToken: ""
        Results: ""
      properties:
        Results:
          allOf:
          - $ref: '#/components/schemas/BatchPredictions'
          - description: 'A list of <code>BatchPrediction</code> objects that meet
              the search criteria. '
          title: Results
        NextToken:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The ID of the next page in the paginated results that indicates
              at least one more page follows.
          title: NextToken
      title: DescribeBatchPredictionsOutput
      type: object
    DescribeBatchPredictionsInput:
      example:
        FilterVariable: ""
        NextToken: ""
        NE: ""
        LT: ""
        LE: ""
        SortOrder: ""
        Prefix: ""
        Limit: ""
        EQ: ""
        GT: ""
        GE: ""
      properties:
        FilterVariable:
          allOf:
          - $ref: '#/components/schemas/BatchPredictionFilterVariable'
          - description: <p>Use one of the following variables to filter a list of
              <code>BatchPrediction</code>:</p> <ul> <li> <p> <code>CreatedAt</code>
              - Sets the search criteria to the <code>BatchPrediction</code> creation
              date.</p> </li> <li> <p> <code>Status</code> - Sets the search criteria
              to the <code>BatchPrediction</code> status.</p> </li> <li> <p> <code>Name</code>
              - Sets the search criteria to the contents of the <code>BatchPrediction</code>
              <b> </b> <code>Name</code>.</p> </li> <li> <p> <code>IAMUser</code>
              - Sets the search criteria to the user account that invoked the <code>BatchPrediction</code>
              creation.</p> </li> <li> <p> <code>MLModelId</code> - Sets the search
              criteria to the <code>MLModel</code> used in the <code>BatchPrediction</code>.</p>
              </li> <li> <p> <code>DataSourceId</code> - Sets the search criteria
              to the <code>DataSource</code> used in the <code>BatchPrediction</code>.</p>
              </li> <li> <p> <code>DataURI</code> - Sets the search criteria to the
              data file(s) used in the <code>BatchPrediction</code>. The URL can identify
              either a file or an Amazon Simple Storage Solution (Amazon S3) bucket
              or directory.</p> </li> </ul>
          title: FilterVariable
        EQ:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The equal to operator. The <code>BatchPrediction</code> results
              will have <code>FilterVariable</code> values that exactly match the
              value specified with <code>EQ</code>.
          title: EQ
        GT:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The greater than operator. The <code>BatchPrediction</code>
              results will have <code>FilterVariable</code> values that are greater
              than the value specified with <code>GT</code>.
          title: GT
        LT:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The less than operator. The <code>BatchPrediction</code>
              results will have <code>FilterVariable</code> values that are less than
              the value specified with <code>LT</code>.
          title: LT
        GE:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: 'The greater than or equal to operator. The <code>BatchPrediction</code>
              results will have <code>FilterVariable</code> values that are greater
              than or equal to the value specified with <code>GE</code>. '
          title: GE
        LE:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The less than or equal to operator. The <code>BatchPrediction</code>
              results will have <code>FilterVariable</code> values that are less than
              or equal to the value specified with <code>LE</code>.
          title: LE
        NE:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The not equal to operator. The <code>BatchPrediction</code>
              results will have <code>FilterVariable</code> values not equal to the
              value specified with <code>NE</code>.
          title: NE
        Prefix:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: "<p>A string that is found at the beginning of a variable,\
              \ such as <code>Name</code> or <code>Id</code>.</p> <p>For example,\
              \ a <code>Batch Prediction</code> operation could have the <code>Name</code>\
              \ <code>2014-09-09-HolidayGiftMailer</code>. To search for this <code>BatchPrediction</code>,\
              \ select <code>Name</code> for the <code>FilterVariable</code> and any\
              \ of the following strings for the <code>Prefix</code>: </p> <ul> <li>\
              \ <p>2014-09</p> </li> <li> <p>2014-09-09</p> </li> <li> <p>2014-09-09-Holiday</p>\
              \ </li> </ul>"
          title: Prefix
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: "<p>A two-value parameter that determines the sequence of\
              \ the resulting list of <code>MLModel</code>s.</p> <ul> <li> <p> <code>asc</code>\
              \ - Arranges the list in ascending order (A-Z, 0-9).</p> </li> <li>\
              \ <p> <code>dsc</code> - Arranges the list in descending order (Z-A,\
              \ 9-0).</p> </li> </ul> <p>Results are sorted by <code>FilterVariable</code>.</p>"
          title: SortOrder
        NextToken:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: An ID of the page in the paginated results.
          title: NextToken
        Limit:
          allOf:
          - $ref: '#/components/schemas/PageLimit'
          - description: The number of pages of information to include in the result.
              The range of acceptable values is <code>1</code> through <code>100</code>.
              The default value is <code>100</code>.
          title: Limit
      title: DescribeBatchPredictionsInput
      type: object
    DescribeDataSourcesOutput:
      description: Represents the query results from a <a>DescribeDataSources</a>
        operation. The content is essentially a list of <code>DataSource</code>.
      example:
        NextToken: ""
        Results: ""
      properties:
        Results:
          allOf:
          - $ref: '#/components/schemas/DataSources'
          - description: 'A list of <code>DataSource</code> that meet the search criteria. '
          title: Results
        NextToken:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: An ID of the next page in the paginated results that indicates
              at least one more page follows.
          title: NextToken
      title: DescribeDataSourcesOutput
      type: object
    DescribeDataSourcesInput:
      example:
        FilterVariable: ""
        NextToken: ""
        NE: ""
        LT: ""
        LE: ""
        SortOrder: ""
        Prefix: ""
        Limit: ""
        EQ: ""
        GT: ""
        GE: ""
      properties:
        FilterVariable:
          allOf:
          - $ref: '#/components/schemas/DataSourceFilterVariable'
          - description: <p>Use one of the following variables to filter a list of
              <code>DataSource</code>:</p> <ul> <li> <p> <code>CreatedAt</code> -
              Sets the search criteria to <code>DataSource</code> creation dates.</p>
              </li> <li> <p> <code>Status</code> - Sets the search criteria to <code>DataSource</code>
              statuses.</p> </li> <li> <p> <code>Name</code> - Sets the search criteria
              to the contents of <code>DataSource</code> <code>Name</code>.</p> </li>
              <li> <p> <code>DataUri</code> - Sets the search criteria to the URI
              of data files used to create the <code>DataSource</code>. The URI can
              identify either a file or an Amazon Simple Storage Service (Amazon S3)
              bucket or directory.</p> </li> <li> <p> <code>IAMUser</code> - Sets
              the search criteria to the user account that invoked the <code>DataSource</code>
              creation.</p> </li> </ul>
          title: FilterVariable
        EQ:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The equal to operator. The <code>DataSource</code> results
              will have <code>FilterVariable</code> values that exactly match the
              value specified with <code>EQ</code>.
          title: EQ
        GT:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The greater than operator. The <code>DataSource</code> results
              will have <code>FilterVariable</code> values that are greater than the
              value specified with <code>GT</code>.
          title: GT
        LT:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The less than operator. The <code>DataSource</code> results
              will have <code>FilterVariable</code> values that are less than the
              value specified with <code>LT</code>.
          title: LT
        GE:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: 'The greater than or equal to operator. The <code>DataSource</code>
              results will have <code>FilterVariable</code> values that are greater
              than or equal to the value specified with <code>GE</code>. '
          title: GE
        LE:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The less than or equal to operator. The <code>DataSource</code>
              results will have <code>FilterVariable</code> values that are less than
              or equal to the value specified with <code>LE</code>.
          title: LE
        NE:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The not equal to operator. The <code>DataSource</code> results
              will have <code>FilterVariable</code> values not equal to the value
              specified with <code>NE</code>.
          title: NE
        Prefix:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: "<p>A string that is found at the beginning of a variable,\
              \ such as <code>Name</code> or <code>Id</code>.</p> <p>For example,\
              \ a <code>DataSource</code> could have the <code>Name</code> <code>2014-09-09-HolidayGiftMailer</code>.\
              \ To search for this <code>DataSource</code>, select <code>Name</code>\
              \ for the <code>FilterVariable</code> and any of the following strings\
              \ for the <code>Prefix</code>: </p> <ul> <li> <p>2014-09</p> </li> <li>\
              \ <p>2014-09-09</p> </li> <li> <p>2014-09-09-Holiday</p> </li> </ul>"
          title: Prefix
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: "<p>A two-value parameter that determines the sequence of\
              \ the resulting list of <code>DataSource</code>.</p> <ul> <li> <p> <code>asc</code>\
              \ - Arranges the list in ascending order (A-Z, 0-9).</p> </li> <li>\
              \ <p> <code>dsc</code> - Arranges the list in descending order (Z-A,\
              \ 9-0).</p> </li> </ul> <p>Results are sorted by <code>FilterVariable</code>.</p>"
          title: SortOrder
        NextToken:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The ID of the page in the paginated results.
          title: NextToken
        Limit:
          allOf:
          - $ref: '#/components/schemas/PageLimit'
          - description: ' The maximum number of <code>DataSource</code> to include
              in the result.'
          title: Limit
      title: DescribeDataSourcesInput
      type: object
    DescribeEvaluationsOutput:
      description: Represents the query results from a <code>DescribeEvaluations</code>
        operation. The content is essentially a list of <code>Evaluation</code>.
      example:
        NextToken: ""
        Results: ""
      properties:
        Results:
          allOf:
          - $ref: '#/components/schemas/Evaluations'
          - description: 'A list of <code>Evaluation</code> that meet the search criteria. '
          title: Results
        NextToken:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The ID of the next page in the paginated results that indicates
              at least one more page follows.
          title: NextToken
      title: DescribeEvaluationsOutput
      type: object
    DescribeEvaluationsInput:
      example:
        FilterVariable: ""
        NextToken: ""
        NE: ""
        LT: ""
        LE: ""
        SortOrder: ""
        Prefix: ""
        Limit: ""
        EQ: ""
        GT: ""
        GE: ""
      properties:
        FilterVariable:
          allOf:
          - $ref: '#/components/schemas/EvaluationFilterVariable'
          - description: <p>Use one of the following variable to filter a list of
              <code>Evaluation</code> objects:</p> <ul> <li> <p> <code>CreatedAt</code>
              - Sets the search criteria to the <code>Evaluation</code> creation date.</p>
              </li> <li> <p> <code>Status</code> - Sets the search criteria to the
              <code>Evaluation</code> status.</p> </li> <li> <p> <code>Name</code>
              - Sets the search criteria to the contents of <code>Evaluation</code>
              <b> </b> <code>Name</code>.</p> </li> <li> <p> <code>IAMUser</code>
              - Sets the search criteria to the user account that invoked an <code>Evaluation</code>.</p>
              </li> <li> <p> <code>MLModelId</code> - Sets the search criteria to
              the <code>MLModel</code> that was evaluated.</p> </li> <li> <p> <code>DataSourceId</code>
              - Sets the search criteria to the <code>DataSource</code> used in <code>Evaluation</code>.</p>
              </li> <li> <p> <code>DataUri</code> - Sets the search criteria to the
              data file(s) used in <code>Evaluation</code>. The URL can identify either
              a file or an Amazon Simple Storage Solution (Amazon S3) bucket or directory.</p>
              </li> </ul>
          title: FilterVariable
        EQ:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The equal to operator. The <code>Evaluation</code> results
              will have <code>FilterVariable</code> values that exactly match the
              value specified with <code>EQ</code>.
          title: EQ
        GT:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The greater than operator. The <code>Evaluation</code> results
              will have <code>FilterVariable</code> values that are greater than the
              value specified with <code>GT</code>.
          title: GT
        LT:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The less than operator. The <code>Evaluation</code> results
              will have <code>FilterVariable</code> values that are less than the
              value specified with <code>LT</code>.
          title: LT
        GE:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: 'The greater than or equal to operator. The <code>Evaluation</code>
              results will have <code>FilterVariable</code> values that are greater
              than or equal to the value specified with <code>GE</code>. '
          title: GE
        LE:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The less than or equal to operator. The <code>Evaluation</code>
              results will have <code>FilterVariable</code> values that are less than
              or equal to the value specified with <code>LE</code>.
          title: LE
        NE:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The not equal to operator. The <code>Evaluation</code> results
              will have <code>FilterVariable</code> values not equal to the value
              specified with <code>NE</code>.
          title: NE
        Prefix:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: "<p>A string that is found at the beginning of a variable,\
              \ such as <code>Name</code> or <code>Id</code>.</p> <p>For example,\
              \ an <code>Evaluation</code> could have the <code>Name</code> <code>2014-09-09-HolidayGiftMailer</code>.\
              \ To search for this <code>Evaluation</code>, select <code>Name</code>\
              \ for the <code>FilterVariable</code> and any of the following strings\
              \ for the <code>Prefix</code>: </p> <ul> <li> <p>2014-09</p> </li> <li>\
              \ <p>2014-09-09</p> </li> <li> <p>2014-09-09-Holiday</p> </li> </ul>"
          title: Prefix
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: "<p>A two-value parameter that determines the sequence of\
              \ the resulting list of <code>Evaluation</code>.</p> <ul> <li> <p> <code>asc</code>\
              \ - Arranges the list in ascending order (A-Z, 0-9).</p> </li> <li>\
              \ <p> <code>dsc</code> - Arranges the list in descending order (Z-A,\
              \ 9-0).</p> </li> </ul> <p>Results are sorted by <code>FilterVariable</code>.</p>"
          title: SortOrder
        NextToken:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The ID of the page in the paginated results.
          title: NextToken
        Limit:
          allOf:
          - $ref: '#/components/schemas/PageLimit'
          - description: ' The maximum number of <code>Evaluation</code> to include
              in the result.'
          title: Limit
      title: DescribeEvaluationsInput
      type: object
    DescribeMLModelsOutput:
      description: Represents the output of a <code>DescribeMLModels</code> operation.
        The content is essentially a list of <code>MLModel</code>.
      example:
        NextToken: ""
        Results: ""
      properties:
        Results:
          allOf:
          - $ref: '#/components/schemas/MLModels'
          - description: A list of <code>MLModel</code> that meet the search criteria.
          title: Results
        NextToken:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The ID of the next page in the paginated results that indicates
              at least one more page follows.
          title: NextToken
      title: DescribeMLModelsOutput
      type: object
    DescribeMLModelsInput:
      example:
        FilterVariable: ""
        NextToken: ""
        NE: ""
        LT: ""
        LE: ""
        SortOrder: ""
        Prefix: ""
        Limit: ""
        EQ: ""
        GT: ""
        GE: ""
      properties:
        FilterVariable:
          allOf:
          - $ref: '#/components/schemas/MLModelFilterVariable'
          - description: "<p>Use one of the following variables to filter a list of\
              \ <code>MLModel</code>:</p> <ul> <li> <p> <code>CreatedAt</code> - Sets\
              \ the search criteria to <code>MLModel</code> creation date.</p> </li>\
              \ <li> <p> <code>Status</code> - Sets the search criteria to <code>MLModel</code>\
              \ status.</p> </li> <li> <p> <code>Name</code> - Sets the search criteria\
              \ to the contents of <code>MLModel</code> <b> </b> <code>Name</code>.</p>\
              \ </li> <li> <p> <code>IAMUser</code> - Sets the search criteria to\
              \ the user account that invoked the <code>MLModel</code> creation.</p>\
              \ </li> <li> <p> <code>TrainingDataSourceId</code> - Sets the search\
              \ criteria to the <code>DataSource</code> used to train one or more\
              \ <code>MLModel</code>.</p> </li> <li> <p> <code>RealtimeEndpointStatus</code>\
              \ - Sets the search criteria to the <code>MLModel</code> real-time endpoint\
              \ status.</p> </li> <li> <p> <code>MLModelType</code> - Sets the search\
              \ criteria to <code>MLModel</code> type: binary, regression, or multi-class.</p>\
              \ </li> <li> <p> <code>Algorithm</code> - Sets the search criteria to\
              \ the algorithm that the <code>MLModel</code> uses.</p> </li> <li> <p>\
              \ <code>TrainingDataURI</code> - Sets the search criteria to the data\
              \ file(s) used in training a <code>MLModel</code>. The URL can identify\
              \ either a file or an Amazon Simple Storage Service (Amazon S3) bucket\
              \ or directory.</p> </li> </ul>"
          title: FilterVariable
        EQ:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The equal to operator. The <code>MLModel</code> results will
              have <code>FilterVariable</code> values that exactly match the value
              specified with <code>EQ</code>.
          title: EQ
        GT:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The greater than operator. The <code>MLModel</code> results
              will have <code>FilterVariable</code> values that are greater than the
              value specified with <code>GT</code>.
          title: GT
        LT:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The less than operator. The <code>MLModel</code> results
              will have <code>FilterVariable</code> values that are less than the
              value specified with <code>LT</code>.
          title: LT
        GE:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: 'The greater than or equal to operator. The <code>MLModel</code>
              results will have <code>FilterVariable</code> values that are greater
              than or equal to the value specified with <code>GE</code>. '
          title: GE
        LE:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The less than or equal to operator. The <code>MLModel</code>
              results will have <code>FilterVariable</code> values that are less than
              or equal to the value specified with <code>LE</code>.
          title: LE
        NE:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: The not equal to operator. The <code>MLModel</code> results
              will have <code>FilterVariable</code> values not equal to the value
              specified with <code>NE</code>.
          title: NE
        Prefix:
          allOf:
          - $ref: '#/components/schemas/ComparatorValue'
          - description: "<p>A string that is found at the beginning of a variable,\
              \ such as <code>Name</code> or <code>Id</code>.</p> <p>For example,\
              \ an <code>MLModel</code> could have the <code>Name</code> <code>2014-09-09-HolidayGiftMailer</code>.\
              \ To search for this <code>MLModel</code>, select <code>Name</code>\
              \ for the <code>FilterVariable</code> and any of the following strings\
              \ for the <code>Prefix</code>: </p> <ul> <li> <p>2014-09</p> </li> <li>\
              \ <p>2014-09-09</p> </li> <li> <p>2014-09-09-Holiday</p> </li> </ul>"
          title: Prefix
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: "<p>A two-value parameter that determines the sequence of\
              \ the resulting list of <code>MLModel</code>.</p> <ul> <li> <p> <code>asc</code>\
              \ - Arranges the list in ascending order (A-Z, 0-9).</p> </li> <li>\
              \ <p> <code>dsc</code> - Arranges the list in descending order (Z-A,\
              \ 9-0).</p> </li> </ul> <p>Results are sorted by <code>FilterVariable</code>.</p>"
          title: SortOrder
        NextToken:
          allOf:
          - $ref: '#/components/schemas/StringType'
          - description: The ID of the page in the paginated results.
          title: NextToken
        Limit:
          allOf:
          - $ref: '#/components/schemas/PageLimit'
          - description: The number of pages of information to include in the result.
              The range of acceptable values is <code>1</code> through <code>100</code>.
              The default value is <code>100</code>.
          title: Limit
      title: DescribeMLModelsInput
      type: object
    DescribeTagsOutput:
      description: Amazon ML returns the following elements.
      example:
        ResourceId: ""
        ResourceType: ""
        Tags: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the tagged ML object.
          title: ResourceId
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/TaggableResourceType'
          - description: The type of the tagged ML object.
          title: ResourceType
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of tags associated with the ML object.
          title: Tags
      title: DescribeTagsOutput
      type: object
    DescribeTagsInput:
      example:
        ResourceId: ""
        ResourceType: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: "The ID of the ML object. For example, <code>exampleModelId</code>. "
          title: ResourceId
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/TaggableResourceType'
          - description: The type of the ML object.
          title: ResourceType
      required:
      - ResourceId
      - ResourceType
      title: DescribeTagsInput
      type: object
    GetBatchPredictionOutput:
      description: Represents the output of a <code>GetBatchPrediction</code> operation
        and describes a <code>BatchPrediction</code>.
      example:
        Status: ""
        TotalRecordCount: ""
        LastUpdatedAt: ""
        Message: ""
        CreatedAt: ""
        InvalidRecordCount: ""
        OutputUri: ""
        MLModelId: ""
        BatchPredictionDataSourceId: ""
        Name: ""
        InputDataLocationS3: ""
        LogUri: ""
        ComputeTime: ""
        FinishedAt: ""
        BatchPredictionId: ""
        CreatedByIamUser: ""
        StartedAt: ""
      properties:
        BatchPredictionId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: An ID assigned to the <code>BatchPrediction</code> at creation.
              This value should be identical to the value of the <code>BatchPredictionID</code>
              in the request.
          title: BatchPredictionId
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the <code>MLModel</code> that generated predictions
              for the <code>BatchPrediction</code> request.
          title: MLModelId
        BatchPredictionDataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: 'The ID of the <code>DataSource</code> that was used to create
              the <code>BatchPrediction</code>. '
          title: BatchPredictionDataSourceId
        InputDataLocationS3:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: The location of the data file or directory in Amazon Simple
              Storage Service (Amazon S3).
          title: InputDataLocationS3
        CreatedByIamUser:
          allOf:
          - $ref: '#/components/schemas/AwsUserArn'
          - description: The AWS user account that invoked the <code>BatchPrediction</code>.
              The account type can be either an AWS root account or an AWS Identity
              and Access Management (IAM) user account.
          title: CreatedByIamUser
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time when the <code>BatchPrediction</code> was created.
              The time is expressed in epoch time.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time of the most recent edit to <code>BatchPrediction</code>.
              The time is expressed in epoch time.
          title: LastUpdatedAt
        Name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: A user-supplied name or description of the <code>BatchPrediction</code>.
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          - description: "<p>The status of the <code>BatchPrediction</code>, which\
              \ can be one of the following values:</p> <ul> <li> <p> <code>PENDING</code>\
              \ - Amazon Machine Learning (Amazon ML) submitted a request to generate\
              \ batch predictions.</p> </li> <li> <p> <code>INPROGRESS</code> - The\
              \ batch predictions are in progress.</p> </li> <li> <p> <code>FAILED</code>\
              \ - The request to perform a batch prediction did not run to completion.\
              \ It is not usable.</p> </li> <li> <p> <code>COMPLETED</code> - The\
              \ batch prediction process completed successfully.</p> </li> <li> <p>\
              \ <code>DELETED</code> - The <code>BatchPrediction</code> is marked\
              \ as deleted. It is not usable.</p> </li> </ul>"
          title: Status
        OutputUri:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: The location of an Amazon S3 bucket or directory to receive
              the operation results.
          title: OutputUri
        LogUri:
          allOf:
          - $ref: '#/components/schemas/PresignedS3Url'
          - description: A link to the file that contains logs of the <code>CreateBatchPrediction</code>
              operation.
          title: LogUri
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A description of the most recent details about processing
              the batch prediction request.
          title: Message
        ComputeTime:
          allOf:
          - $ref: '#/components/schemas/LongType'
          - description: "The approximate CPU time in milliseconds that Amazon Machine\
              \ Learning spent processing the <code>BatchPrediction</code>, normalized\
              \ and scaled on computation resources. <code>ComputeTime</code> is only\
              \ available if the <code>BatchPrediction</code> is in the <code>COMPLETED</code>\
              \ state."
          title: ComputeTime
        FinishedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The epoch time when Amazon Machine Learning marked the <code>BatchPrediction</code>
              as <code>COMPLETED</code> or <code>FAILED</code>. <code>FinishedAt</code>
              is only available when the <code>BatchPrediction</code> is in the <code>COMPLETED</code>
              or <code>FAILED</code> state.
          title: FinishedAt
        StartedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The epoch time when Amazon Machine Learning marked the <code>BatchPrediction</code>
              as <code>INPROGRESS</code>. <code>StartedAt</code> isn't available if
              the <code>BatchPrediction</code> is in the <code>PENDING</code> state.
          title: StartedAt
        TotalRecordCount:
          allOf:
          - $ref: '#/components/schemas/LongType'
          - description: The number of total records that Amazon Machine Learning
              saw while processing the <code>BatchPrediction</code>.
          title: TotalRecordCount
        InvalidRecordCount:
          allOf:
          - $ref: '#/components/schemas/LongType'
          - description: The number of invalid records that Amazon Machine Learning
              saw while processing the <code>BatchPrediction</code>.
          title: InvalidRecordCount
      title: GetBatchPredictionOutput
      type: object
    GetBatchPredictionInput:
      example:
        BatchPredictionId: ""
      properties:
        BatchPredictionId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: An ID assigned to the <code>BatchPrediction</code> at creation.
          title: BatchPredictionId
      required:
      - BatchPredictionId
      title: GetBatchPredictionInput
      type: object
    GetDataSourceOutput:
      description: Represents the output of a <code>GetDataSource</code> operation
        and describes a <code>DataSource</code>.
      example:
        Status: ""
        LastUpdatedAt: ""
        Message: ""
        DataSourceSchema: ""
        CreatedAt: ""
        ComputeStatistics: ""
        RDSMetadata:
          DatabaseUserName: DatabaseUserName
          ServiceRole: ""
          ResourceRole: ""
          Database:
            DatabaseName: DatabaseName
            InstanceIdentifier: ""
          DataPipelineId: ""
          SelectSqlQuery: ""
        RedshiftMetadata:
          DatabaseUserName: DatabaseUserName
          RedshiftDatabase:
            DatabaseName: DatabaseName
            ClusterIdentifier: ClusterIdentifier
          SelectSqlQuery: ""
        RoleARN: RoleARN
        DataRearrangement: ""
        Name: ""
        DataLocationS3: ""
        NumberOfFiles: ""
        DataSizeInBytes: ""
        LogUri: ""
        ComputeTime: ""
        FinishedAt: ""
        CreatedByIamUser: ""
        StartedAt: ""
        DataSourceId: ""
      properties:
        DataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID assigned to the <code>DataSource</code> at creation.
              This value should be identical to the value of the <code>DataSourceId</code>
              in the request.
          title: DataSourceId
        DataLocationS3:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: The location of the data file or directory in Amazon Simple
              Storage Service (Amazon S3).
          title: DataLocationS3
        DataRearrangement:
          allOf:
          - $ref: '#/components/schemas/DataRearrangement'
          - description: A JSON string that represents the splitting and rearrangement
              requirement used when this <code>DataSource</code> was created.
          title: DataRearrangement
        CreatedByIamUser:
          allOf:
          - $ref: '#/components/schemas/AwsUserArn'
          - description: The AWS user account from which the <code>DataSource</code>
              was created. The account type can be either an AWS root account or an
              AWS Identity and Access Management (IAM) user account.
          title: CreatedByIamUser
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time that the <code>DataSource</code> was created. The
              time is expressed in epoch time.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time of the most recent edit to the <code>DataSource</code>.
              The time is expressed in epoch time.
          title: LastUpdatedAt
        DataSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/LongType'
          - description: The total size of observations in the data files.
          title: DataSizeInBytes
        NumberOfFiles:
          allOf:
          - $ref: '#/components/schemas/LongType'
          - description: The number of data files referenced by the <code>DataSource</code>.
          title: NumberOfFiles
        Name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: A user-supplied name or description of the <code>DataSource</code>.
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          - description: <p>The current status of the <code>DataSource</code>. This
              element can have one of the following values:</p> <ul> <li> <p> <code>PENDING</code>
              - Amazon ML submitted a request to create a <code>DataSource</code>.</p>
              </li> <li> <p> <code>INPROGRESS</code> - The creation process is underway.</p>
              </li> <li> <p> <code>FAILED</code> - The request to create a <code>DataSource</code>
              did not run to completion. It is not usable.</p> </li> <li> <p> <code>COMPLETED</code>
              - The creation process completed successfully.</p> </li> <li> <p> <code>DELETED</code>
              - The <code>DataSource</code> is marked as deleted. It is not usable.</p>
              </li> </ul>
          title: Status
        LogUri:
          allOf:
          - $ref: '#/components/schemas/PresignedS3Url'
          - description: A link to the file containing logs of <code>CreateDataSourceFrom*</code>
              operations.
          title: LogUri
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The user-supplied description of the most recent details
              about creating the <code>DataSource</code>.
          title: Message
        RedshiftMetadata:
          $ref: '#/components/schemas/RedshiftMetadata'
        RDSMetadata:
          $ref: '#/components/schemas/RDSMetadata'
        RoleARN:
          description: "The Amazon Resource Name (ARN) of an <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html#roles-about-termsandconcepts\"\
            >AWS IAM Role</a>, such as the following: arn:aws:iam::account:role/rolename. "
          maxLength: 110
          minLength: 1
          title: RoleARN
          type: string
        ComputeStatistics:
          allOf:
          - $ref: '#/components/schemas/ComputeStatistics'
          - description: ' The parameter is <code>true</code> if statistics need to
              be generated from the observation data. '
          title: ComputeStatistics
        ComputeTime:
          allOf:
          - $ref: '#/components/schemas/LongType'
          - description: "The approximate CPU time in milliseconds that Amazon Machine\
              \ Learning spent processing the <code>DataSource</code>, normalized\
              \ and scaled on computation resources. <code>ComputeTime</code> is only\
              \ available if the <code>DataSource</code> is in the <code>COMPLETED</code>\
              \ state and the <code>ComputeStatistics</code> is set to true."
          title: ComputeTime
        FinishedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The epoch time when Amazon Machine Learning marked the <code>DataSource</code>
              as <code>COMPLETED</code> or <code>FAILED</code>. <code>FinishedAt</code>
              is only available when the <code>DataSource</code> is in the <code>COMPLETED</code>
              or <code>FAILED</code> state.
          title: FinishedAt
        StartedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The epoch time when Amazon Machine Learning marked the <code>DataSource</code>
              as <code>INPROGRESS</code>. <code>StartedAt</code> isn't available if
              the <code>DataSource</code> is in the <code>PENDING</code> state.
          title: StartedAt
        DataSourceSchema:
          allOf:
          - $ref: '#/components/schemas/DataSchema'
          - description: <p>The schema used by all of the data files of this <code>DataSource</code>.</p>
              <p> <b>Note:</b> This parameter is provided as part of the verbose format.</p>
          title: DataSourceSchema
      title: GetDataSourceOutput
      type: object
    GetDataSourceInput:
      example:
        Verbose: ""
        DataSourceId: ""
      properties:
        DataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID assigned to the <code>DataSource</code> at creation.
          title: DataSourceId
        Verbose:
          allOf:
          - $ref: '#/components/schemas/Verbose'
          - description: "<p>Specifies whether the <code>GetDataSource</code> operation\
              \ should return <code>DataSourceSchema</code>.</p> <p>If true, <code>DataSourceSchema</code>\
              \ is returned.</p> <p>If false, <code>DataSourceSchema</code> is not\
              \ returned.</p>"
          title: Verbose
      required:
      - DataSourceId
      title: GetDataSourceInput
      type: object
    GetEvaluationOutput:
      description: Represents the output of a <code>GetEvaluation</code> operation
        and describes an <code>Evaluation</code>.
      example:
        Status: ""
        LastUpdatedAt: ""
        Message: ""
        EvaluationId: ""
        CreatedAt: ""
        EvaluationDataSourceId: ""
        PerformanceMetrics:
          Properties:
            key: null
        MLModelId: ""
        Name: ""
        InputDataLocationS3: ""
        LogUri: ""
        ComputeTime: ""
        FinishedAt: ""
        CreatedByIamUser: ""
        StartedAt: ""
      properties:
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The evaluation ID which is same as the <code>EvaluationId</code>
              in the request.
          title: EvaluationId
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the <code>MLModel</code> that was the focus of
              the evaluation.
          title: MLModelId
        EvaluationDataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The <code>DataSource</code> used for this evaluation.
          title: EvaluationDataSourceId
        InputDataLocationS3:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: The location of the data file or directory in Amazon Simple
              Storage Service (Amazon S3).
          title: InputDataLocationS3
        CreatedByIamUser:
          allOf:
          - $ref: '#/components/schemas/AwsUserArn'
          - description: The AWS user account that invoked the evaluation. The account
              type can be either an AWS root account or an AWS Identity and Access
              Management (IAM) user account.
          title: CreatedByIamUser
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time that the <code>Evaluation</code> was created. The
              time is expressed in epoch time.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time of the most recent edit to the <code>Evaluation</code>.
              The time is expressed in epoch time.
          title: LastUpdatedAt
        Name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: 'A user-supplied name or description of the <code>Evaluation</code>. '
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          - description: <p>The status of the evaluation. This element can have one
              of the following values:</p> <ul> <li> <p> <code>PENDING</code> - Amazon
              Machine Language (Amazon ML) submitted a request to evaluate an <code>MLModel</code>.</p>
              </li> <li> <p> <code>INPROGRESS</code> - The evaluation is underway.</p>
              </li> <li> <p> <code>FAILED</code> - The request to evaluate an <code>MLModel</code>
              did not run to completion. It is not usable.</p> </li> <li> <p> <code>COMPLETED</code>
              - The evaluation process completed successfully.</p> </li> <li> <p>
              <code>DELETED</code> - The <code>Evaluation</code> is marked as deleted.
              It is not usable.</p> </li> </ul>
          title: Status
        PerformanceMetrics:
          $ref: '#/components/schemas/GetEvaluationOutput_PerformanceMetrics'
        LogUri:
          allOf:
          - $ref: '#/components/schemas/PresignedS3Url'
          - description: A link to the file that contains logs of the <code>CreateEvaluation</code>
              operation.
          title: LogUri
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A description of the most recent details about evaluating
              the <code>MLModel</code>.
          title: Message
        ComputeTime:
          allOf:
          - $ref: '#/components/schemas/LongType'
          - description: "The approximate CPU time in milliseconds that Amazon Machine\
              \ Learning spent processing the <code>Evaluation</code>, normalized\
              \ and scaled on computation resources. <code>ComputeTime</code> is only\
              \ available if the <code>Evaluation</code> is in the <code>COMPLETED</code>\
              \ state."
          title: ComputeTime
        FinishedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The epoch time when Amazon Machine Learning marked the <code>Evaluation</code>
              as <code>COMPLETED</code> or <code>FAILED</code>. <code>FinishedAt</code>
              is only available when the <code>Evaluation</code> is in the <code>COMPLETED</code>
              or <code>FAILED</code> state.
          title: FinishedAt
        StartedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The epoch time when Amazon Machine Learning marked the <code>Evaluation</code>
              as <code>INPROGRESS</code>. <code>StartedAt</code> isn't available if
              the <code>Evaluation</code> is in the <code>PENDING</code> state.
          title: StartedAt
      title: GetEvaluationOutput
      type: object
    GetEvaluationInput:
      example:
        EvaluationId: ""
      properties:
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: 'The ID of the <code>Evaluation</code> to retrieve. The evaluation
              of each <code>MLModel</code> is recorded and cataloged. The ID provides
              the means to access the information. '
          title: EvaluationId
      required:
      - EvaluationId
      title: GetEvaluationInput
      type: object
    GetMLModelOutput:
      description: "Represents the output of a <code>GetMLModel</code> operation,\
        \ and provides detailed information about a <code>MLModel</code>."
      example:
        TrainingDataSourceId: ""
        Status: ""
        LastUpdatedAt: ""
        Message: ""
        Recipe: ""
        ScoreThreshold: ""
        CreatedAt: ""
        Schema: ""
        SizeInBytes: 0
        MLModelId: ""
        ScoreThresholdLastUpdatedAt: ""
        Name: ""
        EndpointInfo:
          EndpointStatus: ""
          PeakRequestsPerSecond: ""
          CreatedAt: ""
          EndpointUrl: ""
        InputDataLocationS3: ""
        LogUri: ""
        MLModelType: ""
        TrainingParameters: ""
        ComputeTime: ""
        FinishedAt: ""
        CreatedByIamUser: ""
        StartedAt: ""
      properties:
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: "The MLModel ID, which is same as the <code>MLModelId</code>\
              \ in the request."
          title: MLModelId
        TrainingDataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the training <code>DataSource</code>.
          title: TrainingDataSourceId
        CreatedByIamUser:
          allOf:
          - $ref: '#/components/schemas/AwsUserArn'
          - description: The AWS user account from which the <code>MLModel</code>
              was created. The account type can be either an AWS root account or an
              AWS Identity and Access Management (IAM) user account.
          title: CreatedByIamUser
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time that the <code>MLModel</code> was created. The time
              is expressed in epoch time.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time of the most recent edit to the <code>MLModel</code>.
              The time is expressed in epoch time.
          title: LastUpdatedAt
        Name:
          allOf:
          - $ref: '#/components/schemas/MLModelName'
          - description: A user-supplied name or description of the <code>MLModel</code>.
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          - description: <p>The current status of the <code>MLModel</code>. This element
              can have one of the following values:</p> <ul> <li> <p> <code>PENDING</code>
              - Amazon Machine Learning (Amazon ML) submitted a request to describe
              a <code>MLModel</code>.</p> </li> <li> <p> <code>INPROGRESS</code> -
              The request is processing.</p> </li> <li> <p> <code>FAILED</code> -
              The request did not run to completion. The ML model isn't usable.</p>
              </li> <li> <p> <code>COMPLETED</code> - The request completed successfully.</p>
              </li> <li> <p> <code>DELETED</code> - The <code>MLModel</code> is marked
              as deleted. It isn't usable.</p> </li> </ul>
          title: Status
        SizeInBytes:
          description: Long integer type that is a 64-bit signed number.
          title: LongType
          type: integer
        EndpointInfo:
          $ref: '#/components/schemas/GetMLModelOutput_EndpointInfo'
        TrainingParameters:
          allOf:
          - $ref: '#/components/schemas/TrainingParameters'
          - description: "<p>A list of the training parameters in the <code>MLModel</code>.\
              \ The list is implemented as a map of key-value pairs.</p> <p>The following\
              \ is the current set of training parameters:</p> <ul> <li> <p> <code>sgd.maxMLModelSizeInBytes</code>\
              \ - The maximum allowed size of the model. Depending on the input data,\
              \ the size of the model might affect its performance.</p> <p> The value\
              \ is an integer that ranges from <code>100000</code> to <code>2147483648</code>.\
              \ The default value is <code>33554432</code>.</p> </li> <li> <p> <code>sgd.maxPasses</code>\
              \ - The number of times that the training process traverses the observations\
              \ to build the <code>MLModel</code>. The value is an integer that ranges\
              \ from <code>1</code> to <code>10000</code>. The default value is <code>10</code>.</p>\
              \ </li> <li> <p> <code>sgd.shuffleType</code> - Whether Amazon ML shuffles\
              \ the training data. Shuffling data improves a model's ability to find\
              \ the optimal solution for a variety of data types. The valid values\
              \ are <code>auto</code> and <code>none</code>. The default value is\
              \ <code>none</code>. We strongly recommend that you shuffle your data.</p>\
              \ </li> <li> <p> <code>sgd.l1RegularizationAmount</code> - The coefficient\
              \ regularization L1 norm. It controls overfitting the data by penalizing\
              \ large coefficients. This tends to drive coefficients to zero, resulting\
              \ in a sparse feature set. If you use this parameter, start by specifying\
              \ a small value, such as <code>1.0E-08</code>.</p> <p>The value is a\
              \ double that ranges from <code>0</code> to <code>MAX_DOUBLE</code>.\
              \ The default is to not use L1 normalization. This parameter can't be\
              \ used when <code>L2</code> is specified. Use this parameter sparingly.</p>\
              \ </li> <li> <p> <code>sgd.l2RegularizationAmount</code> - The coefficient\
              \ regularization L2 norm. It controls overfitting the data by penalizing\
              \ large coefficients. This tends to drive coefficients to small, nonzero\
              \ values. If you use this parameter, start by specifying a small value,\
              \ such as <code>1.0E-08</code>.</p> <p>The value is a double that ranges\
              \ from <code>0</code> to <code>MAX_DOUBLE</code>. The default is to\
              \ not use L2 normalization. This parameter can't be used when <code>L1</code>\
              \ is specified. Use this parameter sparingly.</p> </li> </ul>"
          title: TrainingParameters
        InputDataLocationS3:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: The location of the data file or directory in Amazon Simple
              Storage Service (Amazon S3).
          title: InputDataLocationS3
        MLModelType:
          allOf:
          - $ref: '#/components/schemas/MLModelType'
          - description: "<p>Identifies the <code>MLModel</code> category. The following\
              \ are the available types: </p> <ul> <li> <p>REGRESSION -- Produces\
              \ a numeric result. For example, \"What price should a house be listed\
              \ at?\"</p> </li> <li> <p>BINARY -- Produces one of two possible results.\
              \ For example, \"Is this an e-commerce website?\"</p> </li> <li> <p>MULTICLASS\
              \ -- Produces one of several possible results. For example, \"Is this\
              \ a HIGH, LOW or MEDIUM risk trade?\"</p> </li> </ul>"
          title: MLModelType
        ScoreThreshold:
          allOf:
          - $ref: '#/components/schemas/ScoreThreshold'
          - description: "<p>The scoring threshold is used in binary classification\
              \ <code>MLModel</code> models. It marks the boundary between a positive\
              \ prediction and a negative prediction.</p> <p>Output values greater\
              \ than or equal to the threshold receive a positive result from the\
              \ MLModel, such as <code>true</code>. Output values less than the threshold\
              \ receive a negative response from the MLModel, such as <code>false</code>.</p>"
          title: ScoreThreshold
        ScoreThresholdLastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time of the most recent edit to the <code>ScoreThreshold</code>.
              The time is expressed in epoch time.
          title: ScoreThresholdLastUpdatedAt
        LogUri:
          allOf:
          - $ref: '#/components/schemas/PresignedS3Url'
          - description: A link to the file that contains logs of the <code>CreateMLModel</code>
              operation.
          title: LogUri
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A description of the most recent details about accessing
              the <code>MLModel</code>.
          title: Message
        ComputeTime:
          allOf:
          - $ref: '#/components/schemas/LongType'
          - description: "The approximate CPU time in milliseconds that Amazon Machine\
              \ Learning spent processing the <code>MLModel</code>, normalized and\
              \ scaled on computation resources. <code>ComputeTime</code> is only\
              \ available if the <code>MLModel</code> is in the <code>COMPLETED</code>\
              \ state."
          title: ComputeTime
        FinishedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The epoch time when Amazon Machine Learning marked the <code>MLModel</code>
              as <code>COMPLETED</code> or <code>FAILED</code>. <code>FinishedAt</code>
              is only available when the <code>MLModel</code> is in the <code>COMPLETED</code>
              or <code>FAILED</code> state.
          title: FinishedAt
        StartedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The epoch time when Amazon Machine Learning marked the <code>MLModel</code>
              as <code>INPROGRESS</code>. <code>StartedAt</code> isn't available if
              the <code>MLModel</code> is in the <code>PENDING</code> state.
          title: StartedAt
        Recipe:
          allOf:
          - $ref: '#/components/schemas/Recipe'
          - description: "<p>The recipe to use when training the <code>MLModel</code>.\
              \ The <code>Recipe</code> provides detailed information about the observation\
              \ data to use during training, and manipulations to perform on the observation\
              \ data during training.</p> <p> <b>Note:</b> This parameter is provided\
              \ as part of the verbose format.</p>"
          title: Recipe
        Schema:
          allOf:
          - $ref: '#/components/schemas/DataSchema'
          - description: <p>The schema used by all of the data files referenced by
              the <code>DataSource</code>.</p> <p> <b>Note:</b> This parameter is
              provided as part of the verbose format.</p>
          title: Schema
      title: GetMLModelOutput
      type: object
    GetMLModelInput:
      example:
        Verbose: ""
        MLModelId: ""
      properties:
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID assigned to the <code>MLModel</code> at creation.
          title: MLModelId
        Verbose:
          allOf:
          - $ref: '#/components/schemas/Verbose'
          - description: "<p>Specifies whether the <code>GetMLModel</code> operation\
              \ should return <code>Recipe</code>.</p> <p>If true, <code>Recipe</code>\
              \ is returned.</p> <p>If false, <code>Recipe</code> is not returned.</p>"
          title: Verbose
      required:
      - MLModelId
      title: GetMLModelInput
      type: object
    PredictOutput:
      example:
        Prediction:
          predictedValue: ""
          predictedScores:
            key: null
          details:
            key: null
          predictedLabel: ""
      properties:
        Prediction:
          $ref: '#/components/schemas/Prediction'
      title: PredictOutput
      type: object
    PredictInput:
      example:
        Record:
          key: null
        MLModelId: ""
        PredictEndpoint: PredictEndpoint
      properties:
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: A unique identifier of the <code>MLModel</code>.
          title: MLModelId
        Record:
          additionalProperties:
            $ref: '#/components/schemas/VariableValue'
          description: A map of variable name-value pairs that represent an observation.
          title: Record
          type: object
        PredictEndpoint:
          maxLength: 2048
          pattern: "https://[a-zA-Z0-9-.]*\\.amazon(aws)?\\.com[/]?"
          title: PredictEndpoint
          type: string
      required:
      - MLModelId
      - PredictEndpoint
      - Record
      title: PredictInput
      type: object
    LimitExceededException: {}
    PredictorNotMountedException: {}
    UpdateBatchPredictionOutput:
      description: <p>Represents the output of an <code>UpdateBatchPrediction</code>
        operation.</p> <p>You can see the updated content by using the <code>GetBatchPrediction</code>
        operation.</p>
      example:
        BatchPredictionId: ""
      properties:
        BatchPredictionId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID assigned to the <code>BatchPrediction</code> during
              creation. This value should be identical to the value of the <code>BatchPredictionId</code>
              in the request.
          title: BatchPredictionId
      title: UpdateBatchPredictionOutput
      type: object
    UpdateBatchPredictionInput:
      example:
        BatchPredictionName: ""
        BatchPredictionId: ""
      properties:
        BatchPredictionId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID assigned to the <code>BatchPrediction</code> during
              creation.
          title: BatchPredictionId
        BatchPredictionName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: A new user-supplied name or description of the <code>BatchPrediction</code>.
          title: BatchPredictionName
      required:
      - BatchPredictionId
      - BatchPredictionName
      title: UpdateBatchPredictionInput
      type: object
    UpdateDataSourceOutput:
      description: <p>Represents the output of an <code>UpdateDataSource</code> operation.</p>
        <p>You can see the updated content by using the <code>GetBatchPrediction</code>
        operation.</p>
      example:
        DataSourceId: ""
      properties:
        DataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID assigned to the <code>DataSource</code> during creation.
              This value should be identical to the value of the <code>DataSourceID</code>
              in the request.
          title: DataSourceId
      title: UpdateDataSourceOutput
      type: object
    UpdateDataSourceInput:
      example:
        DataSourceName: ""
        DataSourceId: ""
      properties:
        DataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID assigned to the <code>DataSource</code> during creation.
          title: DataSourceId
        DataSourceName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: 'A new user-supplied name or description of the <code>DataSource</code>
              that will replace the current description. '
          title: DataSourceName
      required:
      - DataSourceId
      - DataSourceName
      title: UpdateDataSourceInput
      type: object
    UpdateEvaluationOutput:
      description: <p>Represents the output of an <code>UpdateEvaluation</code> operation.</p>
        <p>You can see the updated content by using the <code>GetEvaluation</code>
        operation.</p>
      example:
        EvaluationId: ""
      properties:
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID assigned to the <code>Evaluation</code> during creation.
              This value should be identical to the value of the <code>Evaluation</code>
              in the request.
          title: EvaluationId
      title: UpdateEvaluationOutput
      type: object
    UpdateEvaluationInput:
      example:
        EvaluationId: ""
        EvaluationName: ""
      properties:
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID assigned to the <code>Evaluation</code> during creation.
          title: EvaluationId
        EvaluationName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: 'A new user-supplied name or description of the <code>Evaluation</code>
              that will replace the current content. '
          title: EvaluationName
      required:
      - EvaluationId
      - EvaluationName
      title: UpdateEvaluationInput
      type: object
    UpdateMLModelOutput:
      description: <p>Represents the output of an <code>UpdateMLModel</code> operation.</p>
        <p>You can see the updated content by using the <code>GetMLModel</code> operation.</p>
      example:
        MLModelId: ""
      properties:
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID assigned to the <code>MLModel</code> during creation.
              This value should be identical to the value of the <code>MLModelID</code>
              in the request.
          title: MLModelId
      title: UpdateMLModelOutput
      type: object
    UpdateMLModelInput:
      example:
        ScoreThreshold: ""
        MLModelName: ""
        MLModelId: ""
      properties:
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID assigned to the <code>MLModel</code> during creation.
          title: MLModelId
        MLModelName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: A user-supplied name or description of the <code>MLModel</code>.
          title: MLModelName
        ScoreThreshold:
          allOf:
          - $ref: '#/components/schemas/ScoreThreshold'
          - description: "<p>The <code>ScoreThreshold</code> used in binary classification\
              \ <code>MLModel</code> that marks the boundary between a positive prediction\
              \ and a negative prediction.</p> <p>Output values greater than or equal\
              \ to the <code>ScoreThreshold</code> receive a positive result from\
              \ the <code>MLModel</code>, such as <code>true</code>. Output values\
              \ less than the <code>ScoreThreshold</code> receive a negative response\
              \ from the <code>MLModel</code>, such as <code>false</code>.</p>"
          title: ScoreThreshold
      required:
      - MLModelId
      title: UpdateMLModelInput
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 100
      type: array
    EntityId:
      maxLength: 64
      minLength: 1
      pattern: "[a-zA-Z0-9_.-]+"
      type: string
    TaggableResourceType:
      enum:
      - BatchPrediction
      - DataSource
      - Evaluation
      - MLModel
      title: TaggableResourceType
      type: string
    Algorithm:
      description: <p>The function used to train an <code>MLModel</code>. Training
        choices supported by Amazon ML include the following:</p> <ul> <li> <p> <code>SGD</code>
        - Stochastic Gradient Descent.</p> </li> <li> <p> <code>RandomForest</code>
        - Random forest of decision trees.</p> </li> </ul>
      enum:
      - sgd
      title: Algorithm
      type: string
    AwsUserArn:
      description: An Amazon Web Service (AWS) user account identifier. The account
        identifier can be an AWS root account or an AWS Identity and Access Management
        (IAM) user.
      pattern: "arn:aws:iam::[0-9]+:((user/.+)|(root))"
      type: string
    S3Url:
      description: A reference to a file or bucket on Amazon Simple Storage Service
        (Amazon S3).
      maxLength: 2048
      pattern: "s3://([^/]+)(/.*)?"
      type: string
    EpochTime:
      description: A timestamp represented in epoch time.
      format: date-time
      title: EpochTime
      type: string
    EntityName:
      description: A user-supplied name or description of the Amazon ML resource.
      maxLength: 1024
      pattern: .*\S.*|^$
      type: string
    EntityStatus:
      description: <p>Object status with the following possible values:</p> <ul> <li>
        <p> <code>PENDING</code> </p> </li> <li> <p> <code>INPROGRESS</code> </p>
        </li> <li> <p> <code>FAILED</code> </p> </li> <li> <p> <code>COMPLETED</code>
        </p> </li> <li> <p> <code>DELETED</code> </p> </li> </ul>
      enum:
      - PENDING
      - INPROGRESS
      - FAILED
      - COMPLETED
      - DELETED
      title: EntityStatus
      type: string
    Message:
      description: Description of the most recent details about an object.
      maxLength: 10240
      type: string
    LongType:
      description: Long integer type that is a 64-bit signed number.
      title: LongType
      type: integer
    BatchPrediction:
      description: "<p> Represents the output of a <code>GetBatchPrediction</code>\
        \ operation.</p> <p> The content consists of the detailed metadata, the status,\
        \ and the data file information of a <code>Batch Prediction</code>.</p>"
      properties:
        BatchPredictionId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: 'The ID assigned to the <code>BatchPrediction</code> at creation.
              This value should be identical to the value of the <code>BatchPredictionID</code>
              in the request. '
          title: BatchPredictionId
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the <code>MLModel</code> that generated predictions
              for the <code>BatchPrediction</code> request.
          title: MLModelId
        BatchPredictionDataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the <code>DataSource</code> that points to the
              group of observations to predict.
          title: BatchPredictionDataSourceId
        InputDataLocationS3:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: The location of the data file or directory in Amazon Simple
              Storage Service (Amazon S3).
          title: InputDataLocationS3
        CreatedByIamUser:
          allOf:
          - $ref: '#/components/schemas/AwsUserArn'
          - description: The AWS user account that invoked the <code>BatchPrediction</code>.
              The account type can be either an AWS root account or an AWS Identity
              and Access Management (IAM) user account.
          title: CreatedByIamUser
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time that the <code>BatchPrediction</code> was created.
              The time is expressed in epoch time.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time of the most recent edit to the <code>BatchPrediction</code>.
              The time is expressed in epoch time.
          title: LastUpdatedAt
        Name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: A user-supplied name or description of the <code>BatchPrediction</code>.
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          - description: <p>The status of the <code>BatchPrediction</code>. This element
              can have one of the following values:</p> <ul> <li> <p> <code>PENDING</code>
              - Amazon Machine Learning (Amazon ML) submitted a request to generate
              predictions for a batch of observations.</p> </li> <li> <p> <code>INPROGRESS</code>
              - The process is underway.</p> </li> <li> <p> <code>FAILED</code> -
              The request to perform a batch prediction did not run to completion.
              It is not usable.</p> </li> <li> <p> <code>COMPLETED</code> - The batch
              prediction process completed successfully.</p> </li> <li> <p> <code>DELETED</code>
              - The <code>BatchPrediction</code> is marked as deleted. It is not usable.</p>
              </li> </ul>
          title: Status
        OutputUri:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: "The location of an Amazon S3 bucket or directory to receive\
              \ the operation results. The following substrings are not allowed in\
              \ the <code>s3 key</code> portion of the <code>outputURI</code> field:\
              \ ':', '//', '/./', '/../'."
          title: OutputUri
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A description of the most recent details about processing
              the batch prediction request.
          title: Message
        ComputeTime:
          description: Long integer type that is a 64-bit signed number.
          title: LongType
          type: integer
        FinishedAt:
          description: A timestamp represented in epoch time.
          format: date-time
          title: EpochTime
          type: string
        StartedAt:
          description: A timestamp represented in epoch time.
          format: date-time
          title: EpochTime
          type: string
        TotalRecordCount:
          description: Long integer type that is a 64-bit signed number.
          title: LongType
          type: integer
        InvalidRecordCount:
          description: Long integer type that is a 64-bit signed number.
          title: LongType
          type: integer
      title: BatchPrediction
      type: object
    BatchPredictionFilterVariable:
      description: <p>A list of the variables to use in searching or filtering <code>BatchPrediction</code>.</p>
        <ul> <li> <p> <code>CreatedAt</code> - Sets the search criteria to <code>BatchPrediction</code>
        creation date.</p> </li> <li> <p> <code>Status</code> - Sets the search criteria
        to <code>BatchPrediction</code> status.</p> </li> <li> <p> <code>Name</code>
        - Sets the search criteria to the contents of <code>BatchPrediction</code>
        <code>Name</code>.</p> </li> <li> <p> <code>IAMUser</code> - Sets the search
        criteria to the user account that invoked the <code>BatchPrediction</code>
        creation.</p> </li> <li> <p> <code>MLModelId</code> - Sets the search criteria
        to the <code>MLModel</code> used in the <code>BatchPrediction</code>.</p>
        </li> <li> <p> <code>DataSourceId</code> - Sets the search criteria to the
        <code>DataSource</code> used in the <code>BatchPrediction</code>.</p> </li>
        <li> <p> <code>DataURI</code> - Sets the search criteria to the data file(s)
        used in the <code>BatchPrediction</code>. The URL can identify either a file
        or an Amazon Simple Storage Service (Amazon S3) bucket or directory.</p> </li>
        </ul>
      enum:
      - CreatedAt
      - LastUpdatedAt
      - Status
      - Name
      - IAMUser
      - MLModelId
      - DataSourceId
      - DataURI
      title: BatchPredictionFilterVariable
      type: string
    BatchPredictions:
      items:
        $ref: '#/components/schemas/BatchPrediction'
      type: array
    ComparatorValue:
      description: The value specified in a filtering condition. The <code>ComparatorValue</code>
        becomes the reference value when matching or evaluating data values in filtering
        and searching functions.
      maxLength: 1024
      pattern: .*\S.*|^$
      type: string
    ComputeStatistics:
      type: boolean
    RDSDataSpec:
      description: The data specification of an Amazon Relational Database Service
        (Amazon RDS) <code>DataSource</code>.
      properties:
        DatabaseInformation:
          $ref: '#/components/schemas/RDSDataSpec_DatabaseInformation'
        SelectSqlQuery:
          allOf:
          - $ref: '#/components/schemas/RDSSelectSqlQuery'
          - description: The query that is used to retrieve the observation data for
              the <code>DataSource</code>.
          title: SelectSqlQuery
        DatabaseCredentials:
          $ref: '#/components/schemas/RDSDataSpec_DatabaseCredentials'
        S3StagingLocation:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: The Amazon S3 location for staging Amazon RDS data. The data
              retrieved from Amazon RDS using <code>SelectSqlQuery</code> is stored
              in this location.
          title: S3StagingLocation
        DataRearrangement:
          allOf:
          - $ref: '#/components/schemas/DataRearrangement'
          - description: "<p>A JSON string that represents the splitting and rearrangement\
              \ processing to be applied to a <code>DataSource</code>. If the <code>DataRearrangement</code>\
              \ parameter is not provided, all of the input data is used to create\
              \ the <code>Datasource</code>.</p> <p>There are multiple parameters\
              \ that control what data is used to create a datasource:</p> <ul> <li>\
              \ <p> <b> <code>percentBegin</code> </b> </p> <p>Use <code>percentBegin</code>\
              \ to indicate the beginning of the range of the data used to create\
              \ the Datasource. If you do not include <code>percentBegin</code> and\
              \ <code>percentEnd</code>, Amazon ML includes all of the data when creating\
              \ the datasource.</p> </li> <li> <p> <b> <code>percentEnd</code> </b>\
              \ </p> <p>Use <code>percentEnd</code> to indicate the end of the range\
              \ of the data used to create the Datasource. If you do not include <code>percentBegin</code>\
              \ and <code>percentEnd</code>, Amazon ML includes all of the data when\
              \ creating the datasource.</p> </li> <li> <p> <b> <code>complement</code>\
              \ </b> </p> <p>The <code>complement</code> parameter instructs Amazon\
              \ ML to use the data that is not included in the range of <code>percentBegin</code>\
              \ to <code>percentEnd</code> to create a datasource. The <code>complement</code>\
              \ parameter is useful if you need to create complementary datasources\
              \ for training and evaluation. To create a complementary datasource,\
              \ use the same values for <code>percentBegin</code> and <code>percentEnd</code>,\
              \ along with the <code>complement</code> parameter.</p> <p>For example,\
              \ the following two datasources do not share any data, and can be used\
              \ to train and evaluate a model. The first datasource has 25 percent\
              \ of the data, and the second one has 75 percent of the data.</p> <p>Datasource\
              \ for evaluation: <code>{\"splitting\":{\"percentBegin\":0, \"percentEnd\"\
              :25}}</code> </p> <p>Datasource for training: <code>{\"splitting\":{\"\
              percentBegin\":0, \"percentEnd\":25, \"complement\":\"true\"}}</code>\
              \ </p> </li> <li> <p> <b> <code>strategy</code> </b> </p> <p>To change\
              \ how Amazon ML splits the data for a datasource, use the <code>strategy</code>\
              \ parameter.</p> <p>The default value for the <code>strategy</code>\
              \ parameter is <code>sequential</code>, meaning that Amazon ML takes\
              \ all of the data records between the <code>percentBegin</code> and\
              \ <code>percentEnd</code> parameters for the datasource, in the order\
              \ that the records appear in the input data.</p> <p>The following two\
              \ <code>DataRearrangement</code> lines are examples of sequentially\
              \ ordered training and evaluation datasources:</p> <p>Datasource for\
              \ evaluation: <code>{\"splitting\":{\"percentBegin\":70, \"percentEnd\"\
              :100, \"strategy\":\"sequential\"}}</code> </p> <p>Datasource for training:\
              \ <code>{\"splitting\":{\"percentBegin\":70, \"percentEnd\":100, \"\
              strategy\":\"sequential\", \"complement\":\"true\"}}</code> </p> <p>To\
              \ randomly split the input data into the proportions indicated by the\
              \ percentBegin and percentEnd parameters, set the <code>strategy</code>\
              \ parameter to <code>random</code> and provide a string that is used\
              \ as the seed value for the random data splitting (for example, you\
              \ can use the S3 path to your data as the random seed string). If you\
              \ choose the random split strategy, Amazon ML assigns each row of data\
              \ a pseudo-random number between 0 and 100, and then selects the rows\
              \ that have an assigned number between <code>percentBegin</code> and\
              \ <code>percentEnd</code>. Pseudo-random numbers are assigned using\
              \ both the input seed string value and the byte offset as a seed, so\
              \ changing the data results in a different split. Any existing ordering\
              \ is preserved. The random splitting strategy ensures that variables\
              \ in the training and evaluation data are distributed similarly. It\
              \ is useful in the cases where the input data may have an implicit sort\
              \ order, which would otherwise result in training and evaluation datasources\
              \ containing non-similar data records.</p> <p>The following two <code>DataRearrangement</code>\
              \ lines are examples of non-sequentially ordered training and evaluation\
              \ datasources:</p> <p>Datasource for evaluation: <code>{\"splitting\"\
              :{\"percentBegin\":70, \"percentEnd\":100, \"strategy\":\"random\",\
              \ \"randomSeed\"=\"s3://my_s3_path/bucket/file.csv\"}}</code> </p> <p>Datasource\
              \ for training: <code>{\"splitting\":{\"percentBegin\":70, \"percentEnd\"\
              :100, \"strategy\":\"random\", \"randomSeed\"=\"s3://my_s3_path/bucket/file.csv\"\
              , \"complement\":\"true\"}}</code> </p> </li> </ul>"
          title: DataRearrangement
        DataSchema:
          allOf:
          - $ref: '#/components/schemas/DataSchema'
          - description: "<p>A JSON string that represents the schema for an Amazon\
              \ RDS <code>DataSource</code>. The <code>DataSchema</code> defines the\
              \ structure of the observation data in the data file(s) referenced in\
              \ the <code>DataSource</code>.</p> <p>A <code>DataSchema</code> is not\
              \ required if you specify a <code>DataSchemaUri</code> </p> <p>Define\
              \ your <code>DataSchema</code> as a series of key-value pairs. <code>attributes</code>\
              \ and <code>excludedVariableNames</code> have an array of key-value\
              \ pairs for their value. Use the following format to define your <code>DataSchema</code>.</p>\
              \ <p>{ \"version\": \"1.0\",</p> <p>\"recordAnnotationFieldName\": \"\
              F1\",</p> <p>\"recordWeightFieldName\": \"F2\",</p> <p>\"targetFieldName\"\
              : \"F3\",</p> <p>\"dataFormat\": \"CSV\",</p> <p>\"dataFileContainsHeader\"\
              : true,</p> <p>\"attributes\": [</p> <p>{ \"fieldName\": \"F1\", \"\
              fieldType\": \"TEXT\" }, { \"fieldName\": \"F2\", \"fieldType\": \"\
              NUMERIC\" }, { \"fieldName\": \"F3\", \"fieldType\": \"CATEGORICAL\"\
              \ }, { \"fieldName\": \"F4\", \"fieldType\": \"NUMERIC\" }, { \"fieldName\"\
              : \"F5\", \"fieldType\": \"CATEGORICAL\" }, { \"fieldName\": \"F6\"\
              , \"fieldType\": \"TEXT\" }, { \"fieldName\": \"F7\", \"fieldType\"\
              : \"WEIGHTED_INT_SEQUENCE\" }, { \"fieldName\": \"F8\", \"fieldType\"\
              : \"WEIGHTED_STRING_SEQUENCE\" } ],</p> <p>\"excludedVariableNames\"\
              : [ \"F6\" ] }</p>"
          title: DataSchema
        DataSchemaUri:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: 'The Amazon S3 location of the <code>DataSchema</code>. '
          title: DataSchemaUri
        ResourceRole:
          allOf:
          - $ref: '#/components/schemas/EDPResourceRole'
          - description: "The role (DataPipelineDefaultResourceRole) assumed by an\
              \ Amazon Elastic Compute Cloud (Amazon EC2) instance to carry out the\
              \ copy operation from Amazon RDS to an Amazon S3 task. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html\"\
              >Role templates</a> for data pipelines."
          title: ResourceRole
        ServiceRole:
          allOf:
          - $ref: '#/components/schemas/EDPServiceRole'
          - description: "The role (DataPipelineDefaultRole) assumed by AWS Data Pipeline\
              \ service to monitor the progress of the copy task from Amazon RDS to\
              \ Amazon S3. For more information, see <a href=\"https://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html\"\
              >Role templates</a> for data pipelines."
          title: ServiceRole
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/EDPSubnetId'
          - description: The subnet ID to be used to access a VPC-based RDS DB instance.
              This attribute is used by Data Pipeline to carry out the copy task from
              Amazon RDS to Amazon S3.
          title: SubnetId
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/EDPSecurityGroupIds'
          - description: The security group IDs to be used to access a VPC-based RDS
              DB instance. Ensure that there are appropriate ingress rules set up
              to allow access to the RDS DB instance. This attribute is used by Data
              Pipeline to carry out the copy operation from Amazon RDS to an Amazon
              S3 task.
          title: SecurityGroupIds
      required:
      - DatabaseCredentials
      - DatabaseInformation
      - ResourceRole
      - S3StagingLocation
      - SecurityGroupIds
      - SelectSqlQuery
      - ServiceRole
      - SubnetId
      title: RDSDataSpec
      type: object
    RoleARN:
      description: "The Amazon Resource Name (ARN) of an <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html#roles-about-termsandconcepts\"\
        >AWS IAM Role</a>, such as the following: arn:aws:iam::account:role/rolename. "
      maxLength: 110
      minLength: 1
      title: RoleARN
      type: string
    RedshiftDataSpec:
      description: Describes the data specification of an Amazon Redshift <code>DataSource</code>.
      properties:
        DatabaseInformation:
          $ref: '#/components/schemas/RedshiftDataSpec_DatabaseInformation'
        SelectSqlQuery:
          allOf:
          - $ref: '#/components/schemas/RedshiftSelectSqlQuery'
          - description: Describes the SQL Query to execute on an Amazon Redshift
              database for an Amazon Redshift <code>DataSource</code>.
          title: SelectSqlQuery
        DatabaseCredentials:
          $ref: '#/components/schemas/RedshiftDataSpec_DatabaseCredentials'
        S3StagingLocation:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: Describes an Amazon S3 location to store the result set of
              the <code>SelectSqlQuery</code> query.
          title: S3StagingLocation
        DataRearrangement:
          allOf:
          - $ref: '#/components/schemas/DataRearrangement'
          - description: "<p>A JSON string that represents the splitting and rearrangement\
              \ processing to be applied to a <code>DataSource</code>. If the <code>DataRearrangement</code>\
              \ parameter is not provided, all of the input data is used to create\
              \ the <code>Datasource</code>.</p> <p>There are multiple parameters\
              \ that control what data is used to create a datasource:</p> <ul> <li>\
              \ <p> <b> <code>percentBegin</code> </b> </p> <p>Use <code>percentBegin</code>\
              \ to indicate the beginning of the range of the data used to create\
              \ the Datasource. If you do not include <code>percentBegin</code> and\
              \ <code>percentEnd</code>, Amazon ML includes all of the data when creating\
              \ the datasource.</p> </li> <li> <p> <b> <code>percentEnd</code> </b>\
              \ </p> <p>Use <code>percentEnd</code> to indicate the end of the range\
              \ of the data used to create the Datasource. If you do not include <code>percentBegin</code>\
              \ and <code>percentEnd</code>, Amazon ML includes all of the data when\
              \ creating the datasource.</p> </li> <li> <p> <b> <code>complement</code>\
              \ </b> </p> <p>The <code>complement</code> parameter instructs Amazon\
              \ ML to use the data that is not included in the range of <code>percentBegin</code>\
              \ to <code>percentEnd</code> to create a datasource. The <code>complement</code>\
              \ parameter is useful if you need to create complementary datasources\
              \ for training and evaluation. To create a complementary datasource,\
              \ use the same values for <code>percentBegin</code> and <code>percentEnd</code>,\
              \ along with the <code>complement</code> parameter.</p> <p>For example,\
              \ the following two datasources do not share any data, and can be used\
              \ to train and evaluate a model. The first datasource has 25 percent\
              \ of the data, and the second one has 75 percent of the data.</p> <p>Datasource\
              \ for evaluation: <code>{\"splitting\":{\"percentBegin\":0, \"percentEnd\"\
              :25}}</code> </p> <p>Datasource for training: <code>{\"splitting\":{\"\
              percentBegin\":0, \"percentEnd\":25, \"complement\":\"true\"}}</code>\
              \ </p> </li> <li> <p> <b> <code>strategy</code> </b> </p> <p>To change\
              \ how Amazon ML splits the data for a datasource, use the <code>strategy</code>\
              \ parameter.</p> <p>The default value for the <code>strategy</code>\
              \ parameter is <code>sequential</code>, meaning that Amazon ML takes\
              \ all of the data records between the <code>percentBegin</code> and\
              \ <code>percentEnd</code> parameters for the datasource, in the order\
              \ that the records appear in the input data.</p> <p>The following two\
              \ <code>DataRearrangement</code> lines are examples of sequentially\
              \ ordered training and evaluation datasources:</p> <p>Datasource for\
              \ evaluation: <code>{\"splitting\":{\"percentBegin\":70, \"percentEnd\"\
              :100, \"strategy\":\"sequential\"}}</code> </p> <p>Datasource for training:\
              \ <code>{\"splitting\":{\"percentBegin\":70, \"percentEnd\":100, \"\
              strategy\":\"sequential\", \"complement\":\"true\"}}</code> </p> <p>To\
              \ randomly split the input data into the proportions indicated by the\
              \ percentBegin and percentEnd parameters, set the <code>strategy</code>\
              \ parameter to <code>random</code> and provide a string that is used\
              \ as the seed value for the random data splitting (for example, you\
              \ can use the S3 path to your data as the random seed string). If you\
              \ choose the random split strategy, Amazon ML assigns each row of data\
              \ a pseudo-random number between 0 and 100, and then selects the rows\
              \ that have an assigned number between <code>percentBegin</code> and\
              \ <code>percentEnd</code>. Pseudo-random numbers are assigned using\
              \ both the input seed string value and the byte offset as a seed, so\
              \ changing the data results in a different split. Any existing ordering\
              \ is preserved. The random splitting strategy ensures that variables\
              \ in the training and evaluation data are distributed similarly. It\
              \ is useful in the cases where the input data may have an implicit sort\
              \ order, which would otherwise result in training and evaluation datasources\
              \ containing non-similar data records.</p> <p>The following two <code>DataRearrangement</code>\
              \ lines are examples of non-sequentially ordered training and evaluation\
              \ datasources:</p> <p>Datasource for evaluation: <code>{\"splitting\"\
              :{\"percentBegin\":70, \"percentEnd\":100, \"strategy\":\"random\",\
              \ \"randomSeed\"=\"s3://my_s3_path/bucket/file.csv\"}}</code> </p> <p>Datasource\
              \ for training: <code>{\"splitting\":{\"percentBegin\":70, \"percentEnd\"\
              :100, \"strategy\":\"random\", \"randomSeed\"=\"s3://my_s3_path/bucket/file.csv\"\
              , \"complement\":\"true\"}}</code> </p> </li> </ul>"
          title: DataRearrangement
        DataSchema:
          allOf:
          - $ref: '#/components/schemas/DataSchema'
          - description: "<p>A JSON string that represents the schema for an Amazon\
              \ Redshift <code>DataSource</code>. The <code>DataSchema</code> defines\
              \ the structure of the observation data in the data file(s) referenced\
              \ in the <code>DataSource</code>.</p> <p>A <code>DataSchema</code> is\
              \ not required if you specify a <code>DataSchemaUri</code>.</p> <p>Define\
              \ your <code>DataSchema</code> as a series of key-value pairs. <code>attributes</code>\
              \ and <code>excludedVariableNames</code> have an array of key-value\
              \ pairs for their value. Use the following format to define your <code>DataSchema</code>.</p>\
              \ <p>{ \"version\": \"1.0\",</p> <p>\"recordAnnotationFieldName\": \"\
              F1\",</p> <p>\"recordWeightFieldName\": \"F2\",</p> <p>\"targetFieldName\"\
              : \"F3\",</p> <p>\"dataFormat\": \"CSV\",</p> <p>\"dataFileContainsHeader\"\
              : true,</p> <p>\"attributes\": [</p> <p>{ \"fieldName\": \"F1\", \"\
              fieldType\": \"TEXT\" }, { \"fieldName\": \"F2\", \"fieldType\": \"\
              NUMERIC\" }, { \"fieldName\": \"F3\", \"fieldType\": \"CATEGORICAL\"\
              \ }, { \"fieldName\": \"F4\", \"fieldType\": \"NUMERIC\" }, { \"fieldName\"\
              : \"F5\", \"fieldType\": \"CATEGORICAL\" }, { \"fieldName\": \"F6\"\
              , \"fieldType\": \"TEXT\" }, { \"fieldName\": \"F7\", \"fieldType\"\
              : \"WEIGHTED_INT_SEQUENCE\" }, { \"fieldName\": \"F8\", \"fieldType\"\
              : \"WEIGHTED_STRING_SEQUENCE\" } ],</p> <p>\"excludedVariableNames\"\
              : [ \"F6\" ] }</p>"
          title: DataSchema
        DataSchemaUri:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: Describes the schema location for an Amazon Redshift <code>DataSource</code>.
          title: DataSchemaUri
      required:
      - DatabaseCredentials
      - DatabaseInformation
      - S3StagingLocation
      - SelectSqlQuery
      title: RedshiftDataSpec
      type: object
    S3DataSpec:
      description: ' Describes the data specification of a <code>DataSource</code>.'
      properties:
        DataLocationS3:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: The location of the data file(s) used by a <code>DataSource</code>.
              The URI specifies a data file or an Amazon Simple Storage Service (Amazon
              S3) directory or bucket containing data files.
          title: DataLocationS3
        DataRearrangement:
          allOf:
          - $ref: '#/components/schemas/DataRearrangement'
          - description: "<p>A JSON string that represents the splitting and rearrangement\
              \ processing to be applied to a <code>DataSource</code>. If the <code>DataRearrangement</code>\
              \ parameter is not provided, all of the input data is used to create\
              \ the <code>Datasource</code>.</p> <p>There are multiple parameters\
              \ that control what data is used to create a datasource:</p> <ul> <li>\
              \ <p> <b> <code>percentBegin</code> </b> </p> <p>Use <code>percentBegin</code>\
              \ to indicate the beginning of the range of the data used to create\
              \ the Datasource. If you do not include <code>percentBegin</code> and\
              \ <code>percentEnd</code>, Amazon ML includes all of the data when creating\
              \ the datasource.</p> </li> <li> <p> <b> <code>percentEnd</code> </b>\
              \ </p> <p>Use <code>percentEnd</code> to indicate the end of the range\
              \ of the data used to create the Datasource. If you do not include <code>percentBegin</code>\
              \ and <code>percentEnd</code>, Amazon ML includes all of the data when\
              \ creating the datasource.</p> </li> <li> <p> <b> <code>complement</code>\
              \ </b> </p> <p>The <code>complement</code> parameter instructs Amazon\
              \ ML to use the data that is not included in the range of <code>percentBegin</code>\
              \ to <code>percentEnd</code> to create a datasource. The <code>complement</code>\
              \ parameter is useful if you need to create complementary datasources\
              \ for training and evaluation. To create a complementary datasource,\
              \ use the same values for <code>percentBegin</code> and <code>percentEnd</code>,\
              \ along with the <code>complement</code> parameter.</p> <p>For example,\
              \ the following two datasources do not share any data, and can be used\
              \ to train and evaluate a model. The first datasource has 25 percent\
              \ of the data, and the second one has 75 percent of the data.</p> <p>Datasource\
              \ for evaluation: <code>{\"splitting\":{\"percentBegin\":0, \"percentEnd\"\
              :25}}</code> </p> <p>Datasource for training: <code>{\"splitting\":{\"\
              percentBegin\":0, \"percentEnd\":25, \"complement\":\"true\"}}</code>\
              \ </p> </li> <li> <p> <b> <code>strategy</code> </b> </p> <p>To change\
              \ how Amazon ML splits the data for a datasource, use the <code>strategy</code>\
              \ parameter.</p> <p>The default value for the <code>strategy</code>\
              \ parameter is <code>sequential</code>, meaning that Amazon ML takes\
              \ all of the data records between the <code>percentBegin</code> and\
              \ <code>percentEnd</code> parameters for the datasource, in the order\
              \ that the records appear in the input data.</p> <p>The following two\
              \ <code>DataRearrangement</code> lines are examples of sequentially\
              \ ordered training and evaluation datasources:</p> <p>Datasource for\
              \ evaluation: <code>{\"splitting\":{\"percentBegin\":70, \"percentEnd\"\
              :100, \"strategy\":\"sequential\"}}</code> </p> <p>Datasource for training:\
              \ <code>{\"splitting\":{\"percentBegin\":70, \"percentEnd\":100, \"\
              strategy\":\"sequential\", \"complement\":\"true\"}}</code> </p> <p>To\
              \ randomly split the input data into the proportions indicated by the\
              \ percentBegin and percentEnd parameters, set the <code>strategy</code>\
              \ parameter to <code>random</code> and provide a string that is used\
              \ as the seed value for the random data splitting (for example, you\
              \ can use the S3 path to your data as the random seed string). If you\
              \ choose the random split strategy, Amazon ML assigns each row of data\
              \ a pseudo-random number between 0 and 100, and then selects the rows\
              \ that have an assigned number between <code>percentBegin</code> and\
              \ <code>percentEnd</code>. Pseudo-random numbers are assigned using\
              \ both the input seed string value and the byte offset as a seed, so\
              \ changing the data results in a different split. Any existing ordering\
              \ is preserved. The random splitting strategy ensures that variables\
              \ in the training and evaluation data are distributed similarly. It\
              \ is useful in the cases where the input data may have an implicit sort\
              \ order, which would otherwise result in training and evaluation datasources\
              \ containing non-similar data records.</p> <p>The following two <code>DataRearrangement</code>\
              \ lines are examples of non-sequentially ordered training and evaluation\
              \ datasources:</p> <p>Datasource for evaluation: <code>{\"splitting\"\
              :{\"percentBegin\":70, \"percentEnd\":100, \"strategy\":\"random\",\
              \ \"randomSeed\"=\"s3://my_s3_path/bucket/file.csv\"}}</code> </p> <p>Datasource\
              \ for training: <code>{\"splitting\":{\"percentBegin\":70, \"percentEnd\"\
              :100, \"strategy\":\"random\", \"randomSeed\"=\"s3://my_s3_path/bucket/file.csv\"\
              , \"complement\":\"true\"}}</code> </p> </li> </ul>"
          title: DataRearrangement
        DataSchema:
          allOf:
          - $ref: '#/components/schemas/DataSchema'
          - description: "<p> A JSON string that represents the schema for an Amazon\
              \ S3 <code>DataSource</code>. The <code>DataSchema</code> defines the\
              \ structure of the observation data in the data file(s) referenced in\
              \ the <code>DataSource</code>.</p> <p>You must provide either the <code>DataSchema</code>\
              \ or the <code>DataSchemaLocationS3</code>.</p> <p>Define your <code>DataSchema</code>\
              \ as a series of key-value pairs. <code>attributes</code> and <code>excludedVariableNames</code>\
              \ have an array of key-value pairs for their value. Use the following\
              \ format to define your <code>DataSchema</code>.</p> <p>{ \"version\"\
              : \"1.0\",</p> <p>\"recordAnnotationFieldName\": \"F1\",</p> <p>\"recordWeightFieldName\"\
              : \"F2\",</p> <p>\"targetFieldName\": \"F3\",</p> <p>\"dataFormat\"\
              : \"CSV\",</p> <p>\"dataFileContainsHeader\": true,</p> <p>\"attributes\"\
              : [</p> <p>{ \"fieldName\": \"F1\", \"fieldType\": \"TEXT\" }, { \"\
              fieldName\": \"F2\", \"fieldType\": \"NUMERIC\" }, { \"fieldName\":\
              \ \"F3\", \"fieldType\": \"CATEGORICAL\" }, { \"fieldName\": \"F4\"\
              , \"fieldType\": \"NUMERIC\" }, { \"fieldName\": \"F5\", \"fieldType\"\
              : \"CATEGORICAL\" }, { \"fieldName\": \"F6\", \"fieldType\": \"TEXT\"\
              \ }, { \"fieldName\": \"F7\", \"fieldType\": \"WEIGHTED_INT_SEQUENCE\"\
              \ }, { \"fieldName\": \"F8\", \"fieldType\": \"WEIGHTED_STRING_SEQUENCE\"\
              \ } ],</p> <p>\"excludedVariableNames\": [ \"F6\" ] }</p>"
          title: DataSchema
        DataSchemaLocationS3:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: Describes the schema location in Amazon S3. You must provide
              either the <code>DataSchema</code> or the <code>DataSchemaLocationS3</code>.
          title: DataSchemaLocationS3
      required:
      - DataLocationS3
      title: S3DataSpec
      type: object
    MLModelType:
      enum:
      - REGRESSION
      - BINARY
      - MULTICLASS
      title: MLModelType
      type: string
    TrainingParameters:
      additionalProperties:
        $ref: '#/components/schemas/StringType'
      type: object
    Recipe:
      maxLength: 131071
      type: string
    RealtimeEndpointInfo:
      description: ' Describes the real-time endpoint information for an <code>MLModel</code>.'
      properties:
        PeakRequestsPerSecond:
          allOf:
          - $ref: '#/components/schemas/IntegerType'
          - description: " The maximum processing rate for the real-time endpoint\
              \ for <code>MLModel</code>, measured in incoming requests per second."
          title: PeakRequestsPerSecond
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time that the request to create the real-time endpoint
              for the <code>MLModel</code> was received. The time is expressed in
              epoch time.
          title: CreatedAt
        EndpointUrl:
          allOf:
          - $ref: '#/components/schemas/VipURL'
          - description: <p>The URI that specifies where to send real-time prediction
              requests for the <code>MLModel</code>.</p> <p> <b>Note:</b> The application
              must wait until the real-time endpoint is ready before using this URI.</p>
          title: EndpointUrl
        EndpointStatus:
          allOf:
          - $ref: '#/components/schemas/RealtimeEndpointStatus'
          - description: "<p> The current status of the real-time endpoint for the\
              \ <code>MLModel</code>. This element can have one of the following values:\
              \ </p> <ul> <li> <p> <code>NONE</code> - Endpoint does not exist or\
              \ was previously deleted.</p> </li> <li> <p> <code>READY</code> - Endpoint\
              \ is ready to be used for real-time predictions.</p> </li> <li> <p>\
              \ <code>UPDATING</code> - Updating/creating the endpoint. </p> </li>\
              \ </ul>"
          title: EndpointStatus
      title: RealtimeEndpointInfo
      type: object
    DataRearrangement:
      type: string
    DataSchema:
      description: "<p>The schema of a <code>DataSource</code>. The <code>DataSchema</code>\
        \ defines the structure of the observation data in the data file(s) referenced\
        \ in the <code>DataSource</code>. The DataSource schema is expressed in JSON\
        \ format.</p> <p> <code>DataSchema</code> is not required if you specify a\
        \ <code>DataSchemaUri</code> </p> <p>{ \"version\": \"1.0\", \"recordAnnotationFieldName\"\
        : \"F1\", \"recordWeightFieldName\": \"F2\", \"targetFieldName\": \"F3\",\
        \ \"dataFormat\": \"CSV\", \"dataFileContainsHeader\": true, \"variables\"\
        : [ { \"fieldName\": \"F1\", \"fieldType\": \"TEXT\" }, { \"fieldName\": \"\
        F2\", \"fieldType\": \"NUMERIC\" }, { \"fieldName\": \"F3\", \"fieldType\"\
        : \"CATEGORICAL\" }, { \"fieldName\": \"F4\", \"fieldType\": \"NUMERIC\" },\
        \ { \"fieldName\": \"F5\", \"fieldType\": \"CATEGORICAL\" }, { \"fieldName\"\
        : \"F6\", \"fieldType\": \"TEXT\" }, { \"fieldName\": \"F7\", \"fieldType\"\
        : \"WEIGHTED_INT_SEQUENCE\" }, { \"fieldName\": \"F8\", \"fieldType\": \"\
        WEIGHTED_STRING_SEQUENCE\" } ], \"excludedVariableNames\": [ \"F6\" ] }</p>"
      maxLength: 131071
      type: string
    RedshiftMetadata:
      description: Describes the <code>DataSource</code> details specific to Amazon
        Redshift.
      example:
        DatabaseUserName: DatabaseUserName
        RedshiftDatabase:
          DatabaseName: DatabaseName
          ClusterIdentifier: ClusterIdentifier
        SelectSqlQuery: ""
      properties:
        RedshiftDatabase:
          $ref: '#/components/schemas/RedshiftDatabase'
        DatabaseUserName:
          description: A username to be used by Amazon Machine Learning (Amazon ML)to
            connect to a database on an Amazon Redshift cluster. The username should
            have sufficient permissions to execute the <code>RedshiftSelectSqlQuery</code>
            query. The username should be valid for an Amazon Redshift <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_USER.html">USER</a>.
          maxLength: 128
          minLength: 1
          title: RedshiftDatabaseUsername
          type: string
        SelectSqlQuery:
          allOf:
          - $ref: '#/components/schemas/RedshiftSelectSqlQuery'
          - description: ' The SQL query that is specified during <a>CreateDataSourceFromRedshift</a>.
              Returns only if <code>Verbose</code> is true in GetDataSourceInput. '
          title: SelectSqlQuery
      title: RedshiftMetadata
      type: object
    RDSMetadata:
      description: The datasource details that are specific to Amazon RDS.
      example:
        DatabaseUserName: DatabaseUserName
        ServiceRole: ""
        ResourceRole: ""
        Database:
          DatabaseName: DatabaseName
          InstanceIdentifier: ""
        DataPipelineId: ""
        SelectSqlQuery: ""
      properties:
        Database:
          $ref: '#/components/schemas/RDSMetadata_Database'
        DatabaseUserName:
          description: The username to be used by Amazon ML to connect to database
            on an Amazon RDS instance. The username should have sufficient permissions
            to execute an <code>RDSSelectSqlQuery</code> query.
          maxLength: 128
          minLength: 1
          title: RDSDatabaseUsername
          type: string
        SelectSqlQuery:
          allOf:
          - $ref: '#/components/schemas/RDSSelectSqlQuery'
          - description: 'The SQL query that is supplied during <a>CreateDataSourceFromRDS</a>.
              Returns only if <code>Verbose</code> is true in <code>GetDataSourceInput</code>. '
          title: SelectSqlQuery
        ResourceRole:
          allOf:
          - $ref: '#/components/schemas/EDPResourceRole'
          - description: "The role (DataPipelineDefaultResourceRole) assumed by an\
              \ Amazon EC2 instance to carry out the copy task from Amazon RDS to\
              \ Amazon S3. For more information, see <a href=\"https://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html\"\
              >Role templates</a> for data pipelines."
          title: ResourceRole
        ServiceRole:
          allOf:
          - $ref: '#/components/schemas/EDPServiceRole'
          - description: "The role (DataPipelineDefaultRole) assumed by the Data Pipeline\
              \ service to monitor the progress of the copy task from Amazon RDS to\
              \ Amazon S3. For more information, see <a href=\"https://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html\"\
              >Role templates</a> for data pipelines."
          title: ServiceRole
        DataPipelineId:
          allOf:
          - $ref: '#/components/schemas/EDPPipelineId'
          - description: The ID of the Data Pipeline instance that is used to carry
              to copy data from Amazon RDS to Amazon S3. You can use the ID to find
              details about the instance in the Data Pipeline console.
          title: DataPipelineId
      title: RDSMetadata
      type: object
    DataSource:
      description: <p> Represents the output of the <code>GetDataSource</code> operation.
        </p> <p> The content consists of the detailed metadata and data file information
        and the current status of the <code>DataSource</code>. </p>
      properties:
        DataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID that is assigned to the <code>DataSource</code> during
              creation.
          title: DataSourceId
        DataLocationS3:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: The location and name of the data in Amazon Simple Storage
              Service (Amazon S3) that is used by a <code>DataSource</code>.
          title: DataLocationS3
        DataRearrangement:
          allOf:
          - $ref: '#/components/schemas/DataRearrangement'
          - description: A JSON string that represents the splitting and rearrangement
              requirement used when this <code>DataSource</code> was created.
          title: DataRearrangement
        CreatedByIamUser:
          allOf:
          - $ref: '#/components/schemas/AwsUserArn'
          - description: The AWS user account from which the <code>DataSource</code>
              was created. The account type can be either an AWS root account or an
              AWS Identity and Access Management (IAM) user account.
          title: CreatedByIamUser
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time that the <code>DataSource</code> was created. The
              time is expressed in epoch time.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time of the most recent edit to the <code>BatchPrediction</code>.
              The time is expressed in epoch time.
          title: LastUpdatedAt
        DataSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/LongType'
          - description: The total number of observations contained in the data files
              that the <code>DataSource</code> references.
          title: DataSizeInBytes
        NumberOfFiles:
          allOf:
          - $ref: '#/components/schemas/LongType'
          - description: The number of data files referenced by the <code>DataSource</code>.
          title: NumberOfFiles
        Name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: A user-supplied name or description of the <code>DataSource</code>.
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          - description: "<p>The current status of the <code>DataSource</code>. This\
              \ element can have one of the following values: </p> <ul> <li> <p>PENDING\
              \ - Amazon Machine Learning (Amazon ML) submitted a request to create\
              \ a <code>DataSource</code>.</p> </li> <li> <p>INPROGRESS - The creation\
              \ process is underway.</p> </li> <li> <p>FAILED - The request to create\
              \ a <code>DataSource</code> did not run to completion. It is not usable.</p>\
              \ </li> <li> <p>COMPLETED - The creation process completed successfully.</p>\
              \ </li> <li> <p>DELETED - The <code>DataSource</code> is marked as deleted.\
              \ It is not usable.</p> </li> </ul>"
          title: Status
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A description of the most recent details about creating the
              <code>DataSource</code>.
          title: Message
        RedshiftMetadata:
          $ref: '#/components/schemas/RedshiftMetadata'
        RDSMetadata:
          $ref: '#/components/schemas/RDSMetadata'
        RoleARN:
          description: "The Amazon Resource Name (ARN) of an <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html#roles-about-termsandconcepts\"\
            >AWS IAM Role</a>, such as the following: arn:aws:iam::account:role/rolename. "
          maxLength: 110
          minLength: 1
          title: RoleARN
          type: string
        ComputeStatistics:
          allOf:
          - $ref: '#/components/schemas/ComputeStatistics'
          - description: ' The parameter is <code>true</code> if statistics need to
              be generated from the observation data. '
          title: ComputeStatistics
        ComputeTime:
          description: Long integer type that is a 64-bit signed number.
          title: LongType
          type: integer
        FinishedAt:
          description: A timestamp represented in epoch time.
          format: date-time
          title: EpochTime
          type: string
        StartedAt:
          description: A timestamp represented in epoch time.
          format: date-time
          title: EpochTime
          type: string
      title: DataSource
      type: object
    DataSourceFilterVariable:
      description: <p>A list of the variables to use in searching or filtering <code>DataSource</code>.</p>
        <ul> <li> <p> <code>CreatedAt</code> - Sets the search criteria to <code>DataSource</code>
        creation date.</p> </li> <li> <p> <code>Status</code> - Sets the search criteria
        to <code>DataSource</code> status.</p> </li> <li> <p> <code>Name</code> -
        Sets the search criteria to the contents of <code>DataSource</code> <code>Name</code>.</p>
        </li> <li> <p> <code>DataUri</code> - Sets the search criteria to the URI
        of data files used to create the <code>DataSource</code>. The URI can identify
        either a file or an Amazon Simple Storage Service (Amazon S3) bucket or directory.</p>
        </li> <li> <p> <code>IAMUser</code> - Sets the search criteria to the user
        account that invoked the <code>DataSource</code> creation.</p> </li> </ul>
        <p> <b>Note:</b> The variable names should match the variable names in the
        <code>DataSource</code>.</p>
      enum:
      - CreatedAt
      - LastUpdatedAt
      - Status
      - Name
      - DataLocationS3
      - IAMUser
      title: DataSourceFilterVariable
      type: string
    DataSources:
      items:
        $ref: '#/components/schemas/DataSource'
      type: array
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 100
      type: array
    SortOrder:
      description: <p>The sort order specified in a listing condition. Possible values
        include the following:</p> <ul> <li> <p> <code>asc</code> - Present the information
        in ascending order (from A-Z).</p> </li> <li> <p> <code>dsc</code> - Present
        the information in descending order (from Z-A).</p> </li> </ul>
      enum:
      - asc
      - dsc
      title: SortOrder
      type: string
    StringType:
      description: String type.
      title: StringType
      type: string
    PageLimit:
      maximum: 100
      minimum: 1
      type: integer
    EvaluationFilterVariable:
      description: <p>A list of the variables to use in searching or filtering <code>Evaluation</code>.</p>
        <ul> <li> <p> <code>CreatedAt</code> - Sets the search criteria to <code>Evaluation</code>
        creation date.</p> </li> <li> <p> <code>Status</code> - Sets the search criteria
        to <code>Evaluation</code> status.</p> </li> <li> <p> <code>Name</code> -
        Sets the search criteria to the contents of <code>Evaluation</code> <b> </b>
        <code>Name</code>.</p> </li> <li> <p> <code>IAMUser</code> - Sets the search
        criteria to the user account that invoked an evaluation.</p> </li> <li> <p>
        <code>MLModelId</code> - Sets the search criteria to the <code>Predictor</code>
        that was evaluated.</p> </li> <li> <p> <code>DataSourceId</code> - Sets the
        search criteria to the <code>DataSource</code> used in evaluation.</p> </li>
        <li> <p> <code>DataUri</code> - Sets the search criteria to the data file(s)
        used in evaluation. The URL can identify either a file or an Amazon Simple
        Storage Service (Amazon S3) bucket or directory.</p> </li> </ul>
      enum:
      - CreatedAt
      - LastUpdatedAt
      - Status
      - Name
      - IAMUser
      - MLModelId
      - DataSourceId
      - DataURI
      title: EvaluationFilterVariable
      type: string
    Evaluations:
      items:
        $ref: '#/components/schemas/Evaluation'
      type: array
    MLModelFilterVariable:
      enum:
      - CreatedAt
      - LastUpdatedAt
      - Status
      - Name
      - IAMUser
      - TrainingDataSourceId
      - RealtimeEndpointStatus
      - MLModelType
      - Algorithm
      - TrainingDataURI
      title: MLModelFilterVariable
      type: string
    MLModels:
      items:
        $ref: '#/components/schemas/MLModel'
      type: array
    DetailsAttributes:
      description: <p>Contains the key values of <code>DetailsMap</code>:</p> <ul>
        <li> <p> <code>PredictiveModelType</code> - Indicates the type of the <code>MLModel</code>.</p>
        </li> <li> <p> <code>Algorithm</code> - Indicates the algorithm that was used
        for the <code>MLModel</code>.</p> </li> </ul>
      enum:
      - PredictiveModelType
      - Algorithm
      type: string
    DetailsValue:
      minLength: 1
      title: DetailsValue
      type: string
    DetailsMap:
      additionalProperties:
        $ref: '#/components/schemas/DetailsValue'
      description: Provides any additional details regarding the prediction.
      title: DetailsMap
      type: object
    EDPPipelineId:
      maxLength: 1024
      minLength: 1
      type: string
    EDPResourceRole:
      maxLength: 64
      minLength: 1
      type: string
    EDPSecurityGroupId:
      maxLength: 255
      minLength: 1
      title: EDPSecurityGroupId
      type: string
    EDPSecurityGroupIds:
      items:
        $ref: '#/components/schemas/EDPSecurityGroupId'
      type: array
    EDPServiceRole:
      maxLength: 64
      minLength: 1
      type: string
    EDPSubnetId:
      maxLength: 255
      minLength: 1
      type: string
    PerformanceMetrics:
      description: "<p>Measurements of how well the <code>MLModel</code> performed\
        \ on known observations. One of the following metrics is returned, based on\
        \ the type of the <code>MLModel</code>: </p> <ul> <li> <p>BinaryAUC: The binary\
        \ <code>MLModel</code> uses the Area Under the Curve (AUC) technique to measure\
        \ performance. </p> </li> <li> <p>RegressionRMSE: The regression <code>MLModel</code>\
        \ uses the Root Mean Square Error (RMSE) technique to measure performance.\
        \ RMSE measures the difference between predicted and actual values for a single\
        \ variable.</p> </li> <li> <p>MulticlassAvgFScore: The multiclass <code>MLModel</code>\
        \ uses the F1 score technique to measure performance. </p> </li> </ul> <p>\
        \ For more information about performance metrics, please see the <a href=\"\
        https://docs.aws.amazon.com/machine-learning/latest/dg\">Amazon Machine Learning\
        \ Developer Guide</a>. </p>"
      properties:
        Properties:
          additionalProperties:
            $ref: '#/components/schemas/PerformanceMetricsPropertyValue'
          title: Properties
          type: object
      title: PerformanceMetrics
      type: object
    Evaluation:
      description: <p> Represents the output of <code>GetEvaluation</code> operation.
        </p> <p>The content consists of the detailed metadata and data file information
        and the current status of the <code>Evaluation</code>.</p>
      properties:
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID that is assigned to the <code>Evaluation</code> at
              creation.
          title: EvaluationId
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the <code>MLModel</code> that is the focus of the
              evaluation.
          title: MLModelId
        EvaluationDataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the <code>DataSource</code> that is used to evaluate
              the <code>MLModel</code>.
          title: EvaluationDataSourceId
        InputDataLocationS3:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: The location and name of the data in Amazon Simple Storage
              Server (Amazon S3) that is used in the evaluation.
          title: InputDataLocationS3
        CreatedByIamUser:
          allOf:
          - $ref: '#/components/schemas/AwsUserArn'
          - description: The AWS user account that invoked the evaluation. The account
              type can be either an AWS root account or an AWS Identity and Access
              Management (IAM) user account.
          title: CreatedByIamUser
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time that the <code>Evaluation</code> was created. The
              time is expressed in epoch time.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time of the most recent edit to the <code>Evaluation</code>.
              The time is expressed in epoch time.
          title: LastUpdatedAt
        Name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: 'A user-supplied name or description of the <code>Evaluation</code>. '
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          - description: <p>The status of the evaluation. This element can have one
              of the following values:</p> <ul> <li> <p> <code>PENDING</code> - Amazon
              Machine Learning (Amazon ML) submitted a request to evaluate an <code>MLModel</code>.</p>
              </li> <li> <p> <code>INPROGRESS</code> - The evaluation is underway.</p>
              </li> <li> <p> <code>FAILED</code> - The request to evaluate an <code>MLModel</code>
              did not run to completion. It is not usable.</p> </li> <li> <p> <code>COMPLETED</code>
              - The evaluation process completed successfully.</p> </li> <li> <p>
              <code>DELETED</code> - The <code>Evaluation</code> is marked as deleted.
              It is not usable.</p> </li> </ul>
          title: Status
        PerformanceMetrics:
          $ref: '#/components/schemas/Evaluation_PerformanceMetrics'
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A description of the most recent details about evaluating
              the <code>MLModel</code>.
          title: Message
        ComputeTime:
          description: Long integer type that is a 64-bit signed number.
          title: LongType
          type: integer
        FinishedAt:
          description: A timestamp represented in epoch time.
          format: date-time
          title: EpochTime
          type: string
        StartedAt:
          description: A timestamp represented in epoch time.
          format: date-time
          title: EpochTime
          type: string
      title: Evaluation
      type: object
    PresignedS3Url:
      type: string
    Verbose:
      description: Specifies whether a describe operation should return exhaustive
        or abbreviated information.
      type: boolean
    MLModelName:
      maxLength: 1024
      type: string
    ScoreThreshold:
      format: float
      title: ScoreThreshold
      type: number
    IntegerType:
      description: Integer type that is a 32-bit signed number.
      type: integer
    Label:
      minLength: 1
      type: string
    MLModel:
      description: <p> Represents the output of a <code>GetMLModel</code> operation.
        </p> <p>The content consists of the detailed metadata and the current status
        of the <code>MLModel</code>.</p>
      properties:
        MLModelId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID assigned to the <code>MLModel</code> at creation.
          title: MLModelId
        TrainingDataSourceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the training <code>DataSource</code>. The <code>CreateMLModel</code>
              operation uses the <code>TrainingDataSourceId</code>.
          title: TrainingDataSourceId
        CreatedByIamUser:
          allOf:
          - $ref: '#/components/schemas/AwsUserArn'
          - description: The AWS user account from which the <code>MLModel</code>
              was created. The account type can be either an AWS root account or an
              AWS Identity and Access Management (IAM) user account.
          title: CreatedByIamUser
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time that the <code>MLModel</code> was created. The time
              is expressed in epoch time.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time of the most recent edit to the <code>MLModel</code>.
              The time is expressed in epoch time.
          title: LastUpdatedAt
        Name:
          allOf:
          - $ref: '#/components/schemas/MLModelName'
          - description: A user-supplied name or description of the <code>MLModel</code>.
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          - description: "<p>The current status of an <code>MLModel</code>. This element\
              \ can have one of the following values: </p> <ul> <li> <p> <code>PENDING</code>\
              \ - Amazon Machine Learning (Amazon ML) submitted a request to create\
              \ an <code>MLModel</code>.</p> </li> <li> <p> <code>INPROGRESS</code>\
              \ - The creation process is underway.</p> </li> <li> <p> <code>FAILED</code>\
              \ - The request to create an <code>MLModel</code> didn't run to completion.\
              \ The model isn't usable.</p> </li> <li> <p> <code>COMPLETED</code>\
              \ - The creation process completed successfully.</p> </li> <li> <p>\
              \ <code>DELETED</code> - The <code>MLModel</code> is marked as deleted.\
              \ It isn't usable.</p> </li> </ul>"
          title: Status
        SizeInBytes:
          description: Long integer type that is a 64-bit signed number.
          title: LongType
          type: integer
        EndpointInfo:
          $ref: '#/components/schemas/MLModel_EndpointInfo'
        TrainingParameters:
          allOf:
          - $ref: '#/components/schemas/TrainingParameters'
          - description: "<p>A list of the training parameters in the <code>MLModel</code>.\
              \ The list is implemented as a map of key-value pairs.</p> <p>The following\
              \ is the current set of training parameters:</p> <ul> <li> <p> <code>sgd.maxMLModelSizeInBytes</code>\
              \ - The maximum allowed size of the model. Depending on the input data,\
              \ the size of the model might affect its performance.</p> <p> The value\
              \ is an integer that ranges from <code>100000</code> to <code>2147483648</code>.\
              \ The default value is <code>33554432</code>.</p> </li> <li> <p> <code>sgd.maxPasses</code>\
              \ - The number of times that the training process traverses the observations\
              \ to build the <code>MLModel</code>. The value is an integer that ranges\
              \ from <code>1</code> to <code>10000</code>. The default value is <code>10</code>.</p>\
              \ </li> <li> <p> <code>sgd.shuffleType</code> - Whether Amazon ML shuffles\
              \ the training data. Shuffling the data improves a model's ability to\
              \ find the optimal solution for a variety of data types. The valid values\
              \ are <code>auto</code> and <code>none</code>. The default value is\
              \ <code>none</code>.</p> </li> <li> <p> <code>sgd.l1RegularizationAmount</code>\
              \ - The coefficient regularization L1 norm, which controls overfitting\
              \ the data by penalizing large coefficients. This parameter tends to\
              \ drive coefficients to zero, resulting in sparse feature set. If you\
              \ use this parameter, start by specifying a small value, such as <code>1.0E-08</code>.</p>\
              \ <p>The value is a double that ranges from <code>0</code> to <code>MAX_DOUBLE</code>.\
              \ The default is to not use L1 normalization. This parameter can't be\
              \ used when <code>L2</code> is specified. Use this parameter sparingly.</p>\
              \ </li> <li> <p> <code>sgd.l2RegularizationAmount</code> - The coefficient\
              \ regularization L2 norm, which controls overfitting the data by penalizing\
              \ large coefficients. This tends to drive coefficients to small, nonzero\
              \ values. If you use this parameter, start by specifying a small value,\
              \ such as <code>1.0E-08</code>.</p> <p>The value is a double that ranges\
              \ from <code>0</code> to <code>MAX_DOUBLE</code>. The default is to\
              \ not use L2 normalization. This parameter can't be used when <code>L1</code>\
              \ is specified. Use this parameter sparingly.</p> </li> </ul>"
          title: TrainingParameters
        InputDataLocationS3:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: The location of the data file or directory in Amazon Simple
              Storage Service (Amazon S3).
          title: InputDataLocationS3
        Algorithm:
          allOf:
          - $ref: '#/components/schemas/Algorithm'
          - description: <p>The algorithm used to train the <code>MLModel</code>.
              The following algorithm is supported:</p> <ul> <li> <p> <code>SGD</code>
              -- Stochastic gradient descent. The goal of <code>SGD</code> is to minimize
              the gradient of the loss function. </p> </li> </ul>
          title: Algorithm
        MLModelType:
          allOf:
          - $ref: '#/components/schemas/MLModelType'
          - description: "<p>Identifies the <code>MLModel</code> category. The following\
              \ are the available types:</p> <ul> <li> <p> <code>REGRESSION</code>\
              \ - Produces a numeric result. For example, \"What price should a house\
              \ be listed at?\"</p> </li> <li> <p> <code>BINARY</code> - Produces\
              \ one of two possible results. For example, \"Is this a child-friendly\
              \ web site?\".</p> </li> <li> <p> <code>MULTICLASS</code> - Produces\
              \ one of several possible results. For example, \"Is this a HIGH-, LOW-,\
              \ or MEDIUM-risk trade?\".</p> </li> </ul>"
          title: MLModelType
        ScoreThreshold:
          format: float
          title: ScoreThreshold
          type: number
        ScoreThresholdLastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/EpochTime'
          - description: The time of the most recent edit to the <code>ScoreThreshold</code>.
              The time is expressed in epoch time.
          title: ScoreThresholdLastUpdatedAt
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A description of the most recent details about accessing
              the <code>MLModel</code>.
          title: Message
        ComputeTime:
          description: Long integer type that is a 64-bit signed number.
          title: LongType
          type: integer
        FinishedAt:
          description: A timestamp represented in epoch time.
          format: date-time
          title: EpochTime
          type: string
        StartedAt:
          description: A timestamp represented in epoch time.
          format: date-time
          title: EpochTime
          type: string
      title: MLModel
      type: object
    PerformanceMetricsProperties:
      additionalProperties:
        $ref: '#/components/schemas/PerformanceMetricsPropertyValue'
      title: Properties
      type: object
    PerformanceMetricsPropertyValue:
      title: PerformanceMetricsPropertyValue
      type: string
    PerformanceMetricsPropertyKey:
      type: string
    Record:
      additionalProperties:
        $ref: '#/components/schemas/VariableValue'
      description: A map of variable name-value pairs that represent an observation.
      title: Record
      type: object
    VipURL:
      maxLength: 2048
      pattern: "https://[a-zA-Z0-9-.]*\\.amazon(aws)?\\.com[/]?"
      title: PredictEndpoint
      type: string
    Prediction:
      description: "<p>The output from a <code>Predict</code> operation: </p> <ul>\
        \ <li> <p> <code>Details</code> - Contains the following attributes: <code>DetailsAttributes.PREDICTIVE_MODEL_TYPE\
        \ - REGRESSION | BINARY | MULTICLASS</code> <code>DetailsAttributes.ALGORITHM\
        \ - SGD</code> </p> </li> <li> <p> <code>PredictedLabel</code> - Present for\
        \ either a <code>BINARY</code> or <code>MULTICLASS</code> <code>MLModel</code>\
        \ request. </p> </li> <li> <p> <code>PredictedScores</code> - Contains the\
        \ raw classification score corresponding to each label. </p> </li> <li> <p>\
        \ <code>PredictedValue</code> - Present for a <code>REGRESSION</code> <code>MLModel</code>\
        \ request. </p> </li> </ul>"
      example:
        predictedValue: ""
        predictedScores:
          key: null
        details:
          key: null
        predictedLabel: ""
      properties:
        predictedLabel:
          allOf:
          - $ref: '#/components/schemas/Label'
          - description: The prediction label for either a <code>BINARY</code> or
              <code>MULTICLASS</code> <code>MLModel</code>.
          title: predictedLabel
        predictedValue:
          allOf:
          - $ref: '#/components/schemas/floatLabel'
          - description: The prediction value for <code>REGRESSION</code> <code>MLModel</code>.
          title: predictedValue
        predictedScores:
          additionalProperties:
            $ref: '#/components/schemas/ScoreValue'
          description: Provides the raw classification score corresponding to each
            label.
          title: ScoreValuePerLabelMap
          type: object
        details:
          additionalProperties:
            $ref: '#/components/schemas/DetailsValue'
          description: Provides any additional details regarding the prediction.
          title: DetailsMap
          type: object
      title: Prediction
      type: object
    floatLabel:
      format: float
      type: number
    ScoreValuePerLabelMap:
      additionalProperties:
        $ref: '#/components/schemas/ScoreValue'
      description: Provides the raw classification score corresponding to each label.
      title: ScoreValuePerLabelMap
      type: object
    RDSDatabase:
      description: The database details of an Amazon RDS database.
      properties:
        InstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/RDSInstanceIdentifier'
          - description: The ID of an RDS DB instance.
          title: InstanceIdentifier
        DatabaseName:
          description: The name of a database hosted on an RDS DB instance.
          maxLength: 64
          minLength: 1
          title: DatabaseName
          type: string
      required:
      - DatabaseName
      - InstanceIdentifier
      title: RDSDatabase
      type: object
    RDSSelectSqlQuery:
      description: The SQL query to be executed against the Amazon RDS database. The
        SQL query should be valid for the Amazon RDS type being used.
      maxLength: 16777216
      minLength: 1
      type: string
    RDSDatabaseCredentials:
      description: The database credentials to connect to a database on an RDS DB
        instance.
      properties:
        Username:
          description: The username to be used by Amazon ML to connect to database
            on an Amazon RDS instance. The username should have sufficient permissions
            to execute an <code>RDSSelectSqlQuery</code> query.
          maxLength: 128
          minLength: 1
          title: RDSDatabaseUsername
          type: string
        Password:
          description: The password to be used by Amazon ML to connect to a database
            on an RDS DB instance. The password should have sufficient permissions
            to execute the <code>RDSSelectQuery</code> query.
          maxLength: 128
          minLength: 8
          title: Password
          type: string
      required:
      - Password
      - Username
      title: RDSDatabaseCredentials
      type: object
    RDSInstanceIdentifier:
      description: Identifier of RDS DB Instances.
      maxLength: 63
      minLength: 1
      pattern: "[a-z0-9-]+"
      type: string
    RDSDatabaseName:
      description: The name of a database hosted on an RDS DB instance.
      maxLength: 64
      minLength: 1
      title: DatabaseName
      type: string
    RDSDatabaseUsername:
      description: The username to be used by Amazon ML to connect to database on
        an Amazon RDS instance. The username should have sufficient permissions to
        execute an <code>RDSSelectSqlQuery</code> query.
      maxLength: 128
      minLength: 1
      title: RDSDatabaseUsername
      type: string
    RDSDatabasePassword:
      description: The password to be used by Amazon ML to connect to a database on
        an RDS DB instance. The password should have sufficient permissions to execute
        the <code>RDSSelectQuery</code> query.
      maxLength: 128
      minLength: 8
      title: Password
      type: string
    RealtimeEndpointStatus:
      enum:
      - NONE
      - READY
      - UPDATING
      - FAILED
      title: RealtimeEndpointStatus
      type: string
    VariableValue:
      description: "The value of a variable. Currently it's used to specify values\
        \ of the target value, weights, and tag variables and for filtering variable\
        \ values."
      title: VariableValue
      type: string
    RedshiftClusterIdentifier:
      description: The ID of an Amazon Redshift cluster.
      maxLength: 63
      minLength: 1
      pattern: "[a-z0-9-]+"
      title: RedshiftClusterIdentifier
      type: string
    RedshiftDatabase:
      description: Describes the database details required to connect to an Amazon
        Redshift database.
      example:
        DatabaseName: DatabaseName
        ClusterIdentifier: ClusterIdentifier
      properties:
        DatabaseName:
          description: The name of a database hosted on an Amazon Redshift cluster.
          maxLength: 64
          minLength: 1
          pattern: "[a-z0-9]+"
          title: RedshiftDatabaseName
          type: string
        ClusterIdentifier:
          description: The ID of an Amazon Redshift cluster.
          maxLength: 63
          minLength: 1
          pattern: "[a-z0-9-]+"
          title: RedshiftClusterIdentifier
          type: string
      required:
      - ClusterIdentifier
      - DatabaseName
      title: RedshiftDatabase
      type: object
    RedshiftSelectSqlQuery:
      description: ' Describes the SQL query to execute on the Amazon Redshift database.
        The SQL query should be valid for an Amazon Redshift <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_SELECT_synopsis.html">SELECT</a>. '
      maxLength: 16777216
      minLength: 1
      type: string
    RedshiftDatabaseCredentials:
      description: Describes the database credentials for connecting to a database
        on an Amazon Redshift cluster.
      properties:
        Username:
          description: A username to be used by Amazon Machine Learning (Amazon ML)to
            connect to a database on an Amazon Redshift cluster. The username should
            have sufficient permissions to execute the <code>RedshiftSelectSqlQuery</code>
            query. The username should be valid for an Amazon Redshift <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_USER.html">USER</a>.
          maxLength: 128
          minLength: 1
          title: RedshiftDatabaseUsername
          type: string
        Password:
          description: A password to be used by Amazon ML to connect to a database
            on an Amazon Redshift cluster. The password should have sufficient permissions
            to execute a <code>RedshiftSelectSqlQuery</code> query. The password should
            be valid for an Amazon Redshift <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_USER.html">USER</a>.
          maxLength: 64
          minLength: 8
          title: Password
          type: string
      required:
      - Password
      - Username
      title: RedshiftDatabaseCredentials
      type: object
    RedshiftDatabaseName:
      description: The name of a database hosted on an Amazon Redshift cluster.
      maxLength: 64
      minLength: 1
      pattern: "[a-z0-9]+"
      title: RedshiftDatabaseName
      type: string
    RedshiftDatabaseUsername:
      description: A username to be used by Amazon Machine Learning (Amazon ML)to
        connect to a database on an Amazon Redshift cluster. The username should have
        sufficient permissions to execute the <code>RedshiftSelectSqlQuery</code>
        query. The username should be valid for an Amazon Redshift <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_USER.html">USER</a>.
      maxLength: 128
      minLength: 1
      title: RedshiftDatabaseUsername
      type: string
    RedshiftDatabasePassword:
      description: A password to be used by Amazon ML to connect to a database on
        an Amazon Redshift cluster. The password should have sufficient permissions
        to execute a <code>RedshiftSelectSqlQuery</code> query. The password should
        be valid for an Amazon Redshift <a href="https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_USER.html">USER</a>.
      maxLength: 64
      minLength: 8
      title: Password
      type: string
    ScoreValue:
      format: float
      title: ScoreValue
      type: number
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      title: TagKey
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    Tag:
      description: "A custom key-value pair associated with an ML object, such as\
        \ an ML model."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: "A unique identifier for the tag. Valid characters include\
              \ Unicode letters, digits, white space, _, ., /, =, +, -, %, and @."
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: "An optional string, typically used to describe or define\
              \ the tag. Valid characters include Unicode letters, digits, white space,\
              \ _, ., /, =, +, -, %, and @."
          title: Value
      title: Tag
      type: object
    VariableName:
      description: "The name of a variable. Currently it's used to specify the name\
        \ of the target value, label, weight, and tags."
      type: string
    CreateDataSourceFromRDSInput_RDSData:
      allOf:
      - $ref: '#/components/schemas/RDSDataSpec'
      - description: "<p>The data specification of an Amazon RDS <code>DataSource</code>:</p>\
          \ <ul> <li> <p>DatabaseInformation -</p> <ul> <li> <p> <code>DatabaseName</code>\
          \ - The name of the Amazon RDS database.</p> </li> <li> <p> <code>InstanceIdentifier\
          \ </code> - A unique identifier for the Amazon RDS database instance.</p>\
          \ </li> </ul> </li> <li> <p>DatabaseCredentials - AWS Identity and Access\
          \ Management (IAM) credentials that are used to connect to the Amazon RDS\
          \ database.</p> </li> <li> <p>ResourceRole - A role (DataPipelineDefaultResourceRole)\
          \ assumed by an EC2 instance to carry out the copy task from Amazon RDS\
          \ to Amazon Simple Storage Service (Amazon S3). For more information, see\
          \ <a href=\"https://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html\"\
          >Role templates</a> for data pipelines.</p> </li> <li> <p>ServiceRole -\
          \ A role (DataPipelineDefaultRole) assumed by the AWS Data Pipeline service\
          \ to monitor the progress of the copy task from Amazon RDS to Amazon S3.\
          \ For more information, see <a href=\"https://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html\"\
          >Role templates</a> for data pipelines.</p> </li> <li> <p>SecurityInfo -\
          \ The security information to use to access an RDS DB instance. You need\
          \ to set up appropriate ingress rules for the security entity IDs provided\
          \ to allow access to the Amazon RDS instance. Specify a [<code>SubnetId</code>,\
          \ <code>SecurityGroupIds</code>] pair for a VPC-based RDS DB instance.</p>\
          \ </li> <li> <p>SelectSqlQuery - A query that is used to retrieve the observation\
          \ data for the <code>Datasource</code>.</p> </li> <li> <p>S3StagingLocation\
          \ - The Amazon S3 location for staging Amazon RDS data. The data retrieved\
          \ from Amazon RDS using <code>SelectSqlQuery</code> is stored in this location.</p>\
          \ </li> <li> <p>DataSchemaUri - The Amazon S3 location of the <code>DataSchema</code>.</p>\
          \ </li> <li> <p>DataSchema - A JSON string representing the schema. This\
          \ is not required if <code>DataSchemaUri</code> is specified. </p> </li>\
          \ <li> <p>DataRearrangement - A JSON string that represents the splitting\
          \ and rearrangement requirements for the <code>Datasource</code>. </p> <p>\
          \ Sample - <code> \"{\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\"percentEnd\\\
          \":60}}\"</code> </p> </li> </ul>"
      example:
        DataSchema: ""
        DatabaseInformation:
          DatabaseName: DatabaseName
          InstanceIdentifier: ""
        DatabaseCredentials:
          Username: Username
          Password: Password
        S3StagingLocation: ""
        ServiceRole: ""
        DataSchemaUri: ""
        ResourceRole: ""
        SubnetId: ""
        SecurityGroupIds: ""
        SelectSqlQuery: ""
        DataRearrangement: ""
      title: CreateDataSourceFromRDSInput_RDSData
    CreateDataSourceFromRedshiftInput_DataSpec:
      allOf:
      - $ref: '#/components/schemas/RedshiftDataSpec'
      - description: "<p>The data specification of an Amazon Redshift <code>DataSource</code>:</p>\
          \ <ul> <li> <p>DatabaseInformation -</p> <ul> <li> <p> <code>DatabaseName</code>\
          \ - The name of the Amazon Redshift database.</p> </li> <li> <p> <code>\
          \ ClusterIdentifier</code> - The unique ID for the Amazon Redshift cluster.</p>\
          \ </li> </ul> </li> <li> <p>DatabaseCredentials - The AWS Identity and Access\
          \ Management (IAM) credentials that are used to connect to the Amazon Redshift\
          \ database.</p> </li> <li> <p>SelectSqlQuery - The query that is used to\
          \ retrieve the observation data for the <code>Datasource</code>.</p> </li>\
          \ <li> <p>S3StagingLocation - The Amazon Simple Storage Service (Amazon\
          \ S3) location for staging Amazon Redshift data. The data retrieved from\
          \ Amazon Redshift using the <code>SelectSqlQuery</code> query is stored\
          \ in this location.</p> </li> <li> <p>DataSchemaUri - The Amazon S3 location\
          \ of the <code>DataSchema</code>.</p> </li> <li> <p>DataSchema - A JSON\
          \ string representing the schema. This is not required if <code>DataSchemaUri</code>\
          \ is specified. </p> </li> <li> <p>DataRearrangement - A JSON string that\
          \ represents the splitting and rearrangement requirements for the <code>DataSource</code>.</p>\
          \ <p> Sample - <code> \"{\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\"\
          percentEnd\\\":60}}\"</code> </p> </li> </ul>"
      example:
        DataSchema: ""
        DatabaseInformation:
          DatabaseName: DatabaseName
          ClusterIdentifier: ClusterIdentifier
        DatabaseCredentials:
          Username: Username
          Password: Password
        S3StagingLocation: ""
        DataSchemaUri: ""
        SelectSqlQuery: ""
        DataRearrangement: ""
      title: CreateDataSourceFromRedshiftInput_DataSpec
    CreateDataSourceFromS3Input_DataSpec:
      allOf:
      - $ref: '#/components/schemas/S3DataSpec'
      - description: "<p>The data specification of a <code>DataSource</code>:</p>\
          \ <ul> <li> <p>DataLocationS3 - The Amazon S3 location of the observation\
          \ data.</p> </li> <li> <p>DataSchemaLocationS3 - The Amazon S3 location\
          \ of the <code>DataSchema</code>.</p> </li> <li> <p>DataSchema - A JSON\
          \ string representing the schema. This is not required if <code>DataSchemaUri</code>\
          \ is specified. </p> </li> <li> <p>DataRearrangement - A JSON string that\
          \ represents the splitting and rearrangement requirements for the <code>Datasource</code>.\
          \ </p> <p> Sample - <code> \"{\\\"splitting\\\":{\\\"percentBegin\\\":10,\\\
          \"percentEnd\\\":60}}\"</code> </p> </li> </ul>"
      example:
        DataSchema: ""
        DataLocationS3: ""
        DataSchemaLocationS3: ""
        DataRearrangement: ""
      title: CreateDataSourceFromS3Input_DataSpec
    CreateRealtimeEndpointOutput_RealtimeEndpointInfo:
      allOf:
      - $ref: '#/components/schemas/RealtimeEndpointInfo'
      - description: 'The endpoint information of the <code>MLModel</code> '
      example:
        EndpointStatus: ""
        PeakRequestsPerSecond: ""
        CreatedAt: ""
        EndpointUrl: ""
      title: CreateRealtimeEndpointOutput_RealtimeEndpointInfo
    GetEvaluationOutput_PerformanceMetrics:
      allOf:
      - $ref: '#/components/schemas/PerformanceMetrics'
      - description: "<p>Measurements of how well the <code>MLModel</code> performed\
          \ using observations referenced by the <code>DataSource</code>. One of the\
          \ following metric is returned based on the type of the <code>MLModel</code>:\
          \ </p> <ul> <li> <p>BinaryAUC: A binary <code>MLModel</code> uses the Area\
          \ Under the Curve (AUC) technique to measure performance. </p> </li> <li>\
          \ <p>RegressionRMSE: A regression <code>MLModel</code> uses the Root Mean\
          \ Square Error (RMSE) technique to measure performance. RMSE measures the\
          \ difference between predicted and actual values for a single variable.</p>\
          \ </li> <li> <p>MulticlassAvgFScore: A multiclass <code>MLModel</code> uses\
          \ the F1 score technique to measure performance. </p> </li> </ul> <p> For\
          \ more information about performance metrics, please see the <a href=\"\
          https://docs.aws.amazon.com/machine-learning/latest/dg\">Amazon Machine\
          \ Learning Developer Guide</a>. </p>"
      example:
        Properties:
          key: null
      title: GetEvaluationOutput_PerformanceMetrics
    GetMLModelOutput_EndpointInfo:
      allOf:
      - $ref: '#/components/schemas/RealtimeEndpointInfo'
      - description: 'The current endpoint of the <code>MLModel</code> '
      example:
        EndpointStatus: ""
        PeakRequestsPerSecond: ""
        CreatedAt: ""
        EndpointUrl: ""
      title: GetMLModelOutput_EndpointInfo
    RDSDataSpec_DatabaseInformation:
      allOf:
      - $ref: '#/components/schemas/RDSDatabase'
      - description: Describes the <code>DatabaseName</code> and <code>InstanceIdentifier</code>
          of an Amazon RDS database.
      example:
        DatabaseName: DatabaseName
        InstanceIdentifier: ""
      title: RDSDataSpec_DatabaseInformation
    RDSDataSpec_DatabaseCredentials:
      allOf:
      - $ref: '#/components/schemas/RDSDatabaseCredentials'
      - description: The AWS Identity and Access Management (IAM) credentials that
          are used connect to the Amazon RDS database.
      example:
        Username: Username
        Password: Password
      title: RDSDataSpec_DatabaseCredentials
    RedshiftDataSpec_DatabaseInformation:
      allOf:
      - $ref: '#/components/schemas/RedshiftDatabase'
      - description: Describes the <code>DatabaseName</code> and <code>ClusterIdentifier</code>
          for an Amazon Redshift <code>DataSource</code>.
      example:
        DatabaseName: DatabaseName
        ClusterIdentifier: ClusterIdentifier
      title: RedshiftDataSpec_DatabaseInformation
    RedshiftDataSpec_DatabaseCredentials:
      allOf:
      - $ref: '#/components/schemas/RedshiftDatabaseCredentials'
      - description: Describes AWS Identity and Access Management (IAM) credentials
          that are used connect to the Amazon Redshift database.
      example:
        Username: Username
        Password: Password
      title: RedshiftDataSpec_DatabaseCredentials
    RDSMetadata_Database:
      allOf:
      - $ref: '#/components/schemas/RDSDatabase'
      - description: The database details required to connect to an Amazon RDS.
      example:
        DatabaseName: DatabaseName
        InstanceIdentifier: ""
      title: RDSMetadata_Database
    Evaluation_PerformanceMetrics:
      allOf:
      - $ref: '#/components/schemas/PerformanceMetrics'
      - description: "<p>Measurements of how well the <code>MLModel</code> performed,\
          \ using observations referenced by the <code>DataSource</code>. One of the\
          \ following metrics is returned, based on the type of the <code>MLModel</code>:\
          \ </p> <ul> <li> <p>BinaryAUC: A binary <code>MLModel</code> uses the Area\
          \ Under the Curve (AUC) technique to measure performance. </p> </li> <li>\
          \ <p>RegressionRMSE: A regression <code>MLModel</code> uses the Root Mean\
          \ Square Error (RMSE) technique to measure performance. RMSE measures the\
          \ difference between predicted and actual values for a single variable.</p>\
          \ </li> <li> <p>MulticlassAvgFScore: A multiclass <code>MLModel</code> uses\
          \ the F1 score technique to measure performance. </p> </li> </ul> <p> For\
          \ more information about performance metrics, please see the <a href=\"\
          https://docs.aws.amazon.com/machine-learning/latest/dg\">Amazon Machine\
          \ Learning Developer Guide</a>. </p>"
      title: Evaluation_PerformanceMetrics
    MLModel_EndpointInfo:
      allOf:
      - $ref: '#/components/schemas/RealtimeEndpointInfo'
      - description: The current endpoint of the <code>MLModel</code>.
      title: MLModel_EndpointInfo
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
