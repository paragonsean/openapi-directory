# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ml_model_type import MLModelType
from openapi_server import util


class CreateMLModelInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ml_model_id: str=None, ml_model_name: str=None, ml_model_type: MLModelType=None, parameters: Dict=None, training_data_source_id: str=None, recipe: str=None, recipe_uri: str=None):
        """CreateMLModelInput - a model defined in OpenAPI

        :param ml_model_id: The ml_model_id of this CreateMLModelInput.
        :param ml_model_name: The ml_model_name of this CreateMLModelInput.
        :param ml_model_type: The ml_model_type of this CreateMLModelInput.
        :param parameters: The parameters of this CreateMLModelInput.
        :param training_data_source_id: The training_data_source_id of this CreateMLModelInput.
        :param recipe: The recipe of this CreateMLModelInput.
        :param recipe_uri: The recipe_uri of this CreateMLModelInput.
        """
        self.openapi_types = {
            'ml_model_id': str,
            'ml_model_name': str,
            'ml_model_type': MLModelType,
            'parameters': Dict,
            'training_data_source_id': str,
            'recipe': str,
            'recipe_uri': str
        }

        self.attribute_map = {
            'ml_model_id': 'MLModelId',
            'ml_model_name': 'MLModelName',
            'ml_model_type': 'MLModelType',
            'parameters': 'Parameters',
            'training_data_source_id': 'TrainingDataSourceId',
            'recipe': 'Recipe',
            'recipe_uri': 'RecipeUri'
        }

        self._ml_model_id = ml_model_id
        self._ml_model_name = ml_model_name
        self._ml_model_type = ml_model_type
        self._parameters = parameters
        self._training_data_source_id = training_data_source_id
        self._recipe = recipe
        self._recipe_uri = recipe_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateMLModelInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateMLModelInput of this CreateMLModelInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ml_model_id(self):
        """Gets the ml_model_id of this CreateMLModelInput.


        :return: The ml_model_id of this CreateMLModelInput.
        :rtype: str
        """
        return self._ml_model_id

    @ml_model_id.setter
    def ml_model_id(self, ml_model_id):
        """Sets the ml_model_id of this CreateMLModelInput.


        :param ml_model_id: The ml_model_id of this CreateMLModelInput.
        :type ml_model_id: str
        """
        if ml_model_id is None:
            raise ValueError("Invalid value for `ml_model_id`, must not be `None`")

        self._ml_model_id = ml_model_id

    @property
    def ml_model_name(self):
        """Gets the ml_model_name of this CreateMLModelInput.


        :return: The ml_model_name of this CreateMLModelInput.
        :rtype: str
        """
        return self._ml_model_name

    @ml_model_name.setter
    def ml_model_name(self, ml_model_name):
        """Sets the ml_model_name of this CreateMLModelInput.


        :param ml_model_name: The ml_model_name of this CreateMLModelInput.
        :type ml_model_name: str
        """

        self._ml_model_name = ml_model_name

    @property
    def ml_model_type(self):
        """Gets the ml_model_type of this CreateMLModelInput.


        :return: The ml_model_type of this CreateMLModelInput.
        :rtype: MLModelType
        """
        return self._ml_model_type

    @ml_model_type.setter
    def ml_model_type(self, ml_model_type):
        """Sets the ml_model_type of this CreateMLModelInput.


        :param ml_model_type: The ml_model_type of this CreateMLModelInput.
        :type ml_model_type: MLModelType
        """
        if ml_model_type is None:
            raise ValueError("Invalid value for `ml_model_type`, must not be `None`")

        self._ml_model_type = ml_model_type

    @property
    def parameters(self):
        """Gets the parameters of this CreateMLModelInput.


        :return: The parameters of this CreateMLModelInput.
        :rtype: Dict
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this CreateMLModelInput.


        :param parameters: The parameters of this CreateMLModelInput.
        :type parameters: Dict
        """

        self._parameters = parameters

    @property
    def training_data_source_id(self):
        """Gets the training_data_source_id of this CreateMLModelInput.


        :return: The training_data_source_id of this CreateMLModelInput.
        :rtype: str
        """
        return self._training_data_source_id

    @training_data_source_id.setter
    def training_data_source_id(self, training_data_source_id):
        """Sets the training_data_source_id of this CreateMLModelInput.


        :param training_data_source_id: The training_data_source_id of this CreateMLModelInput.
        :type training_data_source_id: str
        """
        if training_data_source_id is None:
            raise ValueError("Invalid value for `training_data_source_id`, must not be `None`")

        self._training_data_source_id = training_data_source_id

    @property
    def recipe(self):
        """Gets the recipe of this CreateMLModelInput.


        :return: The recipe of this CreateMLModelInput.
        :rtype: str
        """
        return self._recipe

    @recipe.setter
    def recipe(self, recipe):
        """Sets the recipe of this CreateMLModelInput.


        :param recipe: The recipe of this CreateMLModelInput.
        :type recipe: str
        """

        self._recipe = recipe

    @property
    def recipe_uri(self):
        """Gets the recipe_uri of this CreateMLModelInput.


        :return: The recipe_uri of this CreateMLModelInput.
        :rtype: str
        """
        return self._recipe_uri

    @recipe_uri.setter
    def recipe_uri(self, recipe_uri):
        """Sets the recipe_uri of this CreateMLModelInput.


        :param recipe_uri: The recipe_uri of this CreateMLModelInput.
        :type recipe_uri: str
        """

        self._recipe_uri = recipe_uri
