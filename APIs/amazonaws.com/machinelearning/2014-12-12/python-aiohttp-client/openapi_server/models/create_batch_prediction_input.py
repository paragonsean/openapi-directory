# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateBatchPredictionInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batch_prediction_id: str=None, batch_prediction_name: str=None, ml_model_id: str=None, batch_prediction_data_source_id: str=None, output_uri: str=None):
        """CreateBatchPredictionInput - a model defined in OpenAPI

        :param batch_prediction_id: The batch_prediction_id of this CreateBatchPredictionInput.
        :param batch_prediction_name: The batch_prediction_name of this CreateBatchPredictionInput.
        :param ml_model_id: The ml_model_id of this CreateBatchPredictionInput.
        :param batch_prediction_data_source_id: The batch_prediction_data_source_id of this CreateBatchPredictionInput.
        :param output_uri: The output_uri of this CreateBatchPredictionInput.
        """
        self.openapi_types = {
            'batch_prediction_id': str,
            'batch_prediction_name': str,
            'ml_model_id': str,
            'batch_prediction_data_source_id': str,
            'output_uri': str
        }

        self.attribute_map = {
            'batch_prediction_id': 'BatchPredictionId',
            'batch_prediction_name': 'BatchPredictionName',
            'ml_model_id': 'MLModelId',
            'batch_prediction_data_source_id': 'BatchPredictionDataSourceId',
            'output_uri': 'OutputUri'
        }

        self._batch_prediction_id = batch_prediction_id
        self._batch_prediction_name = batch_prediction_name
        self._ml_model_id = ml_model_id
        self._batch_prediction_data_source_id = batch_prediction_data_source_id
        self._output_uri = output_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateBatchPredictionInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateBatchPredictionInput of this CreateBatchPredictionInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_prediction_id(self):
        """Gets the batch_prediction_id of this CreateBatchPredictionInput.


        :return: The batch_prediction_id of this CreateBatchPredictionInput.
        :rtype: str
        """
        return self._batch_prediction_id

    @batch_prediction_id.setter
    def batch_prediction_id(self, batch_prediction_id):
        """Sets the batch_prediction_id of this CreateBatchPredictionInput.


        :param batch_prediction_id: The batch_prediction_id of this CreateBatchPredictionInput.
        :type batch_prediction_id: str
        """
        if batch_prediction_id is None:
            raise ValueError("Invalid value for `batch_prediction_id`, must not be `None`")

        self._batch_prediction_id = batch_prediction_id

    @property
    def batch_prediction_name(self):
        """Gets the batch_prediction_name of this CreateBatchPredictionInput.


        :return: The batch_prediction_name of this CreateBatchPredictionInput.
        :rtype: str
        """
        return self._batch_prediction_name

    @batch_prediction_name.setter
    def batch_prediction_name(self, batch_prediction_name):
        """Sets the batch_prediction_name of this CreateBatchPredictionInput.


        :param batch_prediction_name: The batch_prediction_name of this CreateBatchPredictionInput.
        :type batch_prediction_name: str
        """

        self._batch_prediction_name = batch_prediction_name

    @property
    def ml_model_id(self):
        """Gets the ml_model_id of this CreateBatchPredictionInput.


        :return: The ml_model_id of this CreateBatchPredictionInput.
        :rtype: str
        """
        return self._ml_model_id

    @ml_model_id.setter
    def ml_model_id(self, ml_model_id):
        """Sets the ml_model_id of this CreateBatchPredictionInput.


        :param ml_model_id: The ml_model_id of this CreateBatchPredictionInput.
        :type ml_model_id: str
        """
        if ml_model_id is None:
            raise ValueError("Invalid value for `ml_model_id`, must not be `None`")

        self._ml_model_id = ml_model_id

    @property
    def batch_prediction_data_source_id(self):
        """Gets the batch_prediction_data_source_id of this CreateBatchPredictionInput.


        :return: The batch_prediction_data_source_id of this CreateBatchPredictionInput.
        :rtype: str
        """
        return self._batch_prediction_data_source_id

    @batch_prediction_data_source_id.setter
    def batch_prediction_data_source_id(self, batch_prediction_data_source_id):
        """Sets the batch_prediction_data_source_id of this CreateBatchPredictionInput.


        :param batch_prediction_data_source_id: The batch_prediction_data_source_id of this CreateBatchPredictionInput.
        :type batch_prediction_data_source_id: str
        """
        if batch_prediction_data_source_id is None:
            raise ValueError("Invalid value for `batch_prediction_data_source_id`, must not be `None`")

        self._batch_prediction_data_source_id = batch_prediction_data_source_id

    @property
    def output_uri(self):
        """Gets the output_uri of this CreateBatchPredictionInput.


        :return: The output_uri of this CreateBatchPredictionInput.
        :rtype: str
        """
        return self._output_uri

    @output_uri.setter
    def output_uri(self, output_uri):
        """Sets the output_uri of this CreateBatchPredictionInput.


        :param output_uri: The output_uri of this CreateBatchPredictionInput.
        :type output_uri: str
        """
        if output_uri is None:
            raise ValueError("Invalid value for `output_uri`, must not be `None`")

        self._output_uri = output_uri
