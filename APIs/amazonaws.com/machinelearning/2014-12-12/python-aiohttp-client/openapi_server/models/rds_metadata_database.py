# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RDSMetadataDatabase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_identifier: str=None, database_name: str=None):
        """RDSMetadataDatabase - a model defined in OpenAPI

        :param instance_identifier: The instance_identifier of this RDSMetadataDatabase.
        :param database_name: The database_name of this RDSMetadataDatabase.
        """
        self.openapi_types = {
            'instance_identifier': str,
            'database_name': str
        }

        self.attribute_map = {
            'instance_identifier': 'InstanceIdentifier',
            'database_name': 'DatabaseName'
        }

        self._instance_identifier = instance_identifier
        self._database_name = database_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RDSMetadataDatabase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RDSMetadata_Database of this RDSMetadataDatabase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_identifier(self):
        """Gets the instance_identifier of this RDSMetadataDatabase.


        :return: The instance_identifier of this RDSMetadataDatabase.
        :rtype: str
        """
        return self._instance_identifier

    @instance_identifier.setter
    def instance_identifier(self, instance_identifier):
        """Sets the instance_identifier of this RDSMetadataDatabase.


        :param instance_identifier: The instance_identifier of this RDSMetadataDatabase.
        :type instance_identifier: str
        """
        if instance_identifier is None:
            raise ValueError("Invalid value for `instance_identifier`, must not be `None`")

        self._instance_identifier = instance_identifier

    @property
    def database_name(self):
        """Gets the database_name of this RDSMetadataDatabase.

        The name of a database hosted on an RDS DB instance.

        :return: The database_name of this RDSMetadataDatabase.
        :rtype: str
        """
        return self._database_name

    @database_name.setter
    def database_name(self, database_name):
        """Sets the database_name of this RDSMetadataDatabase.

        The name of a database hosted on an RDS DB instance.

        :param database_name: The database_name of this RDSMetadataDatabase.
        :type database_name: str
        """
        if database_name is None:
            raise ValueError("Invalid value for `database_name`, must not be `None`")
        if database_name is not None and len(database_name) > 64:
            raise ValueError("Invalid value for `database_name`, length must be less than or equal to `64`")
        if database_name is not None and len(database_name) < 1:
            raise ValueError("Invalid value for `database_name`, length must be greater than or equal to `1`")

        self._database_name = database_name
