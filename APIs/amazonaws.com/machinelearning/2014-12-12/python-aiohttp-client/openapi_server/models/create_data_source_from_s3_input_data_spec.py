# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateDataSourceFromS3InputDataSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_location_s3: str=None, data_rearrangement: str=None, data_schema: str=None, data_schema_location_s3: str=None):
        """CreateDataSourceFromS3InputDataSpec - a model defined in OpenAPI

        :param data_location_s3: The data_location_s3 of this CreateDataSourceFromS3InputDataSpec.
        :param data_rearrangement: The data_rearrangement of this CreateDataSourceFromS3InputDataSpec.
        :param data_schema: The data_schema of this CreateDataSourceFromS3InputDataSpec.
        :param data_schema_location_s3: The data_schema_location_s3 of this CreateDataSourceFromS3InputDataSpec.
        """
        self.openapi_types = {
            'data_location_s3': str,
            'data_rearrangement': str,
            'data_schema': str,
            'data_schema_location_s3': str
        }

        self.attribute_map = {
            'data_location_s3': 'DataLocationS3',
            'data_rearrangement': 'DataRearrangement',
            'data_schema': 'DataSchema',
            'data_schema_location_s3': 'DataSchemaLocationS3'
        }

        self._data_location_s3 = data_location_s3
        self._data_rearrangement = data_rearrangement
        self._data_schema = data_schema
        self._data_schema_location_s3 = data_schema_location_s3

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDataSourceFromS3InputDataSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDataSourceFromS3Input_DataSpec of this CreateDataSourceFromS3InputDataSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_location_s3(self):
        """Gets the data_location_s3 of this CreateDataSourceFromS3InputDataSpec.


        :return: The data_location_s3 of this CreateDataSourceFromS3InputDataSpec.
        :rtype: str
        """
        return self._data_location_s3

    @data_location_s3.setter
    def data_location_s3(self, data_location_s3):
        """Sets the data_location_s3 of this CreateDataSourceFromS3InputDataSpec.


        :param data_location_s3: The data_location_s3 of this CreateDataSourceFromS3InputDataSpec.
        :type data_location_s3: str
        """
        if data_location_s3 is None:
            raise ValueError("Invalid value for `data_location_s3`, must not be `None`")

        self._data_location_s3 = data_location_s3

    @property
    def data_rearrangement(self):
        """Gets the data_rearrangement of this CreateDataSourceFromS3InputDataSpec.


        :return: The data_rearrangement of this CreateDataSourceFromS3InputDataSpec.
        :rtype: str
        """
        return self._data_rearrangement

    @data_rearrangement.setter
    def data_rearrangement(self, data_rearrangement):
        """Sets the data_rearrangement of this CreateDataSourceFromS3InputDataSpec.


        :param data_rearrangement: The data_rearrangement of this CreateDataSourceFromS3InputDataSpec.
        :type data_rearrangement: str
        """

        self._data_rearrangement = data_rearrangement

    @property
    def data_schema(self):
        """Gets the data_schema of this CreateDataSourceFromS3InputDataSpec.


        :return: The data_schema of this CreateDataSourceFromS3InputDataSpec.
        :rtype: str
        """
        return self._data_schema

    @data_schema.setter
    def data_schema(self, data_schema):
        """Sets the data_schema of this CreateDataSourceFromS3InputDataSpec.


        :param data_schema: The data_schema of this CreateDataSourceFromS3InputDataSpec.
        :type data_schema: str
        """

        self._data_schema = data_schema

    @property
    def data_schema_location_s3(self):
        """Gets the data_schema_location_s3 of this CreateDataSourceFromS3InputDataSpec.


        :return: The data_schema_location_s3 of this CreateDataSourceFromS3InputDataSpec.
        :rtype: str
        """
        return self._data_schema_location_s3

    @data_schema_location_s3.setter
    def data_schema_location_s3(self, data_schema_location_s3):
        """Sets the data_schema_location_s3 of this CreateDataSourceFromS3InputDataSpec.


        :param data_schema_location_s3: The data_schema_location_s3 of this CreateDataSourceFromS3InputDataSpec.
        :type data_schema_location_s3: str
        """

        self._data_schema_location_s3 = data_schema_location_s3
