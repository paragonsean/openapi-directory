/*
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * &lt;p&gt;A list of the variables to use in searching or filtering &lt;code&gt;BatchPrediction&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;CreatedAt&lt;/code&gt; - Sets the search criteria to &lt;code&gt;BatchPrediction&lt;/code&gt; creation date.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Status&lt;/code&gt; - Sets the search criteria to &lt;code&gt;BatchPrediction&lt;/code&gt; status.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Name&lt;/code&gt; - Sets the search criteria to the contents of &lt;code&gt;BatchPrediction&lt;/code&gt; &lt;code&gt;Name&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;IAMUser&lt;/code&gt; - Sets the search criteria to the user account that invoked the &lt;code&gt;BatchPrediction&lt;/code&gt; creation.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;MLModelId&lt;/code&gt; - Sets the search criteria to the &lt;code&gt;MLModel&lt;/code&gt; used in the &lt;code&gt;BatchPrediction&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DataSourceId&lt;/code&gt; - Sets the search criteria to the &lt;code&gt;DataSource&lt;/code&gt; used in the &lt;code&gt;BatchPrediction&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DataURI&lt;/code&gt; - Sets the search criteria to the data file(s) used in the &lt;code&gt;BatchPrediction&lt;/code&gt;. The URL can identify either a file or an Amazon Simple Storage Service (Amazon S3) bucket or directory.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */
@JsonAdapter(BatchPredictionFilterVariable.Adapter.class)
public enum BatchPredictionFilterVariable {
  
  CREATED_AT("CreatedAt"),
  
  LAST_UPDATED_AT("LastUpdatedAt"),
  
  STATUS("Status"),
  
  NAME("Name"),
  
  IAM_USER("IAMUser"),
  
  ML_MODEL_ID("MLModelId"),
  
  DATA_SOURCE_ID("DataSourceId"),
  
  DATA_URI("DataURI");

  private String value;

  BatchPredictionFilterVariable(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static BatchPredictionFilterVariable fromValue(String value) {
    for (BatchPredictionFilterVariable b : BatchPredictionFilterVariable.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<BatchPredictionFilterVariable> {
    @Override
    public void write(final JsonWriter jsonWriter, final BatchPredictionFilterVariable enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public BatchPredictionFilterVariable read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return BatchPredictionFilterVariable.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    BatchPredictionFilterVariable.fromValue(value);
  }
}

