/*
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * &lt;p&gt;The function used to train an &lt;code&gt;MLModel&lt;/code&gt;. Training choices supported by Amazon ML include the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;SGD&lt;/code&gt; - Stochastic Gradient Descent.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;RandomForest&lt;/code&gt; - Random forest of decision trees.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */
@JsonAdapter(Algorithm.Adapter.class)
public enum Algorithm {
  
  SGD("sgd");

  private String value;

  Algorithm(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Algorithm fromValue(String value) {
    for (Algorithm b : Algorithm.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<Algorithm> {
    @Override
    public void write(final JsonWriter jsonWriter, final Algorithm enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Algorithm read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Algorithm.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    Algorithm.fromValue(value);
  }
}

