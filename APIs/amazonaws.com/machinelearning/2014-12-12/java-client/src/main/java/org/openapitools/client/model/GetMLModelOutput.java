/*
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.EntityStatus;
import org.openapitools.client.model.GetMLModelOutputEndpointInfo;
import org.openapitools.client.model.MLModelType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the output of a &lt;code&gt;GetMLModel&lt;/code&gt; operation, and provides detailed information about a &lt;code&gt;MLModel&lt;/code&gt;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:53.196548-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetMLModelOutput {
  public static final String SERIALIZED_NAME_ML_MODEL_ID = "MLModelId";
  @SerializedName(SERIALIZED_NAME_ML_MODEL_ID)
  private String mlModelId;

  public static final String SERIALIZED_NAME_TRAINING_DATA_SOURCE_ID = "TrainingDataSourceId";
  @SerializedName(SERIALIZED_NAME_TRAINING_DATA_SOURCE_ID)
  private String trainingDataSourceId;

  public static final String SERIALIZED_NAME_CREATED_BY_IAM_USER = "CreatedByIamUser";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_IAM_USER)
  private String createdByIamUser;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_LAST_UPDATED_AT = "LastUpdatedAt";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_AT)
  private OffsetDateTime lastUpdatedAt;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private EntityStatus status;

  public static final String SERIALIZED_NAME_SIZE_IN_BYTES = "SizeInBytes";
  @SerializedName(SERIALIZED_NAME_SIZE_IN_BYTES)
  private Integer sizeInBytes;

  public static final String SERIALIZED_NAME_ENDPOINT_INFO = "EndpointInfo";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_INFO)
  private GetMLModelOutputEndpointInfo endpointInfo;

  public static final String SERIALIZED_NAME_TRAINING_PARAMETERS = "TrainingParameters";
  @SerializedName(SERIALIZED_NAME_TRAINING_PARAMETERS)
  private Map trainingParameters;

  public static final String SERIALIZED_NAME_INPUT_DATA_LOCATION_S3 = "InputDataLocationS3";
  @SerializedName(SERIALIZED_NAME_INPUT_DATA_LOCATION_S3)
  private String inputDataLocationS3;

  public static final String SERIALIZED_NAME_ML_MODEL_TYPE = "MLModelType";
  @SerializedName(SERIALIZED_NAME_ML_MODEL_TYPE)
  private MLModelType mlModelType;

  public static final String SERIALIZED_NAME_SCORE_THRESHOLD = "ScoreThreshold";
  @SerializedName(SERIALIZED_NAME_SCORE_THRESHOLD)
  private Float scoreThreshold;

  public static final String SERIALIZED_NAME_SCORE_THRESHOLD_LAST_UPDATED_AT = "ScoreThresholdLastUpdatedAt";
  @SerializedName(SERIALIZED_NAME_SCORE_THRESHOLD_LAST_UPDATED_AT)
  private OffsetDateTime scoreThresholdLastUpdatedAt;

  public static final String SERIALIZED_NAME_LOG_URI = "LogUri";
  @SerializedName(SERIALIZED_NAME_LOG_URI)
  private String logUri;

  public static final String SERIALIZED_NAME_MESSAGE = "Message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_COMPUTE_TIME = "ComputeTime";
  @SerializedName(SERIALIZED_NAME_COMPUTE_TIME)
  private Integer computeTime;

  public static final String SERIALIZED_NAME_FINISHED_AT = "FinishedAt";
  @SerializedName(SERIALIZED_NAME_FINISHED_AT)
  private OffsetDateTime finishedAt;

  public static final String SERIALIZED_NAME_STARTED_AT = "StartedAt";
  @SerializedName(SERIALIZED_NAME_STARTED_AT)
  private OffsetDateTime startedAt;

  public static final String SERIALIZED_NAME_RECIPE = "Recipe";
  @SerializedName(SERIALIZED_NAME_RECIPE)
  private String recipe;

  public static final String SERIALIZED_NAME_SCHEMA = "Schema";
  @SerializedName(SERIALIZED_NAME_SCHEMA)
  private String schema;

  public GetMLModelOutput() {
  }

  public GetMLModelOutput mlModelId(String mlModelId) {
    this.mlModelId = mlModelId;
    return this;
  }

  /**
   * Get mlModelId
   * @return mlModelId
   */
  @javax.annotation.Nullable
  public String getMlModelId() {
    return mlModelId;
  }

  public void setMlModelId(String mlModelId) {
    this.mlModelId = mlModelId;
  }


  public GetMLModelOutput trainingDataSourceId(String trainingDataSourceId) {
    this.trainingDataSourceId = trainingDataSourceId;
    return this;
  }

  /**
   * Get trainingDataSourceId
   * @return trainingDataSourceId
   */
  @javax.annotation.Nullable
  public String getTrainingDataSourceId() {
    return trainingDataSourceId;
  }

  public void setTrainingDataSourceId(String trainingDataSourceId) {
    this.trainingDataSourceId = trainingDataSourceId;
  }


  public GetMLModelOutput createdByIamUser(String createdByIamUser) {
    this.createdByIamUser = createdByIamUser;
    return this;
  }

  /**
   * Get createdByIamUser
   * @return createdByIamUser
   */
  @javax.annotation.Nullable
  public String getCreatedByIamUser() {
    return createdByIamUser;
  }

  public void setCreatedByIamUser(String createdByIamUser) {
    this.createdByIamUser = createdByIamUser;
  }


  public GetMLModelOutput createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public GetMLModelOutput lastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

  /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }


  public GetMLModelOutput name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetMLModelOutput status(EntityStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public EntityStatus getStatus() {
    return status;
  }

  public void setStatus(EntityStatus status) {
    this.status = status;
  }


  public GetMLModelOutput sizeInBytes(Integer sizeInBytes) {
    this.sizeInBytes = sizeInBytes;
    return this;
  }

  /**
   * Long integer type that is a 64-bit signed number.
   * @return sizeInBytes
   */
  @javax.annotation.Nullable
  public Integer getSizeInBytes() {
    return sizeInBytes;
  }

  public void setSizeInBytes(Integer sizeInBytes) {
    this.sizeInBytes = sizeInBytes;
  }


  public GetMLModelOutput endpointInfo(GetMLModelOutputEndpointInfo endpointInfo) {
    this.endpointInfo = endpointInfo;
    return this;
  }

  /**
   * Get endpointInfo
   * @return endpointInfo
   */
  @javax.annotation.Nullable
  public GetMLModelOutputEndpointInfo getEndpointInfo() {
    return endpointInfo;
  }

  public void setEndpointInfo(GetMLModelOutputEndpointInfo endpointInfo) {
    this.endpointInfo = endpointInfo;
  }


  public GetMLModelOutput trainingParameters(Map trainingParameters) {
    this.trainingParameters = trainingParameters;
    return this;
  }

  /**
   * Get trainingParameters
   * @return trainingParameters
   */
  @javax.annotation.Nullable
  public Map getTrainingParameters() {
    return trainingParameters;
  }

  public void setTrainingParameters(Map trainingParameters) {
    this.trainingParameters = trainingParameters;
  }


  public GetMLModelOutput inputDataLocationS3(String inputDataLocationS3) {
    this.inputDataLocationS3 = inputDataLocationS3;
    return this;
  }

  /**
   * Get inputDataLocationS3
   * @return inputDataLocationS3
   */
  @javax.annotation.Nullable
  public String getInputDataLocationS3() {
    return inputDataLocationS3;
  }

  public void setInputDataLocationS3(String inputDataLocationS3) {
    this.inputDataLocationS3 = inputDataLocationS3;
  }


  public GetMLModelOutput mlModelType(MLModelType mlModelType) {
    this.mlModelType = mlModelType;
    return this;
  }

  /**
   * Get mlModelType
   * @return mlModelType
   */
  @javax.annotation.Nullable
  public MLModelType getMlModelType() {
    return mlModelType;
  }

  public void setMlModelType(MLModelType mlModelType) {
    this.mlModelType = mlModelType;
  }


  public GetMLModelOutput scoreThreshold(Float scoreThreshold) {
    this.scoreThreshold = scoreThreshold;
    return this;
  }

  /**
   * Get scoreThreshold
   * @return scoreThreshold
   */
  @javax.annotation.Nullable
  public Float getScoreThreshold() {
    return scoreThreshold;
  }

  public void setScoreThreshold(Float scoreThreshold) {
    this.scoreThreshold = scoreThreshold;
  }


  public GetMLModelOutput scoreThresholdLastUpdatedAt(OffsetDateTime scoreThresholdLastUpdatedAt) {
    this.scoreThresholdLastUpdatedAt = scoreThresholdLastUpdatedAt;
    return this;
  }

  /**
   * Get scoreThresholdLastUpdatedAt
   * @return scoreThresholdLastUpdatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getScoreThresholdLastUpdatedAt() {
    return scoreThresholdLastUpdatedAt;
  }

  public void setScoreThresholdLastUpdatedAt(OffsetDateTime scoreThresholdLastUpdatedAt) {
    this.scoreThresholdLastUpdatedAt = scoreThresholdLastUpdatedAt;
  }


  public GetMLModelOutput logUri(String logUri) {
    this.logUri = logUri;
    return this;
  }

  /**
   * Get logUri
   * @return logUri
   */
  @javax.annotation.Nullable
  public String getLogUri() {
    return logUri;
  }

  public void setLogUri(String logUri) {
    this.logUri = logUri;
  }


  public GetMLModelOutput message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public GetMLModelOutput computeTime(Integer computeTime) {
    this.computeTime = computeTime;
    return this;
  }

  /**
   * Get computeTime
   * @return computeTime
   */
  @javax.annotation.Nullable
  public Integer getComputeTime() {
    return computeTime;
  }

  public void setComputeTime(Integer computeTime) {
    this.computeTime = computeTime;
  }


  public GetMLModelOutput finishedAt(OffsetDateTime finishedAt) {
    this.finishedAt = finishedAt;
    return this;
  }

  /**
   * Get finishedAt
   * @return finishedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getFinishedAt() {
    return finishedAt;
  }

  public void setFinishedAt(OffsetDateTime finishedAt) {
    this.finishedAt = finishedAt;
  }


  public GetMLModelOutput startedAt(OffsetDateTime startedAt) {
    this.startedAt = startedAt;
    return this;
  }

  /**
   * Get startedAt
   * @return startedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartedAt() {
    return startedAt;
  }

  public void setStartedAt(OffsetDateTime startedAt) {
    this.startedAt = startedAt;
  }


  public GetMLModelOutput recipe(String recipe) {
    this.recipe = recipe;
    return this;
  }

  /**
   * Get recipe
   * @return recipe
   */
  @javax.annotation.Nullable
  public String getRecipe() {
    return recipe;
  }

  public void setRecipe(String recipe) {
    this.recipe = recipe;
  }


  public GetMLModelOutput schema(String schema) {
    this.schema = schema;
    return this;
  }

  /**
   * Get schema
   * @return schema
   */
  @javax.annotation.Nullable
  public String getSchema() {
    return schema;
  }

  public void setSchema(String schema) {
    this.schema = schema;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMLModelOutput getMLModelOutput = (GetMLModelOutput) o;
    return Objects.equals(this.mlModelId, getMLModelOutput.mlModelId) &&
        Objects.equals(this.trainingDataSourceId, getMLModelOutput.trainingDataSourceId) &&
        Objects.equals(this.createdByIamUser, getMLModelOutput.createdByIamUser) &&
        Objects.equals(this.createdAt, getMLModelOutput.createdAt) &&
        Objects.equals(this.lastUpdatedAt, getMLModelOutput.lastUpdatedAt) &&
        Objects.equals(this.name, getMLModelOutput.name) &&
        Objects.equals(this.status, getMLModelOutput.status) &&
        Objects.equals(this.sizeInBytes, getMLModelOutput.sizeInBytes) &&
        Objects.equals(this.endpointInfo, getMLModelOutput.endpointInfo) &&
        Objects.equals(this.trainingParameters, getMLModelOutput.trainingParameters) &&
        Objects.equals(this.inputDataLocationS3, getMLModelOutput.inputDataLocationS3) &&
        Objects.equals(this.mlModelType, getMLModelOutput.mlModelType) &&
        Objects.equals(this.scoreThreshold, getMLModelOutput.scoreThreshold) &&
        Objects.equals(this.scoreThresholdLastUpdatedAt, getMLModelOutput.scoreThresholdLastUpdatedAt) &&
        Objects.equals(this.logUri, getMLModelOutput.logUri) &&
        Objects.equals(this.message, getMLModelOutput.message) &&
        Objects.equals(this.computeTime, getMLModelOutput.computeTime) &&
        Objects.equals(this.finishedAt, getMLModelOutput.finishedAt) &&
        Objects.equals(this.startedAt, getMLModelOutput.startedAt) &&
        Objects.equals(this.recipe, getMLModelOutput.recipe) &&
        Objects.equals(this.schema, getMLModelOutput.schema);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mlModelId, trainingDataSourceId, createdByIamUser, createdAt, lastUpdatedAt, name, status, sizeInBytes, endpointInfo, trainingParameters, inputDataLocationS3, mlModelType, scoreThreshold, scoreThresholdLastUpdatedAt, logUri, message, computeTime, finishedAt, startedAt, recipe, schema);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMLModelOutput {\n");
    sb.append("    mlModelId: ").append(toIndentedString(mlModelId)).append("\n");
    sb.append("    trainingDataSourceId: ").append(toIndentedString(trainingDataSourceId)).append("\n");
    sb.append("    createdByIamUser: ").append(toIndentedString(createdByIamUser)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    sizeInBytes: ").append(toIndentedString(sizeInBytes)).append("\n");
    sb.append("    endpointInfo: ").append(toIndentedString(endpointInfo)).append("\n");
    sb.append("    trainingParameters: ").append(toIndentedString(trainingParameters)).append("\n");
    sb.append("    inputDataLocationS3: ").append(toIndentedString(inputDataLocationS3)).append("\n");
    sb.append("    mlModelType: ").append(toIndentedString(mlModelType)).append("\n");
    sb.append("    scoreThreshold: ").append(toIndentedString(scoreThreshold)).append("\n");
    sb.append("    scoreThresholdLastUpdatedAt: ").append(toIndentedString(scoreThresholdLastUpdatedAt)).append("\n");
    sb.append("    logUri: ").append(toIndentedString(logUri)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    computeTime: ").append(toIndentedString(computeTime)).append("\n");
    sb.append("    finishedAt: ").append(toIndentedString(finishedAt)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    recipe: ").append(toIndentedString(recipe)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MLModelId");
    openapiFields.add("TrainingDataSourceId");
    openapiFields.add("CreatedByIamUser");
    openapiFields.add("CreatedAt");
    openapiFields.add("LastUpdatedAt");
    openapiFields.add("Name");
    openapiFields.add("Status");
    openapiFields.add("SizeInBytes");
    openapiFields.add("EndpointInfo");
    openapiFields.add("TrainingParameters");
    openapiFields.add("InputDataLocationS3");
    openapiFields.add("MLModelType");
    openapiFields.add("ScoreThreshold");
    openapiFields.add("ScoreThresholdLastUpdatedAt");
    openapiFields.add("LogUri");
    openapiFields.add("Message");
    openapiFields.add("ComputeTime");
    openapiFields.add("FinishedAt");
    openapiFields.add("StartedAt");
    openapiFields.add("Recipe");
    openapiFields.add("Schema");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetMLModelOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetMLModelOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetMLModelOutput is not found in the empty JSON string", GetMLModelOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetMLModelOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetMLModelOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `MLModelId`
      if (jsonObj.get("MLModelId") != null && !jsonObj.get("MLModelId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MLModelId"));
      }
      // validate the optional field `TrainingDataSourceId`
      if (jsonObj.get("TrainingDataSourceId") != null && !jsonObj.get("TrainingDataSourceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TrainingDataSourceId"));
      }
      // validate the optional field `CreatedByIamUser`
      if (jsonObj.get("CreatedByIamUser") != null && !jsonObj.get("CreatedByIamUser").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CreatedByIamUser"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `LastUpdatedAt`
      if (jsonObj.get("LastUpdatedAt") != null && !jsonObj.get("LastUpdatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdatedAt"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        EntityStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `EndpointInfo`
      if (jsonObj.get("EndpointInfo") != null && !jsonObj.get("EndpointInfo").isJsonNull()) {
        GetMLModelOutputEndpointInfo.validateJsonElement(jsonObj.get("EndpointInfo"));
      }
      // validate the optional field `TrainingParameters`
      if (jsonObj.get("TrainingParameters") != null && !jsonObj.get("TrainingParameters").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("TrainingParameters"));
      }
      // validate the optional field `InputDataLocationS3`
      if (jsonObj.get("InputDataLocationS3") != null && !jsonObj.get("InputDataLocationS3").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InputDataLocationS3"));
      }
      // validate the optional field `MLModelType`
      if (jsonObj.get("MLModelType") != null && !jsonObj.get("MLModelType").isJsonNull()) {
        MLModelType.validateJsonElement(jsonObj.get("MLModelType"));
      }
      // validate the optional field `ScoreThreshold`
      if (jsonObj.get("ScoreThreshold") != null && !jsonObj.get("ScoreThreshold").isJsonNull()) {
        Float.validateJsonElement(jsonObj.get("ScoreThreshold"));
      }
      // validate the optional field `ScoreThresholdLastUpdatedAt`
      if (jsonObj.get("ScoreThresholdLastUpdatedAt") != null && !jsonObj.get("ScoreThresholdLastUpdatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ScoreThresholdLastUpdatedAt"));
      }
      // validate the optional field `LogUri`
      if (jsonObj.get("LogUri") != null && !jsonObj.get("LogUri").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LogUri"));
      }
      // validate the optional field `Message`
      if (jsonObj.get("Message") != null && !jsonObj.get("Message").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Message"));
      }
      // validate the optional field `ComputeTime`
      if (jsonObj.get("ComputeTime") != null && !jsonObj.get("ComputeTime").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ComputeTime"));
      }
      // validate the optional field `FinishedAt`
      if (jsonObj.get("FinishedAt") != null && !jsonObj.get("FinishedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("FinishedAt"));
      }
      // validate the optional field `StartedAt`
      if (jsonObj.get("StartedAt") != null && !jsonObj.get("StartedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartedAt"));
      }
      // validate the optional field `Recipe`
      if (jsonObj.get("Recipe") != null && !jsonObj.get("Recipe").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Recipe"));
      }
      // validate the optional field `Schema`
      if (jsonObj.get("Schema") != null && !jsonObj.get("Schema").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Schema"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetMLModelOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetMLModelOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetMLModelOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetMLModelOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<GetMLModelOutput>() {
           @Override
           public void write(JsonWriter out, GetMLModelOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetMLModelOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetMLModelOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetMLModelOutput
   * @throws IOException if the JSON string is invalid with respect to GetMLModelOutput
   */
  public static GetMLModelOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetMLModelOutput.class);
  }

  /**
   * Convert an instance of GetMLModelOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

