/*
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.EntityStatus;
import org.openapitools.client.model.GetEvaluationOutputPerformanceMetrics;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the output of a &lt;code&gt;GetEvaluation&lt;/code&gt; operation and describes an &lt;code&gt;Evaluation&lt;/code&gt;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:53.196548-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetEvaluationOutput {
  public static final String SERIALIZED_NAME_EVALUATION_ID = "EvaluationId";
  @SerializedName(SERIALIZED_NAME_EVALUATION_ID)
  private String evaluationId;

  public static final String SERIALIZED_NAME_ML_MODEL_ID = "MLModelId";
  @SerializedName(SERIALIZED_NAME_ML_MODEL_ID)
  private String mlModelId;

  public static final String SERIALIZED_NAME_EVALUATION_DATA_SOURCE_ID = "EvaluationDataSourceId";
  @SerializedName(SERIALIZED_NAME_EVALUATION_DATA_SOURCE_ID)
  private String evaluationDataSourceId;

  public static final String SERIALIZED_NAME_INPUT_DATA_LOCATION_S3 = "InputDataLocationS3";
  @SerializedName(SERIALIZED_NAME_INPUT_DATA_LOCATION_S3)
  private String inputDataLocationS3;

  public static final String SERIALIZED_NAME_CREATED_BY_IAM_USER = "CreatedByIamUser";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_IAM_USER)
  private String createdByIamUser;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_LAST_UPDATED_AT = "LastUpdatedAt";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_AT)
  private OffsetDateTime lastUpdatedAt;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private EntityStatus status;

  public static final String SERIALIZED_NAME_PERFORMANCE_METRICS = "PerformanceMetrics";
  @SerializedName(SERIALIZED_NAME_PERFORMANCE_METRICS)
  private GetEvaluationOutputPerformanceMetrics performanceMetrics;

  public static final String SERIALIZED_NAME_LOG_URI = "LogUri";
  @SerializedName(SERIALIZED_NAME_LOG_URI)
  private String logUri;

  public static final String SERIALIZED_NAME_MESSAGE = "Message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_COMPUTE_TIME = "ComputeTime";
  @SerializedName(SERIALIZED_NAME_COMPUTE_TIME)
  private Integer computeTime;

  public static final String SERIALIZED_NAME_FINISHED_AT = "FinishedAt";
  @SerializedName(SERIALIZED_NAME_FINISHED_AT)
  private OffsetDateTime finishedAt;

  public static final String SERIALIZED_NAME_STARTED_AT = "StartedAt";
  @SerializedName(SERIALIZED_NAME_STARTED_AT)
  private OffsetDateTime startedAt;

  public GetEvaluationOutput() {
  }

  public GetEvaluationOutput evaluationId(String evaluationId) {
    this.evaluationId = evaluationId;
    return this;
  }

  /**
   * Get evaluationId
   * @return evaluationId
   */
  @javax.annotation.Nullable
  public String getEvaluationId() {
    return evaluationId;
  }

  public void setEvaluationId(String evaluationId) {
    this.evaluationId = evaluationId;
  }


  public GetEvaluationOutput mlModelId(String mlModelId) {
    this.mlModelId = mlModelId;
    return this;
  }

  /**
   * Get mlModelId
   * @return mlModelId
   */
  @javax.annotation.Nullable
  public String getMlModelId() {
    return mlModelId;
  }

  public void setMlModelId(String mlModelId) {
    this.mlModelId = mlModelId;
  }


  public GetEvaluationOutput evaluationDataSourceId(String evaluationDataSourceId) {
    this.evaluationDataSourceId = evaluationDataSourceId;
    return this;
  }

  /**
   * Get evaluationDataSourceId
   * @return evaluationDataSourceId
   */
  @javax.annotation.Nullable
  public String getEvaluationDataSourceId() {
    return evaluationDataSourceId;
  }

  public void setEvaluationDataSourceId(String evaluationDataSourceId) {
    this.evaluationDataSourceId = evaluationDataSourceId;
  }


  public GetEvaluationOutput inputDataLocationS3(String inputDataLocationS3) {
    this.inputDataLocationS3 = inputDataLocationS3;
    return this;
  }

  /**
   * Get inputDataLocationS3
   * @return inputDataLocationS3
   */
  @javax.annotation.Nullable
  public String getInputDataLocationS3() {
    return inputDataLocationS3;
  }

  public void setInputDataLocationS3(String inputDataLocationS3) {
    this.inputDataLocationS3 = inputDataLocationS3;
  }


  public GetEvaluationOutput createdByIamUser(String createdByIamUser) {
    this.createdByIamUser = createdByIamUser;
    return this;
  }

  /**
   * Get createdByIamUser
   * @return createdByIamUser
   */
  @javax.annotation.Nullable
  public String getCreatedByIamUser() {
    return createdByIamUser;
  }

  public void setCreatedByIamUser(String createdByIamUser) {
    this.createdByIamUser = createdByIamUser;
  }


  public GetEvaluationOutput createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public GetEvaluationOutput lastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

  /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }


  public GetEvaluationOutput name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetEvaluationOutput status(EntityStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public EntityStatus getStatus() {
    return status;
  }

  public void setStatus(EntityStatus status) {
    this.status = status;
  }


  public GetEvaluationOutput performanceMetrics(GetEvaluationOutputPerformanceMetrics performanceMetrics) {
    this.performanceMetrics = performanceMetrics;
    return this;
  }

  /**
   * Get performanceMetrics
   * @return performanceMetrics
   */
  @javax.annotation.Nullable
  public GetEvaluationOutputPerformanceMetrics getPerformanceMetrics() {
    return performanceMetrics;
  }

  public void setPerformanceMetrics(GetEvaluationOutputPerformanceMetrics performanceMetrics) {
    this.performanceMetrics = performanceMetrics;
  }


  public GetEvaluationOutput logUri(String logUri) {
    this.logUri = logUri;
    return this;
  }

  /**
   * Get logUri
   * @return logUri
   */
  @javax.annotation.Nullable
  public String getLogUri() {
    return logUri;
  }

  public void setLogUri(String logUri) {
    this.logUri = logUri;
  }


  public GetEvaluationOutput message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public GetEvaluationOutput computeTime(Integer computeTime) {
    this.computeTime = computeTime;
    return this;
  }

  /**
   * Get computeTime
   * @return computeTime
   */
  @javax.annotation.Nullable
  public Integer getComputeTime() {
    return computeTime;
  }

  public void setComputeTime(Integer computeTime) {
    this.computeTime = computeTime;
  }


  public GetEvaluationOutput finishedAt(OffsetDateTime finishedAt) {
    this.finishedAt = finishedAt;
    return this;
  }

  /**
   * Get finishedAt
   * @return finishedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getFinishedAt() {
    return finishedAt;
  }

  public void setFinishedAt(OffsetDateTime finishedAt) {
    this.finishedAt = finishedAt;
  }


  public GetEvaluationOutput startedAt(OffsetDateTime startedAt) {
    this.startedAt = startedAt;
    return this;
  }

  /**
   * Get startedAt
   * @return startedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartedAt() {
    return startedAt;
  }

  public void setStartedAt(OffsetDateTime startedAt) {
    this.startedAt = startedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetEvaluationOutput getEvaluationOutput = (GetEvaluationOutput) o;
    return Objects.equals(this.evaluationId, getEvaluationOutput.evaluationId) &&
        Objects.equals(this.mlModelId, getEvaluationOutput.mlModelId) &&
        Objects.equals(this.evaluationDataSourceId, getEvaluationOutput.evaluationDataSourceId) &&
        Objects.equals(this.inputDataLocationS3, getEvaluationOutput.inputDataLocationS3) &&
        Objects.equals(this.createdByIamUser, getEvaluationOutput.createdByIamUser) &&
        Objects.equals(this.createdAt, getEvaluationOutput.createdAt) &&
        Objects.equals(this.lastUpdatedAt, getEvaluationOutput.lastUpdatedAt) &&
        Objects.equals(this.name, getEvaluationOutput.name) &&
        Objects.equals(this.status, getEvaluationOutput.status) &&
        Objects.equals(this.performanceMetrics, getEvaluationOutput.performanceMetrics) &&
        Objects.equals(this.logUri, getEvaluationOutput.logUri) &&
        Objects.equals(this.message, getEvaluationOutput.message) &&
        Objects.equals(this.computeTime, getEvaluationOutput.computeTime) &&
        Objects.equals(this.finishedAt, getEvaluationOutput.finishedAt) &&
        Objects.equals(this.startedAt, getEvaluationOutput.startedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(evaluationId, mlModelId, evaluationDataSourceId, inputDataLocationS3, createdByIamUser, createdAt, lastUpdatedAt, name, status, performanceMetrics, logUri, message, computeTime, finishedAt, startedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetEvaluationOutput {\n");
    sb.append("    evaluationId: ").append(toIndentedString(evaluationId)).append("\n");
    sb.append("    mlModelId: ").append(toIndentedString(mlModelId)).append("\n");
    sb.append("    evaluationDataSourceId: ").append(toIndentedString(evaluationDataSourceId)).append("\n");
    sb.append("    inputDataLocationS3: ").append(toIndentedString(inputDataLocationS3)).append("\n");
    sb.append("    createdByIamUser: ").append(toIndentedString(createdByIamUser)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    performanceMetrics: ").append(toIndentedString(performanceMetrics)).append("\n");
    sb.append("    logUri: ").append(toIndentedString(logUri)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    computeTime: ").append(toIndentedString(computeTime)).append("\n");
    sb.append("    finishedAt: ").append(toIndentedString(finishedAt)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EvaluationId");
    openapiFields.add("MLModelId");
    openapiFields.add("EvaluationDataSourceId");
    openapiFields.add("InputDataLocationS3");
    openapiFields.add("CreatedByIamUser");
    openapiFields.add("CreatedAt");
    openapiFields.add("LastUpdatedAt");
    openapiFields.add("Name");
    openapiFields.add("Status");
    openapiFields.add("PerformanceMetrics");
    openapiFields.add("LogUri");
    openapiFields.add("Message");
    openapiFields.add("ComputeTime");
    openapiFields.add("FinishedAt");
    openapiFields.add("StartedAt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetEvaluationOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetEvaluationOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetEvaluationOutput is not found in the empty JSON string", GetEvaluationOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetEvaluationOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetEvaluationOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `EvaluationId`
      if (jsonObj.get("EvaluationId") != null && !jsonObj.get("EvaluationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EvaluationId"));
      }
      // validate the optional field `MLModelId`
      if (jsonObj.get("MLModelId") != null && !jsonObj.get("MLModelId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MLModelId"));
      }
      // validate the optional field `EvaluationDataSourceId`
      if (jsonObj.get("EvaluationDataSourceId") != null && !jsonObj.get("EvaluationDataSourceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EvaluationDataSourceId"));
      }
      // validate the optional field `InputDataLocationS3`
      if (jsonObj.get("InputDataLocationS3") != null && !jsonObj.get("InputDataLocationS3").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InputDataLocationS3"));
      }
      // validate the optional field `CreatedByIamUser`
      if (jsonObj.get("CreatedByIamUser") != null && !jsonObj.get("CreatedByIamUser").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CreatedByIamUser"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `LastUpdatedAt`
      if (jsonObj.get("LastUpdatedAt") != null && !jsonObj.get("LastUpdatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdatedAt"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        EntityStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `PerformanceMetrics`
      if (jsonObj.get("PerformanceMetrics") != null && !jsonObj.get("PerformanceMetrics").isJsonNull()) {
        GetEvaluationOutputPerformanceMetrics.validateJsonElement(jsonObj.get("PerformanceMetrics"));
      }
      // validate the optional field `LogUri`
      if (jsonObj.get("LogUri") != null && !jsonObj.get("LogUri").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LogUri"));
      }
      // validate the optional field `Message`
      if (jsonObj.get("Message") != null && !jsonObj.get("Message").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Message"));
      }
      // validate the optional field `ComputeTime`
      if (jsonObj.get("ComputeTime") != null && !jsonObj.get("ComputeTime").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ComputeTime"));
      }
      // validate the optional field `FinishedAt`
      if (jsonObj.get("FinishedAt") != null && !jsonObj.get("FinishedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("FinishedAt"));
      }
      // validate the optional field `StartedAt`
      if (jsonObj.get("StartedAt") != null && !jsonObj.get("StartedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartedAt"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetEvaluationOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetEvaluationOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetEvaluationOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetEvaluationOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<GetEvaluationOutput>() {
           @Override
           public void write(JsonWriter out, GetEvaluationOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetEvaluationOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetEvaluationOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetEvaluationOutput
   * @throws IOException if the JSON string is invalid with respect to GetEvaluationOutput
   */
  public static GetEvaluationOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetEvaluationOutput.class);
  }

  /**
   * Convert an instance of GetEvaluationOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

