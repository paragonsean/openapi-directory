/*
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets MLModelFilterVariable
 */
@JsonAdapter(MLModelFilterVariable.Adapter.class)
public enum MLModelFilterVariable {
  
  CREATED_AT("CreatedAt"),
  
  LAST_UPDATED_AT("LastUpdatedAt"),
  
  STATUS("Status"),
  
  NAME("Name"),
  
  IAM_USER("IAMUser"),
  
  TRAINING_DATA_SOURCE_ID("TrainingDataSourceId"),
  
  REALTIME_ENDPOINT_STATUS("RealtimeEndpointStatus"),
  
  ML_MODEL_TYPE("MLModelType"),
  
  ALGORITHM("Algorithm"),
  
  TRAINING_DATA_URI("TrainingDataURI");

  private String value;

  MLModelFilterVariable(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static MLModelFilterVariable fromValue(String value) {
    for (MLModelFilterVariable b : MLModelFilterVariable.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<MLModelFilterVariable> {
    @Override
    public void write(final JsonWriter jsonWriter, final MLModelFilterVariable enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public MLModelFilterVariable read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return MLModelFilterVariable.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    MLModelFilterVariable.fromValue(value);
  }
}

