/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonMachineLearning);
  }
}(this, function(expect, AmazonMachineLearning) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonMachineLearning.DataSource();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DataSource', function() {
    it('should create an instance of DataSource', function() {
      // uncomment below and update the code to test DataSource
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be.a(AmazonMachineLearning.DataSource);
    });

    it('should have the property dataSourceId (base name: "DataSourceId")', function() {
      // uncomment below and update the code to test the property dataSourceId
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

    it('should have the property dataLocationS3 (base name: "DataLocationS3")', function() {
      // uncomment below and update the code to test the property dataLocationS3
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

    it('should have the property dataRearrangement (base name: "DataRearrangement")', function() {
      // uncomment below and update the code to test the property dataRearrangement
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

    it('should have the property createdByIamUser (base name: "CreatedByIamUser")', function() {
      // uncomment below and update the code to test the property createdByIamUser
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "CreatedAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdatedAt (base name: "LastUpdatedAt")', function() {
      // uncomment below and update the code to test the property lastUpdatedAt
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

    it('should have the property dataSizeInBytes (base name: "DataSizeInBytes")', function() {
      // uncomment below and update the code to test the property dataSizeInBytes
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

    it('should have the property numberOfFiles (base name: "NumberOfFiles")', function() {
      // uncomment below and update the code to test the property numberOfFiles
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

    it('should have the property message (base name: "Message")', function() {
      // uncomment below and update the code to test the property message
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

    it('should have the property redshiftMetadata (base name: "RedshiftMetadata")', function() {
      // uncomment below and update the code to test the property redshiftMetadata
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

    it('should have the property rDSMetadata (base name: "RDSMetadata")', function() {
      // uncomment below and update the code to test the property rDSMetadata
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

    it('should have the property roleARN (base name: "RoleARN")', function() {
      // uncomment below and update the code to test the property roleARN
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

    it('should have the property computeStatistics (base name: "ComputeStatistics")', function() {
      // uncomment below and update the code to test the property computeStatistics
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

    it('should have the property computeTime (base name: "ComputeTime")', function() {
      // uncomment below and update the code to test the property computeTime
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

    it('should have the property finishedAt (base name: "FinishedAt")', function() {
      // uncomment below and update the code to test the property finishedAt
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

    it('should have the property startedAt (base name: "StartedAt")', function() {
      // uncomment below and update the code to test the property startedAt
      //var instance = new AmazonMachineLearning.DataSource();
      //expect(instance).to.be();
    });

  });

}));
