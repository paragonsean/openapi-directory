/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EntityStatus from './EntityStatus';
import RDSMetadata from './RDSMetadata';
import RedshiftMetadata from './RedshiftMetadata';

/**
 * The GetDataSourceOutput model module.
 * @module model/GetDataSourceOutput
 * @version 2014-12-12
 */
class GetDataSourceOutput {
    /**
     * Constructs a new <code>GetDataSourceOutput</code>.
     * Represents the output of a &lt;code&gt;GetDataSource&lt;/code&gt; operation and describes a &lt;code&gt;DataSource&lt;/code&gt;.
     * @alias module:model/GetDataSourceOutput
     */
    constructor() { 
        
        GetDataSourceOutput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetDataSourceOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetDataSourceOutput} obj Optional instance to populate.
     * @return {module:model/GetDataSourceOutput} The populated <code>GetDataSourceOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetDataSourceOutput();

            if (data.hasOwnProperty('DataSourceId')) {
                obj['DataSourceId'] = ApiClient.convertToType(data['DataSourceId'], 'String');
            }
            if (data.hasOwnProperty('DataLocationS3')) {
                obj['DataLocationS3'] = ApiClient.convertToType(data['DataLocationS3'], 'String');
            }
            if (data.hasOwnProperty('DataRearrangement')) {
                obj['DataRearrangement'] = ApiClient.convertToType(data['DataRearrangement'], 'String');
            }
            if (data.hasOwnProperty('CreatedByIamUser')) {
                obj['CreatedByIamUser'] = ApiClient.convertToType(data['CreatedByIamUser'], 'String');
            }
            if (data.hasOwnProperty('CreatedAt')) {
                obj['CreatedAt'] = ApiClient.convertToType(data['CreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('LastUpdatedAt')) {
                obj['LastUpdatedAt'] = ApiClient.convertToType(data['LastUpdatedAt'], 'Date');
            }
            if (data.hasOwnProperty('DataSizeInBytes')) {
                obj['DataSizeInBytes'] = ApiClient.convertToType(data['DataSizeInBytes'], 'Number');
            }
            if (data.hasOwnProperty('NumberOfFiles')) {
                obj['NumberOfFiles'] = ApiClient.convertToType(data['NumberOfFiles'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], EntityStatus);
            }
            if (data.hasOwnProperty('LogUri')) {
                obj['LogUri'] = ApiClient.convertToType(data['LogUri'], 'String');
            }
            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
            if (data.hasOwnProperty('RedshiftMetadata')) {
                obj['RedshiftMetadata'] = RedshiftMetadata.constructFromObject(data['RedshiftMetadata']);
            }
            if (data.hasOwnProperty('RDSMetadata')) {
                obj['RDSMetadata'] = RDSMetadata.constructFromObject(data['RDSMetadata']);
            }
            if (data.hasOwnProperty('RoleARN')) {
                obj['RoleARN'] = ApiClient.convertToType(data['RoleARN'], 'String');
            }
            if (data.hasOwnProperty('ComputeStatistics')) {
                obj['ComputeStatistics'] = ApiClient.convertToType(data['ComputeStatistics'], 'Boolean');
            }
            if (data.hasOwnProperty('ComputeTime')) {
                obj['ComputeTime'] = ApiClient.convertToType(data['ComputeTime'], 'Number');
            }
            if (data.hasOwnProperty('FinishedAt')) {
                obj['FinishedAt'] = ApiClient.convertToType(data['FinishedAt'], 'Date');
            }
            if (data.hasOwnProperty('StartedAt')) {
                obj['StartedAt'] = ApiClient.convertToType(data['StartedAt'], 'Date');
            }
            if (data.hasOwnProperty('DataSourceSchema')) {
                obj['DataSourceSchema'] = ApiClient.convertToType(data['DataSourceSchema'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetDataSourceOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetDataSourceOutput</code>.
     */
    static validateJSON(data) {
        // validate the optional field `DataSourceId`
        if (data['DataSourceId']) { // data not null
          String.validateJSON(data['DataSourceId']);
        }
        // validate the optional field `DataLocationS3`
        if (data['DataLocationS3']) { // data not null
          String.validateJSON(data['DataLocationS3']);
        }
        // validate the optional field `DataRearrangement`
        if (data['DataRearrangement']) { // data not null
          String.validateJSON(data['DataRearrangement']);
        }
        // validate the optional field `CreatedByIamUser`
        if (data['CreatedByIamUser']) { // data not null
          String.validateJSON(data['CreatedByIamUser']);
        }
        // validate the optional field `CreatedAt`
        if (data['CreatedAt']) { // data not null
          Date.validateJSON(data['CreatedAt']);
        }
        // validate the optional field `LastUpdatedAt`
        if (data['LastUpdatedAt']) { // data not null
          Date.validateJSON(data['LastUpdatedAt']);
        }
        // validate the optional field `DataSizeInBytes`
        if (data['DataSizeInBytes']) { // data not null
          Number.validateJSON(data['DataSizeInBytes']);
        }
        // validate the optional field `NumberOfFiles`
        if (data['NumberOfFiles']) { // data not null
          Number.validateJSON(data['NumberOfFiles']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          EntityStatus.validateJSON(data['Status']);
        }
        // validate the optional field `LogUri`
        if (data['LogUri']) { // data not null
          String.validateJSON(data['LogUri']);
        }
        // validate the optional field `Message`
        if (data['Message']) { // data not null
          String.validateJSON(data['Message']);
        }
        // validate the optional field `RedshiftMetadata`
        if (data['RedshiftMetadata']) { // data not null
          RedshiftMetadata.validateJSON(data['RedshiftMetadata']);
        }
        // validate the optional field `RDSMetadata`
        if (data['RDSMetadata']) { // data not null
          RDSMetadata.validateJSON(data['RDSMetadata']);
        }
        // ensure the json data is a string
        if (data['RoleARN'] && !(typeof data['RoleARN'] === 'string' || data['RoleARN'] instanceof String)) {
            throw new Error("Expected the field `RoleARN` to be a primitive type in the JSON string but got " + data['RoleARN']);
        }
        // validate the optional field `ComputeStatistics`
        if (data['ComputeStatistics']) { // data not null
          Boolean.validateJSON(data['ComputeStatistics']);
        }
        // validate the optional field `ComputeTime`
        if (data['ComputeTime']) { // data not null
          Number.validateJSON(data['ComputeTime']);
        }
        // validate the optional field `FinishedAt`
        if (data['FinishedAt']) { // data not null
          Date.validateJSON(data['FinishedAt']);
        }
        // validate the optional field `StartedAt`
        if (data['StartedAt']) { // data not null
          Date.validateJSON(data['StartedAt']);
        }
        // validate the optional field `DataSourceSchema`
        if (data['DataSourceSchema']) { // data not null
          String.validateJSON(data['DataSourceSchema']);
        }

        return true;
    }


}



/**
 * @member {String} DataSourceId
 */
GetDataSourceOutput.prototype['DataSourceId'] = undefined;

/**
 * @member {String} DataLocationS3
 */
GetDataSourceOutput.prototype['DataLocationS3'] = undefined;

/**
 * @member {String} DataRearrangement
 */
GetDataSourceOutput.prototype['DataRearrangement'] = undefined;

/**
 * @member {String} CreatedByIamUser
 */
GetDataSourceOutput.prototype['CreatedByIamUser'] = undefined;

/**
 * @member {Date} CreatedAt
 */
GetDataSourceOutput.prototype['CreatedAt'] = undefined;

/**
 * @member {Date} LastUpdatedAt
 */
GetDataSourceOutput.prototype['LastUpdatedAt'] = undefined;

/**
 * @member {Number} DataSizeInBytes
 */
GetDataSourceOutput.prototype['DataSizeInBytes'] = undefined;

/**
 * @member {Number} NumberOfFiles
 */
GetDataSourceOutput.prototype['NumberOfFiles'] = undefined;

/**
 * @member {String} Name
 */
GetDataSourceOutput.prototype['Name'] = undefined;

/**
 * @member {module:model/EntityStatus} Status
 */
GetDataSourceOutput.prototype['Status'] = undefined;

/**
 * @member {String} LogUri
 */
GetDataSourceOutput.prototype['LogUri'] = undefined;

/**
 * @member {String} Message
 */
GetDataSourceOutput.prototype['Message'] = undefined;

/**
 * @member {module:model/RedshiftMetadata} RedshiftMetadata
 */
GetDataSourceOutput.prototype['RedshiftMetadata'] = undefined;

/**
 * @member {module:model/RDSMetadata} RDSMetadata
 */
GetDataSourceOutput.prototype['RDSMetadata'] = undefined;

/**
 * The Amazon Resource Name (ARN) of an <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html#roles-about-termsandconcepts\">AWS IAM Role</a>, such as the following: arn:aws:iam::account:role/rolename. 
 * @member {String} RoleARN
 */
GetDataSourceOutput.prototype['RoleARN'] = undefined;

/**
 * @member {Boolean} ComputeStatistics
 */
GetDataSourceOutput.prototype['ComputeStatistics'] = undefined;

/**
 * @member {Number} ComputeTime
 */
GetDataSourceOutput.prototype['ComputeTime'] = undefined;

/**
 * @member {Date} FinishedAt
 */
GetDataSourceOutput.prototype['FinishedAt'] = undefined;

/**
 * @member {Date} StartedAt
 */
GetDataSourceOutput.prototype['StartedAt'] = undefined;

/**
 * @member {String} DataSourceSchema
 */
GetDataSourceOutput.prototype['DataSourceSchema'] = undefined;






export default GetDataSourceOutput;

