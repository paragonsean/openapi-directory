/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MLModelType from './MLModelType';

/**
 * The CreateMLModelInput model module.
 * @module model/CreateMLModelInput
 * @version 2014-12-12
 */
class CreateMLModelInput {
    /**
     * Constructs a new <code>CreateMLModelInput</code>.
     * @alias module:model/CreateMLModelInput
     * @param mLModelId {String} 
     * @param mLModelType {module:model/MLModelType} 
     * @param trainingDataSourceId {String} 
     */
    constructor(mLModelId, mLModelType, trainingDataSourceId) { 
        
        CreateMLModelInput.initialize(this, mLModelId, mLModelType, trainingDataSourceId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, mLModelId, mLModelType, trainingDataSourceId) { 
        obj['MLModelId'] = mLModelId;
        obj['MLModelType'] = mLModelType;
        obj['TrainingDataSourceId'] = trainingDataSourceId;
    }

    /**
     * Constructs a <code>CreateMLModelInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateMLModelInput} obj Optional instance to populate.
     * @return {module:model/CreateMLModelInput} The populated <code>CreateMLModelInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateMLModelInput();

            if (data.hasOwnProperty('MLModelId')) {
                obj['MLModelId'] = ApiClient.convertToType(data['MLModelId'], 'String');
            }
            if (data.hasOwnProperty('MLModelName')) {
                obj['MLModelName'] = ApiClient.convertToType(data['MLModelName'], 'String');
            }
            if (data.hasOwnProperty('MLModelType')) {
                obj['MLModelType'] = ApiClient.convertToType(data['MLModelType'], MLModelType);
            }
            if (data.hasOwnProperty('Parameters')) {
                obj['Parameters'] = ApiClient.convertToType(data['Parameters'], Object);
            }
            if (data.hasOwnProperty('TrainingDataSourceId')) {
                obj['TrainingDataSourceId'] = ApiClient.convertToType(data['TrainingDataSourceId'], 'String');
            }
            if (data.hasOwnProperty('Recipe')) {
                obj['Recipe'] = ApiClient.convertToType(data['Recipe'], 'String');
            }
            if (data.hasOwnProperty('RecipeUri')) {
                obj['RecipeUri'] = ApiClient.convertToType(data['RecipeUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateMLModelInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateMLModelInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateMLModelInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `MLModelId`
        if (data['MLModelId']) { // data not null
          String.validateJSON(data['MLModelId']);
        }
        // validate the optional field `MLModelName`
        if (data['MLModelName']) { // data not null
          String.validateJSON(data['MLModelName']);
        }
        // validate the optional field `MLModelType`
        if (data['MLModelType']) { // data not null
          MLModelType.validateJSON(data['MLModelType']);
        }
        // validate the optional field `Parameters`
        if (data['Parameters']) { // data not null
          Object.validateJSON(data['Parameters']);
        }
        // validate the optional field `TrainingDataSourceId`
        if (data['TrainingDataSourceId']) { // data not null
          String.validateJSON(data['TrainingDataSourceId']);
        }
        // validate the optional field `Recipe`
        if (data['Recipe']) { // data not null
          String.validateJSON(data['Recipe']);
        }
        // validate the optional field `RecipeUri`
        if (data['RecipeUri']) { // data not null
          String.validateJSON(data['RecipeUri']);
        }

        return true;
    }


}

CreateMLModelInput.RequiredProperties = ["MLModelId", "MLModelType", "TrainingDataSourceId"];

/**
 * @member {String} MLModelId
 */
CreateMLModelInput.prototype['MLModelId'] = undefined;

/**
 * @member {String} MLModelName
 */
CreateMLModelInput.prototype['MLModelName'] = undefined;

/**
 * @member {module:model/MLModelType} MLModelType
 */
CreateMLModelInput.prototype['MLModelType'] = undefined;

/**
 * @member {Object} Parameters
 */
CreateMLModelInput.prototype['Parameters'] = undefined;

/**
 * @member {String} TrainingDataSourceId
 */
CreateMLModelInput.prototype['TrainingDataSourceId'] = undefined;

/**
 * @member {String} Recipe
 */
CreateMLModelInput.prototype['Recipe'] = undefined;

/**
 * @member {String} RecipeUri
 */
CreateMLModelInput.prototype['RecipeUri'] = undefined;






export default CreateMLModelInput;

