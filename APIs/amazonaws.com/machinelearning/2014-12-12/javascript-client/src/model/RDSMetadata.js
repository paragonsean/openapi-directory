/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RDSMetadataDatabase from './RDSMetadataDatabase';

/**
 * The RDSMetadata model module.
 * @module model/RDSMetadata
 * @version 2014-12-12
 */
class RDSMetadata {
    /**
     * Constructs a new <code>RDSMetadata</code>.
     * The datasource details that are specific to Amazon RDS.
     * @alias module:model/RDSMetadata
     */
    constructor() { 
        
        RDSMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RDSMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RDSMetadata} obj Optional instance to populate.
     * @return {module:model/RDSMetadata} The populated <code>RDSMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RDSMetadata();

            if (data.hasOwnProperty('Database')) {
                obj['Database'] = RDSMetadataDatabase.constructFromObject(data['Database']);
            }
            if (data.hasOwnProperty('DatabaseUserName')) {
                obj['DatabaseUserName'] = ApiClient.convertToType(data['DatabaseUserName'], 'String');
            }
            if (data.hasOwnProperty('SelectSqlQuery')) {
                obj['SelectSqlQuery'] = ApiClient.convertToType(data['SelectSqlQuery'], 'String');
            }
            if (data.hasOwnProperty('ResourceRole')) {
                obj['ResourceRole'] = ApiClient.convertToType(data['ResourceRole'], 'String');
            }
            if (data.hasOwnProperty('ServiceRole')) {
                obj['ServiceRole'] = ApiClient.convertToType(data['ServiceRole'], 'String');
            }
            if (data.hasOwnProperty('DataPipelineId')) {
                obj['DataPipelineId'] = ApiClient.convertToType(data['DataPipelineId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RDSMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RDSMetadata</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Database`
        if (data['Database']) { // data not null
          RDSMetadataDatabase.validateJSON(data['Database']);
        }
        // ensure the json data is a string
        if (data['DatabaseUserName'] && !(typeof data['DatabaseUserName'] === 'string' || data['DatabaseUserName'] instanceof String)) {
            throw new Error("Expected the field `DatabaseUserName` to be a primitive type in the JSON string but got " + data['DatabaseUserName']);
        }
        // validate the optional field `SelectSqlQuery`
        if (data['SelectSqlQuery']) { // data not null
          String.validateJSON(data['SelectSqlQuery']);
        }
        // validate the optional field `ResourceRole`
        if (data['ResourceRole']) { // data not null
          String.validateJSON(data['ResourceRole']);
        }
        // validate the optional field `ServiceRole`
        if (data['ServiceRole']) { // data not null
          String.validateJSON(data['ServiceRole']);
        }
        // validate the optional field `DataPipelineId`
        if (data['DataPipelineId']) { // data not null
          String.validateJSON(data['DataPipelineId']);
        }

        return true;
    }


}



/**
 * @member {module:model/RDSMetadataDatabase} Database
 */
RDSMetadata.prototype['Database'] = undefined;

/**
 * The username to be used by Amazon ML to connect to database on an Amazon RDS instance. The username should have sufficient permissions to execute an <code>RDSSelectSqlQuery</code> query.
 * @member {String} DatabaseUserName
 */
RDSMetadata.prototype['DatabaseUserName'] = undefined;

/**
 * @member {String} SelectSqlQuery
 */
RDSMetadata.prototype['SelectSqlQuery'] = undefined;

/**
 * @member {String} ResourceRole
 */
RDSMetadata.prototype['ResourceRole'] = undefined;

/**
 * @member {String} ServiceRole
 */
RDSMetadata.prototype['ServiceRole'] = undefined;

/**
 * @member {String} DataPipelineId
 */
RDSMetadata.prototype['DataPipelineId'] = undefined;






export default RDSMetadata;

