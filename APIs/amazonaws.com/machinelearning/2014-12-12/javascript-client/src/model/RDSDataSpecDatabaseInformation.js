/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RDSDatabase from './RDSDatabase';

/**
 * The RDSDataSpecDatabaseInformation model module.
 * @module model/RDSDataSpecDatabaseInformation
 * @version 2014-12-12
 */
class RDSDataSpecDatabaseInformation {
    /**
     * Constructs a new <code>RDSDataSpecDatabaseInformation</code>.
     * @alias module:model/RDSDataSpecDatabaseInformation
     * @implements module:model/RDSDatabase
     * @param instanceIdentifier {String} 
     * @param databaseName {String} The name of a database hosted on an RDS DB instance.
     */
    constructor(instanceIdentifier, databaseName) { 
        RDSDatabase.initialize(this, instanceIdentifier, databaseName);
        RDSDataSpecDatabaseInformation.initialize(this, instanceIdentifier, databaseName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, instanceIdentifier, databaseName) { 
        obj['InstanceIdentifier'] = instanceIdentifier;
        obj['DatabaseName'] = databaseName;
    }

    /**
     * Constructs a <code>RDSDataSpecDatabaseInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RDSDataSpecDatabaseInformation} obj Optional instance to populate.
     * @return {module:model/RDSDataSpecDatabaseInformation} The populated <code>RDSDataSpecDatabaseInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RDSDataSpecDatabaseInformation();
            RDSDatabase.constructFromObject(data, obj);

            if (data.hasOwnProperty('InstanceIdentifier')) {
                obj['InstanceIdentifier'] = ApiClient.convertToType(data['InstanceIdentifier'], 'String');
            }
            if (data.hasOwnProperty('DatabaseName')) {
                obj['DatabaseName'] = ApiClient.convertToType(data['DatabaseName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RDSDataSpecDatabaseInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RDSDataSpecDatabaseInformation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RDSDataSpecDatabaseInformation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `InstanceIdentifier`
        if (data['InstanceIdentifier']) { // data not null
          String.validateJSON(data['InstanceIdentifier']);
        }
        // ensure the json data is a string
        if (data['DatabaseName'] && !(typeof data['DatabaseName'] === 'string' || data['DatabaseName'] instanceof String)) {
            throw new Error("Expected the field `DatabaseName` to be a primitive type in the JSON string but got " + data['DatabaseName']);
        }

        return true;
    }


}

RDSDataSpecDatabaseInformation.RequiredProperties = ["InstanceIdentifier", "DatabaseName"];

/**
 * @member {String} InstanceIdentifier
 */
RDSDataSpecDatabaseInformation.prototype['InstanceIdentifier'] = undefined;

/**
 * The name of a database hosted on an RDS DB instance.
 * @member {String} DatabaseName
 */
RDSDataSpecDatabaseInformation.prototype['DatabaseName'] = undefined;


// Implement RDSDatabase interface:
/**
 * @member {String} InstanceIdentifier
 */
RDSDatabase.prototype['InstanceIdentifier'] = undefined;
/**
 * The name of a database hosted on an RDS DB instance.
 * @member {String} DatabaseName
 */
RDSDatabase.prototype['DatabaseName'] = undefined;




export default RDSDataSpecDatabaseInformation;

