/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TaggableResourceType from './TaggableResourceType';

/**
 * The DescribeTagsInput model module.
 * @module model/DescribeTagsInput
 * @version 2014-12-12
 */
class DescribeTagsInput {
    /**
     * Constructs a new <code>DescribeTagsInput</code>.
     * @alias module:model/DescribeTagsInput
     * @param resourceId {String} 
     * @param resourceType {module:model/TaggableResourceType} 
     */
    constructor(resourceId, resourceType) { 
        
        DescribeTagsInput.initialize(this, resourceId, resourceType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resourceId, resourceType) { 
        obj['ResourceId'] = resourceId;
        obj['ResourceType'] = resourceType;
    }

    /**
     * Constructs a <code>DescribeTagsInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeTagsInput} obj Optional instance to populate.
     * @return {module:model/DescribeTagsInput} The populated <code>DescribeTagsInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeTagsInput();

            if (data.hasOwnProperty('ResourceId')) {
                obj['ResourceId'] = ApiClient.convertToType(data['ResourceId'], 'String');
            }
            if (data.hasOwnProperty('ResourceType')) {
                obj['ResourceType'] = ApiClient.convertToType(data['ResourceType'], TaggableResourceType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeTagsInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeTagsInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DescribeTagsInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ResourceId`
        if (data['ResourceId']) { // data not null
          String.validateJSON(data['ResourceId']);
        }
        // validate the optional field `ResourceType`
        if (data['ResourceType']) { // data not null
          TaggableResourceType.validateJSON(data['ResourceType']);
        }

        return true;
    }


}

DescribeTagsInput.RequiredProperties = ["ResourceId", "ResourceType"];

/**
 * @member {String} ResourceId
 */
DescribeTagsInput.prototype['ResourceId'] = undefined;

/**
 * @member {module:model/TaggableResourceType} ResourceType
 */
DescribeTagsInput.prototype['ResourceType'] = undefined;






export default DescribeTagsInput;

