/**
 * Amazon Machine Learning
 * Definition of the public APIs exposed by Amazon Machine Learning
 *
 * The version of the OpenAPI document: 2014-12-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Prediction model module.
 * @module model/Prediction
 * @version 2014-12-12
 */
class Prediction {
    /**
     * Constructs a new <code>Prediction</code>.
     * &lt;p&gt;The output from a &lt;code&gt;Predict&lt;/code&gt; operation: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Details&lt;/code&gt; - Contains the following attributes: &lt;code&gt;DetailsAttributes.PREDICTIVE_MODEL_TYPE - REGRESSION | BINARY | MULTICLASS&lt;/code&gt; &lt;code&gt;DetailsAttributes.ALGORITHM - SGD&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;PredictedLabel&lt;/code&gt; - Present for either a &lt;code&gt;BINARY&lt;/code&gt; or &lt;code&gt;MULTICLASS&lt;/code&gt; &lt;code&gt;MLModel&lt;/code&gt; request. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;PredictedScores&lt;/code&gt; - Contains the raw classification score corresponding to each label. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;PredictedValue&lt;/code&gt; - Present for a &lt;code&gt;REGRESSION&lt;/code&gt; &lt;code&gt;MLModel&lt;/code&gt; request. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     * @alias module:model/Prediction
     */
    constructor() { 
        
        Prediction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Prediction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Prediction} obj Optional instance to populate.
     * @return {module:model/Prediction} The populated <code>Prediction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Prediction();

            if (data.hasOwnProperty('predictedLabel')) {
                obj['predictedLabel'] = ApiClient.convertToType(data['predictedLabel'], 'String');
            }
            if (data.hasOwnProperty('predictedValue')) {
                obj['predictedValue'] = ApiClient.convertToType(data['predictedValue'], 'Number');
            }
            if (data.hasOwnProperty('predictedScores')) {
                obj['predictedScores'] = ApiClient.convertToType(data['predictedScores'], {'String': 'Number'});
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Prediction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Prediction</code>.
     */
    static validateJSON(data) {
        // validate the optional field `predictedLabel`
        if (data['predictedLabel']) { // data not null
          String.validateJSON(data['predictedLabel']);
        }
        // validate the optional field `predictedValue`
        if (data['predictedValue']) { // data not null
          Number.validateJSON(data['predictedValue']);
        }

        return true;
    }


}



/**
 * @member {String} predictedLabel
 */
Prediction.prototype['predictedLabel'] = undefined;

/**
 * @member {Number} predictedValue
 */
Prediction.prototype['predictedValue'] = undefined;

/**
 * Provides the raw classification score corresponding to each label.
 * @member {Object.<String, Number>} predictedScores
 */
Prediction.prototype['predictedScores'] = undefined;

/**
 * Provides any additional details regarding the prediction.
 * @member {Object.<String, String>} details
 */
Prediction.prototype['details'] = undefined;






export default Prediction;

