/*
 * AWS IoT Greengrass V2
 * <p>IoT Greengrass brings local compute, messaging, data management, sync, and ML inference capabilities to edge devices. This enables devices to collect and analyze data closer to the source of information, react autonomously to local events, and communicate securely with each other on local networks. Local devices can also communicate securely with Amazon Web Services IoT Core and export IoT data to the Amazon Web Services Cloud. IoT Greengrass developers can use Lambda functions and components to create and deploy applications to fleets of edge devices for local operation.</p> <p>IoT Greengrass Version 2 provides a new major version of the IoT Greengrass Core software, new APIs, and a new console. Use this API reference to learn how to use the IoT Greengrass V2 API operations to manage components, manage deployments, and core devices.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/what-is-iot-greengrass.html\">What is IoT Greengrass?</a> in the <i>IoT Greengrass V2 Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.IoTJobExecutionsRolloutConfigExponentialRate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains information about the rollout configuration for a job. This configuration defines the rate at which the job deploys a configuration to a fleet of target devices.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:16.640074-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class IoTJobExecutionsRolloutConfig {
  public static final String SERIALIZED_NAME_EXPONENTIAL_RATE = "exponentialRate";
  @SerializedName(SERIALIZED_NAME_EXPONENTIAL_RATE)
  private IoTJobExecutionsRolloutConfigExponentialRate exponentialRate;

  public static final String SERIALIZED_NAME_MAXIMUM_PER_MINUTE = "maximumPerMinute";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_PER_MINUTE)
  private Integer maximumPerMinute;

  public IoTJobExecutionsRolloutConfig() {
  }

  public IoTJobExecutionsRolloutConfig exponentialRate(IoTJobExecutionsRolloutConfigExponentialRate exponentialRate) {
    this.exponentialRate = exponentialRate;
    return this;
  }

  /**
   * Get exponentialRate
   * @return exponentialRate
   */
  @javax.annotation.Nullable
  public IoTJobExecutionsRolloutConfigExponentialRate getExponentialRate() {
    return exponentialRate;
  }

  public void setExponentialRate(IoTJobExecutionsRolloutConfigExponentialRate exponentialRate) {
    this.exponentialRate = exponentialRate;
  }


  public IoTJobExecutionsRolloutConfig maximumPerMinute(Integer maximumPerMinute) {
    this.maximumPerMinute = maximumPerMinute;
    return this;
  }

  /**
   * Get maximumPerMinute
   * @return maximumPerMinute
   */
  @javax.annotation.Nullable
  public Integer getMaximumPerMinute() {
    return maximumPerMinute;
  }

  public void setMaximumPerMinute(Integer maximumPerMinute) {
    this.maximumPerMinute = maximumPerMinute;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoTJobExecutionsRolloutConfig ioTJobExecutionsRolloutConfig = (IoTJobExecutionsRolloutConfig) o;
    return Objects.equals(this.exponentialRate, ioTJobExecutionsRolloutConfig.exponentialRate) &&
        Objects.equals(this.maximumPerMinute, ioTJobExecutionsRolloutConfig.maximumPerMinute);
  }

  @Override
  public int hashCode() {
    return Objects.hash(exponentialRate, maximumPerMinute);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoTJobExecutionsRolloutConfig {\n");
    sb.append("    exponentialRate: ").append(toIndentedString(exponentialRate)).append("\n");
    sb.append("    maximumPerMinute: ").append(toIndentedString(maximumPerMinute)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("exponentialRate");
    openapiFields.add("maximumPerMinute");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IoTJobExecutionsRolloutConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IoTJobExecutionsRolloutConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IoTJobExecutionsRolloutConfig is not found in the empty JSON string", IoTJobExecutionsRolloutConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IoTJobExecutionsRolloutConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IoTJobExecutionsRolloutConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `exponentialRate`
      if (jsonObj.get("exponentialRate") != null && !jsonObj.get("exponentialRate").isJsonNull()) {
        IoTJobExecutionsRolloutConfigExponentialRate.validateJsonElement(jsonObj.get("exponentialRate"));
      }
      // validate the optional field `maximumPerMinute`
      if (jsonObj.get("maximumPerMinute") != null && !jsonObj.get("maximumPerMinute").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("maximumPerMinute"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IoTJobExecutionsRolloutConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IoTJobExecutionsRolloutConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IoTJobExecutionsRolloutConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IoTJobExecutionsRolloutConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<IoTJobExecutionsRolloutConfig>() {
           @Override
           public void write(JsonWriter out, IoTJobExecutionsRolloutConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IoTJobExecutionsRolloutConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IoTJobExecutionsRolloutConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IoTJobExecutionsRolloutConfig
   * @throws IOException if the JSON string is invalid with respect to IoTJobExecutionsRolloutConfig
   */
  public static IoTJobExecutionsRolloutConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IoTJobExecutionsRolloutConfig.class);
  }

  /**
   * Convert an instance of IoTJobExecutionsRolloutConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

