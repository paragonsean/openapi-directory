/*
 * AWS IoT Greengrass V2
 * <p>IoT Greengrass brings local compute, messaging, data management, sync, and ML inference capabilities to edge devices. This enables devices to collect and analyze data closer to the source of information, react autonomously to local events, and communicate securely with each other on local networks. Local devices can also communicate securely with Amazon Web Services IoT Core and export IoT data to the Amazon Web Services Cloud. IoT Greengrass developers can use Lambda functions and components to create and deploy applications to fleets of edge devices for local operation.</p> <p>IoT Greengrass Version 2 provides a new major version of the IoT Greengrass Core software, new APIs, and a new console. Use this API reference to learn how to use the IoT Greengrass V2 API operations to manage components, manage deployments, and core devices.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/what-is-iot-greengrass.html\">What is IoT Greengrass?</a> in the <i>IoT Greengrass V2 Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.LambdaExecutionParametersLinuxProcessParams;
import org.openapitools.client.model.LambdaInputPayloadEncodingType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:16.640074-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters {
  public static final String SERIALIZED_NAME_EVENT_SOURCES = "eventSources";
  @SerializedName(SERIALIZED_NAME_EVENT_SOURCES)
  private List eventSources;

  public static final String SERIALIZED_NAME_MAX_QUEUE_SIZE = "maxQueueSize";
  @SerializedName(SERIALIZED_NAME_MAX_QUEUE_SIZE)
  private Integer maxQueueSize;

  public static final String SERIALIZED_NAME_MAX_INSTANCES_COUNT = "maxInstancesCount";
  @SerializedName(SERIALIZED_NAME_MAX_INSTANCES_COUNT)
  private Integer maxInstancesCount;

  public static final String SERIALIZED_NAME_MAX_IDLE_TIME_IN_SECONDS = "maxIdleTimeInSeconds";
  @SerializedName(SERIALIZED_NAME_MAX_IDLE_TIME_IN_SECONDS)
  private Integer maxIdleTimeInSeconds;

  public static final String SERIALIZED_NAME_TIMEOUT_IN_SECONDS = "timeoutInSeconds";
  @SerializedName(SERIALIZED_NAME_TIMEOUT_IN_SECONDS)
  private Integer timeoutInSeconds;

  public static final String SERIALIZED_NAME_STATUS_TIMEOUT_IN_SECONDS = "statusTimeoutInSeconds";
  @SerializedName(SERIALIZED_NAME_STATUS_TIMEOUT_IN_SECONDS)
  private Integer statusTimeoutInSeconds;

  public static final String SERIALIZED_NAME_PINNED = "pinned";
  @SerializedName(SERIALIZED_NAME_PINNED)
  private Boolean pinned;

  public static final String SERIALIZED_NAME_INPUT_PAYLOAD_ENCODING_TYPE = "inputPayloadEncodingType";
  @SerializedName(SERIALIZED_NAME_INPUT_PAYLOAD_ENCODING_TYPE)
  private LambdaInputPayloadEncodingType inputPayloadEncodingType;

  public static final String SERIALIZED_NAME_EXEC_ARGS = "execArgs";
  @SerializedName(SERIALIZED_NAME_EXEC_ARGS)
  private List execArgs;

  public static final String SERIALIZED_NAME_ENVIRONMENT_VARIABLES = "environmentVariables";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_VARIABLES)
  private Map environmentVariables;

  public static final String SERIALIZED_NAME_LINUX_PROCESS_PARAMS = "linuxProcessParams";
  @SerializedName(SERIALIZED_NAME_LINUX_PROCESS_PARAMS)
  private LambdaExecutionParametersLinuxProcessParams linuxProcessParams;

  public CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters() {
  }

  public CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters eventSources(List eventSources) {
    this.eventSources = eventSources;
    return this;
  }

  /**
   * Get eventSources
   * @return eventSources
   */
  @javax.annotation.Nullable
  public List getEventSources() {
    return eventSources;
  }

  public void setEventSources(List eventSources) {
    this.eventSources = eventSources;
  }


  public CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters maxQueueSize(Integer maxQueueSize) {
    this.maxQueueSize = maxQueueSize;
    return this;
  }

  /**
   * Get maxQueueSize
   * @return maxQueueSize
   */
  @javax.annotation.Nullable
  public Integer getMaxQueueSize() {
    return maxQueueSize;
  }

  public void setMaxQueueSize(Integer maxQueueSize) {
    this.maxQueueSize = maxQueueSize;
  }


  public CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters maxInstancesCount(Integer maxInstancesCount) {
    this.maxInstancesCount = maxInstancesCount;
    return this;
  }

  /**
   * Get maxInstancesCount
   * @return maxInstancesCount
   */
  @javax.annotation.Nullable
  public Integer getMaxInstancesCount() {
    return maxInstancesCount;
  }

  public void setMaxInstancesCount(Integer maxInstancesCount) {
    this.maxInstancesCount = maxInstancesCount;
  }


  public CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters maxIdleTimeInSeconds(Integer maxIdleTimeInSeconds) {
    this.maxIdleTimeInSeconds = maxIdleTimeInSeconds;
    return this;
  }

  /**
   * Get maxIdleTimeInSeconds
   * @return maxIdleTimeInSeconds
   */
  @javax.annotation.Nullable
  public Integer getMaxIdleTimeInSeconds() {
    return maxIdleTimeInSeconds;
  }

  public void setMaxIdleTimeInSeconds(Integer maxIdleTimeInSeconds) {
    this.maxIdleTimeInSeconds = maxIdleTimeInSeconds;
  }


  public CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters timeoutInSeconds(Integer timeoutInSeconds) {
    this.timeoutInSeconds = timeoutInSeconds;
    return this;
  }

  /**
   * Get timeoutInSeconds
   * @return timeoutInSeconds
   */
  @javax.annotation.Nullable
  public Integer getTimeoutInSeconds() {
    return timeoutInSeconds;
  }

  public void setTimeoutInSeconds(Integer timeoutInSeconds) {
    this.timeoutInSeconds = timeoutInSeconds;
  }


  public CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters statusTimeoutInSeconds(Integer statusTimeoutInSeconds) {
    this.statusTimeoutInSeconds = statusTimeoutInSeconds;
    return this;
  }

  /**
   * Get statusTimeoutInSeconds
   * @return statusTimeoutInSeconds
   */
  @javax.annotation.Nullable
  public Integer getStatusTimeoutInSeconds() {
    return statusTimeoutInSeconds;
  }

  public void setStatusTimeoutInSeconds(Integer statusTimeoutInSeconds) {
    this.statusTimeoutInSeconds = statusTimeoutInSeconds;
  }


  public CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters pinned(Boolean pinned) {
    this.pinned = pinned;
    return this;
  }

  /**
   * Get pinned
   * @return pinned
   */
  @javax.annotation.Nullable
  public Boolean getPinned() {
    return pinned;
  }

  public void setPinned(Boolean pinned) {
    this.pinned = pinned;
  }


  public CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters inputPayloadEncodingType(LambdaInputPayloadEncodingType inputPayloadEncodingType) {
    this.inputPayloadEncodingType = inputPayloadEncodingType;
    return this;
  }

  /**
   * Get inputPayloadEncodingType
   * @return inputPayloadEncodingType
   */
  @javax.annotation.Nullable
  public LambdaInputPayloadEncodingType getInputPayloadEncodingType() {
    return inputPayloadEncodingType;
  }

  public void setInputPayloadEncodingType(LambdaInputPayloadEncodingType inputPayloadEncodingType) {
    this.inputPayloadEncodingType = inputPayloadEncodingType;
  }


  public CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters execArgs(List execArgs) {
    this.execArgs = execArgs;
    return this;
  }

  /**
   * Get execArgs
   * @return execArgs
   */
  @javax.annotation.Nullable
  public List getExecArgs() {
    return execArgs;
  }

  public void setExecArgs(List execArgs) {
    this.execArgs = execArgs;
  }


  public CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters environmentVariables(Map environmentVariables) {
    this.environmentVariables = environmentVariables;
    return this;
  }

  /**
   * Get environmentVariables
   * @return environmentVariables
   */
  @javax.annotation.Nullable
  public Map getEnvironmentVariables() {
    return environmentVariables;
  }

  public void setEnvironmentVariables(Map environmentVariables) {
    this.environmentVariables = environmentVariables;
  }


  public CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters linuxProcessParams(LambdaExecutionParametersLinuxProcessParams linuxProcessParams) {
    this.linuxProcessParams = linuxProcessParams;
    return this;
  }

  /**
   * Get linuxProcessParams
   * @return linuxProcessParams
   */
  @javax.annotation.Nullable
  public LambdaExecutionParametersLinuxProcessParams getLinuxProcessParams() {
    return linuxProcessParams;
  }

  public void setLinuxProcessParams(LambdaExecutionParametersLinuxProcessParams linuxProcessParams) {
    this.linuxProcessParams = linuxProcessParams;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters createComponentVersionRequestLambdaFunctionComponentLambdaParameters = (CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters) o;
    return Objects.equals(this.eventSources, createComponentVersionRequestLambdaFunctionComponentLambdaParameters.eventSources) &&
        Objects.equals(this.maxQueueSize, createComponentVersionRequestLambdaFunctionComponentLambdaParameters.maxQueueSize) &&
        Objects.equals(this.maxInstancesCount, createComponentVersionRequestLambdaFunctionComponentLambdaParameters.maxInstancesCount) &&
        Objects.equals(this.maxIdleTimeInSeconds, createComponentVersionRequestLambdaFunctionComponentLambdaParameters.maxIdleTimeInSeconds) &&
        Objects.equals(this.timeoutInSeconds, createComponentVersionRequestLambdaFunctionComponentLambdaParameters.timeoutInSeconds) &&
        Objects.equals(this.statusTimeoutInSeconds, createComponentVersionRequestLambdaFunctionComponentLambdaParameters.statusTimeoutInSeconds) &&
        Objects.equals(this.pinned, createComponentVersionRequestLambdaFunctionComponentLambdaParameters.pinned) &&
        Objects.equals(this.inputPayloadEncodingType, createComponentVersionRequestLambdaFunctionComponentLambdaParameters.inputPayloadEncodingType) &&
        Objects.equals(this.execArgs, createComponentVersionRequestLambdaFunctionComponentLambdaParameters.execArgs) &&
        Objects.equals(this.environmentVariables, createComponentVersionRequestLambdaFunctionComponentLambdaParameters.environmentVariables) &&
        Objects.equals(this.linuxProcessParams, createComponentVersionRequestLambdaFunctionComponentLambdaParameters.linuxProcessParams);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventSources, maxQueueSize, maxInstancesCount, maxIdleTimeInSeconds, timeoutInSeconds, statusTimeoutInSeconds, pinned, inputPayloadEncodingType, execArgs, environmentVariables, linuxProcessParams);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters {\n");
    sb.append("    eventSources: ").append(toIndentedString(eventSources)).append("\n");
    sb.append("    maxQueueSize: ").append(toIndentedString(maxQueueSize)).append("\n");
    sb.append("    maxInstancesCount: ").append(toIndentedString(maxInstancesCount)).append("\n");
    sb.append("    maxIdleTimeInSeconds: ").append(toIndentedString(maxIdleTimeInSeconds)).append("\n");
    sb.append("    timeoutInSeconds: ").append(toIndentedString(timeoutInSeconds)).append("\n");
    sb.append("    statusTimeoutInSeconds: ").append(toIndentedString(statusTimeoutInSeconds)).append("\n");
    sb.append("    pinned: ").append(toIndentedString(pinned)).append("\n");
    sb.append("    inputPayloadEncodingType: ").append(toIndentedString(inputPayloadEncodingType)).append("\n");
    sb.append("    execArgs: ").append(toIndentedString(execArgs)).append("\n");
    sb.append("    environmentVariables: ").append(toIndentedString(environmentVariables)).append("\n");
    sb.append("    linuxProcessParams: ").append(toIndentedString(linuxProcessParams)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("eventSources");
    openapiFields.add("maxQueueSize");
    openapiFields.add("maxInstancesCount");
    openapiFields.add("maxIdleTimeInSeconds");
    openapiFields.add("timeoutInSeconds");
    openapiFields.add("statusTimeoutInSeconds");
    openapiFields.add("pinned");
    openapiFields.add("inputPayloadEncodingType");
    openapiFields.add("execArgs");
    openapiFields.add("environmentVariables");
    openapiFields.add("linuxProcessParams");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters is not found in the empty JSON string", CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `eventSources`
      if (jsonObj.get("eventSources") != null && !jsonObj.get("eventSources").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("eventSources"));
      }
      // validate the optional field `maxQueueSize`
      if (jsonObj.get("maxQueueSize") != null && !jsonObj.get("maxQueueSize").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("maxQueueSize"));
      }
      // validate the optional field `maxInstancesCount`
      if (jsonObj.get("maxInstancesCount") != null && !jsonObj.get("maxInstancesCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("maxInstancesCount"));
      }
      // validate the optional field `maxIdleTimeInSeconds`
      if (jsonObj.get("maxIdleTimeInSeconds") != null && !jsonObj.get("maxIdleTimeInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("maxIdleTimeInSeconds"));
      }
      // validate the optional field `timeoutInSeconds`
      if (jsonObj.get("timeoutInSeconds") != null && !jsonObj.get("timeoutInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("timeoutInSeconds"));
      }
      // validate the optional field `statusTimeoutInSeconds`
      if (jsonObj.get("statusTimeoutInSeconds") != null && !jsonObj.get("statusTimeoutInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("statusTimeoutInSeconds"));
      }
      // validate the optional field `pinned`
      if (jsonObj.get("pinned") != null && !jsonObj.get("pinned").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("pinned"));
      }
      // validate the optional field `inputPayloadEncodingType`
      if (jsonObj.get("inputPayloadEncodingType") != null && !jsonObj.get("inputPayloadEncodingType").isJsonNull()) {
        LambdaInputPayloadEncodingType.validateJsonElement(jsonObj.get("inputPayloadEncodingType"));
      }
      // validate the optional field `execArgs`
      if (jsonObj.get("execArgs") != null && !jsonObj.get("execArgs").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("execArgs"));
      }
      // validate the optional field `environmentVariables`
      if (jsonObj.get("environmentVariables") != null && !jsonObj.get("environmentVariables").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("environmentVariables"));
      }
      // validate the optional field `linuxProcessParams`
      if (jsonObj.get("linuxProcessParams") != null && !jsonObj.get("linuxProcessParams").isJsonNull()) {
        LambdaExecutionParametersLinuxProcessParams.validateJsonElement(jsonObj.get("linuxProcessParams"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters>() {
           @Override
           public void write(JsonWriter out, CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters
   * @throws IOException if the JSON string is invalid with respect to CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters
   */
  public static CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters.class);
  }

  /**
   * Convert an instance of CreateComponentVersionRequestLambdaFunctionComponentLambdaParameters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

