# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IoTJobTimeoutConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, in_progress_timeout_in_minutes: int=None):
        """IoTJobTimeoutConfig - a model defined in OpenAPI

        :param in_progress_timeout_in_minutes: The in_progress_timeout_in_minutes of this IoTJobTimeoutConfig.
        """
        self.openapi_types = {
            'in_progress_timeout_in_minutes': int
        }

        self.attribute_map = {
            'in_progress_timeout_in_minutes': 'inProgressTimeoutInMinutes'
        }

        self._in_progress_timeout_in_minutes = in_progress_timeout_in_minutes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IoTJobTimeoutConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IoTJobTimeoutConfig of this IoTJobTimeoutConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def in_progress_timeout_in_minutes(self):
        """Gets the in_progress_timeout_in_minutes of this IoTJobTimeoutConfig.


        :return: The in_progress_timeout_in_minutes of this IoTJobTimeoutConfig.
        :rtype: int
        """
        return self._in_progress_timeout_in_minutes

    @in_progress_timeout_in_minutes.setter
    def in_progress_timeout_in_minutes(self, in_progress_timeout_in_minutes):
        """Sets the in_progress_timeout_in_minutes of this IoTJobTimeoutConfig.


        :param in_progress_timeout_in_minutes: The in_progress_timeout_in_minutes of this IoTJobTimeoutConfig.
        :type in_progress_timeout_in_minutes: int
        """

        self._in_progress_timeout_in_minutes = in_progress_timeout_in_minutes
