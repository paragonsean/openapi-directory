# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ComponentCandidate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, component_name: str=None, component_version: str=None, version_requirements: Dict=None):
        """ComponentCandidate - a model defined in OpenAPI

        :param component_name: The component_name of this ComponentCandidate.
        :param component_version: The component_version of this ComponentCandidate.
        :param version_requirements: The version_requirements of this ComponentCandidate.
        """
        self.openapi_types = {
            'component_name': str,
            'component_version': str,
            'version_requirements': Dict
        }

        self.attribute_map = {
            'component_name': 'componentName',
            'component_version': 'componentVersion',
            'version_requirements': 'versionRequirements'
        }

        self._component_name = component_name
        self._component_version = component_version
        self._version_requirements = version_requirements

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComponentCandidate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComponentCandidate of this ComponentCandidate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def component_name(self):
        """Gets the component_name of this ComponentCandidate.


        :return: The component_name of this ComponentCandidate.
        :rtype: str
        """
        return self._component_name

    @component_name.setter
    def component_name(self, component_name):
        """Sets the component_name of this ComponentCandidate.


        :param component_name: The component_name of this ComponentCandidate.
        :type component_name: str
        """

        self._component_name = component_name

    @property
    def component_version(self):
        """Gets the component_version of this ComponentCandidate.


        :return: The component_version of this ComponentCandidate.
        :rtype: str
        """
        return self._component_version

    @component_version.setter
    def component_version(self, component_version):
        """Sets the component_version of this ComponentCandidate.


        :param component_version: The component_version of this ComponentCandidate.
        :type component_version: str
        """

        self._component_version = component_version

    @property
    def version_requirements(self):
        """Gets the version_requirements of this ComponentCandidate.


        :return: The version_requirements of this ComponentCandidate.
        :rtype: Dict
        """
        return self._version_requirements

    @version_requirements.setter
    def version_requirements(self, version_requirements):
        """Sets the version_requirements of this ComponentCandidate.


        :param version_requirements: The version_requirements of this ComponentCandidate.
        :type version_requirements: Dict
        """

        self._version_requirements = version_requirements
