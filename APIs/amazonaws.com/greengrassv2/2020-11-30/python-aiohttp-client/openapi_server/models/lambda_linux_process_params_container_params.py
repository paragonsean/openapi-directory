# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LambdaLinuxProcessParamsContainerParams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, memory_size_in_kb: int=None, mount_ro_sysfs: bool=None, volumes: List=None, devices: List=None):
        """LambdaLinuxProcessParamsContainerParams - a model defined in OpenAPI

        :param memory_size_in_kb: The memory_size_in_kb of this LambdaLinuxProcessParamsContainerParams.
        :param mount_ro_sysfs: The mount_ro_sysfs of this LambdaLinuxProcessParamsContainerParams.
        :param volumes: The volumes of this LambdaLinuxProcessParamsContainerParams.
        :param devices: The devices of this LambdaLinuxProcessParamsContainerParams.
        """
        self.openapi_types = {
            'memory_size_in_kb': int,
            'mount_ro_sysfs': bool,
            'volumes': List,
            'devices': List
        }

        self.attribute_map = {
            'memory_size_in_kb': 'memorySizeInKB',
            'mount_ro_sysfs': 'mountROSysfs',
            'volumes': 'volumes',
            'devices': 'devices'
        }

        self._memory_size_in_kb = memory_size_in_kb
        self._mount_ro_sysfs = mount_ro_sysfs
        self._volumes = volumes
        self._devices = devices

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LambdaLinuxProcessParamsContainerParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LambdaLinuxProcessParams_containerParams of this LambdaLinuxProcessParamsContainerParams.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def memory_size_in_kb(self):
        """Gets the memory_size_in_kb of this LambdaLinuxProcessParamsContainerParams.


        :return: The memory_size_in_kb of this LambdaLinuxProcessParamsContainerParams.
        :rtype: int
        """
        return self._memory_size_in_kb

    @memory_size_in_kb.setter
    def memory_size_in_kb(self, memory_size_in_kb):
        """Sets the memory_size_in_kb of this LambdaLinuxProcessParamsContainerParams.


        :param memory_size_in_kb: The memory_size_in_kb of this LambdaLinuxProcessParamsContainerParams.
        :type memory_size_in_kb: int
        """

        self._memory_size_in_kb = memory_size_in_kb

    @property
    def mount_ro_sysfs(self):
        """Gets the mount_ro_sysfs of this LambdaLinuxProcessParamsContainerParams.


        :return: The mount_ro_sysfs of this LambdaLinuxProcessParamsContainerParams.
        :rtype: bool
        """
        return self._mount_ro_sysfs

    @mount_ro_sysfs.setter
    def mount_ro_sysfs(self, mount_ro_sysfs):
        """Sets the mount_ro_sysfs of this LambdaLinuxProcessParamsContainerParams.


        :param mount_ro_sysfs: The mount_ro_sysfs of this LambdaLinuxProcessParamsContainerParams.
        :type mount_ro_sysfs: bool
        """

        self._mount_ro_sysfs = mount_ro_sysfs

    @property
    def volumes(self):
        """Gets the volumes of this LambdaLinuxProcessParamsContainerParams.


        :return: The volumes of this LambdaLinuxProcessParamsContainerParams.
        :rtype: List
        """
        return self._volumes

    @volumes.setter
    def volumes(self, volumes):
        """Sets the volumes of this LambdaLinuxProcessParamsContainerParams.


        :param volumes: The volumes of this LambdaLinuxProcessParamsContainerParams.
        :type volumes: List
        """

        self._volumes = volumes

    @property
    def devices(self):
        """Gets the devices of this LambdaLinuxProcessParamsContainerParams.


        :return: The devices of this LambdaLinuxProcessParamsContainerParams.
        :rtype: List
        """
        return self._devices

    @devices.setter
    def devices(self, devices):
        """Sets the devices of this LambdaLinuxProcessParamsContainerParams.


        :param devices: The devices of this LambdaLinuxProcessParamsContainerParams.
        :type devices: List
        """

        self._devices = devices
