# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_deployment_request_deployment_policies_component_update_policy import CreateDeploymentRequestDeploymentPoliciesComponentUpdatePolicy
from openapi_server.models.create_deployment_request_deployment_policies_configuration_validation_policy import CreateDeploymentRequestDeploymentPoliciesConfigurationValidationPolicy
from openapi_server.models.deployment_failure_handling_policy import DeploymentFailureHandlingPolicy
from openapi_server import util


class DeploymentPolicies(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failure_handling_policy: DeploymentFailureHandlingPolicy=None, component_update_policy: CreateDeploymentRequestDeploymentPoliciesComponentUpdatePolicy=None, configuration_validation_policy: CreateDeploymentRequestDeploymentPoliciesConfigurationValidationPolicy=None):
        """DeploymentPolicies - a model defined in OpenAPI

        :param failure_handling_policy: The failure_handling_policy of this DeploymentPolicies.
        :param component_update_policy: The component_update_policy of this DeploymentPolicies.
        :param configuration_validation_policy: The configuration_validation_policy of this DeploymentPolicies.
        """
        self.openapi_types = {
            'failure_handling_policy': DeploymentFailureHandlingPolicy,
            'component_update_policy': CreateDeploymentRequestDeploymentPoliciesComponentUpdatePolicy,
            'configuration_validation_policy': CreateDeploymentRequestDeploymentPoliciesConfigurationValidationPolicy
        }

        self.attribute_map = {
            'failure_handling_policy': 'failureHandlingPolicy',
            'component_update_policy': 'componentUpdatePolicy',
            'configuration_validation_policy': 'configurationValidationPolicy'
        }

        self._failure_handling_policy = failure_handling_policy
        self._component_update_policy = component_update_policy
        self._configuration_validation_policy = configuration_validation_policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentPolicies':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeploymentPolicies of this DeploymentPolicies.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failure_handling_policy(self):
        """Gets the failure_handling_policy of this DeploymentPolicies.


        :return: The failure_handling_policy of this DeploymentPolicies.
        :rtype: DeploymentFailureHandlingPolicy
        """
        return self._failure_handling_policy

    @failure_handling_policy.setter
    def failure_handling_policy(self, failure_handling_policy):
        """Sets the failure_handling_policy of this DeploymentPolicies.


        :param failure_handling_policy: The failure_handling_policy of this DeploymentPolicies.
        :type failure_handling_policy: DeploymentFailureHandlingPolicy
        """

        self._failure_handling_policy = failure_handling_policy

    @property
    def component_update_policy(self):
        """Gets the component_update_policy of this DeploymentPolicies.


        :return: The component_update_policy of this DeploymentPolicies.
        :rtype: CreateDeploymentRequestDeploymentPoliciesComponentUpdatePolicy
        """
        return self._component_update_policy

    @component_update_policy.setter
    def component_update_policy(self, component_update_policy):
        """Sets the component_update_policy of this DeploymentPolicies.


        :param component_update_policy: The component_update_policy of this DeploymentPolicies.
        :type component_update_policy: CreateDeploymentRequestDeploymentPoliciesComponentUpdatePolicy
        """

        self._component_update_policy = component_update_policy

    @property
    def configuration_validation_policy(self):
        """Gets the configuration_validation_policy of this DeploymentPolicies.


        :return: The configuration_validation_policy of this DeploymentPolicies.
        :rtype: CreateDeploymentRequestDeploymentPoliciesConfigurationValidationPolicy
        """
        return self._configuration_validation_policy

    @configuration_validation_policy.setter
    def configuration_validation_policy(self, configuration_validation_policy):
        """Sets the configuration_validation_policy of this DeploymentPolicies.


        :param configuration_validation_policy: The configuration_validation_policy of this DeploymentPolicies.
        :type configuration_validation_policy: CreateDeploymentRequestDeploymentPoliciesConfigurationValidationPolicy
        """

        self._configuration_validation_policy = configuration_validation_policy
