# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListCoreDevicesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, core_devices: List=None, next_token: str=None):
        """ListCoreDevicesResponse - a model defined in OpenAPI

        :param core_devices: The core_devices of this ListCoreDevicesResponse.
        :param next_token: The next_token of this ListCoreDevicesResponse.
        """
        self.openapi_types = {
            'core_devices': List,
            'next_token': str
        }

        self.attribute_map = {
            'core_devices': 'coreDevices',
            'next_token': 'nextToken'
        }

        self._core_devices = core_devices
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListCoreDevicesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListCoreDevicesResponse of this ListCoreDevicesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def core_devices(self):
        """Gets the core_devices of this ListCoreDevicesResponse.


        :return: The core_devices of this ListCoreDevicesResponse.
        :rtype: List
        """
        return self._core_devices

    @core_devices.setter
    def core_devices(self, core_devices):
        """Sets the core_devices of this ListCoreDevicesResponse.


        :param core_devices: The core_devices of this ListCoreDevicesResponse.
        :type core_devices: List
        """

        self._core_devices = core_devices

    @property
    def next_token(self):
        """Gets the next_token of this ListCoreDevicesResponse.


        :return: The next_token of this ListCoreDevicesResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListCoreDevicesResponse.


        :param next_token: The next_token of this ListCoreDevicesResponse.
        :type next_token: str
        """

        self._next_token = next_token
