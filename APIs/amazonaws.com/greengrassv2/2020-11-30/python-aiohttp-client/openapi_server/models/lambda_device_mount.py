# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lambda_filesystem_permission import LambdaFilesystemPermission
from openapi_server import util


class LambdaDeviceMount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, path: str=None, permission: LambdaFilesystemPermission=None, add_group_owner: bool=None):
        """LambdaDeviceMount - a model defined in OpenAPI

        :param path: The path of this LambdaDeviceMount.
        :param permission: The permission of this LambdaDeviceMount.
        :param add_group_owner: The add_group_owner of this LambdaDeviceMount.
        """
        self.openapi_types = {
            'path': str,
            'permission': LambdaFilesystemPermission,
            'add_group_owner': bool
        }

        self.attribute_map = {
            'path': 'path',
            'permission': 'permission',
            'add_group_owner': 'addGroupOwner'
        }

        self._path = path
        self._permission = permission
        self._add_group_owner = add_group_owner

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LambdaDeviceMount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LambdaDeviceMount of this LambdaDeviceMount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def path(self):
        """Gets the path of this LambdaDeviceMount.


        :return: The path of this LambdaDeviceMount.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this LambdaDeviceMount.


        :param path: The path of this LambdaDeviceMount.
        :type path: str
        """
        if path is None:
            raise ValueError("Invalid value for `path`, must not be `None`")

        self._path = path

    @property
    def permission(self):
        """Gets the permission of this LambdaDeviceMount.


        :return: The permission of this LambdaDeviceMount.
        :rtype: LambdaFilesystemPermission
        """
        return self._permission

    @permission.setter
    def permission(self, permission):
        """Sets the permission of this LambdaDeviceMount.


        :param permission: The permission of this LambdaDeviceMount.
        :type permission: LambdaFilesystemPermission
        """

        self._permission = permission

    @property
    def add_group_owner(self):
        """Gets the add_group_owner of this LambdaDeviceMount.


        :return: The add_group_owner of this LambdaDeviceMount.
        :rtype: bool
        """
        return self._add_group_owner

    @add_group_owner.setter
    def add_group_owner(self, add_group_owner):
        """Sets the add_group_owner of this LambdaDeviceMount.


        :param add_group_owner: The add_group_owner of this LambdaDeviceMount.
        :type add_group_owner: bool
        """

        self._add_group_owner = add_group_owner
