# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConnectivityInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, host_address: str=None, port_number: int=None, metadata: str=None):
        """ConnectivityInfo - a model defined in OpenAPI

        :param id: The id of this ConnectivityInfo.
        :param host_address: The host_address of this ConnectivityInfo.
        :param port_number: The port_number of this ConnectivityInfo.
        :param metadata: The metadata of this ConnectivityInfo.
        """
        self.openapi_types = {
            'id': str,
            'host_address': str,
            'port_number': int,
            'metadata': str
        }

        self.attribute_map = {
            'id': 'id',
            'host_address': 'hostAddress',
            'port_number': 'portNumber',
            'metadata': 'metadata'
        }

        self._id = id
        self._host_address = host_address
        self._port_number = port_number
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConnectivityInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConnectivityInfo of this ConnectivityInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ConnectivityInfo.


        :return: The id of this ConnectivityInfo.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ConnectivityInfo.


        :param id: The id of this ConnectivityInfo.
        :type id: str
        """

        self._id = id

    @property
    def host_address(self):
        """Gets the host_address of this ConnectivityInfo.


        :return: The host_address of this ConnectivityInfo.
        :rtype: str
        """
        return self._host_address

    @host_address.setter
    def host_address(self, host_address):
        """Sets the host_address of this ConnectivityInfo.


        :param host_address: The host_address of this ConnectivityInfo.
        :type host_address: str
        """

        self._host_address = host_address

    @property
    def port_number(self):
        """Gets the port_number of this ConnectivityInfo.


        :return: The port_number of this ConnectivityInfo.
        :rtype: int
        """
        return self._port_number

    @port_number.setter
    def port_number(self, port_number):
        """Sets the port_number of this ConnectivityInfo.


        :param port_number: The port_number of this ConnectivityInfo.
        :type port_number: int
        """

        self._port_number = port_number

    @property
    def metadata(self):
        """Gets the metadata of this ConnectivityInfo.


        :return: The metadata of this ConnectivityInfo.
        :rtype: str
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this ConnectivityInfo.


        :param metadata: The metadata of this ConnectivityInfo.
        :type metadata: str
        """

        self._metadata = metadata
