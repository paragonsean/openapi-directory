# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lambda_filesystem_permission import LambdaFilesystemPermission
from openapi_server import util


class LambdaVolumeMount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_path: str=None, destination_path: str=None, permission: LambdaFilesystemPermission=None, add_group_owner: bool=None):
        """LambdaVolumeMount - a model defined in OpenAPI

        :param source_path: The source_path of this LambdaVolumeMount.
        :param destination_path: The destination_path of this LambdaVolumeMount.
        :param permission: The permission of this LambdaVolumeMount.
        :param add_group_owner: The add_group_owner of this LambdaVolumeMount.
        """
        self.openapi_types = {
            'source_path': str,
            'destination_path': str,
            'permission': LambdaFilesystemPermission,
            'add_group_owner': bool
        }

        self.attribute_map = {
            'source_path': 'sourcePath',
            'destination_path': 'destinationPath',
            'permission': 'permission',
            'add_group_owner': 'addGroupOwner'
        }

        self._source_path = source_path
        self._destination_path = destination_path
        self._permission = permission
        self._add_group_owner = add_group_owner

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LambdaVolumeMount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LambdaVolumeMount of this LambdaVolumeMount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_path(self):
        """Gets the source_path of this LambdaVolumeMount.


        :return: The source_path of this LambdaVolumeMount.
        :rtype: str
        """
        return self._source_path

    @source_path.setter
    def source_path(self, source_path):
        """Sets the source_path of this LambdaVolumeMount.


        :param source_path: The source_path of this LambdaVolumeMount.
        :type source_path: str
        """
        if source_path is None:
            raise ValueError("Invalid value for `source_path`, must not be `None`")

        self._source_path = source_path

    @property
    def destination_path(self):
        """Gets the destination_path of this LambdaVolumeMount.


        :return: The destination_path of this LambdaVolumeMount.
        :rtype: str
        """
        return self._destination_path

    @destination_path.setter
    def destination_path(self, destination_path):
        """Sets the destination_path of this LambdaVolumeMount.


        :param destination_path: The destination_path of this LambdaVolumeMount.
        :type destination_path: str
        """
        if destination_path is None:
            raise ValueError("Invalid value for `destination_path`, must not be `None`")

        self._destination_path = destination_path

    @property
    def permission(self):
        """Gets the permission of this LambdaVolumeMount.


        :return: The permission of this LambdaVolumeMount.
        :rtype: LambdaFilesystemPermission
        """
        return self._permission

    @permission.setter
    def permission(self, permission):
        """Sets the permission of this LambdaVolumeMount.


        :param permission: The permission of this LambdaVolumeMount.
        :type permission: LambdaFilesystemPermission
        """

        self._permission = permission

    @property
    def add_group_owner(self):
        """Gets the add_group_owner of this LambdaVolumeMount.


        :return: The add_group_owner of this LambdaVolumeMount.
        :rtype: bool
        """
        return self._add_group_owner

    @add_group_owner.setter
    def add_group_owner(self, add_group_owner):
        """Sets the add_group_owner of this LambdaVolumeMount.


        :param add_group_owner: The add_group_owner of this LambdaVolumeMount.
        :type add_group_owner: bool
        """

        self._add_group_owner = add_group_owner
