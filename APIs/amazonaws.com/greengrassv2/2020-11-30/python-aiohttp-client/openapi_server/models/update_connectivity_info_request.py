# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.connectivity_info import ConnectivityInfo
from openapi_server import util


class UpdateConnectivityInfoRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connectivity_info: List[ConnectivityInfo]=None):
        """UpdateConnectivityInfoRequest - a model defined in OpenAPI

        :param connectivity_info: The connectivity_info of this UpdateConnectivityInfoRequest.
        """
        self.openapi_types = {
            'connectivity_info': List[ConnectivityInfo]
        }

        self.attribute_map = {
            'connectivity_info': 'ConnectivityInfo'
        }

        self._connectivity_info = connectivity_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateConnectivityInfoRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateConnectivityInfo_request of this UpdateConnectivityInfoRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connectivity_info(self):
        """Gets the connectivity_info of this UpdateConnectivityInfoRequest.

        The connectivity information for the core device.

        :return: The connectivity_info of this UpdateConnectivityInfoRequest.
        :rtype: List[ConnectivityInfo]
        """
        return self._connectivity_info

    @connectivity_info.setter
    def connectivity_info(self, connectivity_info):
        """Sets the connectivity_info of this UpdateConnectivityInfoRequest.

        The connectivity information for the core device.

        :param connectivity_info: The connectivity_info of this UpdateConnectivityInfoRequest.
        :type connectivity_info: List[ConnectivityInfo]
        """
        if connectivity_info is None:
            raise ValueError("Invalid value for `connectivity_info`, must not be `None`")

        self._connectivity_info = connectivity_info
