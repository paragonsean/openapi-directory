# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.core_device_status import CoreDeviceStatus
from openapi_server import util


class GetCoreDeviceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, core_device_thing_name: str=None, core_version: str=None, platform: str=None, architecture: str=None, status: CoreDeviceStatus=None, last_status_update_timestamp: datetime=None, tags: Dict=None):
        """GetCoreDeviceResponse - a model defined in OpenAPI

        :param core_device_thing_name: The core_device_thing_name of this GetCoreDeviceResponse.
        :param core_version: The core_version of this GetCoreDeviceResponse.
        :param platform: The platform of this GetCoreDeviceResponse.
        :param architecture: The architecture of this GetCoreDeviceResponse.
        :param status: The status of this GetCoreDeviceResponse.
        :param last_status_update_timestamp: The last_status_update_timestamp of this GetCoreDeviceResponse.
        :param tags: The tags of this GetCoreDeviceResponse.
        """
        self.openapi_types = {
            'core_device_thing_name': str,
            'core_version': str,
            'platform': str,
            'architecture': str,
            'status': CoreDeviceStatus,
            'last_status_update_timestamp': datetime,
            'tags': Dict
        }

        self.attribute_map = {
            'core_device_thing_name': 'coreDeviceThingName',
            'core_version': 'coreVersion',
            'platform': 'platform',
            'architecture': 'architecture',
            'status': 'status',
            'last_status_update_timestamp': 'lastStatusUpdateTimestamp',
            'tags': 'tags'
        }

        self._core_device_thing_name = core_device_thing_name
        self._core_version = core_version
        self._platform = platform
        self._architecture = architecture
        self._status = status
        self._last_status_update_timestamp = last_status_update_timestamp
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCoreDeviceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetCoreDeviceResponse of this GetCoreDeviceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def core_device_thing_name(self):
        """Gets the core_device_thing_name of this GetCoreDeviceResponse.


        :return: The core_device_thing_name of this GetCoreDeviceResponse.
        :rtype: str
        """
        return self._core_device_thing_name

    @core_device_thing_name.setter
    def core_device_thing_name(self, core_device_thing_name):
        """Sets the core_device_thing_name of this GetCoreDeviceResponse.


        :param core_device_thing_name: The core_device_thing_name of this GetCoreDeviceResponse.
        :type core_device_thing_name: str
        """

        self._core_device_thing_name = core_device_thing_name

    @property
    def core_version(self):
        """Gets the core_version of this GetCoreDeviceResponse.


        :return: The core_version of this GetCoreDeviceResponse.
        :rtype: str
        """
        return self._core_version

    @core_version.setter
    def core_version(self, core_version):
        """Sets the core_version of this GetCoreDeviceResponse.


        :param core_version: The core_version of this GetCoreDeviceResponse.
        :type core_version: str
        """

        self._core_version = core_version

    @property
    def platform(self):
        """Gets the platform of this GetCoreDeviceResponse.


        :return: The platform of this GetCoreDeviceResponse.
        :rtype: str
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this GetCoreDeviceResponse.


        :param platform: The platform of this GetCoreDeviceResponse.
        :type platform: str
        """

        self._platform = platform

    @property
    def architecture(self):
        """Gets the architecture of this GetCoreDeviceResponse.


        :return: The architecture of this GetCoreDeviceResponse.
        :rtype: str
        """
        return self._architecture

    @architecture.setter
    def architecture(self, architecture):
        """Sets the architecture of this GetCoreDeviceResponse.


        :param architecture: The architecture of this GetCoreDeviceResponse.
        :type architecture: str
        """

        self._architecture = architecture

    @property
    def status(self):
        """Gets the status of this GetCoreDeviceResponse.


        :return: The status of this GetCoreDeviceResponse.
        :rtype: CoreDeviceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetCoreDeviceResponse.


        :param status: The status of this GetCoreDeviceResponse.
        :type status: CoreDeviceStatus
        """

        self._status = status

    @property
    def last_status_update_timestamp(self):
        """Gets the last_status_update_timestamp of this GetCoreDeviceResponse.


        :return: The last_status_update_timestamp of this GetCoreDeviceResponse.
        :rtype: datetime
        """
        return self._last_status_update_timestamp

    @last_status_update_timestamp.setter
    def last_status_update_timestamp(self, last_status_update_timestamp):
        """Sets the last_status_update_timestamp of this GetCoreDeviceResponse.


        :param last_status_update_timestamp: The last_status_update_timestamp of this GetCoreDeviceResponse.
        :type last_status_update_timestamp: datetime
        """

        self._last_status_update_timestamp = last_status_update_timestamp

    @property
    def tags(self):
        """Gets the tags of this GetCoreDeviceResponse.


        :return: The tags of this GetCoreDeviceResponse.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this GetCoreDeviceResponse.


        :param tags: The tags of this GetCoreDeviceResponse.
        :type tags: Dict
        """

        self._tags = tags
