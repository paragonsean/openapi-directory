# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cloud_component_state import CloudComponentState
from openapi_server.models.vendor_guidance import VendorGuidance
from openapi_server import util


class CloudComponentStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, component_state: CloudComponentState=None, message: str=None, errors: Dict=None, vendor_guidance: VendorGuidance=None, vendor_guidance_message: str=None):
        """CloudComponentStatus - a model defined in OpenAPI

        :param component_state: The component_state of this CloudComponentStatus.
        :param message: The message of this CloudComponentStatus.
        :param errors: The errors of this CloudComponentStatus.
        :param vendor_guidance: The vendor_guidance of this CloudComponentStatus.
        :param vendor_guidance_message: The vendor_guidance_message of this CloudComponentStatus.
        """
        self.openapi_types = {
            'component_state': CloudComponentState,
            'message': str,
            'errors': Dict,
            'vendor_guidance': VendorGuidance,
            'vendor_guidance_message': str
        }

        self.attribute_map = {
            'component_state': 'componentState',
            'message': 'message',
            'errors': 'errors',
            'vendor_guidance': 'vendorGuidance',
            'vendor_guidance_message': 'vendorGuidanceMessage'
        }

        self._component_state = component_state
        self._message = message
        self._errors = errors
        self._vendor_guidance = vendor_guidance
        self._vendor_guidance_message = vendor_guidance_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudComponentStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudComponentStatus of this CloudComponentStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def component_state(self):
        """Gets the component_state of this CloudComponentStatus.


        :return: The component_state of this CloudComponentStatus.
        :rtype: CloudComponentState
        """
        return self._component_state

    @component_state.setter
    def component_state(self, component_state):
        """Sets the component_state of this CloudComponentStatus.


        :param component_state: The component_state of this CloudComponentStatus.
        :type component_state: CloudComponentState
        """

        self._component_state = component_state

    @property
    def message(self):
        """Gets the message of this CloudComponentStatus.


        :return: The message of this CloudComponentStatus.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this CloudComponentStatus.


        :param message: The message of this CloudComponentStatus.
        :type message: str
        """

        self._message = message

    @property
    def errors(self):
        """Gets the errors of this CloudComponentStatus.


        :return: The errors of this CloudComponentStatus.
        :rtype: Dict
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this CloudComponentStatus.


        :param errors: The errors of this CloudComponentStatus.
        :type errors: Dict
        """

        self._errors = errors

    @property
    def vendor_guidance(self):
        """Gets the vendor_guidance of this CloudComponentStatus.


        :return: The vendor_guidance of this CloudComponentStatus.
        :rtype: VendorGuidance
        """
        return self._vendor_guidance

    @vendor_guidance.setter
    def vendor_guidance(self, vendor_guidance):
        """Sets the vendor_guidance of this CloudComponentStatus.


        :param vendor_guidance: The vendor_guidance of this CloudComponentStatus.
        :type vendor_guidance: VendorGuidance
        """

        self._vendor_guidance = vendor_guidance

    @property
    def vendor_guidance_message(self):
        """Gets the vendor_guidance_message of this CloudComponentStatus.


        :return: The vendor_guidance_message of this CloudComponentStatus.
        :rtype: str
        """
        return self._vendor_guidance_message

    @vendor_guidance_message.setter
    def vendor_guidance_message(self, vendor_guidance_message):
        """Sets the vendor_guidance_message of this CloudComponentStatus.


        :param vendor_guidance_message: The vendor_guidance_message of this CloudComponentStatus.
        :type vendor_guidance_message: str
        """

        self._vendor_guidance_message = vendor_guidance_message
