# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.recipe_output_format import RecipeOutputFormat
from openapi_server import util


class GetComponentResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recipe_output_format: RecipeOutputFormat=None, recipe: str=None, tags: Dict=None):
        """GetComponentResponse - a model defined in OpenAPI

        :param recipe_output_format: The recipe_output_format of this GetComponentResponse.
        :param recipe: The recipe of this GetComponentResponse.
        :param tags: The tags of this GetComponentResponse.
        """
        self.openapi_types = {
            'recipe_output_format': RecipeOutputFormat,
            'recipe': str,
            'tags': Dict
        }

        self.attribute_map = {
            'recipe_output_format': 'recipeOutputFormat',
            'recipe': 'recipe',
            'tags': 'tags'
        }

        self._recipe_output_format = recipe_output_format
        self._recipe = recipe
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetComponentResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetComponentResponse of this GetComponentResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recipe_output_format(self):
        """Gets the recipe_output_format of this GetComponentResponse.


        :return: The recipe_output_format of this GetComponentResponse.
        :rtype: RecipeOutputFormat
        """
        return self._recipe_output_format

    @recipe_output_format.setter
    def recipe_output_format(self, recipe_output_format):
        """Sets the recipe_output_format of this GetComponentResponse.


        :param recipe_output_format: The recipe_output_format of this GetComponentResponse.
        :type recipe_output_format: RecipeOutputFormat
        """
        if recipe_output_format is None:
            raise ValueError("Invalid value for `recipe_output_format`, must not be `None`")

        self._recipe_output_format = recipe_output_format

    @property
    def recipe(self):
        """Gets the recipe of this GetComponentResponse.


        :return: The recipe of this GetComponentResponse.
        :rtype: str
        """
        return self._recipe

    @recipe.setter
    def recipe(self, recipe):
        """Sets the recipe of this GetComponentResponse.


        :param recipe: The recipe of this GetComponentResponse.
        :type recipe: str
        """
        if recipe is None:
            raise ValueError("Invalid value for `recipe`, must not be `None`")

        self._recipe = recipe

    @property
    def tags(self):
        """Gets the tags of this GetComponentResponse.


        :return: The tags of this GetComponentResponse.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this GetComponentResponse.


        :param tags: The tags of this GetComponentResponse.
        :type tags: Dict
        """

        self._tags = tags
