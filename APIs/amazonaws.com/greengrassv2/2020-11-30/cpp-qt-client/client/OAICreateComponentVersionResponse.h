/**
 * AWS IoT Greengrass V2
 * <p>IoT Greengrass brings local compute, messaging, data management, sync, and ML inference capabilities to edge devices. This enables devices to collect and analyze data closer to the source of information, react autonomously to local events, and communicate securely with each other on local networks. Local devices can also communicate securely with Amazon Web Services IoT Core and export IoT data to the Amazon Web Services Cloud. IoT Greengrass developers can use Lambda functions and components to create and deploy applications to fleets of edge devices for local operation.</p> <p>IoT Greengrass Version 2 provides a new major version of the IoT Greengrass Core software, new APIs, and a new console. Use this API reference to learn how to use the IoT Greengrass V2 API operations to manage components, manage deployments, and core devices.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/what-is-iot-greengrass.html\">What is IoT Greengrass?</a> in the <i>IoT Greengrass V2 Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateComponentVersionResponse.h
 *
 * 
 */

#ifndef OAICreateComponentVersionResponse_H
#define OAICreateComponentVersionResponse_H

#include <QJsonObject>

#include "OAICreateComponentVersionResponse_status.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateComponentVersionResponse_status;

class OAICreateComponentVersionResponse : public OAIObject {
public:
    OAICreateComponentVersionResponse();
    OAICreateComponentVersionResponse(QString json);
    ~OAICreateComponentVersionResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getComponentName() const;
    void setComponentName(const QString &component_name);
    bool is_component_name_Set() const;
    bool is_component_name_Valid() const;

    QString getComponentVersion() const;
    void setComponentVersion(const QString &component_version);
    bool is_component_version_Set() const;
    bool is_component_version_Valid() const;

    QDateTime getCreationTimestamp() const;
    void setCreationTimestamp(const QDateTime &creation_timestamp);
    bool is_creation_timestamp_Set() const;
    bool is_creation_timestamp_Valid() const;

    OAICreateComponentVersionResponse_status getStatus() const;
    void setStatus(const OAICreateComponentVersionResponse_status &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_component_name;
    bool m_component_name_isSet;
    bool m_component_name_isValid;

    QString m_component_version;
    bool m_component_version_isSet;
    bool m_component_version_isValid;

    QDateTime m_creation_timestamp;
    bool m_creation_timestamp_isSet;
    bool m_creation_timestamp_isValid;

    OAICreateComponentVersionResponse_status m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateComponentVersionResponse)

#endif // OAICreateComponentVersionResponse_H
