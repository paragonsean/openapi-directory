/**
 * AWS IoT Greengrass V2
 * <p>IoT Greengrass brings local compute, messaging, data management, sync, and ML inference capabilities to edge devices. This enables devices to collect and analyze data closer to the source of information, react autonomously to local events, and communicate securely with each other on local networks. Local devices can also communicate securely with Amazon Web Services IoT Core and export IoT data to the Amazon Web Services Cloud. IoT Greengrass developers can use Lambda functions and components to create and deploy applications to fleets of edge devices for local operation.</p> <p>IoT Greengrass Version 2 provides a new major version of the IoT Greengrass Core software, new APIs, and a new console. Use this API reference to learn how to use the IoT Greengrass V2 API operations to manage components, manage deployments, and core devices.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/what-is-iot-greengrass.html\">What is IoT Greengrass?</a> in the <i>IoT Greengrass V2 Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIoTJobAbortCriteria.h
 *
 * &lt;p&gt;Contains criteria that define when and how to cancel a job.&lt;/p&gt; &lt;p&gt;The deployment stops if the following conditions are true:&lt;/p&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;The number of things that receive the deployment exceeds the &lt;code&gt;minNumberOfExecutedThings&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The percentage of failures with type &lt;code&gt;failureType&lt;/code&gt; exceeds the &lt;code&gt;thresholdPercentage&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt;
 */

#ifndef OAIIoTJobAbortCriteria_H
#define OAIIoTJobAbortCriteria_H

#include <QJsonObject>

#include "OAIIoTJobAbortAction.h"
#include "OAIIoTJobExecutionFailureType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIoTJobAbortCriteria : public OAIObject {
public:
    OAIIoTJobAbortCriteria();
    OAIIoTJobAbortCriteria(QString json);
    ~OAIIoTJobAbortCriteria() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIIoTJobExecutionFailureType getFailureType() const;
    void setFailureType(const OAIIoTJobExecutionFailureType &failure_type);
    bool is_failure_type_Set() const;
    bool is_failure_type_Valid() const;

    OAIIoTJobAbortAction getAction() const;
    void setAction(const OAIIoTJobAbortAction &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    double getThresholdPercentage() const;
    void setThresholdPercentage(const double &threshold_percentage);
    bool is_threshold_percentage_Set() const;
    bool is_threshold_percentage_Valid() const;

    qint32 getMinNumberOfExecutedThings() const;
    void setMinNumberOfExecutedThings(const qint32 &min_number_of_executed_things);
    bool is_min_number_of_executed_things_Set() const;
    bool is_min_number_of_executed_things_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIIoTJobExecutionFailureType m_failure_type;
    bool m_failure_type_isSet;
    bool m_failure_type_isValid;

    OAIIoTJobAbortAction m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    double m_threshold_percentage;
    bool m_threshold_percentage_isSet;
    bool m_threshold_percentage_isValid;

    qint32 m_min_number_of_executed_things;
    bool m_min_number_of_executed_things_isSet;
    bool m_min_number_of_executed_things_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIoTJobAbortCriteria)

#endif // OAIIoTJobAbortCriteria_H
