/**
 * AWS IoT Greengrass V2
 * <p>IoT Greengrass brings local compute, messaging, data management, sync, and ML inference capabilities to edge devices. This enables devices to collect and analyze data closer to the source of information, react autonomously to local events, and communicate securely with each other on local networks. Local devices can also communicate securely with Amazon Web Services IoT Core and export IoT data to the Amazon Web Services Cloud. IoT Greengrass developers can use Lambda functions and components to create and deploy applications to fleets of edge devices for local operation.</p> <p>IoT Greengrass Version 2 provides a new major version of the IoT Greengrass Core software, new APIs, and a new console. Use this API reference to learn how to use the IoT Greengrass V2 API operations to manage components, manage deployments, and core devices.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/what-is-iot-greengrass.html\">What is IoT Greengrass?</a> in the <i>IoT Greengrass V2 Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateComponentVersionRequest.h
 *
 * 
 */

#ifndef OAICreateComponentVersionRequest_H
#define OAICreateComponentVersionRequest_H

#include <QJsonObject>

#include "OAICreateComponentVersionRequest_lambdaFunction.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateComponentVersionRequest_lambdaFunction;

class OAICreateComponentVersionRequest : public OAIObject {
public:
    OAICreateComponentVersionRequest();
    OAICreateComponentVersionRequest(QString json);
    ~OAICreateComponentVersionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInlineRecipe() const;
    void setInlineRecipe(const QString &inline_recipe);
    bool is_inline_recipe_Set() const;
    bool is_inline_recipe_Valid() const;

    OAICreateComponentVersionRequest_lambdaFunction getLambdaFunction() const;
    void setLambdaFunction(const OAICreateComponentVersionRequest_lambdaFunction &lambda_function);
    bool is_lambda_function_Set() const;
    bool is_lambda_function_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_inline_recipe;
    bool m_inline_recipe_isSet;
    bool m_inline_recipe_isValid;

    OAICreateComponentVersionRequest_lambdaFunction m_lambda_function;
    bool m_lambda_function_isSet;
    bool m_lambda_function_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateComponentVersionRequest)

#endif // OAICreateComponentVersionRequest_H
