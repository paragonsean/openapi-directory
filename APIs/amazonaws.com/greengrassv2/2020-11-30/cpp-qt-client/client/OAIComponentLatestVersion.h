/**
 * AWS IoT Greengrass V2
 * <p>IoT Greengrass brings local compute, messaging, data management, sync, and ML inference capabilities to edge devices. This enables devices to collect and analyze data closer to the source of information, react autonomously to local events, and communicate securely with each other on local networks. Local devices can also communicate securely with Amazon Web Services IoT Core and export IoT data to the Amazon Web Services Cloud. IoT Greengrass developers can use Lambda functions and components to create and deploy applications to fleets of edge devices for local operation.</p> <p>IoT Greengrass Version 2 provides a new major version of the IoT Greengrass Core software, new APIs, and a new console. Use this API reference to learn how to use the IoT Greengrass V2 API operations to manage components, manage deployments, and core devices.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/what-is-iot-greengrass.html\">What is IoT Greengrass?</a> in the <i>IoT Greengrass V2 Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComponentLatestVersion.h
 *
 * Contains information about the latest version of a component.
 */

#ifndef OAIComponentLatestVersion_H
#define OAIComponentLatestVersion_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIComponentLatestVersion : public OAIObject {
public:
    OAIComponentLatestVersion();
    OAIComponentLatestVersion(QString json);
    ~OAIComponentLatestVersion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getComponentVersion() const;
    void setComponentVersion(const QString &component_version);
    bool is_component_version_Set() const;
    bool is_component_version_Valid() const;

    QDateTime getCreationTimestamp() const;
    void setCreationTimestamp(const QDateTime &creation_timestamp);
    bool is_creation_timestamp_Set() const;
    bool is_creation_timestamp_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getPublisher() const;
    void setPublisher(const QString &publisher);
    bool is_publisher_Set() const;
    bool is_publisher_Valid() const;

    QList getPlatforms() const;
    void setPlatforms(const QList &platforms);
    bool is_platforms_Set() const;
    bool is_platforms_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_component_version;
    bool m_component_version_isSet;
    bool m_component_version_isValid;

    QDateTime m_creation_timestamp;
    bool m_creation_timestamp_isSet;
    bool m_creation_timestamp_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_publisher;
    bool m_publisher_isSet;
    bool m_publisher_isValid;

    QList m_platforms;
    bool m_platforms_isSet;
    bool m_platforms_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComponentLatestVersion)

#endif // OAIComponentLatestVersion_H
