/**
 * AWS IoT Greengrass V2
 * <p>IoT Greengrass brings local compute, messaging, data management, sync, and ML inference capabilities to edge devices. This enables devices to collect and analyze data closer to the source of information, react autonomously to local events, and communicate securely with each other on local networks. Local devices can also communicate securely with Amazon Web Services IoT Core and export IoT data to the Amazon Web Services Cloud. IoT Greengrass developers can use Lambda functions and components to create and deploy applications to fleets of edge devices for local operation.</p> <p>IoT Greengrass Version 2 provides a new major version of the IoT Greengrass Core software, new APIs, and a new console. Use this API reference to learn how to use the IoT Greengrass V2 API operations to manage components, manage deployments, and core devices.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/what-is-iot-greengrass.html\">What is IoT Greengrass?</a> in the <i>IoT Greengrass V2 Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEffectiveDeployment.h
 *
 * Contains information about a deployment job that IoT Greengrass sends to a Greengrass core device.
 */

#ifndef OAIEffectiveDeployment_H
#define OAIEffectiveDeployment_H

#include <QJsonObject>

#include "OAIEffectiveDeploymentExecutionStatus.h"
#include "OAIEffectiveDeployment_statusDetails.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEffectiveDeployment_statusDetails;

class OAIEffectiveDeployment : public OAIObject {
public:
    OAIEffectiveDeployment();
    OAIEffectiveDeployment(QString json);
    ~OAIEffectiveDeployment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDeploymentId() const;
    void setDeploymentId(const QString &deployment_id);
    bool is_deployment_id_Set() const;
    bool is_deployment_id_Valid() const;

    QString getDeploymentName() const;
    void setDeploymentName(const QString &deployment_name);
    bool is_deployment_name_Set() const;
    bool is_deployment_name_Valid() const;

    QString getIotJobId() const;
    void setIotJobId(const QString &iot_job_id);
    bool is_iot_job_id_Set() const;
    bool is_iot_job_id_Valid() const;

    QString getIotJobArn() const;
    void setIotJobArn(const QString &iot_job_arn);
    bool is_iot_job_arn_Set() const;
    bool is_iot_job_arn_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getTargetArn() const;
    void setTargetArn(const QString &target_arn);
    bool is_target_arn_Set() const;
    bool is_target_arn_Valid() const;

    OAIEffectiveDeploymentExecutionStatus getCoreDeviceExecutionStatus() const;
    void setCoreDeviceExecutionStatus(const OAIEffectiveDeploymentExecutionStatus &core_device_execution_status);
    bool is_core_device_execution_status_Set() const;
    bool is_core_device_execution_status_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    QDateTime getCreationTimestamp() const;
    void setCreationTimestamp(const QDateTime &creation_timestamp);
    bool is_creation_timestamp_Set() const;
    bool is_creation_timestamp_Valid() const;

    QDateTime getModifiedTimestamp() const;
    void setModifiedTimestamp(const QDateTime &modified_timestamp);
    bool is_modified_timestamp_Set() const;
    bool is_modified_timestamp_Valid() const;

    OAIEffectiveDeployment_statusDetails getStatusDetails() const;
    void setStatusDetails(const OAIEffectiveDeployment_statusDetails &status_details);
    bool is_status_details_Set() const;
    bool is_status_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_deployment_id;
    bool m_deployment_id_isSet;
    bool m_deployment_id_isValid;

    QString m_deployment_name;
    bool m_deployment_name_isSet;
    bool m_deployment_name_isValid;

    QString m_iot_job_id;
    bool m_iot_job_id_isSet;
    bool m_iot_job_id_isValid;

    QString m_iot_job_arn;
    bool m_iot_job_arn_isSet;
    bool m_iot_job_arn_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_target_arn;
    bool m_target_arn_isSet;
    bool m_target_arn_isValid;

    OAIEffectiveDeploymentExecutionStatus m_core_device_execution_status;
    bool m_core_device_execution_status_isSet;
    bool m_core_device_execution_status_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QDateTime m_creation_timestamp;
    bool m_creation_timestamp_isSet;
    bool m_creation_timestamp_isValid;

    QDateTime m_modified_timestamp;
    bool m_modified_timestamp_isSet;
    bool m_modified_timestamp_isValid;

    OAIEffectiveDeployment_statusDetails m_status_details;
    bool m_status_details_isSet;
    bool m_status_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEffectiveDeployment)

#endif // OAIEffectiveDeployment_H
