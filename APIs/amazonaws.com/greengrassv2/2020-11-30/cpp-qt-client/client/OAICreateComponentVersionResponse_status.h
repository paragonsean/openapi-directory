/**
 * AWS IoT Greengrass V2
 * <p>IoT Greengrass brings local compute, messaging, data management, sync, and ML inference capabilities to edge devices. This enables devices to collect and analyze data closer to the source of information, react autonomously to local events, and communicate securely with each other on local networks. Local devices can also communicate securely with Amazon Web Services IoT Core and export IoT data to the Amazon Web Services Cloud. IoT Greengrass developers can use Lambda functions and components to create and deploy applications to fleets of edge devices for local operation.</p> <p>IoT Greengrass Version 2 provides a new major version of the IoT Greengrass Core software, new APIs, and a new console. Use this API reference to learn how to use the IoT Greengrass V2 API operations to manage components, manage deployments, and core devices.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/what-is-iot-greengrass.html\">What is IoT Greengrass?</a> in the <i>IoT Greengrass V2 Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateComponentVersionResponse_status.h
 *
 * 
 */

#ifndef OAICreateComponentVersionResponse_status_H
#define OAICreateComponentVersionResponse_status_H

#include <QJsonObject>

#include "OAICloudComponentState.h"
#include "OAIVendorGuidance.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateComponentVersionResponse_status : public OAIObject {
public:
    OAICreateComponentVersionResponse_status();
    OAICreateComponentVersionResponse_status(QString json);
    ~OAICreateComponentVersionResponse_status() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICloudComponentState getComponentState() const;
    void setComponentState(const OAICloudComponentState &component_state);
    bool is_component_state_Set() const;
    bool is_component_state_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QMap getErrors() const;
    void setErrors(const QMap &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    OAIVendorGuidance getVendorGuidance() const;
    void setVendorGuidance(const OAIVendorGuidance &vendor_guidance);
    bool is_vendor_guidance_Set() const;
    bool is_vendor_guidance_Valid() const;

    QString getVendorGuidanceMessage() const;
    void setVendorGuidanceMessage(const QString &vendor_guidance_message);
    bool is_vendor_guidance_message_Set() const;
    bool is_vendor_guidance_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICloudComponentState m_component_state;
    bool m_component_state_isSet;
    bool m_component_state_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QMap m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    OAIVendorGuidance m_vendor_guidance;
    bool m_vendor_guidance_isSet;
    bool m_vendor_guidance_isValid;

    QString m_vendor_guidance_message;
    bool m_vendor_guidance_message_isSet;
    bool m_vendor_guidance_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateComponentVersionResponse_status)

#endif // OAICreateComponentVersionResponse_status_H
