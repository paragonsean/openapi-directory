/**
 * AWS IoT Greengrass V2
 * <p>IoT Greengrass brings local compute, messaging, data management, sync, and ML inference capabilities to edge devices. This enables devices to collect and analyze data closer to the source of information, react autonomously to local events, and communicate securely with each other on local networks. Local devices can also communicate securely with Amazon Web Services IoT Core and export IoT data to the Amazon Web Services Cloud. IoT Greengrass developers can use Lambda functions and components to create and deploy applications to fleets of edge devices for local operation.</p> <p>IoT Greengrass Version 2 provides a new major version of the IoT Greengrass Core software, new APIs, and a new console. Use this API reference to learn how to use the IoT Greengrass V2 API operations to manage components, manage deployments, and core devices.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/what-is-iot-greengrass.html\">What is IoT Greengrass?</a> in the <i>IoT Greengrass V2 Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetDeploymentResponse.h
 *
 * 
 */

#ifndef OAIGetDeploymentResponse_H
#define OAIGetDeploymentResponse_H

#include <QJsonObject>

#include "OAIDeploymentStatus.h"
#include "OAIGetDeploymentResponse_deploymentPolicies.h"
#include "OAIGetDeploymentResponse_iotJobConfiguration.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetDeploymentResponse_deploymentPolicies;
class OAIGetDeploymentResponse_iotJobConfiguration;

class OAIGetDeploymentResponse : public OAIObject {
public:
    OAIGetDeploymentResponse();
    OAIGetDeploymentResponse(QString json);
    ~OAIGetDeploymentResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTargetArn() const;
    void setTargetArn(const QString &target_arn);
    bool is_target_arn_Set() const;
    bool is_target_arn_Valid() const;

    QString getRevisionId() const;
    void setRevisionId(const QString &revision_id);
    bool is_revision_id_Set() const;
    bool is_revision_id_Valid() const;

    QString getDeploymentId() const;
    void setDeploymentId(const QString &deployment_id);
    bool is_deployment_id_Set() const;
    bool is_deployment_id_Valid() const;

    QString getDeploymentName() const;
    void setDeploymentName(const QString &deployment_name);
    bool is_deployment_name_Set() const;
    bool is_deployment_name_Valid() const;

    OAIDeploymentStatus getDeploymentStatus() const;
    void setDeploymentStatus(const OAIDeploymentStatus &deployment_status);
    bool is_deployment_status_Set() const;
    bool is_deployment_status_Valid() const;

    QString getIotJobId() const;
    void setIotJobId(const QString &iot_job_id);
    bool is_iot_job_id_Set() const;
    bool is_iot_job_id_Valid() const;

    QString getIotJobArn() const;
    void setIotJobArn(const QString &iot_job_arn);
    bool is_iot_job_arn_Set() const;
    bool is_iot_job_arn_Valid() const;

    QMap getComponents() const;
    void setComponents(const QMap &components);
    bool is_components_Set() const;
    bool is_components_Valid() const;

    OAIGetDeploymentResponse_deploymentPolicies getDeploymentPolicies() const;
    void setDeploymentPolicies(const OAIGetDeploymentResponse_deploymentPolicies &deployment_policies);
    bool is_deployment_policies_Set() const;
    bool is_deployment_policies_Valid() const;

    OAIGetDeploymentResponse_iotJobConfiguration getIotJobConfiguration() const;
    void setIotJobConfiguration(const OAIGetDeploymentResponse_iotJobConfiguration &iot_job_configuration);
    bool is_iot_job_configuration_Set() const;
    bool is_iot_job_configuration_Valid() const;

    QDateTime getCreationTimestamp() const;
    void setCreationTimestamp(const QDateTime &creation_timestamp);
    bool is_creation_timestamp_Set() const;
    bool is_creation_timestamp_Valid() const;

    bool getIsLatestForTarget() const;
    void setIsLatestForTarget(const bool &is_latest_for_target);
    bool is_is_latest_for_target_Set() const;
    bool is_is_latest_for_target_Valid() const;

    QString getParentTargetArn() const;
    void setParentTargetArn(const QString &parent_target_arn);
    bool is_parent_target_arn_Set() const;
    bool is_parent_target_arn_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_target_arn;
    bool m_target_arn_isSet;
    bool m_target_arn_isValid;

    QString m_revision_id;
    bool m_revision_id_isSet;
    bool m_revision_id_isValid;

    QString m_deployment_id;
    bool m_deployment_id_isSet;
    bool m_deployment_id_isValid;

    QString m_deployment_name;
    bool m_deployment_name_isSet;
    bool m_deployment_name_isValid;

    OAIDeploymentStatus m_deployment_status;
    bool m_deployment_status_isSet;
    bool m_deployment_status_isValid;

    QString m_iot_job_id;
    bool m_iot_job_id_isSet;
    bool m_iot_job_id_isValid;

    QString m_iot_job_arn;
    bool m_iot_job_arn_isSet;
    bool m_iot_job_arn_isValid;

    QMap m_components;
    bool m_components_isSet;
    bool m_components_isValid;

    OAIGetDeploymentResponse_deploymentPolicies m_deployment_policies;
    bool m_deployment_policies_isSet;
    bool m_deployment_policies_isValid;

    OAIGetDeploymentResponse_iotJobConfiguration m_iot_job_configuration;
    bool m_iot_job_configuration_isSet;
    bool m_iot_job_configuration_isValid;

    QDateTime m_creation_timestamp;
    bool m_creation_timestamp_isSet;
    bool m_creation_timestamp_isValid;

    bool m_is_latest_for_target;
    bool m_is_latest_for_target_isSet;
    bool m_is_latest_for_target_isValid;

    QString m_parent_target_arn;
    bool m_parent_target_arn_isSet;
    bool m_parent_target_arn_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetDeploymentResponse)

#endif // OAIGetDeploymentResponse_H
