/**
 * AWS IoT Greengrass V2
 * <p>IoT Greengrass brings local compute, messaging, data management, sync, and ML inference capabilities to edge devices. This enables devices to collect and analyze data closer to the source of information, react autonomously to local events, and communicate securely with each other on local networks. Local devices can also communicate securely with Amazon Web Services IoT Core and export IoT data to the Amazon Web Services Cloud. IoT Greengrass developers can use Lambda functions and components to create and deploy applications to fleets of edge devices for local operation.</p> <p>IoT Greengrass Version 2 provides a new major version of the IoT Greengrass Core software, new APIs, and a new console. Use this API reference to learn how to use the IoT Greengrass V2 API operations to manage components, manage deployments, and core devices.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/what-is-iot-greengrass.html\">What is IoT Greengrass?</a> in the <i>IoT Greengrass V2 Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstalledComponent.h
 *
 * Contains information about a component on a Greengrass core device.
 */

#ifndef OAIInstalledComponent_H
#define OAIInstalledComponent_H

#include <QJsonObject>

#include "OAIInstalledComponentLifecycleState.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInstalledComponent : public OAIObject {
public:
    OAIInstalledComponent();
    OAIInstalledComponent(QString json);
    ~OAIInstalledComponent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getComponentName() const;
    void setComponentName(const QString &component_name);
    bool is_component_name_Set() const;
    bool is_component_name_Valid() const;

    QString getComponentVersion() const;
    void setComponentVersion(const QString &component_version);
    bool is_component_version_Set() const;
    bool is_component_version_Valid() const;

    OAIInstalledComponentLifecycleState getLifecycleState() const;
    void setLifecycleState(const OAIInstalledComponentLifecycleState &lifecycle_state);
    bool is_lifecycle_state_Set() const;
    bool is_lifecycle_state_Valid() const;

    QString getLifecycleStateDetails() const;
    void setLifecycleStateDetails(const QString &lifecycle_state_details);
    bool is_lifecycle_state_details_Set() const;
    bool is_lifecycle_state_details_Valid() const;

    bool getIsRoot() const;
    void setIsRoot(const bool &is_root);
    bool is_is_root_Set() const;
    bool is_is_root_Valid() const;

    QDateTime getLastStatusChangeTimestamp() const;
    void setLastStatusChangeTimestamp(const QDateTime &last_status_change_timestamp);
    bool is_last_status_change_timestamp_Set() const;
    bool is_last_status_change_timestamp_Valid() const;

    QDateTime getLastReportedTimestamp() const;
    void setLastReportedTimestamp(const QDateTime &last_reported_timestamp);
    bool is_last_reported_timestamp_Set() const;
    bool is_last_reported_timestamp_Valid() const;

    QString getLastInstallationSource() const;
    void setLastInstallationSource(const QString &last_installation_source);
    bool is_last_installation_source_Set() const;
    bool is_last_installation_source_Valid() const;

    QList getLifecycleStatusCodes() const;
    void setLifecycleStatusCodes(const QList &lifecycle_status_codes);
    bool is_lifecycle_status_codes_Set() const;
    bool is_lifecycle_status_codes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_component_name;
    bool m_component_name_isSet;
    bool m_component_name_isValid;

    QString m_component_version;
    bool m_component_version_isSet;
    bool m_component_version_isValid;

    OAIInstalledComponentLifecycleState m_lifecycle_state;
    bool m_lifecycle_state_isSet;
    bool m_lifecycle_state_isValid;

    QString m_lifecycle_state_details;
    bool m_lifecycle_state_details_isSet;
    bool m_lifecycle_state_details_isValid;

    bool m_is_root;
    bool m_is_root_isSet;
    bool m_is_root_isValid;

    QDateTime m_last_status_change_timestamp;
    bool m_last_status_change_timestamp_isSet;
    bool m_last_status_change_timestamp_isValid;

    QDateTime m_last_reported_timestamp;
    bool m_last_reported_timestamp_isSet;
    bool m_last_reported_timestamp_isValid;

    QString m_last_installation_source;
    bool m_last_installation_source_isSet;
    bool m_last_installation_source_isValid;

    QList m_lifecycle_status_codes;
    bool m_lifecycle_status_codes_isSet;
    bool m_lifecycle_status_codes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstalledComponent)

#endif // OAIInstalledComponent_H
