/**
 * Amazon WorkMail Message Flow
 * The WorkMail Message Flow API provides access to email messages as they are being sent and received by a WorkMail organization.
 *
 * The version of the OpenAPI document: 2019-05-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutRawMessageContent_request_content.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutRawMessageContent_request_content::OAIPutRawMessageContent_request_content(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutRawMessageContent_request_content::OAIPutRawMessageContent_request_content() {
    this->initializeModel();
}

OAIPutRawMessageContent_request_content::~OAIPutRawMessageContent_request_content() {}

void OAIPutRawMessageContent_request_content::initializeModel() {

    m_s3_reference_isSet = false;
    m_s3_reference_isValid = false;
}

void OAIPutRawMessageContent_request_content::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutRawMessageContent_request_content::fromJsonObject(QJsonObject json) {

    m_s3_reference_isValid = ::OpenAPI::fromJsonValue(m_s3_reference, json[QString("s3Reference")]);
    m_s3_reference_isSet = !json[QString("s3Reference")].isNull() && m_s3_reference_isValid;
}

QString OAIPutRawMessageContent_request_content::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutRawMessageContent_request_content::asJsonObject() const {
    QJsonObject obj;
    if (m_s3_reference.isSet()) {
        obj.insert(QString("s3Reference"), ::OpenAPI::toJsonValue(m_s3_reference));
    }
    return obj;
}

OAIPutRawMessageContent_request_content_s3Reference OAIPutRawMessageContent_request_content::getS3Reference() const {
    return m_s3_reference;
}
void OAIPutRawMessageContent_request_content::setS3Reference(const OAIPutRawMessageContent_request_content_s3Reference &s3_reference) {
    m_s3_reference = s3_reference;
    m_s3_reference_isSet = true;
}

bool OAIPutRawMessageContent_request_content::is_s3_reference_Set() const{
    return m_s3_reference_isSet;
}

bool OAIPutRawMessageContent_request_content::is_s3_reference_Valid() const{
    return m_s3_reference_isValid;
}

bool OAIPutRawMessageContent_request_content::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s3_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutRawMessageContent_request_content::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
