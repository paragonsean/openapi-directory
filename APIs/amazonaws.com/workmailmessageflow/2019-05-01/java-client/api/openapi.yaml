openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: The WorkMail Message Flow API provides access to email messages as
    they are being sent and received by a WorkMail organization.
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon WorkMail Message Flow
  version: 2019-05-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: workmailmessageflow
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/workmailmessageflow-2019-05-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/workmailmessageflow/
servers:
- description: The Amazon WorkMail Message Flow multi-region endpoint
  url: "http://workmailmessageflow.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon WorkMail Message Flow multi-region endpoint
  url: "https://workmailmessageflow.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon WorkMail Message Flow endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://workmailmessageflow.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon WorkMail Message Flow endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://workmailmessageflow.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /messages/{messageId}:
    get:
      description: "Retrieves the raw content of an in-transit email message, in MIME\
        \ format."
      operationId: GetRawMessageContent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the email message to retrieve.
        explode: false
        in: path
        name: messageId
        required: true
        schema:
          maxLength: 120
          minLength: 1
          pattern: "[a-z0-9\\-]*"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRawMessageContentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    post:
      description: "<p>Updates the raw content of an in-transit email message, in\
        \ MIME format.</p> <p>This example describes how to update in-transit email\
        \ message. For more information and examples for using this API, see <a href=\"\
        https://docs.aws.amazon.com/workmail/latest/adminguide/update-with-lambda.html\"\
        > Updating message content with AWS Lambda</a>.</p> <note> <p>Updates to an\
        \ in-transit message only appear when you call <code>PutRawMessageContent</code>\
        \ from an AWS Lambda function configured with a synchronous <a href=\"https://docs.aws.amazon.com/workmail/latest/adminguide/lambda.html#synchronous-rules\"\
        > Run Lambda</a> rule. If you call <code>PutRawMessageContent</code> on a\
        \ delivered or sent message, the message remains unchanged, even though <a\
        \ href=\"https://docs.aws.amazon.com/workmail/latest/APIReference/API_messageflow_GetRawMessageContent.html\"\
        >GetRawMessageContent</a> returns an updated message. </p> </note>"
      operationId: PutRawMessageContent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the email message being updated.
        explode: false
        in: path
        name: messageId
        required: true
        schema:
          maxLength: 120
          minLength: 1
          pattern: "[a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRawMessageContent_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRawMessageContentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidContentLocation'
          description: InvalidContentLocation
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageRejected'
          description: MessageRejected
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageFrozen'
          description: MessageFrozen
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    GetRawMessageContentResponse:
      example:
        messageContent: ""
      properties:
        messageContent:
          allOf:
          - $ref: '#/components/schemas/messageContentBlob'
          - description: "The raw content of the email message, in MIME format."
      required:
      - messageContent
      type: object
    ResourceNotFoundException: {}
    PutRawMessageContentResponse:
      properties: {}
      type: object
    S3Reference:
      description: "<p>Amazon S3 object representing the updated message content,\
        \ in MIME format.</p> <note> <p>The region for the S3 bucket containing the\
        \ S3 object must match the region used for WorkMail operations. Also, for\
        \ WorkMail to process an S3 object, it must have permission to access that\
        \ object. For more information, see <a href=\"https://docs.aws.amazon.com/workmail/latest/adminguide/update-with-lambda.html\"\
        > Updating message content with AWS Lambda</a>.</p> </note>"
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/s3BucketIdType'
          - description: The S3 bucket name.
        key:
          allOf:
          - $ref: '#/components/schemas/s3KeyIdType'
          - description: The S3 key object name.
        objectVersion:
          allOf:
          - $ref: '#/components/schemas/s3VersionType'
          - description: "If you enable versioning for the bucket, you can specify\
              \ the object version."
      required:
      - bucket
      - key
      type: object
    InvalidContentLocation: {}
    MessageRejected: {}
    MessageFrozen: {}
    messageIdType:
      maxLength: 120
      minLength: 1
      pattern: "[a-z0-9\\-]*"
      type: string
    GetRawMessageContentRequest:
      properties: {}
      title: GetRawMessageContentRequest
      type: object
    messageContentBlob:
      type: string
    RawMessageContent:
      description: "<p>Provides the MIME content of the updated email message as an\
        \ S3 object. All MIME content must meet the following criteria:</p> <ul> <li>\
        \ <p>Each part of a multipart MIME message must be formatted properly.</p>\
        \ </li> <li> <p>Attachments must be of a content type that Amazon SES supports.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/mime-types-appendix.html\"\
        >Unsupported Attachment Types</a>.</p> </li> <li> <p>If any of the MIME parts\
        \ in a message contain content that is outside of the 7-bit ASCII character\
        \ range, we recommend encoding that content.</p> </li> <li> <p>Per <a href=\"\
        https://tools.ietf.org/html/rfc5321#section-4.5.3.1.6\">RFC 5321</a>, the\
        \ maximum length of each line of text, including the &lt;CRLF&gt;, must not\
        \ exceed 1,000 characters.</p> </li> <li> <p>The message must contain all\
        \ the required header fields. Check the returned error message for more information.</p>\
        \ </li> <li> <p>The value of immutable headers must remain unchanged. Check\
        \ the returned error message for more information.</p> </li> <li> <p>Certain\
        \ unique headers can only appear once. Check the returned error message for\
        \ more information.</p> </li> </ul>"
      properties:
        s3Reference:
          $ref: '#/components/schemas/PutRawMessageContent_request_content_s3Reference'
      required:
      - s3Reference
      type: object
    PutRawMessageContentRequest:
      example:
        content:
          s3Reference:
            bucket: ""
            objectVersion: ""
            key: ""
      properties:
        content:
          $ref: '#/components/schemas/PutRawMessageContentRequest_content'
      required:
      - content
      title: PutRawMessageContentRequest
      type: object
    s3BucketIdType:
      maxLength: 63
      minLength: 3
      pattern: "^[a-z0-9][a-z0-9\\-]*"
      type: string
    s3KeyIdType:
      maxLength: 1024
      minLength: 1
      pattern: "[a-zA-Z0-9\\-/]*"
      type: string
    s3VersionType:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    PutRawMessageContent_request_content_s3Reference:
      allOf:
      - $ref: '#/components/schemas/S3Reference'
      - description: The S3 reference of an email message.
      example:
        bucket: ""
        objectVersion: ""
        key: ""
    PutRawMessageContent_request_content:
      description: "<p>Provides the MIME content of the updated email message as an\
        \ S3 object. All MIME content must meet the following criteria:</p> <ul> <li>\
        \ <p>Each part of a multipart MIME message must be formatted properly.</p>\
        \ </li> <li> <p>Attachments must be of a content type that Amazon SES supports.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/mime-types-appendix.html\"\
        >Unsupported Attachment Types</a>.</p> </li> <li> <p>If any of the MIME parts\
        \ in a message contain content that is outside of the 7-bit ASCII character\
        \ range, we recommend encoding that content.</p> </li> <li> <p>Per <a href=\"\
        https://tools.ietf.org/html/rfc5321#section-4.5.3.1.6\">RFC 5321</a>, the\
        \ maximum length of each line of text, including the &lt;CRLF&gt;, must not\
        \ exceed 1,000 characters.</p> </li> <li> <p>The message must contain all\
        \ the required header fields. Check the returned error message for more information.</p>\
        \ </li> <li> <p>The value of immutable headers must remain unchanged. Check\
        \ the returned error message for more information.</p> </li> <li> <p>Certain\
        \ unique headers can only appear once. Check the returned error message for\
        \ more information.</p> </li> </ul>"
      properties:
        s3Reference:
          $ref: '#/components/schemas/PutRawMessageContent_request_content_s3Reference'
      type: object
    PutRawMessageContent_request:
      properties:
        content:
          $ref: '#/components/schemas/PutRawMessageContent_request_content'
      required:
      - content
      type: object
    PutRawMessageContentRequest_content:
      allOf:
      - $ref: '#/components/schemas/RawMessageContent'
      - description: Describes the raw message content of the updated email message.
      example:
        s3Reference:
          bucket: ""
          objectVersion: ""
          key: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4

