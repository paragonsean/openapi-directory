/**
 * Amazon WorkMail Message Flow
 * The WorkMail Message Flow API provides access to email messages as they are being sent and received by a WorkMail organization.
 *
 * The version of the OpenAPI document: 2019-05-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PutRawMessageContentRequestContentS3Reference from './PutRawMessageContentRequestContentS3Reference';
import RawMessageContent from './RawMessageContent';

/**
 * The PutRawMessageContentRequestContent model module.
 * @module model/PutRawMessageContentRequestContent
 * @version 2019-05-01
 */
class PutRawMessageContentRequestContent {
    /**
     * Constructs a new <code>PutRawMessageContentRequestContent</code>.
     * @alias module:model/PutRawMessageContentRequestContent
     * @implements module:model/RawMessageContent
     * @param s3Reference {module:model/PutRawMessageContentRequestContentS3Reference} 
     */
    constructor(s3Reference) { 
        RawMessageContent.initialize(this, s3Reference);
        PutRawMessageContentRequestContent.initialize(this, s3Reference);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, s3Reference) { 
        obj['s3Reference'] = s3Reference;
    }

    /**
     * Constructs a <code>PutRawMessageContentRequestContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutRawMessageContentRequestContent} obj Optional instance to populate.
     * @return {module:model/PutRawMessageContentRequestContent} The populated <code>PutRawMessageContentRequestContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutRawMessageContentRequestContent();
            RawMessageContent.constructFromObject(data, obj);

            if (data.hasOwnProperty('s3Reference')) {
                obj['s3Reference'] = PutRawMessageContentRequestContentS3Reference.constructFromObject(data['s3Reference']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutRawMessageContentRequestContent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutRawMessageContentRequestContent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PutRawMessageContentRequestContent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `s3Reference`
        if (data['s3Reference']) { // data not null
          PutRawMessageContentRequestContentS3Reference.validateJSON(data['s3Reference']);
        }

        return true;
    }


}

PutRawMessageContentRequestContent.RequiredProperties = ["s3Reference"];

/**
 * @member {module:model/PutRawMessageContentRequestContentS3Reference} s3Reference
 */
PutRawMessageContentRequestContent.prototype['s3Reference'] = undefined;


// Implement RawMessageContent interface:
/**
 * @member {module:model/PutRawMessageContentRequestContentS3Reference} s3Reference
 */
RawMessageContent.prototype['s3Reference'] = undefined;




export default PutRawMessageContentRequestContent;

