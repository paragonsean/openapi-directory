/**
 * AmazonMQ
 * Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EngineType from './EngineType';

/**
 * The BrokerEngineType model module.
 * @module model/BrokerEngineType
 * @version 2017-11-27
 */
class BrokerEngineType {
    /**
     * Constructs a new <code>BrokerEngineType</code>.
     * Types of broker engines.
     * @alias module:model/BrokerEngineType
     */
    constructor() { 
        
        BrokerEngineType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BrokerEngineType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BrokerEngineType} obj Optional instance to populate.
     * @return {module:model/BrokerEngineType} The populated <code>BrokerEngineType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BrokerEngineType();

            if (data.hasOwnProperty('EngineType')) {
                obj['EngineType'] = ApiClient.convertToType(data['EngineType'], EngineType);
            }
            if (data.hasOwnProperty('EngineVersions')) {
                obj['EngineVersions'] = ApiClient.convertToType(data['EngineVersions'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BrokerEngineType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BrokerEngineType</code>.
     */
    static validateJSON(data) {
        // validate the optional field `EngineType`
        if (data['EngineType']) { // data not null
          EngineType.validateJSON(data['EngineType']);
        }
        // validate the optional field `EngineVersions`
        if (data['EngineVersions']) { // data not null
          Array.validateJSON(data['EngineVersions']);
        }

        return true;
    }


}



/**
 * @member {module:model/EngineType} EngineType
 */
BrokerEngineType.prototype['EngineType'] = undefined;

/**
 * @member {Array} EngineVersions
 */
BrokerEngineType.prototype['EngineVersions'] = undefined;






export default BrokerEngineType;

