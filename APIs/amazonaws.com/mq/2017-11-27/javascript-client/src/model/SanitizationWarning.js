/**
 * AmazonMQ
 * Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SanitizationWarningReason from './SanitizationWarningReason';

/**
 * The SanitizationWarning model module.
 * @module model/SanitizationWarning
 * @version 2017-11-27
 */
class SanitizationWarning {
    /**
     * Constructs a new <code>SanitizationWarning</code>.
     * Returns information about the configuration element or attribute that was sanitized in the configuration.
     * @alias module:model/SanitizationWarning
     * @param reason {module:model/SanitizationWarningReason} 
     */
    constructor(reason) { 
        
        SanitizationWarning.initialize(this, reason);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, reason) { 
        obj['Reason'] = reason;
    }

    /**
     * Constructs a <code>SanitizationWarning</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SanitizationWarning} obj Optional instance to populate.
     * @return {module:model/SanitizationWarning} The populated <code>SanitizationWarning</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SanitizationWarning();

            if (data.hasOwnProperty('AttributeName')) {
                obj['AttributeName'] = ApiClient.convertToType(data['AttributeName'], 'String');
            }
            if (data.hasOwnProperty('ElementName')) {
                obj['ElementName'] = ApiClient.convertToType(data['ElementName'], 'String');
            }
            if (data.hasOwnProperty('Reason')) {
                obj['Reason'] = ApiClient.convertToType(data['Reason'], SanitizationWarningReason);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SanitizationWarning</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SanitizationWarning</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SanitizationWarning.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `AttributeName`
        if (data['AttributeName']) { // data not null
          String.validateJSON(data['AttributeName']);
        }
        // validate the optional field `ElementName`
        if (data['ElementName']) { // data not null
          String.validateJSON(data['ElementName']);
        }
        // validate the optional field `Reason`
        if (data['Reason']) { // data not null
          SanitizationWarningReason.validateJSON(data['Reason']);
        }

        return true;
    }


}

SanitizationWarning.RequiredProperties = ["Reason"];

/**
 * @member {String} AttributeName
 */
SanitizationWarning.prototype['AttributeName'] = undefined;

/**
 * @member {String} ElementName
 */
SanitizationWarning.prototype['ElementName'] = undefined;

/**
 * @member {module:model/SanitizationWarningReason} Reason
 */
SanitizationWarning.prototype['Reason'] = undefined;






export default SanitizationWarning;

