/**
 * AmazonMQ
 * Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuthenticationStrategy from './AuthenticationStrategy';
import DescribeConfigurationResponseLatestRevision from './DescribeConfigurationResponseLatestRevision';
import EngineType from './EngineType';

/**
 * The Configuration model module.
 * @module model/Configuration
 * @version 2017-11-27
 */
class Configuration {
    /**
     * Constructs a new <code>Configuration</code>.
     * Returns information about all configurations.
     * @alias module:model/Configuration
     * @param arn {String} 
     * @param authenticationStrategy {module:model/AuthenticationStrategy} 
     * @param created {Date} 
     * @param description {String} 
     * @param engineType {module:model/EngineType} 
     * @param engineVersion {String} 
     * @param id {String} 
     * @param latestRevision {module:model/DescribeConfigurationResponseLatestRevision} 
     * @param name {String} 
     */
    constructor(arn, authenticationStrategy, created, description, engineType, engineVersion, id, latestRevision, name) { 
        
        Configuration.initialize(this, arn, authenticationStrategy, created, description, engineType, engineVersion, id, latestRevision, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, arn, authenticationStrategy, created, description, engineType, engineVersion, id, latestRevision, name) { 
        obj['Arn'] = arn;
        obj['AuthenticationStrategy'] = authenticationStrategy;
        obj['Created'] = created;
        obj['Description'] = description;
        obj['EngineType'] = engineType;
        obj['EngineVersion'] = engineVersion;
        obj['Id'] = id;
        obj['LatestRevision'] = latestRevision;
        obj['Name'] = name;
    }

    /**
     * Constructs a <code>Configuration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Configuration} obj Optional instance to populate.
     * @return {module:model/Configuration} The populated <code>Configuration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Configuration();

            if (data.hasOwnProperty('Arn')) {
                obj['Arn'] = ApiClient.convertToType(data['Arn'], 'String');
            }
            if (data.hasOwnProperty('AuthenticationStrategy')) {
                obj['AuthenticationStrategy'] = ApiClient.convertToType(data['AuthenticationStrategy'], AuthenticationStrategy);
            }
            if (data.hasOwnProperty('Created')) {
                obj['Created'] = ApiClient.convertToType(data['Created'], 'Date');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('EngineType')) {
                obj['EngineType'] = ApiClient.convertToType(data['EngineType'], EngineType);
            }
            if (data.hasOwnProperty('EngineVersion')) {
                obj['EngineVersion'] = ApiClient.convertToType(data['EngineVersion'], 'String');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('LatestRevision')) {
                obj['LatestRevision'] = DescribeConfigurationResponseLatestRevision.constructFromObject(data['LatestRevision']);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Configuration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Configuration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Configuration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Arn`
        if (data['Arn']) { // data not null
          String.validateJSON(data['Arn']);
        }
        // validate the optional field `AuthenticationStrategy`
        if (data['AuthenticationStrategy']) { // data not null
          AuthenticationStrategy.validateJSON(data['AuthenticationStrategy']);
        }
        // validate the optional field `Created`
        if (data['Created']) { // data not null
          Date.validateJSON(data['Created']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `EngineType`
        if (data['EngineType']) { // data not null
          EngineType.validateJSON(data['EngineType']);
        }
        // validate the optional field `EngineVersion`
        if (data['EngineVersion']) { // data not null
          String.validateJSON(data['EngineVersion']);
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `LatestRevision`
        if (data['LatestRevision']) { // data not null
          DescribeConfigurationResponseLatestRevision.validateJSON(data['LatestRevision']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Object.validateJSON(data['Tags']);
        }

        return true;
    }


}

Configuration.RequiredProperties = ["Arn", "AuthenticationStrategy", "Created", "Description", "EngineType", "EngineVersion", "Id", "LatestRevision", "Name"];

/**
 * @member {String} Arn
 */
Configuration.prototype['Arn'] = undefined;

/**
 * @member {module:model/AuthenticationStrategy} AuthenticationStrategy
 */
Configuration.prototype['AuthenticationStrategy'] = undefined;

/**
 * @member {Date} Created
 */
Configuration.prototype['Created'] = undefined;

/**
 * @member {String} Description
 */
Configuration.prototype['Description'] = undefined;

/**
 * @member {module:model/EngineType} EngineType
 */
Configuration.prototype['EngineType'] = undefined;

/**
 * @member {String} EngineVersion
 */
Configuration.prototype['EngineVersion'] = undefined;

/**
 * @member {String} Id
 */
Configuration.prototype['Id'] = undefined;

/**
 * @member {module:model/DescribeConfigurationResponseLatestRevision} LatestRevision
 */
Configuration.prototype['LatestRevision'] = undefined;

/**
 * @member {String} Name
 */
Configuration.prototype['Name'] = undefined;

/**
 * @member {Object} Tags
 */
Configuration.prototype['Tags'] = undefined;






export default Configuration;

