/*
 * AmazonMQ
 * Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AuthenticationStrategy;
import org.openapitools.client.model.BrokerState;
import org.openapitools.client.model.BrokerStorageType;
import org.openapitools.client.model.DataReplicationMode;
import org.openapitools.client.model.DeploymentMode;
import org.openapitools.client.model.DescribeBrokerResponseConfigurations;
import org.openapitools.client.model.DescribeBrokerResponseDataReplicationMetadata;
import org.openapitools.client.model.DescribeBrokerResponseEncryptionOptions;
import org.openapitools.client.model.DescribeBrokerResponseLdapServerMetadata;
import org.openapitools.client.model.DescribeBrokerResponseLogs;
import org.openapitools.client.model.DescribeBrokerResponseMaintenanceWindowStartTime;
import org.openapitools.client.model.DescribeBrokerResponsePendingDataReplicationMetadata;
import org.openapitools.client.model.DescribeBrokerResponsePendingLdapServerMetadata;
import org.openapitools.client.model.EngineType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeBrokerResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:00:52.574212-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeBrokerResponse {
  public static final String SERIALIZED_NAME_ACTIONS_REQUIRED = "ActionsRequired";
  @SerializedName(SERIALIZED_NAME_ACTIONS_REQUIRED)
  private List actionsRequired;

  public static final String SERIALIZED_NAME_AUTHENTICATION_STRATEGY = "AuthenticationStrategy";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_STRATEGY)
  private AuthenticationStrategy authenticationStrategy;

  public static final String SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE = "AutoMinorVersionUpgrade";
  @SerializedName(SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE)
  private Boolean autoMinorVersionUpgrade;

  public static final String SERIALIZED_NAME_BROKER_ARN = "BrokerArn";
  @SerializedName(SERIALIZED_NAME_BROKER_ARN)
  private String brokerArn;

  public static final String SERIALIZED_NAME_BROKER_ID = "BrokerId";
  @SerializedName(SERIALIZED_NAME_BROKER_ID)
  private String brokerId;

  public static final String SERIALIZED_NAME_BROKER_INSTANCES = "BrokerInstances";
  @SerializedName(SERIALIZED_NAME_BROKER_INSTANCES)
  private List brokerInstances;

  public static final String SERIALIZED_NAME_BROKER_NAME = "BrokerName";
  @SerializedName(SERIALIZED_NAME_BROKER_NAME)
  private String brokerName;

  public static final String SERIALIZED_NAME_BROKER_STATE = "BrokerState";
  @SerializedName(SERIALIZED_NAME_BROKER_STATE)
  private BrokerState brokerState;

  public static final String SERIALIZED_NAME_CONFIGURATIONS = "Configurations";
  @SerializedName(SERIALIZED_NAME_CONFIGURATIONS)
  private DescribeBrokerResponseConfigurations configurations;

  public static final String SERIALIZED_NAME_CREATED = "Created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_DEPLOYMENT_MODE = "DeploymentMode";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_MODE)
  private DeploymentMode deploymentMode;

  public static final String SERIALIZED_NAME_ENCRYPTION_OPTIONS = "EncryptionOptions";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_OPTIONS)
  private DescribeBrokerResponseEncryptionOptions encryptionOptions;

  public static final String SERIALIZED_NAME_ENGINE_TYPE = "EngineType";
  @SerializedName(SERIALIZED_NAME_ENGINE_TYPE)
  private EngineType engineType;

  public static final String SERIALIZED_NAME_ENGINE_VERSION = "EngineVersion";
  @SerializedName(SERIALIZED_NAME_ENGINE_VERSION)
  private String engineVersion;

  public static final String SERIALIZED_NAME_HOST_INSTANCE_TYPE = "HostInstanceType";
  @SerializedName(SERIALIZED_NAME_HOST_INSTANCE_TYPE)
  private String hostInstanceType;

  public static final String SERIALIZED_NAME_LDAP_SERVER_METADATA = "LdapServerMetadata";
  @SerializedName(SERIALIZED_NAME_LDAP_SERVER_METADATA)
  private DescribeBrokerResponseLdapServerMetadata ldapServerMetadata;

  public static final String SERIALIZED_NAME_LOGS = "Logs";
  @SerializedName(SERIALIZED_NAME_LOGS)
  private DescribeBrokerResponseLogs logs;

  public static final String SERIALIZED_NAME_MAINTENANCE_WINDOW_START_TIME = "MaintenanceWindowStartTime";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE_WINDOW_START_TIME)
  private DescribeBrokerResponseMaintenanceWindowStartTime maintenanceWindowStartTime;

  public static final String SERIALIZED_NAME_PENDING_AUTHENTICATION_STRATEGY = "PendingAuthenticationStrategy";
  @SerializedName(SERIALIZED_NAME_PENDING_AUTHENTICATION_STRATEGY)
  private AuthenticationStrategy pendingAuthenticationStrategy;

  public static final String SERIALIZED_NAME_PENDING_ENGINE_VERSION = "PendingEngineVersion";
  @SerializedName(SERIALIZED_NAME_PENDING_ENGINE_VERSION)
  private String pendingEngineVersion;

  public static final String SERIALIZED_NAME_PENDING_HOST_INSTANCE_TYPE = "PendingHostInstanceType";
  @SerializedName(SERIALIZED_NAME_PENDING_HOST_INSTANCE_TYPE)
  private String pendingHostInstanceType;

  public static final String SERIALIZED_NAME_PENDING_LDAP_SERVER_METADATA = "PendingLdapServerMetadata";
  @SerializedName(SERIALIZED_NAME_PENDING_LDAP_SERVER_METADATA)
  private DescribeBrokerResponsePendingLdapServerMetadata pendingLdapServerMetadata;

  public static final String SERIALIZED_NAME_PENDING_SECURITY_GROUPS = "PendingSecurityGroups";
  @SerializedName(SERIALIZED_NAME_PENDING_SECURITY_GROUPS)
  private List pendingSecurityGroups;

  public static final String SERIALIZED_NAME_PUBLICLY_ACCESSIBLE = "PubliclyAccessible";
  @SerializedName(SERIALIZED_NAME_PUBLICLY_ACCESSIBLE)
  private Boolean publiclyAccessible;

  public static final String SERIALIZED_NAME_SECURITY_GROUPS = "SecurityGroups";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUPS)
  private List securityGroups;

  public static final String SERIALIZED_NAME_STORAGE_TYPE = "StorageType";
  @SerializedName(SERIALIZED_NAME_STORAGE_TYPE)
  private BrokerStorageType storageType;

  public static final String SERIALIZED_NAME_SUBNET_IDS = "SubnetIds";
  @SerializedName(SERIALIZED_NAME_SUBNET_IDS)
  private List subnetIds;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_USERS = "Users";
  @SerializedName(SERIALIZED_NAME_USERS)
  private List users;

  public static final String SERIALIZED_NAME_DATA_REPLICATION_METADATA = "DataReplicationMetadata";
  @SerializedName(SERIALIZED_NAME_DATA_REPLICATION_METADATA)
  private DescribeBrokerResponseDataReplicationMetadata dataReplicationMetadata;

  public static final String SERIALIZED_NAME_DATA_REPLICATION_MODE = "DataReplicationMode";
  @SerializedName(SERIALIZED_NAME_DATA_REPLICATION_MODE)
  private DataReplicationMode dataReplicationMode;

  public static final String SERIALIZED_NAME_PENDING_DATA_REPLICATION_METADATA = "PendingDataReplicationMetadata";
  @SerializedName(SERIALIZED_NAME_PENDING_DATA_REPLICATION_METADATA)
  private DescribeBrokerResponsePendingDataReplicationMetadata pendingDataReplicationMetadata;

  public static final String SERIALIZED_NAME_PENDING_DATA_REPLICATION_MODE = "PendingDataReplicationMode";
  @SerializedName(SERIALIZED_NAME_PENDING_DATA_REPLICATION_MODE)
  private DataReplicationMode pendingDataReplicationMode;

  public DescribeBrokerResponse() {
  }

  public DescribeBrokerResponse actionsRequired(List actionsRequired) {
    this.actionsRequired = actionsRequired;
    return this;
  }

  /**
   * Get actionsRequired
   * @return actionsRequired
   */
  @javax.annotation.Nullable
  public List getActionsRequired() {
    return actionsRequired;
  }

  public void setActionsRequired(List actionsRequired) {
    this.actionsRequired = actionsRequired;
  }


  public DescribeBrokerResponse authenticationStrategy(AuthenticationStrategy authenticationStrategy) {
    this.authenticationStrategy = authenticationStrategy;
    return this;
  }

  /**
   * Get authenticationStrategy
   * @return authenticationStrategy
   */
  @javax.annotation.Nullable
  public AuthenticationStrategy getAuthenticationStrategy() {
    return authenticationStrategy;
  }

  public void setAuthenticationStrategy(AuthenticationStrategy authenticationStrategy) {
    this.authenticationStrategy = authenticationStrategy;
  }


  public DescribeBrokerResponse autoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
    return this;
  }

  /**
   * Get autoMinorVersionUpgrade
   * @return autoMinorVersionUpgrade
   */
  @javax.annotation.Nullable
  public Boolean getAutoMinorVersionUpgrade() {
    return autoMinorVersionUpgrade;
  }

  public void setAutoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
  }


  public DescribeBrokerResponse brokerArn(String brokerArn) {
    this.brokerArn = brokerArn;
    return this;
  }

  /**
   * Get brokerArn
   * @return brokerArn
   */
  @javax.annotation.Nullable
  public String getBrokerArn() {
    return brokerArn;
  }

  public void setBrokerArn(String brokerArn) {
    this.brokerArn = brokerArn;
  }


  public DescribeBrokerResponse brokerId(String brokerId) {
    this.brokerId = brokerId;
    return this;
  }

  /**
   * Get brokerId
   * @return brokerId
   */
  @javax.annotation.Nullable
  public String getBrokerId() {
    return brokerId;
  }

  public void setBrokerId(String brokerId) {
    this.brokerId = brokerId;
  }


  public DescribeBrokerResponse brokerInstances(List brokerInstances) {
    this.brokerInstances = brokerInstances;
    return this;
  }

  /**
   * Get brokerInstances
   * @return brokerInstances
   */
  @javax.annotation.Nullable
  public List getBrokerInstances() {
    return brokerInstances;
  }

  public void setBrokerInstances(List brokerInstances) {
    this.brokerInstances = brokerInstances;
  }


  public DescribeBrokerResponse brokerName(String brokerName) {
    this.brokerName = brokerName;
    return this;
  }

  /**
   * Get brokerName
   * @return brokerName
   */
  @javax.annotation.Nullable
  public String getBrokerName() {
    return brokerName;
  }

  public void setBrokerName(String brokerName) {
    this.brokerName = brokerName;
  }


  public DescribeBrokerResponse brokerState(BrokerState brokerState) {
    this.brokerState = brokerState;
    return this;
  }

  /**
   * Get brokerState
   * @return brokerState
   */
  @javax.annotation.Nullable
  public BrokerState getBrokerState() {
    return brokerState;
  }

  public void setBrokerState(BrokerState brokerState) {
    this.brokerState = brokerState;
  }


  public DescribeBrokerResponse configurations(DescribeBrokerResponseConfigurations configurations) {
    this.configurations = configurations;
    return this;
  }

  /**
   * Get configurations
   * @return configurations
   */
  @javax.annotation.Nullable
  public DescribeBrokerResponseConfigurations getConfigurations() {
    return configurations;
  }

  public void setConfigurations(DescribeBrokerResponseConfigurations configurations) {
    this.configurations = configurations;
  }


  public DescribeBrokerResponse created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

  /**
   * Get created
   * @return created
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public DescribeBrokerResponse deploymentMode(DeploymentMode deploymentMode) {
    this.deploymentMode = deploymentMode;
    return this;
  }

  /**
   * Get deploymentMode
   * @return deploymentMode
   */
  @javax.annotation.Nullable
  public DeploymentMode getDeploymentMode() {
    return deploymentMode;
  }

  public void setDeploymentMode(DeploymentMode deploymentMode) {
    this.deploymentMode = deploymentMode;
  }


  public DescribeBrokerResponse encryptionOptions(DescribeBrokerResponseEncryptionOptions encryptionOptions) {
    this.encryptionOptions = encryptionOptions;
    return this;
  }

  /**
   * Get encryptionOptions
   * @return encryptionOptions
   */
  @javax.annotation.Nullable
  public DescribeBrokerResponseEncryptionOptions getEncryptionOptions() {
    return encryptionOptions;
  }

  public void setEncryptionOptions(DescribeBrokerResponseEncryptionOptions encryptionOptions) {
    this.encryptionOptions = encryptionOptions;
  }


  public DescribeBrokerResponse engineType(EngineType engineType) {
    this.engineType = engineType;
    return this;
  }

  /**
   * Get engineType
   * @return engineType
   */
  @javax.annotation.Nullable
  public EngineType getEngineType() {
    return engineType;
  }

  public void setEngineType(EngineType engineType) {
    this.engineType = engineType;
  }


  public DescribeBrokerResponse engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

  /**
   * Get engineVersion
   * @return engineVersion
   */
  @javax.annotation.Nullable
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }


  public DescribeBrokerResponse hostInstanceType(String hostInstanceType) {
    this.hostInstanceType = hostInstanceType;
    return this;
  }

  /**
   * Get hostInstanceType
   * @return hostInstanceType
   */
  @javax.annotation.Nullable
  public String getHostInstanceType() {
    return hostInstanceType;
  }

  public void setHostInstanceType(String hostInstanceType) {
    this.hostInstanceType = hostInstanceType;
  }


  public DescribeBrokerResponse ldapServerMetadata(DescribeBrokerResponseLdapServerMetadata ldapServerMetadata) {
    this.ldapServerMetadata = ldapServerMetadata;
    return this;
  }

  /**
   * Get ldapServerMetadata
   * @return ldapServerMetadata
   */
  @javax.annotation.Nullable
  public DescribeBrokerResponseLdapServerMetadata getLdapServerMetadata() {
    return ldapServerMetadata;
  }

  public void setLdapServerMetadata(DescribeBrokerResponseLdapServerMetadata ldapServerMetadata) {
    this.ldapServerMetadata = ldapServerMetadata;
  }


  public DescribeBrokerResponse logs(DescribeBrokerResponseLogs logs) {
    this.logs = logs;
    return this;
  }

  /**
   * Get logs
   * @return logs
   */
  @javax.annotation.Nullable
  public DescribeBrokerResponseLogs getLogs() {
    return logs;
  }

  public void setLogs(DescribeBrokerResponseLogs logs) {
    this.logs = logs;
  }


  public DescribeBrokerResponse maintenanceWindowStartTime(DescribeBrokerResponseMaintenanceWindowStartTime maintenanceWindowStartTime) {
    this.maintenanceWindowStartTime = maintenanceWindowStartTime;
    return this;
  }

  /**
   * Get maintenanceWindowStartTime
   * @return maintenanceWindowStartTime
   */
  @javax.annotation.Nullable
  public DescribeBrokerResponseMaintenanceWindowStartTime getMaintenanceWindowStartTime() {
    return maintenanceWindowStartTime;
  }

  public void setMaintenanceWindowStartTime(DescribeBrokerResponseMaintenanceWindowStartTime maintenanceWindowStartTime) {
    this.maintenanceWindowStartTime = maintenanceWindowStartTime;
  }


  public DescribeBrokerResponse pendingAuthenticationStrategy(AuthenticationStrategy pendingAuthenticationStrategy) {
    this.pendingAuthenticationStrategy = pendingAuthenticationStrategy;
    return this;
  }

  /**
   * Get pendingAuthenticationStrategy
   * @return pendingAuthenticationStrategy
   */
  @javax.annotation.Nullable
  public AuthenticationStrategy getPendingAuthenticationStrategy() {
    return pendingAuthenticationStrategy;
  }

  public void setPendingAuthenticationStrategy(AuthenticationStrategy pendingAuthenticationStrategy) {
    this.pendingAuthenticationStrategy = pendingAuthenticationStrategy;
  }


  public DescribeBrokerResponse pendingEngineVersion(String pendingEngineVersion) {
    this.pendingEngineVersion = pendingEngineVersion;
    return this;
  }

  /**
   * Get pendingEngineVersion
   * @return pendingEngineVersion
   */
  @javax.annotation.Nullable
  public String getPendingEngineVersion() {
    return pendingEngineVersion;
  }

  public void setPendingEngineVersion(String pendingEngineVersion) {
    this.pendingEngineVersion = pendingEngineVersion;
  }


  public DescribeBrokerResponse pendingHostInstanceType(String pendingHostInstanceType) {
    this.pendingHostInstanceType = pendingHostInstanceType;
    return this;
  }

  /**
   * Get pendingHostInstanceType
   * @return pendingHostInstanceType
   */
  @javax.annotation.Nullable
  public String getPendingHostInstanceType() {
    return pendingHostInstanceType;
  }

  public void setPendingHostInstanceType(String pendingHostInstanceType) {
    this.pendingHostInstanceType = pendingHostInstanceType;
  }


  public DescribeBrokerResponse pendingLdapServerMetadata(DescribeBrokerResponsePendingLdapServerMetadata pendingLdapServerMetadata) {
    this.pendingLdapServerMetadata = pendingLdapServerMetadata;
    return this;
  }

  /**
   * Get pendingLdapServerMetadata
   * @return pendingLdapServerMetadata
   */
  @javax.annotation.Nullable
  public DescribeBrokerResponsePendingLdapServerMetadata getPendingLdapServerMetadata() {
    return pendingLdapServerMetadata;
  }

  public void setPendingLdapServerMetadata(DescribeBrokerResponsePendingLdapServerMetadata pendingLdapServerMetadata) {
    this.pendingLdapServerMetadata = pendingLdapServerMetadata;
  }


  public DescribeBrokerResponse pendingSecurityGroups(List pendingSecurityGroups) {
    this.pendingSecurityGroups = pendingSecurityGroups;
    return this;
  }

  /**
   * Get pendingSecurityGroups
   * @return pendingSecurityGroups
   */
  @javax.annotation.Nullable
  public List getPendingSecurityGroups() {
    return pendingSecurityGroups;
  }

  public void setPendingSecurityGroups(List pendingSecurityGroups) {
    this.pendingSecurityGroups = pendingSecurityGroups;
  }


  public DescribeBrokerResponse publiclyAccessible(Boolean publiclyAccessible) {
    this.publiclyAccessible = publiclyAccessible;
    return this;
  }

  /**
   * Get publiclyAccessible
   * @return publiclyAccessible
   */
  @javax.annotation.Nullable
  public Boolean getPubliclyAccessible() {
    return publiclyAccessible;
  }

  public void setPubliclyAccessible(Boolean publiclyAccessible) {
    this.publiclyAccessible = publiclyAccessible;
  }


  public DescribeBrokerResponse securityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
    return this;
  }

  /**
   * Get securityGroups
   * @return securityGroups
   */
  @javax.annotation.Nullable
  public List getSecurityGroups() {
    return securityGroups;
  }

  public void setSecurityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
  }


  public DescribeBrokerResponse storageType(BrokerStorageType storageType) {
    this.storageType = storageType;
    return this;
  }

  /**
   * Get storageType
   * @return storageType
   */
  @javax.annotation.Nullable
  public BrokerStorageType getStorageType() {
    return storageType;
  }

  public void setStorageType(BrokerStorageType storageType) {
    this.storageType = storageType;
  }


  public DescribeBrokerResponse subnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
    return this;
  }

  /**
   * Get subnetIds
   * @return subnetIds
   */
  @javax.annotation.Nullable
  public List getSubnetIds() {
    return subnetIds;
  }

  public void setSubnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
  }


  public DescribeBrokerResponse tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public DescribeBrokerResponse users(List users) {
    this.users = users;
    return this;
  }

  /**
   * Get users
   * @return users
   */
  @javax.annotation.Nullable
  public List getUsers() {
    return users;
  }

  public void setUsers(List users) {
    this.users = users;
  }


  public DescribeBrokerResponse dataReplicationMetadata(DescribeBrokerResponseDataReplicationMetadata dataReplicationMetadata) {
    this.dataReplicationMetadata = dataReplicationMetadata;
    return this;
  }

  /**
   * Get dataReplicationMetadata
   * @return dataReplicationMetadata
   */
  @javax.annotation.Nullable
  public DescribeBrokerResponseDataReplicationMetadata getDataReplicationMetadata() {
    return dataReplicationMetadata;
  }

  public void setDataReplicationMetadata(DescribeBrokerResponseDataReplicationMetadata dataReplicationMetadata) {
    this.dataReplicationMetadata = dataReplicationMetadata;
  }


  public DescribeBrokerResponse dataReplicationMode(DataReplicationMode dataReplicationMode) {
    this.dataReplicationMode = dataReplicationMode;
    return this;
  }

  /**
   * Get dataReplicationMode
   * @return dataReplicationMode
   */
  @javax.annotation.Nullable
  public DataReplicationMode getDataReplicationMode() {
    return dataReplicationMode;
  }

  public void setDataReplicationMode(DataReplicationMode dataReplicationMode) {
    this.dataReplicationMode = dataReplicationMode;
  }


  public DescribeBrokerResponse pendingDataReplicationMetadata(DescribeBrokerResponsePendingDataReplicationMetadata pendingDataReplicationMetadata) {
    this.pendingDataReplicationMetadata = pendingDataReplicationMetadata;
    return this;
  }

  /**
   * Get pendingDataReplicationMetadata
   * @return pendingDataReplicationMetadata
   */
  @javax.annotation.Nullable
  public DescribeBrokerResponsePendingDataReplicationMetadata getPendingDataReplicationMetadata() {
    return pendingDataReplicationMetadata;
  }

  public void setPendingDataReplicationMetadata(DescribeBrokerResponsePendingDataReplicationMetadata pendingDataReplicationMetadata) {
    this.pendingDataReplicationMetadata = pendingDataReplicationMetadata;
  }


  public DescribeBrokerResponse pendingDataReplicationMode(DataReplicationMode pendingDataReplicationMode) {
    this.pendingDataReplicationMode = pendingDataReplicationMode;
    return this;
  }

  /**
   * Get pendingDataReplicationMode
   * @return pendingDataReplicationMode
   */
  @javax.annotation.Nullable
  public DataReplicationMode getPendingDataReplicationMode() {
    return pendingDataReplicationMode;
  }

  public void setPendingDataReplicationMode(DataReplicationMode pendingDataReplicationMode) {
    this.pendingDataReplicationMode = pendingDataReplicationMode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeBrokerResponse describeBrokerResponse = (DescribeBrokerResponse) o;
    return Objects.equals(this.actionsRequired, describeBrokerResponse.actionsRequired) &&
        Objects.equals(this.authenticationStrategy, describeBrokerResponse.authenticationStrategy) &&
        Objects.equals(this.autoMinorVersionUpgrade, describeBrokerResponse.autoMinorVersionUpgrade) &&
        Objects.equals(this.brokerArn, describeBrokerResponse.brokerArn) &&
        Objects.equals(this.brokerId, describeBrokerResponse.brokerId) &&
        Objects.equals(this.brokerInstances, describeBrokerResponse.brokerInstances) &&
        Objects.equals(this.brokerName, describeBrokerResponse.brokerName) &&
        Objects.equals(this.brokerState, describeBrokerResponse.brokerState) &&
        Objects.equals(this.configurations, describeBrokerResponse.configurations) &&
        Objects.equals(this.created, describeBrokerResponse.created) &&
        Objects.equals(this.deploymentMode, describeBrokerResponse.deploymentMode) &&
        Objects.equals(this.encryptionOptions, describeBrokerResponse.encryptionOptions) &&
        Objects.equals(this.engineType, describeBrokerResponse.engineType) &&
        Objects.equals(this.engineVersion, describeBrokerResponse.engineVersion) &&
        Objects.equals(this.hostInstanceType, describeBrokerResponse.hostInstanceType) &&
        Objects.equals(this.ldapServerMetadata, describeBrokerResponse.ldapServerMetadata) &&
        Objects.equals(this.logs, describeBrokerResponse.logs) &&
        Objects.equals(this.maintenanceWindowStartTime, describeBrokerResponse.maintenanceWindowStartTime) &&
        Objects.equals(this.pendingAuthenticationStrategy, describeBrokerResponse.pendingAuthenticationStrategy) &&
        Objects.equals(this.pendingEngineVersion, describeBrokerResponse.pendingEngineVersion) &&
        Objects.equals(this.pendingHostInstanceType, describeBrokerResponse.pendingHostInstanceType) &&
        Objects.equals(this.pendingLdapServerMetadata, describeBrokerResponse.pendingLdapServerMetadata) &&
        Objects.equals(this.pendingSecurityGroups, describeBrokerResponse.pendingSecurityGroups) &&
        Objects.equals(this.publiclyAccessible, describeBrokerResponse.publiclyAccessible) &&
        Objects.equals(this.securityGroups, describeBrokerResponse.securityGroups) &&
        Objects.equals(this.storageType, describeBrokerResponse.storageType) &&
        Objects.equals(this.subnetIds, describeBrokerResponse.subnetIds) &&
        Objects.equals(this.tags, describeBrokerResponse.tags) &&
        Objects.equals(this.users, describeBrokerResponse.users) &&
        Objects.equals(this.dataReplicationMetadata, describeBrokerResponse.dataReplicationMetadata) &&
        Objects.equals(this.dataReplicationMode, describeBrokerResponse.dataReplicationMode) &&
        Objects.equals(this.pendingDataReplicationMetadata, describeBrokerResponse.pendingDataReplicationMetadata) &&
        Objects.equals(this.pendingDataReplicationMode, describeBrokerResponse.pendingDataReplicationMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionsRequired, authenticationStrategy, autoMinorVersionUpgrade, brokerArn, brokerId, brokerInstances, brokerName, brokerState, configurations, created, deploymentMode, encryptionOptions, engineType, engineVersion, hostInstanceType, ldapServerMetadata, logs, maintenanceWindowStartTime, pendingAuthenticationStrategy, pendingEngineVersion, pendingHostInstanceType, pendingLdapServerMetadata, pendingSecurityGroups, publiclyAccessible, securityGroups, storageType, subnetIds, tags, users, dataReplicationMetadata, dataReplicationMode, pendingDataReplicationMetadata, pendingDataReplicationMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeBrokerResponse {\n");
    sb.append("    actionsRequired: ").append(toIndentedString(actionsRequired)).append("\n");
    sb.append("    authenticationStrategy: ").append(toIndentedString(authenticationStrategy)).append("\n");
    sb.append("    autoMinorVersionUpgrade: ").append(toIndentedString(autoMinorVersionUpgrade)).append("\n");
    sb.append("    brokerArn: ").append(toIndentedString(brokerArn)).append("\n");
    sb.append("    brokerId: ").append(toIndentedString(brokerId)).append("\n");
    sb.append("    brokerInstances: ").append(toIndentedString(brokerInstances)).append("\n");
    sb.append("    brokerName: ").append(toIndentedString(brokerName)).append("\n");
    sb.append("    brokerState: ").append(toIndentedString(brokerState)).append("\n");
    sb.append("    configurations: ").append(toIndentedString(configurations)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    deploymentMode: ").append(toIndentedString(deploymentMode)).append("\n");
    sb.append("    encryptionOptions: ").append(toIndentedString(encryptionOptions)).append("\n");
    sb.append("    engineType: ").append(toIndentedString(engineType)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    hostInstanceType: ").append(toIndentedString(hostInstanceType)).append("\n");
    sb.append("    ldapServerMetadata: ").append(toIndentedString(ldapServerMetadata)).append("\n");
    sb.append("    logs: ").append(toIndentedString(logs)).append("\n");
    sb.append("    maintenanceWindowStartTime: ").append(toIndentedString(maintenanceWindowStartTime)).append("\n");
    sb.append("    pendingAuthenticationStrategy: ").append(toIndentedString(pendingAuthenticationStrategy)).append("\n");
    sb.append("    pendingEngineVersion: ").append(toIndentedString(pendingEngineVersion)).append("\n");
    sb.append("    pendingHostInstanceType: ").append(toIndentedString(pendingHostInstanceType)).append("\n");
    sb.append("    pendingLdapServerMetadata: ").append(toIndentedString(pendingLdapServerMetadata)).append("\n");
    sb.append("    pendingSecurityGroups: ").append(toIndentedString(pendingSecurityGroups)).append("\n");
    sb.append("    publiclyAccessible: ").append(toIndentedString(publiclyAccessible)).append("\n");
    sb.append("    securityGroups: ").append(toIndentedString(securityGroups)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    subnetIds: ").append(toIndentedString(subnetIds)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    dataReplicationMetadata: ").append(toIndentedString(dataReplicationMetadata)).append("\n");
    sb.append("    dataReplicationMode: ").append(toIndentedString(dataReplicationMode)).append("\n");
    sb.append("    pendingDataReplicationMetadata: ").append(toIndentedString(pendingDataReplicationMetadata)).append("\n");
    sb.append("    pendingDataReplicationMode: ").append(toIndentedString(pendingDataReplicationMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ActionsRequired");
    openapiFields.add("AuthenticationStrategy");
    openapiFields.add("AutoMinorVersionUpgrade");
    openapiFields.add("BrokerArn");
    openapiFields.add("BrokerId");
    openapiFields.add("BrokerInstances");
    openapiFields.add("BrokerName");
    openapiFields.add("BrokerState");
    openapiFields.add("Configurations");
    openapiFields.add("Created");
    openapiFields.add("DeploymentMode");
    openapiFields.add("EncryptionOptions");
    openapiFields.add("EngineType");
    openapiFields.add("EngineVersion");
    openapiFields.add("HostInstanceType");
    openapiFields.add("LdapServerMetadata");
    openapiFields.add("Logs");
    openapiFields.add("MaintenanceWindowStartTime");
    openapiFields.add("PendingAuthenticationStrategy");
    openapiFields.add("PendingEngineVersion");
    openapiFields.add("PendingHostInstanceType");
    openapiFields.add("PendingLdapServerMetadata");
    openapiFields.add("PendingSecurityGroups");
    openapiFields.add("PubliclyAccessible");
    openapiFields.add("SecurityGroups");
    openapiFields.add("StorageType");
    openapiFields.add("SubnetIds");
    openapiFields.add("Tags");
    openapiFields.add("Users");
    openapiFields.add("DataReplicationMetadata");
    openapiFields.add("DataReplicationMode");
    openapiFields.add("PendingDataReplicationMetadata");
    openapiFields.add("PendingDataReplicationMode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeBrokerResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeBrokerResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeBrokerResponse is not found in the empty JSON string", DescribeBrokerResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeBrokerResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeBrokerResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ActionsRequired`
      if (jsonObj.get("ActionsRequired") != null && !jsonObj.get("ActionsRequired").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ActionsRequired"));
      }
      // validate the optional field `AuthenticationStrategy`
      if (jsonObj.get("AuthenticationStrategy") != null && !jsonObj.get("AuthenticationStrategy").isJsonNull()) {
        AuthenticationStrategy.validateJsonElement(jsonObj.get("AuthenticationStrategy"));
      }
      // validate the optional field `AutoMinorVersionUpgrade`
      if (jsonObj.get("AutoMinorVersionUpgrade") != null && !jsonObj.get("AutoMinorVersionUpgrade").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AutoMinorVersionUpgrade"));
      }
      // validate the optional field `BrokerArn`
      if (jsonObj.get("BrokerArn") != null && !jsonObj.get("BrokerArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BrokerArn"));
      }
      // validate the optional field `BrokerId`
      if (jsonObj.get("BrokerId") != null && !jsonObj.get("BrokerId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BrokerId"));
      }
      // validate the optional field `BrokerInstances`
      if (jsonObj.get("BrokerInstances") != null && !jsonObj.get("BrokerInstances").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("BrokerInstances"));
      }
      // validate the optional field `BrokerName`
      if (jsonObj.get("BrokerName") != null && !jsonObj.get("BrokerName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BrokerName"));
      }
      // validate the optional field `BrokerState`
      if (jsonObj.get("BrokerState") != null && !jsonObj.get("BrokerState").isJsonNull()) {
        BrokerState.validateJsonElement(jsonObj.get("BrokerState"));
      }
      // validate the optional field `Configurations`
      if (jsonObj.get("Configurations") != null && !jsonObj.get("Configurations").isJsonNull()) {
        DescribeBrokerResponseConfigurations.validateJsonElement(jsonObj.get("Configurations"));
      }
      // validate the optional field `Created`
      if (jsonObj.get("Created") != null && !jsonObj.get("Created").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("Created"));
      }
      // validate the optional field `DeploymentMode`
      if (jsonObj.get("DeploymentMode") != null && !jsonObj.get("DeploymentMode").isJsonNull()) {
        DeploymentMode.validateJsonElement(jsonObj.get("DeploymentMode"));
      }
      // validate the optional field `EncryptionOptions`
      if (jsonObj.get("EncryptionOptions") != null && !jsonObj.get("EncryptionOptions").isJsonNull()) {
        DescribeBrokerResponseEncryptionOptions.validateJsonElement(jsonObj.get("EncryptionOptions"));
      }
      // validate the optional field `EngineType`
      if (jsonObj.get("EngineType") != null && !jsonObj.get("EngineType").isJsonNull()) {
        EngineType.validateJsonElement(jsonObj.get("EngineType"));
      }
      // validate the optional field `EngineVersion`
      if (jsonObj.get("EngineVersion") != null && !jsonObj.get("EngineVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineVersion"));
      }
      // validate the optional field `HostInstanceType`
      if (jsonObj.get("HostInstanceType") != null && !jsonObj.get("HostInstanceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HostInstanceType"));
      }
      // validate the optional field `LdapServerMetadata`
      if (jsonObj.get("LdapServerMetadata") != null && !jsonObj.get("LdapServerMetadata").isJsonNull()) {
        DescribeBrokerResponseLdapServerMetadata.validateJsonElement(jsonObj.get("LdapServerMetadata"));
      }
      // validate the optional field `Logs`
      if (jsonObj.get("Logs") != null && !jsonObj.get("Logs").isJsonNull()) {
        DescribeBrokerResponseLogs.validateJsonElement(jsonObj.get("Logs"));
      }
      // validate the optional field `MaintenanceWindowStartTime`
      if (jsonObj.get("MaintenanceWindowStartTime") != null && !jsonObj.get("MaintenanceWindowStartTime").isJsonNull()) {
        DescribeBrokerResponseMaintenanceWindowStartTime.validateJsonElement(jsonObj.get("MaintenanceWindowStartTime"));
      }
      // validate the optional field `PendingAuthenticationStrategy`
      if (jsonObj.get("PendingAuthenticationStrategy") != null && !jsonObj.get("PendingAuthenticationStrategy").isJsonNull()) {
        AuthenticationStrategy.validateJsonElement(jsonObj.get("PendingAuthenticationStrategy"));
      }
      // validate the optional field `PendingEngineVersion`
      if (jsonObj.get("PendingEngineVersion") != null && !jsonObj.get("PendingEngineVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PendingEngineVersion"));
      }
      // validate the optional field `PendingHostInstanceType`
      if (jsonObj.get("PendingHostInstanceType") != null && !jsonObj.get("PendingHostInstanceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PendingHostInstanceType"));
      }
      // validate the optional field `PendingLdapServerMetadata`
      if (jsonObj.get("PendingLdapServerMetadata") != null && !jsonObj.get("PendingLdapServerMetadata").isJsonNull()) {
        DescribeBrokerResponsePendingLdapServerMetadata.validateJsonElement(jsonObj.get("PendingLdapServerMetadata"));
      }
      // validate the optional field `PendingSecurityGroups`
      if (jsonObj.get("PendingSecurityGroups") != null && !jsonObj.get("PendingSecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("PendingSecurityGroups"));
      }
      // validate the optional field `PubliclyAccessible`
      if (jsonObj.get("PubliclyAccessible") != null && !jsonObj.get("PubliclyAccessible").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("PubliclyAccessible"));
      }
      // validate the optional field `SecurityGroups`
      if (jsonObj.get("SecurityGroups") != null && !jsonObj.get("SecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroups"));
      }
      // validate the optional field `StorageType`
      if (jsonObj.get("StorageType") != null && !jsonObj.get("StorageType").isJsonNull()) {
        BrokerStorageType.validateJsonElement(jsonObj.get("StorageType"));
      }
      // validate the optional field `SubnetIds`
      if (jsonObj.get("SubnetIds") != null && !jsonObj.get("SubnetIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SubnetIds"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `Users`
      if (jsonObj.get("Users") != null && !jsonObj.get("Users").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Users"));
      }
      // validate the optional field `DataReplicationMetadata`
      if (jsonObj.get("DataReplicationMetadata") != null && !jsonObj.get("DataReplicationMetadata").isJsonNull()) {
        DescribeBrokerResponseDataReplicationMetadata.validateJsonElement(jsonObj.get("DataReplicationMetadata"));
      }
      // validate the optional field `DataReplicationMode`
      if (jsonObj.get("DataReplicationMode") != null && !jsonObj.get("DataReplicationMode").isJsonNull()) {
        DataReplicationMode.validateJsonElement(jsonObj.get("DataReplicationMode"));
      }
      // validate the optional field `PendingDataReplicationMetadata`
      if (jsonObj.get("PendingDataReplicationMetadata") != null && !jsonObj.get("PendingDataReplicationMetadata").isJsonNull()) {
        DescribeBrokerResponsePendingDataReplicationMetadata.validateJsonElement(jsonObj.get("PendingDataReplicationMetadata"));
      }
      // validate the optional field `PendingDataReplicationMode`
      if (jsonObj.get("PendingDataReplicationMode") != null && !jsonObj.get("PendingDataReplicationMode").isJsonNull()) {
        DataReplicationMode.validateJsonElement(jsonObj.get("PendingDataReplicationMode"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeBrokerResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeBrokerResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeBrokerResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeBrokerResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeBrokerResponse>() {
           @Override
           public void write(JsonWriter out, DescribeBrokerResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeBrokerResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeBrokerResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeBrokerResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeBrokerResponse
   */
  public static DescribeBrokerResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeBrokerResponse.class);
  }

  /**
   * Convert an instance of DescribeBrokerResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

