/*
 * AmazonMQ
 * Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AuthenticationStrategy;
import org.openapitools.client.model.DataReplicationMode;
import org.openapitools.client.model.DescribeBrokerResponseDataReplicationMetadata;
import org.openapitools.client.model.DescribeBrokerResponseMaintenanceWindowStartTime;
import org.openapitools.client.model.DescribeBrokerResponsePendingDataReplicationMetadata;
import org.openapitools.client.model.UpdateBrokerResponseConfiguration;
import org.openapitools.client.model.UpdateBrokerResponseLdapServerMetadata;
import org.openapitools.client.model.UpdateBrokerResponseLogs;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateBrokerResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:00:52.574212-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateBrokerResponse {
  public static final String SERIALIZED_NAME_AUTHENTICATION_STRATEGY = "AuthenticationStrategy";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_STRATEGY)
  private AuthenticationStrategy authenticationStrategy;

  public static final String SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE = "AutoMinorVersionUpgrade";
  @SerializedName(SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE)
  private Boolean autoMinorVersionUpgrade;

  public static final String SERIALIZED_NAME_BROKER_ID = "BrokerId";
  @SerializedName(SERIALIZED_NAME_BROKER_ID)
  private String brokerId;

  public static final String SERIALIZED_NAME_CONFIGURATION = "Configuration";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION)
  private UpdateBrokerResponseConfiguration _configuration;

  public static final String SERIALIZED_NAME_ENGINE_VERSION = "EngineVersion";
  @SerializedName(SERIALIZED_NAME_ENGINE_VERSION)
  private String engineVersion;

  public static final String SERIALIZED_NAME_HOST_INSTANCE_TYPE = "HostInstanceType";
  @SerializedName(SERIALIZED_NAME_HOST_INSTANCE_TYPE)
  private String hostInstanceType;

  public static final String SERIALIZED_NAME_LDAP_SERVER_METADATA = "LdapServerMetadata";
  @SerializedName(SERIALIZED_NAME_LDAP_SERVER_METADATA)
  private UpdateBrokerResponseLdapServerMetadata ldapServerMetadata;

  public static final String SERIALIZED_NAME_LOGS = "Logs";
  @SerializedName(SERIALIZED_NAME_LOGS)
  private UpdateBrokerResponseLogs logs;

  public static final String SERIALIZED_NAME_MAINTENANCE_WINDOW_START_TIME = "MaintenanceWindowStartTime";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE_WINDOW_START_TIME)
  private DescribeBrokerResponseMaintenanceWindowStartTime maintenanceWindowStartTime;

  public static final String SERIALIZED_NAME_SECURITY_GROUPS = "SecurityGroups";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUPS)
  private List securityGroups;

  public static final String SERIALIZED_NAME_DATA_REPLICATION_METADATA = "DataReplicationMetadata";
  @SerializedName(SERIALIZED_NAME_DATA_REPLICATION_METADATA)
  private DescribeBrokerResponseDataReplicationMetadata dataReplicationMetadata;

  public static final String SERIALIZED_NAME_DATA_REPLICATION_MODE = "DataReplicationMode";
  @SerializedName(SERIALIZED_NAME_DATA_REPLICATION_MODE)
  private DataReplicationMode dataReplicationMode;

  public static final String SERIALIZED_NAME_PENDING_DATA_REPLICATION_METADATA = "PendingDataReplicationMetadata";
  @SerializedName(SERIALIZED_NAME_PENDING_DATA_REPLICATION_METADATA)
  private DescribeBrokerResponsePendingDataReplicationMetadata pendingDataReplicationMetadata;

  public static final String SERIALIZED_NAME_PENDING_DATA_REPLICATION_MODE = "PendingDataReplicationMode";
  @SerializedName(SERIALIZED_NAME_PENDING_DATA_REPLICATION_MODE)
  private DataReplicationMode pendingDataReplicationMode;

  public UpdateBrokerResponse() {
  }

  public UpdateBrokerResponse authenticationStrategy(AuthenticationStrategy authenticationStrategy) {
    this.authenticationStrategy = authenticationStrategy;
    return this;
  }

  /**
   * Get authenticationStrategy
   * @return authenticationStrategy
   */
  @javax.annotation.Nullable
  public AuthenticationStrategy getAuthenticationStrategy() {
    return authenticationStrategy;
  }

  public void setAuthenticationStrategy(AuthenticationStrategy authenticationStrategy) {
    this.authenticationStrategy = authenticationStrategy;
  }


  public UpdateBrokerResponse autoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
    return this;
  }

  /**
   * Get autoMinorVersionUpgrade
   * @return autoMinorVersionUpgrade
   */
  @javax.annotation.Nullable
  public Boolean getAutoMinorVersionUpgrade() {
    return autoMinorVersionUpgrade;
  }

  public void setAutoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
  }


  public UpdateBrokerResponse brokerId(String brokerId) {
    this.brokerId = brokerId;
    return this;
  }

  /**
   * Get brokerId
   * @return brokerId
   */
  @javax.annotation.Nullable
  public String getBrokerId() {
    return brokerId;
  }

  public void setBrokerId(String brokerId) {
    this.brokerId = brokerId;
  }


  public UpdateBrokerResponse _configuration(UpdateBrokerResponseConfiguration _configuration) {
    this._configuration = _configuration;
    return this;
  }

  /**
   * Get _configuration
   * @return _configuration
   */
  @javax.annotation.Nullable
  public UpdateBrokerResponseConfiguration getConfiguration() {
    return _configuration;
  }

  public void setConfiguration(UpdateBrokerResponseConfiguration _configuration) {
    this._configuration = _configuration;
  }


  public UpdateBrokerResponse engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

  /**
   * Get engineVersion
   * @return engineVersion
   */
  @javax.annotation.Nullable
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }


  public UpdateBrokerResponse hostInstanceType(String hostInstanceType) {
    this.hostInstanceType = hostInstanceType;
    return this;
  }

  /**
   * Get hostInstanceType
   * @return hostInstanceType
   */
  @javax.annotation.Nullable
  public String getHostInstanceType() {
    return hostInstanceType;
  }

  public void setHostInstanceType(String hostInstanceType) {
    this.hostInstanceType = hostInstanceType;
  }


  public UpdateBrokerResponse ldapServerMetadata(UpdateBrokerResponseLdapServerMetadata ldapServerMetadata) {
    this.ldapServerMetadata = ldapServerMetadata;
    return this;
  }

  /**
   * Get ldapServerMetadata
   * @return ldapServerMetadata
   */
  @javax.annotation.Nullable
  public UpdateBrokerResponseLdapServerMetadata getLdapServerMetadata() {
    return ldapServerMetadata;
  }

  public void setLdapServerMetadata(UpdateBrokerResponseLdapServerMetadata ldapServerMetadata) {
    this.ldapServerMetadata = ldapServerMetadata;
  }


  public UpdateBrokerResponse logs(UpdateBrokerResponseLogs logs) {
    this.logs = logs;
    return this;
  }

  /**
   * Get logs
   * @return logs
   */
  @javax.annotation.Nullable
  public UpdateBrokerResponseLogs getLogs() {
    return logs;
  }

  public void setLogs(UpdateBrokerResponseLogs logs) {
    this.logs = logs;
  }


  public UpdateBrokerResponse maintenanceWindowStartTime(DescribeBrokerResponseMaintenanceWindowStartTime maintenanceWindowStartTime) {
    this.maintenanceWindowStartTime = maintenanceWindowStartTime;
    return this;
  }

  /**
   * Get maintenanceWindowStartTime
   * @return maintenanceWindowStartTime
   */
  @javax.annotation.Nullable
  public DescribeBrokerResponseMaintenanceWindowStartTime getMaintenanceWindowStartTime() {
    return maintenanceWindowStartTime;
  }

  public void setMaintenanceWindowStartTime(DescribeBrokerResponseMaintenanceWindowStartTime maintenanceWindowStartTime) {
    this.maintenanceWindowStartTime = maintenanceWindowStartTime;
  }


  public UpdateBrokerResponse securityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
    return this;
  }

  /**
   * Get securityGroups
   * @return securityGroups
   */
  @javax.annotation.Nullable
  public List getSecurityGroups() {
    return securityGroups;
  }

  public void setSecurityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
  }


  public UpdateBrokerResponse dataReplicationMetadata(DescribeBrokerResponseDataReplicationMetadata dataReplicationMetadata) {
    this.dataReplicationMetadata = dataReplicationMetadata;
    return this;
  }

  /**
   * Get dataReplicationMetadata
   * @return dataReplicationMetadata
   */
  @javax.annotation.Nullable
  public DescribeBrokerResponseDataReplicationMetadata getDataReplicationMetadata() {
    return dataReplicationMetadata;
  }

  public void setDataReplicationMetadata(DescribeBrokerResponseDataReplicationMetadata dataReplicationMetadata) {
    this.dataReplicationMetadata = dataReplicationMetadata;
  }


  public UpdateBrokerResponse dataReplicationMode(DataReplicationMode dataReplicationMode) {
    this.dataReplicationMode = dataReplicationMode;
    return this;
  }

  /**
   * Get dataReplicationMode
   * @return dataReplicationMode
   */
  @javax.annotation.Nullable
  public DataReplicationMode getDataReplicationMode() {
    return dataReplicationMode;
  }

  public void setDataReplicationMode(DataReplicationMode dataReplicationMode) {
    this.dataReplicationMode = dataReplicationMode;
  }


  public UpdateBrokerResponse pendingDataReplicationMetadata(DescribeBrokerResponsePendingDataReplicationMetadata pendingDataReplicationMetadata) {
    this.pendingDataReplicationMetadata = pendingDataReplicationMetadata;
    return this;
  }

  /**
   * Get pendingDataReplicationMetadata
   * @return pendingDataReplicationMetadata
   */
  @javax.annotation.Nullable
  public DescribeBrokerResponsePendingDataReplicationMetadata getPendingDataReplicationMetadata() {
    return pendingDataReplicationMetadata;
  }

  public void setPendingDataReplicationMetadata(DescribeBrokerResponsePendingDataReplicationMetadata pendingDataReplicationMetadata) {
    this.pendingDataReplicationMetadata = pendingDataReplicationMetadata;
  }


  public UpdateBrokerResponse pendingDataReplicationMode(DataReplicationMode pendingDataReplicationMode) {
    this.pendingDataReplicationMode = pendingDataReplicationMode;
    return this;
  }

  /**
   * Get pendingDataReplicationMode
   * @return pendingDataReplicationMode
   */
  @javax.annotation.Nullable
  public DataReplicationMode getPendingDataReplicationMode() {
    return pendingDataReplicationMode;
  }

  public void setPendingDataReplicationMode(DataReplicationMode pendingDataReplicationMode) {
    this.pendingDataReplicationMode = pendingDataReplicationMode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateBrokerResponse updateBrokerResponse = (UpdateBrokerResponse) o;
    return Objects.equals(this.authenticationStrategy, updateBrokerResponse.authenticationStrategy) &&
        Objects.equals(this.autoMinorVersionUpgrade, updateBrokerResponse.autoMinorVersionUpgrade) &&
        Objects.equals(this.brokerId, updateBrokerResponse.brokerId) &&
        Objects.equals(this._configuration, updateBrokerResponse._configuration) &&
        Objects.equals(this.engineVersion, updateBrokerResponse.engineVersion) &&
        Objects.equals(this.hostInstanceType, updateBrokerResponse.hostInstanceType) &&
        Objects.equals(this.ldapServerMetadata, updateBrokerResponse.ldapServerMetadata) &&
        Objects.equals(this.logs, updateBrokerResponse.logs) &&
        Objects.equals(this.maintenanceWindowStartTime, updateBrokerResponse.maintenanceWindowStartTime) &&
        Objects.equals(this.securityGroups, updateBrokerResponse.securityGroups) &&
        Objects.equals(this.dataReplicationMetadata, updateBrokerResponse.dataReplicationMetadata) &&
        Objects.equals(this.dataReplicationMode, updateBrokerResponse.dataReplicationMode) &&
        Objects.equals(this.pendingDataReplicationMetadata, updateBrokerResponse.pendingDataReplicationMetadata) &&
        Objects.equals(this.pendingDataReplicationMode, updateBrokerResponse.pendingDataReplicationMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authenticationStrategy, autoMinorVersionUpgrade, brokerId, _configuration, engineVersion, hostInstanceType, ldapServerMetadata, logs, maintenanceWindowStartTime, securityGroups, dataReplicationMetadata, dataReplicationMode, pendingDataReplicationMetadata, pendingDataReplicationMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateBrokerResponse {\n");
    sb.append("    authenticationStrategy: ").append(toIndentedString(authenticationStrategy)).append("\n");
    sb.append("    autoMinorVersionUpgrade: ").append(toIndentedString(autoMinorVersionUpgrade)).append("\n");
    sb.append("    brokerId: ").append(toIndentedString(brokerId)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    hostInstanceType: ").append(toIndentedString(hostInstanceType)).append("\n");
    sb.append("    ldapServerMetadata: ").append(toIndentedString(ldapServerMetadata)).append("\n");
    sb.append("    logs: ").append(toIndentedString(logs)).append("\n");
    sb.append("    maintenanceWindowStartTime: ").append(toIndentedString(maintenanceWindowStartTime)).append("\n");
    sb.append("    securityGroups: ").append(toIndentedString(securityGroups)).append("\n");
    sb.append("    dataReplicationMetadata: ").append(toIndentedString(dataReplicationMetadata)).append("\n");
    sb.append("    dataReplicationMode: ").append(toIndentedString(dataReplicationMode)).append("\n");
    sb.append("    pendingDataReplicationMetadata: ").append(toIndentedString(pendingDataReplicationMetadata)).append("\n");
    sb.append("    pendingDataReplicationMode: ").append(toIndentedString(pendingDataReplicationMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AuthenticationStrategy");
    openapiFields.add("AutoMinorVersionUpgrade");
    openapiFields.add("BrokerId");
    openapiFields.add("Configuration");
    openapiFields.add("EngineVersion");
    openapiFields.add("HostInstanceType");
    openapiFields.add("LdapServerMetadata");
    openapiFields.add("Logs");
    openapiFields.add("MaintenanceWindowStartTime");
    openapiFields.add("SecurityGroups");
    openapiFields.add("DataReplicationMetadata");
    openapiFields.add("DataReplicationMode");
    openapiFields.add("PendingDataReplicationMetadata");
    openapiFields.add("PendingDataReplicationMode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateBrokerResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateBrokerResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateBrokerResponse is not found in the empty JSON string", UpdateBrokerResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateBrokerResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateBrokerResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AuthenticationStrategy`
      if (jsonObj.get("AuthenticationStrategy") != null && !jsonObj.get("AuthenticationStrategy").isJsonNull()) {
        AuthenticationStrategy.validateJsonElement(jsonObj.get("AuthenticationStrategy"));
      }
      // validate the optional field `AutoMinorVersionUpgrade`
      if (jsonObj.get("AutoMinorVersionUpgrade") != null && !jsonObj.get("AutoMinorVersionUpgrade").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AutoMinorVersionUpgrade"));
      }
      // validate the optional field `BrokerId`
      if (jsonObj.get("BrokerId") != null && !jsonObj.get("BrokerId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BrokerId"));
      }
      // validate the optional field `Configuration`
      if (jsonObj.get("Configuration") != null && !jsonObj.get("Configuration").isJsonNull()) {
        UpdateBrokerResponseConfiguration.validateJsonElement(jsonObj.get("Configuration"));
      }
      // validate the optional field `EngineVersion`
      if (jsonObj.get("EngineVersion") != null && !jsonObj.get("EngineVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineVersion"));
      }
      // validate the optional field `HostInstanceType`
      if (jsonObj.get("HostInstanceType") != null && !jsonObj.get("HostInstanceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HostInstanceType"));
      }
      // validate the optional field `LdapServerMetadata`
      if (jsonObj.get("LdapServerMetadata") != null && !jsonObj.get("LdapServerMetadata").isJsonNull()) {
        UpdateBrokerResponseLdapServerMetadata.validateJsonElement(jsonObj.get("LdapServerMetadata"));
      }
      // validate the optional field `Logs`
      if (jsonObj.get("Logs") != null && !jsonObj.get("Logs").isJsonNull()) {
        UpdateBrokerResponseLogs.validateJsonElement(jsonObj.get("Logs"));
      }
      // validate the optional field `MaintenanceWindowStartTime`
      if (jsonObj.get("MaintenanceWindowStartTime") != null && !jsonObj.get("MaintenanceWindowStartTime").isJsonNull()) {
        DescribeBrokerResponseMaintenanceWindowStartTime.validateJsonElement(jsonObj.get("MaintenanceWindowStartTime"));
      }
      // validate the optional field `SecurityGroups`
      if (jsonObj.get("SecurityGroups") != null && !jsonObj.get("SecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroups"));
      }
      // validate the optional field `DataReplicationMetadata`
      if (jsonObj.get("DataReplicationMetadata") != null && !jsonObj.get("DataReplicationMetadata").isJsonNull()) {
        DescribeBrokerResponseDataReplicationMetadata.validateJsonElement(jsonObj.get("DataReplicationMetadata"));
      }
      // validate the optional field `DataReplicationMode`
      if (jsonObj.get("DataReplicationMode") != null && !jsonObj.get("DataReplicationMode").isJsonNull()) {
        DataReplicationMode.validateJsonElement(jsonObj.get("DataReplicationMode"));
      }
      // validate the optional field `PendingDataReplicationMetadata`
      if (jsonObj.get("PendingDataReplicationMetadata") != null && !jsonObj.get("PendingDataReplicationMetadata").isJsonNull()) {
        DescribeBrokerResponsePendingDataReplicationMetadata.validateJsonElement(jsonObj.get("PendingDataReplicationMetadata"));
      }
      // validate the optional field `PendingDataReplicationMode`
      if (jsonObj.get("PendingDataReplicationMode") != null && !jsonObj.get("PendingDataReplicationMode").isJsonNull()) {
        DataReplicationMode.validateJsonElement(jsonObj.get("PendingDataReplicationMode"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateBrokerResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateBrokerResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateBrokerResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateBrokerResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateBrokerResponse>() {
           @Override
           public void write(JsonWriter out, UpdateBrokerResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateBrokerResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateBrokerResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateBrokerResponse
   * @throws IOException if the JSON string is invalid with respect to UpdateBrokerResponse
   */
  public static UpdateBrokerResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateBrokerResponse.class);
  }

  /**
   * Convert an instance of UpdateBrokerResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

