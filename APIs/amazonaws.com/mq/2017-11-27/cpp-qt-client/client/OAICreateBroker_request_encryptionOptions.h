/**
 * AmazonMQ
 * Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateBroker_request_encryptionOptions.h
 *
 * Encryption options for the broker.
 */

#ifndef OAICreateBroker_request_encryptionOptions_H
#define OAICreateBroker_request_encryptionOptions_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateBroker_request_encryptionOptions : public OAIObject {
public:
    OAICreateBroker_request_encryptionOptions();
    OAICreateBroker_request_encryptionOptions(QString json);
    ~OAICreateBroker_request_encryptionOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getKmsKeyId() const;
    void setKmsKeyId(const QString &kms_key_id);
    bool is_kms_key_id_Set() const;
    bool is_kms_key_id_Valid() const;

    bool getUseAwsOwnedKey() const;
    void setUseAwsOwnedKey(const bool &use_aws_owned_key);
    bool is_use_aws_owned_key_Set() const;
    bool is_use_aws_owned_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_kms_key_id;
    bool m_kms_key_id_isSet;
    bool m_kms_key_id_isValid;

    bool m_use_aws_owned_key;
    bool m_use_aws_owned_key_isSet;
    bool m_use_aws_owned_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateBroker_request_encryptionOptions)

#endif // OAICreateBroker_request_encryptionOptions_H
