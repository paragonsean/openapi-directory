/**
 * AmazonMQ
 * Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthenticationStrategy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthenticationStrategy::OAIAuthenticationStrategy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthenticationStrategy::OAIAuthenticationStrategy() {
    this->initializeModel();
}

OAIAuthenticationStrategy::~OAIAuthenticationStrategy() {}

void OAIAuthenticationStrategy::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAuthenticationStrategy::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAuthenticationStrategy::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SIMPLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAuthenticationStrategy::SIMPLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LDAP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAuthenticationStrategy::LDAP;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAuthenticationStrategy::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAuthenticationStrategy::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAuthenticationStrategy::SIMPLE:
            val = "SIMPLE";
            break;
        case eOAIAuthenticationStrategy::LDAP:
            val = "LDAP";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAuthenticationStrategy::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAuthenticationStrategy::eOAIAuthenticationStrategy OAIAuthenticationStrategy::getValue() const {
    return m_value;
}

void OAIAuthenticationStrategy::setValue(const OAIAuthenticationStrategy::eOAIAuthenticationStrategy& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAuthenticationStrategy::isSet() const {
    
    return m_value_isSet;
}

bool OAIAuthenticationStrategy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
