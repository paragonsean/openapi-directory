/**
 * AmazonMQ
 * Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILdapServerMetadataInput.h
 *
 * &lt;p&gt;Optional. The metadata of the LDAP server used to authenticate and authorize connections to the broker.&lt;/p&gt; &lt;important&gt;&lt;p&gt;Does not apply to RabbitMQ brokers.&lt;/p&gt;&lt;/important&gt;
 */

#ifndef OAILdapServerMetadataInput_H
#define OAILdapServerMetadataInput_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILdapServerMetadataInput : public OAIObject {
public:
    OAILdapServerMetadataInput();
    OAILdapServerMetadataInput(QString json);
    ~OAILdapServerMetadataInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getHosts() const;
    void setHosts(const QList &hosts);
    bool is_hosts_Set() const;
    bool is_hosts_Valid() const;

    QString getRoleBase() const;
    void setRoleBase(const QString &role_base);
    bool is_role_base_Set() const;
    bool is_role_base_Valid() const;

    QString getRoleName() const;
    void setRoleName(const QString &role_name);
    bool is_role_name_Set() const;
    bool is_role_name_Valid() const;

    QString getRoleSearchMatching() const;
    void setRoleSearchMatching(const QString &role_search_matching);
    bool is_role_search_matching_Set() const;
    bool is_role_search_matching_Valid() const;

    bool getRoleSearchSubtree() const;
    void setRoleSearchSubtree(const bool &role_search_subtree);
    bool is_role_search_subtree_Set() const;
    bool is_role_search_subtree_Valid() const;

    QString getServiceAccountPassword() const;
    void setServiceAccountPassword(const QString &service_account_password);
    bool is_service_account_password_Set() const;
    bool is_service_account_password_Valid() const;

    QString getServiceAccountUsername() const;
    void setServiceAccountUsername(const QString &service_account_username);
    bool is_service_account_username_Set() const;
    bool is_service_account_username_Valid() const;

    QString getUserBase() const;
    void setUserBase(const QString &user_base);
    bool is_user_base_Set() const;
    bool is_user_base_Valid() const;

    QString getUserRoleName() const;
    void setUserRoleName(const QString &user_role_name);
    bool is_user_role_name_Set() const;
    bool is_user_role_name_Valid() const;

    QString getUserSearchMatching() const;
    void setUserSearchMatching(const QString &user_search_matching);
    bool is_user_search_matching_Set() const;
    bool is_user_search_matching_Valid() const;

    bool getUserSearchSubtree() const;
    void setUserSearchSubtree(const bool &user_search_subtree);
    bool is_user_search_subtree_Set() const;
    bool is_user_search_subtree_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_hosts;
    bool m_hosts_isSet;
    bool m_hosts_isValid;

    QString m_role_base;
    bool m_role_base_isSet;
    bool m_role_base_isValid;

    QString m_role_name;
    bool m_role_name_isSet;
    bool m_role_name_isValid;

    QString m_role_search_matching;
    bool m_role_search_matching_isSet;
    bool m_role_search_matching_isValid;

    bool m_role_search_subtree;
    bool m_role_search_subtree_isSet;
    bool m_role_search_subtree_isValid;

    QString m_service_account_password;
    bool m_service_account_password_isSet;
    bool m_service_account_password_isValid;

    QString m_service_account_username;
    bool m_service_account_username_isSet;
    bool m_service_account_username_isValid;

    QString m_user_base;
    bool m_user_base_isSet;
    bool m_user_base_isValid;

    QString m_user_role_name;
    bool m_user_role_name_isSet;
    bool m_user_role_name_isValid;

    QString m_user_search_matching;
    bool m_user_search_matching_isSet;
    bool m_user_search_matching_isValid;

    bool m_user_search_subtree;
    bool m_user_search_subtree_isSet;
    bool m_user_search_subtree_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILdapServerMetadataInput)

#endif // OAILdapServerMetadataInput_H
