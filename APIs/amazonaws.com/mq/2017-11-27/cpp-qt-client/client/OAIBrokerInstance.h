/**
 * AmazonMQ
 * Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBrokerInstance.h
 *
 * Returns information about all brokers.
 */

#ifndef OAIBrokerInstance_H
#define OAIBrokerInstance_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBrokerInstance : public OAIObject {
public:
    OAIBrokerInstance();
    OAIBrokerInstance(QString json);
    ~OAIBrokerInstance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConsoleUrl() const;
    void setConsoleUrl(const QString &console_url);
    bool is_console_url_Set() const;
    bool is_console_url_Valid() const;

    QList getEndpoints() const;
    void setEndpoints(const QList &endpoints);
    bool is_endpoints_Set() const;
    bool is_endpoints_Valid() const;

    QString getIpAddress() const;
    void setIpAddress(const QString &ip_address);
    bool is_ip_address_Set() const;
    bool is_ip_address_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_console_url;
    bool m_console_url_isSet;
    bool m_console_url_isValid;

    QList m_endpoints;
    bool m_endpoints_isSet;
    bool m_endpoints_isValid;

    QString m_ip_address;
    bool m_ip_address_isSet;
    bool m_ip_address_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBrokerInstance)

#endif // OAIBrokerInstance_H
