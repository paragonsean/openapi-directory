/**
 * AmazonMQ
 * Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateBroker_request.h
 *
 * 
 */

#ifndef OAICreateBroker_request_H
#define OAICreateBroker_request_H

#include <QJsonObject>

#include "OAICreateBroker_request_configuration.h"
#include "OAICreateBroker_request_encryptionOptions.h"
#include "OAICreateBroker_request_ldapServerMetadata.h"
#include "OAICreateBroker_request_logs.h"
#include "OAICreateBroker_request_maintenanceWindowStartTime.h"
#include "OAIUser.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateBroker_request_configuration;
class OAICreateBroker_request_encryptionOptions;
class OAICreateBroker_request_ldapServerMetadata;
class OAICreateBroker_request_logs;
class OAICreateBroker_request_maintenanceWindowStartTime;
class OAIUser;

class OAICreateBroker_request : public OAIObject {
public:
    OAICreateBroker_request();
    OAICreateBroker_request(QString json);
    ~OAICreateBroker_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthenticationStrategy() const;
    void setAuthenticationStrategy(const QString &authentication_strategy);
    bool is_authentication_strategy_Set() const;
    bool is_authentication_strategy_Valid() const;

    bool isAutoMinorVersionUpgrade() const;
    void setAutoMinorVersionUpgrade(const bool &auto_minor_version_upgrade);
    bool is_auto_minor_version_upgrade_Set() const;
    bool is_auto_minor_version_upgrade_Valid() const;

    QString getBrokerName() const;
    void setBrokerName(const QString &broker_name);
    bool is_broker_name_Set() const;
    bool is_broker_name_Valid() const;

    OAICreateBroker_request_configuration getConfiguration() const;
    void setConfiguration(const OAICreateBroker_request_configuration &configuration);
    bool is_configuration_Set() const;
    bool is_configuration_Valid() const;

    QString getCreatorRequestId() const;
    void setCreatorRequestId(const QString &creator_request_id);
    bool is_creator_request_id_Set() const;
    bool is_creator_request_id_Valid() const;

    QString getDeploymentMode() const;
    void setDeploymentMode(const QString &deployment_mode);
    bool is_deployment_mode_Set() const;
    bool is_deployment_mode_Valid() const;

    OAICreateBroker_request_encryptionOptions getEncryptionOptions() const;
    void setEncryptionOptions(const OAICreateBroker_request_encryptionOptions &encryption_options);
    bool is_encryption_options_Set() const;
    bool is_encryption_options_Valid() const;

    QString getEngineType() const;
    void setEngineType(const QString &engine_type);
    bool is_engine_type_Set() const;
    bool is_engine_type_Valid() const;

    QString getEngineVersion() const;
    void setEngineVersion(const QString &engine_version);
    bool is_engine_version_Set() const;
    bool is_engine_version_Valid() const;

    QString getHostInstanceType() const;
    void setHostInstanceType(const QString &host_instance_type);
    bool is_host_instance_type_Set() const;
    bool is_host_instance_type_Valid() const;

    OAICreateBroker_request_ldapServerMetadata getLdapServerMetadata() const;
    void setLdapServerMetadata(const OAICreateBroker_request_ldapServerMetadata &ldap_server_metadata);
    bool is_ldap_server_metadata_Set() const;
    bool is_ldap_server_metadata_Valid() const;

    OAICreateBroker_request_logs getLogs() const;
    void setLogs(const OAICreateBroker_request_logs &logs);
    bool is_logs_Set() const;
    bool is_logs_Valid() const;

    OAICreateBroker_request_maintenanceWindowStartTime getMaintenanceWindowStartTime() const;
    void setMaintenanceWindowStartTime(const OAICreateBroker_request_maintenanceWindowStartTime &maintenance_window_start_time);
    bool is_maintenance_window_start_time_Set() const;
    bool is_maintenance_window_start_time_Valid() const;

    bool isPubliclyAccessible() const;
    void setPubliclyAccessible(const bool &publicly_accessible);
    bool is_publicly_accessible_Set() const;
    bool is_publicly_accessible_Valid() const;

    QList<QString> getSecurityGroups() const;
    void setSecurityGroups(const QList<QString> &security_groups);
    bool is_security_groups_Set() const;
    bool is_security_groups_Valid() const;

    QString getStorageType() const;
    void setStorageType(const QString &storage_type);
    bool is_storage_type_Set() const;
    bool is_storage_type_Valid() const;

    QList<QString> getSubnetIds() const;
    void setSubnetIds(const QList<QString> &subnet_ids);
    bool is_subnet_ids_Set() const;
    bool is_subnet_ids_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QList<OAIUser> getUsers() const;
    void setUsers(const QList<OAIUser> &users);
    bool is_users_Set() const;
    bool is_users_Valid() const;

    QString getDataReplicationMode() const;
    void setDataReplicationMode(const QString &data_replication_mode);
    bool is_data_replication_mode_Set() const;
    bool is_data_replication_mode_Valid() const;

    QString getDataReplicationPrimaryBrokerArn() const;
    void setDataReplicationPrimaryBrokerArn(const QString &data_replication_primary_broker_arn);
    bool is_data_replication_primary_broker_arn_Set() const;
    bool is_data_replication_primary_broker_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_authentication_strategy;
    bool m_authentication_strategy_isSet;
    bool m_authentication_strategy_isValid;

    bool m_auto_minor_version_upgrade;
    bool m_auto_minor_version_upgrade_isSet;
    bool m_auto_minor_version_upgrade_isValid;

    QString m_broker_name;
    bool m_broker_name_isSet;
    bool m_broker_name_isValid;

    OAICreateBroker_request_configuration m_configuration;
    bool m_configuration_isSet;
    bool m_configuration_isValid;

    QString m_creator_request_id;
    bool m_creator_request_id_isSet;
    bool m_creator_request_id_isValid;

    QString m_deployment_mode;
    bool m_deployment_mode_isSet;
    bool m_deployment_mode_isValid;

    OAICreateBroker_request_encryptionOptions m_encryption_options;
    bool m_encryption_options_isSet;
    bool m_encryption_options_isValid;

    QString m_engine_type;
    bool m_engine_type_isSet;
    bool m_engine_type_isValid;

    QString m_engine_version;
    bool m_engine_version_isSet;
    bool m_engine_version_isValid;

    QString m_host_instance_type;
    bool m_host_instance_type_isSet;
    bool m_host_instance_type_isValid;

    OAICreateBroker_request_ldapServerMetadata m_ldap_server_metadata;
    bool m_ldap_server_metadata_isSet;
    bool m_ldap_server_metadata_isValid;

    OAICreateBroker_request_logs m_logs;
    bool m_logs_isSet;
    bool m_logs_isValid;

    OAICreateBroker_request_maintenanceWindowStartTime m_maintenance_window_start_time;
    bool m_maintenance_window_start_time_isSet;
    bool m_maintenance_window_start_time_isValid;

    bool m_publicly_accessible;
    bool m_publicly_accessible_isSet;
    bool m_publicly_accessible_isValid;

    QList<QString> m_security_groups;
    bool m_security_groups_isSet;
    bool m_security_groups_isValid;

    QString m_storage_type;
    bool m_storage_type_isSet;
    bool m_storage_type_isValid;

    QList<QString> m_subnet_ids;
    bool m_subnet_ids_isSet;
    bool m_subnet_ids_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QList<OAIUser> m_users;
    bool m_users_isSet;
    bool m_users_isValid;

    QString m_data_replication_mode;
    bool m_data_replication_mode_isSet;
    bool m_data_replication_mode_isValid;

    QString m_data_replication_primary_broker_arn;
    bool m_data_replication_primary_broker_arn_isSet;
    bool m_data_replication_primary_broker_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateBroker_request)

#endif // OAICreateBroker_request_H
