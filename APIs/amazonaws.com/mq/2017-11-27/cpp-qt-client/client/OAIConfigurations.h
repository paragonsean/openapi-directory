/**
 * AmazonMQ
 * Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConfigurations.h
 *
 * Broker configuration information
 */

#ifndef OAIConfigurations_H
#define OAIConfigurations_H

#include <QJsonObject>

#include "OAIConfigurations_Current.h"
#include "OAIConfigurations_Pending.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConfigurations_Current;
class OAIConfigurations_Pending;

class OAIConfigurations : public OAIObject {
public:
    OAIConfigurations();
    OAIConfigurations(QString json);
    ~OAIConfigurations() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigurations_Current getCurrent() const;
    void setCurrent(const OAIConfigurations_Current &current);
    bool is_current_Set() const;
    bool is_current_Valid() const;

    QList getHistory() const;
    void setHistory(const QList &history);
    bool is_history_Set() const;
    bool is_history_Valid() const;

    OAIConfigurations_Pending getPending() const;
    void setPending(const OAIConfigurations_Pending &pending);
    bool is_pending_Set() const;
    bool is_pending_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConfigurations_Current m_current;
    bool m_current_isSet;
    bool m_current_isValid;

    QList m_history;
    bool m_history_isSet;
    bool m_history_isValid;

    OAIConfigurations_Pending m_pending;
    bool m_pending_isSet;
    bool m_pending_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConfigurations)

#endif // OAIConfigurations_H
