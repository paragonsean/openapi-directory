/**
 * AmazonMQ
 * Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserPendingChanges.h
 *
 * Returns information about the status of the changes pending for the ActiveMQ user.
 */

#ifndef OAIUserPendingChanges_H
#define OAIUserPendingChanges_H

#include <QJsonObject>

#include "OAIChangeType.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUserPendingChanges : public OAIObject {
public:
    OAIUserPendingChanges();
    OAIUserPendingChanges(QString json);
    ~OAIUserPendingChanges() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getConsoleAccess() const;
    void setConsoleAccess(const bool &console_access);
    bool is_console_access_Set() const;
    bool is_console_access_Valid() const;

    QList getGroups() const;
    void setGroups(const QList &groups);
    bool is_groups_Set() const;
    bool is_groups_Valid() const;

    OAIChangeType getPendingChange() const;
    void setPendingChange(const OAIChangeType &pending_change);
    bool is_pending_change_Set() const;
    bool is_pending_change_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_console_access;
    bool m_console_access_isSet;
    bool m_console_access_isValid;

    QList m_groups;
    bool m_groups_isSet;
    bool m_groups_isValid;

    OAIChangeType m_pending_change;
    bool m_pending_change_isSet;
    bool m_pending_change_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserPendingChanges)

#endif // OAIUserPendingChanges_H
