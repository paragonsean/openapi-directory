/**
 * AmazonMQ
 * Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILogsSummary.h
 *
 * The list of information about logs currently enabled and pending to be deployed for the specified broker.
 */

#ifndef OAILogsSummary_H
#define OAILogsSummary_H

#include <QJsonObject>

#include "OAILogsSummary_Pending.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILogsSummary_Pending;

class OAILogsSummary : public OAIObject {
public:
    OAILogsSummary();
    OAILogsSummary(QString json);
    ~OAILogsSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getAudit() const;
    void setAudit(const bool &audit);
    bool is_audit_Set() const;
    bool is_audit_Valid() const;

    QString getAuditLogGroup() const;
    void setAuditLogGroup(const QString &audit_log_group);
    bool is_audit_log_group_Set() const;
    bool is_audit_log_group_Valid() const;

    bool getGeneral() const;
    void setGeneral(const bool &general);
    bool is_general_Set() const;
    bool is_general_Valid() const;

    QString getGeneralLogGroup() const;
    void setGeneralLogGroup(const QString &general_log_group);
    bool is_general_log_group_Set() const;
    bool is_general_log_group_Valid() const;

    OAILogsSummary_Pending getPending() const;
    void setPending(const OAILogsSummary_Pending &pending);
    bool is_pending_Set() const;
    bool is_pending_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_audit;
    bool m_audit_isSet;
    bool m_audit_isValid;

    QString m_audit_log_group;
    bool m_audit_log_group_isSet;
    bool m_audit_log_group_isValid;

    bool m_general;
    bool m_general_isSet;
    bool m_general_isValid;

    QString m_general_log_group;
    bool m_general_log_group_isSet;
    bool m_general_log_group_isValid;

    OAILogsSummary_Pending m_pending;
    bool m_pending_isSet;
    bool m_pending_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILogsSummary)

#endif // OAILogsSummary_H
