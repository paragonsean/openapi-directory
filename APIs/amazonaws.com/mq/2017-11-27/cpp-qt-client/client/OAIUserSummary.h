/**
 * AmazonMQ
 * Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserSummary.h
 *
 * Returns a list of all broker users. Does not apply to RabbitMQ brokers.
 */

#ifndef OAIUserSummary_H
#define OAIUserSummary_H

#include <QJsonObject>

#include "OAIChangeType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUserSummary : public OAIObject {
public:
    OAIUserSummary();
    OAIUserSummary(QString json);
    ~OAIUserSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIChangeType getPendingChange() const;
    void setPendingChange(const OAIChangeType &pending_change);
    bool is_pending_change_Set() const;
    bool is_pending_change_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIChangeType m_pending_change;
    bool m_pending_change_isSet;
    bool m_pending_change_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserSummary)

#endif // OAIUserSummary_H
