/**
 * AmazonMQ
 * Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPromoteMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPromoteMode::OAIPromoteMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPromoteMode::OAIPromoteMode() {
    this->initializeModel();
}

OAIPromoteMode::~OAIPromoteMode() {}

void OAIPromoteMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPromoteMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPromoteMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SWITCHOVER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPromoteMode::SWITCHOVER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILOVER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPromoteMode::FAILOVER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPromoteMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPromoteMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPromoteMode::SWITCHOVER:
            val = "SWITCHOVER";
            break;
        case eOAIPromoteMode::FAILOVER:
            val = "FAILOVER";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPromoteMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPromoteMode::eOAIPromoteMode OAIPromoteMode::getValue() const {
    return m_value;
}

void OAIPromoteMode::setValue(const OAIPromoteMode::eOAIPromoteMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPromoteMode::isSet() const {
    
    return m_value_isSet;
}

bool OAIPromoteMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
