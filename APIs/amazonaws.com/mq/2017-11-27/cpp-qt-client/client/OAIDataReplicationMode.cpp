/**
 * AmazonMQ
 * Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataReplicationMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataReplicationMode::OAIDataReplicationMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataReplicationMode::OAIDataReplicationMode() {
    this->initializeModel();
}

OAIDataReplicationMode::~OAIDataReplicationMode() {}

void OAIDataReplicationMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDataReplicationMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDataReplicationMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NONE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataReplicationMode::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CRDR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataReplicationMode::CRDR;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDataReplicationMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDataReplicationMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDataReplicationMode::NONE:
            val = "NONE";
            break;
        case eOAIDataReplicationMode::CRDR:
            val = "CRDR";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDataReplicationMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDataReplicationMode::eOAIDataReplicationMode OAIDataReplicationMode::getValue() const {
    return m_value;
}

void OAIDataReplicationMode::setValue(const OAIDataReplicationMode::eOAIDataReplicationMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDataReplicationMode::isSet() const {
    
    return m_value_isSet;
}

bool OAIDataReplicationMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
