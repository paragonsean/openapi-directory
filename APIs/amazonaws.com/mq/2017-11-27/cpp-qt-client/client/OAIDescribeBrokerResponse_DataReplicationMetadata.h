/**
 * AmazonMQ
 * Amazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.
 *
 * The version of the OpenAPI document: 2017-11-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeBrokerResponse_DataReplicationMetadata.h
 *
 * 
 */

#ifndef OAIDescribeBrokerResponse_DataReplicationMetadata_H
#define OAIDescribeBrokerResponse_DataReplicationMetadata_H

#include <QJsonObject>

#include "OAIDataReplicationMetadataOutput_DataReplicationCounterpart.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataReplicationMetadataOutput_DataReplicationCounterpart;

class OAIDescribeBrokerResponse_DataReplicationMetadata : public OAIObject {
public:
    OAIDescribeBrokerResponse_DataReplicationMetadata();
    OAIDescribeBrokerResponse_DataReplicationMetadata(QString json);
    ~OAIDescribeBrokerResponse_DataReplicationMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDataReplicationMetadataOutput_DataReplicationCounterpart getDataReplicationCounterpart() const;
    void setDataReplicationCounterpart(const OAIDataReplicationMetadataOutput_DataReplicationCounterpart &data_replication_counterpart);
    bool is_data_replication_counterpart_Set() const;
    bool is_data_replication_counterpart_Valid() const;

    QString getDataReplicationRole() const;
    void setDataReplicationRole(const QString &data_replication_role);
    bool is_data_replication_role_Set() const;
    bool is_data_replication_role_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDataReplicationMetadataOutput_DataReplicationCounterpart m_data_replication_counterpart;
    bool m_data_replication_counterpart_isSet;
    bool m_data_replication_counterpart_isValid;

    QString m_data_replication_role;
    bool m_data_replication_role_isSet;
    bool m_data_replication_role_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeBrokerResponse_DataReplicationMetadata)

#endif // OAIDescribeBrokerResponse_DataReplicationMetadata_H
