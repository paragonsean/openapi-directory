# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EncryptionOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kms_key_id: str=None, use_aws_owned_key: bool=None):
        """EncryptionOptions - a model defined in OpenAPI

        :param kms_key_id: The kms_key_id of this EncryptionOptions.
        :param use_aws_owned_key: The use_aws_owned_key of this EncryptionOptions.
        """
        self.openapi_types = {
            'kms_key_id': str,
            'use_aws_owned_key': bool
        }

        self.attribute_map = {
            'kms_key_id': 'KmsKeyId',
            'use_aws_owned_key': 'UseAwsOwnedKey'
        }

        self._kms_key_id = kms_key_id
        self._use_aws_owned_key = use_aws_owned_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EncryptionOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EncryptionOptions of this EncryptionOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this EncryptionOptions.


        :return: The kms_key_id of this EncryptionOptions.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this EncryptionOptions.


        :param kms_key_id: The kms_key_id of this EncryptionOptions.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id

    @property
    def use_aws_owned_key(self):
        """Gets the use_aws_owned_key of this EncryptionOptions.


        :return: The use_aws_owned_key of this EncryptionOptions.
        :rtype: bool
        """
        return self._use_aws_owned_key

    @use_aws_owned_key.setter
    def use_aws_owned_key(self, use_aws_owned_key):
        """Sets the use_aws_owned_key of this EncryptionOptions.


        :param use_aws_owned_key: The use_aws_owned_key of this EncryptionOptions.
        :type use_aws_owned_key: bool
        """
        if use_aws_owned_key is None:
            raise ValueError("Invalid value for `use_aws_owned_key`, must not be `None`")

        self._use_aws_owned_key = use_aws_owned_key
