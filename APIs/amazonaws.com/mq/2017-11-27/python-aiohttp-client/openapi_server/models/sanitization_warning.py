# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sanitization_warning_reason import SanitizationWarningReason
from openapi_server import util


class SanitizationWarning(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribute_name: str=None, element_name: str=None, reason: SanitizationWarningReason=None):
        """SanitizationWarning - a model defined in OpenAPI

        :param attribute_name: The attribute_name of this SanitizationWarning.
        :param element_name: The element_name of this SanitizationWarning.
        :param reason: The reason of this SanitizationWarning.
        """
        self.openapi_types = {
            'attribute_name': str,
            'element_name': str,
            'reason': SanitizationWarningReason
        }

        self.attribute_map = {
            'attribute_name': 'AttributeName',
            'element_name': 'ElementName',
            'reason': 'Reason'
        }

        self._attribute_name = attribute_name
        self._element_name = element_name
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SanitizationWarning':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SanitizationWarning of this SanitizationWarning.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribute_name(self):
        """Gets the attribute_name of this SanitizationWarning.


        :return: The attribute_name of this SanitizationWarning.
        :rtype: str
        """
        return self._attribute_name

    @attribute_name.setter
    def attribute_name(self, attribute_name):
        """Sets the attribute_name of this SanitizationWarning.


        :param attribute_name: The attribute_name of this SanitizationWarning.
        :type attribute_name: str
        """

        self._attribute_name = attribute_name

    @property
    def element_name(self):
        """Gets the element_name of this SanitizationWarning.


        :return: The element_name of this SanitizationWarning.
        :rtype: str
        """
        return self._element_name

    @element_name.setter
    def element_name(self, element_name):
        """Sets the element_name of this SanitizationWarning.


        :param element_name: The element_name of this SanitizationWarning.
        :type element_name: str
        """

        self._element_name = element_name

    @property
    def reason(self):
        """Gets the reason of this SanitizationWarning.


        :return: The reason of this SanitizationWarning.
        :rtype: SanitizationWarningReason
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this SanitizationWarning.


        :param reason: The reason of this SanitizationWarning.
        :type reason: SanitizationWarningReason
        """
        if reason is None:
            raise ValueError("Invalid value for `reason`, must not be `None`")

        self._reason = reason
