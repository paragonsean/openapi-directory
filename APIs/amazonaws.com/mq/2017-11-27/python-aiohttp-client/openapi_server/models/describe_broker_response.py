# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.authentication_strategy import AuthenticationStrategy
from openapi_server.models.broker_state import BrokerState
from openapi_server.models.broker_storage_type import BrokerStorageType
from openapi_server.models.data_replication_mode import DataReplicationMode
from openapi_server.models.deployment_mode import DeploymentMode
from openapi_server.models.describe_broker_response_configurations import DescribeBrokerResponseConfigurations
from openapi_server.models.describe_broker_response_data_replication_metadata import DescribeBrokerResponseDataReplicationMetadata
from openapi_server.models.describe_broker_response_encryption_options import DescribeBrokerResponseEncryptionOptions
from openapi_server.models.describe_broker_response_ldap_server_metadata import DescribeBrokerResponseLdapServerMetadata
from openapi_server.models.describe_broker_response_logs import DescribeBrokerResponseLogs
from openapi_server.models.describe_broker_response_maintenance_window_start_time import DescribeBrokerResponseMaintenanceWindowStartTime
from openapi_server.models.describe_broker_response_pending_data_replication_metadata import DescribeBrokerResponsePendingDataReplicationMetadata
from openapi_server.models.describe_broker_response_pending_ldap_server_metadata import DescribeBrokerResponsePendingLdapServerMetadata
from openapi_server.models.engine_type import EngineType
from openapi_server import util


class DescribeBrokerResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actions_required: List=None, authentication_strategy: AuthenticationStrategy=None, auto_minor_version_upgrade: bool=None, broker_arn: str=None, broker_id: str=None, broker_instances: List=None, broker_name: str=None, broker_state: BrokerState=None, configurations: DescribeBrokerResponseConfigurations=None, created: datetime=None, deployment_mode: DeploymentMode=None, encryption_options: DescribeBrokerResponseEncryptionOptions=None, engine_type: EngineType=None, engine_version: str=None, host_instance_type: str=None, ldap_server_metadata: DescribeBrokerResponseLdapServerMetadata=None, logs: DescribeBrokerResponseLogs=None, maintenance_window_start_time: DescribeBrokerResponseMaintenanceWindowStartTime=None, pending_authentication_strategy: AuthenticationStrategy=None, pending_engine_version: str=None, pending_host_instance_type: str=None, pending_ldap_server_metadata: DescribeBrokerResponsePendingLdapServerMetadata=None, pending_security_groups: List=None, publicly_accessible: bool=None, security_groups: List=None, storage_type: BrokerStorageType=None, subnet_ids: List=None, tags: Dict=None, users: List=None, data_replication_metadata: DescribeBrokerResponseDataReplicationMetadata=None, data_replication_mode: DataReplicationMode=None, pending_data_replication_metadata: DescribeBrokerResponsePendingDataReplicationMetadata=None, pending_data_replication_mode: DataReplicationMode=None):
        """DescribeBrokerResponse - a model defined in OpenAPI

        :param actions_required: The actions_required of this DescribeBrokerResponse.
        :param authentication_strategy: The authentication_strategy of this DescribeBrokerResponse.
        :param auto_minor_version_upgrade: The auto_minor_version_upgrade of this DescribeBrokerResponse.
        :param broker_arn: The broker_arn of this DescribeBrokerResponse.
        :param broker_id: The broker_id of this DescribeBrokerResponse.
        :param broker_instances: The broker_instances of this DescribeBrokerResponse.
        :param broker_name: The broker_name of this DescribeBrokerResponse.
        :param broker_state: The broker_state of this DescribeBrokerResponse.
        :param configurations: The configurations of this DescribeBrokerResponse.
        :param created: The created of this DescribeBrokerResponse.
        :param deployment_mode: The deployment_mode of this DescribeBrokerResponse.
        :param encryption_options: The encryption_options of this DescribeBrokerResponse.
        :param engine_type: The engine_type of this DescribeBrokerResponse.
        :param engine_version: The engine_version of this DescribeBrokerResponse.
        :param host_instance_type: The host_instance_type of this DescribeBrokerResponse.
        :param ldap_server_metadata: The ldap_server_metadata of this DescribeBrokerResponse.
        :param logs: The logs of this DescribeBrokerResponse.
        :param maintenance_window_start_time: The maintenance_window_start_time of this DescribeBrokerResponse.
        :param pending_authentication_strategy: The pending_authentication_strategy of this DescribeBrokerResponse.
        :param pending_engine_version: The pending_engine_version of this DescribeBrokerResponse.
        :param pending_host_instance_type: The pending_host_instance_type of this DescribeBrokerResponse.
        :param pending_ldap_server_metadata: The pending_ldap_server_metadata of this DescribeBrokerResponse.
        :param pending_security_groups: The pending_security_groups of this DescribeBrokerResponse.
        :param publicly_accessible: The publicly_accessible of this DescribeBrokerResponse.
        :param security_groups: The security_groups of this DescribeBrokerResponse.
        :param storage_type: The storage_type of this DescribeBrokerResponse.
        :param subnet_ids: The subnet_ids of this DescribeBrokerResponse.
        :param tags: The tags of this DescribeBrokerResponse.
        :param users: The users of this DescribeBrokerResponse.
        :param data_replication_metadata: The data_replication_metadata of this DescribeBrokerResponse.
        :param data_replication_mode: The data_replication_mode of this DescribeBrokerResponse.
        :param pending_data_replication_metadata: The pending_data_replication_metadata of this DescribeBrokerResponse.
        :param pending_data_replication_mode: The pending_data_replication_mode of this DescribeBrokerResponse.
        """
        self.openapi_types = {
            'actions_required': List,
            'authentication_strategy': AuthenticationStrategy,
            'auto_minor_version_upgrade': bool,
            'broker_arn': str,
            'broker_id': str,
            'broker_instances': List,
            'broker_name': str,
            'broker_state': BrokerState,
            'configurations': DescribeBrokerResponseConfigurations,
            'created': datetime,
            'deployment_mode': DeploymentMode,
            'encryption_options': DescribeBrokerResponseEncryptionOptions,
            'engine_type': EngineType,
            'engine_version': str,
            'host_instance_type': str,
            'ldap_server_metadata': DescribeBrokerResponseLdapServerMetadata,
            'logs': DescribeBrokerResponseLogs,
            'maintenance_window_start_time': DescribeBrokerResponseMaintenanceWindowStartTime,
            'pending_authentication_strategy': AuthenticationStrategy,
            'pending_engine_version': str,
            'pending_host_instance_type': str,
            'pending_ldap_server_metadata': DescribeBrokerResponsePendingLdapServerMetadata,
            'pending_security_groups': List,
            'publicly_accessible': bool,
            'security_groups': List,
            'storage_type': BrokerStorageType,
            'subnet_ids': List,
            'tags': Dict,
            'users': List,
            'data_replication_metadata': DescribeBrokerResponseDataReplicationMetadata,
            'data_replication_mode': DataReplicationMode,
            'pending_data_replication_metadata': DescribeBrokerResponsePendingDataReplicationMetadata,
            'pending_data_replication_mode': DataReplicationMode
        }

        self.attribute_map = {
            'actions_required': 'ActionsRequired',
            'authentication_strategy': 'AuthenticationStrategy',
            'auto_minor_version_upgrade': 'AutoMinorVersionUpgrade',
            'broker_arn': 'BrokerArn',
            'broker_id': 'BrokerId',
            'broker_instances': 'BrokerInstances',
            'broker_name': 'BrokerName',
            'broker_state': 'BrokerState',
            'configurations': 'Configurations',
            'created': 'Created',
            'deployment_mode': 'DeploymentMode',
            'encryption_options': 'EncryptionOptions',
            'engine_type': 'EngineType',
            'engine_version': 'EngineVersion',
            'host_instance_type': 'HostInstanceType',
            'ldap_server_metadata': 'LdapServerMetadata',
            'logs': 'Logs',
            'maintenance_window_start_time': 'MaintenanceWindowStartTime',
            'pending_authentication_strategy': 'PendingAuthenticationStrategy',
            'pending_engine_version': 'PendingEngineVersion',
            'pending_host_instance_type': 'PendingHostInstanceType',
            'pending_ldap_server_metadata': 'PendingLdapServerMetadata',
            'pending_security_groups': 'PendingSecurityGroups',
            'publicly_accessible': 'PubliclyAccessible',
            'security_groups': 'SecurityGroups',
            'storage_type': 'StorageType',
            'subnet_ids': 'SubnetIds',
            'tags': 'Tags',
            'users': 'Users',
            'data_replication_metadata': 'DataReplicationMetadata',
            'data_replication_mode': 'DataReplicationMode',
            'pending_data_replication_metadata': 'PendingDataReplicationMetadata',
            'pending_data_replication_mode': 'PendingDataReplicationMode'
        }

        self._actions_required = actions_required
        self._authentication_strategy = authentication_strategy
        self._auto_minor_version_upgrade = auto_minor_version_upgrade
        self._broker_arn = broker_arn
        self._broker_id = broker_id
        self._broker_instances = broker_instances
        self._broker_name = broker_name
        self._broker_state = broker_state
        self._configurations = configurations
        self._created = created
        self._deployment_mode = deployment_mode
        self._encryption_options = encryption_options
        self._engine_type = engine_type
        self._engine_version = engine_version
        self._host_instance_type = host_instance_type
        self._ldap_server_metadata = ldap_server_metadata
        self._logs = logs
        self._maintenance_window_start_time = maintenance_window_start_time
        self._pending_authentication_strategy = pending_authentication_strategy
        self._pending_engine_version = pending_engine_version
        self._pending_host_instance_type = pending_host_instance_type
        self._pending_ldap_server_metadata = pending_ldap_server_metadata
        self._pending_security_groups = pending_security_groups
        self._publicly_accessible = publicly_accessible
        self._security_groups = security_groups
        self._storage_type = storage_type
        self._subnet_ids = subnet_ids
        self._tags = tags
        self._users = users
        self._data_replication_metadata = data_replication_metadata
        self._data_replication_mode = data_replication_mode
        self._pending_data_replication_metadata = pending_data_replication_metadata
        self._pending_data_replication_mode = pending_data_replication_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeBrokerResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeBrokerResponse of this DescribeBrokerResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actions_required(self):
        """Gets the actions_required of this DescribeBrokerResponse.


        :return: The actions_required of this DescribeBrokerResponse.
        :rtype: List
        """
        return self._actions_required

    @actions_required.setter
    def actions_required(self, actions_required):
        """Sets the actions_required of this DescribeBrokerResponse.


        :param actions_required: The actions_required of this DescribeBrokerResponse.
        :type actions_required: List
        """

        self._actions_required = actions_required

    @property
    def authentication_strategy(self):
        """Gets the authentication_strategy of this DescribeBrokerResponse.


        :return: The authentication_strategy of this DescribeBrokerResponse.
        :rtype: AuthenticationStrategy
        """
        return self._authentication_strategy

    @authentication_strategy.setter
    def authentication_strategy(self, authentication_strategy):
        """Sets the authentication_strategy of this DescribeBrokerResponse.


        :param authentication_strategy: The authentication_strategy of this DescribeBrokerResponse.
        :type authentication_strategy: AuthenticationStrategy
        """

        self._authentication_strategy = authentication_strategy

    @property
    def auto_minor_version_upgrade(self):
        """Gets the auto_minor_version_upgrade of this DescribeBrokerResponse.


        :return: The auto_minor_version_upgrade of this DescribeBrokerResponse.
        :rtype: bool
        """
        return self._auto_minor_version_upgrade

    @auto_minor_version_upgrade.setter
    def auto_minor_version_upgrade(self, auto_minor_version_upgrade):
        """Sets the auto_minor_version_upgrade of this DescribeBrokerResponse.


        :param auto_minor_version_upgrade: The auto_minor_version_upgrade of this DescribeBrokerResponse.
        :type auto_minor_version_upgrade: bool
        """

        self._auto_minor_version_upgrade = auto_minor_version_upgrade

    @property
    def broker_arn(self):
        """Gets the broker_arn of this DescribeBrokerResponse.


        :return: The broker_arn of this DescribeBrokerResponse.
        :rtype: str
        """
        return self._broker_arn

    @broker_arn.setter
    def broker_arn(self, broker_arn):
        """Sets the broker_arn of this DescribeBrokerResponse.


        :param broker_arn: The broker_arn of this DescribeBrokerResponse.
        :type broker_arn: str
        """

        self._broker_arn = broker_arn

    @property
    def broker_id(self):
        """Gets the broker_id of this DescribeBrokerResponse.


        :return: The broker_id of this DescribeBrokerResponse.
        :rtype: str
        """
        return self._broker_id

    @broker_id.setter
    def broker_id(self, broker_id):
        """Sets the broker_id of this DescribeBrokerResponse.


        :param broker_id: The broker_id of this DescribeBrokerResponse.
        :type broker_id: str
        """

        self._broker_id = broker_id

    @property
    def broker_instances(self):
        """Gets the broker_instances of this DescribeBrokerResponse.


        :return: The broker_instances of this DescribeBrokerResponse.
        :rtype: List
        """
        return self._broker_instances

    @broker_instances.setter
    def broker_instances(self, broker_instances):
        """Sets the broker_instances of this DescribeBrokerResponse.


        :param broker_instances: The broker_instances of this DescribeBrokerResponse.
        :type broker_instances: List
        """

        self._broker_instances = broker_instances

    @property
    def broker_name(self):
        """Gets the broker_name of this DescribeBrokerResponse.


        :return: The broker_name of this DescribeBrokerResponse.
        :rtype: str
        """
        return self._broker_name

    @broker_name.setter
    def broker_name(self, broker_name):
        """Sets the broker_name of this DescribeBrokerResponse.


        :param broker_name: The broker_name of this DescribeBrokerResponse.
        :type broker_name: str
        """

        self._broker_name = broker_name

    @property
    def broker_state(self):
        """Gets the broker_state of this DescribeBrokerResponse.


        :return: The broker_state of this DescribeBrokerResponse.
        :rtype: BrokerState
        """
        return self._broker_state

    @broker_state.setter
    def broker_state(self, broker_state):
        """Sets the broker_state of this DescribeBrokerResponse.


        :param broker_state: The broker_state of this DescribeBrokerResponse.
        :type broker_state: BrokerState
        """

        self._broker_state = broker_state

    @property
    def configurations(self):
        """Gets the configurations of this DescribeBrokerResponse.


        :return: The configurations of this DescribeBrokerResponse.
        :rtype: DescribeBrokerResponseConfigurations
        """
        return self._configurations

    @configurations.setter
    def configurations(self, configurations):
        """Sets the configurations of this DescribeBrokerResponse.


        :param configurations: The configurations of this DescribeBrokerResponse.
        :type configurations: DescribeBrokerResponseConfigurations
        """

        self._configurations = configurations

    @property
    def created(self):
        """Gets the created of this DescribeBrokerResponse.


        :return: The created of this DescribeBrokerResponse.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this DescribeBrokerResponse.


        :param created: The created of this DescribeBrokerResponse.
        :type created: datetime
        """

        self._created = created

    @property
    def deployment_mode(self):
        """Gets the deployment_mode of this DescribeBrokerResponse.


        :return: The deployment_mode of this DescribeBrokerResponse.
        :rtype: DeploymentMode
        """
        return self._deployment_mode

    @deployment_mode.setter
    def deployment_mode(self, deployment_mode):
        """Sets the deployment_mode of this DescribeBrokerResponse.


        :param deployment_mode: The deployment_mode of this DescribeBrokerResponse.
        :type deployment_mode: DeploymentMode
        """

        self._deployment_mode = deployment_mode

    @property
    def encryption_options(self):
        """Gets the encryption_options of this DescribeBrokerResponse.


        :return: The encryption_options of this DescribeBrokerResponse.
        :rtype: DescribeBrokerResponseEncryptionOptions
        """
        return self._encryption_options

    @encryption_options.setter
    def encryption_options(self, encryption_options):
        """Sets the encryption_options of this DescribeBrokerResponse.


        :param encryption_options: The encryption_options of this DescribeBrokerResponse.
        :type encryption_options: DescribeBrokerResponseEncryptionOptions
        """

        self._encryption_options = encryption_options

    @property
    def engine_type(self):
        """Gets the engine_type of this DescribeBrokerResponse.


        :return: The engine_type of this DescribeBrokerResponse.
        :rtype: EngineType
        """
        return self._engine_type

    @engine_type.setter
    def engine_type(self, engine_type):
        """Sets the engine_type of this DescribeBrokerResponse.


        :param engine_type: The engine_type of this DescribeBrokerResponse.
        :type engine_type: EngineType
        """

        self._engine_type = engine_type

    @property
    def engine_version(self):
        """Gets the engine_version of this DescribeBrokerResponse.


        :return: The engine_version of this DescribeBrokerResponse.
        :rtype: str
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """Sets the engine_version of this DescribeBrokerResponse.


        :param engine_version: The engine_version of this DescribeBrokerResponse.
        :type engine_version: str
        """

        self._engine_version = engine_version

    @property
    def host_instance_type(self):
        """Gets the host_instance_type of this DescribeBrokerResponse.


        :return: The host_instance_type of this DescribeBrokerResponse.
        :rtype: str
        """
        return self._host_instance_type

    @host_instance_type.setter
    def host_instance_type(self, host_instance_type):
        """Sets the host_instance_type of this DescribeBrokerResponse.


        :param host_instance_type: The host_instance_type of this DescribeBrokerResponse.
        :type host_instance_type: str
        """

        self._host_instance_type = host_instance_type

    @property
    def ldap_server_metadata(self):
        """Gets the ldap_server_metadata of this DescribeBrokerResponse.


        :return: The ldap_server_metadata of this DescribeBrokerResponse.
        :rtype: DescribeBrokerResponseLdapServerMetadata
        """
        return self._ldap_server_metadata

    @ldap_server_metadata.setter
    def ldap_server_metadata(self, ldap_server_metadata):
        """Sets the ldap_server_metadata of this DescribeBrokerResponse.


        :param ldap_server_metadata: The ldap_server_metadata of this DescribeBrokerResponse.
        :type ldap_server_metadata: DescribeBrokerResponseLdapServerMetadata
        """

        self._ldap_server_metadata = ldap_server_metadata

    @property
    def logs(self):
        """Gets the logs of this DescribeBrokerResponse.


        :return: The logs of this DescribeBrokerResponse.
        :rtype: DescribeBrokerResponseLogs
        """
        return self._logs

    @logs.setter
    def logs(self, logs):
        """Sets the logs of this DescribeBrokerResponse.


        :param logs: The logs of this DescribeBrokerResponse.
        :type logs: DescribeBrokerResponseLogs
        """

        self._logs = logs

    @property
    def maintenance_window_start_time(self):
        """Gets the maintenance_window_start_time of this DescribeBrokerResponse.


        :return: The maintenance_window_start_time of this DescribeBrokerResponse.
        :rtype: DescribeBrokerResponseMaintenanceWindowStartTime
        """
        return self._maintenance_window_start_time

    @maintenance_window_start_time.setter
    def maintenance_window_start_time(self, maintenance_window_start_time):
        """Sets the maintenance_window_start_time of this DescribeBrokerResponse.


        :param maintenance_window_start_time: The maintenance_window_start_time of this DescribeBrokerResponse.
        :type maintenance_window_start_time: DescribeBrokerResponseMaintenanceWindowStartTime
        """

        self._maintenance_window_start_time = maintenance_window_start_time

    @property
    def pending_authentication_strategy(self):
        """Gets the pending_authentication_strategy of this DescribeBrokerResponse.


        :return: The pending_authentication_strategy of this DescribeBrokerResponse.
        :rtype: AuthenticationStrategy
        """
        return self._pending_authentication_strategy

    @pending_authentication_strategy.setter
    def pending_authentication_strategy(self, pending_authentication_strategy):
        """Sets the pending_authentication_strategy of this DescribeBrokerResponse.


        :param pending_authentication_strategy: The pending_authentication_strategy of this DescribeBrokerResponse.
        :type pending_authentication_strategy: AuthenticationStrategy
        """

        self._pending_authentication_strategy = pending_authentication_strategy

    @property
    def pending_engine_version(self):
        """Gets the pending_engine_version of this DescribeBrokerResponse.


        :return: The pending_engine_version of this DescribeBrokerResponse.
        :rtype: str
        """
        return self._pending_engine_version

    @pending_engine_version.setter
    def pending_engine_version(self, pending_engine_version):
        """Sets the pending_engine_version of this DescribeBrokerResponse.


        :param pending_engine_version: The pending_engine_version of this DescribeBrokerResponse.
        :type pending_engine_version: str
        """

        self._pending_engine_version = pending_engine_version

    @property
    def pending_host_instance_type(self):
        """Gets the pending_host_instance_type of this DescribeBrokerResponse.


        :return: The pending_host_instance_type of this DescribeBrokerResponse.
        :rtype: str
        """
        return self._pending_host_instance_type

    @pending_host_instance_type.setter
    def pending_host_instance_type(self, pending_host_instance_type):
        """Sets the pending_host_instance_type of this DescribeBrokerResponse.


        :param pending_host_instance_type: The pending_host_instance_type of this DescribeBrokerResponse.
        :type pending_host_instance_type: str
        """

        self._pending_host_instance_type = pending_host_instance_type

    @property
    def pending_ldap_server_metadata(self):
        """Gets the pending_ldap_server_metadata of this DescribeBrokerResponse.


        :return: The pending_ldap_server_metadata of this DescribeBrokerResponse.
        :rtype: DescribeBrokerResponsePendingLdapServerMetadata
        """
        return self._pending_ldap_server_metadata

    @pending_ldap_server_metadata.setter
    def pending_ldap_server_metadata(self, pending_ldap_server_metadata):
        """Sets the pending_ldap_server_metadata of this DescribeBrokerResponse.


        :param pending_ldap_server_metadata: The pending_ldap_server_metadata of this DescribeBrokerResponse.
        :type pending_ldap_server_metadata: DescribeBrokerResponsePendingLdapServerMetadata
        """

        self._pending_ldap_server_metadata = pending_ldap_server_metadata

    @property
    def pending_security_groups(self):
        """Gets the pending_security_groups of this DescribeBrokerResponse.


        :return: The pending_security_groups of this DescribeBrokerResponse.
        :rtype: List
        """
        return self._pending_security_groups

    @pending_security_groups.setter
    def pending_security_groups(self, pending_security_groups):
        """Sets the pending_security_groups of this DescribeBrokerResponse.


        :param pending_security_groups: The pending_security_groups of this DescribeBrokerResponse.
        :type pending_security_groups: List
        """

        self._pending_security_groups = pending_security_groups

    @property
    def publicly_accessible(self):
        """Gets the publicly_accessible of this DescribeBrokerResponse.


        :return: The publicly_accessible of this DescribeBrokerResponse.
        :rtype: bool
        """
        return self._publicly_accessible

    @publicly_accessible.setter
    def publicly_accessible(self, publicly_accessible):
        """Sets the publicly_accessible of this DescribeBrokerResponse.


        :param publicly_accessible: The publicly_accessible of this DescribeBrokerResponse.
        :type publicly_accessible: bool
        """

        self._publicly_accessible = publicly_accessible

    @property
    def security_groups(self):
        """Gets the security_groups of this DescribeBrokerResponse.


        :return: The security_groups of this DescribeBrokerResponse.
        :rtype: List
        """
        return self._security_groups

    @security_groups.setter
    def security_groups(self, security_groups):
        """Sets the security_groups of this DescribeBrokerResponse.


        :param security_groups: The security_groups of this DescribeBrokerResponse.
        :type security_groups: List
        """

        self._security_groups = security_groups

    @property
    def storage_type(self):
        """Gets the storage_type of this DescribeBrokerResponse.


        :return: The storage_type of this DescribeBrokerResponse.
        :rtype: BrokerStorageType
        """
        return self._storage_type

    @storage_type.setter
    def storage_type(self, storage_type):
        """Sets the storage_type of this DescribeBrokerResponse.


        :param storage_type: The storage_type of this DescribeBrokerResponse.
        :type storage_type: BrokerStorageType
        """

        self._storage_type = storage_type

    @property
    def subnet_ids(self):
        """Gets the subnet_ids of this DescribeBrokerResponse.


        :return: The subnet_ids of this DescribeBrokerResponse.
        :rtype: List
        """
        return self._subnet_ids

    @subnet_ids.setter
    def subnet_ids(self, subnet_ids):
        """Sets the subnet_ids of this DescribeBrokerResponse.


        :param subnet_ids: The subnet_ids of this DescribeBrokerResponse.
        :type subnet_ids: List
        """

        self._subnet_ids = subnet_ids

    @property
    def tags(self):
        """Gets the tags of this DescribeBrokerResponse.


        :return: The tags of this DescribeBrokerResponse.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DescribeBrokerResponse.


        :param tags: The tags of this DescribeBrokerResponse.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def users(self):
        """Gets the users of this DescribeBrokerResponse.


        :return: The users of this DescribeBrokerResponse.
        :rtype: List
        """
        return self._users

    @users.setter
    def users(self, users):
        """Sets the users of this DescribeBrokerResponse.


        :param users: The users of this DescribeBrokerResponse.
        :type users: List
        """

        self._users = users

    @property
    def data_replication_metadata(self):
        """Gets the data_replication_metadata of this DescribeBrokerResponse.


        :return: The data_replication_metadata of this DescribeBrokerResponse.
        :rtype: DescribeBrokerResponseDataReplicationMetadata
        """
        return self._data_replication_metadata

    @data_replication_metadata.setter
    def data_replication_metadata(self, data_replication_metadata):
        """Sets the data_replication_metadata of this DescribeBrokerResponse.


        :param data_replication_metadata: The data_replication_metadata of this DescribeBrokerResponse.
        :type data_replication_metadata: DescribeBrokerResponseDataReplicationMetadata
        """

        self._data_replication_metadata = data_replication_metadata

    @property
    def data_replication_mode(self):
        """Gets the data_replication_mode of this DescribeBrokerResponse.


        :return: The data_replication_mode of this DescribeBrokerResponse.
        :rtype: DataReplicationMode
        """
        return self._data_replication_mode

    @data_replication_mode.setter
    def data_replication_mode(self, data_replication_mode):
        """Sets the data_replication_mode of this DescribeBrokerResponse.


        :param data_replication_mode: The data_replication_mode of this DescribeBrokerResponse.
        :type data_replication_mode: DataReplicationMode
        """

        self._data_replication_mode = data_replication_mode

    @property
    def pending_data_replication_metadata(self):
        """Gets the pending_data_replication_metadata of this DescribeBrokerResponse.


        :return: The pending_data_replication_metadata of this DescribeBrokerResponse.
        :rtype: DescribeBrokerResponsePendingDataReplicationMetadata
        """
        return self._pending_data_replication_metadata

    @pending_data_replication_metadata.setter
    def pending_data_replication_metadata(self, pending_data_replication_metadata):
        """Sets the pending_data_replication_metadata of this DescribeBrokerResponse.


        :param pending_data_replication_metadata: The pending_data_replication_metadata of this DescribeBrokerResponse.
        :type pending_data_replication_metadata: DescribeBrokerResponsePendingDataReplicationMetadata
        """

        self._pending_data_replication_metadata = pending_data_replication_metadata

    @property
    def pending_data_replication_mode(self):
        """Gets the pending_data_replication_mode of this DescribeBrokerResponse.


        :return: The pending_data_replication_mode of this DescribeBrokerResponse.
        :rtype: DataReplicationMode
        """
        return self._pending_data_replication_mode

    @pending_data_replication_mode.setter
    def pending_data_replication_mode(self, pending_data_replication_mode):
        """Sets the pending_data_replication_mode of this DescribeBrokerResponse.


        :param pending_data_replication_mode: The pending_data_replication_mode of this DescribeBrokerResponse.
        :type pending_data_replication_mode: DataReplicationMode
        """

        self._pending_data_replication_mode = pending_data_replication_mode
