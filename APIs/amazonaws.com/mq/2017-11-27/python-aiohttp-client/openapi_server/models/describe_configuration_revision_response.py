# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeConfigurationRevisionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration_id: str=None, created: datetime=None, data: str=None, description: str=None):
        """DescribeConfigurationRevisionResponse - a model defined in OpenAPI

        :param configuration_id: The configuration_id of this DescribeConfigurationRevisionResponse.
        :param created: The created of this DescribeConfigurationRevisionResponse.
        :param data: The data of this DescribeConfigurationRevisionResponse.
        :param description: The description of this DescribeConfigurationRevisionResponse.
        """
        self.openapi_types = {
            'configuration_id': str,
            'created': datetime,
            'data': str,
            'description': str
        }

        self.attribute_map = {
            'configuration_id': 'ConfigurationId',
            'created': 'Created',
            'data': 'Data',
            'description': 'Description'
        }

        self._configuration_id = configuration_id
        self._created = created
        self._data = data
        self._description = description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeConfigurationRevisionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeConfigurationRevisionResponse of this DescribeConfigurationRevisionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration_id(self):
        """Gets the configuration_id of this DescribeConfigurationRevisionResponse.


        :return: The configuration_id of this DescribeConfigurationRevisionResponse.
        :rtype: str
        """
        return self._configuration_id

    @configuration_id.setter
    def configuration_id(self, configuration_id):
        """Sets the configuration_id of this DescribeConfigurationRevisionResponse.


        :param configuration_id: The configuration_id of this DescribeConfigurationRevisionResponse.
        :type configuration_id: str
        """

        self._configuration_id = configuration_id

    @property
    def created(self):
        """Gets the created of this DescribeConfigurationRevisionResponse.


        :return: The created of this DescribeConfigurationRevisionResponse.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this DescribeConfigurationRevisionResponse.


        :param created: The created of this DescribeConfigurationRevisionResponse.
        :type created: datetime
        """

        self._created = created

    @property
    def data(self):
        """Gets the data of this DescribeConfigurationRevisionResponse.


        :return: The data of this DescribeConfigurationRevisionResponse.
        :rtype: str
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this DescribeConfigurationRevisionResponse.


        :param data: The data of this DescribeConfigurationRevisionResponse.
        :type data: str
        """

        self._data = data

    @property
    def description(self):
        """Gets the description of this DescribeConfigurationRevisionResponse.


        :return: The description of this DescribeConfigurationRevisionResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DescribeConfigurationRevisionResponse.


        :param description: The description of this DescribeConfigurationRevisionResponse.
        :type description: str
        """

        self._description = description
