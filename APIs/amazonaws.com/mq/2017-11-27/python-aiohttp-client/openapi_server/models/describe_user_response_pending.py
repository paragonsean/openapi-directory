# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.change_type import ChangeType
from openapi_server import util


class DescribeUserResponsePending(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, console_access: bool=None, groups: List=None, pending_change: ChangeType=None):
        """DescribeUserResponsePending - a model defined in OpenAPI

        :param console_access: The console_access of this DescribeUserResponsePending.
        :param groups: The groups of this DescribeUserResponsePending.
        :param pending_change: The pending_change of this DescribeUserResponsePending.
        """
        self.openapi_types = {
            'console_access': bool,
            'groups': List,
            'pending_change': ChangeType
        }

        self.attribute_map = {
            'console_access': 'ConsoleAccess',
            'groups': 'Groups',
            'pending_change': 'PendingChange'
        }

        self._console_access = console_access
        self._groups = groups
        self._pending_change = pending_change

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeUserResponsePending':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeUserResponse_Pending of this DescribeUserResponsePending.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def console_access(self):
        """Gets the console_access of this DescribeUserResponsePending.


        :return: The console_access of this DescribeUserResponsePending.
        :rtype: bool
        """
        return self._console_access

    @console_access.setter
    def console_access(self, console_access):
        """Sets the console_access of this DescribeUserResponsePending.


        :param console_access: The console_access of this DescribeUserResponsePending.
        :type console_access: bool
        """

        self._console_access = console_access

    @property
    def groups(self):
        """Gets the groups of this DescribeUserResponsePending.


        :return: The groups of this DescribeUserResponsePending.
        :rtype: List
        """
        return self._groups

    @groups.setter
    def groups(self, groups):
        """Sets the groups of this DescribeUserResponsePending.


        :param groups: The groups of this DescribeUserResponsePending.
        :type groups: List
        """

        self._groups = groups

    @property
    def pending_change(self):
        """Gets the pending_change of this DescribeUserResponsePending.


        :return: The pending_change of this DescribeUserResponsePending.
        :rtype: ChangeType
        """
        return self._pending_change

    @pending_change.setter
    def pending_change(self, pending_change):
        """Sets the pending_change of this DescribeUserResponsePending.


        :param pending_change: The pending_change of this DescribeUserResponsePending.
        :type pending_change: ChangeType
        """
        if pending_change is None:
            raise ValueError("Invalid value for `pending_change`, must not be `None`")

        self._pending_change = pending_change
