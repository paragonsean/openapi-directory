# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configurations_current import ConfigurationsCurrent
from openapi_server.models.configurations_pending import ConfigurationsPending
from openapi_server import util


class Configurations(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current: ConfigurationsCurrent=None, history: List=None, pending: ConfigurationsPending=None):
        """Configurations - a model defined in OpenAPI

        :param current: The current of this Configurations.
        :param history: The history of this Configurations.
        :param pending: The pending of this Configurations.
        """
        self.openapi_types = {
            'current': ConfigurationsCurrent,
            'history': List,
            'pending': ConfigurationsPending
        }

        self.attribute_map = {
            'current': 'Current',
            'history': 'History',
            'pending': 'Pending'
        }

        self._current = current
        self._history = history
        self._pending = pending

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Configurations':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Configurations of this Configurations.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current(self):
        """Gets the current of this Configurations.


        :return: The current of this Configurations.
        :rtype: ConfigurationsCurrent
        """
        return self._current

    @current.setter
    def current(self, current):
        """Sets the current of this Configurations.


        :param current: The current of this Configurations.
        :type current: ConfigurationsCurrent
        """

        self._current = current

    @property
    def history(self):
        """Gets the history of this Configurations.


        :return: The history of this Configurations.
        :rtype: List
        """
        return self._history

    @history.setter
    def history(self, history):
        """Sets the history of this Configurations.


        :param history: The history of this Configurations.
        :type history: List
        """

        self._history = history

    @property
    def pending(self):
        """Gets the pending of this Configurations.


        :return: The pending of this Configurations.
        :rtype: ConfigurationsPending
        """
        return self._pending

    @pending.setter
    def pending(self, pending):
        """Sets the pending of this Configurations.


        :param pending: The pending of this Configurations.
        :type pending: ConfigurationsPending
        """

        self._pending = pending
