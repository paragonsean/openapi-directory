# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Logs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audit: bool=None, general: bool=None):
        """Logs - a model defined in OpenAPI

        :param audit: The audit of this Logs.
        :param general: The general of this Logs.
        """
        self.openapi_types = {
            'audit': bool,
            'general': bool
        }

        self.attribute_map = {
            'audit': 'Audit',
            'general': 'General'
        }

        self._audit = audit
        self._general = general

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Logs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Logs of this Logs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audit(self):
        """Gets the audit of this Logs.


        :return: The audit of this Logs.
        :rtype: bool
        """
        return self._audit

    @audit.setter
    def audit(self, audit):
        """Sets the audit of this Logs.


        :param audit: The audit of this Logs.
        :type audit: bool
        """

        self._audit = audit

    @property
    def general(self):
        """Gets the general of this Logs.


        :return: The general of this Logs.
        :rtype: bool
        """
        return self._general

    @general.setter
    def general(self, general):
        """Sets the general of this Logs.


        :param general: The general of this Logs.
        :type general: bool
        """

        self._general = general
