# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.broker_storage_type import BrokerStorageType
from openapi_server.models.engine_type import EngineType
from openapi_server import util


class BrokerInstanceOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, availability_zones: List=None, engine_type: EngineType=None, host_instance_type: str=None, storage_type: BrokerStorageType=None, supported_deployment_modes: List=None, supported_engine_versions: List=None):
        """BrokerInstanceOption - a model defined in OpenAPI

        :param availability_zones: The availability_zones of this BrokerInstanceOption.
        :param engine_type: The engine_type of this BrokerInstanceOption.
        :param host_instance_type: The host_instance_type of this BrokerInstanceOption.
        :param storage_type: The storage_type of this BrokerInstanceOption.
        :param supported_deployment_modes: The supported_deployment_modes of this BrokerInstanceOption.
        :param supported_engine_versions: The supported_engine_versions of this BrokerInstanceOption.
        """
        self.openapi_types = {
            'availability_zones': List,
            'engine_type': EngineType,
            'host_instance_type': str,
            'storage_type': BrokerStorageType,
            'supported_deployment_modes': List,
            'supported_engine_versions': List
        }

        self.attribute_map = {
            'availability_zones': 'AvailabilityZones',
            'engine_type': 'EngineType',
            'host_instance_type': 'HostInstanceType',
            'storage_type': 'StorageType',
            'supported_deployment_modes': 'SupportedDeploymentModes',
            'supported_engine_versions': 'SupportedEngineVersions'
        }

        self._availability_zones = availability_zones
        self._engine_type = engine_type
        self._host_instance_type = host_instance_type
        self._storage_type = storage_type
        self._supported_deployment_modes = supported_deployment_modes
        self._supported_engine_versions = supported_engine_versions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BrokerInstanceOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BrokerInstanceOption of this BrokerInstanceOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def availability_zones(self):
        """Gets the availability_zones of this BrokerInstanceOption.


        :return: The availability_zones of this BrokerInstanceOption.
        :rtype: List
        """
        return self._availability_zones

    @availability_zones.setter
    def availability_zones(self, availability_zones):
        """Sets the availability_zones of this BrokerInstanceOption.


        :param availability_zones: The availability_zones of this BrokerInstanceOption.
        :type availability_zones: List
        """

        self._availability_zones = availability_zones

    @property
    def engine_type(self):
        """Gets the engine_type of this BrokerInstanceOption.


        :return: The engine_type of this BrokerInstanceOption.
        :rtype: EngineType
        """
        return self._engine_type

    @engine_type.setter
    def engine_type(self, engine_type):
        """Sets the engine_type of this BrokerInstanceOption.


        :param engine_type: The engine_type of this BrokerInstanceOption.
        :type engine_type: EngineType
        """

        self._engine_type = engine_type

    @property
    def host_instance_type(self):
        """Gets the host_instance_type of this BrokerInstanceOption.


        :return: The host_instance_type of this BrokerInstanceOption.
        :rtype: str
        """
        return self._host_instance_type

    @host_instance_type.setter
    def host_instance_type(self, host_instance_type):
        """Sets the host_instance_type of this BrokerInstanceOption.


        :param host_instance_type: The host_instance_type of this BrokerInstanceOption.
        :type host_instance_type: str
        """

        self._host_instance_type = host_instance_type

    @property
    def storage_type(self):
        """Gets the storage_type of this BrokerInstanceOption.


        :return: The storage_type of this BrokerInstanceOption.
        :rtype: BrokerStorageType
        """
        return self._storage_type

    @storage_type.setter
    def storage_type(self, storage_type):
        """Sets the storage_type of this BrokerInstanceOption.


        :param storage_type: The storage_type of this BrokerInstanceOption.
        :type storage_type: BrokerStorageType
        """

        self._storage_type = storage_type

    @property
    def supported_deployment_modes(self):
        """Gets the supported_deployment_modes of this BrokerInstanceOption.


        :return: The supported_deployment_modes of this BrokerInstanceOption.
        :rtype: List
        """
        return self._supported_deployment_modes

    @supported_deployment_modes.setter
    def supported_deployment_modes(self, supported_deployment_modes):
        """Sets the supported_deployment_modes of this BrokerInstanceOption.


        :param supported_deployment_modes: The supported_deployment_modes of this BrokerInstanceOption.
        :type supported_deployment_modes: List
        """

        self._supported_deployment_modes = supported_deployment_modes

    @property
    def supported_engine_versions(self):
        """Gets the supported_engine_versions of this BrokerInstanceOption.


        :return: The supported_engine_versions of this BrokerInstanceOption.
        :rtype: List
        """
        return self._supported_engine_versions

    @supported_engine_versions.setter
    def supported_engine_versions(self, supported_engine_versions):
        """Sets the supported_engine_versions of this BrokerInstanceOption.


        :param supported_engine_versions: The supported_engine_versions of this BrokerInstanceOption.
        :type supported_engine_versions: List
        """

        self._supported_engine_versions = supported_engine_versions
