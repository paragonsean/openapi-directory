/*
 * Amazon Simple Queue Service
 * <p>Welcome to the <i>Amazon SQS API Reference</i>.</p> <p>Amazon SQS is a reliable, highly-scalable hosted queue for storing messages as they travel between applications or microservices. Amazon SQS moves data between distributed application components and helps you decouple these components.</p> <p>For information on the permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-authentication-and-access-control.html\">Identity and access management</a> in the <i>Amazon SQS Developer Guide.</i> </p> <p>You can use <a href=\"http://aws.amazon.com/tools/#sdk\">Amazon Web Services SDKs</a> to access Amazon SQS using your favorite programming language. The SDKs perform tasks such as the following automatically:</p> <ul> <li> <p>Cryptographically sign your service requests</p> </li> <li> <p>Retry requests</p> </li> <li> <p>Handle error responses</p> </li> </ul> <p> <b>Additional information</b> </p> <ul> <li> <p> <a href=\"http://aws.amazon.com/sqs/\">Amazon SQS Product Page</a> </p> </li> <li> <p> <i>Amazon SQS Developer Guide</i> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-making-api-requests.html\">Making API Requests</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-message-metadata.html#sqs-message-attributes\">Amazon SQS Message Attributes</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html\">Amazon SQS Dead-Letter Queues</a> </p> </li> </ul> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/cli/latest/reference/sqs/index.html\">Amazon SQS in the <i>Command Line Interface</i> </a> </p> </li> <li> <p> <i>Amazon Web Services General Reference</i> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#sqs_region\">Regions and Endpoints</a> </p> </li> </ul> </li> </ul>
 *
 * The version of the OpenAPI document: 2012-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Encloses a &lt;code&gt;MessageId&lt;/code&gt; for a successfully-enqueued message in a &lt;code&gt; &lt;a&gt;SendMessageBatch&lt;/a&gt;.&lt;/code&gt; 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:04.055445-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SendMessageBatchResultEntry {
  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_MESSAGE_ID = "MessageId";
  @SerializedName(SERIALIZED_NAME_MESSAGE_ID)
  private String messageId;

  public static final String SERIALIZED_NAME_MD5_OF_MESSAGE_BODY = "MD5OfMessageBody";
  @SerializedName(SERIALIZED_NAME_MD5_OF_MESSAGE_BODY)
  private String md5OfMessageBody;

  public static final String SERIALIZED_NAME_MD5_OF_MESSAGE_ATTRIBUTES = "MD5OfMessageAttributes";
  @SerializedName(SERIALIZED_NAME_MD5_OF_MESSAGE_ATTRIBUTES)
  private String md5OfMessageAttributes;

  public static final String SERIALIZED_NAME_MD5_OF_MESSAGE_SYSTEM_ATTRIBUTES = "MD5OfMessageSystemAttributes";
  @SerializedName(SERIALIZED_NAME_MD5_OF_MESSAGE_SYSTEM_ATTRIBUTES)
  private String md5OfMessageSystemAttributes;

  public static final String SERIALIZED_NAME_SEQUENCE_NUMBER = "SequenceNumber";
  @SerializedName(SERIALIZED_NAME_SEQUENCE_NUMBER)
  private String sequenceNumber;

  public SendMessageBatchResultEntry() {
  }

  public SendMessageBatchResultEntry id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public SendMessageBatchResultEntry messageId(String messageId) {
    this.messageId = messageId;
    return this;
  }

  /**
   * Get messageId
   * @return messageId
   */
  @javax.annotation.Nonnull
  public String getMessageId() {
    return messageId;
  }

  public void setMessageId(String messageId) {
    this.messageId = messageId;
  }


  public SendMessageBatchResultEntry md5OfMessageBody(String md5OfMessageBody) {
    this.md5OfMessageBody = md5OfMessageBody;
    return this;
  }

  /**
   * Get md5OfMessageBody
   * @return md5OfMessageBody
   */
  @javax.annotation.Nonnull
  public String getMd5OfMessageBody() {
    return md5OfMessageBody;
  }

  public void setMd5OfMessageBody(String md5OfMessageBody) {
    this.md5OfMessageBody = md5OfMessageBody;
  }


  public SendMessageBatchResultEntry md5OfMessageAttributes(String md5OfMessageAttributes) {
    this.md5OfMessageAttributes = md5OfMessageAttributes;
    return this;
  }

  /**
   * Get md5OfMessageAttributes
   * @return md5OfMessageAttributes
   */
  @javax.annotation.Nullable
  public String getMd5OfMessageAttributes() {
    return md5OfMessageAttributes;
  }

  public void setMd5OfMessageAttributes(String md5OfMessageAttributes) {
    this.md5OfMessageAttributes = md5OfMessageAttributes;
  }


  public SendMessageBatchResultEntry md5OfMessageSystemAttributes(String md5OfMessageSystemAttributes) {
    this.md5OfMessageSystemAttributes = md5OfMessageSystemAttributes;
    return this;
  }

  /**
   * Get md5OfMessageSystemAttributes
   * @return md5OfMessageSystemAttributes
   */
  @javax.annotation.Nullable
  public String getMd5OfMessageSystemAttributes() {
    return md5OfMessageSystemAttributes;
  }

  public void setMd5OfMessageSystemAttributes(String md5OfMessageSystemAttributes) {
    this.md5OfMessageSystemAttributes = md5OfMessageSystemAttributes;
  }


  public SendMessageBatchResultEntry sequenceNumber(String sequenceNumber) {
    this.sequenceNumber = sequenceNumber;
    return this;
  }

  /**
   * Get sequenceNumber
   * @return sequenceNumber
   */
  @javax.annotation.Nullable
  public String getSequenceNumber() {
    return sequenceNumber;
  }

  public void setSequenceNumber(String sequenceNumber) {
    this.sequenceNumber = sequenceNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendMessageBatchResultEntry sendMessageBatchResultEntry = (SendMessageBatchResultEntry) o;
    return Objects.equals(this.id, sendMessageBatchResultEntry.id) &&
        Objects.equals(this.messageId, sendMessageBatchResultEntry.messageId) &&
        Objects.equals(this.md5OfMessageBody, sendMessageBatchResultEntry.md5OfMessageBody) &&
        Objects.equals(this.md5OfMessageAttributes, sendMessageBatchResultEntry.md5OfMessageAttributes) &&
        Objects.equals(this.md5OfMessageSystemAttributes, sendMessageBatchResultEntry.md5OfMessageSystemAttributes) &&
        Objects.equals(this.sequenceNumber, sendMessageBatchResultEntry.sequenceNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, messageId, md5OfMessageBody, md5OfMessageAttributes, md5OfMessageSystemAttributes, sequenceNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendMessageBatchResultEntry {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    messageId: ").append(toIndentedString(messageId)).append("\n");
    sb.append("    md5OfMessageBody: ").append(toIndentedString(md5OfMessageBody)).append("\n");
    sb.append("    md5OfMessageAttributes: ").append(toIndentedString(md5OfMessageAttributes)).append("\n");
    sb.append("    md5OfMessageSystemAttributes: ").append(toIndentedString(md5OfMessageSystemAttributes)).append("\n");
    sb.append("    sequenceNumber: ").append(toIndentedString(sequenceNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Id");
    openapiFields.add("MessageId");
    openapiFields.add("MD5OfMessageBody");
    openapiFields.add("MD5OfMessageAttributes");
    openapiFields.add("MD5OfMessageSystemAttributes");
    openapiFields.add("SequenceNumber");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Id");
    openapiRequiredFields.add("MessageId");
    openapiRequiredFields.add("MD5OfMessageBody");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SendMessageBatchResultEntry
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SendMessageBatchResultEntry.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SendMessageBatchResultEntry is not found in the empty JSON string", SendMessageBatchResultEntry.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SendMessageBatchResultEntry.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SendMessageBatchResultEntry` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SendMessageBatchResultEntry.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `Id`
      String.validateJsonElement(jsonObj.get("Id"));
      // validate the required field `MessageId`
      String.validateJsonElement(jsonObj.get("MessageId"));
      // validate the required field `MD5OfMessageBody`
      String.validateJsonElement(jsonObj.get("MD5OfMessageBody"));
      // validate the optional field `MD5OfMessageAttributes`
      if (jsonObj.get("MD5OfMessageAttributes") != null && !jsonObj.get("MD5OfMessageAttributes").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MD5OfMessageAttributes"));
      }
      // validate the optional field `MD5OfMessageSystemAttributes`
      if (jsonObj.get("MD5OfMessageSystemAttributes") != null && !jsonObj.get("MD5OfMessageSystemAttributes").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MD5OfMessageSystemAttributes"));
      }
      // validate the optional field `SequenceNumber`
      if (jsonObj.get("SequenceNumber") != null && !jsonObj.get("SequenceNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SequenceNumber"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SendMessageBatchResultEntry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SendMessageBatchResultEntry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SendMessageBatchResultEntry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SendMessageBatchResultEntry.class));

       return (TypeAdapter<T>) new TypeAdapter<SendMessageBatchResultEntry>() {
           @Override
           public void write(JsonWriter out, SendMessageBatchResultEntry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SendMessageBatchResultEntry read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SendMessageBatchResultEntry given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SendMessageBatchResultEntry
   * @throws IOException if the JSON string is invalid with respect to SendMessageBatchResultEntry
   */
  public static SendMessageBatchResultEntry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SendMessageBatchResultEntry.class);
  }

  /**
   * Convert an instance of SendMessageBatchResultEntry to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

