/*
 * Amazon Simple Queue Service
 * <p>Welcome to the <i>Amazon SQS API Reference</i>.</p> <p>Amazon SQS is a reliable, highly-scalable hosted queue for storing messages as they travel between applications or microservices. Amazon SQS moves data between distributed application components and helps you decouple these components.</p> <p>For information on the permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-authentication-and-access-control.html\">Identity and access management</a> in the <i>Amazon SQS Developer Guide.</i> </p> <p>You can use <a href=\"http://aws.amazon.com/tools/#sdk\">Amazon Web Services SDKs</a> to access Amazon SQS using your favorite programming language. The SDKs perform tasks such as the following automatically:</p> <ul> <li> <p>Cryptographically sign your service requests</p> </li> <li> <p>Retry requests</p> </li> <li> <p>Handle error responses</p> </li> </ul> <p> <b>Additional information</b> </p> <ul> <li> <p> <a href=\"http://aws.amazon.com/sqs/\">Amazon SQS Product Page</a> </p> </li> <li> <p> <i>Amazon SQS Developer Guide</i> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-making-api-requests.html\">Making API Requests</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-message-metadata.html#sqs-message-attributes\">Amazon SQS Message Attributes</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html\">Amazon SQS Dead-Letter Queues</a> </p> </li> </ul> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/cli/latest/reference/sqs/index.html\">Amazon SQS in the <i>Command Line Interface</i> </a> </p> </li> <li> <p> <i>Amazon Web Services General Reference</i> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#sqs_region\">Regions and Endpoints</a> </p> </li> </ul> </li> </ul>
 *
 * The version of the OpenAPI document: 2012-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListMessageMoveTasksResultEntryListInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:04.055445-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListMessageMoveTasksResultEntryListInner {
  public static final String SERIALIZED_NAME_TASK_HANDLE = "TaskHandle";
  @SerializedName(SERIALIZED_NAME_TASK_HANDLE)
  private String taskHandle;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_SOURCE_ARN = "SourceArn";
  @SerializedName(SERIALIZED_NAME_SOURCE_ARN)
  private String sourceArn;

  public static final String SERIALIZED_NAME_DESTINATION_ARN = "DestinationArn";
  @SerializedName(SERIALIZED_NAME_DESTINATION_ARN)
  private String destinationArn;

  public static final String SERIALIZED_NAME_MAX_NUMBER_OF_MESSAGES_PER_SECOND = "MaxNumberOfMessagesPerSecond";
  @SerializedName(SERIALIZED_NAME_MAX_NUMBER_OF_MESSAGES_PER_SECOND)
  private Integer maxNumberOfMessagesPerSecond;

  public static final String SERIALIZED_NAME_APPROXIMATE_NUMBER_OF_MESSAGES_MOVED = "ApproximateNumberOfMessagesMoved";
  @SerializedName(SERIALIZED_NAME_APPROXIMATE_NUMBER_OF_MESSAGES_MOVED)
  private Integer approximateNumberOfMessagesMoved;

  public static final String SERIALIZED_NAME_APPROXIMATE_NUMBER_OF_MESSAGES_TO_MOVE = "ApproximateNumberOfMessagesToMove";
  @SerializedName(SERIALIZED_NAME_APPROXIMATE_NUMBER_OF_MESSAGES_TO_MOVE)
  private Integer approximateNumberOfMessagesToMove;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_STARTED_TIMESTAMP = "StartedTimestamp";
  @SerializedName(SERIALIZED_NAME_STARTED_TIMESTAMP)
  private Integer startedTimestamp;

  public ListMessageMoveTasksResultEntryListInner() {
  }

  public ListMessageMoveTasksResultEntryListInner taskHandle(String taskHandle) {
    this.taskHandle = taskHandle;
    return this;
  }

  /**
   * Get taskHandle
   * @return taskHandle
   */
  @javax.annotation.Nullable
  public String getTaskHandle() {
    return taskHandle;
  }

  public void setTaskHandle(String taskHandle) {
    this.taskHandle = taskHandle;
  }


  public ListMessageMoveTasksResultEntryListInner status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public ListMessageMoveTasksResultEntryListInner sourceArn(String sourceArn) {
    this.sourceArn = sourceArn;
    return this;
  }

  /**
   * Get sourceArn
   * @return sourceArn
   */
  @javax.annotation.Nullable
  public String getSourceArn() {
    return sourceArn;
  }

  public void setSourceArn(String sourceArn) {
    this.sourceArn = sourceArn;
  }


  public ListMessageMoveTasksResultEntryListInner destinationArn(String destinationArn) {
    this.destinationArn = destinationArn;
    return this;
  }

  /**
   * Get destinationArn
   * @return destinationArn
   */
  @javax.annotation.Nullable
  public String getDestinationArn() {
    return destinationArn;
  }

  public void setDestinationArn(String destinationArn) {
    this.destinationArn = destinationArn;
  }


  public ListMessageMoveTasksResultEntryListInner maxNumberOfMessagesPerSecond(Integer maxNumberOfMessagesPerSecond) {
    this.maxNumberOfMessagesPerSecond = maxNumberOfMessagesPerSecond;
    return this;
  }

  /**
   * Get maxNumberOfMessagesPerSecond
   * @return maxNumberOfMessagesPerSecond
   */
  @javax.annotation.Nullable
  public Integer getMaxNumberOfMessagesPerSecond() {
    return maxNumberOfMessagesPerSecond;
  }

  public void setMaxNumberOfMessagesPerSecond(Integer maxNumberOfMessagesPerSecond) {
    this.maxNumberOfMessagesPerSecond = maxNumberOfMessagesPerSecond;
  }


  public ListMessageMoveTasksResultEntryListInner approximateNumberOfMessagesMoved(Integer approximateNumberOfMessagesMoved) {
    this.approximateNumberOfMessagesMoved = approximateNumberOfMessagesMoved;
    return this;
  }

  /**
   * Get approximateNumberOfMessagesMoved
   * @return approximateNumberOfMessagesMoved
   */
  @javax.annotation.Nullable
  public Integer getApproximateNumberOfMessagesMoved() {
    return approximateNumberOfMessagesMoved;
  }

  public void setApproximateNumberOfMessagesMoved(Integer approximateNumberOfMessagesMoved) {
    this.approximateNumberOfMessagesMoved = approximateNumberOfMessagesMoved;
  }


  public ListMessageMoveTasksResultEntryListInner approximateNumberOfMessagesToMove(Integer approximateNumberOfMessagesToMove) {
    this.approximateNumberOfMessagesToMove = approximateNumberOfMessagesToMove;
    return this;
  }

  /**
   * Get approximateNumberOfMessagesToMove
   * @return approximateNumberOfMessagesToMove
   */
  @javax.annotation.Nullable
  public Integer getApproximateNumberOfMessagesToMove() {
    return approximateNumberOfMessagesToMove;
  }

  public void setApproximateNumberOfMessagesToMove(Integer approximateNumberOfMessagesToMove) {
    this.approximateNumberOfMessagesToMove = approximateNumberOfMessagesToMove;
  }


  public ListMessageMoveTasksResultEntryListInner failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public ListMessageMoveTasksResultEntryListInner startedTimestamp(Integer startedTimestamp) {
    this.startedTimestamp = startedTimestamp;
    return this;
  }

  /**
   * Get startedTimestamp
   * @return startedTimestamp
   */
  @javax.annotation.Nullable
  public Integer getStartedTimestamp() {
    return startedTimestamp;
  }

  public void setStartedTimestamp(Integer startedTimestamp) {
    this.startedTimestamp = startedTimestamp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListMessageMoveTasksResultEntryListInner listMessageMoveTasksResultEntryListInner = (ListMessageMoveTasksResultEntryListInner) o;
    return Objects.equals(this.taskHandle, listMessageMoveTasksResultEntryListInner.taskHandle) &&
        Objects.equals(this.status, listMessageMoveTasksResultEntryListInner.status) &&
        Objects.equals(this.sourceArn, listMessageMoveTasksResultEntryListInner.sourceArn) &&
        Objects.equals(this.destinationArn, listMessageMoveTasksResultEntryListInner.destinationArn) &&
        Objects.equals(this.maxNumberOfMessagesPerSecond, listMessageMoveTasksResultEntryListInner.maxNumberOfMessagesPerSecond) &&
        Objects.equals(this.approximateNumberOfMessagesMoved, listMessageMoveTasksResultEntryListInner.approximateNumberOfMessagesMoved) &&
        Objects.equals(this.approximateNumberOfMessagesToMove, listMessageMoveTasksResultEntryListInner.approximateNumberOfMessagesToMove) &&
        Objects.equals(this.failureReason, listMessageMoveTasksResultEntryListInner.failureReason) &&
        Objects.equals(this.startedTimestamp, listMessageMoveTasksResultEntryListInner.startedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taskHandle, status, sourceArn, destinationArn, maxNumberOfMessagesPerSecond, approximateNumberOfMessagesMoved, approximateNumberOfMessagesToMove, failureReason, startedTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListMessageMoveTasksResultEntryListInner {\n");
    sb.append("    taskHandle: ").append(toIndentedString(taskHandle)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    sourceArn: ").append(toIndentedString(sourceArn)).append("\n");
    sb.append("    destinationArn: ").append(toIndentedString(destinationArn)).append("\n");
    sb.append("    maxNumberOfMessagesPerSecond: ").append(toIndentedString(maxNumberOfMessagesPerSecond)).append("\n");
    sb.append("    approximateNumberOfMessagesMoved: ").append(toIndentedString(approximateNumberOfMessagesMoved)).append("\n");
    sb.append("    approximateNumberOfMessagesToMove: ").append(toIndentedString(approximateNumberOfMessagesToMove)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    startedTimestamp: ").append(toIndentedString(startedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TaskHandle");
    openapiFields.add("Status");
    openapiFields.add("SourceArn");
    openapiFields.add("DestinationArn");
    openapiFields.add("MaxNumberOfMessagesPerSecond");
    openapiFields.add("ApproximateNumberOfMessagesMoved");
    openapiFields.add("ApproximateNumberOfMessagesToMove");
    openapiFields.add("FailureReason");
    openapiFields.add("StartedTimestamp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListMessageMoveTasksResultEntryListInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListMessageMoveTasksResultEntryListInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListMessageMoveTasksResultEntryListInner is not found in the empty JSON string", ListMessageMoveTasksResultEntryListInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListMessageMoveTasksResultEntryListInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListMessageMoveTasksResultEntryListInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `TaskHandle`
      if (jsonObj.get("TaskHandle") != null && !jsonObj.get("TaskHandle").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TaskHandle"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `SourceArn`
      if (jsonObj.get("SourceArn") != null && !jsonObj.get("SourceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SourceArn"));
      }
      // validate the optional field `DestinationArn`
      if (jsonObj.get("DestinationArn") != null && !jsonObj.get("DestinationArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DestinationArn"));
      }
      // validate the optional field `MaxNumberOfMessagesPerSecond`
      if (jsonObj.get("MaxNumberOfMessagesPerSecond") != null && !jsonObj.get("MaxNumberOfMessagesPerSecond").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxNumberOfMessagesPerSecond"));
      }
      // validate the optional field `ApproximateNumberOfMessagesMoved`
      if (jsonObj.get("ApproximateNumberOfMessagesMoved") != null && !jsonObj.get("ApproximateNumberOfMessagesMoved").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ApproximateNumberOfMessagesMoved"));
      }
      // validate the optional field `ApproximateNumberOfMessagesToMove`
      if (jsonObj.get("ApproximateNumberOfMessagesToMove") != null && !jsonObj.get("ApproximateNumberOfMessagesToMove").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ApproximateNumberOfMessagesToMove"));
      }
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the optional field `StartedTimestamp`
      if (jsonObj.get("StartedTimestamp") != null && !jsonObj.get("StartedTimestamp").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("StartedTimestamp"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListMessageMoveTasksResultEntryListInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListMessageMoveTasksResultEntryListInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListMessageMoveTasksResultEntryListInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListMessageMoveTasksResultEntryListInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ListMessageMoveTasksResultEntryListInner>() {
           @Override
           public void write(JsonWriter out, ListMessageMoveTasksResultEntryListInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListMessageMoveTasksResultEntryListInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListMessageMoveTasksResultEntryListInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListMessageMoveTasksResultEntryListInner
   * @throws IOException if the JSON string is invalid with respect to ListMessageMoveTasksResultEntryListInner
   */
  public static ListMessageMoveTasksResultEntryListInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListMessageMoveTasksResultEntryListInner.class);
  }

  /**
   * Convert an instance of ListMessageMoveTasksResultEntryListInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

