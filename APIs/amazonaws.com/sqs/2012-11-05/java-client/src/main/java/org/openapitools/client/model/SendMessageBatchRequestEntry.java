/*
 * Amazon Simple Queue Service
 * <p>Welcome to the <i>Amazon SQS API Reference</i>.</p> <p>Amazon SQS is a reliable, highly-scalable hosted queue for storing messages as they travel between applications or microservices. Amazon SQS moves data between distributed application components and helps you decouple these components.</p> <p>For information on the permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-authentication-and-access-control.html\">Identity and access management</a> in the <i>Amazon SQS Developer Guide.</i> </p> <p>You can use <a href=\"http://aws.amazon.com/tools/#sdk\">Amazon Web Services SDKs</a> to access Amazon SQS using your favorite programming language. The SDKs perform tasks such as the following automatically:</p> <ul> <li> <p>Cryptographically sign your service requests</p> </li> <li> <p>Retry requests</p> </li> <li> <p>Handle error responses</p> </li> </ul> <p> <b>Additional information</b> </p> <ul> <li> <p> <a href=\"http://aws.amazon.com/sqs/\">Amazon SQS Product Page</a> </p> </li> <li> <p> <i>Amazon SQS Developer Guide</i> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-making-api-requests.html\">Making API Requests</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-message-metadata.html#sqs-message-attributes\">Amazon SQS Message Attributes</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html\">Amazon SQS Dead-Letter Queues</a> </p> </li> </ul> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/cli/latest/reference/sqs/index.html\">Amazon SQS in the <i>Command Line Interface</i> </a> </p> </li> <li> <p> <i>Amazon Web Services General Reference</i> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#sqs_region\">Regions and Endpoints</a> </p> </li> </ul> </li> </ul>
 *
 * The version of the OpenAPI document: 2012-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains the details of a single Amazon SQS message along with an &lt;code&gt;Id&lt;/code&gt;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:04.055445-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SendMessageBatchRequestEntry {
  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_MESSAGE_BODY = "MessageBody";
  @SerializedName(SERIALIZED_NAME_MESSAGE_BODY)
  private String messageBody;

  public static final String SERIALIZED_NAME_DELAY_SECONDS = "DelaySeconds";
  @SerializedName(SERIALIZED_NAME_DELAY_SECONDS)
  private Integer delaySeconds;

  public static final String SERIALIZED_NAME_MESSAGE_ATTRIBUTES = "MessageAttributes";
  @SerializedName(SERIALIZED_NAME_MESSAGE_ATTRIBUTES)
  private Map messageAttributes;

  public static final String SERIALIZED_NAME_MESSAGE_SYSTEM_ATTRIBUTES = "MessageSystemAttributes";
  @SerializedName(SERIALIZED_NAME_MESSAGE_SYSTEM_ATTRIBUTES)
  private Map messageSystemAttributes;

  public static final String SERIALIZED_NAME_MESSAGE_DEDUPLICATION_ID = "MessageDeduplicationId";
  @SerializedName(SERIALIZED_NAME_MESSAGE_DEDUPLICATION_ID)
  private String messageDeduplicationId;

  public static final String SERIALIZED_NAME_MESSAGE_GROUP_ID = "MessageGroupId";
  @SerializedName(SERIALIZED_NAME_MESSAGE_GROUP_ID)
  private String messageGroupId;

  public SendMessageBatchRequestEntry() {
  }

  public SendMessageBatchRequestEntry id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public SendMessageBatchRequestEntry messageBody(String messageBody) {
    this.messageBody = messageBody;
    return this;
  }

  /**
   * Get messageBody
   * @return messageBody
   */
  @javax.annotation.Nonnull
  public String getMessageBody() {
    return messageBody;
  }

  public void setMessageBody(String messageBody) {
    this.messageBody = messageBody;
  }


  public SendMessageBatchRequestEntry delaySeconds(Integer delaySeconds) {
    this.delaySeconds = delaySeconds;
    return this;
  }

  /**
   * Get delaySeconds
   * @return delaySeconds
   */
  @javax.annotation.Nullable
  public Integer getDelaySeconds() {
    return delaySeconds;
  }

  public void setDelaySeconds(Integer delaySeconds) {
    this.delaySeconds = delaySeconds;
  }


  public SendMessageBatchRequestEntry messageAttributes(Map messageAttributes) {
    this.messageAttributes = messageAttributes;
    return this;
  }

  /**
   * Get messageAttributes
   * @return messageAttributes
   */
  @javax.annotation.Nullable
  public Map getMessageAttributes() {
    return messageAttributes;
  }

  public void setMessageAttributes(Map messageAttributes) {
    this.messageAttributes = messageAttributes;
  }


  public SendMessageBatchRequestEntry messageSystemAttributes(Map messageSystemAttributes) {
    this.messageSystemAttributes = messageSystemAttributes;
    return this;
  }

  /**
   * Get messageSystemAttributes
   * @return messageSystemAttributes
   */
  @javax.annotation.Nullable
  public Map getMessageSystemAttributes() {
    return messageSystemAttributes;
  }

  public void setMessageSystemAttributes(Map messageSystemAttributes) {
    this.messageSystemAttributes = messageSystemAttributes;
  }


  public SendMessageBatchRequestEntry messageDeduplicationId(String messageDeduplicationId) {
    this.messageDeduplicationId = messageDeduplicationId;
    return this;
  }

  /**
   * Get messageDeduplicationId
   * @return messageDeduplicationId
   */
  @javax.annotation.Nullable
  public String getMessageDeduplicationId() {
    return messageDeduplicationId;
  }

  public void setMessageDeduplicationId(String messageDeduplicationId) {
    this.messageDeduplicationId = messageDeduplicationId;
  }


  public SendMessageBatchRequestEntry messageGroupId(String messageGroupId) {
    this.messageGroupId = messageGroupId;
    return this;
  }

  /**
   * Get messageGroupId
   * @return messageGroupId
   */
  @javax.annotation.Nullable
  public String getMessageGroupId() {
    return messageGroupId;
  }

  public void setMessageGroupId(String messageGroupId) {
    this.messageGroupId = messageGroupId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendMessageBatchRequestEntry sendMessageBatchRequestEntry = (SendMessageBatchRequestEntry) o;
    return Objects.equals(this.id, sendMessageBatchRequestEntry.id) &&
        Objects.equals(this.messageBody, sendMessageBatchRequestEntry.messageBody) &&
        Objects.equals(this.delaySeconds, sendMessageBatchRequestEntry.delaySeconds) &&
        Objects.equals(this.messageAttributes, sendMessageBatchRequestEntry.messageAttributes) &&
        Objects.equals(this.messageSystemAttributes, sendMessageBatchRequestEntry.messageSystemAttributes) &&
        Objects.equals(this.messageDeduplicationId, sendMessageBatchRequestEntry.messageDeduplicationId) &&
        Objects.equals(this.messageGroupId, sendMessageBatchRequestEntry.messageGroupId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, messageBody, delaySeconds, messageAttributes, messageSystemAttributes, messageDeduplicationId, messageGroupId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendMessageBatchRequestEntry {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    messageBody: ").append(toIndentedString(messageBody)).append("\n");
    sb.append("    delaySeconds: ").append(toIndentedString(delaySeconds)).append("\n");
    sb.append("    messageAttributes: ").append(toIndentedString(messageAttributes)).append("\n");
    sb.append("    messageSystemAttributes: ").append(toIndentedString(messageSystemAttributes)).append("\n");
    sb.append("    messageDeduplicationId: ").append(toIndentedString(messageDeduplicationId)).append("\n");
    sb.append("    messageGroupId: ").append(toIndentedString(messageGroupId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Id");
    openapiFields.add("MessageBody");
    openapiFields.add("DelaySeconds");
    openapiFields.add("MessageAttributes");
    openapiFields.add("MessageSystemAttributes");
    openapiFields.add("MessageDeduplicationId");
    openapiFields.add("MessageGroupId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Id");
    openapiRequiredFields.add("MessageBody");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SendMessageBatchRequestEntry
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SendMessageBatchRequestEntry.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SendMessageBatchRequestEntry is not found in the empty JSON string", SendMessageBatchRequestEntry.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SendMessageBatchRequestEntry.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SendMessageBatchRequestEntry` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SendMessageBatchRequestEntry.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `Id`
      String.validateJsonElement(jsonObj.get("Id"));
      // validate the required field `MessageBody`
      String.validateJsonElement(jsonObj.get("MessageBody"));
      // validate the optional field `DelaySeconds`
      if (jsonObj.get("DelaySeconds") != null && !jsonObj.get("DelaySeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("DelaySeconds"));
      }
      // validate the optional field `MessageAttributes`
      if (jsonObj.get("MessageAttributes") != null && !jsonObj.get("MessageAttributes").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("MessageAttributes"));
      }
      // validate the optional field `MessageSystemAttributes`
      if (jsonObj.get("MessageSystemAttributes") != null && !jsonObj.get("MessageSystemAttributes").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("MessageSystemAttributes"));
      }
      // validate the optional field `MessageDeduplicationId`
      if (jsonObj.get("MessageDeduplicationId") != null && !jsonObj.get("MessageDeduplicationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MessageDeduplicationId"));
      }
      // validate the optional field `MessageGroupId`
      if (jsonObj.get("MessageGroupId") != null && !jsonObj.get("MessageGroupId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MessageGroupId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SendMessageBatchRequestEntry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SendMessageBatchRequestEntry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SendMessageBatchRequestEntry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SendMessageBatchRequestEntry.class));

       return (TypeAdapter<T>) new TypeAdapter<SendMessageBatchRequestEntry>() {
           @Override
           public void write(JsonWriter out, SendMessageBatchRequestEntry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SendMessageBatchRequestEntry read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SendMessageBatchRequestEntry given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SendMessageBatchRequestEntry
   * @throws IOException if the JSON string is invalid with respect to SendMessageBatchRequestEntry
   */
  public static SendMessageBatchRequestEntry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SendMessageBatchRequestEntry.class);
  }

  /**
   * Convert an instance of SendMessageBatchRequestEntry to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

