# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SendMessageRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, queue_url: str=None, message_body: str=None, delay_seconds: int=None, message_attributes: Dict=None, message_system_attributes: Dict=None, message_deduplication_id: str=None, message_group_id: str=None):
        """SendMessageRequest - a model defined in OpenAPI

        :param queue_url: The queue_url of this SendMessageRequest.
        :param message_body: The message_body of this SendMessageRequest.
        :param delay_seconds: The delay_seconds of this SendMessageRequest.
        :param message_attributes: The message_attributes of this SendMessageRequest.
        :param message_system_attributes: The message_system_attributes of this SendMessageRequest.
        :param message_deduplication_id: The message_deduplication_id of this SendMessageRequest.
        :param message_group_id: The message_group_id of this SendMessageRequest.
        """
        self.openapi_types = {
            'queue_url': str,
            'message_body': str,
            'delay_seconds': int,
            'message_attributes': Dict,
            'message_system_attributes': Dict,
            'message_deduplication_id': str,
            'message_group_id': str
        }

        self.attribute_map = {
            'queue_url': 'QueueUrl',
            'message_body': 'MessageBody',
            'delay_seconds': 'DelaySeconds',
            'message_attributes': 'MessageAttributes',
            'message_system_attributes': 'MessageSystemAttributes',
            'message_deduplication_id': 'MessageDeduplicationId',
            'message_group_id': 'MessageGroupId'
        }

        self._queue_url = queue_url
        self._message_body = message_body
        self._delay_seconds = delay_seconds
        self._message_attributes = message_attributes
        self._message_system_attributes = message_system_attributes
        self._message_deduplication_id = message_deduplication_id
        self._message_group_id = message_group_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendMessageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendMessageRequest of this SendMessageRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def queue_url(self):
        """Gets the queue_url of this SendMessageRequest.


        :return: The queue_url of this SendMessageRequest.
        :rtype: str
        """
        return self._queue_url

    @queue_url.setter
    def queue_url(self, queue_url):
        """Sets the queue_url of this SendMessageRequest.


        :param queue_url: The queue_url of this SendMessageRequest.
        :type queue_url: str
        """
        if queue_url is None:
            raise ValueError("Invalid value for `queue_url`, must not be `None`")

        self._queue_url = queue_url

    @property
    def message_body(self):
        """Gets the message_body of this SendMessageRequest.


        :return: The message_body of this SendMessageRequest.
        :rtype: str
        """
        return self._message_body

    @message_body.setter
    def message_body(self, message_body):
        """Sets the message_body of this SendMessageRequest.


        :param message_body: The message_body of this SendMessageRequest.
        :type message_body: str
        """
        if message_body is None:
            raise ValueError("Invalid value for `message_body`, must not be `None`")

        self._message_body = message_body

    @property
    def delay_seconds(self):
        """Gets the delay_seconds of this SendMessageRequest.


        :return: The delay_seconds of this SendMessageRequest.
        :rtype: int
        """
        return self._delay_seconds

    @delay_seconds.setter
    def delay_seconds(self, delay_seconds):
        """Sets the delay_seconds of this SendMessageRequest.


        :param delay_seconds: The delay_seconds of this SendMessageRequest.
        :type delay_seconds: int
        """

        self._delay_seconds = delay_seconds

    @property
    def message_attributes(self):
        """Gets the message_attributes of this SendMessageRequest.


        :return: The message_attributes of this SendMessageRequest.
        :rtype: Dict
        """
        return self._message_attributes

    @message_attributes.setter
    def message_attributes(self, message_attributes):
        """Sets the message_attributes of this SendMessageRequest.


        :param message_attributes: The message_attributes of this SendMessageRequest.
        :type message_attributes: Dict
        """

        self._message_attributes = message_attributes

    @property
    def message_system_attributes(self):
        """Gets the message_system_attributes of this SendMessageRequest.


        :return: The message_system_attributes of this SendMessageRequest.
        :rtype: Dict
        """
        return self._message_system_attributes

    @message_system_attributes.setter
    def message_system_attributes(self, message_system_attributes):
        """Sets the message_system_attributes of this SendMessageRequest.


        :param message_system_attributes: The message_system_attributes of this SendMessageRequest.
        :type message_system_attributes: Dict
        """

        self._message_system_attributes = message_system_attributes

    @property
    def message_deduplication_id(self):
        """Gets the message_deduplication_id of this SendMessageRequest.


        :return: The message_deduplication_id of this SendMessageRequest.
        :rtype: str
        """
        return self._message_deduplication_id

    @message_deduplication_id.setter
    def message_deduplication_id(self, message_deduplication_id):
        """Sets the message_deduplication_id of this SendMessageRequest.


        :param message_deduplication_id: The message_deduplication_id of this SendMessageRequest.
        :type message_deduplication_id: str
        """

        self._message_deduplication_id = message_deduplication_id

    @property
    def message_group_id(self):
        """Gets the message_group_id of this SendMessageRequest.


        :return: The message_group_id of this SendMessageRequest.
        :rtype: str
        """
        return self._message_group_id

    @message_group_id.setter
    def message_group_id(self, message_group_id):
        """Sets the message_group_id of this SendMessageRequest.


        :param message_group_id: The message_group_id of this SendMessageRequest.
        :type message_group_id: str
        """

        self._message_group_id = message_group_id
