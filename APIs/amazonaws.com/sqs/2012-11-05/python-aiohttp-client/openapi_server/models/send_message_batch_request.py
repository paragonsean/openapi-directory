# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SendMessageBatchRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, queue_url: str=None, entries: List=None):
        """SendMessageBatchRequest - a model defined in OpenAPI

        :param queue_url: The queue_url of this SendMessageBatchRequest.
        :param entries: The entries of this SendMessageBatchRequest.
        """
        self.openapi_types = {
            'queue_url': str,
            'entries': List
        }

        self.attribute_map = {
            'queue_url': 'QueueUrl',
            'entries': 'Entries'
        }

        self._queue_url = queue_url
        self._entries = entries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendMessageBatchRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendMessageBatchRequest of this SendMessageBatchRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def queue_url(self):
        """Gets the queue_url of this SendMessageBatchRequest.


        :return: The queue_url of this SendMessageBatchRequest.
        :rtype: str
        """
        return self._queue_url

    @queue_url.setter
    def queue_url(self, queue_url):
        """Sets the queue_url of this SendMessageBatchRequest.


        :param queue_url: The queue_url of this SendMessageBatchRequest.
        :type queue_url: str
        """
        if queue_url is None:
            raise ValueError("Invalid value for `queue_url`, must not be `None`")

        self._queue_url = queue_url

    @property
    def entries(self):
        """Gets the entries of this SendMessageBatchRequest.


        :return: The entries of this SendMessageBatchRequest.
        :rtype: List
        """
        return self._entries

    @entries.setter
    def entries(self, entries):
        """Sets the entries of this SendMessageBatchRequest.


        :param entries: The entries of this SendMessageBatchRequest.
        :type entries: List
        """
        if entries is None:
            raise ValueError("Invalid value for `entries`, must not be `None`")

        self._entries = entries
