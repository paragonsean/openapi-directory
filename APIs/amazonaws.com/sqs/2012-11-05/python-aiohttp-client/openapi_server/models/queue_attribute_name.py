# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueueAttributeName(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ALL = 'All'
    POLICY = 'Policy'
    VISIBILITYTIMEOUT = 'VisibilityTimeout'
    MAXIMUMMESSAGESIZE = 'MaximumMessageSize'
    MESSAGERETENTIONPERIOD = 'MessageRetentionPeriod'
    APPROXIMATENUMBEROFMESSAGES = 'ApproximateNumberOfMessages'
    APPROXIMATENUMBEROFMESSAGESNOTVISIBLE = 'ApproximateNumberOfMessagesNotVisible'
    CREATEDTIMESTAMP = 'CreatedTimestamp'
    LASTMODIFIEDTIMESTAMP = 'LastModifiedTimestamp'
    QUEUEARN = 'QueueArn'
    APPROXIMATENUMBEROFMESSAGESDELAYED = 'ApproximateNumberOfMessagesDelayed'
    DELAYSECONDS = 'DelaySeconds'
    RECEIVEMESSAGEWAITTIMESECONDS = 'ReceiveMessageWaitTimeSeconds'
    REDRIVEPOLICY = 'RedrivePolicy'
    FIFOQUEUE = 'FifoQueue'
    CONTENTBASEDDEDUPLICATION = 'ContentBasedDeduplication'
    KMSMASTERKEYID = 'KmsMasterKeyId'
    KMSDATAKEYREUSEPERIODSECONDS = 'KmsDataKeyReusePeriodSeconds'
    DEDUPLICATIONSCOPE = 'DeduplicationScope'
    FIFOTHROUGHPUTLIMIT = 'FifoThroughputLimit'
    REDRIVEALLOWPOLICY = 'RedriveAllowPolicy'
    SQSMANAGEDSSEENABLED = 'SqsManagedSseEnabled'

    def __init__(self):
        """QueueAttributeName - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueueAttributeName':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueueAttributeName of this QueueAttributeName.
        """
        return util.deserialize_model(dikt, cls)
