# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChangeMessageVisibilityRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, queue_url: str=None, receipt_handle: str=None, visibility_timeout: int=None):
        """ChangeMessageVisibilityRequest - a model defined in OpenAPI

        :param queue_url: The queue_url of this ChangeMessageVisibilityRequest.
        :param receipt_handle: The receipt_handle of this ChangeMessageVisibilityRequest.
        :param visibility_timeout: The visibility_timeout of this ChangeMessageVisibilityRequest.
        """
        self.openapi_types = {
            'queue_url': str,
            'receipt_handle': str,
            'visibility_timeout': int
        }

        self.attribute_map = {
            'queue_url': 'QueueUrl',
            'receipt_handle': 'ReceiptHandle',
            'visibility_timeout': 'VisibilityTimeout'
        }

        self._queue_url = queue_url
        self._receipt_handle = receipt_handle
        self._visibility_timeout = visibility_timeout

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChangeMessageVisibilityRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChangeMessageVisibilityRequest of this ChangeMessageVisibilityRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def queue_url(self):
        """Gets the queue_url of this ChangeMessageVisibilityRequest.


        :return: The queue_url of this ChangeMessageVisibilityRequest.
        :rtype: str
        """
        return self._queue_url

    @queue_url.setter
    def queue_url(self, queue_url):
        """Sets the queue_url of this ChangeMessageVisibilityRequest.


        :param queue_url: The queue_url of this ChangeMessageVisibilityRequest.
        :type queue_url: str
        """
        if queue_url is None:
            raise ValueError("Invalid value for `queue_url`, must not be `None`")

        self._queue_url = queue_url

    @property
    def receipt_handle(self):
        """Gets the receipt_handle of this ChangeMessageVisibilityRequest.


        :return: The receipt_handle of this ChangeMessageVisibilityRequest.
        :rtype: str
        """
        return self._receipt_handle

    @receipt_handle.setter
    def receipt_handle(self, receipt_handle):
        """Sets the receipt_handle of this ChangeMessageVisibilityRequest.


        :param receipt_handle: The receipt_handle of this ChangeMessageVisibilityRequest.
        :type receipt_handle: str
        """
        if receipt_handle is None:
            raise ValueError("Invalid value for `receipt_handle`, must not be `None`")

        self._receipt_handle = receipt_handle

    @property
    def visibility_timeout(self):
        """Gets the visibility_timeout of this ChangeMessageVisibilityRequest.


        :return: The visibility_timeout of this ChangeMessageVisibilityRequest.
        :rtype: int
        """
        return self._visibility_timeout

    @visibility_timeout.setter
    def visibility_timeout(self, visibility_timeout):
        """Sets the visibility_timeout of this ChangeMessageVisibilityRequest.


        :param visibility_timeout: The visibility_timeout of this ChangeMessageVisibilityRequest.
        :type visibility_timeout: int
        """
        if visibility_timeout is None:
            raise ValueError("Invalid value for `visibility_timeout`, must not be `None`")

        self._visibility_timeout = visibility_timeout
