# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RemovePermissionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, queue_url: str=None, label: str=None):
        """RemovePermissionRequest - a model defined in OpenAPI

        :param queue_url: The queue_url of this RemovePermissionRequest.
        :param label: The label of this RemovePermissionRequest.
        """
        self.openapi_types = {
            'queue_url': str,
            'label': str
        }

        self.attribute_map = {
            'queue_url': 'QueueUrl',
            'label': 'Label'
        }

        self._queue_url = queue_url
        self._label = label

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemovePermissionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemovePermissionRequest of this RemovePermissionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def queue_url(self):
        """Gets the queue_url of this RemovePermissionRequest.


        :return: The queue_url of this RemovePermissionRequest.
        :rtype: str
        """
        return self._queue_url

    @queue_url.setter
    def queue_url(self, queue_url):
        """Sets the queue_url of this RemovePermissionRequest.


        :param queue_url: The queue_url of this RemovePermissionRequest.
        :type queue_url: str
        """
        if queue_url is None:
            raise ValueError("Invalid value for `queue_url`, must not be `None`")

        self._queue_url = queue_url

    @property
    def label(self):
        """Gets the label of this RemovePermissionRequest.


        :return: The label of this RemovePermissionRequest.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this RemovePermissionRequest.


        :param label: The label of this RemovePermissionRequest.
        :type label: str
        """
        if label is None:
            raise ValueError("Invalid value for `label`, must not be `None`")

        self._label = label
