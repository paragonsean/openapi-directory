/**
 * Amazon Simple Queue Service
 * <p>Welcome to the <i>Amazon SQS API Reference</i>.</p> <p>Amazon SQS is a reliable, highly-scalable hosted queue for storing messages as they travel between applications or microservices. Amazon SQS moves data between distributed application components and helps you decouple these components.</p> <p>For information on the permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-authentication-and-access-control.html\">Identity and access management</a> in the <i>Amazon SQS Developer Guide.</i> </p> <p>You can use <a href=\"http://aws.amazon.com/tools/#sdk\">Amazon Web Services SDKs</a> to access Amazon SQS using your favorite programming language. The SDKs perform tasks such as the following automatically:</p> <ul> <li> <p>Cryptographically sign your service requests</p> </li> <li> <p>Retry requests</p> </li> <li> <p>Handle error responses</p> </li> </ul> <p> <b>Additional information</b> </p> <ul> <li> <p> <a href=\"http://aws.amazon.com/sqs/\">Amazon SQS Product Page</a> </p> </li> <li> <p> <i>Amazon SQS Developer Guide</i> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-making-api-requests.html\">Making API Requests</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-message-metadata.html#sqs-message-attributes\">Amazon SQS Message Attributes</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html\">Amazon SQS Dead-Letter Queues</a> </p> </li> </ul> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/cli/latest/reference/sqs/index.html\">Amazon SQS in the <i>Command Line Interface</i> </a> </p> </li> <li> <p> <i>Amazon Web Services General Reference</i> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#sqs_region\">Regions and Endpoints</a> </p> </li> </ul> </li> </ul>
 *
 * The version of the OpenAPI document: 2012-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMessageSystemAttributeName.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMessageSystemAttributeName::OAIMessageSystemAttributeName(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMessageSystemAttributeName::OAIMessageSystemAttributeName() {
    this->initializeModel();
}

OAIMessageSystemAttributeName::~OAIMessageSystemAttributeName() {}

void OAIMessageSystemAttributeName::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIMessageSystemAttributeName::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIMessageSystemAttributeName::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SenderId", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMessageSystemAttributeName::SENDERID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SentTimestamp", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMessageSystemAttributeName::SENTTIMESTAMP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ApproximateReceiveCount", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMessageSystemAttributeName::APPROXIMATERECEIVECOUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ApproximateFirstReceiveTimestamp", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMessageSystemAttributeName::APPROXIMATEFIRSTRECEIVETIMESTAMP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SequenceNumber", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMessageSystemAttributeName::SEQUENCENUMBER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MessageDeduplicationId", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMessageSystemAttributeName::MESSAGEDEDUPLICATIONID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MessageGroupId", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMessageSystemAttributeName::MESSAGEGROUPID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AWSTraceHeader", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMessageSystemAttributeName::AWSTRACEHEADER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DeadLetterQueueSourceArn", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMessageSystemAttributeName::DEADLETTERQUEUESOURCEARN;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIMessageSystemAttributeName::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIMessageSystemAttributeName::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIMessageSystemAttributeName::SENDERID:
            val = "SenderId";
            break;
        case eOAIMessageSystemAttributeName::SENTTIMESTAMP:
            val = "SentTimestamp";
            break;
        case eOAIMessageSystemAttributeName::APPROXIMATERECEIVECOUNT:
            val = "ApproximateReceiveCount";
            break;
        case eOAIMessageSystemAttributeName::APPROXIMATEFIRSTRECEIVETIMESTAMP:
            val = "ApproximateFirstReceiveTimestamp";
            break;
        case eOAIMessageSystemAttributeName::SEQUENCENUMBER:
            val = "SequenceNumber";
            break;
        case eOAIMessageSystemAttributeName::MESSAGEDEDUPLICATIONID:
            val = "MessageDeduplicationId";
            break;
        case eOAIMessageSystemAttributeName::MESSAGEGROUPID:
            val = "MessageGroupId";
            break;
        case eOAIMessageSystemAttributeName::AWSTRACEHEADER:
            val = "AWSTraceHeader";
            break;
        case eOAIMessageSystemAttributeName::DEADLETTERQUEUESOURCEARN:
            val = "DeadLetterQueueSourceArn";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIMessageSystemAttributeName::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIMessageSystemAttributeName::eOAIMessageSystemAttributeName OAIMessageSystemAttributeName::getValue() const {
    return m_value;
}

void OAIMessageSystemAttributeName::setValue(const OAIMessageSystemAttributeName::eOAIMessageSystemAttributeName& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIMessageSystemAttributeName::isSet() const {
    
    return m_value_isSet;
}

bool OAIMessageSystemAttributeName::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
