/**
 * Amazon Simple Queue Service
 * <p>Welcome to the <i>Amazon SQS API Reference</i>.</p> <p>Amazon SQS is a reliable, highly-scalable hosted queue for storing messages as they travel between applications or microservices. Amazon SQS moves data between distributed application components and helps you decouple these components.</p> <p>For information on the permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-authentication-and-access-control.html\">Identity and access management</a> in the <i>Amazon SQS Developer Guide.</i> </p> <p>You can use <a href=\"http://aws.amazon.com/tools/#sdk\">Amazon Web Services SDKs</a> to access Amazon SQS using your favorite programming language. The SDKs perform tasks such as the following automatically:</p> <ul> <li> <p>Cryptographically sign your service requests</p> </li> <li> <p>Retry requests</p> </li> <li> <p>Handle error responses</p> </li> </ul> <p> <b>Additional information</b> </p> <ul> <li> <p> <a href=\"http://aws.amazon.com/sqs/\">Amazon SQS Product Page</a> </p> </li> <li> <p> <i>Amazon SQS Developer Guide</i> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-making-api-requests.html\">Making API Requests</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-message-metadata.html#sqs-message-attributes\">Amazon SQS Message Attributes</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html\">Amazon SQS Dead-Letter Queues</a> </p> </li> </ul> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/cli/latest/reference/sqs/index.html\">Amazon SQS in the <i>Command Line Interface</i> </a> </p> </li> <li> <p> <i>Amazon Web Services General Reference</i> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#sqs_region\">Regions and Endpoints</a> </p> </li> </ul> </li> </ul>
 *
 * The version of the OpenAPI document: 2012-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListDeadLetterSourceQueuesResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListDeadLetterSourceQueuesResult::OAIListDeadLetterSourceQueuesResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListDeadLetterSourceQueuesResult::OAIListDeadLetterSourceQueuesResult() {
    this->initializeModel();
}

OAIListDeadLetterSourceQueuesResult::~OAIListDeadLetterSourceQueuesResult() {}

void OAIListDeadLetterSourceQueuesResult::initializeModel() {

    m_queue_urls_isSet = false;
    m_queue_urls_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListDeadLetterSourceQueuesResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListDeadLetterSourceQueuesResult::fromJsonObject(QJsonObject json) {

    m_queue_urls_isValid = ::OpenAPI::fromJsonValue(m_queue_urls, json[QString("queueUrls")]);
    m_queue_urls_isSet = !json[QString("queueUrls")].isNull() && m_queue_urls_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListDeadLetterSourceQueuesResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListDeadLetterSourceQueuesResult::asJsonObject() const {
    QJsonObject obj;
    if (m_queue_urls.isSet()) {
        obj.insert(QString("queueUrls"), ::OpenAPI::toJsonValue(m_queue_urls));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListDeadLetterSourceQueuesResult::getQueueUrls() const {
    return m_queue_urls;
}
void OAIListDeadLetterSourceQueuesResult::setQueueUrls(const QList &queue_urls) {
    m_queue_urls = queue_urls;
    m_queue_urls_isSet = true;
}

bool OAIListDeadLetterSourceQueuesResult::is_queue_urls_Set() const{
    return m_queue_urls_isSet;
}

bool OAIListDeadLetterSourceQueuesResult::is_queue_urls_Valid() const{
    return m_queue_urls_isValid;
}

QString OAIListDeadLetterSourceQueuesResult::getNextToken() const {
    return m_next_token;
}
void OAIListDeadLetterSourceQueuesResult::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListDeadLetterSourceQueuesResult::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListDeadLetterSourceQueuesResult::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListDeadLetterSourceQueuesResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_queue_urls.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListDeadLetterSourceQueuesResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_queue_urls_isValid && true;
}

} // namespace OpenAPI
