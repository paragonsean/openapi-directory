/**
 * Amazon Simple Queue Service
 * <p>Welcome to the <i>Amazon SQS API Reference</i>.</p> <p>Amazon SQS is a reliable, highly-scalable hosted queue for storing messages as they travel between applications or microservices. Amazon SQS moves data between distributed application components and helps you decouple these components.</p> <p>For information on the permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-authentication-and-access-control.html\">Identity and access management</a> in the <i>Amazon SQS Developer Guide.</i> </p> <p>You can use <a href=\"http://aws.amazon.com/tools/#sdk\">Amazon Web Services SDKs</a> to access Amazon SQS using your favorite programming language. The SDKs perform tasks such as the following automatically:</p> <ul> <li> <p>Cryptographically sign your service requests</p> </li> <li> <p>Retry requests</p> </li> <li> <p>Handle error responses</p> </li> </ul> <p> <b>Additional information</b> </p> <ul> <li> <p> <a href=\"http://aws.amazon.com/sqs/\">Amazon SQS Product Page</a> </p> </li> <li> <p> <i>Amazon SQS Developer Guide</i> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-making-api-requests.html\">Making API Requests</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-message-metadata.html#sqs-message-attributes\">Amazon SQS Message Attributes</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html\">Amazon SQS Dead-Letter Queues</a> </p> </li> </ul> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/cli/latest/reference/sqs/index.html\">Amazon SQS in the <i>Command Line Interface</i> </a> </p> </li> <li> <p> <i>Amazon Web Services General Reference</i> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#sqs_region\">Regions and Endpoints</a> </p> </li> </ul> </li> </ul>
 *
 * The version of the OpenAPI document: 2012-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListQueuesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListQueuesRequest::OAIListQueuesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListQueuesRequest::OAIListQueuesRequest() {
    this->initializeModel();
}

OAIListQueuesRequest::~OAIListQueuesRequest() {}

void OAIListQueuesRequest::initializeModel() {

    m_queue_name_prefix_isSet = false;
    m_queue_name_prefix_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_max_results_isSet = false;
    m_max_results_isValid = false;
}

void OAIListQueuesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListQueuesRequest::fromJsonObject(QJsonObject json) {

    m_queue_name_prefix_isValid = ::OpenAPI::fromJsonValue(m_queue_name_prefix, json[QString("QueueNamePrefix")]);
    m_queue_name_prefix_isSet = !json[QString("QueueNamePrefix")].isNull() && m_queue_name_prefix_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;

    m_max_results_isValid = ::OpenAPI::fromJsonValue(m_max_results, json[QString("MaxResults")]);
    m_max_results_isSet = !json[QString("MaxResults")].isNull() && m_max_results_isValid;
}

QString OAIListQueuesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListQueuesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_queue_name_prefix_isSet) {
        obj.insert(QString("QueueNamePrefix"), ::OpenAPI::toJsonValue(m_queue_name_prefix));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_max_results_isSet) {
        obj.insert(QString("MaxResults"), ::OpenAPI::toJsonValue(m_max_results));
    }
    return obj;
}

QString OAIListQueuesRequest::getQueueNamePrefix() const {
    return m_queue_name_prefix;
}
void OAIListQueuesRequest::setQueueNamePrefix(const QString &queue_name_prefix) {
    m_queue_name_prefix = queue_name_prefix;
    m_queue_name_prefix_isSet = true;
}

bool OAIListQueuesRequest::is_queue_name_prefix_Set() const{
    return m_queue_name_prefix_isSet;
}

bool OAIListQueuesRequest::is_queue_name_prefix_Valid() const{
    return m_queue_name_prefix_isValid;
}

QString OAIListQueuesRequest::getNextToken() const {
    return m_next_token;
}
void OAIListQueuesRequest::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListQueuesRequest::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListQueuesRequest::is_next_token_Valid() const{
    return m_next_token_isValid;
}

qint32 OAIListQueuesRequest::getMaxResults() const {
    return m_max_results;
}
void OAIListQueuesRequest::setMaxResults(const qint32 &max_results) {
    m_max_results = max_results;
    m_max_results_isSet = true;
}

bool OAIListQueuesRequest::is_max_results_Set() const{
    return m_max_results_isSet;
}

bool OAIListQueuesRequest::is_max_results_Valid() const{
    return m_max_results_isValid;
}

bool OAIListQueuesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_queue_name_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_results_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListQueuesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
