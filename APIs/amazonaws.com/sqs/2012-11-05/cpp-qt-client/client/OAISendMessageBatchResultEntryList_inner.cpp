/**
 * Amazon Simple Queue Service
 * <p>Welcome to the <i>Amazon SQS API Reference</i>.</p> <p>Amazon SQS is a reliable, highly-scalable hosted queue for storing messages as they travel between applications or microservices. Amazon SQS moves data between distributed application components and helps you decouple these components.</p> <p>For information on the permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-authentication-and-access-control.html\">Identity and access management</a> in the <i>Amazon SQS Developer Guide.</i> </p> <p>You can use <a href=\"http://aws.amazon.com/tools/#sdk\">Amazon Web Services SDKs</a> to access Amazon SQS using your favorite programming language. The SDKs perform tasks such as the following automatically:</p> <ul> <li> <p>Cryptographically sign your service requests</p> </li> <li> <p>Retry requests</p> </li> <li> <p>Handle error responses</p> </li> </ul> <p> <b>Additional information</b> </p> <ul> <li> <p> <a href=\"http://aws.amazon.com/sqs/\">Amazon SQS Product Page</a> </p> </li> <li> <p> <i>Amazon SQS Developer Guide</i> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-making-api-requests.html\">Making API Requests</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-message-metadata.html#sqs-message-attributes\">Amazon SQS Message Attributes</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html\">Amazon SQS Dead-Letter Queues</a> </p> </li> </ul> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/cli/latest/reference/sqs/index.html\">Amazon SQS in the <i>Command Line Interface</i> </a> </p> </li> <li> <p> <i>Amazon Web Services General Reference</i> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#sqs_region\">Regions and Endpoints</a> </p> </li> </ul> </li> </ul>
 *
 * The version of the OpenAPI document: 2012-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISendMessageBatchResultEntryList_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISendMessageBatchResultEntryList_inner::OAISendMessageBatchResultEntryList_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISendMessageBatchResultEntryList_inner::OAISendMessageBatchResultEntryList_inner() {
    this->initializeModel();
}

OAISendMessageBatchResultEntryList_inner::~OAISendMessageBatchResultEntryList_inner() {}

void OAISendMessageBatchResultEntryList_inner::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_message_id_isSet = false;
    m_message_id_isValid = false;

    m_md5_of_message_body_isSet = false;
    m_md5_of_message_body_isValid = false;

    m_md5_of_message_attributes_isSet = false;
    m_md5_of_message_attributes_isValid = false;

    m_md5_of_message_system_attributes_isSet = false;
    m_md5_of_message_system_attributes_isValid = false;

    m_sequence_number_isSet = false;
    m_sequence_number_isValid = false;
}

void OAISendMessageBatchResultEntryList_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISendMessageBatchResultEntryList_inner::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_message_id_isValid = ::OpenAPI::fromJsonValue(m_message_id, json[QString("MessageId")]);
    m_message_id_isSet = !json[QString("MessageId")].isNull() && m_message_id_isValid;

    m_md5_of_message_body_isValid = ::OpenAPI::fromJsonValue(m_md5_of_message_body, json[QString("MD5OfMessageBody")]);
    m_md5_of_message_body_isSet = !json[QString("MD5OfMessageBody")].isNull() && m_md5_of_message_body_isValid;

    m_md5_of_message_attributes_isValid = ::OpenAPI::fromJsonValue(m_md5_of_message_attributes, json[QString("MD5OfMessageAttributes")]);
    m_md5_of_message_attributes_isSet = !json[QString("MD5OfMessageAttributes")].isNull() && m_md5_of_message_attributes_isValid;

    m_md5_of_message_system_attributes_isValid = ::OpenAPI::fromJsonValue(m_md5_of_message_system_attributes, json[QString("MD5OfMessageSystemAttributes")]);
    m_md5_of_message_system_attributes_isSet = !json[QString("MD5OfMessageSystemAttributes")].isNull() && m_md5_of_message_system_attributes_isValid;

    m_sequence_number_isValid = ::OpenAPI::fromJsonValue(m_sequence_number, json[QString("SequenceNumber")]);
    m_sequence_number_isSet = !json[QString("SequenceNumber")].isNull() && m_sequence_number_isValid;
}

QString OAISendMessageBatchResultEntryList_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISendMessageBatchResultEntryList_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_message_id_isSet) {
        obj.insert(QString("MessageId"), ::OpenAPI::toJsonValue(m_message_id));
    }
    if (m_md5_of_message_body_isSet) {
        obj.insert(QString("MD5OfMessageBody"), ::OpenAPI::toJsonValue(m_md5_of_message_body));
    }
    if (m_md5_of_message_attributes_isSet) {
        obj.insert(QString("MD5OfMessageAttributes"), ::OpenAPI::toJsonValue(m_md5_of_message_attributes));
    }
    if (m_md5_of_message_system_attributes_isSet) {
        obj.insert(QString("MD5OfMessageSystemAttributes"), ::OpenAPI::toJsonValue(m_md5_of_message_system_attributes));
    }
    if (m_sequence_number_isSet) {
        obj.insert(QString("SequenceNumber"), ::OpenAPI::toJsonValue(m_sequence_number));
    }
    return obj;
}

QString OAISendMessageBatchResultEntryList_inner::getId() const {
    return m_id;
}
void OAISendMessageBatchResultEntryList_inner::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAISendMessageBatchResultEntryList_inner::is_id_Set() const{
    return m_id_isSet;
}

bool OAISendMessageBatchResultEntryList_inner::is_id_Valid() const{
    return m_id_isValid;
}

QString OAISendMessageBatchResultEntryList_inner::getMessageId() const {
    return m_message_id;
}
void OAISendMessageBatchResultEntryList_inner::setMessageId(const QString &message_id) {
    m_message_id = message_id;
    m_message_id_isSet = true;
}

bool OAISendMessageBatchResultEntryList_inner::is_message_id_Set() const{
    return m_message_id_isSet;
}

bool OAISendMessageBatchResultEntryList_inner::is_message_id_Valid() const{
    return m_message_id_isValid;
}

QString OAISendMessageBatchResultEntryList_inner::getMd5OfMessageBody() const {
    return m_md5_of_message_body;
}
void OAISendMessageBatchResultEntryList_inner::setMd5OfMessageBody(const QString &md5_of_message_body) {
    m_md5_of_message_body = md5_of_message_body;
    m_md5_of_message_body_isSet = true;
}

bool OAISendMessageBatchResultEntryList_inner::is_md5_of_message_body_Set() const{
    return m_md5_of_message_body_isSet;
}

bool OAISendMessageBatchResultEntryList_inner::is_md5_of_message_body_Valid() const{
    return m_md5_of_message_body_isValid;
}

QString OAISendMessageBatchResultEntryList_inner::getMd5OfMessageAttributes() const {
    return m_md5_of_message_attributes;
}
void OAISendMessageBatchResultEntryList_inner::setMd5OfMessageAttributes(const QString &md5_of_message_attributes) {
    m_md5_of_message_attributes = md5_of_message_attributes;
    m_md5_of_message_attributes_isSet = true;
}

bool OAISendMessageBatchResultEntryList_inner::is_md5_of_message_attributes_Set() const{
    return m_md5_of_message_attributes_isSet;
}

bool OAISendMessageBatchResultEntryList_inner::is_md5_of_message_attributes_Valid() const{
    return m_md5_of_message_attributes_isValid;
}

QString OAISendMessageBatchResultEntryList_inner::getMd5OfMessageSystemAttributes() const {
    return m_md5_of_message_system_attributes;
}
void OAISendMessageBatchResultEntryList_inner::setMd5OfMessageSystemAttributes(const QString &md5_of_message_system_attributes) {
    m_md5_of_message_system_attributes = md5_of_message_system_attributes;
    m_md5_of_message_system_attributes_isSet = true;
}

bool OAISendMessageBatchResultEntryList_inner::is_md5_of_message_system_attributes_Set() const{
    return m_md5_of_message_system_attributes_isSet;
}

bool OAISendMessageBatchResultEntryList_inner::is_md5_of_message_system_attributes_Valid() const{
    return m_md5_of_message_system_attributes_isValid;
}

QString OAISendMessageBatchResultEntryList_inner::getSequenceNumber() const {
    return m_sequence_number;
}
void OAISendMessageBatchResultEntryList_inner::setSequenceNumber(const QString &sequence_number) {
    m_sequence_number = sequence_number;
    m_sequence_number_isSet = true;
}

bool OAISendMessageBatchResultEntryList_inner::is_sequence_number_Set() const{
    return m_sequence_number_isSet;
}

bool OAISendMessageBatchResultEntryList_inner::is_sequence_number_Valid() const{
    return m_sequence_number_isValid;
}

bool OAISendMessageBatchResultEntryList_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_md5_of_message_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_md5_of_message_attributes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_md5_of_message_system_attributes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sequence_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISendMessageBatchResultEntryList_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_message_id_isValid && m_md5_of_message_body_isValid && true;
}

} // namespace OpenAPI
