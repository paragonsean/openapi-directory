# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Graph(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, created_time: datetime=None):
        """Graph - a model defined in OpenAPI

        :param arn: The arn of this Graph.
        :param created_time: The created_time of this Graph.
        """
        self.openapi_types = {
            'arn': str,
            'created_time': datetime
        }

        self.attribute_map = {
            'arn': 'Arn',
            'created_time': 'CreatedTime'
        }

        self._arn = arn
        self._created_time = created_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Graph':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Graph of this Graph.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this Graph.


        :return: The arn of this Graph.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this Graph.


        :param arn: The arn of this Graph.
        :type arn: str
        """

        self._arn = arn

    @property
    def created_time(self):
        """Gets the created_time of this Graph.


        :return: The created_time of this Graph.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this Graph.


        :param created_time: The created_time of this Graph.
        :type created_time: datetime
        """

        self._created_time = created_time
