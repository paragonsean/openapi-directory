# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimestampForCollection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, timestamp: datetime=None):
        """TimestampForCollection - a model defined in OpenAPI

        :param timestamp: The timestamp of this TimestampForCollection.
        """
        self.openapi_types = {
            'timestamp': datetime
        }

        self.attribute_map = {
            'timestamp': 'Timestamp'
        }

        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimestampForCollection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimestampForCollection of this TimestampForCollection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def timestamp(self):
        """Gets the timestamp of this TimestampForCollection.


        :return: The timestamp of this TimestampForCollection.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this TimestampForCollection.


        :param timestamp: The timestamp of this TimestampForCollection.
        :type timestamp: datetime
        """

        self._timestamp = timestamp
