# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DatasourcePackageUsageInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, volume_usage_in_bytes: int=None, volume_usage_update_time: datetime=None):
        """DatasourcePackageUsageInfo - a model defined in OpenAPI

        :param volume_usage_in_bytes: The volume_usage_in_bytes of this DatasourcePackageUsageInfo.
        :param volume_usage_update_time: The volume_usage_update_time of this DatasourcePackageUsageInfo.
        """
        self.openapi_types = {
            'volume_usage_in_bytes': int,
            'volume_usage_update_time': datetime
        }

        self.attribute_map = {
            'volume_usage_in_bytes': 'VolumeUsageInBytes',
            'volume_usage_update_time': 'VolumeUsageUpdateTime'
        }

        self._volume_usage_in_bytes = volume_usage_in_bytes
        self._volume_usage_update_time = volume_usage_update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DatasourcePackageUsageInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DatasourcePackageUsageInfo of this DatasourcePackageUsageInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def volume_usage_in_bytes(self):
        """Gets the volume_usage_in_bytes of this DatasourcePackageUsageInfo.


        :return: The volume_usage_in_bytes of this DatasourcePackageUsageInfo.
        :rtype: int
        """
        return self._volume_usage_in_bytes

    @volume_usage_in_bytes.setter
    def volume_usage_in_bytes(self, volume_usage_in_bytes):
        """Sets the volume_usage_in_bytes of this DatasourcePackageUsageInfo.


        :param volume_usage_in_bytes: The volume_usage_in_bytes of this DatasourcePackageUsageInfo.
        :type volume_usage_in_bytes: int
        """

        self._volume_usage_in_bytes = volume_usage_in_bytes

    @property
    def volume_usage_update_time(self):
        """Gets the volume_usage_update_time of this DatasourcePackageUsageInfo.


        :return: The volume_usage_update_time of this DatasourcePackageUsageInfo.
        :rtype: datetime
        """
        return self._volume_usage_update_time

    @volume_usage_update_time.setter
    def volume_usage_update_time(self, volume_usage_update_time):
        """Sets the volume_usage_update_time of this DatasourcePackageUsageInfo.


        :param volume_usage_update_time: The volume_usage_update_time of this DatasourcePackageUsageInfo.
        :type volume_usage_update_time: datetime
        """

        self._volume_usage_update_time = volume_usage_update_time
