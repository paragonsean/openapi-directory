/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribePackageVersionResponse.h
 *
 * 
 */

#ifndef OAIDescribePackageVersionResponse_H
#define OAIDescribePackageVersionResponse_H

#include <QJsonObject>

#include "OAIPackageVersionStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribePackageVersionResponse : public OAIObject {
public:
    OAIDescribePackageVersionResponse();
    OAIDescribePackageVersionResponse(QString json);
    ~OAIDescribePackageVersionResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getIsLatestPatch() const;
    void setIsLatestPatch(const bool &is_latest_patch);
    bool is_is_latest_patch_Set() const;
    bool is_is_latest_patch_Valid() const;

    QString getOwnerAccount() const;
    void setOwnerAccount(const QString &owner_account);
    bool is_owner_account_Set() const;
    bool is_owner_account_Valid() const;

    QString getPackageArn() const;
    void setPackageArn(const QString &package_arn);
    bool is_package_arn_Set() const;
    bool is_package_arn_Valid() const;

    QString getPackageId() const;
    void setPackageId(const QString &package_id);
    bool is_package_id_Set() const;
    bool is_package_id_Valid() const;

    QString getPackageName() const;
    void setPackageName(const QString &package_name);
    bool is_package_name_Set() const;
    bool is_package_name_Valid() const;

    QString getPackageVersion() const;
    void setPackageVersion(const QString &package_version);
    bool is_package_version_Set() const;
    bool is_package_version_Valid() const;

    QString getPatchVersion() const;
    void setPatchVersion(const QString &patch_version);
    bool is_patch_version_Set() const;
    bool is_patch_version_Valid() const;

    QDateTime getRegisteredTime() const;
    void setRegisteredTime(const QDateTime &registered_time);
    bool is_registered_time_Set() const;
    bool is_registered_time_Valid() const;

    OAIPackageVersionStatus getStatus() const;
    void setStatus(const OAIPackageVersionStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusDescription() const;
    void setStatusDescription(const QString &status_description);
    bool is_status_description_Set() const;
    bool is_status_description_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_latest_patch;
    bool m_is_latest_patch_isSet;
    bool m_is_latest_patch_isValid;

    QString m_owner_account;
    bool m_owner_account_isSet;
    bool m_owner_account_isValid;

    QString m_package_arn;
    bool m_package_arn_isSet;
    bool m_package_arn_isValid;

    QString m_package_id;
    bool m_package_id_isSet;
    bool m_package_id_isValid;

    QString m_package_name;
    bool m_package_name_isSet;
    bool m_package_name_isValid;

    QString m_package_version;
    bool m_package_version_isSet;
    bool m_package_version_isValid;

    QString m_patch_version;
    bool m_patch_version_isSet;
    bool m_patch_version_isValid;

    QDateTime m_registered_time;
    bool m_registered_time_isSet;
    bool m_registered_time_isValid;

    OAIPackageVersionStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_description;
    bool m_status_description_isSet;
    bool m_status_description_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribePackageVersionResponse)

#endif // OAIDescribePackageVersionResponse_H
