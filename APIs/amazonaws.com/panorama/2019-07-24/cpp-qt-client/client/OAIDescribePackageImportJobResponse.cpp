/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribePackageImportJobResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribePackageImportJobResponse::OAIDescribePackageImportJobResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribePackageImportJobResponse::OAIDescribePackageImportJobResponse() {
    this->initializeModel();
}

OAIDescribePackageImportJobResponse::~OAIDescribePackageImportJobResponse() {}

void OAIDescribePackageImportJobResponse::initializeModel() {

    m_client_token_isSet = false;
    m_client_token_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_input_config_isSet = false;
    m_input_config_isValid = false;

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_job_tags_isSet = false;
    m_job_tags_isValid = false;

    m_job_type_isSet = false;
    m_job_type_isValid = false;

    m_last_updated_time_isSet = false;
    m_last_updated_time_isValid = false;

    m_output_isSet = false;
    m_output_isValid = false;

    m_output_config_isSet = false;
    m_output_config_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_status_message_isSet = false;
    m_status_message_isValid = false;
}

void OAIDescribePackageImportJobResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribePackageImportJobResponse::fromJsonObject(QJsonObject json) {

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("ClientToken")]);
    m_client_token_isSet = !json[QString("ClientToken")].isNull() && m_client_token_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("CreatedTime")]);
    m_created_time_isSet = !json[QString("CreatedTime")].isNull() && m_created_time_isValid;

    m_input_config_isValid = ::OpenAPI::fromJsonValue(m_input_config, json[QString("InputConfig")]);
    m_input_config_isSet = !json[QString("InputConfig")].isNull() && m_input_config_isValid;

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("JobId")]);
    m_job_id_isSet = !json[QString("JobId")].isNull() && m_job_id_isValid;

    m_job_tags_isValid = ::OpenAPI::fromJsonValue(m_job_tags, json[QString("JobTags")]);
    m_job_tags_isSet = !json[QString("JobTags")].isNull() && m_job_tags_isValid;

    m_job_type_isValid = ::OpenAPI::fromJsonValue(m_job_type, json[QString("JobType")]);
    m_job_type_isSet = !json[QString("JobType")].isNull() && m_job_type_isValid;

    m_last_updated_time_isValid = ::OpenAPI::fromJsonValue(m_last_updated_time, json[QString("LastUpdatedTime")]);
    m_last_updated_time_isSet = !json[QString("LastUpdatedTime")].isNull() && m_last_updated_time_isValid;

    m_output_isValid = ::OpenAPI::fromJsonValue(m_output, json[QString("Output")]);
    m_output_isSet = !json[QString("Output")].isNull() && m_output_isValid;

    m_output_config_isValid = ::OpenAPI::fromJsonValue(m_output_config, json[QString("OutputConfig")]);
    m_output_config_isSet = !json[QString("OutputConfig")].isNull() && m_output_config_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_status_message_isValid = ::OpenAPI::fromJsonValue(m_status_message, json[QString("StatusMessage")]);
    m_status_message_isSet = !json[QString("StatusMessage")].isNull() && m_status_message_isValid;
}

QString OAIDescribePackageImportJobResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribePackageImportJobResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_client_token_isSet) {
        obj.insert(QString("ClientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("CreatedTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_input_config.isSet()) {
        obj.insert(QString("InputConfig"), ::OpenAPI::toJsonValue(m_input_config));
    }
    if (m_job_id_isSet) {
        obj.insert(QString("JobId"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_job_tags.isSet()) {
        obj.insert(QString("JobTags"), ::OpenAPI::toJsonValue(m_job_tags));
    }
    if (m_job_type.isSet()) {
        obj.insert(QString("JobType"), ::OpenAPI::toJsonValue(m_job_type));
    }
    if (m_last_updated_time_isSet) {
        obj.insert(QString("LastUpdatedTime"), ::OpenAPI::toJsonValue(m_last_updated_time));
    }
    if (m_output.isSet()) {
        obj.insert(QString("Output"), ::OpenAPI::toJsonValue(m_output));
    }
    if (m_output_config.isSet()) {
        obj.insert(QString("OutputConfig"), ::OpenAPI::toJsonValue(m_output_config));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_status_message_isSet) {
        obj.insert(QString("StatusMessage"), ::OpenAPI::toJsonValue(m_status_message));
    }
    return obj;
}

QString OAIDescribePackageImportJobResponse::getClientToken() const {
    return m_client_token;
}
void OAIDescribePackageImportJobResponse::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAIDescribePackageImportJobResponse::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAIDescribePackageImportJobResponse::is_client_token_Valid() const{
    return m_client_token_isValid;
}

QDateTime OAIDescribePackageImportJobResponse::getCreatedTime() const {
    return m_created_time;
}
void OAIDescribePackageImportJobResponse::setCreatedTime(const QDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIDescribePackageImportJobResponse::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIDescribePackageImportJobResponse::is_created_time_Valid() const{
    return m_created_time_isValid;
}

OAIDescribePackageImportJobResponse_InputConfig OAIDescribePackageImportJobResponse::getInputConfig() const {
    return m_input_config;
}
void OAIDescribePackageImportJobResponse::setInputConfig(const OAIDescribePackageImportJobResponse_InputConfig &input_config) {
    m_input_config = input_config;
    m_input_config_isSet = true;
}

bool OAIDescribePackageImportJobResponse::is_input_config_Set() const{
    return m_input_config_isSet;
}

bool OAIDescribePackageImportJobResponse::is_input_config_Valid() const{
    return m_input_config_isValid;
}

QString OAIDescribePackageImportJobResponse::getJobId() const {
    return m_job_id;
}
void OAIDescribePackageImportJobResponse::setJobId(const QString &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIDescribePackageImportJobResponse::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIDescribePackageImportJobResponse::is_job_id_Valid() const{
    return m_job_id_isValid;
}

QList OAIDescribePackageImportJobResponse::getJobTags() const {
    return m_job_tags;
}
void OAIDescribePackageImportJobResponse::setJobTags(const QList &job_tags) {
    m_job_tags = job_tags;
    m_job_tags_isSet = true;
}

bool OAIDescribePackageImportJobResponse::is_job_tags_Set() const{
    return m_job_tags_isSet;
}

bool OAIDescribePackageImportJobResponse::is_job_tags_Valid() const{
    return m_job_tags_isValid;
}

OAIPackageImportJobType OAIDescribePackageImportJobResponse::getJobType() const {
    return m_job_type;
}
void OAIDescribePackageImportJobResponse::setJobType(const OAIPackageImportJobType &job_type) {
    m_job_type = job_type;
    m_job_type_isSet = true;
}

bool OAIDescribePackageImportJobResponse::is_job_type_Set() const{
    return m_job_type_isSet;
}

bool OAIDescribePackageImportJobResponse::is_job_type_Valid() const{
    return m_job_type_isValid;
}

QDateTime OAIDescribePackageImportJobResponse::getLastUpdatedTime() const {
    return m_last_updated_time;
}
void OAIDescribePackageImportJobResponse::setLastUpdatedTime(const QDateTime &last_updated_time) {
    m_last_updated_time = last_updated_time;
    m_last_updated_time_isSet = true;
}

bool OAIDescribePackageImportJobResponse::is_last_updated_time_Set() const{
    return m_last_updated_time_isSet;
}

bool OAIDescribePackageImportJobResponse::is_last_updated_time_Valid() const{
    return m_last_updated_time_isValid;
}

OAIDescribePackageImportJobResponse_Output OAIDescribePackageImportJobResponse::getOutput() const {
    return m_output;
}
void OAIDescribePackageImportJobResponse::setOutput(const OAIDescribePackageImportJobResponse_Output &output) {
    m_output = output;
    m_output_isSet = true;
}

bool OAIDescribePackageImportJobResponse::is_output_Set() const{
    return m_output_isSet;
}

bool OAIDescribePackageImportJobResponse::is_output_Valid() const{
    return m_output_isValid;
}

OAIDescribePackageImportJobResponse_OutputConfig OAIDescribePackageImportJobResponse::getOutputConfig() const {
    return m_output_config;
}
void OAIDescribePackageImportJobResponse::setOutputConfig(const OAIDescribePackageImportJobResponse_OutputConfig &output_config) {
    m_output_config = output_config;
    m_output_config_isSet = true;
}

bool OAIDescribePackageImportJobResponse::is_output_config_Set() const{
    return m_output_config_isSet;
}

bool OAIDescribePackageImportJobResponse::is_output_config_Valid() const{
    return m_output_config_isValid;
}

OAIPackageImportJobStatus OAIDescribePackageImportJobResponse::getStatus() const {
    return m_status;
}
void OAIDescribePackageImportJobResponse::setStatus(const OAIPackageImportJobStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDescribePackageImportJobResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDescribePackageImportJobResponse::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIDescribePackageImportJobResponse::getStatusMessage() const {
    return m_status_message;
}
void OAIDescribePackageImportJobResponse::setStatusMessage(const QString &status_message) {
    m_status_message = status_message;
    m_status_message_isSet = true;
}

bool OAIDescribePackageImportJobResponse::is_status_message_Set() const{
    return m_status_message_isSet;
}

bool OAIDescribePackageImportJobResponse::is_status_message_Valid() const{
    return m_status_message_isValid;
}

bool OAIDescribePackageImportJobResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribePackageImportJobResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_created_time_isValid && m_input_config_isValid && m_job_id_isValid && m_job_type_isValid && m_last_updated_time_isValid && m_output_isValid && m_output_config_isValid && m_status_isValid && m_status_message_isValid && true;
}

} // namespace OpenAPI
