/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeNodeResponse.h
 *
 * 
 */

#ifndef OAIDescribeNodeResponse_H
#define OAIDescribeNodeResponse_H

#include <QJsonObject>

#include "OAIDescribeNodeResponse_NodeInterface.h"
#include "OAINodeCategory.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeNodeResponse_NodeInterface;

class OAIDescribeNodeResponse : public OAIObject {
public:
    OAIDescribeNodeResponse();
    OAIDescribeNodeResponse(QString json);
    ~OAIDescribeNodeResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssetName() const;
    void setAssetName(const QString &asset_name);
    bool is_asset_name_Set() const;
    bool is_asset_name_Valid() const;

    OAINodeCategory getCategory() const;
    void setCategory(const OAINodeCategory &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QDateTime getCreatedTime() const;
    void setCreatedTime(const QDateTime &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    OAIDescribeNodeResponse_NodeInterface getNodeInterface() const;
    void setNodeInterface(const OAIDescribeNodeResponse_NodeInterface &node_interface);
    bool is_node_interface_Set() const;
    bool is_node_interface_Valid() const;

    QString getOwnerAccount() const;
    void setOwnerAccount(const QString &owner_account);
    bool is_owner_account_Set() const;
    bool is_owner_account_Valid() const;

    QString getPackageArn() const;
    void setPackageArn(const QString &package_arn);
    bool is_package_arn_Set() const;
    bool is_package_arn_Valid() const;

    QString getPackageId() const;
    void setPackageId(const QString &package_id);
    bool is_package_id_Set() const;
    bool is_package_id_Valid() const;

    QString getPackageName() const;
    void setPackageName(const QString &package_name);
    bool is_package_name_Set() const;
    bool is_package_name_Valid() const;

    QString getPackageVersion() const;
    void setPackageVersion(const QString &package_version);
    bool is_package_version_Set() const;
    bool is_package_version_Valid() const;

    QString getPatchVersion() const;
    void setPatchVersion(const QString &patch_version);
    bool is_patch_version_Set() const;
    bool is_patch_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_asset_name;
    bool m_asset_name_isSet;
    bool m_asset_name_isValid;

    OAINodeCategory m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QDateTime m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    OAIDescribeNodeResponse_NodeInterface m_node_interface;
    bool m_node_interface_isSet;
    bool m_node_interface_isValid;

    QString m_owner_account;
    bool m_owner_account_isSet;
    bool m_owner_account_isValid;

    QString m_package_arn;
    bool m_package_arn_isSet;
    bool m_package_arn_isValid;

    QString m_package_id;
    bool m_package_id_isSet;
    bool m_package_id_isValid;

    QString m_package_name;
    bool m_package_name_isSet;
    bool m_package_name_isValid;

    QString m_package_version;
    bool m_package_version_isSet;
    bool m_package_version_isValid;

    QString m_patch_version;
    bool m_patch_version_isSet;
    bool m_patch_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeNodeResponse)

#endif // OAIDescribeNodeResponse_H
