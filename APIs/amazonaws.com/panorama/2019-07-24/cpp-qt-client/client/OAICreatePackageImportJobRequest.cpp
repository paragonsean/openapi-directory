/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreatePackageImportJobRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreatePackageImportJobRequest::OAICreatePackageImportJobRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreatePackageImportJobRequest::OAICreatePackageImportJobRequest() {
    this->initializeModel();
}

OAICreatePackageImportJobRequest::~OAICreatePackageImportJobRequest() {}

void OAICreatePackageImportJobRequest::initializeModel() {

    m_client_token_isSet = false;
    m_client_token_isValid = false;

    m_input_config_isSet = false;
    m_input_config_isValid = false;

    m_job_tags_isSet = false;
    m_job_tags_isValid = false;

    m_job_type_isSet = false;
    m_job_type_isValid = false;

    m_output_config_isSet = false;
    m_output_config_isValid = false;
}

void OAICreatePackageImportJobRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreatePackageImportJobRequest::fromJsonObject(QJsonObject json) {

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("ClientToken")]);
    m_client_token_isSet = !json[QString("ClientToken")].isNull() && m_client_token_isValid;

    m_input_config_isValid = ::OpenAPI::fromJsonValue(m_input_config, json[QString("InputConfig")]);
    m_input_config_isSet = !json[QString("InputConfig")].isNull() && m_input_config_isValid;

    m_job_tags_isValid = ::OpenAPI::fromJsonValue(m_job_tags, json[QString("JobTags")]);
    m_job_tags_isSet = !json[QString("JobTags")].isNull() && m_job_tags_isValid;

    m_job_type_isValid = ::OpenAPI::fromJsonValue(m_job_type, json[QString("JobType")]);
    m_job_type_isSet = !json[QString("JobType")].isNull() && m_job_type_isValid;

    m_output_config_isValid = ::OpenAPI::fromJsonValue(m_output_config, json[QString("OutputConfig")]);
    m_output_config_isSet = !json[QString("OutputConfig")].isNull() && m_output_config_isValid;
}

QString OAICreatePackageImportJobRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreatePackageImportJobRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_client_token_isSet) {
        obj.insert(QString("ClientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    if (m_input_config.isSet()) {
        obj.insert(QString("InputConfig"), ::OpenAPI::toJsonValue(m_input_config));
    }
    if (m_job_tags.isSet()) {
        obj.insert(QString("JobTags"), ::OpenAPI::toJsonValue(m_job_tags));
    }
    if (m_job_type.isSet()) {
        obj.insert(QString("JobType"), ::OpenAPI::toJsonValue(m_job_type));
    }
    if (m_output_config.isSet()) {
        obj.insert(QString("OutputConfig"), ::OpenAPI::toJsonValue(m_output_config));
    }
    return obj;
}

QString OAICreatePackageImportJobRequest::getClientToken() const {
    return m_client_token;
}
void OAICreatePackageImportJobRequest::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAICreatePackageImportJobRequest::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAICreatePackageImportJobRequest::is_client_token_Valid() const{
    return m_client_token_isValid;
}

OAICreatePackageImportJobRequest_InputConfig OAICreatePackageImportJobRequest::getInputConfig() const {
    return m_input_config;
}
void OAICreatePackageImportJobRequest::setInputConfig(const OAICreatePackageImportJobRequest_InputConfig &input_config) {
    m_input_config = input_config;
    m_input_config_isSet = true;
}

bool OAICreatePackageImportJobRequest::is_input_config_Set() const{
    return m_input_config_isSet;
}

bool OAICreatePackageImportJobRequest::is_input_config_Valid() const{
    return m_input_config_isValid;
}

QList OAICreatePackageImportJobRequest::getJobTags() const {
    return m_job_tags;
}
void OAICreatePackageImportJobRequest::setJobTags(const QList &job_tags) {
    m_job_tags = job_tags;
    m_job_tags_isSet = true;
}

bool OAICreatePackageImportJobRequest::is_job_tags_Set() const{
    return m_job_tags_isSet;
}

bool OAICreatePackageImportJobRequest::is_job_tags_Valid() const{
    return m_job_tags_isValid;
}

OAIPackageImportJobType OAICreatePackageImportJobRequest::getJobType() const {
    return m_job_type;
}
void OAICreatePackageImportJobRequest::setJobType(const OAIPackageImportJobType &job_type) {
    m_job_type = job_type;
    m_job_type_isSet = true;
}

bool OAICreatePackageImportJobRequest::is_job_type_Set() const{
    return m_job_type_isSet;
}

bool OAICreatePackageImportJobRequest::is_job_type_Valid() const{
    return m_job_type_isValid;
}

OAICreatePackageImportJobRequest_OutputConfig OAICreatePackageImportJobRequest::getOutputConfig() const {
    return m_output_config;
}
void OAICreatePackageImportJobRequest::setOutputConfig(const OAICreatePackageImportJobRequest_OutputConfig &output_config) {
    m_output_config = output_config;
    m_output_config_isSet = true;
}

bool OAICreatePackageImportJobRequest::is_output_config_Set() const{
    return m_output_config_isSet;
}

bool OAICreatePackageImportJobRequest::is_output_config_Valid() const{
    return m_output_config_isValid;
}

bool OAICreatePackageImportJobRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreatePackageImportJobRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_client_token_isValid && m_input_config_isValid && m_job_type_isValid && m_output_config_isValid && true;
}

} // namespace OpenAPI
