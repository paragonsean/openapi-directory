/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig() {
    this->initializeModel();
}

OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::~OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig() {}

void OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::initializeModel() {

    m_allow_major_version_update_isSet = false;
    m_allow_major_version_update_isValid = false;

    m_image_version_isSet = false;
    m_image_version_isValid = false;
}

void OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::fromJsonObject(QJsonObject json) {

    m_allow_major_version_update_isValid = ::OpenAPI::fromJsonValue(m_allow_major_version_update, json[QString("AllowMajorVersionUpdate")]);
    m_allow_major_version_update_isSet = !json[QString("AllowMajorVersionUpdate")].isNull() && m_allow_major_version_update_isValid;

    m_image_version_isValid = ::OpenAPI::fromJsonValue(m_image_version, json[QString("ImageVersion")]);
    m_image_version_isSet = !json[QString("ImageVersion")].isNull() && m_image_version_isValid;
}

QString OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_major_version_update_isSet) {
        obj.insert(QString("AllowMajorVersionUpdate"), ::OpenAPI::toJsonValue(m_allow_major_version_update));
    }
    if (m_image_version_isSet) {
        obj.insert(QString("ImageVersion"), ::OpenAPI::toJsonValue(m_image_version));
    }
    return obj;
}

bool OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::getAllowMajorVersionUpdate() const {
    return m_allow_major_version_update;
}
void OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::setAllowMajorVersionUpdate(const bool &allow_major_version_update) {
    m_allow_major_version_update = allow_major_version_update;
    m_allow_major_version_update_isSet = true;
}

bool OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::is_allow_major_version_update_Set() const{
    return m_allow_major_version_update_isSet;
}

bool OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::is_allow_major_version_update_Valid() const{
    return m_allow_major_version_update_isValid;
}

QString OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::getImageVersion() const {
    return m_image_version;
}
void OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::setImageVersion(const QString &image_version) {
    m_image_version = image_version;
    m_image_version_isSet = true;
}

bool OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::is_image_version_Set() const{
    return m_image_version_isSet;
}

bool OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::is_image_version_Valid() const{
    return m_image_version_isValid;
}

bool OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_major_version_update_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateJobForDevices_request_DeviceJobConfig_OTAJobConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_image_version_isValid && true;
}

} // namespace OpenAPI
