/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreatePackageResponse_StorageLocation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreatePackageResponse_StorageLocation::OAICreatePackageResponse_StorageLocation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreatePackageResponse_StorageLocation::OAICreatePackageResponse_StorageLocation() {
    this->initializeModel();
}

OAICreatePackageResponse_StorageLocation::~OAICreatePackageResponse_StorageLocation() {}

void OAICreatePackageResponse_StorageLocation::initializeModel() {

    m_binary_prefix_location_isSet = false;
    m_binary_prefix_location_isValid = false;

    m_bucket_isSet = false;
    m_bucket_isValid = false;

    m_generated_prefix_location_isSet = false;
    m_generated_prefix_location_isValid = false;

    m_manifest_prefix_location_isSet = false;
    m_manifest_prefix_location_isValid = false;

    m_repo_prefix_location_isSet = false;
    m_repo_prefix_location_isValid = false;
}

void OAICreatePackageResponse_StorageLocation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreatePackageResponse_StorageLocation::fromJsonObject(QJsonObject json) {

    m_binary_prefix_location_isValid = ::OpenAPI::fromJsonValue(m_binary_prefix_location, json[QString("BinaryPrefixLocation")]);
    m_binary_prefix_location_isSet = !json[QString("BinaryPrefixLocation")].isNull() && m_binary_prefix_location_isValid;

    m_bucket_isValid = ::OpenAPI::fromJsonValue(m_bucket, json[QString("Bucket")]);
    m_bucket_isSet = !json[QString("Bucket")].isNull() && m_bucket_isValid;

    m_generated_prefix_location_isValid = ::OpenAPI::fromJsonValue(m_generated_prefix_location, json[QString("GeneratedPrefixLocation")]);
    m_generated_prefix_location_isSet = !json[QString("GeneratedPrefixLocation")].isNull() && m_generated_prefix_location_isValid;

    m_manifest_prefix_location_isValid = ::OpenAPI::fromJsonValue(m_manifest_prefix_location, json[QString("ManifestPrefixLocation")]);
    m_manifest_prefix_location_isSet = !json[QString("ManifestPrefixLocation")].isNull() && m_manifest_prefix_location_isValid;

    m_repo_prefix_location_isValid = ::OpenAPI::fromJsonValue(m_repo_prefix_location, json[QString("RepoPrefixLocation")]);
    m_repo_prefix_location_isSet = !json[QString("RepoPrefixLocation")].isNull() && m_repo_prefix_location_isValid;
}

QString OAICreatePackageResponse_StorageLocation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreatePackageResponse_StorageLocation::asJsonObject() const {
    QJsonObject obj;
    if (m_binary_prefix_location_isSet) {
        obj.insert(QString("BinaryPrefixLocation"), ::OpenAPI::toJsonValue(m_binary_prefix_location));
    }
    if (m_bucket_isSet) {
        obj.insert(QString("Bucket"), ::OpenAPI::toJsonValue(m_bucket));
    }
    if (m_generated_prefix_location_isSet) {
        obj.insert(QString("GeneratedPrefixLocation"), ::OpenAPI::toJsonValue(m_generated_prefix_location));
    }
    if (m_manifest_prefix_location_isSet) {
        obj.insert(QString("ManifestPrefixLocation"), ::OpenAPI::toJsonValue(m_manifest_prefix_location));
    }
    if (m_repo_prefix_location_isSet) {
        obj.insert(QString("RepoPrefixLocation"), ::OpenAPI::toJsonValue(m_repo_prefix_location));
    }
    return obj;
}

QString OAICreatePackageResponse_StorageLocation::getBinaryPrefixLocation() const {
    return m_binary_prefix_location;
}
void OAICreatePackageResponse_StorageLocation::setBinaryPrefixLocation(const QString &binary_prefix_location) {
    m_binary_prefix_location = binary_prefix_location;
    m_binary_prefix_location_isSet = true;
}

bool OAICreatePackageResponse_StorageLocation::is_binary_prefix_location_Set() const{
    return m_binary_prefix_location_isSet;
}

bool OAICreatePackageResponse_StorageLocation::is_binary_prefix_location_Valid() const{
    return m_binary_prefix_location_isValid;
}

QString OAICreatePackageResponse_StorageLocation::getBucket() const {
    return m_bucket;
}
void OAICreatePackageResponse_StorageLocation::setBucket(const QString &bucket) {
    m_bucket = bucket;
    m_bucket_isSet = true;
}

bool OAICreatePackageResponse_StorageLocation::is_bucket_Set() const{
    return m_bucket_isSet;
}

bool OAICreatePackageResponse_StorageLocation::is_bucket_Valid() const{
    return m_bucket_isValid;
}

QString OAICreatePackageResponse_StorageLocation::getGeneratedPrefixLocation() const {
    return m_generated_prefix_location;
}
void OAICreatePackageResponse_StorageLocation::setGeneratedPrefixLocation(const QString &generated_prefix_location) {
    m_generated_prefix_location = generated_prefix_location;
    m_generated_prefix_location_isSet = true;
}

bool OAICreatePackageResponse_StorageLocation::is_generated_prefix_location_Set() const{
    return m_generated_prefix_location_isSet;
}

bool OAICreatePackageResponse_StorageLocation::is_generated_prefix_location_Valid() const{
    return m_generated_prefix_location_isValid;
}

QString OAICreatePackageResponse_StorageLocation::getManifestPrefixLocation() const {
    return m_manifest_prefix_location;
}
void OAICreatePackageResponse_StorageLocation::setManifestPrefixLocation(const QString &manifest_prefix_location) {
    m_manifest_prefix_location = manifest_prefix_location;
    m_manifest_prefix_location_isSet = true;
}

bool OAICreatePackageResponse_StorageLocation::is_manifest_prefix_location_Set() const{
    return m_manifest_prefix_location_isSet;
}

bool OAICreatePackageResponse_StorageLocation::is_manifest_prefix_location_Valid() const{
    return m_manifest_prefix_location_isValid;
}

QString OAICreatePackageResponse_StorageLocation::getRepoPrefixLocation() const {
    return m_repo_prefix_location;
}
void OAICreatePackageResponse_StorageLocation::setRepoPrefixLocation(const QString &repo_prefix_location) {
    m_repo_prefix_location = repo_prefix_location;
    m_repo_prefix_location_isSet = true;
}

bool OAICreatePackageResponse_StorageLocation::is_repo_prefix_location_Set() const{
    return m_repo_prefix_location_isSet;
}

bool OAICreatePackageResponse_StorageLocation::is_repo_prefix_location_Valid() const{
    return m_repo_prefix_location_isValid;
}

bool OAICreatePackageResponse_StorageLocation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_binary_prefix_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bucket_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_generated_prefix_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manifest_prefix_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repo_prefix_location_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreatePackageResponse_StorageLocation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_binary_prefix_location_isValid && m_bucket_isValid && m_generated_prefix_location_isValid && m_manifest_prefix_location_isValid && m_repo_prefix_location_isValid && true;
}

} // namespace OpenAPI
