/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeviceType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeviceType::OAIDeviceType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeviceType::OAIDeviceType() {
    this->initializeModel();
}

OAIDeviceType::~OAIDeviceType() {}

void OAIDeviceType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDeviceType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDeviceType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PANORAMA_APPLIANCE_DEVELOPER_KIT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeviceType::APPLIANCE_DEVELOPER_KIT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PANORAMA_APPLIANCE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeviceType::APPLIANCE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDeviceType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDeviceType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDeviceType::APPLIANCE_DEVELOPER_KIT:
            val = "PANORAMA_APPLIANCE_DEVELOPER_KIT";
            break;
        case eOAIDeviceType::APPLIANCE:
            val = "PANORAMA_APPLIANCE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDeviceType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDeviceType::eOAIDeviceType OAIDeviceType::getValue() const {
    return m_value;
}

void OAIDeviceType::setValue(const OAIDeviceType::eOAIDeviceType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDeviceType::isSet() const {
    
    return m_value_isSet;
}

bool OAIDeviceType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
