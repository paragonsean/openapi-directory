/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProvisionDevice_request_NetworkingConfiguration_Ethernet0.h
 *
 * 
 */

#ifndef OAIProvisionDevice_request_NetworkingConfiguration_Ethernet0_H
#define OAIProvisionDevice_request_NetworkingConfiguration_Ethernet0_H

#include <QJsonObject>

#include "OAIConnectionType.h"
#include "OAIEthernetPayload_StaticIpConnectionInfo.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEthernetPayload_StaticIpConnectionInfo;

class OAIProvisionDevice_request_NetworkingConfiguration_Ethernet0 : public OAIObject {
public:
    OAIProvisionDevice_request_NetworkingConfiguration_Ethernet0();
    OAIProvisionDevice_request_NetworkingConfiguration_Ethernet0(QString json);
    ~OAIProvisionDevice_request_NetworkingConfiguration_Ethernet0() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConnectionType getConnectionType() const;
    void setConnectionType(const OAIConnectionType &connection_type);
    bool is_connection_type_Set() const;
    bool is_connection_type_Valid() const;

    OAIEthernetPayload_StaticIpConnectionInfo getStaticIpConnectionInfo() const;
    void setStaticIpConnectionInfo(const OAIEthernetPayload_StaticIpConnectionInfo &static_ip_connection_info);
    bool is_static_ip_connection_info_Set() const;
    bool is_static_ip_connection_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConnectionType m_connection_type;
    bool m_connection_type_isSet;
    bool m_connection_type_isValid;

    OAIEthernetPayload_StaticIpConnectionInfo m_static_ip_connection_info;
    bool m_static_ip_connection_info_isSet;
    bool m_static_ip_connection_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProvisionDevice_request_NetworkingConfiguration_Ethernet0)

#endif // OAIProvisionDevice_request_NetworkingConfiguration_Ethernet0_H
