/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeDeviceJobResponse.h
 *
 * 
 */

#ifndef OAIDescribeDeviceJobResponse_H
#define OAIDescribeDeviceJobResponse_H

#include <QJsonObject>

#include "OAIDeviceType.h"
#include "OAIJobType.h"
#include "OAIUpdateProgress.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeDeviceJobResponse : public OAIObject {
public:
    OAIDescribeDeviceJobResponse();
    OAIDescribeDeviceJobResponse(QString json);
    ~OAIDescribeDeviceJobResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedTime() const;
    void setCreatedTime(const QDateTime &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    QString getDeviceArn() const;
    void setDeviceArn(const QString &device_arn);
    bool is_device_arn_Set() const;
    bool is_device_arn_Valid() const;

    QString getDeviceId() const;
    void setDeviceId(const QString &device_id);
    bool is_device_id_Set() const;
    bool is_device_id_Valid() const;

    QString getDeviceName() const;
    void setDeviceName(const QString &device_name);
    bool is_device_name_Set() const;
    bool is_device_name_Valid() const;

    OAIDeviceType getDeviceType() const;
    void setDeviceType(const OAIDeviceType &device_type);
    bool is_device_type_Set() const;
    bool is_device_type_Valid() const;

    QString getImageVersion() const;
    void setImageVersion(const QString &image_version);
    bool is_image_version_Set() const;
    bool is_image_version_Valid() const;

    QString getJobId() const;
    void setJobId(const QString &job_id);
    bool is_job_id_Set() const;
    bool is_job_id_Valid() const;

    OAIJobType getJobType() const;
    void setJobType(const OAIJobType &job_type);
    bool is_job_type_Set() const;
    bool is_job_type_Valid() const;

    OAIUpdateProgress getStatus() const;
    void setStatus(const OAIUpdateProgress &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    QString m_device_arn;
    bool m_device_arn_isSet;
    bool m_device_arn_isValid;

    QString m_device_id;
    bool m_device_id_isSet;
    bool m_device_id_isValid;

    QString m_device_name;
    bool m_device_name_isSet;
    bool m_device_name_isValid;

    OAIDeviceType m_device_type;
    bool m_device_type_isSet;
    bool m_device_type_isValid;

    QString m_image_version;
    bool m_image_version_isSet;
    bool m_image_version_isValid;

    QString m_job_id;
    bool m_job_id_isSet;
    bool m_job_id_isValid;

    OAIJobType m_job_type;
    bool m_job_type_isSet;
    bool m_job_type_isValid;

    OAIUpdateProgress m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeDeviceJobResponse)

#endif // OAIDescribeDeviceJobResponse_H
