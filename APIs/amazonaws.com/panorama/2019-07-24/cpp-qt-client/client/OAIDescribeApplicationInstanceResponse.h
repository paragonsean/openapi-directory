/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeApplicationInstanceResponse.h
 *
 * 
 */

#ifndef OAIDescribeApplicationInstanceResponse_H
#define OAIDescribeApplicationInstanceResponse_H

#include <QJsonObject>

#include "OAIApplicationInstanceHealthStatus.h"
#include "OAIApplicationInstanceStatus.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeApplicationInstanceResponse : public OAIObject {
public:
    OAIDescribeApplicationInstanceResponse();
    OAIDescribeApplicationInstanceResponse(QString json);
    ~OAIDescribeApplicationInstanceResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationInstanceId() const;
    void setApplicationInstanceId(const QString &application_instance_id);
    bool is_application_instance_id_Set() const;
    bool is_application_instance_id_Valid() const;

    QString getApplicationInstanceIdToReplace() const;
    void setApplicationInstanceIdToReplace(const QString &application_instance_id_to_replace);
    bool is_application_instance_id_to_replace_Set() const;
    bool is_application_instance_id_to_replace_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QDateTime getCreatedTime() const;
    void setCreatedTime(const QDateTime &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    QString getDefaultRuntimeContextDevice() const;
    void setDefaultRuntimeContextDevice(const QString &default_runtime_context_device);
    bool is_default_runtime_context_device_Set() const;
    bool is_default_runtime_context_device_Valid() const;

    QString getDefaultRuntimeContextDeviceName() const;
    void setDefaultRuntimeContextDeviceName(const QString &default_runtime_context_device_name);
    bool is_default_runtime_context_device_name_Set() const;
    bool is_default_runtime_context_device_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIApplicationInstanceHealthStatus getHealthStatus() const;
    void setHealthStatus(const OAIApplicationInstanceHealthStatus &health_status);
    bool is_health_status_Set() const;
    bool is_health_status_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList getRuntimeContextStates() const;
    void setRuntimeContextStates(const QList &runtime_context_states);
    bool is_runtime_context_states_Set() const;
    bool is_runtime_context_states_Valid() const;

    QString getRuntimeRoleArn() const;
    void setRuntimeRoleArn(const QString &runtime_role_arn);
    bool is_runtime_role_arn_Set() const;
    bool is_runtime_role_arn_Valid() const;

    OAIApplicationInstanceStatus getStatus() const;
    void setStatus(const OAIApplicationInstanceStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusDescription() const;
    void setStatusDescription(const QString &status_description);
    bool is_status_description_Set() const;
    bool is_status_description_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_instance_id;
    bool m_application_instance_id_isSet;
    bool m_application_instance_id_isValid;

    QString m_application_instance_id_to_replace;
    bool m_application_instance_id_to_replace_isSet;
    bool m_application_instance_id_to_replace_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QDateTime m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    QString m_default_runtime_context_device;
    bool m_default_runtime_context_device_isSet;
    bool m_default_runtime_context_device_isValid;

    QString m_default_runtime_context_device_name;
    bool m_default_runtime_context_device_name_isSet;
    bool m_default_runtime_context_device_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIApplicationInstanceHealthStatus m_health_status;
    bool m_health_status_isSet;
    bool m_health_status_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList m_runtime_context_states;
    bool m_runtime_context_states_isSet;
    bool m_runtime_context_states_isValid;

    QString m_runtime_role_arn;
    bool m_runtime_role_arn_isSet;
    bool m_runtime_role_arn_isValid;

    OAIApplicationInstanceStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_description;
    bool m_status_description_isSet;
    bool m_status_description_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeApplicationInstanceResponse)

#endif // OAIDescribeApplicationInstanceResponse_H
