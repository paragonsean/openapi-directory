/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINodeInstance.h
 *
 * A node instance.
 */

#ifndef OAINodeInstance_H
#define OAINodeInstance_H

#include <QJsonObject>

#include "OAINodeInstanceStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINodeInstance : public OAIObject {
public:
    OAINodeInstance();
    OAINodeInstance(QString json);
    ~OAINodeInstance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAINodeInstanceStatus getCurrentStatus() const;
    void setCurrentStatus(const OAINodeInstanceStatus &current_status);
    bool is_current_status_Set() const;
    bool is_current_status_Valid() const;

    QString getNodeId() const;
    void setNodeId(const QString &node_id);
    bool is_node_id_Set() const;
    bool is_node_id_Valid() const;

    QString getNodeInstanceId() const;
    void setNodeInstanceId(const QString &node_instance_id);
    bool is_node_instance_id_Set() const;
    bool is_node_instance_id_Valid() const;

    QString getNodeName() const;
    void setNodeName(const QString &node_name);
    bool is_node_name_Set() const;
    bool is_node_name_Valid() const;

    QString getPackageName() const;
    void setPackageName(const QString &package_name);
    bool is_package_name_Set() const;
    bool is_package_name_Valid() const;

    QString getPackagePatchVersion() const;
    void setPackagePatchVersion(const QString &package_patch_version);
    bool is_package_patch_version_Set() const;
    bool is_package_patch_version_Valid() const;

    QString getPackageVersion() const;
    void setPackageVersion(const QString &package_version);
    bool is_package_version_Set() const;
    bool is_package_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAINodeInstanceStatus m_current_status;
    bool m_current_status_isSet;
    bool m_current_status_isValid;

    QString m_node_id;
    bool m_node_id_isSet;
    bool m_node_id_isValid;

    QString m_node_instance_id;
    bool m_node_instance_id_isSet;
    bool m_node_instance_id_isValid;

    QString m_node_name;
    bool m_node_name_isSet;
    bool m_node_name_isValid;

    QString m_package_name;
    bool m_package_name_isSet;
    bool m_package_name_isValid;

    QString m_package_patch_version;
    bool m_package_patch_version_isSet;
    bool m_package_patch_version_isValid;

    QString m_package_version;
    bool m_package_version_isSet;
    bool m_package_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINodeInstance)

#endif // OAINodeInstance_H
