/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateApplicationInstanceRequest.h
 *
 * 
 */

#ifndef OAICreateApplicationInstanceRequest_H
#define OAICreateApplicationInstanceRequest_H

#include <QJsonObject>

#include "OAICreateApplicationInstanceRequest_ManifestOverridesPayload.h"
#include "OAICreateApplicationInstanceRequest_ManifestPayload.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateApplicationInstanceRequest_ManifestOverridesPayload;
class OAICreateApplicationInstanceRequest_ManifestPayload;

class OAICreateApplicationInstanceRequest : public OAIObject {
public:
    OAICreateApplicationInstanceRequest();
    OAICreateApplicationInstanceRequest(QString json);
    ~OAICreateApplicationInstanceRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationInstanceIdToReplace() const;
    void setApplicationInstanceIdToReplace(const QString &application_instance_id_to_replace);
    bool is_application_instance_id_to_replace_Set() const;
    bool is_application_instance_id_to_replace_Valid() const;

    QString getDefaultRuntimeContextDevice() const;
    void setDefaultRuntimeContextDevice(const QString &default_runtime_context_device);
    bool is_default_runtime_context_device_Set() const;
    bool is_default_runtime_context_device_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAICreateApplicationInstanceRequest_ManifestOverridesPayload getManifestOverridesPayload() const;
    void setManifestOverridesPayload(const OAICreateApplicationInstanceRequest_ManifestOverridesPayload &manifest_overrides_payload);
    bool is_manifest_overrides_payload_Set() const;
    bool is_manifest_overrides_payload_Valid() const;

    OAICreateApplicationInstanceRequest_ManifestPayload getManifestPayload() const;
    void setManifestPayload(const OAICreateApplicationInstanceRequest_ManifestPayload &manifest_payload);
    bool is_manifest_payload_Set() const;
    bool is_manifest_payload_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRuntimeRoleArn() const;
    void setRuntimeRoleArn(const QString &runtime_role_arn);
    bool is_runtime_role_arn_Set() const;
    bool is_runtime_role_arn_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_instance_id_to_replace;
    bool m_application_instance_id_to_replace_isSet;
    bool m_application_instance_id_to_replace_isValid;

    QString m_default_runtime_context_device;
    bool m_default_runtime_context_device_isSet;
    bool m_default_runtime_context_device_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAICreateApplicationInstanceRequest_ManifestOverridesPayload m_manifest_overrides_payload;
    bool m_manifest_overrides_payload_isSet;
    bool m_manifest_overrides_payload_isValid;

    OAICreateApplicationInstanceRequest_ManifestPayload m_manifest_payload;
    bool m_manifest_payload_isSet;
    bool m_manifest_payload_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_runtime_role_arn;
    bool m_runtime_role_arn_isSet;
    bool m_runtime_role_arn_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateApplicationInstanceRequest)

#endif // OAICreateApplicationInstanceRequest_H
