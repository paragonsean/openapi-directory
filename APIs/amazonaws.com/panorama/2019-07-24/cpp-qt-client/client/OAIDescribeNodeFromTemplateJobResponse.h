/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeNodeFromTemplateJobResponse.h
 *
 * 
 */

#ifndef OAIDescribeNodeFromTemplateJobResponse_H
#define OAIDescribeNodeFromTemplateJobResponse_H

#include <QJsonObject>

#include "OAINodeFromTemplateJobStatus.h"
#include "OAITemplateType.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeNodeFromTemplateJobResponse : public OAIObject {
public:
    OAIDescribeNodeFromTemplateJobResponse();
    OAIDescribeNodeFromTemplateJobResponse(QString json);
    ~OAIDescribeNodeFromTemplateJobResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedTime() const;
    void setCreatedTime(const QDateTime &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    QString getJobId() const;
    void setJobId(const QString &job_id);
    bool is_job_id_Set() const;
    bool is_job_id_Valid() const;

    QList getJobTags() const;
    void setJobTags(const QList &job_tags);
    bool is_job_tags_Set() const;
    bool is_job_tags_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    QString getNodeDescription() const;
    void setNodeDescription(const QString &node_description);
    bool is_node_description_Set() const;
    bool is_node_description_Valid() const;

    QString getNodeName() const;
    void setNodeName(const QString &node_name);
    bool is_node_name_Set() const;
    bool is_node_name_Valid() const;

    QString getOutputPackageName() const;
    void setOutputPackageName(const QString &output_package_name);
    bool is_output_package_name_Set() const;
    bool is_output_package_name_Valid() const;

    QString getOutputPackageVersion() const;
    void setOutputPackageVersion(const QString &output_package_version);
    bool is_output_package_version_Set() const;
    bool is_output_package_version_Valid() const;

    OAINodeFromTemplateJobStatus getStatus() const;
    void setStatus(const OAINodeFromTemplateJobStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusMessage() const;
    void setStatusMessage(const QString &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    QMap getTemplateParameters() const;
    void setTemplateParameters(const QMap &template_parameters);
    bool is_template_parameters_Set() const;
    bool is_template_parameters_Valid() const;

    OAITemplateType getTemplateType() const;
    void setTemplateType(const OAITemplateType &template_type);
    bool is_template_type_Set() const;
    bool is_template_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    QString m_job_id;
    bool m_job_id_isSet;
    bool m_job_id_isValid;

    QList m_job_tags;
    bool m_job_tags_isSet;
    bool m_job_tags_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    QString m_node_description;
    bool m_node_description_isSet;
    bool m_node_description_isValid;

    QString m_node_name;
    bool m_node_name_isSet;
    bool m_node_name_isValid;

    QString m_output_package_name;
    bool m_output_package_name_isSet;
    bool m_output_package_name_isValid;

    QString m_output_package_version;
    bool m_output_package_version_isSet;
    bool m_output_package_version_isValid;

    OAINodeFromTemplateJobStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;

    QMap m_template_parameters;
    bool m_template_parameters_isSet;
    bool m_template_parameters_isValid;

    OAITemplateType m_template_type;
    bool m_template_type_isSet;
    bool m_template_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeNodeFromTemplateJobResponse)

#endif // OAIDescribeNodeFromTemplateJobResponse_H
