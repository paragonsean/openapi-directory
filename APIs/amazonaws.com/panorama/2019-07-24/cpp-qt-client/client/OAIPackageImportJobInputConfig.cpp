/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPackageImportJobInputConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPackageImportJobInputConfig::OAIPackageImportJobInputConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPackageImportJobInputConfig::OAIPackageImportJobInputConfig() {
    this->initializeModel();
}

OAIPackageImportJobInputConfig::~OAIPackageImportJobInputConfig() {}

void OAIPackageImportJobInputConfig::initializeModel() {

    m_package_version_input_config_isSet = false;
    m_package_version_input_config_isValid = false;
}

void OAIPackageImportJobInputConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPackageImportJobInputConfig::fromJsonObject(QJsonObject json) {

    m_package_version_input_config_isValid = ::OpenAPI::fromJsonValue(m_package_version_input_config, json[QString("PackageVersionInputConfig")]);
    m_package_version_input_config_isSet = !json[QString("PackageVersionInputConfig")].isNull() && m_package_version_input_config_isValid;
}

QString OAIPackageImportJobInputConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPackageImportJobInputConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_package_version_input_config.isSet()) {
        obj.insert(QString("PackageVersionInputConfig"), ::OpenAPI::toJsonValue(m_package_version_input_config));
    }
    return obj;
}

OAICreatePackageImportJob_request_InputConfig_PackageVersionInputConfig OAIPackageImportJobInputConfig::getPackageVersionInputConfig() const {
    return m_package_version_input_config;
}
void OAIPackageImportJobInputConfig::setPackageVersionInputConfig(const OAICreatePackageImportJob_request_InputConfig_PackageVersionInputConfig &package_version_input_config) {
    m_package_version_input_config = package_version_input_config;
    m_package_version_input_config_isSet = true;
}

bool OAIPackageImportJobInputConfig::is_package_version_input_config_Set() const{
    return m_package_version_input_config_isSet;
}

bool OAIPackageImportJobInputConfig::is_package_version_input_config_Valid() const{
    return m_package_version_input_config_isValid;
}

bool OAIPackageImportJobInputConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_package_version_input_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPackageImportJobInputConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
