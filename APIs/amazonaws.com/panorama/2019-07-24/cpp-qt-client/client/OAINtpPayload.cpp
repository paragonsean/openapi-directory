/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINtpPayload.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINtpPayload::OAINtpPayload(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINtpPayload::OAINtpPayload() {
    this->initializeModel();
}

OAINtpPayload::~OAINtpPayload() {}

void OAINtpPayload::initializeModel() {

    m_ntp_servers_isSet = false;
    m_ntp_servers_isValid = false;
}

void OAINtpPayload::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINtpPayload::fromJsonObject(QJsonObject json) {

    m_ntp_servers_isValid = ::OpenAPI::fromJsonValue(m_ntp_servers, json[QString("NtpServers")]);
    m_ntp_servers_isSet = !json[QString("NtpServers")].isNull() && m_ntp_servers_isValid;
}

QString OAINtpPayload::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINtpPayload::asJsonObject() const {
    QJsonObject obj;
    if (m_ntp_servers.isSet()) {
        obj.insert(QString("NtpServers"), ::OpenAPI::toJsonValue(m_ntp_servers));
    }
    return obj;
}

QList OAINtpPayload::getNtpServers() const {
    return m_ntp_servers;
}
void OAINtpPayload::setNtpServers(const QList &ntp_servers) {
    m_ntp_servers = ntp_servers;
    m_ntp_servers_isSet = true;
}

bool OAINtpPayload::is_ntp_servers_Set() const{
    return m_ntp_servers_isSet;
}

bool OAINtpPayload::is_ntp_servers_Valid() const{
    return m_ntp_servers_isValid;
}

bool OAINtpPayload::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ntp_servers.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINtpPayload::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_ntp_servers_isValid && true;
}

} // namespace OpenAPI
