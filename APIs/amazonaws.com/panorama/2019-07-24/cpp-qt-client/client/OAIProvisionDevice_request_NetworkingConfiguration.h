/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProvisionDevice_request_NetworkingConfiguration.h
 *
 * The network configuration for a device.
 */

#ifndef OAIProvisionDevice_request_NetworkingConfiguration_H
#define OAIProvisionDevice_request_NetworkingConfiguration_H

#include <QJsonObject>

#include "OAIProvisionDevice_request_NetworkingConfiguration_Ethernet0.h"
#include "OAIProvisionDevice_request_NetworkingConfiguration_Ethernet1.h"
#include "OAIProvisionDevice_request_NetworkingConfiguration_Ntp.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProvisionDevice_request_NetworkingConfiguration_Ethernet0;
class OAIProvisionDevice_request_NetworkingConfiguration_Ethernet1;
class OAIProvisionDevice_request_NetworkingConfiguration_Ntp;

class OAIProvisionDevice_request_NetworkingConfiguration : public OAIObject {
public:
    OAIProvisionDevice_request_NetworkingConfiguration();
    OAIProvisionDevice_request_NetworkingConfiguration(QString json);
    ~OAIProvisionDevice_request_NetworkingConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIProvisionDevice_request_NetworkingConfiguration_Ethernet0 getEthernet0() const;
    void setEthernet0(const OAIProvisionDevice_request_NetworkingConfiguration_Ethernet0 &ethernet0);
    bool is_ethernet0_Set() const;
    bool is_ethernet0_Valid() const;

    OAIProvisionDevice_request_NetworkingConfiguration_Ethernet1 getEthernet1() const;
    void setEthernet1(const OAIProvisionDevice_request_NetworkingConfiguration_Ethernet1 &ethernet1);
    bool is_ethernet1_Set() const;
    bool is_ethernet1_Valid() const;

    OAIProvisionDevice_request_NetworkingConfiguration_Ntp getNtp() const;
    void setNtp(const OAIProvisionDevice_request_NetworkingConfiguration_Ntp &ntp);
    bool is_ntp_Set() const;
    bool is_ntp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIProvisionDevice_request_NetworkingConfiguration_Ethernet0 m_ethernet0;
    bool m_ethernet0_isSet;
    bool m_ethernet0_isValid;

    OAIProvisionDevice_request_NetworkingConfiguration_Ethernet1 m_ethernet1;
    bool m_ethernet1_isSet;
    bool m_ethernet1_isValid;

    OAIProvisionDevice_request_NetworkingConfiguration_Ntp m_ntp;
    bool m_ntp_isSet;
    bool m_ntp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProvisionDevice_request_NetworkingConfiguration)

#endif // OAIProvisionDevice_request_NetworkingConfiguration_H
