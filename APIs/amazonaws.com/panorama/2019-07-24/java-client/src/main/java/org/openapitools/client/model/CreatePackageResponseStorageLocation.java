/*
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreatePackageResponseStorageLocation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:01.151088-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreatePackageResponseStorageLocation {
  public static final String SERIALIZED_NAME_BINARY_PREFIX_LOCATION = "BinaryPrefixLocation";
  @SerializedName(SERIALIZED_NAME_BINARY_PREFIX_LOCATION)
  private String binaryPrefixLocation;

  public static final String SERIALIZED_NAME_BUCKET = "Bucket";
  @SerializedName(SERIALIZED_NAME_BUCKET)
  private String bucket;

  public static final String SERIALIZED_NAME_GENERATED_PREFIX_LOCATION = "GeneratedPrefixLocation";
  @SerializedName(SERIALIZED_NAME_GENERATED_PREFIX_LOCATION)
  private String generatedPrefixLocation;

  public static final String SERIALIZED_NAME_MANIFEST_PREFIX_LOCATION = "ManifestPrefixLocation";
  @SerializedName(SERIALIZED_NAME_MANIFEST_PREFIX_LOCATION)
  private String manifestPrefixLocation;

  public static final String SERIALIZED_NAME_REPO_PREFIX_LOCATION = "RepoPrefixLocation";
  @SerializedName(SERIALIZED_NAME_REPO_PREFIX_LOCATION)
  private String repoPrefixLocation;

  public CreatePackageResponseStorageLocation() {
  }

  public CreatePackageResponseStorageLocation binaryPrefixLocation(String binaryPrefixLocation) {
    this.binaryPrefixLocation = binaryPrefixLocation;
    return this;
  }

  /**
   * Get binaryPrefixLocation
   * @return binaryPrefixLocation
   */
  @javax.annotation.Nonnull
  public String getBinaryPrefixLocation() {
    return binaryPrefixLocation;
  }

  public void setBinaryPrefixLocation(String binaryPrefixLocation) {
    this.binaryPrefixLocation = binaryPrefixLocation;
  }


  public CreatePackageResponseStorageLocation bucket(String bucket) {
    this.bucket = bucket;
    return this;
  }

  /**
   * Get bucket
   * @return bucket
   */
  @javax.annotation.Nonnull
  public String getBucket() {
    return bucket;
  }

  public void setBucket(String bucket) {
    this.bucket = bucket;
  }


  public CreatePackageResponseStorageLocation generatedPrefixLocation(String generatedPrefixLocation) {
    this.generatedPrefixLocation = generatedPrefixLocation;
    return this;
  }

  /**
   * Get generatedPrefixLocation
   * @return generatedPrefixLocation
   */
  @javax.annotation.Nonnull
  public String getGeneratedPrefixLocation() {
    return generatedPrefixLocation;
  }

  public void setGeneratedPrefixLocation(String generatedPrefixLocation) {
    this.generatedPrefixLocation = generatedPrefixLocation;
  }


  public CreatePackageResponseStorageLocation manifestPrefixLocation(String manifestPrefixLocation) {
    this.manifestPrefixLocation = manifestPrefixLocation;
    return this;
  }

  /**
   * Get manifestPrefixLocation
   * @return manifestPrefixLocation
   */
  @javax.annotation.Nonnull
  public String getManifestPrefixLocation() {
    return manifestPrefixLocation;
  }

  public void setManifestPrefixLocation(String manifestPrefixLocation) {
    this.manifestPrefixLocation = manifestPrefixLocation;
  }


  public CreatePackageResponseStorageLocation repoPrefixLocation(String repoPrefixLocation) {
    this.repoPrefixLocation = repoPrefixLocation;
    return this;
  }

  /**
   * Get repoPrefixLocation
   * @return repoPrefixLocation
   */
  @javax.annotation.Nonnull
  public String getRepoPrefixLocation() {
    return repoPrefixLocation;
  }

  public void setRepoPrefixLocation(String repoPrefixLocation) {
    this.repoPrefixLocation = repoPrefixLocation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePackageResponseStorageLocation createPackageResponseStorageLocation = (CreatePackageResponseStorageLocation) o;
    return Objects.equals(this.binaryPrefixLocation, createPackageResponseStorageLocation.binaryPrefixLocation) &&
        Objects.equals(this.bucket, createPackageResponseStorageLocation.bucket) &&
        Objects.equals(this.generatedPrefixLocation, createPackageResponseStorageLocation.generatedPrefixLocation) &&
        Objects.equals(this.manifestPrefixLocation, createPackageResponseStorageLocation.manifestPrefixLocation) &&
        Objects.equals(this.repoPrefixLocation, createPackageResponseStorageLocation.repoPrefixLocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(binaryPrefixLocation, bucket, generatedPrefixLocation, manifestPrefixLocation, repoPrefixLocation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePackageResponseStorageLocation {\n");
    sb.append("    binaryPrefixLocation: ").append(toIndentedString(binaryPrefixLocation)).append("\n");
    sb.append("    bucket: ").append(toIndentedString(bucket)).append("\n");
    sb.append("    generatedPrefixLocation: ").append(toIndentedString(generatedPrefixLocation)).append("\n");
    sb.append("    manifestPrefixLocation: ").append(toIndentedString(manifestPrefixLocation)).append("\n");
    sb.append("    repoPrefixLocation: ").append(toIndentedString(repoPrefixLocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BinaryPrefixLocation");
    openapiFields.add("Bucket");
    openapiFields.add("GeneratedPrefixLocation");
    openapiFields.add("ManifestPrefixLocation");
    openapiFields.add("RepoPrefixLocation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("BinaryPrefixLocation");
    openapiRequiredFields.add("Bucket");
    openapiRequiredFields.add("GeneratedPrefixLocation");
    openapiRequiredFields.add("ManifestPrefixLocation");
    openapiRequiredFields.add("RepoPrefixLocation");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreatePackageResponseStorageLocation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreatePackageResponseStorageLocation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreatePackageResponseStorageLocation is not found in the empty JSON string", CreatePackageResponseStorageLocation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreatePackageResponseStorageLocation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreatePackageResponseStorageLocation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreatePackageResponseStorageLocation.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `BinaryPrefixLocation`
      String.validateJsonElement(jsonObj.get("BinaryPrefixLocation"));
      // validate the required field `Bucket`
      String.validateJsonElement(jsonObj.get("Bucket"));
      // validate the required field `GeneratedPrefixLocation`
      String.validateJsonElement(jsonObj.get("GeneratedPrefixLocation"));
      // validate the required field `ManifestPrefixLocation`
      String.validateJsonElement(jsonObj.get("ManifestPrefixLocation"));
      // validate the required field `RepoPrefixLocation`
      String.validateJsonElement(jsonObj.get("RepoPrefixLocation"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreatePackageResponseStorageLocation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreatePackageResponseStorageLocation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreatePackageResponseStorageLocation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreatePackageResponseStorageLocation.class));

       return (TypeAdapter<T>) new TypeAdapter<CreatePackageResponseStorageLocation>() {
           @Override
           public void write(JsonWriter out, CreatePackageResponseStorageLocation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreatePackageResponseStorageLocation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreatePackageResponseStorageLocation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreatePackageResponseStorageLocation
   * @throws IOException if the JSON string is invalid with respect to CreatePackageResponseStorageLocation
   */
  public static CreatePackageResponseStorageLocation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreatePackageResponseStorageLocation.class);
  }

  /**
   * Convert an instance of CreatePackageResponseStorageLocation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

