/*
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.DescribeDeviceResponseCurrentNetworkingStatus;
import org.openapitools.client.model.DescribeDeviceResponseLatestDeviceJob;
import org.openapitools.client.model.DescribeDeviceResponseNetworkingConfiguration;
import org.openapitools.client.model.DeviceAggregatedStatus;
import org.openapitools.client.model.DeviceBrand;
import org.openapitools.client.model.DeviceConnectionStatus;
import org.openapitools.client.model.DeviceStatus;
import org.openapitools.client.model.DeviceType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DescribeDeviceResponse
 */
public class DescribeDeviceResponseTest {
    private final DescribeDeviceResponse model = new DescribeDeviceResponse();

    /**
     * Model tests for DescribeDeviceResponse
     */
    @Test
    public void testDescribeDeviceResponse() {
        // TODO: test DescribeDeviceResponse
    }

    /**
     * Test the property 'alternateSoftwares'
     */
    @Test
    public void alternateSoftwaresTest() {
        // TODO: test alternateSoftwares
    }

    /**
     * Test the property 'arn'
     */
    @Test
    public void arnTest() {
        // TODO: test arn
    }

    /**
     * Test the property 'brand'
     */
    @Test
    public void brandTest() {
        // TODO: test brand
    }

    /**
     * Test the property 'createdTime'
     */
    @Test
    public void createdTimeTest() {
        // TODO: test createdTime
    }

    /**
     * Test the property 'currentNetworkingStatus'
     */
    @Test
    public void currentNetworkingStatusTest() {
        // TODO: test currentNetworkingStatus
    }

    /**
     * Test the property 'currentSoftware'
     */
    @Test
    public void currentSoftwareTest() {
        // TODO: test currentSoftware
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'deviceAggregatedStatus'
     */
    @Test
    public void deviceAggregatedStatusTest() {
        // TODO: test deviceAggregatedStatus
    }

    /**
     * Test the property 'deviceConnectionStatus'
     */
    @Test
    public void deviceConnectionStatusTest() {
        // TODO: test deviceConnectionStatus
    }

    /**
     * Test the property 'deviceId'
     */
    @Test
    public void deviceIdTest() {
        // TODO: test deviceId
    }

    /**
     * Test the property 'latestAlternateSoftware'
     */
    @Test
    public void latestAlternateSoftwareTest() {
        // TODO: test latestAlternateSoftware
    }

    /**
     * Test the property 'latestDeviceJob'
     */
    @Test
    public void latestDeviceJobTest() {
        // TODO: test latestDeviceJob
    }

    /**
     * Test the property 'latestSoftware'
     */
    @Test
    public void latestSoftwareTest() {
        // TODO: test latestSoftware
    }

    /**
     * Test the property 'leaseExpirationTime'
     */
    @Test
    public void leaseExpirationTimeTest() {
        // TODO: test leaseExpirationTime
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'networkingConfiguration'
     */
    @Test
    public void networkingConfigurationTest() {
        // TODO: test networkingConfiguration
    }

    /**
     * Test the property 'provisioningStatus'
     */
    @Test
    public void provisioningStatusTest() {
        // TODO: test provisioningStatus
    }

    /**
     * Test the property 'serialNumber'
     */
    @Test
    public void serialNumberTest() {
        // TODO: test serialNumber
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
