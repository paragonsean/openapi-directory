openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This\
    \ is the <i>AWS Panorama API Reference</i>. For an introduction to the service,\
    \ see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\"\
    >What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Panorama
  version: 2019-07-24
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: panorama
  x-aws-signingName: panorama
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/panorama-2019-07-24.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/panorama/
servers:
- description: The Panorama multi-region endpoint
  url: "http://panorama.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Panorama multi-region endpoint
  url: "https://panorama.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Panorama endpoint for China (Beijing) and China (Ningxia)
  url: "http://panorama.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Panorama endpoint for China (Beijing) and China (Ningxia)
  url: "https://panorama.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /application-instances:
    get:
      description: Returns a list of application instances.
      operationId: list_application_instances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application instances' device ID.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          type: string
        style: form
      - description: The maximum number of application instances to return in one
          page of results.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 25
          minimum: 0
          type: integer
        style: form
      - description: Specify the pagination token from a previous request to retrieve
          the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          minLength: 1
          pattern: ^.+$
          type: string
        style: form
      - description: Only include instances with a specific status.
        explode: true
        in: query
        name: statusFilter
        required: false
        schema:
          enum:
          - DEPLOYMENT_SUCCEEDED
          - DEPLOYMENT_ERROR
          - REMOVAL_SUCCEEDED
          - REMOVAL_FAILED
          - PROCESSING_DEPLOYMENT
          - PROCESSING_REMOVAL
          - DEPLOYMENT_FAILED
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationInstancesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates an application instance and deploys it to a device.
      operationId: create_application_instance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationInstance_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApplicationInstanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /application-instances/{ApplicationInstanceId}:
    delete:
      description: Removes an application instance.
      operationId: remove_application_instance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: An application instance ID.
        explode: false
        in: path
        name: ApplicationInstanceId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveApplicationInstanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Returns information about an application instance on a device.
      operationId: describe_application_instance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application instance's ID.
        explode: false
        in: path
        name: ApplicationInstanceId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeApplicationInstanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /application-instances/{ApplicationInstanceId}/details:
    get:
      description: Returns information about an application instance's configuration
        manifest.
      operationId: describe_application_instance_details
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application instance's ID.
        explode: false
        in: path
        name: ApplicationInstanceId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeApplicationInstanceDetailsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /application-instances/{ApplicationInstanceId}/node-instances:
    get:
      description: Returns a list of application node instances.
      operationId: list_application_instance_node_instances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The node instances' application instance ID.
        explode: false
        in: path
        name: ApplicationInstanceId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          type: string
        style: simple
      - description: The maximum number of node instances to return in one page of
          results.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 25
          minimum: 0
          type: integer
        style: form
      - description: Specify the pagination token from a previous request to retrieve
          the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          minLength: 1
          pattern: ^.+$
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationInstanceNodeInstancesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /application-instances/{ApplicationInstanceId}/node-signals:
    put:
      description: Signal camera nodes to stop or resume.
      operationId: signal_application_instance_node_instances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: An application instance ID.
        explode: false
        in: path
        name: ApplicationInstanceId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignalApplicationInstanceNodeInstances_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignalApplicationInstanceNodeInstancesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /application-instances/{ApplicationInstanceId}/package-dependencies:
    get:
      description: Returns a list of application instance dependencies.
      operationId: list_application_instance_dependencies
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application instance's ID.
        explode: false
        in: path
        name: ApplicationInstanceId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          type: string
        style: simple
      - description: The maximum number of application instance dependencies to return
          in one page of results.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 25
          minimum: 0
          type: integer
        style: form
      - description: Specify the pagination token from a previous request to retrieve
          the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          minLength: 1
          pattern: ^.+$
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationInstanceDependenciesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /devices:
    get:
      description: Returns a list of devices.
      operationId: list_devices
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Filter based on a device's status.
        explode: true
        in: query
        name: DeviceAggregatedStatusFilter
        required: false
        schema:
          enum:
          - ERROR
          - AWAITING_PROVISIONING
          - PENDING
          - FAILED
          - DELETING
          - ONLINE
          - OFFLINE
          - LEASE_EXPIRED
          - UPDATE_NEEDED
          - REBOOTING
          type: string
        style: form
      - description: The maximum number of devices to return in one page of results.
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 25
          minimum: 0
          type: integer
        style: form
      - description: Filter based on device's name. Prefixes supported.
        explode: true
        in: query
        name: NameFilter
        required: false
        schema:
          type: string
        style: form
      - description: Specify the pagination token from a previous request to retrieve
          the next page of results.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          maxLength: 4096
          minLength: 1
          pattern: ^.+$
          type: string
        style: form
      - description: The target column to be sorted on. Default column sort is CREATED_TIME.
        explode: true
        in: query
        name: SortBy
        required: false
        schema:
          enum:
          - DEVICE_ID
          - CREATED_TIME
          - NAME
          - DEVICE_AGGREGATED_STATUS
          type: string
        style: form
      - description: "The sorting order for the returned list. SortOrder is DESCENDING\
          \ by default based on CREATED_TIME. Otherwise, SortOrder is ASCENDING."
        explode: true
        in: query
        name: SortOrder
        required: false
        schema:
          enum:
          - ASCENDING
          - DESCENDING
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a device and returns a configuration archive. The configuration
        archive is a ZIP file that contains a provisioning certificate that is valid
        for 5 minutes. Name the configuration archive <code>certificates-omni_<i>device-name</i>.zip</code>
        and transfer it to the device within 5 minutes. Use the included USB storage
        device and connect it to the USB 3.0 port next to the HDMI output.
      operationId: provision_device
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisionDevice_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /devices/{DeviceId}:
    delete:
      description: Deletes a device.
      operationId: delete_device
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The device's ID.
        explode: false
        in: path
        name: DeviceId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Returns information about a device.
      operationId: describe_device
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The device's ID.
        explode: false
        in: path
        name: DeviceId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates a device's metadata.
      operationId: update_device_metadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The device's ID.
        explode: false
        in: path
        name: DeviceId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceMetadata_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDeviceMetadataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /jobs:
    get:
      description: Returns a list of jobs.
      operationId: list_devices_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Filter results by the job's target device ID.
        explode: true
        in: query
        name: DeviceId
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          type: string
        style: form
      - description: The maximum number of device jobs to return in one page of results.
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 25
          minimum: 0
          type: integer
        style: form
      - description: Specify the pagination token from a previous request to retrieve
          the next page of results.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          maxLength: 4096
          minLength: 1
          pattern: ^.+$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a job to run on a device. A job can update a device's software
        or reboot it.
      operationId: create_job_for_devices
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobForDevices_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateJobForDevicesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /jobs/{JobId}:
    get:
      description: Returns information about a device job.
      operationId: describe_device_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The job's ID.
        explode: false
        in: path
        name: JobId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDeviceJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nodes:
    get:
      description: Returns a list of nodes.
      operationId: list_nodes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Search for nodes by category.
        explode: true
        in: query
        name: category
        required: false
        schema:
          enum:
          - BUSINESS_LOGIC
          - ML_MODEL
          - MEDIA_SOURCE
          - MEDIA_SINK
          type: string
        style: form
      - description: The maximum number of nodes to return in one page of results.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 25
          minimum: 0
          type: integer
        style: form
      - description: Specify the pagination token from a previous request to retrieve
          the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          minLength: 1
          pattern: ^.+$
          type: string
        style: form
      - description: Search for nodes by the account ID of the nodes' owner.
        explode: true
        in: query
        name: ownerAccount
        required: false
        schema:
          maxLength: 12
          minLength: 1
          pattern: "^[0-9a-z\\_]+$"
          type: string
        style: form
      - description: Search for nodes by name.
        explode: true
        in: query
        name: packageName
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          type: string
        style: form
      - description: Search for nodes by version.
        explode: true
        in: query
        name: packageVersion
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^([0-9]+)\\.([0-9]+)$"
          type: string
        style: form
      - description: Search for nodes by patch version.
        explode: true
        in: query
        name: patchVersion
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-z0-9]+$"
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nodes/{NodeId}:
    get:
      description: Returns information about a node.
      operationId: describe_node
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The node's ID.
        explode: false
        in: path
        name: NodeId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_\\.]+$"
          type: string
        style: simple
      - description: The account ID of the node's owner.
        explode: true
        in: query
        name: OwnerAccount
        required: false
        schema:
          maxLength: 12
          minLength: 1
          pattern: "^[0-9a-z\\_]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeNodeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /packages:
    get:
      description: Returns a list of packages.
      operationId: list_packages
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of packages to return in one page of results.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 25
          minimum: 0
          type: integer
        style: form
      - description: Specify the pagination token from a previous request to retrieve
          the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          minLength: 1
          pattern: ^.+$
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackagesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a package and storage location in an Amazon S3 access point.
      operationId: create_package
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePackage_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePackageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /packages/import-jobs:
    get:
      description: Returns a list of package import jobs.
      operationId: list_package_import_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of package import jobs to return in one page
          of results.
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 25
          minimum: 0
          type: integer
        style: form
      - description: Specify the pagination token from a previous request to retrieve
          the next page of results.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          maxLength: 4096
          minLength: 1
          pattern: ^.+$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackageImportJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Imports a node package.
      operationId: create_package_import_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePackageImportJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePackageImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /packages/import-jobs/{JobId}:
    get:
      description: Returns information about a package import job.
      operationId: describe_package_import_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The job's ID.
        explode: false
        in: path
        name: JobId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePackageImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /packages/metadata/{PackageId}:
    get:
      description: Returns information about a package.
      operationId: describe_package
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The package's ID.
        explode: false
        in: path
        name: PackageId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_\\/]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePackageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /packages/metadata/{PackageId}/versions/{PackageVersion}:
    get:
      description: Returns information about a package version.
      operationId: describe_package_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The version's owner account.
        explode: true
        in: query
        name: OwnerAccount
        required: false
        schema:
          maxLength: 12
          minLength: 1
          pattern: "^[0-9a-z\\_]+$"
          type: string
        style: form
      - description: The version's ID.
        explode: false
        in: path
        name: PackageId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_\\/]+$"
          type: string
        style: simple
      - description: The version's version.
        explode: false
        in: path
        name: PackageVersion
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^([0-9]+)\\.([0-9]+)$"
          type: string
        style: simple
      - description: The version's patch version.
        explode: true
        in: query
        name: PatchVersion
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-z0-9]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePackageVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /packages/template-job:
    get:
      description: Returns a list of camera stream node jobs.
      operationId: list_node_from_template_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of node from template jobs to return in one
          page of results.
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 25
          minimum: 0
          type: integer
        style: form
      - description: Specify the pagination token from a previous request to retrieve
          the next page of results.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          maxLength: 4096
          minLength: 1
          pattern: ^.+$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodeFromTemplateJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a camera stream node.
      operationId: create_node_from_template_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNodeFromTemplateJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNodeFromTemplateJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /packages/template-job/{JobId}:
    get:
      description: Returns information about a job to create a camera stream node.
      operationId: describe_node_from_template_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The job's ID.
        explode: false
        in: path
        name: JobId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeNodeFromTemplateJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /packages/{PackageId}:
    delete:
      description: "<p>Deletes a package.</p> <note> <p>To delete a package, you need\
        \ permission to call <code>s3:DeleteObject</code> in addition to permissions\
        \ for the AWS Panorama API.</p> </note>"
      operationId: delete_package
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Delete the package even if it has artifacts stored in its access
          point. Deletes the package's artifacts from Amazon S3.
        explode: true
        in: query
        name: ForceDelete
        required: false
        schema:
          type: boolean
        style: form
      - description: The package's ID.
        explode: false
        in: path
        name: PackageId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_\\/]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePackageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /packages/{PackageId}/versions/{PackageVersion}/patch/{PatchVersion}:
    delete:
      description: Deregisters a package version.
      operationId: deregister_package_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: An owner account.
        explode: true
        in: query
        name: OwnerAccount
        required: false
        schema:
          maxLength: 12
          minLength: 1
          pattern: "^[0-9a-z\\_]+$"
          type: string
        style: form
      - description: A package ID.
        explode: false
        in: path
        name: PackageId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_\\/]+$"
          type: string
        style: simple
      - description: A package version.
        explode: false
        in: path
        name: PackageVersion
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^([0-9]+)\\.([0-9]+)$"
          type: string
        style: simple
      - description: A patch version.
        explode: false
        in: path
        name: PatchVersion
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-z0-9]+$"
          type: string
        style: simple
      - description: "If the version was marked latest, the new version to maker as\
          \ latest."
        explode: true
        in: query
        name: UpdatedLatestPatchVersion
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-z0-9]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterPackageVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Registers a package version.
      operationId: register_package_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A package ID.
        explode: false
        in: path
        name: PackageId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_\\/]+$"
          type: string
        style: simple
      - description: A package version.
        explode: false
        in: path
        name: PackageVersion
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^([0-9]+)\\.([0-9]+)$"
          type: string
        style: simple
      - description: A patch version.
        explode: false
        in: path
        name: PatchVersion
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-z0-9]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPackageVersion_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterPackageVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{ResourceArn}:
    get:
      description: Returns a list of tags for a resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The resource's ARN.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 1
          pattern: ^.+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Tags a resource.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The resource's ARN.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 1
          pattern: ^.+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{ResourceArn}#tagKeys:
    delete:
      description: Removes tags from a resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The resource's ARN.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 1
          pattern: ^.+$
          type: string
        style: simple
      - description: Tag keys to remove.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateApplicationInstanceResponse:
      example:
        ApplicationInstanceId: ""
      properties:
        ApplicationInstanceId:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceId'
          - description: The application instance's ID.
          title: ApplicationInstanceId
      required:
      - ApplicationInstanceId
      title: CreateApplicationInstanceResponse
      type: object
    ManifestOverridesPayloadData:
      maxLength: 51200
      minLength: 0
      pattern: ^.*$
      type: string
    ManifestPayloadData:
      maxLength: 51200
      minLength: 1
      pattern: ^.+$
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: ^.*$
      title: TagValue
      type: string
    ValidationException: {}
    AccessDeniedException: {}
    ServiceQuotaExceededException: {}
    InternalServerException: {}
    CreateJobForDevicesResponse:
      example:
        Jobs: ""
      properties:
        Jobs:
          allOf:
          - $ref: '#/components/schemas/JobList'
          - description: A list of jobs.
          title: Jobs
      required:
      - Jobs
      title: CreateJobForDevicesResponse
      type: object
    DeviceId:
      maxLength: 255
      minLength: 1
      pattern: "^[a-zA-Z0-9\\-\\_]+$"
      title: DeviceId
      type: string
    OTAJobConfig:
      description: An over-the-air update (OTA) job configuration.
      properties:
        AllowMajorVersionUpdate:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether to apply the update if it is a major version change.
          title: AllowMajorVersionUpdate
        ImageVersion:
          allOf:
          - $ref: '#/components/schemas/ImageVersion'
          - description: The target version of the device software.
          title: ImageVersion
      required:
      - ImageVersion
      title: OTAJobConfig
      type: object
    ConflictException: {}
    ResourceNotFoundException: {}
    CreateNodeFromTemplateJobResponse:
      example:
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The job's ID.
          title: JobId
      required:
      - JobId
      title: CreateNodeFromTemplateJobResponse
      type: object
    JobResourceTags:
      description: Tags for a job.
      properties:
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/JobResourceType'
          - description: The job's type.
          title: ResourceType
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The job's tags.
          title: Tags
      required:
      - ResourceType
      - Tags
      title: JobResourceTags
      type: object
    TemplateValue:
      format: password
      maxLength: 255
      minLength: 1
      pattern: ^.+$
      title: TemplateValue
      type: string
    CreatePackageResponse:
      example:
        PackageId: ""
        Arn: ""
        StorageLocation:
          BinaryPrefixLocation: ""
          GeneratedPrefixLocation: ""
          RepoPrefixLocation: ""
          Bucket: ""
          ManifestPrefixLocation: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NodePackageArn'
          - description: The package's ARN.
          title: Arn
        PackageId:
          allOf:
          - $ref: '#/components/schemas/NodePackageId'
          - description: The package's ID.
          title: PackageId
        StorageLocation:
          $ref: '#/components/schemas/CreatePackageResponse_StorageLocation'
      required:
      - StorageLocation
      title: CreatePackageResponse
      type: object
    CreatePackageImportJobResponse:
      example:
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The job's ID.
          title: JobId
      required:
      - JobId
      title: CreatePackageImportJobResponse
      type: object
    PackageVersionInputConfig:
      description: A package version input configuration.
      properties:
        S3Location:
          $ref: '#/components/schemas/PackageVersionInputConfig_S3Location'
      required:
      - S3Location
      title: PackageVersionInputConfig
      type: object
    PackageVersionOutputConfig:
      description: A package version output configuration.
      properties:
        MarkLatest:
          allOf:
          - $ref: '#/components/schemas/MarkLatestPatch'
          - description: Indicates that the version is recommended for all users.
          title: MarkLatest
        PackageName:
          allOf:
          - $ref: '#/components/schemas/NodePackageName'
          - description: The output's package name.
          title: PackageName
        PackageVersion:
          allOf:
          - $ref: '#/components/schemas/NodePackageVersion'
          - description: The output's package version.
          title: PackageVersion
      required:
      - PackageName
      - PackageVersion
      title: PackageVersionOutputConfig
      type: object
    DeleteDeviceResponse:
      example:
        DeviceId: ""
      properties:
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: The device's ID.
          title: DeviceId
      title: DeleteDeviceResponse
      type: object
    DeletePackageResponse:
      properties: {}
      type: object
    DeregisterPackageVersionResponse:
      properties: {}
      type: object
    DescribeApplicationInstanceResponse:
      example:
        DefaultRuntimeContextDeviceName: ""
        Status: ""
        DefaultRuntimeContextDevice: ""
        ApplicationInstanceIdToReplace: ""
        CreatedTime: ""
        Description: ""
        HealthStatus: ""
        LastUpdatedTime: ""
        RuntimeRoleArn: ""
        Name: ""
        ApplicationInstanceId: ""
        RuntimeContextStates: ""
        StatusDescription: ""
        Arn: ""
        Tags: ""
      properties:
        ApplicationInstanceId:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceId'
          - description: The application instance's ID.
          title: ApplicationInstanceId
        ApplicationInstanceIdToReplace:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceId'
          - description: The ID of the application instance that this instance replaced.
          title: ApplicationInstanceIdToReplace
        Arn:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceArn'
          - description: The application instance's ARN.
          title: Arn
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: When the application instance was created.
          title: CreatedTime
        DefaultRuntimeContextDevice:
          allOf:
          - $ref: '#/components/schemas/DefaultRuntimeContextDevice'
          - description: The device's ID.
          title: DefaultRuntimeContextDevice
        DefaultRuntimeContextDeviceName:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          - description: The device's bane.
          title: DefaultRuntimeContextDeviceName
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The application instance's description.
          title: Description
        HealthStatus:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceHealthStatus'
          - description: The application instance's health status.
          title: HealthStatus
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: The application instance was updated.
          title: LastUpdatedTime
        Name:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceName'
          - description: The application instance's name.
          title: Name
        RuntimeContextStates:
          allOf:
          - $ref: '#/components/schemas/ReportedRuntimeContextStates'
          - description: The application instance's state.
          title: RuntimeContextStates
        RuntimeRoleArn:
          allOf:
          - $ref: '#/components/schemas/RuntimeRoleArn'
          - description: The application instance's runtime role ARN.
          title: RuntimeRoleArn
        Status:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceStatus'
          - description: The application instance's status.
          title: Status
        StatusDescription:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceStatusDescription'
          - description: The application instance's status description.
          title: StatusDescription
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The application instance's tags.
          title: Tags
      title: DescribeApplicationInstanceResponse
      type: object
    DescribeApplicationInstanceDetailsResponse:
      example:
        ApplicationInstanceId: ""
        DefaultRuntimeContextDevice: ""
        ApplicationInstanceIdToReplace: ""
        CreatedTime: ""
        Description: ""
        ManifestOverridesPayload:
          PayloadData: ""
        ManifestPayload:
          PayloadData: ""
        Name: ""
      properties:
        ApplicationInstanceId:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceId'
          - description: The application instance's ID.
          title: ApplicationInstanceId
        ApplicationInstanceIdToReplace:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceId'
          - description: The ID of the application instance that this instance replaced.
          title: ApplicationInstanceIdToReplace
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: When the application instance was created.
          title: CreatedTime
        DefaultRuntimeContextDevice:
          allOf:
          - $ref: '#/components/schemas/DefaultRuntimeContextDevice'
          - description: The application instance's default runtime context device.
          title: DefaultRuntimeContextDevice
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The application instance's description.
          title: Description
        ManifestOverridesPayload:
          $ref: '#/components/schemas/DescribeApplicationInstanceDetailsResponse_ManifestOverridesPayload'
        ManifestPayload:
          $ref: '#/components/schemas/DescribeApplicationInstanceDetailsResponse_ManifestPayload'
        Name:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceName'
          - description: The application instance's name.
          title: Name
      title: DescribeApplicationInstanceDetailsResponse
      type: object
    DescribeDeviceResponse:
      example:
        AlternateSoftwares: ""
        CreatedTime: ""
        Description: ""
        DeviceId: ""
        CurrentSoftware: ""
        NetworkingConfiguration:
          Ntp:
            NtpServers: ""
          Ethernet0:
            ConnectionType: ""
            StaticIpConnectionInfo:
              DefaultGateway: ""
              Dns: ""
              Mask: ""
              IpAddress: ""
          Ethernet1:
            ConnectionType: ""
            StaticIpConnectionInfo:
              DefaultGateway: ""
              Dns: ""
              Mask: ""
              IpAddress: ""
        Name: ""
        Brand: ""
        DeviceConnectionStatus: ""
        ProvisioningStatus: ""
        Type: ""
        SerialNumber: ""
        CurrentNetworkingStatus:
          NtpStatus:
            IpAddress: ""
            NtpServerName: ""
            ConnectionStatus: ""
          LastUpdatedTime: ""
          Ethernet1Status:
            IpAddress: ""
            ConnectionStatus: ""
            HwAddress: ""
          Ethernet0Status:
            IpAddress: ""
            ConnectionStatus: ""
            HwAddress: ""
        LatestDeviceJob:
          Status: ""
          JobType: ""
          ImageVersion: ""
        DeviceAggregatedStatus: ""
        LatestSoftware: ""
        Arn: ""
        LatestAlternateSoftware: ""
        LeaseExpirationTime: ""
        Tags: ""
      properties:
        AlternateSoftwares:
          allOf:
          - $ref: '#/components/schemas/AlternateSoftwares'
          - description: Beta software releases available for the device.
          title: AlternateSoftwares
        Arn:
          allOf:
          - $ref: '#/components/schemas/DeviceArn'
          - description: The device's ARN.
          title: Arn
        Brand:
          allOf:
          - $ref: '#/components/schemas/DeviceBrand'
          - description: The device's maker.
          title: Brand
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTime'
          - description: When the device was created.
          title: CreatedTime
        CurrentNetworkingStatus:
          $ref: '#/components/schemas/DescribeDeviceResponse_CurrentNetworkingStatus'
        CurrentSoftware:
          allOf:
          - $ref: '#/components/schemas/CurrentSoftware'
          - description: The device's current software version.
          title: CurrentSoftware
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The device's description.
          title: Description
        DeviceAggregatedStatus:
          allOf:
          - $ref: '#/components/schemas/DeviceAggregatedStatus'
          - description: "A device's aggregated status. Including the device's connection\
              \ status, provisioning status, and lease status."
          title: DeviceAggregatedStatus
        DeviceConnectionStatus:
          allOf:
          - $ref: '#/components/schemas/DeviceConnectionStatus'
          - description: The device's connection status.
          title: DeviceConnectionStatus
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: The device's ID.
          title: DeviceId
        LatestAlternateSoftware:
          allOf:
          - $ref: '#/components/schemas/LatestAlternateSoftware'
          - description: The most recent beta software release.
          title: LatestAlternateSoftware
        LatestDeviceJob:
          $ref: '#/components/schemas/DescribeDeviceResponse_LatestDeviceJob'
        LatestSoftware:
          allOf:
          - $ref: '#/components/schemas/LatestSoftware'
          - description: The latest software version available for the device.
          title: LatestSoftware
        LeaseExpirationTime:
          allOf:
          - $ref: '#/components/schemas/LeaseExpirationTime'
          - description: The device's lease expiration time.
          title: LeaseExpirationTime
        Name:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          - description: The device's name.
          title: Name
        NetworkingConfiguration:
          $ref: '#/components/schemas/DescribeDeviceResponse_NetworkingConfiguration'
        ProvisioningStatus:
          allOf:
          - $ref: '#/components/schemas/DeviceStatus'
          - description: The device's provisioning status.
          title: ProvisioningStatus
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/DeviceSerialNumber'
          - description: The device's serial number.
          title: SerialNumber
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The device's tags.
          title: Tags
        Type:
          allOf:
          - $ref: '#/components/schemas/DeviceType'
          - description: The device's type.
          title: Type
      title: DescribeDeviceResponse
      type: object
    DescribeDeviceJobResponse:
      example:
        Status: ""
        DeviceType: ""
        CreatedTime: ""
        JobType: ""
        ImageVersion: ""
        DeviceArn: ""
        DeviceId: ""
        JobId: ""
        DeviceName: ""
      properties:
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/UpdateCreatedTime'
          - description: When the job was created.
          title: CreatedTime
        DeviceArn:
          allOf:
          - $ref: '#/components/schemas/DeviceArn'
          - description: The device's ARN.
          title: DeviceArn
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: The device's ID.
          title: DeviceId
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          - description: The device's name.
          title: DeviceName
        DeviceType:
          allOf:
          - $ref: '#/components/schemas/DeviceType'
          - description: The device's type.
          title: DeviceType
        ImageVersion:
          allOf:
          - $ref: '#/components/schemas/ImageVersion'
          - description: "For an OTA job, the target version of the device software."
          title: ImageVersion
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The job's ID.
          title: JobId
        JobType:
          allOf:
          - $ref: '#/components/schemas/JobType'
          - description: The job's type.
          title: JobType
        Status:
          allOf:
          - $ref: '#/components/schemas/UpdateProgress'
          - description: The job's status.
          title: Status
      title: DescribeDeviceJobResponse
      type: object
    DescribeNodeResponse:
      example:
        PatchVersion: ""
        Category: ""
        CreatedTime: ""
        Description: ""
        PackageName: ""
        PackageArn: ""
        LastUpdatedTime: ""
        PackageVersion: ""
        AssetName: ""
        Name: ""
        NodeId: ""
        PackageId: ""
        OwnerAccount: ""
        NodeInterface:
          Outputs: ""
          Inputs: ""
      properties:
        AssetName:
          allOf:
          - $ref: '#/components/schemas/NodeAssetName'
          - description: The node's asset name.
          title: AssetName
        Category:
          allOf:
          - $ref: '#/components/schemas/NodeCategory'
          - description: The node's category.
          title: Category
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: When the node was created.
          title: CreatedTime
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The node's description.
          title: Description
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: When the node was updated.
          title: LastUpdatedTime
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The node's name.
          title: Name
        NodeId:
          allOf:
          - $ref: '#/components/schemas/NodeId'
          - description: The node's ID.
          title: NodeId
        NodeInterface:
          $ref: '#/components/schemas/DescribeNodeResponse_NodeInterface'
        OwnerAccount:
          allOf:
          - $ref: '#/components/schemas/PackageOwnerAccount'
          - description: The account ID of the node's owner.
          title: OwnerAccount
        PackageArn:
          allOf:
          - $ref: '#/components/schemas/NodePackageArn'
          - description: The node's ARN.
          title: PackageArn
        PackageId:
          allOf:
          - $ref: '#/components/schemas/NodePackageId'
          - description: The node's package ID.
          title: PackageId
        PackageName:
          allOf:
          - $ref: '#/components/schemas/NodePackageName'
          - description: The node's package name.
          title: PackageName
        PackageVersion:
          allOf:
          - $ref: '#/components/schemas/NodePackageVersion'
          - description: The node's package version.
          title: PackageVersion
        PatchVersion:
          allOf:
          - $ref: '#/components/schemas/NodePackagePatchVersion'
          - description: The node's patch version.
          title: PatchVersion
      required:
      - Category
      - CreatedTime
      - Description
      - LastUpdatedTime
      - Name
      - NodeId
      - NodeInterface
      - OwnerAccount
      - PackageId
      - PackageName
      - PackageVersion
      - PatchVersion
      title: DescribeNodeResponse
      type: object
    DescribeNodeFromTemplateJobResponse:
      example:
        Status: ""
        NodeDescription: ""
        OutputPackageVersion: ""
        TemplateParameters: ""
        CreatedTime: ""
        JobTags: ""
        NodeName: ""
        LastUpdatedTime: ""
        TemplateType: ""
        JobId: ""
        OutputPackageName: ""
        StatusMessage: ""
      properties:
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTime'
          - description: When the job was created.
          title: CreatedTime
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The job's ID.
          title: JobId
        JobTags:
          allOf:
          - $ref: '#/components/schemas/JobTagsList'
          - description: The job's tags.
          title: JobTags
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedTime'
          - description: When the job was updated.
          title: LastUpdatedTime
        NodeDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The node's description.
          title: NodeDescription
        NodeName:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The node's name.
          title: NodeName
        OutputPackageName:
          allOf:
          - $ref: '#/components/schemas/NodePackageName'
          - description: The job's output package name.
          title: OutputPackageName
        OutputPackageVersion:
          allOf:
          - $ref: '#/components/schemas/NodePackageVersion'
          - description: The job's output package version.
          title: OutputPackageVersion
        Status:
          allOf:
          - $ref: '#/components/schemas/NodeFromTemplateJobStatus'
          - description: The job's status.
          title: Status
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/NodeFromTemplateJobStatusMessage'
          - description: The job's status message.
          title: StatusMessage
        TemplateParameters:
          allOf:
          - $ref: '#/components/schemas/TemplateParametersMap'
          - description: The job's template parameters.
          title: TemplateParameters
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          - description: The job's template type.
          title: TemplateType
      required:
      - CreatedTime
      - JobId
      - LastUpdatedTime
      - NodeName
      - OutputPackageName
      - OutputPackageVersion
      - Status
      - StatusMessage
      - TemplateParameters
      - TemplateType
      title: DescribeNodeFromTemplateJobResponse
      type: object
    DescribePackageResponse:
      example:
        CreatedTime: ""
        PackageName: ""
        ReadAccessPrincipalArns: ""
        PackageId: ""
        WriteAccessPrincipalArns: ""
        Arn: ""
        StorageLocation:
          BinaryPrefixLocation: ""
          GeneratedPrefixLocation: ""
          RepoPrefixLocation: ""
          Bucket: ""
          ManifestPrefixLocation: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NodePackageArn'
          - description: The package's ARN.
          title: Arn
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: When the package was created.
          title: CreatedTime
        PackageId:
          allOf:
          - $ref: '#/components/schemas/NodePackageId'
          - description: The package's ID.
          title: PackageId
        PackageName:
          allOf:
          - $ref: '#/components/schemas/NodePackageName'
          - description: The package's name.
          title: PackageName
        ReadAccessPrincipalArns:
          allOf:
          - $ref: '#/components/schemas/PrincipalArnsList'
          - description: ARNs of accounts that have read access to the package.
          title: ReadAccessPrincipalArns
        StorageLocation:
          $ref: '#/components/schemas/CreatePackageResponse_StorageLocation'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The package's tags.
          title: Tags
        WriteAccessPrincipalArns:
          allOf:
          - $ref: '#/components/schemas/PrincipalArnsList'
          - description: ARNs of accounts that have write access to the package.
          title: WriteAccessPrincipalArns
      required:
      - Arn
      - CreatedTime
      - PackageId
      - PackageName
      - StorageLocation
      - Tags
      title: DescribePackageResponse
      type: object
    DescribePackageImportJobResponse:
      example:
        Status: ""
        CreatedTime: ""
        JobType: ""
        OutputConfig:
          PackageVersionOutputConfig:
            PackageName: ""
            MarkLatest: ""
            PackageVersion: ""
        JobTags: ""
        Output:
          PatchVersion: ""
          PackageId: ""
          OutputS3Location:
            BucketName: ""
            ObjectKey: ""
          PackageVersion: ""
        LastUpdatedTime: ""
        InputConfig:
          PackageVersionInputConfig:
            S3Location:
              BucketName: ""
              ObjectKey: ""
              Region: ""
        ClientToken: ""
        JobId: ""
        StatusMessage: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: The job's client token.
          title: ClientToken
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTime'
          - description: When the job was created.
          title: CreatedTime
        InputConfig:
          $ref: '#/components/schemas/DescribePackageImportJobResponse_InputConfig'
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The job's ID.
          title: JobId
        JobTags:
          allOf:
          - $ref: '#/components/schemas/JobTagsList'
          - description: The job's tags.
          title: JobTags
        JobType:
          allOf:
          - $ref: '#/components/schemas/PackageImportJobType'
          - description: The job's type.
          title: JobType
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedTime'
          - description: When the job was updated.
          title: LastUpdatedTime
        Output:
          $ref: '#/components/schemas/DescribePackageImportJobResponse_Output'
        OutputConfig:
          $ref: '#/components/schemas/DescribePackageImportJobResponse_OutputConfig'
        Status:
          allOf:
          - $ref: '#/components/schemas/PackageImportJobStatus'
          - description: The job's status.
          title: Status
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/PackageImportJobStatusMessage'
          - description: The job's status message.
          title: StatusMessage
      required:
      - CreatedTime
      - InputConfig
      - JobId
      - JobType
      - LastUpdatedTime
      - Output
      - OutputConfig
      - Status
      - StatusMessage
      title: DescribePackageImportJobResponse
      type: object
    DescribePackageVersionResponse:
      example:
        Status: ""
        PatchVersion: ""
        PackageName: ""
        StatusDescription: ""
        IsLatestPatch: ""
        PackageArn: ""
        PackageId: ""
        OwnerAccount: ""
        PackageVersion: ""
        RegisteredTime: ""
      properties:
        IsLatestPatch:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the version is the latest available.
          title: IsLatestPatch
        OwnerAccount:
          allOf:
          - $ref: '#/components/schemas/PackageOwnerAccount'
          - description: The account ID of the version's owner.
          title: OwnerAccount
        PackageArn:
          allOf:
          - $ref: '#/components/schemas/NodePackageArn'
          - description: The ARN of the package.
          title: PackageArn
        PackageId:
          allOf:
          - $ref: '#/components/schemas/NodePackageId'
          - description: The version's ID.
          title: PackageId
        PackageName:
          allOf:
          - $ref: '#/components/schemas/NodePackageName'
          - description: The version's name.
          title: PackageName
        PackageVersion:
          allOf:
          - $ref: '#/components/schemas/NodePackageVersion'
          - description: The version's version.
          title: PackageVersion
        PatchVersion:
          allOf:
          - $ref: '#/components/schemas/NodePackagePatchVersion'
          - description: The version's patch version.
          title: PatchVersion
        RegisteredTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: The version's registered time.
          title: RegisteredTime
        Status:
          allOf:
          - $ref: '#/components/schemas/PackageVersionStatus'
          - description: The version's status.
          title: Status
        StatusDescription:
          allOf:
          - $ref: '#/components/schemas/PackageVersionStatusDescription'
          - description: The version's status description.
          title: StatusDescription
      required:
      - IsLatestPatch
      - PackageId
      - PackageName
      - PackageVersion
      - PatchVersion
      - Status
      title: DescribePackageVersionResponse
      type: object
    ListApplicationInstanceDependenciesResponse:
      example:
        PackageObjects: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A pagination token that's included if more results are available.
          title: NextToken
        PackageObjects:
          allOf:
          - $ref: '#/components/schemas/PackageObjects'
          - description: A list of package objects.
          title: PackageObjects
      title: ListApplicationInstanceDependenciesResponse
      type: object
    ListApplicationInstanceNodeInstancesResponse:
      example:
        NextToken: ""
        NodeInstances: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A pagination token that's included if more results are available.
          title: NextToken
        NodeInstances:
          allOf:
          - $ref: '#/components/schemas/NodeInstances'
          - description: A list of node instances.
          title: NodeInstances
      title: ListApplicationInstanceNodeInstancesResponse
      type: object
    ListApplicationInstancesResponse:
      example:
        NextToken: ""
        ApplicationInstances: ""
      properties:
        ApplicationInstances:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstances'
          - description: A list of application instances.
          title: ApplicationInstances
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A pagination token that's included if more results are available.
          title: NextToken
      title: ListApplicationInstancesResponse
      type: object
    ListDevicesResponse:
      example:
        NextToken: ""
        Devices: ""
      properties:
        Devices:
          allOf:
          - $ref: '#/components/schemas/DeviceList'
          - description: A list of devices.
          title: Devices
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A pagination token that's included if more results are available.
          title: NextToken
      required:
      - Devices
      title: ListDevicesResponse
      type: object
    ListDevicesJobsResponse:
      example:
        DeviceJobs: ""
        NextToken: ""
      properties:
        DeviceJobs:
          allOf:
          - $ref: '#/components/schemas/DeviceJobList'
          - description: A list of jobs.
          title: DeviceJobs
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A pagination token that's included if more results are available.
          title: NextToken
      title: ListDevicesJobsResponse
      type: object
    ListNodeFromTemplateJobsResponse:
      example:
        NextToken: ""
        NodeFromTemplateJobs: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A pagination token that's included if more results are available.
          title: NextToken
        NodeFromTemplateJobs:
          allOf:
          - $ref: '#/components/schemas/NodeFromTemplateJobList'
          - description: A list of jobs.
          title: NodeFromTemplateJobs
      required:
      - NodeFromTemplateJobs
      title: ListNodeFromTemplateJobsResponse
      type: object
    ListNodesResponse:
      example:
        NextToken: ""
        Nodes: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: A pagination token that's included if more results are available.
          title: NextToken
        Nodes:
          allOf:
          - $ref: '#/components/schemas/NodesList'
          - description: A list of nodes.
          title: Nodes
      title: ListNodesResponse
      type: object
    ListPackageImportJobsResponse:
      example:
        NextToken: ""
        PackageImportJobs: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A pagination token that's included if more results are available.
          title: NextToken
        PackageImportJobs:
          allOf:
          - $ref: '#/components/schemas/PackageImportJobList'
          - description: A list of package import jobs.
          title: PackageImportJobs
      required:
      - PackageImportJobs
      title: ListPackageImportJobsResponse
      type: object
    ListPackagesResponse:
      example:
        NextToken: ""
        Packages: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A pagination token that's included if more results are available.
          title: NextToken
        Packages:
          allOf:
          - $ref: '#/components/schemas/PackageList'
          - description: A list of packages.
          title: Packages
      title: ListPackagesResponse
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: A list of tags.
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    ProvisionDeviceResponse:
      example:
        IotThingName: ""
        Status: ""
        DeviceId: ""
        Certificates: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DeviceArn'
          - description: The device's ARN.
          title: Arn
        Certificates:
          allOf:
          - $ref: '#/components/schemas/Certificates'
          - description: The device's configuration bundle.
          title: Certificates
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: The device's ID.
          title: DeviceId
        IotThingName:
          allOf:
          - $ref: '#/components/schemas/IotThingName'
          - description: The device's IoT thing name.
          title: IotThingName
        Status:
          allOf:
          - $ref: '#/components/schemas/DeviceStatus'
          - description: The device's status.
          title: Status
      required:
      - Arn
      - Status
      title: ProvisionDeviceResponse
      type: object
    EthernetPayload:
      description: A device's network configuration.
      properties:
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/ConnectionType'
          - description: How the device gets an IP address.
          title: ConnectionType
        StaticIpConnectionInfo:
          $ref: '#/components/schemas/EthernetPayload_StaticIpConnectionInfo'
      required:
      - ConnectionType
      title: EthernetPayload
      type: object
    NtpPayload:
      description: Network time protocol (NTP) server settings. Use this option to
        connect to local NTP servers instead of <code>pool.ntp.org</code>.
      properties:
        NtpServers:
          allOf:
          - $ref: '#/components/schemas/NtpServerList'
          - description: "NTP servers to use, in order of preference."
          title: NtpServers
      required:
      - NtpServers
      title: NtpPayload
      type: object
    RegisterPackageVersionResponse:
      properties: {}
      type: object
    RemoveApplicationInstanceResponse:
      properties: {}
      type: object
    SignalApplicationInstanceNodeInstancesResponse:
      example:
        ApplicationInstanceId: ""
      properties:
        ApplicationInstanceId:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceId'
          - description: An application instance ID.
          title: ApplicationInstanceId
      required:
      - ApplicationInstanceId
      title: SignalApplicationInstanceNodeInstancesResponse
      type: object
    NodeSignal:
      description: A signal to a camera node to start or stop processing video.
      properties:
        NodeInstanceId:
          allOf:
          - $ref: '#/components/schemas/NodeInstanceId'
          - description: "The camera node's name, from the application manifest."
          title: NodeInstanceId
        Signal:
          allOf:
          - $ref: '#/components/schemas/NodeSignalValue'
          - description: The signal value.
          title: Signal
      required:
      - NodeInstanceId
      - Signal
      title: NodeSignal
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: ^.+$
      title: TagKey
      type: string
    UpdateDeviceMetadataResponse:
      example:
        DeviceId: ""
      properties:
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: The device's ID.
          title: DeviceId
      title: UpdateDeviceMetadataResponse
      type: object
    Version:
      maxLength: 255
      minLength: 1
      type: string
    AlternateSoftwareMetadata:
      description: Details about a beta appliance software update.
      properties:
        Version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The appliance software version.
          title: Version
      title: AlternateSoftwareMetadata
      type: object
    AlternateSoftwares:
      items:
        $ref: '#/components/schemas/AlternateSoftwareMetadata'
      type: array
    ApplicationInstanceId:
      maxLength: 255
      minLength: 1
      pattern: "^[a-zA-Z0-9\\-\\_]+$"
      type: string
    ApplicationInstanceArn:
      maxLength: 255
      minLength: 1
      type: string
    TimeStamp:
      format: date-time
      type: string
    DefaultRuntimeContextDevice:
      maxLength: 255
      minLength: 1
      pattern: "^[a-zA-Z0-9\\-\\_]+$"
      type: string
    DeviceName:
      maxLength: 255
      minLength: 1
      pattern: "^[a-zA-Z0-9\\-\\_]+$"
      type: string
    Description:
      maxLength: 255
      minLength: 0
      pattern: ^.*$
      type: string
    ApplicationInstanceHealthStatus:
      enum:
      - RUNNING
      - ERROR
      - NOT_AVAILABLE
      title: ApplicationInstanceHealthStatus
      type: string
    ApplicationInstanceName:
      maxLength: 255
      minLength: 1
      pattern: "^[a-zA-Z0-9\\-\\_]+$"
      type: string
    ReportedRuntimeContextStates:
      items:
        $ref: '#/components/schemas/ReportedRuntimeContextState'
      type: array
    ApplicationInstanceStatus:
      enum:
      - DEPLOYMENT_PENDING
      - DEPLOYMENT_REQUESTED
      - DEPLOYMENT_IN_PROGRESS
      - DEPLOYMENT_ERROR
      - DEPLOYMENT_SUCCEEDED
      - REMOVAL_PENDING
      - REMOVAL_REQUESTED
      - REMOVAL_IN_PROGRESS
      - REMOVAL_FAILED
      - REMOVAL_SUCCEEDED
      - DEPLOYMENT_FAILED
      title: ApplicationInstanceStatus
      type: string
    ApplicationInstanceStatusDescription:
      maxLength: 255
      minLength: 1
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 0
      type: object
    ApplicationInstance:
      description: An application instance on a device.
      properties:
        ApplicationInstanceId:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceId'
          - description: The application instance's ID.
          title: ApplicationInstanceId
        Arn:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceArn'
          - description: The application instance's ARN.
          title: Arn
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: When the application instance was created.
          title: CreatedTime
        DefaultRuntimeContextDevice:
          allOf:
          - $ref: '#/components/schemas/DefaultRuntimeContextDevice'
          - description: The device's ID.
          title: DefaultRuntimeContextDevice
        DefaultRuntimeContextDeviceName:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          - description: The device's name.
          title: DefaultRuntimeContextDeviceName
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The application instance's description.
          title: Description
        HealthStatus:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceHealthStatus'
          - description: The application instance's health status.
          title: HealthStatus
        Name:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceName'
          - description: The application instance's name.
          title: Name
        RuntimeContextStates:
          allOf:
          - $ref: '#/components/schemas/ReportedRuntimeContextStates'
          - description: The application's state.
          title: RuntimeContextStates
        Status:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceStatus'
          - description: The application instance's status.
          title: Status
        StatusDescription:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceStatusDescription'
          - description: The application instance's status description.
          title: StatusDescription
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The application instance's tags.
          title: Tags
      title: ApplicationInstance
      type: object
    ApplicationInstances:
      items:
        $ref: '#/components/schemas/ApplicationInstance'
      type: array
    Boolean:
      type: boolean
    Bucket:
      type: string
    BucketName:
      maxLength: 255
      minLength: 1
      pattern: ^.+$
      type: string
    Certificates:
      type: string
    ClientToken:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z0-9\\-\\_]+$"
      type: string
    ConnectionType:
      enum:
      - STATIC_IP
      - DHCP
      title: ConnectionType
      type: string
    ManifestOverridesPayload:
      description: Parameter overrides for an application instance. This is a JSON
        document that has a single key (<code>PayloadData</code>) where the value
        is an escaped string representation of the overrides document.
      properties:
        PayloadData:
          allOf:
          - $ref: '#/components/schemas/ManifestOverridesPayloadData'
          - description: The overrides document.
          title: PayloadData
      title: ManifestOverridesPayload
      type: object
    ManifestPayload:
      description: A application verion's manifest file. This is a JSON document that
        has a single key (<code>PayloadData</code>) where the value is an escaped
        string representation of the application manifest (<code>graph.json</code>).
        This file is located in the <code>graphs</code> folder in your application
        source.
      properties:
        PayloadData:
          allOf:
          - $ref: '#/components/schemas/ManifestPayloadData'
          - description: The application manifest.
          title: PayloadData
      title: ManifestPayload
      type: object
    RuntimeRoleArn:
      maxLength: 255
      minLength: 1
      pattern: "^arn:[a-z0-9][-.a-z0-9]{0,62}:iam::[0-9]{12}:role/.+$"
      type: string
    CreateApplicationInstanceRequest:
      example:
        DefaultRuntimeContextDevice: ""
        ApplicationInstanceIdToReplace: ""
        Description: ""
        ManifestOverridesPayload:
          PayloadData: ""
        ManifestPayload:
          PayloadData: ""
        RuntimeRoleArn: ""
        Tags: ""
        Name: ""
      properties:
        ApplicationInstanceIdToReplace:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceId'
          - description: The ID of an application instance to replace with the new
              instance.
        DefaultRuntimeContextDevice:
          allOf:
          - $ref: '#/components/schemas/DefaultRuntimeContextDevice'
          - description: A device's ID.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description for the application instance.
        ManifestOverridesPayload:
          $ref: '#/components/schemas/CreateApplicationInstanceRequest_ManifestOverridesPayload'
        ManifestPayload:
          $ref: '#/components/schemas/CreateApplicationInstanceRequest_ManifestPayload'
        Name:
          allOf:
          - $ref: '#/components/schemas/ApplicationInstanceName'
          - description: A name for the application instance.
        RuntimeRoleArn:
          allOf:
          - $ref: '#/components/schemas/RuntimeRoleArn'
          - description: The ARN of a runtime role for the application instance.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: Tags for the application instance.
      required:
      - DefaultRuntimeContextDevice
      - ManifestPayload
      title: CreateApplicationInstanceRequest
      type: object
    DeviceIdList:
      items:
        $ref: '#/components/schemas/DeviceId'
      maxItems: 1
      minItems: 1
      type: array
    DeviceJobConfig:
      description: A job's configuration.
      properties:
        OTAJobConfig:
          $ref: '#/components/schemas/CreateJobForDevices_request_DeviceJobConfig_OTAJobConfig'
      title: DeviceJobConfig
      type: object
    JobType:
      enum:
      - OTA
      - REBOOT
      title: JobType
      type: string
    CreateJobForDevicesRequest:
      example:
        DeviceIds: ""
        JobType: ""
        DeviceJobConfig:
          OTAJobConfig:
            ImageVersion: ""
            AllowMajorVersionUpdate: ""
      properties:
        DeviceIds:
          allOf:
          - $ref: '#/components/schemas/DeviceIdList'
          - description: ID of target device.
        DeviceJobConfig:
          $ref: '#/components/schemas/CreateJobForDevicesRequest_DeviceJobConfig'
        JobType:
          allOf:
          - $ref: '#/components/schemas/JobType'
          - description: The type of job to run.
      required:
      - DeviceIds
      - JobType
      title: CreateJobForDevicesRequest
      type: object
    JobList:
      items:
        $ref: '#/components/schemas/Job'
      type: array
    JobTagsList:
      items:
        $ref: '#/components/schemas/JobResourceTags'
      type: array
    NodeName:
      maxLength: 128
      minLength: 1
      pattern: "^[a-zA-Z0-9\\-\\_]+$"
      type: string
    NodePackageName:
      maxLength: 128
      minLength: 1
      pattern: "^[a-zA-Z0-9\\-\\_]+$"
      type: string
    NodePackageVersion:
      maxLength: 255
      minLength: 1
      pattern: "^([0-9]+)\\.([0-9]+)$"
      type: string
    TemplateParametersMap:
      additionalProperties:
        $ref: '#/components/schemas/TemplateValue'
      type: object
    TemplateType:
      enum:
      - RTSP_CAMERA_STREAM
      title: TemplateType
      type: string
    CreateNodeFromTemplateJobRequest:
      example:
        NodeDescription: ""
        OutputPackageVersion: ""
        TemplateParameters: ""
        JobTags: ""
        NodeName: ""
        TemplateType: ""
        OutputPackageName: ""
      properties:
        JobTags:
          allOf:
          - $ref: '#/components/schemas/JobTagsList'
          - description: Tags for the job.
        NodeDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description for the node.
        NodeName:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: A name for the node.
        OutputPackageName:
          allOf:
          - $ref: '#/components/schemas/NodePackageName'
          - description: An output package name for the node.
        OutputPackageVersion:
          allOf:
          - $ref: '#/components/schemas/NodePackageVersion'
          - description: An output package version for the node.
        TemplateParameters:
          allOf:
          - $ref: '#/components/schemas/TemplateParametersMap'
          - description: Template parameters for the node.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          - description: The type of node.
      required:
      - NodeName
      - OutputPackageName
      - OutputPackageVersion
      - TemplateParameters
      - TemplateType
      title: CreateNodeFromTemplateJobRequest
      type: object
    JobId:
      maxLength: 255
      minLength: 1
      pattern: "^[a-zA-Z0-9\\-\\_]+$"
      type: string
    PackageImportJobInputConfig:
      description: A configuration for a package import job.
      properties:
        PackageVersionInputConfig:
          $ref: '#/components/schemas/CreatePackageImportJob_request_InputConfig_PackageVersionInputConfig'
      title: PackageImportJobInputConfig
      type: object
    PackageImportJobType:
      enum:
      - NODE_PACKAGE_VERSION
      - MARKETPLACE_NODE_PACKAGE_VERSION
      title: PackageImportJobType
      type: string
    PackageImportJobOutputConfig:
      description: An output configuration for a package import job.
      properties:
        PackageVersionOutputConfig:
          $ref: '#/components/schemas/CreatePackageImportJob_request_OutputConfig_PackageVersionOutputConfig'
      title: PackageImportJobOutputConfig
      type: object
    CreatePackageImportJobRequest:
      example:
        JobType: ""
        OutputConfig:
          PackageVersionOutputConfig:
            PackageName: ""
            MarkLatest: ""
            PackageVersion: ""
        JobTags: ""
        InputConfig:
          PackageVersionInputConfig:
            S3Location:
              BucketName: ""
              ObjectKey: ""
              Region: ""
        ClientToken: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: A client token for the package import job.
        InputConfig:
          $ref: '#/components/schemas/CreatePackageImportJobRequest_InputConfig'
        JobTags:
          allOf:
          - $ref: '#/components/schemas/JobTagsList'
          - description: Tags for the package import job.
        JobType:
          allOf:
          - $ref: '#/components/schemas/PackageImportJobType'
          - description: A job type for the package import job.
        OutputConfig:
          $ref: '#/components/schemas/CreatePackageImportJobRequest_OutputConfig'
      required:
      - ClientToken
      - InputConfig
      - JobType
      - OutputConfig
      title: CreatePackageImportJobRequest
      type: object
    CreatePackageRequest:
      example:
        PackageName: ""
        Tags: ""
      properties:
        PackageName:
          allOf:
          - $ref: '#/components/schemas/NodePackageName'
          - description: A name for the package.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: Tags for the package.
      required:
      - PackageName
      title: CreatePackageRequest
      type: object
    NodePackageArn:
      maxLength: 255
      minLength: 1
      type: string
    NodePackageId:
      maxLength: 255
      minLength: 1
      pattern: "^[a-zA-Z0-9\\-\\_\\/]+$"
      type: string
    StorageLocation:
      description: A storage location.
      properties:
        BinaryPrefixLocation:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: The location's binary prefix.
          title: BinaryPrefixLocation
        Bucket:
          allOf:
          - $ref: '#/components/schemas/Bucket'
          - description: The location's bucket.
          title: Bucket
        GeneratedPrefixLocation:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: The location's generated prefix.
          title: GeneratedPrefixLocation
        ManifestPrefixLocation:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: The location's manifest prefix.
          title: ManifestPrefixLocation
        RepoPrefixLocation:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: The location's repo prefix.
          title: RepoPrefixLocation
      required:
      - BinaryPrefixLocation
      - Bucket
      - GeneratedPrefixLocation
      - ManifestPrefixLocation
      - RepoPrefixLocation
      title: StorageLocation
      type: object
    CreatedTime:
      format: date-time
      type: string
    CurrentSoftware:
      maxLength: 255
      minLength: 1
      type: string
    DefaultGateway:
      maxLength: 255
      minLength: 1
      pattern: ^.+$
      type: string
    DeleteDeviceRequest:
      properties: {}
      title: DeleteDeviceRequest
      type: object
    DeletePackageRequest:
      properties: {}
      title: DeletePackageRequest
      type: object
    PackageOwnerAccount:
      maxLength: 12
      minLength: 1
      pattern: "^[0-9a-z\\_]+$"
      type: string
    NodePackagePatchVersion:
      maxLength: 255
      minLength: 1
      pattern: "^[a-z0-9]+$"
      type: string
    DeregisterPackageVersionRequest:
      properties: {}
      title: DeregisterPackageVersionRequest
      type: object
    DescribeApplicationInstanceDetailsRequest:
      properties: {}
      title: DescribeApplicationInstanceDetailsRequest
      type: object
    DescribeApplicationInstanceRequest:
      properties: {}
      title: DescribeApplicationInstanceRequest
      type: object
    DescribeDeviceJobRequest:
      properties: {}
      title: DescribeDeviceJobRequest
      type: object
    UpdateCreatedTime:
      format: date-time
      type: string
    DeviceArn:
      maxLength: 255
      minLength: 1
      type: string
    DeviceType:
      enum:
      - PANORAMA_APPLIANCE_DEVELOPER_KIT
      - PANORAMA_APPLIANCE
      title: DeviceType
      type: string
    ImageVersion:
      maxLength: 255
      minLength: 1
      pattern: ^.+$
      type: string
    UpdateProgress:
      enum:
      - PENDING
      - IN_PROGRESS
      - VERIFYING
      - REBOOTING
      - DOWNLOADING
      - COMPLETED
      - FAILED
      title: UpdateProgress
      type: string
    DescribeDeviceRequest:
      properties: {}
      title: DescribeDeviceRequest
      type: object
    DeviceBrand:
      enum:
      - AWS_PANORAMA
      - LENOVO
      title: DeviceBrand
      type: string
    NetworkStatus:
      description: The network status of a device.
      properties:
        Ethernet0Status:
          $ref: '#/components/schemas/NetworkStatus_Ethernet0Status'
        Ethernet1Status:
          $ref: '#/components/schemas/NetworkStatus_Ethernet1Status'
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedTime'
          - description: When the network status changed.
          title: LastUpdatedTime
        NtpStatus:
          $ref: '#/components/schemas/NetworkStatus_NtpStatus'
      title: NetworkStatus
      type: object
    DeviceAggregatedStatus:
      enum:
      - ERROR
      - AWAITING_PROVISIONING
      - PENDING
      - FAILED
      - DELETING
      - ONLINE
      - OFFLINE
      - LEASE_EXPIRED
      - UPDATE_NEEDED
      - REBOOTING
      title: DeviceAggregatedStatus
      type: string
    DeviceConnectionStatus:
      enum:
      - ONLINE
      - OFFLINE
      - AWAITING_CREDENTIALS
      - NOT_AVAILABLE
      - ERROR
      title: DeviceConnectionStatus
      type: string
    LatestAlternateSoftware:
      maxLength: 255
      minLength: 1
      type: string
    LatestDeviceJob:
      description: Returns information about the latest device job.
      properties:
        ImageVersion:
          allOf:
          - $ref: '#/components/schemas/ImageVersion'
          - description: The target version of the device software.
          title: ImageVersion
        JobType:
          allOf:
          - $ref: '#/components/schemas/JobType'
          - description: The job's type.
          title: JobType
        Status:
          allOf:
          - $ref: '#/components/schemas/UpdateProgress'
          - description: Status of the latest device job.
          title: Status
      title: LatestDeviceJob
      type: object
    LatestSoftware:
      maxLength: 255
      minLength: 1
      type: string
    LeaseExpirationTime:
      format: date-time
      type: string
    NetworkPayload:
      description: The network configuration for a device.
      properties:
        Ethernet0:
          $ref: '#/components/schemas/ProvisionDevice_request_NetworkingConfiguration_Ethernet0'
        Ethernet1:
          $ref: '#/components/schemas/ProvisionDevice_request_NetworkingConfiguration_Ethernet1'
        Ntp:
          $ref: '#/components/schemas/ProvisionDevice_request_NetworkingConfiguration_Ntp'
      title: NetworkPayload
      type: object
    DeviceStatus:
      enum:
      - AWAITING_PROVISIONING
      - PENDING
      - SUCCEEDED
      - FAILED
      - ERROR
      - DELETING
      title: DeviceStatus
      type: string
    DeviceSerialNumber:
      pattern: "^[0-9]{1,20}$"
      type: string
    DescribeNodeFromTemplateJobRequest:
      properties: {}
      title: DescribeNodeFromTemplateJobRequest
      type: object
    LastUpdatedTime:
      format: date-time
      type: string
    NodeFromTemplateJobStatus:
      enum:
      - PENDING
      - SUCCEEDED
      - FAILED
      title: NodeFromTemplateJobStatus
      type: string
    NodeFromTemplateJobStatusMessage:
      type: string
    NodeId:
      maxLength: 255
      minLength: 1
      pattern: "^[a-zA-Z0-9\\-\\_\\.]+$"
      type: string
    DescribeNodeRequest:
      properties: {}
      title: DescribeNodeRequest
      type: object
    NodeAssetName:
      maxLength: 255
      minLength: 1
      pattern: "^[a-zA-Z0-9\\-\\_]+$"
      type: string
    NodeCategory:
      enum:
      - BUSINESS_LOGIC
      - ML_MODEL
      - MEDIA_SOURCE
      - MEDIA_SINK
      title: NodeCategory
      type: string
    NodeInterface:
      description: A node interface.
      properties:
        Inputs:
          allOf:
          - $ref: '#/components/schemas/InputPortList'
          - description: The node interface's inputs.
          title: Inputs
        Outputs:
          allOf:
          - $ref: '#/components/schemas/OutputPortList'
          - description: The node interface's outputs.
          title: Outputs
      required:
      - Inputs
      - Outputs
      title: NodeInterface
      type: object
    DescribePackageImportJobRequest:
      properties: {}
      title: DescribePackageImportJobRequest
      type: object
    PackageImportJobOutput:
      description: Results of a package import job.
      properties:
        OutputS3Location:
          $ref: '#/components/schemas/PackageImportJobOutput_OutputS3Location'
        PackageId:
          allOf:
          - $ref: '#/components/schemas/NodePackageId'
          - description: The package's ID.
          title: PackageId
        PackageVersion:
          allOf:
          - $ref: '#/components/schemas/NodePackageVersion'
          - description: The package's version.
          title: PackageVersion
        PatchVersion:
          allOf:
          - $ref: '#/components/schemas/NodePackagePatchVersion'
          - description: The package's patch version.
          title: PatchVersion
      required:
      - OutputS3Location
      - PackageId
      - PackageVersion
      - PatchVersion
      title: PackageImportJobOutput
      type: object
    PackageImportJobStatus:
      enum:
      - PENDING
      - SUCCEEDED
      - FAILED
      title: PackageImportJobStatus
      type: string
    PackageImportJobStatusMessage:
      type: string
    DescribePackageRequest:
      properties: {}
      title: DescribePackageRequest
      type: object
    PrincipalArnsList:
      items:
        $ref: '#/components/schemas/PrincipalArn'
      type: array
    DescribePackageVersionRequest:
      properties: {}
      title: DescribePackageVersionRequest
      type: object
    PackageVersionStatus:
      enum:
      - REGISTER_PENDING
      - REGISTER_COMPLETED
      - FAILED
      - DELETING
      title: PackageVersionStatus
      type: string
    PackageVersionStatusDescription:
      maxLength: 255
      minLength: 1
      type: string
    DesiredState:
      enum:
      - RUNNING
      - STOPPED
      - REMOVED
      title: DesiredState
      type: string
    Device:
      description: A device.
      properties:
        Brand:
          allOf:
          - $ref: '#/components/schemas/DeviceBrand'
          - description: The device's maker.
          title: Brand
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTime'
          - description: When the device was created.
          title: CreatedTime
        CurrentSoftware:
          allOf:
          - $ref: '#/components/schemas/CurrentSoftware'
          - description: A device's current software.
          title: CurrentSoftware
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description for the device.
          title: Description
        DeviceAggregatedStatus:
          allOf:
          - $ref: '#/components/schemas/DeviceAggregatedStatus'
          - description: "A device's aggregated status. Including the device's connection\
              \ status, provisioning status, and lease status."
          title: DeviceAggregatedStatus
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: The device's ID.
          title: DeviceId
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedTime'
          - description: When the device was updated.
          title: LastUpdatedTime
        LatestDeviceJob:
          $ref: '#/components/schemas/Device_LatestDeviceJob'
        LeaseExpirationTime:
          allOf:
          - $ref: '#/components/schemas/LeaseExpirationTime'
          - description: The device's lease expiration time.
          title: LeaseExpirationTime
        Name:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          - description: The device's name.
          title: Name
        ProvisioningStatus:
          allOf:
          - $ref: '#/components/schemas/DeviceStatus'
          - description: The device's provisioning status.
          title: ProvisioningStatus
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The device's tags.
          title: Tags
        Type:
          allOf:
          - $ref: '#/components/schemas/DeviceType'
          - description: The device's type.
          title: Type
      title: Device
      type: object
    DeviceJob:
      description: A job that runs on a device.
      properties:
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTime'
          - description: When the job was created.
          title: CreatedTime
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: The ID of the target device.
          title: DeviceId
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          - description: The name of the target device
          title: DeviceName
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The job's ID.
          title: JobId
        JobType:
          allOf:
          - $ref: '#/components/schemas/JobType'
          - description: The job's type.
          title: JobType
      title: DeviceJob
      type: object
    DeviceJobList:
      items:
        $ref: '#/components/schemas/DeviceJob'
      type: array
    DeviceList:
      items:
        $ref: '#/components/schemas/Device'
      type: array
    DeviceReportedStatus:
      enum:
      - STOPPING
      - STOPPED
      - STOP_ERROR
      - REMOVAL_FAILED
      - REMOVAL_IN_PROGRESS
      - STARTING
      - RUNNING
      - INSTALL_ERROR
      - LAUNCHED
      - LAUNCH_ERROR
      - INSTALL_IN_PROGRESS
      title: DeviceReportedStatus
      type: string
    Dns:
      maxLength: 255
      minLength: 1
      pattern: ^.+$
      title: Dns
      type: string
    DnsList:
      items:
        $ref: '#/components/schemas/Dns'
      type: array
    StaticIpConnectionInfo:
      description: A static IP configuration.
      properties:
        DefaultGateway:
          allOf:
          - $ref: '#/components/schemas/DefaultGateway'
          - description: The connection's default gateway.
          title: DefaultGateway
        Dns:
          allOf:
          - $ref: '#/components/schemas/DnsList'
          - description: The connection's DNS address.
          title: Dns
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/IpAddress'
          - description: The connection's IP address.
          title: IpAddress
        Mask:
          allOf:
          - $ref: '#/components/schemas/Mask'
          - description: The connection's DNS mask.
          title: Mask
      required:
      - DefaultGateway
      - Dns
      - IpAddress
      - Mask
      title: StaticIpConnectionInfo
      type: object
    NetworkConnectionStatus:
      enum:
      - CONNECTED
      - NOT_CONNECTED
      - CONNECTING
      title: NetworkConnectionStatus
      type: string
    HwAddress:
      maxLength: 255
      minLength: 1
      type: string
    IpAddress:
      maxLength: 255
      minLength: 1
      pattern: "^((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\\
        d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\\
        d\\d|[1-9]?\\d))(:(6553[0-5]|655[0-2]\\d|65[0-4]\\d{2}|6[0-4]\\d{3}|[1-5]\\\
        d{4}|[1-9]\\d{0,3}))?$"
      type: string
    EthernetStatus:
      description: A device's Ethernet status.
      properties:
        ConnectionStatus:
          allOf:
          - $ref: '#/components/schemas/NetworkConnectionStatus'
          - description: The device's connection status.
          title: ConnectionStatus
        HwAddress:
          allOf:
          - $ref: '#/components/schemas/HwAddress'
          - description: The device's physical address.
          title: HwAddress
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/IpAddress'
          - description: The device's IP address.
          title: IpAddress
      title: EthernetStatus
      type: object
    NodeInputPort:
      description: A node input port.
      properties:
        DefaultValue:
          allOf:
          - $ref: '#/components/schemas/PortDefaultValue'
          - description: The input port's default value.
          title: DefaultValue
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The input port's description.
          title: Description
        MaxConnections:
          allOf:
          - $ref: '#/components/schemas/MaxConnections'
          - description: The input port's max connections.
          title: MaxConnections
        Name:
          allOf:
          - $ref: '#/components/schemas/PortName'
          - description: The input port's name.
          title: Name
        Type:
          allOf:
          - $ref: '#/components/schemas/PortType'
          - description: The input port's type.
          title: Type
      title: NodeInputPort
      type: object
    InputPortList:
      items:
        $ref: '#/components/schemas/NodeInputPort'
      type: array
    IotThingName:
      maxLength: 255
      minLength: 1
      type: string
    IpAddressOrServerName:
      maxLength: 255
      minLength: 1
      pattern: "(^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$)|(^((25[0-5]|2[0-4]\\d|1\\\
        d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\\
        d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d))(:(6553[0-5]|655[0-2]\\\
        d|65[0-4]\\d{2}|6[0-4]\\d{3}|[1-5]\\d{4}|[1-9]\\d{0,3}))?$)"
      title: IpAddressOrServerName
      type: string
    Job:
      description: A job for a device.
      properties:
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: The target device's ID.
          title: DeviceId
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The job's ID.
          title: JobId
      title: Job
      type: object
    JobResourceType:
      enum:
      - PACKAGE
      title: JobResourceType
      type: string
    MaxSize25:
      maximum: 25
      minimum: 0
      type: integer
    NextToken:
      maxLength: 4096
      minLength: 1
      pattern: ^.+$
      type: string
    ListApplicationInstanceDependenciesRequest:
      properties: {}
      title: ListApplicationInstanceDependenciesRequest
      type: object
    PackageObjects:
      items:
        $ref: '#/components/schemas/PackageObject'
      type: array
    ListApplicationInstanceNodeInstancesRequest:
      properties: {}
      title: ListApplicationInstanceNodeInstancesRequest
      type: object
    NodeInstances:
      items:
        $ref: '#/components/schemas/NodeInstance'
      type: array
    StatusFilter:
      enum:
      - DEPLOYMENT_SUCCEEDED
      - DEPLOYMENT_ERROR
      - REMOVAL_SUCCEEDED
      - REMOVAL_FAILED
      - PROCESSING_DEPLOYMENT
      - PROCESSING_REMOVAL
      - DEPLOYMENT_FAILED
      type: string
    ListApplicationInstancesRequest:
      properties: {}
      title: ListApplicationInstancesRequest
      type: object
    ListDevicesJobsRequest:
      properties: {}
      title: ListDevicesJobsRequest
      type: object
    NameFilter:
      type: string
    ListDevicesSortBy:
      enum:
      - DEVICE_ID
      - CREATED_TIME
      - NAME
      - DEVICE_AGGREGATED_STATUS
      type: string
    SortOrder:
      enum:
      - ASCENDING
      - DESCENDING
      type: string
    ListDevicesRequest:
      properties: {}
      title: ListDevicesRequest
      type: object
    ListNodeFromTemplateJobsRequest:
      properties: {}
      title: ListNodeFromTemplateJobsRequest
      type: object
    NodeFromTemplateJobList:
      items:
        $ref: '#/components/schemas/NodeFromTemplateJob'
      type: array
    Token:
      maxLength: 4096
      minLength: 1
      pattern: ^.+$
      type: string
    ListNodesRequest:
      properties: {}
      title: ListNodesRequest
      type: object
    NodesList:
      items:
        $ref: '#/components/schemas/Node'
      type: array
    ListPackageImportJobsRequest:
      properties: {}
      title: ListPackageImportJobsRequest
      type: object
    PackageImportJobList:
      items:
        $ref: '#/components/schemas/PackageImportJob'
      type: array
    ListPackagesRequest:
      properties: {}
      title: ListPackagesRequest
      type: object
    PackageList:
      items:
        $ref: '#/components/schemas/PackageListItem'
      type: array
    ResourceArn:
      maxLength: 2048
      minLength: 1
      pattern: ^.+$
      type: string
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    MarkLatestPatch:
      type: boolean
    Mask:
      maxLength: 255
      minLength: 1
      pattern: ^.+$
      type: string
    MaxConnections:
      type: integer
    NtpStatus:
      description: Details about an NTP server connection.
      properties:
        ConnectionStatus:
          allOf:
          - $ref: '#/components/schemas/NetworkConnectionStatus'
          - description: The connection's status.
          title: ConnectionStatus
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/IpAddress'
          - description: The IP address of the server.
          title: IpAddress
        NtpServerName:
          allOf:
          - $ref: '#/components/schemas/NtpServerName'
          - description: The domain name of the server.
          title: NtpServerName
      title: NtpStatus
      type: object
    Node:
      description: "An application node that represents a camera stream, a model,\
        \ code, or output."
      properties:
        Category:
          allOf:
          - $ref: '#/components/schemas/NodeCategory'
          - description: The node's category.
          title: Category
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: When the node was created.
          title: CreatedTime
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The node's description.
          title: Description
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The node's name.
          title: Name
        NodeId:
          allOf:
          - $ref: '#/components/schemas/NodeId'
          - description: The node's ID.
          title: NodeId
        OwnerAccount:
          allOf:
          - $ref: '#/components/schemas/PackageOwnerAccount'
          - description: The account ID of the node's owner.
          title: OwnerAccount
        PackageArn:
          allOf:
          - $ref: '#/components/schemas/NodePackageArn'
          - description: The node's ARN.
          title: PackageArn
        PackageId:
          allOf:
          - $ref: '#/components/schemas/NodePackageId'
          - description: The node's package ID.
          title: PackageId
        PackageName:
          allOf:
          - $ref: '#/components/schemas/NodePackageName'
          - description: The node's package name.
          title: PackageName
        PackageVersion:
          allOf:
          - $ref: '#/components/schemas/NodePackageVersion'
          - description: The node's package version.
          title: PackageVersion
        PatchVersion:
          allOf:
          - $ref: '#/components/schemas/NodePackagePatchVersion'
          - description: The node's patch version.
          title: PatchVersion
      required:
      - Category
      - CreatedTime
      - Name
      - NodeId
      - PackageId
      - PackageName
      - PackageVersion
      - PatchVersion
      title: Node
      type: object
    NodeFromTemplateJob:
      description: A job to create a camera stream node.
      properties:
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTime'
          - description: When the job was created.
          title: CreatedTime
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The job's ID.
          title: JobId
        NodeName:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The node's name.
          title: NodeName
        Status:
          allOf:
          - $ref: '#/components/schemas/NodeFromTemplateJobStatus'
          - description: The job's status.
          title: Status
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/NodeFromTemplateJobStatusMessage'
          - description: The job's status message.
          title: StatusMessage
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          - description: The job's template type.
          title: TemplateType
      title: NodeFromTemplateJob
      type: object
    PortDefaultValue:
      maxLength: 255
      minLength: 1
      type: string
    PortName:
      maxLength: 50
      minLength: 1
      pattern: "^[a-zA-Z0-9\\_]+$"
      type: string
    PortType:
      enum:
      - BOOLEAN
      - STRING
      - INT32
      - FLOAT32
      - MEDIA
      title: PortType
      type: string
    NodeInstanceStatus:
      enum:
      - RUNNING
      - ERROR
      - NOT_AVAILABLE
      - PAUSED
      title: NodeInstanceStatus
      type: string
    NodeInstanceId:
      maxLength: 128
      minLength: 1
      pattern: "^[a-zA-Z0-9\\-\\_]+$"
      type: string
    NodeInstance:
      description: A node instance.
      properties:
        CurrentStatus:
          allOf:
          - $ref: '#/components/schemas/NodeInstanceStatus'
          - description: The instance's current status.
          title: CurrentStatus
        NodeId:
          allOf:
          - $ref: '#/components/schemas/NodeId'
          - description: The node's ID.
          title: NodeId
        NodeInstanceId:
          allOf:
          - $ref: '#/components/schemas/NodeInstanceId'
          - description: The instance's ID.
          title: NodeInstanceId
        NodeName:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The instance's name.
          title: NodeName
        PackageName:
          allOf:
          - $ref: '#/components/schemas/NodePackageName'
          - description: The instance's package name.
          title: PackageName
        PackagePatchVersion:
          allOf:
          - $ref: '#/components/schemas/NodePackagePatchVersion'
          - description: The instance's package patch version.
          title: PackagePatchVersion
        PackageVersion:
          allOf:
          - $ref: '#/components/schemas/NodePackageVersion'
          - description: The instance's package version.
          title: PackageVersion
      required:
      - CurrentStatus
      - NodeInstanceId
      title: NodeInstance
      type: object
    OutputPortList:
      items:
        $ref: '#/components/schemas/NodeOutputPort'
      type: array
    NodeOutputPort:
      description: A node output port.
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The output port's description.
          title: Description
        Name:
          allOf:
          - $ref: '#/components/schemas/PortName'
          - description: The output port's name.
          title: Name
        Type:
          allOf:
          - $ref: '#/components/schemas/PortType'
          - description: The output port's type.
          title: Type
      title: NodeOutputPort
      type: object
    NodeSignalValue:
      enum:
      - PAUSE
      - RESUME
      title: NodeSignalValue
      type: string
    NodeSignalList:
      items:
        $ref: '#/components/schemas/NodeSignal'
      minItems: 1
      type: array
    NtpServerList:
      items:
        $ref: '#/components/schemas/IpAddressOrServerName'
      maxItems: 5
      minItems: 0
      type: array
    NtpServerName:
      maxLength: 255
      minLength: 1
      type: string
    Object:
      type: string
    ObjectKey:
      maxLength: 255
      minLength: 1
      pattern: ^.+$
      type: string
    OutPutS3Location:
      description: The location of an output object in Amazon S3.
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: The object's bucket.
          title: BucketName
        ObjectKey:
          allOf:
          - $ref: '#/components/schemas/ObjectKey'
          - description: The object's key.
          title: ObjectKey
      required:
      - BucketName
      - ObjectKey
      title: OutPutS3Location
      type: object
    PackageImportJob:
      description: A job to import a package version.
      properties:
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTime'
          - description: When the job was created.
          title: CreatedTime
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The job's ID.
          title: JobId
        JobType:
          allOf:
          - $ref: '#/components/schemas/PackageImportJobType'
          - description: The job's type.
          title: JobType
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedTime'
          - description: When the job was updated.
          title: LastUpdatedTime
        Status:
          allOf:
          - $ref: '#/components/schemas/PackageImportJobStatus'
          - description: The job's status.
          title: Status
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/PackageImportJobStatusMessage'
          - description: The job's status message.
          title: StatusMessage
      title: PackageImportJob
      type: object
    PackageListItem:
      description: A package summary.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NodePackageArn'
          - description: The package's ARN.
          title: Arn
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: When the package was created.
          title: CreatedTime
        PackageId:
          allOf:
          - $ref: '#/components/schemas/NodePackageId'
          - description: The package's ID.
          title: PackageId
        PackageName:
          allOf:
          - $ref: '#/components/schemas/NodePackageName'
          - description: The package's name.
          title: PackageName
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The package's tags.
          title: Tags
      title: PackageListItem
      type: object
    PackageObject:
      description: A package object.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodePackageName'
          - description: The object's name.
          title: Name
        PackageVersion:
          allOf:
          - $ref: '#/components/schemas/NodePackageVersion'
          - description: The object's package version.
          title: PackageVersion
        PatchVersion:
          allOf:
          - $ref: '#/components/schemas/NodePackagePatchVersion'
          - description: The object's patch version.
          title: PatchVersion
      required:
      - Name
      - PackageVersion
      - PatchVersion
      title: PackageObject
      type: object
    S3Location:
      description: A location in Amazon S3.
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: A bucket name.
          title: BucketName
        ObjectKey:
          allOf:
          - $ref: '#/components/schemas/ObjectKey'
          - description: An object key.
          title: ObjectKey
        Region:
          allOf:
          - $ref: '#/components/schemas/Region'
          - description: The bucket's Region.
          title: Region
      required:
      - BucketName
      - ObjectKey
      title: S3Location
      type: object
    PrincipalArn:
      maxLength: 255
      minLength: 1
      pattern: "^arn:[a-z0-9][-.a-z0-9]{0,62}:iam::[0-9]{12}:[a-zA-Z0-9+=,.@\\-_/]+$"
      title: PrincipalArn
      type: string
    ProvisionDeviceRequest:
      example:
        Description: ""
        NetworkingConfiguration:
          Ntp:
            NtpServers: ""
          Ethernet0:
            ConnectionType: ""
            StaticIpConnectionInfo:
              DefaultGateway: ""
              Dns: ""
              Mask: ""
              IpAddress: ""
          Ethernet1:
            ConnectionType: ""
            StaticIpConnectionInfo:
              DefaultGateway: ""
              Dns: ""
              Mask: ""
              IpAddress: ""
        Tags: ""
        Name: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description for the device.
        Name:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          - description: A name for the device.
        NetworkingConfiguration:
          $ref: '#/components/schemas/ProvisionDeviceRequest_NetworkingConfiguration'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: Tags for the device.
      required:
      - Name
      title: ProvisionDeviceRequest
      type: object
    Region:
      maxLength: 255
      minLength: 1
      pattern: ^.+$
      type: string
    RegisterPackageVersionRequest:
      example:
        MarkLatest: ""
        OwnerAccount: ""
      properties:
        MarkLatest:
          allOf:
          - $ref: '#/components/schemas/MarkLatestPatch'
          - description: Whether to mark the new version as the latest version.
        OwnerAccount:
          allOf:
          - $ref: '#/components/schemas/PackageOwnerAccount'
          - description: An owner account.
      title: RegisterPackageVersionRequest
      type: object
    RemoveApplicationInstanceRequest:
      properties: {}
      title: RemoveApplicationInstanceRequest
      type: object
    RuntimeContextName:
      maxLength: 255
      minLength: 1
      pattern: ^.+$
      type: string
    ReportedRuntimeContextState:
      description: An application instance's state.
      properties:
        DesiredState:
          allOf:
          - $ref: '#/components/schemas/DesiredState'
          - description: The application's desired state.
          title: DesiredState
        DeviceReportedStatus:
          allOf:
          - $ref: '#/components/schemas/DeviceReportedStatus'
          - description: The application's reported status.
          title: DeviceReportedStatus
        DeviceReportedTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: When the device reported the application's state.
          title: DeviceReportedTime
        RuntimeContextName:
          allOf:
          - $ref: '#/components/schemas/RuntimeContextName'
          - description: The device's name.
          title: RuntimeContextName
      required:
      - DesiredState
      - DeviceReportedStatus
      - DeviceReportedTime
      - RuntimeContextName
      title: ReportedRuntimeContextState
      type: object
    SignalApplicationInstanceNodeInstancesRequest:
      example:
        NodeSignals: ""
      properties:
        NodeSignals:
          allOf:
          - $ref: '#/components/schemas/NodeSignalList'
          - description: A list of signals.
      required:
      - NodeSignals
      title: SignalApplicationInstanceNodeInstancesRequest
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: Tags for the resource.
      required:
      - Tags
      title: TagResourceRequest
      type: object
    TemplateKey:
      maxLength: 255
      minLength: 1
      pattern: ^.+$
      type: string
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateDeviceMetadataRequest:
      example:
        Description: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description for the device.
      title: UpdateDeviceMetadataRequest
      type: object
    CreateApplicationInstance_request_ManifestOverridesPayload:
      description: Parameter overrides for an application instance. This is a JSON
        document that has a single key (<code>PayloadData</code>) where the value
        is an escaped string representation of the overrides document.
      properties:
        PayloadData:
          allOf:
          - $ref: '#/components/schemas/ManifestOverridesPayloadData'
          - description: The overrides document.
          title: PayloadData
      title: CreateApplicationInstance_request_ManifestOverridesPayload
      type: object
    CreateApplicationInstance_request_ManifestPayload:
      description: A application verion's manifest file. This is a JSON document that
        has a single key (<code>PayloadData</code>) where the value is an escaped
        string representation of the application manifest (<code>graph.json</code>).
        This file is located in the <code>graphs</code> folder in your application
        source.
      properties:
        PayloadData:
          allOf:
          - $ref: '#/components/schemas/ManifestPayloadData'
          - description: The application manifest.
          title: PayloadData
      title: CreateApplicationInstance_request_ManifestPayload
      type: object
    CreateApplicationInstance_request:
      properties:
        ApplicationInstanceIdToReplace:
          description: The ID of an application instance to replace with the new instance.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          title: ApplicationInstanceIdToReplace
          type: string
        DefaultRuntimeContextDevice:
          description: A device's ID.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          title: DefaultRuntimeContextDevice
          type: string
        Description:
          description: A description for the application instance.
          maxLength: 255
          minLength: 0
          pattern: ^.*$
          title: Description
          type: string
        ManifestOverridesPayload:
          $ref: '#/components/schemas/CreateApplicationInstance_request_ManifestOverridesPayload'
        ManifestPayload:
          $ref: '#/components/schemas/CreateApplicationInstance_request_ManifestPayload'
        Name:
          description: A name for the application instance.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          title: Name
          type: string
        RuntimeRoleArn:
          description: The ARN of a runtime role for the application instance.
          maxLength: 255
          minLength: 1
          pattern: "^arn:[a-z0-9][-.a-z0-9]{0,62}:iam::[0-9]{12}:role/.+$"
          title: RuntimeRoleArn
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Tags for the application instance.
          maxProperties: 50
          minProperties: 0
          title: Tags
          type: object
      required:
      - DefaultRuntimeContextDevice
      - ManifestPayload
      title: CreateApplicationInstance_request
      type: object
    CreateJobForDevices_request_DeviceJobConfig_OTAJobConfig:
      allOf:
      - $ref: '#/components/schemas/OTAJobConfig'
      - description: A configuration for an over-the-air (OTA) upgrade. Required for
          OTA jobs.
      example:
        ImageVersion: ""
        AllowMajorVersionUpdate: ""
      title: CreateJobForDevices_request_DeviceJobConfig_OTAJobConfig
    CreateJobForDevices_request_DeviceJobConfig:
      description: A job's configuration.
      properties:
        OTAJobConfig:
          $ref: '#/components/schemas/CreateJobForDevices_request_DeviceJobConfig_OTAJobConfig'
      title: CreateJobForDevices_request_DeviceJobConfig
      type: object
    CreateJobForDevices_request:
      properties:
        DeviceIds:
          description: ID of target device.
          items:
            $ref: '#/components/schemas/DeviceId'
          maxItems: 1
          minItems: 1
          title: DeviceIds
          type: array
        DeviceJobConfig:
          $ref: '#/components/schemas/CreateJobForDevices_request_DeviceJobConfig'
        JobType:
          description: The type of job to run.
          enum:
          - OTA
          - REBOOT
          title: JobType
          type: string
      required:
      - DeviceIds
      - JobType
      title: CreateJobForDevices_request
      type: object
    CreateNodeFromTemplateJob_request:
      properties:
        JobTags:
          description: Tags for the job.
          items:
            $ref: '#/components/schemas/JobResourceTags'
          title: JobTags
          type: array
        NodeDescription:
          description: A description for the node.
          maxLength: 255
          minLength: 0
          pattern: ^.*$
          title: NodeDescription
          type: string
        NodeName:
          description: A name for the node.
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          title: NodeName
          type: string
        OutputPackageName:
          description: An output package name for the node.
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          title: OutputPackageName
          type: string
        OutputPackageVersion:
          description: An output package version for the node.
          maxLength: 255
          minLength: 1
          pattern: "^([0-9]+)\\.([0-9]+)$"
          title: OutputPackageVersion
          type: string
        TemplateParameters:
          additionalProperties:
            $ref: '#/components/schemas/TemplateValue'
          description: Template parameters for the node.
          title: TemplateParameters
          type: object
        TemplateType:
          description: The type of node.
          enum:
          - RTSP_CAMERA_STREAM
          title: TemplateType
          type: string
      required:
      - NodeName
      - OutputPackageName
      - OutputPackageVersion
      - TemplateParameters
      - TemplateType
      title: CreateNodeFromTemplateJob_request
      type: object
    CreatePackage_request:
      properties:
        PackageName:
          description: A name for the package.
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          title: PackageName
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Tags for the package.
          maxProperties: 50
          minProperties: 0
          title: Tags
          type: object
      required:
      - PackageName
      title: CreatePackage_request
      type: object
    CreatePackageImportJob_request_InputConfig_PackageVersionInputConfig:
      allOf:
      - $ref: '#/components/schemas/PackageVersionInputConfig'
      - description: The package version's input configuration.
      example:
        S3Location:
          BucketName: ""
          ObjectKey: ""
          Region: ""
      title: CreatePackageImportJob_request_InputConfig_PackageVersionInputConfig
    CreatePackageImportJob_request_InputConfig:
      description: A configuration for a package import job.
      properties:
        PackageVersionInputConfig:
          $ref: '#/components/schemas/CreatePackageImportJob_request_InputConfig_PackageVersionInputConfig'
      title: CreatePackageImportJob_request_InputConfig
      type: object
    CreatePackageImportJob_request_OutputConfig_PackageVersionOutputConfig:
      allOf:
      - $ref: '#/components/schemas/PackageVersionOutputConfig'
      - description: The package version's output configuration.
      example:
        PackageName: ""
        MarkLatest: ""
        PackageVersion: ""
      title: CreatePackageImportJob_request_OutputConfig_PackageVersionOutputConfig
    CreatePackageImportJob_request_OutputConfig:
      description: An output configuration for a package import job.
      properties:
        PackageVersionOutputConfig:
          $ref: '#/components/schemas/CreatePackageImportJob_request_OutputConfig_PackageVersionOutputConfig'
      title: CreatePackageImportJob_request_OutputConfig
      type: object
    CreatePackageImportJob_request:
      properties:
        ClientToken:
          description: A client token for the package import job.
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          title: ClientToken
          type: string
        InputConfig:
          $ref: '#/components/schemas/CreatePackageImportJob_request_InputConfig'
        JobTags:
          description: Tags for the package import job.
          items:
            $ref: '#/components/schemas/JobResourceTags'
          title: JobTags
          type: array
        JobType:
          description: A job type for the package import job.
          enum:
          - NODE_PACKAGE_VERSION
          - MARKETPLACE_NODE_PACKAGE_VERSION
          title: JobType
          type: string
        OutputConfig:
          $ref: '#/components/schemas/CreatePackageImportJob_request_OutputConfig'
      required:
      - ClientToken
      - InputConfig
      - JobType
      - OutputConfig
      title: CreatePackageImportJob_request
      type: object
    UpdateDeviceMetadata_request:
      properties:
        Description:
          description: A description for the device.
          maxLength: 255
          minLength: 0
          pattern: ^.*$
          title: Description
          type: string
      title: UpdateDeviceMetadata_request
      type: object
    RegisterPackageVersion_request:
      properties:
        MarkLatest:
          description: Whether to mark the new version as the latest version.
          title: MarkLatest
          type: boolean
        OwnerAccount:
          description: An owner account.
          maxLength: 12
          minLength: 1
          pattern: "^[0-9a-z\\_]+$"
          title: OwnerAccount
          type: string
      title: RegisterPackageVersion_request
      type: object
    ProvisionDevice_request_NetworkingConfiguration_Ethernet0:
      allOf:
      - $ref: '#/components/schemas/EthernetPayload'
      - description: Settings for Ethernet port 0.
      example:
        ConnectionType: ""
        StaticIpConnectionInfo:
          DefaultGateway: ""
          Dns: ""
          Mask: ""
          IpAddress: ""
      title: ProvisionDevice_request_NetworkingConfiguration_Ethernet0
    ProvisionDevice_request_NetworkingConfiguration_Ethernet1:
      allOf:
      - $ref: '#/components/schemas/EthernetPayload'
      - description: Settings for Ethernet port 1.
      example:
        ConnectionType: ""
        StaticIpConnectionInfo:
          DefaultGateway: ""
          Dns: ""
          Mask: ""
          IpAddress: ""
      title: ProvisionDevice_request_NetworkingConfiguration_Ethernet1
    ProvisionDevice_request_NetworkingConfiguration_Ntp:
      allOf:
      - $ref: '#/components/schemas/NtpPayload'
      - description: Network time protocol (NTP) server settings.
      example:
        NtpServers: ""
      title: ProvisionDevice_request_NetworkingConfiguration_Ntp
    ProvisionDevice_request_NetworkingConfiguration:
      description: The network configuration for a device.
      properties:
        Ethernet0:
          $ref: '#/components/schemas/ProvisionDevice_request_NetworkingConfiguration_Ethernet0'
        Ethernet1:
          $ref: '#/components/schemas/ProvisionDevice_request_NetworkingConfiguration_Ethernet1'
        Ntp:
          $ref: '#/components/schemas/ProvisionDevice_request_NetworkingConfiguration_Ntp'
      title: ProvisionDevice_request_NetworkingConfiguration
      type: object
    ProvisionDevice_request:
      properties:
        Description:
          description: A description for the device.
          maxLength: 255
          minLength: 0
          pattern: ^.*$
          title: Description
          type: string
        Name:
          description: A name for the device.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-\\_]+$"
          title: Name
          type: string
        NetworkingConfiguration:
          $ref: '#/components/schemas/ProvisionDevice_request_NetworkingConfiguration'
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Tags for the device.
          maxProperties: 50
          minProperties: 0
          title: Tags
          type: object
      required:
      - Name
      title: ProvisionDevice_request
      type: object
    TagResource_request:
      properties:
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Tags for the resource.
          maxProperties: 50
          minProperties: 0
          title: Tags
          type: object
      required:
      - Tags
      title: TagResource_request
      type: object
    SignalApplicationInstanceNodeInstances_request:
      properties:
        NodeSignals:
          description: A list of signals.
          items:
            $ref: '#/components/schemas/NodeSignal'
          minItems: 1
          title: NodeSignals
          type: array
      required:
      - NodeSignals
      title: SignalApplicationInstanceNodeInstances_request
      type: object
    CreatePackageResponse_StorageLocation:
      allOf:
      - $ref: '#/components/schemas/StorageLocation'
      - description: The package's storage location.
      example:
        BinaryPrefixLocation: ""
        GeneratedPrefixLocation: ""
        RepoPrefixLocation: ""
        Bucket: ""
        ManifestPrefixLocation: ""
      title: CreatePackageResponse_StorageLocation
    PackageVersionInputConfig_S3Location:
      allOf:
      - $ref: '#/components/schemas/S3Location'
      - description: A location in Amazon S3.
      example:
        BucketName: ""
        ObjectKey: ""
        Region: ""
      title: PackageVersionInputConfig_S3Location
    DescribeApplicationInstanceDetailsResponse_ManifestOverridesPayload:
      allOf:
      - $ref: '#/components/schemas/ManifestOverridesPayload'
      - description: Parameter overrides for the configuration manifest.
      example:
        PayloadData: ""
      title: DescribeApplicationInstanceDetailsResponse_ManifestOverridesPayload
    DescribeApplicationInstanceDetailsResponse_ManifestPayload:
      allOf:
      - $ref: '#/components/schemas/ManifestPayload'
      - description: The application instance's configuration manifest.
      example:
        PayloadData: ""
      title: DescribeApplicationInstanceDetailsResponse_ManifestPayload
    DescribeDeviceResponse_CurrentNetworkingStatus:
      allOf:
      - $ref: '#/components/schemas/NetworkStatus'
      - description: The device's networking status.
      example:
        NtpStatus:
          IpAddress: ""
          NtpServerName: ""
          ConnectionStatus: ""
        LastUpdatedTime: ""
        Ethernet1Status:
          IpAddress: ""
          ConnectionStatus: ""
          HwAddress: ""
        Ethernet0Status:
          IpAddress: ""
          ConnectionStatus: ""
          HwAddress: ""
      title: DescribeDeviceResponse_CurrentNetworkingStatus
    DescribeDeviceResponse_LatestDeviceJob:
      allOf:
      - $ref: '#/components/schemas/LatestDeviceJob'
      - description: "A device's latest job. Includes the target image version, and\
          \ the job status."
      example:
        Status: ""
        JobType: ""
        ImageVersion: ""
      title: DescribeDeviceResponse_LatestDeviceJob
    DescribeDeviceResponse_NetworkingConfiguration:
      allOf:
      - $ref: '#/components/schemas/NetworkPayload'
      - description: The device's networking configuration.
      example:
        Ntp:
          NtpServers: ""
        Ethernet0:
          ConnectionType: ""
          StaticIpConnectionInfo:
            DefaultGateway: ""
            Dns: ""
            Mask: ""
            IpAddress: ""
        Ethernet1:
          ConnectionType: ""
          StaticIpConnectionInfo:
            DefaultGateway: ""
            Dns: ""
            Mask: ""
            IpAddress: ""
      title: DescribeDeviceResponse_NetworkingConfiguration
    DescribeNodeResponse_NodeInterface:
      allOf:
      - $ref: '#/components/schemas/NodeInterface'
      - description: The node's interface.
      example:
        Outputs: ""
        Inputs: ""
      title: DescribeNodeResponse_NodeInterface
    DescribePackageImportJobResponse_InputConfig:
      allOf:
      - $ref: '#/components/schemas/PackageImportJobInputConfig'
      - description: The job's input config.
      example:
        PackageVersionInputConfig:
          S3Location:
            BucketName: ""
            ObjectKey: ""
            Region: ""
      title: DescribePackageImportJobResponse_InputConfig
    DescribePackageImportJobResponse_Output:
      allOf:
      - $ref: '#/components/schemas/PackageImportJobOutput'
      - description: The job's output.
      example:
        PatchVersion: ""
        PackageId: ""
        OutputS3Location:
          BucketName: ""
          ObjectKey: ""
        PackageVersion: ""
      title: DescribePackageImportJobResponse_Output
    DescribePackageImportJobResponse_OutputConfig:
      allOf:
      - $ref: '#/components/schemas/PackageImportJobOutputConfig'
      - description: The job's output config.
      example:
        PackageVersionOutputConfig:
          PackageName: ""
          MarkLatest: ""
          PackageVersion: ""
      title: DescribePackageImportJobResponse_OutputConfig
    EthernetPayload_StaticIpConnectionInfo:
      allOf:
      - $ref: '#/components/schemas/StaticIpConnectionInfo'
      - description: Network configuration for a static IP connection.
      example:
        DefaultGateway: ""
        Dns: ""
        Mask: ""
        IpAddress: ""
      title: EthernetPayload_StaticIpConnectionInfo
    CreateApplicationInstanceRequest_ManifestOverridesPayload:
      allOf:
      - $ref: '#/components/schemas/ManifestOverridesPayload'
      - description: Setting overrides for the application manifest.
      example:
        PayloadData: ""
      title: CreateApplicationInstanceRequest_ManifestOverridesPayload
    CreateApplicationInstanceRequest_ManifestPayload:
      allOf:
      - $ref: '#/components/schemas/ManifestPayload'
      - description: The application's manifest document.
      example:
        PayloadData: ""
      title: CreateApplicationInstanceRequest_ManifestPayload
    CreateJobForDevicesRequest_DeviceJobConfig:
      allOf:
      - $ref: '#/components/schemas/DeviceJobConfig'
      - description: Configuration settings for a software update job.
      example:
        OTAJobConfig:
          ImageVersion: ""
          AllowMajorVersionUpdate: ""
      title: CreateJobForDevicesRequest_DeviceJobConfig
    CreatePackageImportJobRequest_InputConfig:
      allOf:
      - $ref: '#/components/schemas/PackageImportJobInputConfig'
      - description: An input config for the package import job.
      example:
        PackageVersionInputConfig:
          S3Location:
            BucketName: ""
            ObjectKey: ""
            Region: ""
      title: CreatePackageImportJobRequest_InputConfig
    CreatePackageImportJobRequest_OutputConfig:
      allOf:
      - $ref: '#/components/schemas/PackageImportJobOutputConfig'
      - description: An output config for the package import job.
      example:
        PackageVersionOutputConfig:
          PackageName: ""
          MarkLatest: ""
          PackageVersion: ""
      title: CreatePackageImportJobRequest_OutputConfig
    NetworkStatus_Ethernet0Status:
      allOf:
      - $ref: '#/components/schemas/EthernetStatus'
      - description: The status of Ethernet port 0.
      example:
        IpAddress: ""
        ConnectionStatus: ""
        HwAddress: ""
      title: NetworkStatus_Ethernet0Status
    NetworkStatus_Ethernet1Status:
      allOf:
      - $ref: '#/components/schemas/EthernetStatus'
      - description: The status of Ethernet port 1.
      example:
        IpAddress: ""
        ConnectionStatus: ""
        HwAddress: ""
      title: NetworkStatus_Ethernet1Status
    NetworkStatus_NtpStatus:
      allOf:
      - $ref: '#/components/schemas/NtpStatus'
      - description: Details about a network time protocol (NTP) server connection.
      example:
        IpAddress: ""
        NtpServerName: ""
        ConnectionStatus: ""
      title: NetworkStatus_NtpStatus
    PackageImportJobOutput_OutputS3Location:
      allOf:
      - $ref: '#/components/schemas/OutPutS3Location'
      - description: The package's output location.
      example:
        BucketName: ""
        ObjectKey: ""
      title: PackageImportJobOutput_OutputS3Location
    Device_LatestDeviceJob:
      allOf:
      - $ref: '#/components/schemas/LatestDeviceJob'
      - description: "A device's latest job. Includes the target image version, and\
          \ the update job status."
      title: Device_LatestDeviceJob
    ProvisionDeviceRequest_NetworkingConfiguration:
      allOf:
      - $ref: '#/components/schemas/NetworkPayload'
      - description: A networking configuration for the device.
      example:
        Ntp:
          NtpServers: ""
        Ethernet0:
          ConnectionType: ""
          StaticIpConnectionInfo:
            DefaultGateway: ""
            Dns: ""
            Mask: ""
            IpAddress: ""
        Ethernet1:
          ConnectionType: ""
          StaticIpConnectionInfo:
            DefaultGateway: ""
            Dns: ""
            Mask: ""
            IpAddress: ""
      title: ProvisionDeviceRequest_NetworkingConfiguration
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
