# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device_aggregated_status import DeviceAggregatedStatus
from openapi_server.models.device_brand import DeviceBrand
from openapi_server.models.device_latest_device_job import DeviceLatestDeviceJob
from openapi_server.models.device_status import DeviceStatus
from openapi_server.models.device_type import DeviceType
from openapi_server import util


class Device(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, brand: DeviceBrand=None, created_time: datetime=None, current_software: str=None, description: str=None, device_aggregated_status: DeviceAggregatedStatus=None, device_id: str=None, last_updated_time: datetime=None, latest_device_job: DeviceLatestDeviceJob=None, lease_expiration_time: datetime=None, name: str=None, provisioning_status: DeviceStatus=None, tags: Dict=None, type: DeviceType=None):
        """Device - a model defined in OpenAPI

        :param brand: The brand of this Device.
        :param created_time: The created_time of this Device.
        :param current_software: The current_software of this Device.
        :param description: The description of this Device.
        :param device_aggregated_status: The device_aggregated_status of this Device.
        :param device_id: The device_id of this Device.
        :param last_updated_time: The last_updated_time of this Device.
        :param latest_device_job: The latest_device_job of this Device.
        :param lease_expiration_time: The lease_expiration_time of this Device.
        :param name: The name of this Device.
        :param provisioning_status: The provisioning_status of this Device.
        :param tags: The tags of this Device.
        :param type: The type of this Device.
        """
        self.openapi_types = {
            'brand': DeviceBrand,
            'created_time': datetime,
            'current_software': str,
            'description': str,
            'device_aggregated_status': DeviceAggregatedStatus,
            'device_id': str,
            'last_updated_time': datetime,
            'latest_device_job': DeviceLatestDeviceJob,
            'lease_expiration_time': datetime,
            'name': str,
            'provisioning_status': DeviceStatus,
            'tags': Dict,
            'type': DeviceType
        }

        self.attribute_map = {
            'brand': 'Brand',
            'created_time': 'CreatedTime',
            'current_software': 'CurrentSoftware',
            'description': 'Description',
            'device_aggregated_status': 'DeviceAggregatedStatus',
            'device_id': 'DeviceId',
            'last_updated_time': 'LastUpdatedTime',
            'latest_device_job': 'LatestDeviceJob',
            'lease_expiration_time': 'LeaseExpirationTime',
            'name': 'Name',
            'provisioning_status': 'ProvisioningStatus',
            'tags': 'Tags',
            'type': 'Type'
        }

        self._brand = brand
        self._created_time = created_time
        self._current_software = current_software
        self._description = description
        self._device_aggregated_status = device_aggregated_status
        self._device_id = device_id
        self._last_updated_time = last_updated_time
        self._latest_device_job = latest_device_job
        self._lease_expiration_time = lease_expiration_time
        self._name = name
        self._provisioning_status = provisioning_status
        self._tags = tags
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Device':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Device of this Device.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def brand(self):
        """Gets the brand of this Device.


        :return: The brand of this Device.
        :rtype: DeviceBrand
        """
        return self._brand

    @brand.setter
    def brand(self, brand):
        """Sets the brand of this Device.


        :param brand: The brand of this Device.
        :type brand: DeviceBrand
        """

        self._brand = brand

    @property
    def created_time(self):
        """Gets the created_time of this Device.


        :return: The created_time of this Device.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this Device.


        :param created_time: The created_time of this Device.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def current_software(self):
        """Gets the current_software of this Device.


        :return: The current_software of this Device.
        :rtype: str
        """
        return self._current_software

    @current_software.setter
    def current_software(self, current_software):
        """Sets the current_software of this Device.


        :param current_software: The current_software of this Device.
        :type current_software: str
        """

        self._current_software = current_software

    @property
    def description(self):
        """Gets the description of this Device.


        :return: The description of this Device.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Device.


        :param description: The description of this Device.
        :type description: str
        """

        self._description = description

    @property
    def device_aggregated_status(self):
        """Gets the device_aggregated_status of this Device.


        :return: The device_aggregated_status of this Device.
        :rtype: DeviceAggregatedStatus
        """
        return self._device_aggregated_status

    @device_aggregated_status.setter
    def device_aggregated_status(self, device_aggregated_status):
        """Sets the device_aggregated_status of this Device.


        :param device_aggregated_status: The device_aggregated_status of this Device.
        :type device_aggregated_status: DeviceAggregatedStatus
        """

        self._device_aggregated_status = device_aggregated_status

    @property
    def device_id(self):
        """Gets the device_id of this Device.


        :return: The device_id of this Device.
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this Device.


        :param device_id: The device_id of this Device.
        :type device_id: str
        """

        self._device_id = device_id

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this Device.


        :return: The last_updated_time of this Device.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this Device.


        :param last_updated_time: The last_updated_time of this Device.
        :type last_updated_time: datetime
        """

        self._last_updated_time = last_updated_time

    @property
    def latest_device_job(self):
        """Gets the latest_device_job of this Device.


        :return: The latest_device_job of this Device.
        :rtype: DeviceLatestDeviceJob
        """
        return self._latest_device_job

    @latest_device_job.setter
    def latest_device_job(self, latest_device_job):
        """Sets the latest_device_job of this Device.


        :param latest_device_job: The latest_device_job of this Device.
        :type latest_device_job: DeviceLatestDeviceJob
        """

        self._latest_device_job = latest_device_job

    @property
    def lease_expiration_time(self):
        """Gets the lease_expiration_time of this Device.


        :return: The lease_expiration_time of this Device.
        :rtype: datetime
        """
        return self._lease_expiration_time

    @lease_expiration_time.setter
    def lease_expiration_time(self, lease_expiration_time):
        """Sets the lease_expiration_time of this Device.


        :param lease_expiration_time: The lease_expiration_time of this Device.
        :type lease_expiration_time: datetime
        """

        self._lease_expiration_time = lease_expiration_time

    @property
    def name(self):
        """Gets the name of this Device.


        :return: The name of this Device.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Device.


        :param name: The name of this Device.
        :type name: str
        """

        self._name = name

    @property
    def provisioning_status(self):
        """Gets the provisioning_status of this Device.


        :return: The provisioning_status of this Device.
        :rtype: DeviceStatus
        """
        return self._provisioning_status

    @provisioning_status.setter
    def provisioning_status(self, provisioning_status):
        """Sets the provisioning_status of this Device.


        :param provisioning_status: The provisioning_status of this Device.
        :type provisioning_status: DeviceStatus
        """

        self._provisioning_status = provisioning_status

    @property
    def tags(self):
        """Gets the tags of this Device.


        :return: The tags of this Device.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Device.


        :param tags: The tags of this Device.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def type(self):
        """Gets the type of this Device.


        :return: The type of this Device.
        :rtype: DeviceType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Device.


        :param type: The type of this Device.
        :type type: DeviceType
        """

        self._type = type
