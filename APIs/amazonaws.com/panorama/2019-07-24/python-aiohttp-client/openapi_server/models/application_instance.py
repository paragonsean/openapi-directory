# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_instance_health_status import ApplicationInstanceHealthStatus
from openapi_server.models.application_instance_status import ApplicationInstanceStatus
from openapi_server import util


class ApplicationInstance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_instance_id: str=None, arn: str=None, created_time: datetime=None, default_runtime_context_device: str=None, default_runtime_context_device_name: str=None, description: str=None, health_status: ApplicationInstanceHealthStatus=None, name: str=None, runtime_context_states: List=None, status: ApplicationInstanceStatus=None, status_description: str=None, tags: Dict=None):
        """ApplicationInstance - a model defined in OpenAPI

        :param application_instance_id: The application_instance_id of this ApplicationInstance.
        :param arn: The arn of this ApplicationInstance.
        :param created_time: The created_time of this ApplicationInstance.
        :param default_runtime_context_device: The default_runtime_context_device of this ApplicationInstance.
        :param default_runtime_context_device_name: The default_runtime_context_device_name of this ApplicationInstance.
        :param description: The description of this ApplicationInstance.
        :param health_status: The health_status of this ApplicationInstance.
        :param name: The name of this ApplicationInstance.
        :param runtime_context_states: The runtime_context_states of this ApplicationInstance.
        :param status: The status of this ApplicationInstance.
        :param status_description: The status_description of this ApplicationInstance.
        :param tags: The tags of this ApplicationInstance.
        """
        self.openapi_types = {
            'application_instance_id': str,
            'arn': str,
            'created_time': datetime,
            'default_runtime_context_device': str,
            'default_runtime_context_device_name': str,
            'description': str,
            'health_status': ApplicationInstanceHealthStatus,
            'name': str,
            'runtime_context_states': List,
            'status': ApplicationInstanceStatus,
            'status_description': str,
            'tags': Dict
        }

        self.attribute_map = {
            'application_instance_id': 'ApplicationInstanceId',
            'arn': 'Arn',
            'created_time': 'CreatedTime',
            'default_runtime_context_device': 'DefaultRuntimeContextDevice',
            'default_runtime_context_device_name': 'DefaultRuntimeContextDeviceName',
            'description': 'Description',
            'health_status': 'HealthStatus',
            'name': 'Name',
            'runtime_context_states': 'RuntimeContextStates',
            'status': 'Status',
            'status_description': 'StatusDescription',
            'tags': 'Tags'
        }

        self._application_instance_id = application_instance_id
        self._arn = arn
        self._created_time = created_time
        self._default_runtime_context_device = default_runtime_context_device
        self._default_runtime_context_device_name = default_runtime_context_device_name
        self._description = description
        self._health_status = health_status
        self._name = name
        self._runtime_context_states = runtime_context_states
        self._status = status
        self._status_description = status_description
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationInstance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationInstance of this ApplicationInstance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_instance_id(self):
        """Gets the application_instance_id of this ApplicationInstance.


        :return: The application_instance_id of this ApplicationInstance.
        :rtype: str
        """
        return self._application_instance_id

    @application_instance_id.setter
    def application_instance_id(self, application_instance_id):
        """Sets the application_instance_id of this ApplicationInstance.


        :param application_instance_id: The application_instance_id of this ApplicationInstance.
        :type application_instance_id: str
        """

        self._application_instance_id = application_instance_id

    @property
    def arn(self):
        """Gets the arn of this ApplicationInstance.


        :return: The arn of this ApplicationInstance.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this ApplicationInstance.


        :param arn: The arn of this ApplicationInstance.
        :type arn: str
        """

        self._arn = arn

    @property
    def created_time(self):
        """Gets the created_time of this ApplicationInstance.


        :return: The created_time of this ApplicationInstance.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this ApplicationInstance.


        :param created_time: The created_time of this ApplicationInstance.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def default_runtime_context_device(self):
        """Gets the default_runtime_context_device of this ApplicationInstance.


        :return: The default_runtime_context_device of this ApplicationInstance.
        :rtype: str
        """
        return self._default_runtime_context_device

    @default_runtime_context_device.setter
    def default_runtime_context_device(self, default_runtime_context_device):
        """Sets the default_runtime_context_device of this ApplicationInstance.


        :param default_runtime_context_device: The default_runtime_context_device of this ApplicationInstance.
        :type default_runtime_context_device: str
        """

        self._default_runtime_context_device = default_runtime_context_device

    @property
    def default_runtime_context_device_name(self):
        """Gets the default_runtime_context_device_name of this ApplicationInstance.


        :return: The default_runtime_context_device_name of this ApplicationInstance.
        :rtype: str
        """
        return self._default_runtime_context_device_name

    @default_runtime_context_device_name.setter
    def default_runtime_context_device_name(self, default_runtime_context_device_name):
        """Sets the default_runtime_context_device_name of this ApplicationInstance.


        :param default_runtime_context_device_name: The default_runtime_context_device_name of this ApplicationInstance.
        :type default_runtime_context_device_name: str
        """

        self._default_runtime_context_device_name = default_runtime_context_device_name

    @property
    def description(self):
        """Gets the description of this ApplicationInstance.


        :return: The description of this ApplicationInstance.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ApplicationInstance.


        :param description: The description of this ApplicationInstance.
        :type description: str
        """

        self._description = description

    @property
    def health_status(self):
        """Gets the health_status of this ApplicationInstance.


        :return: The health_status of this ApplicationInstance.
        :rtype: ApplicationInstanceHealthStatus
        """
        return self._health_status

    @health_status.setter
    def health_status(self, health_status):
        """Sets the health_status of this ApplicationInstance.


        :param health_status: The health_status of this ApplicationInstance.
        :type health_status: ApplicationInstanceHealthStatus
        """

        self._health_status = health_status

    @property
    def name(self):
        """Gets the name of this ApplicationInstance.


        :return: The name of this ApplicationInstance.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApplicationInstance.


        :param name: The name of this ApplicationInstance.
        :type name: str
        """

        self._name = name

    @property
    def runtime_context_states(self):
        """Gets the runtime_context_states of this ApplicationInstance.


        :return: The runtime_context_states of this ApplicationInstance.
        :rtype: List
        """
        return self._runtime_context_states

    @runtime_context_states.setter
    def runtime_context_states(self, runtime_context_states):
        """Sets the runtime_context_states of this ApplicationInstance.


        :param runtime_context_states: The runtime_context_states of this ApplicationInstance.
        :type runtime_context_states: List
        """

        self._runtime_context_states = runtime_context_states

    @property
    def status(self):
        """Gets the status of this ApplicationInstance.


        :return: The status of this ApplicationInstance.
        :rtype: ApplicationInstanceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ApplicationInstance.


        :param status: The status of this ApplicationInstance.
        :type status: ApplicationInstanceStatus
        """

        self._status = status

    @property
    def status_description(self):
        """Gets the status_description of this ApplicationInstance.


        :return: The status_description of this ApplicationInstance.
        :rtype: str
        """
        return self._status_description

    @status_description.setter
    def status_description(self, status_description):
        """Sets the status_description of this ApplicationInstance.


        :param status_description: The status_description of this ApplicationInstance.
        :type status_description: str
        """

        self._status_description = status_description

    @property
    def tags(self):
        """Gets the tags of this ApplicationInstance.


        :return: The tags of this ApplicationInstance.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this ApplicationInstance.


        :param tags: The tags of this ApplicationInstance.
        :type tags: Dict
        """

        self._tags = tags
