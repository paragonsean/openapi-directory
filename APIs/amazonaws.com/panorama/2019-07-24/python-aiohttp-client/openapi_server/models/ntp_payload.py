# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NtpPayload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ntp_servers: List=None):
        """NtpPayload - a model defined in OpenAPI

        :param ntp_servers: The ntp_servers of this NtpPayload.
        """
        self.openapi_types = {
            'ntp_servers': List
        }

        self.attribute_map = {
            'ntp_servers': 'NtpServers'
        }

        self._ntp_servers = ntp_servers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NtpPayload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NtpPayload of this NtpPayload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ntp_servers(self):
        """Gets the ntp_servers of this NtpPayload.


        :return: The ntp_servers of this NtpPayload.
        :rtype: List
        """
        return self._ntp_servers

    @ntp_servers.setter
    def ntp_servers(self, ntp_servers):
        """Sets the ntp_servers of this NtpPayload.


        :param ntp_servers: The ntp_servers of this NtpPayload.
        :type ntp_servers: List
        """
        if ntp_servers is None:
            raise ValueError("Invalid value for `ntp_servers`, must not be `None`")

        self._ntp_servers = ntp_servers
