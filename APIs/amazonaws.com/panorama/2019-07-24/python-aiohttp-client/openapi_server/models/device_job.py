# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job_type import JobType
from openapi_server import util


class DeviceJob(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_time: datetime=None, device_id: str=None, device_name: str=None, job_id: str=None, job_type: JobType=None):
        """DeviceJob - a model defined in OpenAPI

        :param created_time: The created_time of this DeviceJob.
        :param device_id: The device_id of this DeviceJob.
        :param device_name: The device_name of this DeviceJob.
        :param job_id: The job_id of this DeviceJob.
        :param job_type: The job_type of this DeviceJob.
        """
        self.openapi_types = {
            'created_time': datetime,
            'device_id': str,
            'device_name': str,
            'job_id': str,
            'job_type': JobType
        }

        self.attribute_map = {
            'created_time': 'CreatedTime',
            'device_id': 'DeviceId',
            'device_name': 'DeviceName',
            'job_id': 'JobId',
            'job_type': 'JobType'
        }

        self._created_time = created_time
        self._device_id = device_id
        self._device_name = device_name
        self._job_id = job_id
        self._job_type = job_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceJob':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceJob of this DeviceJob.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_time(self):
        """Gets the created_time of this DeviceJob.


        :return: The created_time of this DeviceJob.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this DeviceJob.


        :param created_time: The created_time of this DeviceJob.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def device_id(self):
        """Gets the device_id of this DeviceJob.


        :return: The device_id of this DeviceJob.
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this DeviceJob.


        :param device_id: The device_id of this DeviceJob.
        :type device_id: str
        """

        self._device_id = device_id

    @property
    def device_name(self):
        """Gets the device_name of this DeviceJob.


        :return: The device_name of this DeviceJob.
        :rtype: str
        """
        return self._device_name

    @device_name.setter
    def device_name(self, device_name):
        """Sets the device_name of this DeviceJob.


        :param device_name: The device_name of this DeviceJob.
        :type device_name: str
        """

        self._device_name = device_name

    @property
    def job_id(self):
        """Gets the job_id of this DeviceJob.


        :return: The job_id of this DeviceJob.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this DeviceJob.


        :param job_id: The job_id of this DeviceJob.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def job_type(self):
        """Gets the job_type of this DeviceJob.


        :return: The job_type of this DeviceJob.
        :rtype: JobType
        """
        return self._job_type

    @job_type.setter
    def job_type(self, job_type):
        """Sets the job_type of this DeviceJob.


        :param job_type: The job_type of this DeviceJob.
        :type job_type: JobType
        """

        self._job_type = job_type
