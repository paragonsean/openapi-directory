# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_package_response_storage_location import CreatePackageResponseStorageLocation
from openapi_server import util


class DescribePackageResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, created_time: datetime=None, package_id: str=None, package_name: str=None, read_access_principal_arns: List=None, storage_location: CreatePackageResponseStorageLocation=None, tags: Dict=None, write_access_principal_arns: List=None):
        """DescribePackageResponse - a model defined in OpenAPI

        :param arn: The arn of this DescribePackageResponse.
        :param created_time: The created_time of this DescribePackageResponse.
        :param package_id: The package_id of this DescribePackageResponse.
        :param package_name: The package_name of this DescribePackageResponse.
        :param read_access_principal_arns: The read_access_principal_arns of this DescribePackageResponse.
        :param storage_location: The storage_location of this DescribePackageResponse.
        :param tags: The tags of this DescribePackageResponse.
        :param write_access_principal_arns: The write_access_principal_arns of this DescribePackageResponse.
        """
        self.openapi_types = {
            'arn': str,
            'created_time': datetime,
            'package_id': str,
            'package_name': str,
            'read_access_principal_arns': List,
            'storage_location': CreatePackageResponseStorageLocation,
            'tags': Dict,
            'write_access_principal_arns': List
        }

        self.attribute_map = {
            'arn': 'Arn',
            'created_time': 'CreatedTime',
            'package_id': 'PackageId',
            'package_name': 'PackageName',
            'read_access_principal_arns': 'ReadAccessPrincipalArns',
            'storage_location': 'StorageLocation',
            'tags': 'Tags',
            'write_access_principal_arns': 'WriteAccessPrincipalArns'
        }

        self._arn = arn
        self._created_time = created_time
        self._package_id = package_id
        self._package_name = package_name
        self._read_access_principal_arns = read_access_principal_arns
        self._storage_location = storage_location
        self._tags = tags
        self._write_access_principal_arns = write_access_principal_arns

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribePackageResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribePackageResponse of this DescribePackageResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this DescribePackageResponse.


        :return: The arn of this DescribePackageResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this DescribePackageResponse.


        :param arn: The arn of this DescribePackageResponse.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def created_time(self):
        """Gets the created_time of this DescribePackageResponse.


        :return: The created_time of this DescribePackageResponse.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this DescribePackageResponse.


        :param created_time: The created_time of this DescribePackageResponse.
        :type created_time: datetime
        """
        if created_time is None:
            raise ValueError("Invalid value for `created_time`, must not be `None`")

        self._created_time = created_time

    @property
    def package_id(self):
        """Gets the package_id of this DescribePackageResponse.


        :return: The package_id of this DescribePackageResponse.
        :rtype: str
        """
        return self._package_id

    @package_id.setter
    def package_id(self, package_id):
        """Sets the package_id of this DescribePackageResponse.


        :param package_id: The package_id of this DescribePackageResponse.
        :type package_id: str
        """
        if package_id is None:
            raise ValueError("Invalid value for `package_id`, must not be `None`")

        self._package_id = package_id

    @property
    def package_name(self):
        """Gets the package_name of this DescribePackageResponse.


        :return: The package_name of this DescribePackageResponse.
        :rtype: str
        """
        return self._package_name

    @package_name.setter
    def package_name(self, package_name):
        """Sets the package_name of this DescribePackageResponse.


        :param package_name: The package_name of this DescribePackageResponse.
        :type package_name: str
        """
        if package_name is None:
            raise ValueError("Invalid value for `package_name`, must not be `None`")

        self._package_name = package_name

    @property
    def read_access_principal_arns(self):
        """Gets the read_access_principal_arns of this DescribePackageResponse.


        :return: The read_access_principal_arns of this DescribePackageResponse.
        :rtype: List
        """
        return self._read_access_principal_arns

    @read_access_principal_arns.setter
    def read_access_principal_arns(self, read_access_principal_arns):
        """Sets the read_access_principal_arns of this DescribePackageResponse.


        :param read_access_principal_arns: The read_access_principal_arns of this DescribePackageResponse.
        :type read_access_principal_arns: List
        """

        self._read_access_principal_arns = read_access_principal_arns

    @property
    def storage_location(self):
        """Gets the storage_location of this DescribePackageResponse.


        :return: The storage_location of this DescribePackageResponse.
        :rtype: CreatePackageResponseStorageLocation
        """
        return self._storage_location

    @storage_location.setter
    def storage_location(self, storage_location):
        """Sets the storage_location of this DescribePackageResponse.


        :param storage_location: The storage_location of this DescribePackageResponse.
        :type storage_location: CreatePackageResponseStorageLocation
        """
        if storage_location is None:
            raise ValueError("Invalid value for `storage_location`, must not be `None`")

        self._storage_location = storage_location

    @property
    def tags(self):
        """Gets the tags of this DescribePackageResponse.


        :return: The tags of this DescribePackageResponse.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DescribePackageResponse.


        :param tags: The tags of this DescribePackageResponse.
        :type tags: Dict
        """
        if tags is None:
            raise ValueError("Invalid value for `tags`, must not be `None`")

        self._tags = tags

    @property
    def write_access_principal_arns(self):
        """Gets the write_access_principal_arns of this DescribePackageResponse.


        :return: The write_access_principal_arns of this DescribePackageResponse.
        :rtype: List
        """
        return self._write_access_principal_arns

    @write_access_principal_arns.setter
    def write_access_principal_arns(self, write_access_principal_arns):
        """Sets the write_access_principal_arns of this DescribePackageResponse.


        :param write_access_principal_arns: The write_access_principal_arns of this DescribePackageResponse.
        :type write_access_principal_arns: List
        """

        self._write_access_principal_arns = write_access_principal_arns
