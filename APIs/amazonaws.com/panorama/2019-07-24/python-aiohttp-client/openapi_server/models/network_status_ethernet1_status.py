# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.network_connection_status import NetworkConnectionStatus
from openapi_server import util


class NetworkStatusEthernet1Status(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connection_status: NetworkConnectionStatus=None, hw_address: str=None, ip_address: str=None):
        """NetworkStatusEthernet1Status - a model defined in OpenAPI

        :param connection_status: The connection_status of this NetworkStatusEthernet1Status.
        :param hw_address: The hw_address of this NetworkStatusEthernet1Status.
        :param ip_address: The ip_address of this NetworkStatusEthernet1Status.
        """
        self.openapi_types = {
            'connection_status': NetworkConnectionStatus,
            'hw_address': str,
            'ip_address': str
        }

        self.attribute_map = {
            'connection_status': 'ConnectionStatus',
            'hw_address': 'HwAddress',
            'ip_address': 'IpAddress'
        }

        self._connection_status = connection_status
        self._hw_address = hw_address
        self._ip_address = ip_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkStatusEthernet1Status':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkStatus_Ethernet1Status of this NetworkStatusEthernet1Status.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_status(self):
        """Gets the connection_status of this NetworkStatusEthernet1Status.


        :return: The connection_status of this NetworkStatusEthernet1Status.
        :rtype: NetworkConnectionStatus
        """
        return self._connection_status

    @connection_status.setter
    def connection_status(self, connection_status):
        """Sets the connection_status of this NetworkStatusEthernet1Status.


        :param connection_status: The connection_status of this NetworkStatusEthernet1Status.
        :type connection_status: NetworkConnectionStatus
        """

        self._connection_status = connection_status

    @property
    def hw_address(self):
        """Gets the hw_address of this NetworkStatusEthernet1Status.


        :return: The hw_address of this NetworkStatusEthernet1Status.
        :rtype: str
        """
        return self._hw_address

    @hw_address.setter
    def hw_address(self, hw_address):
        """Sets the hw_address of this NetworkStatusEthernet1Status.


        :param hw_address: The hw_address of this NetworkStatusEthernet1Status.
        :type hw_address: str
        """

        self._hw_address = hw_address

    @property
    def ip_address(self):
        """Gets the ip_address of this NetworkStatusEthernet1Status.


        :return: The ip_address of this NetworkStatusEthernet1Status.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this NetworkStatusEthernet1Status.


        :param ip_address: The ip_address of this NetworkStatusEthernet1Status.
        :type ip_address: str
        """

        self._ip_address = ip_address
