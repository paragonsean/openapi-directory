# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_package_response_storage_location import CreatePackageResponseStorageLocation
from openapi_server import util


class CreatePackageResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, package_id: str=None, storage_location: CreatePackageResponseStorageLocation=None):
        """CreatePackageResponse - a model defined in OpenAPI

        :param arn: The arn of this CreatePackageResponse.
        :param package_id: The package_id of this CreatePackageResponse.
        :param storage_location: The storage_location of this CreatePackageResponse.
        """
        self.openapi_types = {
            'arn': str,
            'package_id': str,
            'storage_location': CreatePackageResponseStorageLocation
        }

        self.attribute_map = {
            'arn': 'Arn',
            'package_id': 'PackageId',
            'storage_location': 'StorageLocation'
        }

        self._arn = arn
        self._package_id = package_id
        self._storage_location = storage_location

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreatePackageResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreatePackageResponse of this CreatePackageResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this CreatePackageResponse.


        :return: The arn of this CreatePackageResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this CreatePackageResponse.


        :param arn: The arn of this CreatePackageResponse.
        :type arn: str
        """

        self._arn = arn

    @property
    def package_id(self):
        """Gets the package_id of this CreatePackageResponse.


        :return: The package_id of this CreatePackageResponse.
        :rtype: str
        """
        return self._package_id

    @package_id.setter
    def package_id(self, package_id):
        """Sets the package_id of this CreatePackageResponse.


        :param package_id: The package_id of this CreatePackageResponse.
        :type package_id: str
        """

        self._package_id = package_id

    @property
    def storage_location(self):
        """Gets the storage_location of this CreatePackageResponse.


        :return: The storage_location of this CreatePackageResponse.
        :rtype: CreatePackageResponseStorageLocation
        """
        return self._storage_location

    @storage_location.setter
    def storage_location(self, storage_location):
        """Sets the storage_location of this CreatePackageResponse.


        :param storage_location: The storage_location of this CreatePackageResponse.
        :type storage_location: CreatePackageResponseStorageLocation
        """
        if storage_location is None:
            raise ValueError("Invalid value for `storage_location`, must not be `None`")

        self._storage_location = storage_location
