# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device_type import DeviceType
from openapi_server.models.job_type import JobType
from openapi_server.models.update_progress import UpdateProgress
from openapi_server import util


class DescribeDeviceJobResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_time: datetime=None, device_arn: str=None, device_id: str=None, device_name: str=None, device_type: DeviceType=None, image_version: str=None, job_id: str=None, job_type: JobType=None, status: UpdateProgress=None):
        """DescribeDeviceJobResponse - a model defined in OpenAPI

        :param created_time: The created_time of this DescribeDeviceJobResponse.
        :param device_arn: The device_arn of this DescribeDeviceJobResponse.
        :param device_id: The device_id of this DescribeDeviceJobResponse.
        :param device_name: The device_name of this DescribeDeviceJobResponse.
        :param device_type: The device_type of this DescribeDeviceJobResponse.
        :param image_version: The image_version of this DescribeDeviceJobResponse.
        :param job_id: The job_id of this DescribeDeviceJobResponse.
        :param job_type: The job_type of this DescribeDeviceJobResponse.
        :param status: The status of this DescribeDeviceJobResponse.
        """
        self.openapi_types = {
            'created_time': datetime,
            'device_arn': str,
            'device_id': str,
            'device_name': str,
            'device_type': DeviceType,
            'image_version': str,
            'job_id': str,
            'job_type': JobType,
            'status': UpdateProgress
        }

        self.attribute_map = {
            'created_time': 'CreatedTime',
            'device_arn': 'DeviceArn',
            'device_id': 'DeviceId',
            'device_name': 'DeviceName',
            'device_type': 'DeviceType',
            'image_version': 'ImageVersion',
            'job_id': 'JobId',
            'job_type': 'JobType',
            'status': 'Status'
        }

        self._created_time = created_time
        self._device_arn = device_arn
        self._device_id = device_id
        self._device_name = device_name
        self._device_type = device_type
        self._image_version = image_version
        self._job_id = job_id
        self._job_type = job_type
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeDeviceJobResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeDeviceJobResponse of this DescribeDeviceJobResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_time(self):
        """Gets the created_time of this DescribeDeviceJobResponse.


        :return: The created_time of this DescribeDeviceJobResponse.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this DescribeDeviceJobResponse.


        :param created_time: The created_time of this DescribeDeviceJobResponse.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def device_arn(self):
        """Gets the device_arn of this DescribeDeviceJobResponse.


        :return: The device_arn of this DescribeDeviceJobResponse.
        :rtype: str
        """
        return self._device_arn

    @device_arn.setter
    def device_arn(self, device_arn):
        """Sets the device_arn of this DescribeDeviceJobResponse.


        :param device_arn: The device_arn of this DescribeDeviceJobResponse.
        :type device_arn: str
        """

        self._device_arn = device_arn

    @property
    def device_id(self):
        """Gets the device_id of this DescribeDeviceJobResponse.


        :return: The device_id of this DescribeDeviceJobResponse.
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this DescribeDeviceJobResponse.


        :param device_id: The device_id of this DescribeDeviceJobResponse.
        :type device_id: str
        """

        self._device_id = device_id

    @property
    def device_name(self):
        """Gets the device_name of this DescribeDeviceJobResponse.


        :return: The device_name of this DescribeDeviceJobResponse.
        :rtype: str
        """
        return self._device_name

    @device_name.setter
    def device_name(self, device_name):
        """Sets the device_name of this DescribeDeviceJobResponse.


        :param device_name: The device_name of this DescribeDeviceJobResponse.
        :type device_name: str
        """

        self._device_name = device_name

    @property
    def device_type(self):
        """Gets the device_type of this DescribeDeviceJobResponse.


        :return: The device_type of this DescribeDeviceJobResponse.
        :rtype: DeviceType
        """
        return self._device_type

    @device_type.setter
    def device_type(self, device_type):
        """Sets the device_type of this DescribeDeviceJobResponse.


        :param device_type: The device_type of this DescribeDeviceJobResponse.
        :type device_type: DeviceType
        """

        self._device_type = device_type

    @property
    def image_version(self):
        """Gets the image_version of this DescribeDeviceJobResponse.


        :return: The image_version of this DescribeDeviceJobResponse.
        :rtype: str
        """
        return self._image_version

    @image_version.setter
    def image_version(self, image_version):
        """Sets the image_version of this DescribeDeviceJobResponse.


        :param image_version: The image_version of this DescribeDeviceJobResponse.
        :type image_version: str
        """

        self._image_version = image_version

    @property
    def job_id(self):
        """Gets the job_id of this DescribeDeviceJobResponse.


        :return: The job_id of this DescribeDeviceJobResponse.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this DescribeDeviceJobResponse.


        :param job_id: The job_id of this DescribeDeviceJobResponse.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def job_type(self):
        """Gets the job_type of this DescribeDeviceJobResponse.


        :return: The job_type of this DescribeDeviceJobResponse.
        :rtype: JobType
        """
        return self._job_type

    @job_type.setter
    def job_type(self, job_type):
        """Sets the job_type of this DescribeDeviceJobResponse.


        :param job_type: The job_type of this DescribeDeviceJobResponse.
        :type job_type: JobType
        """

        self._job_type = job_type

    @property
    def status(self):
        """Gets the status of this DescribeDeviceJobResponse.


        :return: The status of this DescribeDeviceJobResponse.
        :rtype: UpdateProgress
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeDeviceJobResponse.


        :param status: The status of this DescribeDeviceJobResponse.
        :type status: UpdateProgress
        """

        self._status = status
