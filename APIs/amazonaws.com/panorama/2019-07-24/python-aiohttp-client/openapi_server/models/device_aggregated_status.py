# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeviceAggregatedStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ERROR = 'ERROR'
    AWAITING_PROVISIONING = 'AWAITING_PROVISIONING'
    PENDING = 'PENDING'
    FAILED = 'FAILED'
    DELETING = 'DELETING'
    ONLINE = 'ONLINE'
    OFFLINE = 'OFFLINE'
    LEASE_EXPIRED = 'LEASE_EXPIRED'
    UPDATE_NEEDED = 'UPDATE_NEEDED'
    REBOOTING = 'REBOOTING'

    def __init__(self):
        """DeviceAggregatedStatus - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceAggregatedStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceAggregatedStatus of this DeviceAggregatedStatus.
        """
        return util.deserialize_model(dikt, cls)
