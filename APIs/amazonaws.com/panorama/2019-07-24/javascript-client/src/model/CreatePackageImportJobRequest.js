/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreatePackageImportJobRequestInputConfig from './CreatePackageImportJobRequestInputConfig';
import CreatePackageImportJobRequestOutputConfig from './CreatePackageImportJobRequestOutputConfig';
import JobResourceTags from './JobResourceTags';

/**
 * The CreatePackageImportJobRequest model module.
 * @module model/CreatePackageImportJobRequest
 * @version 2019-07-24
 */
class CreatePackageImportJobRequest {
    /**
     * Constructs a new <code>CreatePackageImportJobRequest</code>.
     * @alias module:model/CreatePackageImportJobRequest
     * @param clientToken {String} A client token for the package import job.
     * @param inputConfig {module:model/CreatePackageImportJobRequestInputConfig} 
     * @param jobType {module:model/CreatePackageImportJobRequest.JobTypeEnum} A job type for the package import job.
     * @param outputConfig {module:model/CreatePackageImportJobRequestOutputConfig} 
     */
    constructor(clientToken, inputConfig, jobType, outputConfig) { 
        
        CreatePackageImportJobRequest.initialize(this, clientToken, inputConfig, jobType, outputConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientToken, inputConfig, jobType, outputConfig) { 
        obj['ClientToken'] = clientToken;
        obj['InputConfig'] = inputConfig;
        obj['JobType'] = jobType;
        obj['OutputConfig'] = outputConfig;
    }

    /**
     * Constructs a <code>CreatePackageImportJobRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreatePackageImportJobRequest} obj Optional instance to populate.
     * @return {module:model/CreatePackageImportJobRequest} The populated <code>CreatePackageImportJobRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreatePackageImportJobRequest();

            if (data.hasOwnProperty('ClientToken')) {
                obj['ClientToken'] = ApiClient.convertToType(data['ClientToken'], 'String');
            }
            if (data.hasOwnProperty('InputConfig')) {
                obj['InputConfig'] = CreatePackageImportJobRequestInputConfig.constructFromObject(data['InputConfig']);
            }
            if (data.hasOwnProperty('JobTags')) {
                obj['JobTags'] = ApiClient.convertToType(data['JobTags'], [JobResourceTags]);
            }
            if (data.hasOwnProperty('JobType')) {
                obj['JobType'] = ApiClient.convertToType(data['JobType'], 'String');
            }
            if (data.hasOwnProperty('OutputConfig')) {
                obj['OutputConfig'] = CreatePackageImportJobRequestOutputConfig.constructFromObject(data['OutputConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreatePackageImportJobRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreatePackageImportJobRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreatePackageImportJobRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ClientToken'] && !(typeof data['ClientToken'] === 'string' || data['ClientToken'] instanceof String)) {
            throw new Error("Expected the field `ClientToken` to be a primitive type in the JSON string but got " + data['ClientToken']);
        }
        // validate the optional field `InputConfig`
        if (data['InputConfig']) { // data not null
          CreatePackageImportJobRequestInputConfig.validateJSON(data['InputConfig']);
        }
        if (data['JobTags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['JobTags'])) {
                throw new Error("Expected the field `JobTags` to be an array in the JSON data but got " + data['JobTags']);
            }
            // validate the optional field `JobTags` (array)
            for (const item of data['JobTags']) {
                JobResourceTags.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['JobType'] && !(typeof data['JobType'] === 'string' || data['JobType'] instanceof String)) {
            throw new Error("Expected the field `JobType` to be a primitive type in the JSON string but got " + data['JobType']);
        }
        // validate the optional field `OutputConfig`
        if (data['OutputConfig']) { // data not null
          CreatePackageImportJobRequestOutputConfig.validateJSON(data['OutputConfig']);
        }

        return true;
    }


}

CreatePackageImportJobRequest.RequiredProperties = ["ClientToken", "InputConfig", "JobType", "OutputConfig"];

/**
 * A client token for the package import job.
 * @member {String} ClientToken
 */
CreatePackageImportJobRequest.prototype['ClientToken'] = undefined;

/**
 * @member {module:model/CreatePackageImportJobRequestInputConfig} InputConfig
 */
CreatePackageImportJobRequest.prototype['InputConfig'] = undefined;

/**
 * Tags for the package import job.
 * @member {Array.<module:model/JobResourceTags>} JobTags
 */
CreatePackageImportJobRequest.prototype['JobTags'] = undefined;

/**
 * A job type for the package import job.
 * @member {module:model/CreatePackageImportJobRequest.JobTypeEnum} JobType
 */
CreatePackageImportJobRequest.prototype['JobType'] = undefined;

/**
 * @member {module:model/CreatePackageImportJobRequestOutputConfig} OutputConfig
 */
CreatePackageImportJobRequest.prototype['OutputConfig'] = undefined;





/**
 * Allowed values for the <code>JobType</code> property.
 * @enum {String}
 * @readonly
 */
CreatePackageImportJobRequest['JobTypeEnum'] = {

    /**
     * value: "NODE_PACKAGE_VERSION"
     * @const
     */
    "NODE_PACKAGE_VERSION": "NODE_PACKAGE_VERSION",

    /**
     * value: "MARKETPLACE_NODE_PACKAGE_VERSION"
     * @const
     */
    "MARKETPLACE_NODE_PACKAGE_VERSION": "MARKETPLACE_NODE_PACKAGE_VERSION"
};



export default CreatePackageImportJobRequest;

