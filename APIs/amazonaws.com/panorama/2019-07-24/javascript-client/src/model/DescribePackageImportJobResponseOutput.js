/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PackageImportJobOutput from './PackageImportJobOutput';
import PackageImportJobOutputOutputS3Location from './PackageImportJobOutputOutputS3Location';

/**
 * The DescribePackageImportJobResponseOutput model module.
 * @module model/DescribePackageImportJobResponseOutput
 * @version 2019-07-24
 */
class DescribePackageImportJobResponseOutput {
    /**
     * Constructs a new <code>DescribePackageImportJobResponseOutput</code>.
     * @alias module:model/DescribePackageImportJobResponseOutput
     * @implements module:model/PackageImportJobOutput
     * @param outputS3Location {module:model/PackageImportJobOutputOutputS3Location} 
     * @param packageId {String} 
     * @param packageVersion {String} 
     * @param patchVersion {String} 
     */
    constructor(outputS3Location, packageId, packageVersion, patchVersion) { 
        PackageImportJobOutput.initialize(this, outputS3Location, packageId, packageVersion, patchVersion);
        DescribePackageImportJobResponseOutput.initialize(this, outputS3Location, packageId, packageVersion, patchVersion);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, outputS3Location, packageId, packageVersion, patchVersion) { 
        obj['OutputS3Location'] = outputS3Location;
        obj['PackageId'] = packageId;
        obj['PackageVersion'] = packageVersion;
        obj['PatchVersion'] = patchVersion;
    }

    /**
     * Constructs a <code>DescribePackageImportJobResponseOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribePackageImportJobResponseOutput} obj Optional instance to populate.
     * @return {module:model/DescribePackageImportJobResponseOutput} The populated <code>DescribePackageImportJobResponseOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribePackageImportJobResponseOutput();
            PackageImportJobOutput.constructFromObject(data, obj);

            if (data.hasOwnProperty('OutputS3Location')) {
                obj['OutputS3Location'] = PackageImportJobOutputOutputS3Location.constructFromObject(data['OutputS3Location']);
            }
            if (data.hasOwnProperty('PackageId')) {
                obj['PackageId'] = ApiClient.convertToType(data['PackageId'], 'String');
            }
            if (data.hasOwnProperty('PackageVersion')) {
                obj['PackageVersion'] = ApiClient.convertToType(data['PackageVersion'], 'String');
            }
            if (data.hasOwnProperty('PatchVersion')) {
                obj['PatchVersion'] = ApiClient.convertToType(data['PatchVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribePackageImportJobResponseOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribePackageImportJobResponseOutput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DescribePackageImportJobResponseOutput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `OutputS3Location`
        if (data['OutputS3Location']) { // data not null
          PackageImportJobOutputOutputS3Location.validateJSON(data['OutputS3Location']);
        }
        // validate the optional field `PackageId`
        if (data['PackageId']) { // data not null
          String.validateJSON(data['PackageId']);
        }
        // validate the optional field `PackageVersion`
        if (data['PackageVersion']) { // data not null
          String.validateJSON(data['PackageVersion']);
        }
        // validate the optional field `PatchVersion`
        if (data['PatchVersion']) { // data not null
          String.validateJSON(data['PatchVersion']);
        }

        return true;
    }


}

DescribePackageImportJobResponseOutput.RequiredProperties = ["OutputS3Location", "PackageId", "PackageVersion", "PatchVersion"];

/**
 * @member {module:model/PackageImportJobOutputOutputS3Location} OutputS3Location
 */
DescribePackageImportJobResponseOutput.prototype['OutputS3Location'] = undefined;

/**
 * @member {String} PackageId
 */
DescribePackageImportJobResponseOutput.prototype['PackageId'] = undefined;

/**
 * @member {String} PackageVersion
 */
DescribePackageImportJobResponseOutput.prototype['PackageVersion'] = undefined;

/**
 * @member {String} PatchVersion
 */
DescribePackageImportJobResponseOutput.prototype['PatchVersion'] = undefined;


// Implement PackageImportJobOutput interface:
/**
 * @member {module:model/PackageImportJobOutputOutputS3Location} OutputS3Location
 */
PackageImportJobOutput.prototype['OutputS3Location'] = undefined;
/**
 * @member {String} PackageId
 */
PackageImportJobOutput.prototype['PackageId'] = undefined;
/**
 * @member {String} PackageVersion
 */
PackageImportJobOutput.prototype['PackageVersion'] = undefined;
/**
 * @member {String} PatchVersion
 */
PackageImportJobOutput.prototype['PatchVersion'] = undefined;




export default DescribePackageImportJobResponseOutput;

