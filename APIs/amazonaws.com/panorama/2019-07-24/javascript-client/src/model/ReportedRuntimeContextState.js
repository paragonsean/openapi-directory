/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DesiredState from './DesiredState';
import DeviceReportedStatus from './DeviceReportedStatus';

/**
 * The ReportedRuntimeContextState model module.
 * @module model/ReportedRuntimeContextState
 * @version 2019-07-24
 */
class ReportedRuntimeContextState {
    /**
     * Constructs a new <code>ReportedRuntimeContextState</code>.
     * An application instance&#39;s state.
     * @alias module:model/ReportedRuntimeContextState
     * @param desiredState {module:model/DesiredState} 
     * @param deviceReportedStatus {module:model/DeviceReportedStatus} 
     * @param deviceReportedTime {Date} 
     * @param runtimeContextName {String} 
     */
    constructor(desiredState, deviceReportedStatus, deviceReportedTime, runtimeContextName) { 
        
        ReportedRuntimeContextState.initialize(this, desiredState, deviceReportedStatus, deviceReportedTime, runtimeContextName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, desiredState, deviceReportedStatus, deviceReportedTime, runtimeContextName) { 
        obj['DesiredState'] = desiredState;
        obj['DeviceReportedStatus'] = deviceReportedStatus;
        obj['DeviceReportedTime'] = deviceReportedTime;
        obj['RuntimeContextName'] = runtimeContextName;
    }

    /**
     * Constructs a <code>ReportedRuntimeContextState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportedRuntimeContextState} obj Optional instance to populate.
     * @return {module:model/ReportedRuntimeContextState} The populated <code>ReportedRuntimeContextState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportedRuntimeContextState();

            if (data.hasOwnProperty('DesiredState')) {
                obj['DesiredState'] = ApiClient.convertToType(data['DesiredState'], DesiredState);
            }
            if (data.hasOwnProperty('DeviceReportedStatus')) {
                obj['DeviceReportedStatus'] = ApiClient.convertToType(data['DeviceReportedStatus'], DeviceReportedStatus);
            }
            if (data.hasOwnProperty('DeviceReportedTime')) {
                obj['DeviceReportedTime'] = ApiClient.convertToType(data['DeviceReportedTime'], 'Date');
            }
            if (data.hasOwnProperty('RuntimeContextName')) {
                obj['RuntimeContextName'] = ApiClient.convertToType(data['RuntimeContextName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportedRuntimeContextState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportedRuntimeContextState</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReportedRuntimeContextState.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DesiredState`
        if (data['DesiredState']) { // data not null
          DesiredState.validateJSON(data['DesiredState']);
        }
        // validate the optional field `DeviceReportedStatus`
        if (data['DeviceReportedStatus']) { // data not null
          DeviceReportedStatus.validateJSON(data['DeviceReportedStatus']);
        }
        // validate the optional field `DeviceReportedTime`
        if (data['DeviceReportedTime']) { // data not null
          Date.validateJSON(data['DeviceReportedTime']);
        }
        // validate the optional field `RuntimeContextName`
        if (data['RuntimeContextName']) { // data not null
          String.validateJSON(data['RuntimeContextName']);
        }

        return true;
    }


}

ReportedRuntimeContextState.RequiredProperties = ["DesiredState", "DeviceReportedStatus", "DeviceReportedTime", "RuntimeContextName"];

/**
 * @member {module:model/DesiredState} DesiredState
 */
ReportedRuntimeContextState.prototype['DesiredState'] = undefined;

/**
 * @member {module:model/DeviceReportedStatus} DeviceReportedStatus
 */
ReportedRuntimeContextState.prototype['DeviceReportedStatus'] = undefined;

/**
 * @member {Date} DeviceReportedTime
 */
ReportedRuntimeContextState.prototype['DeviceReportedTime'] = undefined;

/**
 * @member {String} RuntimeContextName
 */
ReportedRuntimeContextState.prototype['RuntimeContextName'] = undefined;






export default ReportedRuntimeContextState;

