/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationInstanceHealthStatus from './ApplicationInstanceHealthStatus';
import ApplicationInstanceStatus from './ApplicationInstanceStatus';

/**
 * The ApplicationInstance model module.
 * @module model/ApplicationInstance
 * @version 2019-07-24
 */
class ApplicationInstance {
    /**
     * Constructs a new <code>ApplicationInstance</code>.
     * An application instance on a device.
     * @alias module:model/ApplicationInstance
     */
    constructor() { 
        
        ApplicationInstance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationInstance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationInstance} obj Optional instance to populate.
     * @return {module:model/ApplicationInstance} The populated <code>ApplicationInstance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationInstance();

            if (data.hasOwnProperty('ApplicationInstanceId')) {
                obj['ApplicationInstanceId'] = ApiClient.convertToType(data['ApplicationInstanceId'], 'String');
            }
            if (data.hasOwnProperty('Arn')) {
                obj['Arn'] = ApiClient.convertToType(data['Arn'], 'String');
            }
            if (data.hasOwnProperty('CreatedTime')) {
                obj['CreatedTime'] = ApiClient.convertToType(data['CreatedTime'], 'Date');
            }
            if (data.hasOwnProperty('DefaultRuntimeContextDevice')) {
                obj['DefaultRuntimeContextDevice'] = ApiClient.convertToType(data['DefaultRuntimeContextDevice'], 'String');
            }
            if (data.hasOwnProperty('DefaultRuntimeContextDeviceName')) {
                obj['DefaultRuntimeContextDeviceName'] = ApiClient.convertToType(data['DefaultRuntimeContextDeviceName'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('HealthStatus')) {
                obj['HealthStatus'] = ApiClient.convertToType(data['HealthStatus'], ApplicationInstanceHealthStatus);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('RuntimeContextStates')) {
                obj['RuntimeContextStates'] = ApiClient.convertToType(data['RuntimeContextStates'], Array);
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], ApplicationInstanceStatus);
            }
            if (data.hasOwnProperty('StatusDescription')) {
                obj['StatusDescription'] = ApiClient.convertToType(data['StatusDescription'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationInstance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationInstance</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ApplicationInstanceId`
        if (data['ApplicationInstanceId']) { // data not null
          String.validateJSON(data['ApplicationInstanceId']);
        }
        // validate the optional field `Arn`
        if (data['Arn']) { // data not null
          String.validateJSON(data['Arn']);
        }
        // validate the optional field `CreatedTime`
        if (data['CreatedTime']) { // data not null
          Date.validateJSON(data['CreatedTime']);
        }
        // validate the optional field `DefaultRuntimeContextDevice`
        if (data['DefaultRuntimeContextDevice']) { // data not null
          String.validateJSON(data['DefaultRuntimeContextDevice']);
        }
        // validate the optional field `DefaultRuntimeContextDeviceName`
        if (data['DefaultRuntimeContextDeviceName']) { // data not null
          String.validateJSON(data['DefaultRuntimeContextDeviceName']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `HealthStatus`
        if (data['HealthStatus']) { // data not null
          ApplicationInstanceHealthStatus.validateJSON(data['HealthStatus']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `RuntimeContextStates`
        if (data['RuntimeContextStates']) { // data not null
          Array.validateJSON(data['RuntimeContextStates']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          ApplicationInstanceStatus.validateJSON(data['Status']);
        }
        // validate the optional field `StatusDescription`
        if (data['StatusDescription']) { // data not null
          String.validateJSON(data['StatusDescription']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Object.validateJSON(data['Tags']);
        }

        return true;
    }


}



/**
 * @member {String} ApplicationInstanceId
 */
ApplicationInstance.prototype['ApplicationInstanceId'] = undefined;

/**
 * @member {String} Arn
 */
ApplicationInstance.prototype['Arn'] = undefined;

/**
 * @member {Date} CreatedTime
 */
ApplicationInstance.prototype['CreatedTime'] = undefined;

/**
 * @member {String} DefaultRuntimeContextDevice
 */
ApplicationInstance.prototype['DefaultRuntimeContextDevice'] = undefined;

/**
 * @member {String} DefaultRuntimeContextDeviceName
 */
ApplicationInstance.prototype['DefaultRuntimeContextDeviceName'] = undefined;

/**
 * @member {String} Description
 */
ApplicationInstance.prototype['Description'] = undefined;

/**
 * @member {module:model/ApplicationInstanceHealthStatus} HealthStatus
 */
ApplicationInstance.prototype['HealthStatus'] = undefined;

/**
 * @member {String} Name
 */
ApplicationInstance.prototype['Name'] = undefined;

/**
 * @member {Array} RuntimeContextStates
 */
ApplicationInstance.prototype['RuntimeContextStates'] = undefined;

/**
 * @member {module:model/ApplicationInstanceStatus} Status
 */
ApplicationInstance.prototype['Status'] = undefined;

/**
 * @member {String} StatusDescription
 */
ApplicationInstance.prototype['StatusDescription'] = undefined;

/**
 * @member {Object} Tags
 */
ApplicationInstance.prototype['Tags'] = undefined;






export default ApplicationInstance;

