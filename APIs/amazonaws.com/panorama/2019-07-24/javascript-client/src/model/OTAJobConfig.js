/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OTAJobConfig model module.
 * @module model/OTAJobConfig
 * @version 2019-07-24
 */
class OTAJobConfig {
    /**
     * Constructs a new <code>OTAJobConfig</code>.
     * An over-the-air update (OTA) job configuration.
     * @alias module:model/OTAJobConfig
     * @param imageVersion {String} 
     */
    constructor(imageVersion) { 
        
        OTAJobConfig.initialize(this, imageVersion);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, imageVersion) { 
        obj['ImageVersion'] = imageVersion;
    }

    /**
     * Constructs a <code>OTAJobConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OTAJobConfig} obj Optional instance to populate.
     * @return {module:model/OTAJobConfig} The populated <code>OTAJobConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OTAJobConfig();

            if (data.hasOwnProperty('AllowMajorVersionUpdate')) {
                obj['AllowMajorVersionUpdate'] = ApiClient.convertToType(data['AllowMajorVersionUpdate'], 'Boolean');
            }
            if (data.hasOwnProperty('ImageVersion')) {
                obj['ImageVersion'] = ApiClient.convertToType(data['ImageVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OTAJobConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OTAJobConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OTAJobConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `AllowMajorVersionUpdate`
        if (data['AllowMajorVersionUpdate']) { // data not null
          Boolean.validateJSON(data['AllowMajorVersionUpdate']);
        }
        // validate the optional field `ImageVersion`
        if (data['ImageVersion']) { // data not null
          String.validateJSON(data['ImageVersion']);
        }

        return true;
    }


}

OTAJobConfig.RequiredProperties = ["ImageVersion"];

/**
 * @member {Boolean} AllowMajorVersionUpdate
 */
OTAJobConfig.prototype['AllowMajorVersionUpdate'] = undefined;

/**
 * @member {String} ImageVersion
 */
OTAJobConfig.prototype['ImageVersion'] = undefined;






export default OTAJobConfig;

