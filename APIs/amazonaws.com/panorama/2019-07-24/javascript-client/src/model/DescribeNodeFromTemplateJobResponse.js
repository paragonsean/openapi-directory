/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NodeFromTemplateJobStatus from './NodeFromTemplateJobStatus';
import TemplateType from './TemplateType';

/**
 * The DescribeNodeFromTemplateJobResponse model module.
 * @module model/DescribeNodeFromTemplateJobResponse
 * @version 2019-07-24
 */
class DescribeNodeFromTemplateJobResponse {
    /**
     * Constructs a new <code>DescribeNodeFromTemplateJobResponse</code>.
     * @alias module:model/DescribeNodeFromTemplateJobResponse
     * @param createdTime {Date} 
     * @param jobId {String} 
     * @param lastUpdatedTime {Date} 
     * @param nodeName {String} 
     * @param outputPackageName {String} 
     * @param outputPackageVersion {String} 
     * @param status {module:model/NodeFromTemplateJobStatus} 
     * @param statusMessage {String} 
     * @param templateParameters {Object} 
     * @param templateType {module:model/TemplateType} 
     */
    constructor(createdTime, jobId, lastUpdatedTime, nodeName, outputPackageName, outputPackageVersion, status, statusMessage, templateParameters, templateType) { 
        
        DescribeNodeFromTemplateJobResponse.initialize(this, createdTime, jobId, lastUpdatedTime, nodeName, outputPackageName, outputPackageVersion, status, statusMessage, templateParameters, templateType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdTime, jobId, lastUpdatedTime, nodeName, outputPackageName, outputPackageVersion, status, statusMessage, templateParameters, templateType) { 
        obj['CreatedTime'] = createdTime;
        obj['JobId'] = jobId;
        obj['LastUpdatedTime'] = lastUpdatedTime;
        obj['NodeName'] = nodeName;
        obj['OutputPackageName'] = outputPackageName;
        obj['OutputPackageVersion'] = outputPackageVersion;
        obj['Status'] = status;
        obj['StatusMessage'] = statusMessage;
        obj['TemplateParameters'] = templateParameters;
        obj['TemplateType'] = templateType;
    }

    /**
     * Constructs a <code>DescribeNodeFromTemplateJobResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeNodeFromTemplateJobResponse} obj Optional instance to populate.
     * @return {module:model/DescribeNodeFromTemplateJobResponse} The populated <code>DescribeNodeFromTemplateJobResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeNodeFromTemplateJobResponse();

            if (data.hasOwnProperty('CreatedTime')) {
                obj['CreatedTime'] = ApiClient.convertToType(data['CreatedTime'], 'Date');
            }
            if (data.hasOwnProperty('JobId')) {
                obj['JobId'] = ApiClient.convertToType(data['JobId'], 'String');
            }
            if (data.hasOwnProperty('JobTags')) {
                obj['JobTags'] = ApiClient.convertToType(data['JobTags'], Array);
            }
            if (data.hasOwnProperty('LastUpdatedTime')) {
                obj['LastUpdatedTime'] = ApiClient.convertToType(data['LastUpdatedTime'], 'Date');
            }
            if (data.hasOwnProperty('NodeDescription')) {
                obj['NodeDescription'] = ApiClient.convertToType(data['NodeDescription'], 'String');
            }
            if (data.hasOwnProperty('NodeName')) {
                obj['NodeName'] = ApiClient.convertToType(data['NodeName'], 'String');
            }
            if (data.hasOwnProperty('OutputPackageName')) {
                obj['OutputPackageName'] = ApiClient.convertToType(data['OutputPackageName'], 'String');
            }
            if (data.hasOwnProperty('OutputPackageVersion')) {
                obj['OutputPackageVersion'] = ApiClient.convertToType(data['OutputPackageVersion'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], NodeFromTemplateJobStatus);
            }
            if (data.hasOwnProperty('StatusMessage')) {
                obj['StatusMessage'] = ApiClient.convertToType(data['StatusMessage'], 'String');
            }
            if (data.hasOwnProperty('TemplateParameters')) {
                obj['TemplateParameters'] = ApiClient.convertToType(data['TemplateParameters'], Object);
            }
            if (data.hasOwnProperty('TemplateType')) {
                obj['TemplateType'] = ApiClient.convertToType(data['TemplateType'], TemplateType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeNodeFromTemplateJobResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeNodeFromTemplateJobResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DescribeNodeFromTemplateJobResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CreatedTime`
        if (data['CreatedTime']) { // data not null
          Date.validateJSON(data['CreatedTime']);
        }
        // validate the optional field `JobId`
        if (data['JobId']) { // data not null
          String.validateJSON(data['JobId']);
        }
        // validate the optional field `JobTags`
        if (data['JobTags']) { // data not null
          Array.validateJSON(data['JobTags']);
        }
        // validate the optional field `LastUpdatedTime`
        if (data['LastUpdatedTime']) { // data not null
          Date.validateJSON(data['LastUpdatedTime']);
        }
        // validate the optional field `NodeDescription`
        if (data['NodeDescription']) { // data not null
          String.validateJSON(data['NodeDescription']);
        }
        // validate the optional field `NodeName`
        if (data['NodeName']) { // data not null
          String.validateJSON(data['NodeName']);
        }
        // validate the optional field `OutputPackageName`
        if (data['OutputPackageName']) { // data not null
          String.validateJSON(data['OutputPackageName']);
        }
        // validate the optional field `OutputPackageVersion`
        if (data['OutputPackageVersion']) { // data not null
          String.validateJSON(data['OutputPackageVersion']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          NodeFromTemplateJobStatus.validateJSON(data['Status']);
        }
        // validate the optional field `StatusMessage`
        if (data['StatusMessage']) { // data not null
          String.validateJSON(data['StatusMessage']);
        }
        // validate the optional field `TemplateParameters`
        if (data['TemplateParameters']) { // data not null
          Object.validateJSON(data['TemplateParameters']);
        }
        // validate the optional field `TemplateType`
        if (data['TemplateType']) { // data not null
          TemplateType.validateJSON(data['TemplateType']);
        }

        return true;
    }


}

DescribeNodeFromTemplateJobResponse.RequiredProperties = ["CreatedTime", "JobId", "LastUpdatedTime", "NodeName", "OutputPackageName", "OutputPackageVersion", "Status", "StatusMessage", "TemplateParameters", "TemplateType"];

/**
 * @member {Date} CreatedTime
 */
DescribeNodeFromTemplateJobResponse.prototype['CreatedTime'] = undefined;

/**
 * @member {String} JobId
 */
DescribeNodeFromTemplateJobResponse.prototype['JobId'] = undefined;

/**
 * @member {Array} JobTags
 */
DescribeNodeFromTemplateJobResponse.prototype['JobTags'] = undefined;

/**
 * @member {Date} LastUpdatedTime
 */
DescribeNodeFromTemplateJobResponse.prototype['LastUpdatedTime'] = undefined;

/**
 * @member {String} NodeDescription
 */
DescribeNodeFromTemplateJobResponse.prototype['NodeDescription'] = undefined;

/**
 * @member {String} NodeName
 */
DescribeNodeFromTemplateJobResponse.prototype['NodeName'] = undefined;

/**
 * @member {String} OutputPackageName
 */
DescribeNodeFromTemplateJobResponse.prototype['OutputPackageName'] = undefined;

/**
 * @member {String} OutputPackageVersion
 */
DescribeNodeFromTemplateJobResponse.prototype['OutputPackageVersion'] = undefined;

/**
 * @member {module:model/NodeFromTemplateJobStatus} Status
 */
DescribeNodeFromTemplateJobResponse.prototype['Status'] = undefined;

/**
 * @member {String} StatusMessage
 */
DescribeNodeFromTemplateJobResponse.prototype['StatusMessage'] = undefined;

/**
 * @member {Object} TemplateParameters
 */
DescribeNodeFromTemplateJobResponse.prototype['TemplateParameters'] = undefined;

/**
 * @member {module:model/TemplateType} TemplateType
 */
DescribeNodeFromTemplateJobResponse.prototype['TemplateType'] = undefined;






export default DescribeNodeFromTemplateJobResponse;

