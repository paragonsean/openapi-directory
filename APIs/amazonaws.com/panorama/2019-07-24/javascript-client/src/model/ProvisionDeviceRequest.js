/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProvisionDeviceRequestNetworkingConfiguration from './ProvisionDeviceRequestNetworkingConfiguration';

/**
 * The ProvisionDeviceRequest model module.
 * @module model/ProvisionDeviceRequest
 * @version 2019-07-24
 */
class ProvisionDeviceRequest {
    /**
     * Constructs a new <code>ProvisionDeviceRequest</code>.
     * @alias module:model/ProvisionDeviceRequest
     * @param name {String} A name for the device.
     */
    constructor(name) { 
        
        ProvisionDeviceRequest.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['Name'] = name;
    }

    /**
     * Constructs a <code>ProvisionDeviceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProvisionDeviceRequest} obj Optional instance to populate.
     * @return {module:model/ProvisionDeviceRequest} The populated <code>ProvisionDeviceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProvisionDeviceRequest();

            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('NetworkingConfiguration')) {
                obj['NetworkingConfiguration'] = ProvisionDeviceRequestNetworkingConfiguration.constructFromObject(data['NetworkingConfiguration']);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProvisionDeviceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProvisionDeviceRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProvisionDeviceRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // validate the optional field `NetworkingConfiguration`
        if (data['NetworkingConfiguration']) { // data not null
          ProvisionDeviceRequestNetworkingConfiguration.validateJSON(data['NetworkingConfiguration']);
        }

        return true;
    }


}

ProvisionDeviceRequest.RequiredProperties = ["Name"];

/**
 * A description for the device.
 * @member {String} Description
 */
ProvisionDeviceRequest.prototype['Description'] = undefined;

/**
 * A name for the device.
 * @member {String} Name
 */
ProvisionDeviceRequest.prototype['Name'] = undefined;

/**
 * @member {module:model/ProvisionDeviceRequestNetworkingConfiguration} NetworkingConfiguration
 */
ProvisionDeviceRequest.prototype['NetworkingConfiguration'] = undefined;

/**
 * Tags for the device.
 * @member {Object.<String, String>} Tags
 */
ProvisionDeviceRequest.prototype['Tags'] = undefined;






export default ProvisionDeviceRequest;

