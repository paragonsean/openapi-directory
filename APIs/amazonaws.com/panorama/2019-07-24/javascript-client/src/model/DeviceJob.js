/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobType from './JobType';

/**
 * The DeviceJob model module.
 * @module model/DeviceJob
 * @version 2019-07-24
 */
class DeviceJob {
    /**
     * Constructs a new <code>DeviceJob</code>.
     * A job that runs on a device.
     * @alias module:model/DeviceJob
     */
    constructor() { 
        
        DeviceJob.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeviceJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeviceJob} obj Optional instance to populate.
     * @return {module:model/DeviceJob} The populated <code>DeviceJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeviceJob();

            if (data.hasOwnProperty('CreatedTime')) {
                obj['CreatedTime'] = ApiClient.convertToType(data['CreatedTime'], 'Date');
            }
            if (data.hasOwnProperty('DeviceId')) {
                obj['DeviceId'] = ApiClient.convertToType(data['DeviceId'], 'String');
            }
            if (data.hasOwnProperty('DeviceName')) {
                obj['DeviceName'] = ApiClient.convertToType(data['DeviceName'], 'String');
            }
            if (data.hasOwnProperty('JobId')) {
                obj['JobId'] = ApiClient.convertToType(data['JobId'], 'String');
            }
            if (data.hasOwnProperty('JobType')) {
                obj['JobType'] = ApiClient.convertToType(data['JobType'], JobType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeviceJob</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeviceJob</code>.
     */
    static validateJSON(data) {
        // validate the optional field `CreatedTime`
        if (data['CreatedTime']) { // data not null
          Date.validateJSON(data['CreatedTime']);
        }
        // validate the optional field `DeviceId`
        if (data['DeviceId']) { // data not null
          String.validateJSON(data['DeviceId']);
        }
        // validate the optional field `DeviceName`
        if (data['DeviceName']) { // data not null
          String.validateJSON(data['DeviceName']);
        }
        // validate the optional field `JobId`
        if (data['JobId']) { // data not null
          String.validateJSON(data['JobId']);
        }
        // validate the optional field `JobType`
        if (data['JobType']) { // data not null
          JobType.validateJSON(data['JobType']);
        }

        return true;
    }


}



/**
 * @member {Date} CreatedTime
 */
DeviceJob.prototype['CreatedTime'] = undefined;

/**
 * @member {String} DeviceId
 */
DeviceJob.prototype['DeviceId'] = undefined;

/**
 * @member {String} DeviceName
 */
DeviceJob.prototype['DeviceName'] = undefined;

/**
 * @member {String} JobId
 */
DeviceJob.prototype['JobId'] = undefined;

/**
 * @member {module:model/JobType} JobType
 */
DeviceJob.prototype['JobType'] = undefined;






export default DeviceJob;

