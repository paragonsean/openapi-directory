/**
 * AWS Panorama
 * <p><fullname>AWS Panorama</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Panorama API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/panorama/latest/dev/panorama-welcome.html\">What is AWS Panorama?</a> in the <i>AWS Panorama Developer Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2019-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PackageVersionStatus from './PackageVersionStatus';

/**
 * The DescribePackageVersionResponse model module.
 * @module model/DescribePackageVersionResponse
 * @version 2019-07-24
 */
class DescribePackageVersionResponse {
    /**
     * Constructs a new <code>DescribePackageVersionResponse</code>.
     * @alias module:model/DescribePackageVersionResponse
     * @param isLatestPatch {Boolean} 
     * @param packageId {String} 
     * @param packageName {String} 
     * @param packageVersion {String} 
     * @param patchVersion {String} 
     * @param status {module:model/PackageVersionStatus} 
     */
    constructor(isLatestPatch, packageId, packageName, packageVersion, patchVersion, status) { 
        
        DescribePackageVersionResponse.initialize(this, isLatestPatch, packageId, packageName, packageVersion, patchVersion, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, isLatestPatch, packageId, packageName, packageVersion, patchVersion, status) { 
        obj['IsLatestPatch'] = isLatestPatch;
        obj['PackageId'] = packageId;
        obj['PackageName'] = packageName;
        obj['PackageVersion'] = packageVersion;
        obj['PatchVersion'] = patchVersion;
        obj['Status'] = status;
    }

    /**
     * Constructs a <code>DescribePackageVersionResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribePackageVersionResponse} obj Optional instance to populate.
     * @return {module:model/DescribePackageVersionResponse} The populated <code>DescribePackageVersionResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribePackageVersionResponse();

            if (data.hasOwnProperty('IsLatestPatch')) {
                obj['IsLatestPatch'] = ApiClient.convertToType(data['IsLatestPatch'], 'Boolean');
            }
            if (data.hasOwnProperty('OwnerAccount')) {
                obj['OwnerAccount'] = ApiClient.convertToType(data['OwnerAccount'], 'String');
            }
            if (data.hasOwnProperty('PackageArn')) {
                obj['PackageArn'] = ApiClient.convertToType(data['PackageArn'], 'String');
            }
            if (data.hasOwnProperty('PackageId')) {
                obj['PackageId'] = ApiClient.convertToType(data['PackageId'], 'String');
            }
            if (data.hasOwnProperty('PackageName')) {
                obj['PackageName'] = ApiClient.convertToType(data['PackageName'], 'String');
            }
            if (data.hasOwnProperty('PackageVersion')) {
                obj['PackageVersion'] = ApiClient.convertToType(data['PackageVersion'], 'String');
            }
            if (data.hasOwnProperty('PatchVersion')) {
                obj['PatchVersion'] = ApiClient.convertToType(data['PatchVersion'], 'String');
            }
            if (data.hasOwnProperty('RegisteredTime')) {
                obj['RegisteredTime'] = ApiClient.convertToType(data['RegisteredTime'], 'Date');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], PackageVersionStatus);
            }
            if (data.hasOwnProperty('StatusDescription')) {
                obj['StatusDescription'] = ApiClient.convertToType(data['StatusDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribePackageVersionResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribePackageVersionResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DescribePackageVersionResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `IsLatestPatch`
        if (data['IsLatestPatch']) { // data not null
          Boolean.validateJSON(data['IsLatestPatch']);
        }
        // validate the optional field `OwnerAccount`
        if (data['OwnerAccount']) { // data not null
          String.validateJSON(data['OwnerAccount']);
        }
        // validate the optional field `PackageArn`
        if (data['PackageArn']) { // data not null
          String.validateJSON(data['PackageArn']);
        }
        // validate the optional field `PackageId`
        if (data['PackageId']) { // data not null
          String.validateJSON(data['PackageId']);
        }
        // validate the optional field `PackageName`
        if (data['PackageName']) { // data not null
          String.validateJSON(data['PackageName']);
        }
        // validate the optional field `PackageVersion`
        if (data['PackageVersion']) { // data not null
          String.validateJSON(data['PackageVersion']);
        }
        // validate the optional field `PatchVersion`
        if (data['PatchVersion']) { // data not null
          String.validateJSON(data['PatchVersion']);
        }
        // validate the optional field `RegisteredTime`
        if (data['RegisteredTime']) { // data not null
          Date.validateJSON(data['RegisteredTime']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          PackageVersionStatus.validateJSON(data['Status']);
        }
        // validate the optional field `StatusDescription`
        if (data['StatusDescription']) { // data not null
          String.validateJSON(data['StatusDescription']);
        }

        return true;
    }


}

DescribePackageVersionResponse.RequiredProperties = ["IsLatestPatch", "PackageId", "PackageName", "PackageVersion", "PatchVersion", "Status"];

/**
 * @member {Boolean} IsLatestPatch
 */
DescribePackageVersionResponse.prototype['IsLatestPatch'] = undefined;

/**
 * @member {String} OwnerAccount
 */
DescribePackageVersionResponse.prototype['OwnerAccount'] = undefined;

/**
 * @member {String} PackageArn
 */
DescribePackageVersionResponse.prototype['PackageArn'] = undefined;

/**
 * @member {String} PackageId
 */
DescribePackageVersionResponse.prototype['PackageId'] = undefined;

/**
 * @member {String} PackageName
 */
DescribePackageVersionResponse.prototype['PackageName'] = undefined;

/**
 * @member {String} PackageVersion
 */
DescribePackageVersionResponse.prototype['PackageVersion'] = undefined;

/**
 * @member {String} PatchVersion
 */
DescribePackageVersionResponse.prototype['PatchVersion'] = undefined;

/**
 * @member {Date} RegisteredTime
 */
DescribePackageVersionResponse.prototype['RegisteredTime'] = undefined;

/**
 * @member {module:model/PackageVersionStatus} Status
 */
DescribePackageVersionResponse.prototype['Status'] = undefined;

/**
 * @member {String} StatusDescription
 */
DescribePackageVersionResponse.prototype['StatusDescription'] = undefined;






export default DescribePackageVersionResponse;

