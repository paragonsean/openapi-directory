/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteItemOutput.h
 *
 * Represents the output of a &lt;code&gt;DeleteItem&lt;/code&gt; operation.
 */

#ifndef OAIDeleteItemOutput_H
#define OAIDeleteItemOutput_H

#include <QJsonObject>

#include "OAIDeleteItemOutput_ConsumedCapacity.h"
#include "OAIDeleteItemOutput_ItemCollectionMetrics.h"
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeleteItemOutput_ConsumedCapacity;
class OAIDeleteItemOutput_ItemCollectionMetrics;

class OAIDeleteItemOutput : public OAIObject {
public:
    OAIDeleteItemOutput();
    OAIDeleteItemOutput(QString json);
    ~OAIDeleteItemOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap getAttributes() const;
    void setAttributes(const QMap &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    OAIDeleteItemOutput_ConsumedCapacity getConsumedCapacity() const;
    void setConsumedCapacity(const OAIDeleteItemOutput_ConsumedCapacity &consumed_capacity);
    bool is_consumed_capacity_Set() const;
    bool is_consumed_capacity_Valid() const;

    OAIDeleteItemOutput_ItemCollectionMetrics getItemCollectionMetrics() const;
    void setItemCollectionMetrics(const OAIDeleteItemOutput_ItemCollectionMetrics &item_collection_metrics);
    bool is_item_collection_metrics_Set() const;
    bool is_item_collection_metrics_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    OAIDeleteItemOutput_ConsumedCapacity m_consumed_capacity;
    bool m_consumed_capacity_isSet;
    bool m_consumed_capacity_isValid;

    OAIDeleteItemOutput_ItemCollectionMetrics m_item_collection_metrics;
    bool m_item_collection_metrics_isSet;
    bool m_item_collection_metrics_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteItemOutput)

#endif // OAIDeleteItemOutput_H
