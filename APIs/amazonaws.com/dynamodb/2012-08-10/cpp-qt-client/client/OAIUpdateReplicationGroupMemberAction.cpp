/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateReplicationGroupMemberAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateReplicationGroupMemberAction::OAIUpdateReplicationGroupMemberAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateReplicationGroupMemberAction::OAIUpdateReplicationGroupMemberAction() {
    this->initializeModel();
}

OAIUpdateReplicationGroupMemberAction::~OAIUpdateReplicationGroupMemberAction() {}

void OAIUpdateReplicationGroupMemberAction::initializeModel() {

    m_region_name_isSet = false;
    m_region_name_isValid = false;

    m_kms_master_key_id_isSet = false;
    m_kms_master_key_id_isValid = false;

    m_provisioned_throughput_override_isSet = false;
    m_provisioned_throughput_override_isValid = false;

    m_global_secondary_indexes_isSet = false;
    m_global_secondary_indexes_isValid = false;

    m_table_class_override_isSet = false;
    m_table_class_override_isValid = false;
}

void OAIUpdateReplicationGroupMemberAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateReplicationGroupMemberAction::fromJsonObject(QJsonObject json) {

    m_region_name_isValid = ::OpenAPI::fromJsonValue(m_region_name, json[QString("RegionName")]);
    m_region_name_isSet = !json[QString("RegionName")].isNull() && m_region_name_isValid;

    m_kms_master_key_id_isValid = ::OpenAPI::fromJsonValue(m_kms_master_key_id, json[QString("KMSMasterKeyId")]);
    m_kms_master_key_id_isSet = !json[QString("KMSMasterKeyId")].isNull() && m_kms_master_key_id_isValid;

    m_provisioned_throughput_override_isValid = ::OpenAPI::fromJsonValue(m_provisioned_throughput_override, json[QString("ProvisionedThroughputOverride")]);
    m_provisioned_throughput_override_isSet = !json[QString("ProvisionedThroughputOverride")].isNull() && m_provisioned_throughput_override_isValid;

    m_global_secondary_indexes_isValid = ::OpenAPI::fromJsonValue(m_global_secondary_indexes, json[QString("GlobalSecondaryIndexes")]);
    m_global_secondary_indexes_isSet = !json[QString("GlobalSecondaryIndexes")].isNull() && m_global_secondary_indexes_isValid;

    m_table_class_override_isValid = ::OpenAPI::fromJsonValue(m_table_class_override, json[QString("TableClassOverride")]);
    m_table_class_override_isSet = !json[QString("TableClassOverride")].isNull() && m_table_class_override_isValid;
}

QString OAIUpdateReplicationGroupMemberAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateReplicationGroupMemberAction::asJsonObject() const {
    QJsonObject obj;
    if (m_region_name_isSet) {
        obj.insert(QString("RegionName"), ::OpenAPI::toJsonValue(m_region_name));
    }
    if (m_kms_master_key_id_isSet) {
        obj.insert(QString("KMSMasterKeyId"), ::OpenAPI::toJsonValue(m_kms_master_key_id));
    }
    if (m_provisioned_throughput_override.isSet()) {
        obj.insert(QString("ProvisionedThroughputOverride"), ::OpenAPI::toJsonValue(m_provisioned_throughput_override));
    }
    if (m_global_secondary_indexes.isSet()) {
        obj.insert(QString("GlobalSecondaryIndexes"), ::OpenAPI::toJsonValue(m_global_secondary_indexes));
    }
    if (m_table_class_override.isSet()) {
        obj.insert(QString("TableClassOverride"), ::OpenAPI::toJsonValue(m_table_class_override));
    }
    return obj;
}

QString OAIUpdateReplicationGroupMemberAction::getRegionName() const {
    return m_region_name;
}
void OAIUpdateReplicationGroupMemberAction::setRegionName(const QString &region_name) {
    m_region_name = region_name;
    m_region_name_isSet = true;
}

bool OAIUpdateReplicationGroupMemberAction::is_region_name_Set() const{
    return m_region_name_isSet;
}

bool OAIUpdateReplicationGroupMemberAction::is_region_name_Valid() const{
    return m_region_name_isValid;
}

QString OAIUpdateReplicationGroupMemberAction::getKmsMasterKeyId() const {
    return m_kms_master_key_id;
}
void OAIUpdateReplicationGroupMemberAction::setKmsMasterKeyId(const QString &kms_master_key_id) {
    m_kms_master_key_id = kms_master_key_id;
    m_kms_master_key_id_isSet = true;
}

bool OAIUpdateReplicationGroupMemberAction::is_kms_master_key_id_Set() const{
    return m_kms_master_key_id_isSet;
}

bool OAIUpdateReplicationGroupMemberAction::is_kms_master_key_id_Valid() const{
    return m_kms_master_key_id_isValid;
}

OAICreateReplicationGroupMemberAction_ProvisionedThroughputOverride OAIUpdateReplicationGroupMemberAction::getProvisionedThroughputOverride() const {
    return m_provisioned_throughput_override;
}
void OAIUpdateReplicationGroupMemberAction::setProvisionedThroughputOverride(const OAICreateReplicationGroupMemberAction_ProvisionedThroughputOverride &provisioned_throughput_override) {
    m_provisioned_throughput_override = provisioned_throughput_override;
    m_provisioned_throughput_override_isSet = true;
}

bool OAIUpdateReplicationGroupMemberAction::is_provisioned_throughput_override_Set() const{
    return m_provisioned_throughput_override_isSet;
}

bool OAIUpdateReplicationGroupMemberAction::is_provisioned_throughput_override_Valid() const{
    return m_provisioned_throughput_override_isValid;
}

QList OAIUpdateReplicationGroupMemberAction::getGlobalSecondaryIndexes() const {
    return m_global_secondary_indexes;
}
void OAIUpdateReplicationGroupMemberAction::setGlobalSecondaryIndexes(const QList &global_secondary_indexes) {
    m_global_secondary_indexes = global_secondary_indexes;
    m_global_secondary_indexes_isSet = true;
}

bool OAIUpdateReplicationGroupMemberAction::is_global_secondary_indexes_Set() const{
    return m_global_secondary_indexes_isSet;
}

bool OAIUpdateReplicationGroupMemberAction::is_global_secondary_indexes_Valid() const{
    return m_global_secondary_indexes_isValid;
}

OAITableClass OAIUpdateReplicationGroupMemberAction::getTableClassOverride() const {
    return m_table_class_override;
}
void OAIUpdateReplicationGroupMemberAction::setTableClassOverride(const OAITableClass &table_class_override) {
    m_table_class_override = table_class_override;
    m_table_class_override_isSet = true;
}

bool OAIUpdateReplicationGroupMemberAction::is_table_class_override_Set() const{
    return m_table_class_override_isSet;
}

bool OAIUpdateReplicationGroupMemberAction::is_table_class_override_Valid() const{
    return m_table_class_override_isValid;
}

bool OAIUpdateReplicationGroupMemberAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_region_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kms_master_key_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioned_throughput_override.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_global_secondary_indexes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_class_override.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateReplicationGroupMemberAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_region_name_isValid && true;
}

} // namespace OpenAPI
