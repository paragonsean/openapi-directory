/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateTableInput.h
 *
 * Represents the input of a &lt;code&gt;CreateTable&lt;/code&gt; operation.
 */

#ifndef OAICreateTableInput_H
#define OAICreateTableInput_H

#include <QJsonObject>

#include "OAIBillingMode.h"
#include "OAICreateTableInput_ProvisionedThroughput.h"
#include "OAICreateTableInput_SSESpecification.h"
#include "OAICreateTableInput_StreamSpecification.h"
#include "OAITableClass.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateTableInput_ProvisionedThroughput;
class OAICreateTableInput_StreamSpecification;
class OAICreateTableInput_SSESpecification;

class OAICreateTableInput : public OAIObject {
public:
    OAICreateTableInput();
    OAICreateTableInput(QString json);
    ~OAICreateTableInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAttributeDefinitions() const;
    void setAttributeDefinitions(const QList &attribute_definitions);
    bool is_attribute_definitions_Set() const;
    bool is_attribute_definitions_Valid() const;

    QString getTableName() const;
    void setTableName(const QString &table_name);
    bool is_table_name_Set() const;
    bool is_table_name_Valid() const;

    QList getKeySchema() const;
    void setKeySchema(const QList &key_schema);
    bool is_key_schema_Set() const;
    bool is_key_schema_Valid() const;

    QList getLocalSecondaryIndexes() const;
    void setLocalSecondaryIndexes(const QList &local_secondary_indexes);
    bool is_local_secondary_indexes_Set() const;
    bool is_local_secondary_indexes_Valid() const;

    QList getGlobalSecondaryIndexes() const;
    void setGlobalSecondaryIndexes(const QList &global_secondary_indexes);
    bool is_global_secondary_indexes_Set() const;
    bool is_global_secondary_indexes_Valid() const;

    OAIBillingMode getBillingMode() const;
    void setBillingMode(const OAIBillingMode &billing_mode);
    bool is_billing_mode_Set() const;
    bool is_billing_mode_Valid() const;

    OAICreateTableInput_ProvisionedThroughput getProvisionedThroughput() const;
    void setProvisionedThroughput(const OAICreateTableInput_ProvisionedThroughput &provisioned_throughput);
    bool is_provisioned_throughput_Set() const;
    bool is_provisioned_throughput_Valid() const;

    OAICreateTableInput_StreamSpecification getStreamSpecification() const;
    void setStreamSpecification(const OAICreateTableInput_StreamSpecification &stream_specification);
    bool is_stream_specification_Set() const;
    bool is_stream_specification_Valid() const;

    OAICreateTableInput_SSESpecification getSseSpecification() const;
    void setSseSpecification(const OAICreateTableInput_SSESpecification &sse_specification);
    bool is_sse_specification_Set() const;
    bool is_sse_specification_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAITableClass getTableClass() const;
    void setTableClass(const OAITableClass &table_class);
    bool is_table_class_Set() const;
    bool is_table_class_Valid() const;

    bool getDeletionProtectionEnabled() const;
    void setDeletionProtectionEnabled(const bool &deletion_protection_enabled);
    bool is_deletion_protection_enabled_Set() const;
    bool is_deletion_protection_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_attribute_definitions;
    bool m_attribute_definitions_isSet;
    bool m_attribute_definitions_isValid;

    QString m_table_name;
    bool m_table_name_isSet;
    bool m_table_name_isValid;

    QList m_key_schema;
    bool m_key_schema_isSet;
    bool m_key_schema_isValid;

    QList m_local_secondary_indexes;
    bool m_local_secondary_indexes_isSet;
    bool m_local_secondary_indexes_isValid;

    QList m_global_secondary_indexes;
    bool m_global_secondary_indexes_isSet;
    bool m_global_secondary_indexes_isValid;

    OAIBillingMode m_billing_mode;
    bool m_billing_mode_isSet;
    bool m_billing_mode_isValid;

    OAICreateTableInput_ProvisionedThroughput m_provisioned_throughput;
    bool m_provisioned_throughput_isSet;
    bool m_provisioned_throughput_isValid;

    OAICreateTableInput_StreamSpecification m_stream_specification;
    bool m_stream_specification_isSet;
    bool m_stream_specification_isValid;

    OAICreateTableInput_SSESpecification m_sse_specification;
    bool m_sse_specification_isSet;
    bool m_sse_specification_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAITableClass m_table_class;
    bool m_table_class_isSet;
    bool m_table_class_isValid;

    bool m_deletion_protection_enabled;
    bool m_deletion_protection_enabled_isSet;
    bool m_deletion_protection_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateTableInput)

#endif // OAICreateTableInput_H
