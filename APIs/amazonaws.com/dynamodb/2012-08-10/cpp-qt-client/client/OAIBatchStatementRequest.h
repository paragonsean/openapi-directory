/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBatchStatementRequest.h
 *
 *  A PartiQL batch statement request. 
 */

#ifndef OAIBatchStatementRequest_H
#define OAIBatchStatementRequest_H

#include <QJsonObject>

#include "OAIReturnValuesOnConditionCheckFailure.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBatchStatementRequest : public OAIObject {
public:
    OAIBatchStatementRequest();
    OAIBatchStatementRequest(QString json);
    ~OAIBatchStatementRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStatement() const;
    void setStatement(const QString &statement);
    bool is_statement_Set() const;
    bool is_statement_Valid() const;

    QList getParameters() const;
    void setParameters(const QList &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    bool getConsistentRead() const;
    void setConsistentRead(const bool &consistent_read);
    bool is_consistent_read_Set() const;
    bool is_consistent_read_Valid() const;

    OAIReturnValuesOnConditionCheckFailure getReturnValuesOnConditionCheckFailure() const;
    void setReturnValuesOnConditionCheckFailure(const OAIReturnValuesOnConditionCheckFailure &return_values_on_condition_check_failure);
    bool is_return_values_on_condition_check_failure_Set() const;
    bool is_return_values_on_condition_check_failure_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_statement;
    bool m_statement_isSet;
    bool m_statement_isValid;

    QList m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    bool m_consistent_read;
    bool m_consistent_read_isSet;
    bool m_consistent_read_isValid;

    OAIReturnValuesOnConditionCheckFailure m_return_values_on_condition_check_failure;
    bool m_return_values_on_condition_check_failure_isSet;
    bool m_return_values_on_condition_check_failure_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBatchStatementRequest)

#endif // OAIBatchStatementRequest_H
