/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReplicaDescription.h
 *
 * Contains the details of the replica.
 */

#ifndef OAIReplicaDescription_H
#define OAIReplicaDescription_H

#include <QJsonObject>

#include "OAIReplicaDescription_ProvisionedThroughputOverride.h"
#include "OAIReplicaStatus.h"
#include "OAITableClassSummary.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReplicaDescription_ProvisionedThroughputOverride;
class OAITableClassSummary;

class OAIReplicaDescription : public OAIObject {
public:
    OAIReplicaDescription();
    OAIReplicaDescription(QString json);
    ~OAIReplicaDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRegionName() const;
    void setRegionName(const QString &region_name);
    bool is_region_name_Set() const;
    bool is_region_name_Valid() const;

    OAIReplicaStatus getReplicaStatus() const;
    void setReplicaStatus(const OAIReplicaStatus &replica_status);
    bool is_replica_status_Set() const;
    bool is_replica_status_Valid() const;

    QString getReplicaStatusDescription() const;
    void setReplicaStatusDescription(const QString &replica_status_description);
    bool is_replica_status_description_Set() const;
    bool is_replica_status_description_Valid() const;

    QString getReplicaStatusPercentProgress() const;
    void setReplicaStatusPercentProgress(const QString &replica_status_percent_progress);
    bool is_replica_status_percent_progress_Set() const;
    bool is_replica_status_percent_progress_Valid() const;

    QString getKmsMasterKeyId() const;
    void setKmsMasterKeyId(const QString &kms_master_key_id);
    bool is_kms_master_key_id_Set() const;
    bool is_kms_master_key_id_Valid() const;

    OAIReplicaDescription_ProvisionedThroughputOverride getProvisionedThroughputOverride() const;
    void setProvisionedThroughputOverride(const OAIReplicaDescription_ProvisionedThroughputOverride &provisioned_throughput_override);
    bool is_provisioned_throughput_override_Set() const;
    bool is_provisioned_throughput_override_Valid() const;

    QList getGlobalSecondaryIndexes() const;
    void setGlobalSecondaryIndexes(const QList &global_secondary_indexes);
    bool is_global_secondary_indexes_Set() const;
    bool is_global_secondary_indexes_Valid() const;

    QDateTime getReplicaInaccessibleDateTime() const;
    void setReplicaInaccessibleDateTime(const QDateTime &replica_inaccessible_date_time);
    bool is_replica_inaccessible_date_time_Set() const;
    bool is_replica_inaccessible_date_time_Valid() const;

    OAITableClassSummary getReplicaTableClassSummary() const;
    void setReplicaTableClassSummary(const OAITableClassSummary &replica_table_class_summary);
    bool is_replica_table_class_summary_Set() const;
    bool is_replica_table_class_summary_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_region_name;
    bool m_region_name_isSet;
    bool m_region_name_isValid;

    OAIReplicaStatus m_replica_status;
    bool m_replica_status_isSet;
    bool m_replica_status_isValid;

    QString m_replica_status_description;
    bool m_replica_status_description_isSet;
    bool m_replica_status_description_isValid;

    QString m_replica_status_percent_progress;
    bool m_replica_status_percent_progress_isSet;
    bool m_replica_status_percent_progress_isValid;

    QString m_kms_master_key_id;
    bool m_kms_master_key_id_isSet;
    bool m_kms_master_key_id_isValid;

    OAIReplicaDescription_ProvisionedThroughputOverride m_provisioned_throughput_override;
    bool m_provisioned_throughput_override_isSet;
    bool m_provisioned_throughput_override_isValid;

    QList m_global_secondary_indexes;
    bool m_global_secondary_indexes_isSet;
    bool m_global_secondary_indexes_isValid;

    QDateTime m_replica_inaccessible_date_time;
    bool m_replica_inaccessible_date_time_isSet;
    bool m_replica_inaccessible_date_time_isValid;

    OAITableClassSummary m_replica_table_class_summary;
    bool m_replica_table_class_summary_isSet;
    bool m_replica_table_class_summary_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReplicaDescription)

#endif // OAIReplicaDescription_H
