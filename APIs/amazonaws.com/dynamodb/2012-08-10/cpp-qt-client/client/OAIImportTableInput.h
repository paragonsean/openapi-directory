/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImportTableInput.h
 *
 * 
 */

#ifndef OAIImportTableInput_H
#define OAIImportTableInput_H

#include <QJsonObject>

#include "OAIImportTableInput_InputFormatOptions.h"
#include "OAIImportTableInput_S3BucketSource.h"
#include "OAIImportTableInput_TableCreationParameters.h"
#include "OAIInputCompressionType.h"
#include "OAIInputFormat.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImportTableInput_S3BucketSource;
class OAIImportTableInput_InputFormatOptions;
class OAIImportTableInput_TableCreationParameters;

class OAIImportTableInput : public OAIObject {
public:
    OAIImportTableInput();
    OAIImportTableInput(QString json);
    ~OAIImportTableInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    OAIImportTableInput_S3BucketSource getS3BucketSource() const;
    void setS3BucketSource(const OAIImportTableInput_S3BucketSource &s3_bucket_source);
    bool is_s3_bucket_source_Set() const;
    bool is_s3_bucket_source_Valid() const;

    OAIInputFormat getInputFormat() const;
    void setInputFormat(const OAIInputFormat &input_format);
    bool is_input_format_Set() const;
    bool is_input_format_Valid() const;

    OAIImportTableInput_InputFormatOptions getInputFormatOptions() const;
    void setInputFormatOptions(const OAIImportTableInput_InputFormatOptions &input_format_options);
    bool is_input_format_options_Set() const;
    bool is_input_format_options_Valid() const;

    OAIInputCompressionType getInputCompressionType() const;
    void setInputCompressionType(const OAIInputCompressionType &input_compression_type);
    bool is_input_compression_type_Set() const;
    bool is_input_compression_type_Valid() const;

    OAIImportTableInput_TableCreationParameters getTableCreationParameters() const;
    void setTableCreationParameters(const OAIImportTableInput_TableCreationParameters &table_creation_parameters);
    bool is_table_creation_parameters_Set() const;
    bool is_table_creation_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    OAIImportTableInput_S3BucketSource m_s3_bucket_source;
    bool m_s3_bucket_source_isSet;
    bool m_s3_bucket_source_isValid;

    OAIInputFormat m_input_format;
    bool m_input_format_isSet;
    bool m_input_format_isValid;

    OAIImportTableInput_InputFormatOptions m_input_format_options;
    bool m_input_format_options_isSet;
    bool m_input_format_options_isValid;

    OAIInputCompressionType m_input_compression_type;
    bool m_input_compression_type_isSet;
    bool m_input_compression_type_isValid;

    OAIImportTableInput_TableCreationParameters m_table_creation_parameters;
    bool m_table_creation_parameters_isSet;
    bool m_table_creation_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImportTableInput)

#endif // OAIImportTableInput_H
