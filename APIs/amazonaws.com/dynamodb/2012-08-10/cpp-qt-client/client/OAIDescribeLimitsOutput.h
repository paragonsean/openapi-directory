/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeLimitsOutput.h
 *
 * Represents the output of a &lt;code&gt;DescribeLimits&lt;/code&gt; operation.
 */

#ifndef OAIDescribeLimitsOutput_H
#define OAIDescribeLimitsOutput_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeLimitsOutput : public OAIObject {
public:
    OAIDescribeLimitsOutput();
    OAIDescribeLimitsOutput(QString json);
    ~OAIDescribeLimitsOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAccountMaxReadCapacityUnits() const;
    void setAccountMaxReadCapacityUnits(const qint32 &account_max_read_capacity_units);
    bool is_account_max_read_capacity_units_Set() const;
    bool is_account_max_read_capacity_units_Valid() const;

    qint32 getAccountMaxWriteCapacityUnits() const;
    void setAccountMaxWriteCapacityUnits(const qint32 &account_max_write_capacity_units);
    bool is_account_max_write_capacity_units_Set() const;
    bool is_account_max_write_capacity_units_Valid() const;

    qint32 getTableMaxReadCapacityUnits() const;
    void setTableMaxReadCapacityUnits(const qint32 &table_max_read_capacity_units);
    bool is_table_max_read_capacity_units_Set() const;
    bool is_table_max_read_capacity_units_Valid() const;

    qint32 getTableMaxWriteCapacityUnits() const;
    void setTableMaxWriteCapacityUnits(const qint32 &table_max_write_capacity_units);
    bool is_table_max_write_capacity_units_Set() const;
    bool is_table_max_write_capacity_units_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_account_max_read_capacity_units;
    bool m_account_max_read_capacity_units_isSet;
    bool m_account_max_read_capacity_units_isValid;

    qint32 m_account_max_write_capacity_units;
    bool m_account_max_write_capacity_units_isSet;
    bool m_account_max_write_capacity_units_isValid;

    qint32 m_table_max_read_capacity_units;
    bool m_table_max_read_capacity_units_isSet;
    bool m_table_max_read_capacity_units_isValid;

    qint32 m_table_max_write_capacity_units;
    bool m_table_max_write_capacity_units_isSet;
    bool m_table_max_write_capacity_units_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeLimitsOutput)

#endif // OAIDescribeLimitsOutput_H
