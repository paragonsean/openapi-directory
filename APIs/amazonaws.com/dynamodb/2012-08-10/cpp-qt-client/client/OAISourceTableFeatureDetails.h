/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISourceTableFeatureDetails.h
 *
 * Contains the details of the features enabled on the table when the backup was created. For example, LSIs, GSIs, streams, TTL. 
 */

#ifndef OAISourceTableFeatureDetails_H
#define OAISourceTableFeatureDetails_H

#include <QJsonObject>

#include "OAISourceTableFeatureDetails_SSEDescription.h"
#include "OAISourceTableFeatureDetails_StreamDescription.h"
#include "OAISourceTableFeatureDetails_TimeToLiveDescription.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISourceTableFeatureDetails_StreamDescription;
class OAISourceTableFeatureDetails_TimeToLiveDescription;
class OAISourceTableFeatureDetails_SSEDescription;

class OAISourceTableFeatureDetails : public OAIObject {
public:
    OAISourceTableFeatureDetails();
    OAISourceTableFeatureDetails(QString json);
    ~OAISourceTableFeatureDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getLocalSecondaryIndexes() const;
    void setLocalSecondaryIndexes(const QList &local_secondary_indexes);
    bool is_local_secondary_indexes_Set() const;
    bool is_local_secondary_indexes_Valid() const;

    QList getGlobalSecondaryIndexes() const;
    void setGlobalSecondaryIndexes(const QList &global_secondary_indexes);
    bool is_global_secondary_indexes_Set() const;
    bool is_global_secondary_indexes_Valid() const;

    OAISourceTableFeatureDetails_StreamDescription getStreamDescription() const;
    void setStreamDescription(const OAISourceTableFeatureDetails_StreamDescription &stream_description);
    bool is_stream_description_Set() const;
    bool is_stream_description_Valid() const;

    OAISourceTableFeatureDetails_TimeToLiveDescription getTimeToLiveDescription() const;
    void setTimeToLiveDescription(const OAISourceTableFeatureDetails_TimeToLiveDescription &time_to_live_description);
    bool is_time_to_live_description_Set() const;
    bool is_time_to_live_description_Valid() const;

    OAISourceTableFeatureDetails_SSEDescription getSseDescription() const;
    void setSseDescription(const OAISourceTableFeatureDetails_SSEDescription &sse_description);
    bool is_sse_description_Set() const;
    bool is_sse_description_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_local_secondary_indexes;
    bool m_local_secondary_indexes_isSet;
    bool m_local_secondary_indexes_isValid;

    QList m_global_secondary_indexes;
    bool m_global_secondary_indexes_isSet;
    bool m_global_secondary_indexes_isValid;

    OAISourceTableFeatureDetails_StreamDescription m_stream_description;
    bool m_stream_description_isSet;
    bool m_stream_description_isValid;

    OAISourceTableFeatureDetails_TimeToLiveDescription m_time_to_live_description;
    bool m_time_to_live_description_isSet;
    bool m_time_to_live_description_isValid;

    OAISourceTableFeatureDetails_SSEDescription m_sse_description;
    bool m_sse_description_isSet;
    bool m_sse_description_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISourceTableFeatureDetails)

#endif // OAISourceTableFeatureDetails_H
