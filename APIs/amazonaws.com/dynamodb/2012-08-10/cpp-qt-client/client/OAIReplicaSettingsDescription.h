/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReplicaSettingsDescription.h
 *
 * Represents the properties of a replica.
 */

#ifndef OAIReplicaSettingsDescription_H
#define OAIReplicaSettingsDescription_H

#include <QJsonObject>

#include "OAIReplicaSettingsDescription_ReplicaBillingModeSummary.h"
#include "OAIReplicaSettingsDescription_ReplicaProvisionedReadCapacityAutoScalingSettings.h"
#include "OAIReplicaSettingsDescription_ReplicaProvisionedWriteCapacityAutoScalingSettings.h"
#include "OAIReplicaStatus.h"
#include "OAITableClassSummary.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReplicaSettingsDescription_ReplicaBillingModeSummary;
class OAIReplicaSettingsDescription_ReplicaProvisionedReadCapacityAutoScalingSettings;
class OAIReplicaSettingsDescription_ReplicaProvisionedWriteCapacityAutoScalingSettings;
class OAITableClassSummary;

class OAIReplicaSettingsDescription : public OAIObject {
public:
    OAIReplicaSettingsDescription();
    OAIReplicaSettingsDescription(QString json);
    ~OAIReplicaSettingsDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRegionName() const;
    void setRegionName(const QString &region_name);
    bool is_region_name_Set() const;
    bool is_region_name_Valid() const;

    OAIReplicaStatus getReplicaStatus() const;
    void setReplicaStatus(const OAIReplicaStatus &replica_status);
    bool is_replica_status_Set() const;
    bool is_replica_status_Valid() const;

    OAIReplicaSettingsDescription_ReplicaBillingModeSummary getReplicaBillingModeSummary() const;
    void setReplicaBillingModeSummary(const OAIReplicaSettingsDescription_ReplicaBillingModeSummary &replica_billing_mode_summary);
    bool is_replica_billing_mode_summary_Set() const;
    bool is_replica_billing_mode_summary_Valid() const;

    qint32 getReplicaProvisionedReadCapacityUnits() const;
    void setReplicaProvisionedReadCapacityUnits(const qint32 &replica_provisioned_read_capacity_units);
    bool is_replica_provisioned_read_capacity_units_Set() const;
    bool is_replica_provisioned_read_capacity_units_Valid() const;

    OAIReplicaSettingsDescription_ReplicaProvisionedReadCapacityAutoScalingSettings getReplicaProvisionedReadCapacityAutoScalingSettings() const;
    void setReplicaProvisionedReadCapacityAutoScalingSettings(const OAIReplicaSettingsDescription_ReplicaProvisionedReadCapacityAutoScalingSettings &replica_provisioned_read_capacity_auto_scaling_settings);
    bool is_replica_provisioned_read_capacity_auto_scaling_settings_Set() const;
    bool is_replica_provisioned_read_capacity_auto_scaling_settings_Valid() const;

    qint32 getReplicaProvisionedWriteCapacityUnits() const;
    void setReplicaProvisionedWriteCapacityUnits(const qint32 &replica_provisioned_write_capacity_units);
    bool is_replica_provisioned_write_capacity_units_Set() const;
    bool is_replica_provisioned_write_capacity_units_Valid() const;

    OAIReplicaSettingsDescription_ReplicaProvisionedWriteCapacityAutoScalingSettings getReplicaProvisionedWriteCapacityAutoScalingSettings() const;
    void setReplicaProvisionedWriteCapacityAutoScalingSettings(const OAIReplicaSettingsDescription_ReplicaProvisionedWriteCapacityAutoScalingSettings &replica_provisioned_write_capacity_auto_scaling_settings);
    bool is_replica_provisioned_write_capacity_auto_scaling_settings_Set() const;
    bool is_replica_provisioned_write_capacity_auto_scaling_settings_Valid() const;

    QList getReplicaGlobalSecondaryIndexSettings() const;
    void setReplicaGlobalSecondaryIndexSettings(const QList &replica_global_secondary_index_settings);
    bool is_replica_global_secondary_index_settings_Set() const;
    bool is_replica_global_secondary_index_settings_Valid() const;

    OAITableClassSummary getReplicaTableClassSummary() const;
    void setReplicaTableClassSummary(const OAITableClassSummary &replica_table_class_summary);
    bool is_replica_table_class_summary_Set() const;
    bool is_replica_table_class_summary_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_region_name;
    bool m_region_name_isSet;
    bool m_region_name_isValid;

    OAIReplicaStatus m_replica_status;
    bool m_replica_status_isSet;
    bool m_replica_status_isValid;

    OAIReplicaSettingsDescription_ReplicaBillingModeSummary m_replica_billing_mode_summary;
    bool m_replica_billing_mode_summary_isSet;
    bool m_replica_billing_mode_summary_isValid;

    qint32 m_replica_provisioned_read_capacity_units;
    bool m_replica_provisioned_read_capacity_units_isSet;
    bool m_replica_provisioned_read_capacity_units_isValid;

    OAIReplicaSettingsDescription_ReplicaProvisionedReadCapacityAutoScalingSettings m_replica_provisioned_read_capacity_auto_scaling_settings;
    bool m_replica_provisioned_read_capacity_auto_scaling_settings_isSet;
    bool m_replica_provisioned_read_capacity_auto_scaling_settings_isValid;

    qint32 m_replica_provisioned_write_capacity_units;
    bool m_replica_provisioned_write_capacity_units_isSet;
    bool m_replica_provisioned_write_capacity_units_isValid;

    OAIReplicaSettingsDescription_ReplicaProvisionedWriteCapacityAutoScalingSettings m_replica_provisioned_write_capacity_auto_scaling_settings;
    bool m_replica_provisioned_write_capacity_auto_scaling_settings_isSet;
    bool m_replica_provisioned_write_capacity_auto_scaling_settings_isValid;

    QList m_replica_global_secondary_index_settings;
    bool m_replica_global_secondary_index_settings_isSet;
    bool m_replica_global_secondary_index_settings_isValid;

    OAITableClassSummary m_replica_table_class_summary;
    bool m_replica_table_class_summary_isSet;
    bool m_replica_table_class_summary_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReplicaSettingsDescription)

#endif // OAIReplicaSettingsDescription_H
