/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGlobalSecondaryIndexUpdate_Create.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGlobalSecondaryIndexUpdate_Create::OAIGlobalSecondaryIndexUpdate_Create(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGlobalSecondaryIndexUpdate_Create::OAIGlobalSecondaryIndexUpdate_Create() {
    this->initializeModel();
}

OAIGlobalSecondaryIndexUpdate_Create::~OAIGlobalSecondaryIndexUpdate_Create() {}

void OAIGlobalSecondaryIndexUpdate_Create::initializeModel() {

    m_index_name_isSet = false;
    m_index_name_isValid = false;

    m_key_schema_isSet = false;
    m_key_schema_isValid = false;

    m_projection_isSet = false;
    m_projection_isValid = false;

    m_provisioned_throughput_isSet = false;
    m_provisioned_throughput_isValid = false;
}

void OAIGlobalSecondaryIndexUpdate_Create::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGlobalSecondaryIndexUpdate_Create::fromJsonObject(QJsonObject json) {

    m_index_name_isValid = ::OpenAPI::fromJsonValue(m_index_name, json[QString("IndexName")]);
    m_index_name_isSet = !json[QString("IndexName")].isNull() && m_index_name_isValid;

    m_key_schema_isValid = ::OpenAPI::fromJsonValue(m_key_schema, json[QString("KeySchema")]);
    m_key_schema_isSet = !json[QString("KeySchema")].isNull() && m_key_schema_isValid;

    m_projection_isValid = ::OpenAPI::fromJsonValue(m_projection, json[QString("Projection")]);
    m_projection_isSet = !json[QString("Projection")].isNull() && m_projection_isValid;

    m_provisioned_throughput_isValid = ::OpenAPI::fromJsonValue(m_provisioned_throughput, json[QString("ProvisionedThroughput")]);
    m_provisioned_throughput_isSet = !json[QString("ProvisionedThroughput")].isNull() && m_provisioned_throughput_isValid;
}

QString OAIGlobalSecondaryIndexUpdate_Create::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGlobalSecondaryIndexUpdate_Create::asJsonObject() const {
    QJsonObject obj;
    if (m_index_name_isSet) {
        obj.insert(QString("IndexName"), ::OpenAPI::toJsonValue(m_index_name));
    }
    if (m_key_schema.isSet()) {
        obj.insert(QString("KeySchema"), ::OpenAPI::toJsonValue(m_key_schema));
    }
    if (m_projection.isSet()) {
        obj.insert(QString("Projection"), ::OpenAPI::toJsonValue(m_projection));
    }
    if (m_provisioned_throughput.isSet()) {
        obj.insert(QString("ProvisionedThroughput"), ::OpenAPI::toJsonValue(m_provisioned_throughput));
    }
    return obj;
}

QString OAIGlobalSecondaryIndexUpdate_Create::getIndexName() const {
    return m_index_name;
}
void OAIGlobalSecondaryIndexUpdate_Create::setIndexName(const QString &index_name) {
    m_index_name = index_name;
    m_index_name_isSet = true;
}

bool OAIGlobalSecondaryIndexUpdate_Create::is_index_name_Set() const{
    return m_index_name_isSet;
}

bool OAIGlobalSecondaryIndexUpdate_Create::is_index_name_Valid() const{
    return m_index_name_isValid;
}

QList OAIGlobalSecondaryIndexUpdate_Create::getKeySchema() const {
    return m_key_schema;
}
void OAIGlobalSecondaryIndexUpdate_Create::setKeySchema(const QList &key_schema) {
    m_key_schema = key_schema;
    m_key_schema_isSet = true;
}

bool OAIGlobalSecondaryIndexUpdate_Create::is_key_schema_Set() const{
    return m_key_schema_isSet;
}

bool OAIGlobalSecondaryIndexUpdate_Create::is_key_schema_Valid() const{
    return m_key_schema_isValid;
}

OAICreateGlobalSecondaryIndexAction_Projection OAIGlobalSecondaryIndexUpdate_Create::getProjection() const {
    return m_projection;
}
void OAIGlobalSecondaryIndexUpdate_Create::setProjection(const OAICreateGlobalSecondaryIndexAction_Projection &projection) {
    m_projection = projection;
    m_projection_isSet = true;
}

bool OAIGlobalSecondaryIndexUpdate_Create::is_projection_Set() const{
    return m_projection_isSet;
}

bool OAIGlobalSecondaryIndexUpdate_Create::is_projection_Valid() const{
    return m_projection_isValid;
}

OAICreateGlobalSecondaryIndexAction_ProvisionedThroughput OAIGlobalSecondaryIndexUpdate_Create::getProvisionedThroughput() const {
    return m_provisioned_throughput;
}
void OAIGlobalSecondaryIndexUpdate_Create::setProvisionedThroughput(const OAICreateGlobalSecondaryIndexAction_ProvisionedThroughput &provisioned_throughput) {
    m_provisioned_throughput = provisioned_throughput;
    m_provisioned_throughput_isSet = true;
}

bool OAIGlobalSecondaryIndexUpdate_Create::is_provisioned_throughput_Set() const{
    return m_provisioned_throughput_isSet;
}

bool OAIGlobalSecondaryIndexUpdate_Create::is_provisioned_throughput_Valid() const{
    return m_provisioned_throughput_isValid;
}

bool OAIGlobalSecondaryIndexUpdate_Create::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_index_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_schema.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_projection.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioned_throughput.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGlobalSecondaryIndexUpdate_Create::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_index_name_isValid && m_key_schema_isValid && m_projection_isValid && true;
}

} // namespace OpenAPI
