/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttributeValueUpdate.h
 *
 * &lt;p&gt;For the &lt;code&gt;UpdateItem&lt;/code&gt; operation, represents the attributes to be modified, the action to perform on each, and the new value for each.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You cannot use &lt;code&gt;UpdateItem&lt;/code&gt; to update any primary key attributes. Instead, you will need to delete the item, and then use &lt;code&gt;PutItem&lt;/code&gt; to create a new item with new attributes.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Attribute values cannot be null; string and binary type attributes must have lengths greater than zero; and set type attributes must not be empty. Requests with empty values will be rejected with a &lt;code&gt;ValidationException&lt;/code&gt; exception.&lt;/p&gt;
 */

#ifndef OAIAttributeValueUpdate_H
#define OAIAttributeValueUpdate_H

#include <QJsonObject>

#include "OAIAttributeAction.h"
#include "OAIAttributeValueUpdate_Value.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttributeValueUpdate_Value;

class OAIAttributeValueUpdate : public OAIObject {
public:
    OAIAttributeValueUpdate();
    OAIAttributeValueUpdate(QString json);
    ~OAIAttributeValueUpdate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAttributeValueUpdate_Value getValue() const;
    void setValue(const OAIAttributeValueUpdate_Value &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    OAIAttributeAction getAction() const;
    void setAction(const OAIAttributeAction &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAttributeValueUpdate_Value m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    OAIAttributeAction m_action;
    bool m_action_isSet;
    bool m_action_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttributeValueUpdate)

#endif // OAIAttributeValueUpdate_H
