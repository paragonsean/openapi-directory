/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransactWriteItem.h
 *
 * A list of requests that can perform update, put, delete, or check operations on multiple items in one or more tables atomically.
 */

#ifndef OAITransactWriteItem_H
#define OAITransactWriteItem_H

#include <QJsonObject>

#include "OAITransactWriteItem_ConditionCheck.h"
#include "OAITransactWriteItem_Delete.h"
#include "OAITransactWriteItem_Put.h"
#include "OAITransactWriteItem_Update.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITransactWriteItem_ConditionCheck;
class OAITransactWriteItem_Put;
class OAITransactWriteItem_Delete;
class OAITransactWriteItem_Update;

class OAITransactWriteItem : public OAIObject {
public:
    OAITransactWriteItem();
    OAITransactWriteItem(QString json);
    ~OAITransactWriteItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITransactWriteItem_ConditionCheck getConditionCheck() const;
    void setConditionCheck(const OAITransactWriteItem_ConditionCheck &condition_check);
    bool is_condition_check_Set() const;
    bool is_condition_check_Valid() const;

    OAITransactWriteItem_Put getPut() const;
    void setPut(const OAITransactWriteItem_Put &put);
    bool is_put_Set() const;
    bool is_put_Valid() const;

    OAITransactWriteItem_Delete getRDelete() const;
    void setRDelete(const OAITransactWriteItem_Delete &r_delete);
    bool is_r_delete_Set() const;
    bool is_r_delete_Valid() const;

    OAITransactWriteItem_Update getUpdate() const;
    void setUpdate(const OAITransactWriteItem_Update &update);
    bool is_update_Set() const;
    bool is_update_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITransactWriteItem_ConditionCheck m_condition_check;
    bool m_condition_check_isSet;
    bool m_condition_check_isValid;

    OAITransactWriteItem_Put m_put;
    bool m_put_isSet;
    bool m_put_isValid;

    OAITransactWriteItem_Delete m_r_delete;
    bool m_r_delete_isSet;
    bool m_r_delete_isValid;

    OAITransactWriteItem_Update m_update;
    bool m_update_isSet;
    bool m_update_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransactWriteItem)

#endif // OAITransactWriteItem_H
