/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetItemOutput_ConsumedCapacity.h
 *
 * 
 */

#ifndef OAIGetItemOutput_ConsumedCapacity_H
#define OAIGetItemOutput_ConsumedCapacity_H

#include <QJsonObject>

#include "OAIConsumedCapacity_Table.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConsumedCapacity_Table;

class OAIGetItemOutput_ConsumedCapacity : public OAIObject {
public:
    OAIGetItemOutput_ConsumedCapacity();
    OAIGetItemOutput_ConsumedCapacity(QString json);
    ~OAIGetItemOutput_ConsumedCapacity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTableName() const;
    void setTableName(const QString &table_name);
    bool is_table_name_Set() const;
    bool is_table_name_Valid() const;

    double getCapacityUnits() const;
    void setCapacityUnits(const double &capacity_units);
    bool is_capacity_units_Set() const;
    bool is_capacity_units_Valid() const;

    double getReadCapacityUnits() const;
    void setReadCapacityUnits(const double &read_capacity_units);
    bool is_read_capacity_units_Set() const;
    bool is_read_capacity_units_Valid() const;

    double getWriteCapacityUnits() const;
    void setWriteCapacityUnits(const double &write_capacity_units);
    bool is_write_capacity_units_Set() const;
    bool is_write_capacity_units_Valid() const;

    OAIConsumedCapacity_Table getTable() const;
    void setTable(const OAIConsumedCapacity_Table &table);
    bool is_table_Set() const;
    bool is_table_Valid() const;

    QMap getLocalSecondaryIndexes() const;
    void setLocalSecondaryIndexes(const QMap &local_secondary_indexes);
    bool is_local_secondary_indexes_Set() const;
    bool is_local_secondary_indexes_Valid() const;

    QMap getGlobalSecondaryIndexes() const;
    void setGlobalSecondaryIndexes(const QMap &global_secondary_indexes);
    bool is_global_secondary_indexes_Set() const;
    bool is_global_secondary_indexes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_table_name;
    bool m_table_name_isSet;
    bool m_table_name_isValid;

    double m_capacity_units;
    bool m_capacity_units_isSet;
    bool m_capacity_units_isValid;

    double m_read_capacity_units;
    bool m_read_capacity_units_isSet;
    bool m_read_capacity_units_isValid;

    double m_write_capacity_units;
    bool m_write_capacity_units_isSet;
    bool m_write_capacity_units_isValid;

    OAIConsumedCapacity_Table m_table;
    bool m_table_isSet;
    bool m_table_isValid;

    QMap m_local_secondary_indexes;
    bool m_local_secondary_indexes_isSet;
    bool m_local_secondary_indexes_isValid;

    QMap m_global_secondary_indexes;
    bool m_global_secondary_indexes_isSet;
    bool m_global_secondary_indexes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetItemOutput_ConsumedCapacity)

#endif // OAIGetItemOutput_ConsumedCapacity_H
