/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableDescription_BillingModeSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableDescription_BillingModeSummary::OAITableDescription_BillingModeSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableDescription_BillingModeSummary::OAITableDescription_BillingModeSummary() {
    this->initializeModel();
}

OAITableDescription_BillingModeSummary::~OAITableDescription_BillingModeSummary() {}

void OAITableDescription_BillingModeSummary::initializeModel() {

    m_billing_mode_isSet = false;
    m_billing_mode_isValid = false;

    m_last_update_to_pay_per_request_date_time_isSet = false;
    m_last_update_to_pay_per_request_date_time_isValid = false;
}

void OAITableDescription_BillingModeSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableDescription_BillingModeSummary::fromJsonObject(QJsonObject json) {

    m_billing_mode_isValid = ::OpenAPI::fromJsonValue(m_billing_mode, json[QString("BillingMode")]);
    m_billing_mode_isSet = !json[QString("BillingMode")].isNull() && m_billing_mode_isValid;

    m_last_update_to_pay_per_request_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_update_to_pay_per_request_date_time, json[QString("LastUpdateToPayPerRequestDateTime")]);
    m_last_update_to_pay_per_request_date_time_isSet = !json[QString("LastUpdateToPayPerRequestDateTime")].isNull() && m_last_update_to_pay_per_request_date_time_isValid;
}

QString OAITableDescription_BillingModeSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableDescription_BillingModeSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_billing_mode.isSet()) {
        obj.insert(QString("BillingMode"), ::OpenAPI::toJsonValue(m_billing_mode));
    }
    if (m_last_update_to_pay_per_request_date_time_isSet) {
        obj.insert(QString("LastUpdateToPayPerRequestDateTime"), ::OpenAPI::toJsonValue(m_last_update_to_pay_per_request_date_time));
    }
    return obj;
}

OAIBillingMode OAITableDescription_BillingModeSummary::getBillingMode() const {
    return m_billing_mode;
}
void OAITableDescription_BillingModeSummary::setBillingMode(const OAIBillingMode &billing_mode) {
    m_billing_mode = billing_mode;
    m_billing_mode_isSet = true;
}

bool OAITableDescription_BillingModeSummary::is_billing_mode_Set() const{
    return m_billing_mode_isSet;
}

bool OAITableDescription_BillingModeSummary::is_billing_mode_Valid() const{
    return m_billing_mode_isValid;
}

QDateTime OAITableDescription_BillingModeSummary::getLastUpdateToPayPerRequestDateTime() const {
    return m_last_update_to_pay_per_request_date_time;
}
void OAITableDescription_BillingModeSummary::setLastUpdateToPayPerRequestDateTime(const QDateTime &last_update_to_pay_per_request_date_time) {
    m_last_update_to_pay_per_request_date_time = last_update_to_pay_per_request_date_time;
    m_last_update_to_pay_per_request_date_time_isSet = true;
}

bool OAITableDescription_BillingModeSummary::is_last_update_to_pay_per_request_date_time_Set() const{
    return m_last_update_to_pay_per_request_date_time_isSet;
}

bool OAITableDescription_BillingModeSummary::is_last_update_to_pay_per_request_date_time_Valid() const{
    return m_last_update_to_pay_per_request_date_time_isValid;
}

bool OAITableDescription_BillingModeSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billing_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_to_pay_per_request_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableDescription_BillingModeSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
