/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteItemInput.h
 *
 * Represents the input of a &lt;code&gt;DeleteItem&lt;/code&gt; operation.
 */

#ifndef OAIDeleteItemInput_H
#define OAIDeleteItemInput_H

#include <QJsonObject>

#include "OAIConditionalOperator.h"
#include "OAIReturnConsumedCapacity.h"
#include "OAIReturnItemCollectionMetrics.h"
#include "OAIReturnValue.h"
#include "OAIReturnValuesOnConditionCheckFailure.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeleteItemInput : public OAIObject {
public:
    OAIDeleteItemInput();
    OAIDeleteItemInput(QString json);
    ~OAIDeleteItemInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTableName() const;
    void setTableName(const QString &table_name);
    bool is_table_name_Set() const;
    bool is_table_name_Valid() const;

    QMap getKey() const;
    void setKey(const QMap &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QMap getExpected() const;
    void setExpected(const QMap &expected);
    bool is_expected_Set() const;
    bool is_expected_Valid() const;

    OAIConditionalOperator getConditionalOperator() const;
    void setConditionalOperator(const OAIConditionalOperator &conditional_operator);
    bool is_conditional_operator_Set() const;
    bool is_conditional_operator_Valid() const;

    OAIReturnValue getReturnValues() const;
    void setReturnValues(const OAIReturnValue &return_values);
    bool is_return_values_Set() const;
    bool is_return_values_Valid() const;

    OAIReturnConsumedCapacity getReturnConsumedCapacity() const;
    void setReturnConsumedCapacity(const OAIReturnConsumedCapacity &return_consumed_capacity);
    bool is_return_consumed_capacity_Set() const;
    bool is_return_consumed_capacity_Valid() const;

    OAIReturnItemCollectionMetrics getReturnItemCollectionMetrics() const;
    void setReturnItemCollectionMetrics(const OAIReturnItemCollectionMetrics &return_item_collection_metrics);
    bool is_return_item_collection_metrics_Set() const;
    bool is_return_item_collection_metrics_Valid() const;

    QString getConditionExpression() const;
    void setConditionExpression(const QString &condition_expression);
    bool is_condition_expression_Set() const;
    bool is_condition_expression_Valid() const;

    QMap getExpressionAttributeNames() const;
    void setExpressionAttributeNames(const QMap &expression_attribute_names);
    bool is_expression_attribute_names_Set() const;
    bool is_expression_attribute_names_Valid() const;

    QMap getExpressionAttributeValues() const;
    void setExpressionAttributeValues(const QMap &expression_attribute_values);
    bool is_expression_attribute_values_Set() const;
    bool is_expression_attribute_values_Valid() const;

    OAIReturnValuesOnConditionCheckFailure getReturnValuesOnConditionCheckFailure() const;
    void setReturnValuesOnConditionCheckFailure(const OAIReturnValuesOnConditionCheckFailure &return_values_on_condition_check_failure);
    bool is_return_values_on_condition_check_failure_Set() const;
    bool is_return_values_on_condition_check_failure_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_table_name;
    bool m_table_name_isSet;
    bool m_table_name_isValid;

    QMap m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QMap m_expected;
    bool m_expected_isSet;
    bool m_expected_isValid;

    OAIConditionalOperator m_conditional_operator;
    bool m_conditional_operator_isSet;
    bool m_conditional_operator_isValid;

    OAIReturnValue m_return_values;
    bool m_return_values_isSet;
    bool m_return_values_isValid;

    OAIReturnConsumedCapacity m_return_consumed_capacity;
    bool m_return_consumed_capacity_isSet;
    bool m_return_consumed_capacity_isValid;

    OAIReturnItemCollectionMetrics m_return_item_collection_metrics;
    bool m_return_item_collection_metrics_isSet;
    bool m_return_item_collection_metrics_isValid;

    QString m_condition_expression;
    bool m_condition_expression_isSet;
    bool m_condition_expression_isValid;

    QMap m_expression_attribute_names;
    bool m_expression_attribute_names_isSet;
    bool m_expression_attribute_names_isValid;

    QMap m_expression_attribute_values;
    bool m_expression_attribute_values_isSet;
    bool m_expression_attribute_values_isValid;

    OAIReturnValuesOnConditionCheckFailure m_return_values_on_condition_check_failure;
    bool m_return_values_on_condition_check_failure_isSet;
    bool m_return_values_on_condition_check_failure_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteItemInput)

#endif // OAIDeleteItemInput_H
