/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImportTableDescription_S3BucketSource.h
 *
 * 
 */

#ifndef OAIImportTableDescription_S3BucketSource_H
#define OAIImportTableDescription_S3BucketSource_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImportTableDescription_S3BucketSource : public OAIObject {
public:
    OAIImportTableDescription_S3BucketSource();
    OAIImportTableDescription_S3BucketSource(QString json);
    ~OAIImportTableDescription_S3BucketSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getS3BucketOwner() const;
    void setS3BucketOwner(const QString &s3_bucket_owner);
    bool is_s3_bucket_owner_Set() const;
    bool is_s3_bucket_owner_Valid() const;

    QString getS3Bucket() const;
    void setS3Bucket(const QString &s3_bucket);
    bool is_s3_bucket_Set() const;
    bool is_s3_bucket_Valid() const;

    QString getS3KeyPrefix() const;
    void setS3KeyPrefix(const QString &s3_key_prefix);
    bool is_s3_key_prefix_Set() const;
    bool is_s3_key_prefix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_s3_bucket_owner;
    bool m_s3_bucket_owner_isSet;
    bool m_s3_bucket_owner_isValid;

    QString m_s3_bucket;
    bool m_s3_bucket_isSet;
    bool m_s3_bucket_isValid;

    QString m_s3_key_prefix;
    bool m_s3_key_prefix_isSet;
    bool m_s3_key_prefix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImportTableDescription_S3BucketSource)

#endif // OAIImportTableDescription_S3BucketSource_H
