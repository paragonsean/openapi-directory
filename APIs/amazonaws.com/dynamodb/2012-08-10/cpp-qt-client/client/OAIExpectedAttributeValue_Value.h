/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExpectedAttributeValue_Value.h
 *
 * 
 */

#ifndef OAIExpectedAttributeValue_Value_H
#define OAIExpectedAttributeValue_Value_H

#include <QJsonObject>

#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExpectedAttributeValue_Value : public OAIObject {
public:
    OAIExpectedAttributeValue_Value();
    OAIExpectedAttributeValue_Value(QString json);
    ~OAIExpectedAttributeValue_Value() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getS() const;
    void setS(const QString &s);
    bool is_s_Set() const;
    bool is_s_Valid() const;

    QString getN() const;
    void setN(const QString &n);
    bool is_n_Set() const;
    bool is_n_Valid() const;

    QString getB() const;
    void setB(const QString &b);
    bool is_b_Set() const;
    bool is_b_Valid() const;

    QList getSs() const;
    void setSs(const QList &ss);
    bool is_ss_Set() const;
    bool is_ss_Valid() const;

    QList getNs() const;
    void setNs(const QList &ns);
    bool is_ns_Set() const;
    bool is_ns_Valid() const;

    QList getBs() const;
    void setBs(const QList &bs);
    bool is_bs_Set() const;
    bool is_bs_Valid() const;

    QMap getM() const;
    void setM(const QMap &m);
    bool is_m_Set() const;
    bool is_m_Valid() const;

    QList getL() const;
    void setL(const QList &l);
    bool is_l_Set() const;
    bool is_l_Valid() const;

    bool getNull() const;
    void setNull(const bool &null);
    bool is_null_Set() const;
    bool is_null_Valid() const;

    bool getRBool() const;
    void setRBool(const bool &r_bool);
    bool is_r_bool_Set() const;
    bool is_r_bool_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_s;
    bool m_s_isSet;
    bool m_s_isValid;

    QString m_n;
    bool m_n_isSet;
    bool m_n_isValid;

    QString m_b;
    bool m_b_isSet;
    bool m_b_isValid;

    QList m_ss;
    bool m_ss_isSet;
    bool m_ss_isValid;

    QList m_ns;
    bool m_ns_isSet;
    bool m_ns_isValid;

    QList m_bs;
    bool m_bs_isSet;
    bool m_bs_isValid;

    QMap m_m;
    bool m_m_isSet;
    bool m_m_isValid;

    QList m_l;
    bool m_l_isSet;
    bool m_l_isValid;

    bool m_null;
    bool m_null_isSet;
    bool m_null_isValid;

    bool m_r_bool;
    bool m_r_bool_isSet;
    bool m_r_bool_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExpectedAttributeValue_Value)

#endif // OAIExpectedAttributeValue_Value_H
