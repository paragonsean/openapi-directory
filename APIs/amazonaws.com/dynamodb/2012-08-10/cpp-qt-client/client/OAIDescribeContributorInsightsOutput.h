/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeContributorInsightsOutput.h
 *
 * 
 */

#ifndef OAIDescribeContributorInsightsOutput_H
#define OAIDescribeContributorInsightsOutput_H

#include <QJsonObject>

#include "OAIContributorInsightsStatus.h"
#include "OAIDescribeContributorInsightsOutput_FailureException.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeContributorInsightsOutput_FailureException;

class OAIDescribeContributorInsightsOutput : public OAIObject {
public:
    OAIDescribeContributorInsightsOutput();
    OAIDescribeContributorInsightsOutput(QString json);
    ~OAIDescribeContributorInsightsOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTableName() const;
    void setTableName(const QString &table_name);
    bool is_table_name_Set() const;
    bool is_table_name_Valid() const;

    QString getIndexName() const;
    void setIndexName(const QString &index_name);
    bool is_index_name_Set() const;
    bool is_index_name_Valid() const;

    QList getContributorInsightsRuleList() const;
    void setContributorInsightsRuleList(const QList &contributor_insights_rule_list);
    bool is_contributor_insights_rule_list_Set() const;
    bool is_contributor_insights_rule_list_Valid() const;

    OAIContributorInsightsStatus getContributorInsightsStatus() const;
    void setContributorInsightsStatus(const OAIContributorInsightsStatus &contributor_insights_status);
    bool is_contributor_insights_status_Set() const;
    bool is_contributor_insights_status_Valid() const;

    QDateTime getLastUpdateDateTime() const;
    void setLastUpdateDateTime(const QDateTime &last_update_date_time);
    bool is_last_update_date_time_Set() const;
    bool is_last_update_date_time_Valid() const;

    OAIDescribeContributorInsightsOutput_FailureException getFailureException() const;
    void setFailureException(const OAIDescribeContributorInsightsOutput_FailureException &failure_exception);
    bool is_failure_exception_Set() const;
    bool is_failure_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_table_name;
    bool m_table_name_isSet;
    bool m_table_name_isValid;

    QString m_index_name;
    bool m_index_name_isSet;
    bool m_index_name_isValid;

    QList m_contributor_insights_rule_list;
    bool m_contributor_insights_rule_list_isSet;
    bool m_contributor_insights_rule_list_isValid;

    OAIContributorInsightsStatus m_contributor_insights_status;
    bool m_contributor_insights_status_isSet;
    bool m_contributor_insights_status_isValid;

    QDateTime m_last_update_date_time;
    bool m_last_update_date_time_isSet;
    bool m_last_update_date_time_isValid;

    OAIDescribeContributorInsightsOutput_FailureException m_failure_exception;
    bool m_failure_exception_isSet;
    bool m_failure_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeContributorInsightsOutput)

#endif // OAIDescribeContributorInsightsOutput_H
