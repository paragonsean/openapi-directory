/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReplicationGroupUpdate.h
 *
 * &lt;p&gt;Represents one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A new replica to be added to an existing regional table or global table. This request invokes the &lt;code&gt;CreateTableReplica&lt;/code&gt; action in the destination Region.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New parameters for an existing replica. This request invokes the &lt;code&gt;UpdateTable&lt;/code&gt; action in the destination Region.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;An existing replica to be deleted. The request invokes the &lt;code&gt;DeleteTableReplica&lt;/code&gt; action in the destination Region, deleting the replica and all if its items in the destination Region.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;p&gt;When you manually remove a table or global table replica, you do not automatically remove any associated scalable targets, scaling policies, or CloudWatch alarms.&lt;/p&gt; &lt;/note&gt;
 */

#ifndef OAIReplicationGroupUpdate_H
#define OAIReplicationGroupUpdate_H

#include <QJsonObject>

#include "OAIReplicationGroupUpdate_Create.h"
#include "OAIReplicationGroupUpdate_Delete.h"
#include "OAIReplicationGroupUpdate_Update.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReplicationGroupUpdate_Create;
class OAIReplicationGroupUpdate_Update;
class OAIReplicationGroupUpdate_Delete;

class OAIReplicationGroupUpdate : public OAIObject {
public:
    OAIReplicationGroupUpdate();
    OAIReplicationGroupUpdate(QString json);
    ~OAIReplicationGroupUpdate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIReplicationGroupUpdate_Create getCreate() const;
    void setCreate(const OAIReplicationGroupUpdate_Create &create);
    bool is_create_Set() const;
    bool is_create_Valid() const;

    OAIReplicationGroupUpdate_Update getUpdate() const;
    void setUpdate(const OAIReplicationGroupUpdate_Update &update);
    bool is_update_Set() const;
    bool is_update_Valid() const;

    OAIReplicationGroupUpdate_Delete getRDelete() const;
    void setRDelete(const OAIReplicationGroupUpdate_Delete &r_delete);
    bool is_r_delete_Set() const;
    bool is_r_delete_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIReplicationGroupUpdate_Create m_create;
    bool m_create_isSet;
    bool m_create_isValid;

    OAIReplicationGroupUpdate_Update m_update;
    bool m_update_isSet;
    bool m_update_isValid;

    OAIReplicationGroupUpdate_Delete m_r_delete;
    bool m_r_delete_isSet;
    bool m_r_delete_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReplicationGroupUpdate)

#endif // OAIReplicationGroupUpdate_H
