/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeTableOutput_Table.h
 *
 * 
 */

#ifndef OAIDescribeTableOutput_Table_H
#define OAIDescribeTableOutput_Table_H

#include <QJsonObject>

#include "OAITableDescription_ArchivalSummary.h"
#include "OAITableDescription_BillingModeSummary.h"
#include "OAITableDescription_ProvisionedThroughput.h"
#include "OAITableDescription_RestoreSummary.h"
#include "OAITableDescription_SSEDescription.h"
#include "OAITableDescription_StreamSpecification.h"
#include "OAITableDescription_TableClassSummary.h"
#include "OAITableStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITableDescription_ProvisionedThroughput;
class OAITableDescription_BillingModeSummary;
class OAITableDescription_StreamSpecification;
class OAITableDescription_RestoreSummary;
class OAITableDescription_SSEDescription;
class OAITableDescription_ArchivalSummary;
class OAITableDescription_TableClassSummary;

class OAIDescribeTableOutput_Table : public OAIObject {
public:
    OAIDescribeTableOutput_Table();
    OAIDescribeTableOutput_Table(QString json);
    ~OAIDescribeTableOutput_Table() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAttributeDefinitions() const;
    void setAttributeDefinitions(const QList &attribute_definitions);
    bool is_attribute_definitions_Set() const;
    bool is_attribute_definitions_Valid() const;

    QString getTableName() const;
    void setTableName(const QString &table_name);
    bool is_table_name_Set() const;
    bool is_table_name_Valid() const;

    QList getKeySchema() const;
    void setKeySchema(const QList &key_schema);
    bool is_key_schema_Set() const;
    bool is_key_schema_Valid() const;

    OAITableStatus getTableStatus() const;
    void setTableStatus(const OAITableStatus &table_status);
    bool is_table_status_Set() const;
    bool is_table_status_Valid() const;

    QDateTime getCreationDateTime() const;
    void setCreationDateTime(const QDateTime &creation_date_time);
    bool is_creation_date_time_Set() const;
    bool is_creation_date_time_Valid() const;

    OAITableDescription_ProvisionedThroughput getProvisionedThroughput() const;
    void setProvisionedThroughput(const OAITableDescription_ProvisionedThroughput &provisioned_throughput);
    bool is_provisioned_throughput_Set() const;
    bool is_provisioned_throughput_Valid() const;

    qint32 getTableSizeBytes() const;
    void setTableSizeBytes(const qint32 &table_size_bytes);
    bool is_table_size_bytes_Set() const;
    bool is_table_size_bytes_Valid() const;

    qint32 getItemCount() const;
    void setItemCount(const qint32 &item_count);
    bool is_item_count_Set() const;
    bool is_item_count_Valid() const;

    QString getTableArn() const;
    void setTableArn(const QString &table_arn);
    bool is_table_arn_Set() const;
    bool is_table_arn_Valid() const;

    QString getTableId() const;
    void setTableId(const QString &table_id);
    bool is_table_id_Set() const;
    bool is_table_id_Valid() const;

    OAITableDescription_BillingModeSummary getBillingModeSummary() const;
    void setBillingModeSummary(const OAITableDescription_BillingModeSummary &billing_mode_summary);
    bool is_billing_mode_summary_Set() const;
    bool is_billing_mode_summary_Valid() const;

    QList getLocalSecondaryIndexes() const;
    void setLocalSecondaryIndexes(const QList &local_secondary_indexes);
    bool is_local_secondary_indexes_Set() const;
    bool is_local_secondary_indexes_Valid() const;

    QList getGlobalSecondaryIndexes() const;
    void setGlobalSecondaryIndexes(const QList &global_secondary_indexes);
    bool is_global_secondary_indexes_Set() const;
    bool is_global_secondary_indexes_Valid() const;

    OAITableDescription_StreamSpecification getStreamSpecification() const;
    void setStreamSpecification(const OAITableDescription_StreamSpecification &stream_specification);
    bool is_stream_specification_Set() const;
    bool is_stream_specification_Valid() const;

    QString getLatestStreamLabel() const;
    void setLatestStreamLabel(const QString &latest_stream_label);
    bool is_latest_stream_label_Set() const;
    bool is_latest_stream_label_Valid() const;

    QString getLatestStreamArn() const;
    void setLatestStreamArn(const QString &latest_stream_arn);
    bool is_latest_stream_arn_Set() const;
    bool is_latest_stream_arn_Valid() const;

    QString getGlobalTableVersion() const;
    void setGlobalTableVersion(const QString &global_table_version);
    bool is_global_table_version_Set() const;
    bool is_global_table_version_Valid() const;

    QList getReplicas() const;
    void setReplicas(const QList &replicas);
    bool is_replicas_Set() const;
    bool is_replicas_Valid() const;

    OAITableDescription_RestoreSummary getRestoreSummary() const;
    void setRestoreSummary(const OAITableDescription_RestoreSummary &restore_summary);
    bool is_restore_summary_Set() const;
    bool is_restore_summary_Valid() const;

    OAITableDescription_SSEDescription getSseDescription() const;
    void setSseDescription(const OAITableDescription_SSEDescription &sse_description);
    bool is_sse_description_Set() const;
    bool is_sse_description_Valid() const;

    OAITableDescription_ArchivalSummary getArchivalSummary() const;
    void setArchivalSummary(const OAITableDescription_ArchivalSummary &archival_summary);
    bool is_archival_summary_Set() const;
    bool is_archival_summary_Valid() const;

    OAITableDescription_TableClassSummary getTableClassSummary() const;
    void setTableClassSummary(const OAITableDescription_TableClassSummary &table_class_summary);
    bool is_table_class_summary_Set() const;
    bool is_table_class_summary_Valid() const;

    bool getDeletionProtectionEnabled() const;
    void setDeletionProtectionEnabled(const bool &deletion_protection_enabled);
    bool is_deletion_protection_enabled_Set() const;
    bool is_deletion_protection_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_attribute_definitions;
    bool m_attribute_definitions_isSet;
    bool m_attribute_definitions_isValid;

    QString m_table_name;
    bool m_table_name_isSet;
    bool m_table_name_isValid;

    QList m_key_schema;
    bool m_key_schema_isSet;
    bool m_key_schema_isValid;

    OAITableStatus m_table_status;
    bool m_table_status_isSet;
    bool m_table_status_isValid;

    QDateTime m_creation_date_time;
    bool m_creation_date_time_isSet;
    bool m_creation_date_time_isValid;

    OAITableDescription_ProvisionedThroughput m_provisioned_throughput;
    bool m_provisioned_throughput_isSet;
    bool m_provisioned_throughput_isValid;

    qint32 m_table_size_bytes;
    bool m_table_size_bytes_isSet;
    bool m_table_size_bytes_isValid;

    qint32 m_item_count;
    bool m_item_count_isSet;
    bool m_item_count_isValid;

    QString m_table_arn;
    bool m_table_arn_isSet;
    bool m_table_arn_isValid;

    QString m_table_id;
    bool m_table_id_isSet;
    bool m_table_id_isValid;

    OAITableDescription_BillingModeSummary m_billing_mode_summary;
    bool m_billing_mode_summary_isSet;
    bool m_billing_mode_summary_isValid;

    QList m_local_secondary_indexes;
    bool m_local_secondary_indexes_isSet;
    bool m_local_secondary_indexes_isValid;

    QList m_global_secondary_indexes;
    bool m_global_secondary_indexes_isSet;
    bool m_global_secondary_indexes_isValid;

    OAITableDescription_StreamSpecification m_stream_specification;
    bool m_stream_specification_isSet;
    bool m_stream_specification_isValid;

    QString m_latest_stream_label;
    bool m_latest_stream_label_isSet;
    bool m_latest_stream_label_isValid;

    QString m_latest_stream_arn;
    bool m_latest_stream_arn_isSet;
    bool m_latest_stream_arn_isValid;

    QString m_global_table_version;
    bool m_global_table_version_isSet;
    bool m_global_table_version_isValid;

    QList m_replicas;
    bool m_replicas_isSet;
    bool m_replicas_isValid;

    OAITableDescription_RestoreSummary m_restore_summary;
    bool m_restore_summary_isSet;
    bool m_restore_summary_isValid;

    OAITableDescription_SSEDescription m_sse_description;
    bool m_sse_description_isSet;
    bool m_sse_description_isValid;

    OAITableDescription_ArchivalSummary m_archival_summary;
    bool m_archival_summary_isSet;
    bool m_archival_summary_isValid;

    OAITableDescription_TableClassSummary m_table_class_summary;
    bool m_table_class_summary_isSet;
    bool m_table_class_summary_isValid;

    bool m_deletion_protection_enabled;
    bool m_deletion_protection_enabled_isSet;
    bool m_deletion_protection_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeTableOutput_Table)

#endif // OAIDescribeTableOutput_Table_H
