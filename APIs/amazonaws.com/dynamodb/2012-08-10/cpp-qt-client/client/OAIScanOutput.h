/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScanOutput.h
 *
 * Represents the output of a &lt;code&gt;Scan&lt;/code&gt; operation.
 */

#ifndef OAIScanOutput_H
#define OAIScanOutput_H

#include <QJsonObject>

#include "OAIScanOutput_ConsumedCapacity.h"
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIScanOutput_ConsumedCapacity;

class OAIScanOutput : public OAIObject {
public:
    OAIScanOutput();
    OAIScanOutput(QString json);
    ~OAIScanOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getItems() const;
    void setItems(const QList &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    qint32 getScannedCount() const;
    void setScannedCount(const qint32 &scanned_count);
    bool is_scanned_count_Set() const;
    bool is_scanned_count_Valid() const;

    QMap getLastEvaluatedKey() const;
    void setLastEvaluatedKey(const QMap &last_evaluated_key);
    bool is_last_evaluated_key_Set() const;
    bool is_last_evaluated_key_Valid() const;

    OAIScanOutput_ConsumedCapacity getConsumedCapacity() const;
    void setConsumedCapacity(const OAIScanOutput_ConsumedCapacity &consumed_capacity);
    bool is_consumed_capacity_Set() const;
    bool is_consumed_capacity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    qint32 m_scanned_count;
    bool m_scanned_count_isSet;
    bool m_scanned_count_isValid;

    QMap m_last_evaluated_key;
    bool m_last_evaluated_key_isSet;
    bool m_last_evaluated_key_isValid;

    OAIScanOutput_ConsumedCapacity m_consumed_capacity;
    bool m_consumed_capacity_isSet;
    bool m_consumed_capacity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScanOutput)

#endif // OAIScanOutput_H
