/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeContinuousBackupsOutput_ContinuousBackupsDescription.h
 *
 * 
 */

#ifndef OAIDescribeContinuousBackupsOutput_ContinuousBackupsDescription_H
#define OAIDescribeContinuousBackupsOutput_ContinuousBackupsDescription_H

#include <QJsonObject>

#include "OAIContinuousBackupsDescription_PointInTimeRecoveryDescription.h"
#include "OAIContinuousBackupsStatus.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContinuousBackupsDescription_PointInTimeRecoveryDescription;

class OAIDescribeContinuousBackupsOutput_ContinuousBackupsDescription : public OAIObject {
public:
    OAIDescribeContinuousBackupsOutput_ContinuousBackupsDescription();
    OAIDescribeContinuousBackupsOutput_ContinuousBackupsDescription(QString json);
    ~OAIDescribeContinuousBackupsOutput_ContinuousBackupsDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIContinuousBackupsStatus getContinuousBackupsStatus() const;
    void setContinuousBackupsStatus(const OAIContinuousBackupsStatus &continuous_backups_status);
    bool is_continuous_backups_status_Set() const;
    bool is_continuous_backups_status_Valid() const;

    OAIContinuousBackupsDescription_PointInTimeRecoveryDescription getPointInTimeRecoveryDescription() const;
    void setPointInTimeRecoveryDescription(const OAIContinuousBackupsDescription_PointInTimeRecoveryDescription &point_in_time_recovery_description);
    bool is_point_in_time_recovery_description_Set() const;
    bool is_point_in_time_recovery_description_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIContinuousBackupsStatus m_continuous_backups_status;
    bool m_continuous_backups_status_isSet;
    bool m_continuous_backups_status_isValid;

    OAIContinuousBackupsDescription_PointInTimeRecoveryDescription m_point_in_time_recovery_description;
    bool m_point_in_time_recovery_description_isSet;
    bool m_point_in_time_recovery_description_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeContinuousBackupsOutput_ContinuousBackupsDescription)

#endif // OAIDescribeContinuousBackupsOutput_ContinuousBackupsDescription_H
