/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBillingModeSummary.h
 *
 * &lt;p&gt;Contains the details for the read/write capacity mode. This page talks about &lt;code&gt;PROVISIONED&lt;/code&gt; and &lt;code&gt;PAY_PER_REQUEST&lt;/code&gt; billing modes. For more information about these modes, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html\&quot;&gt;Read/write capacity mode&lt;/a&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You may need to switch to on-demand mode at least once in order to return a &lt;code&gt;BillingModeSummary&lt;/code&gt; response.&lt;/p&gt; &lt;/note&gt;
 */

#ifndef OAIBillingModeSummary_H
#define OAIBillingModeSummary_H

#include <QJsonObject>

#include "OAIBillingMode.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBillingModeSummary : public OAIObject {
public:
    OAIBillingModeSummary();
    OAIBillingModeSummary(QString json);
    ~OAIBillingModeSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBillingMode getBillingMode() const;
    void setBillingMode(const OAIBillingMode &billing_mode);
    bool is_billing_mode_Set() const;
    bool is_billing_mode_Valid() const;

    QDateTime getLastUpdateToPayPerRequestDateTime() const;
    void setLastUpdateToPayPerRequestDateTime(const QDateTime &last_update_to_pay_per_request_date_time);
    bool is_last_update_to_pay_per_request_date_time_Set() const;
    bool is_last_update_to_pay_per_request_date_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBillingMode m_billing_mode;
    bool m_billing_mode_isSet;
    bool m_billing_mode_isValid;

    QDateTime m_last_update_to_pay_per_request_date_time;
    bool m_last_update_to_pay_per_request_date_time_isSet;
    bool m_last_update_to_pay_per_request_date_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBillingModeSummary)

#endif // OAIBillingModeSummary_H
