/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransactWriteItemsInput.h
 *
 * 
 */

#ifndef OAITransactWriteItemsInput_H
#define OAITransactWriteItemsInput_H

#include <QJsonObject>

#include "OAIReturnConsumedCapacity.h"
#include "OAIReturnItemCollectionMetrics.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITransactWriteItemsInput : public OAIObject {
public:
    OAITransactWriteItemsInput();
    OAITransactWriteItemsInput(QString json);
    ~OAITransactWriteItemsInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getTransactItems() const;
    void setTransactItems(const QList &transact_items);
    bool is_transact_items_Set() const;
    bool is_transact_items_Valid() const;

    OAIReturnConsumedCapacity getReturnConsumedCapacity() const;
    void setReturnConsumedCapacity(const OAIReturnConsumedCapacity &return_consumed_capacity);
    bool is_return_consumed_capacity_Set() const;
    bool is_return_consumed_capacity_Valid() const;

    OAIReturnItemCollectionMetrics getReturnItemCollectionMetrics() const;
    void setReturnItemCollectionMetrics(const OAIReturnItemCollectionMetrics &return_item_collection_metrics);
    bool is_return_item_collection_metrics_Set() const;
    bool is_return_item_collection_metrics_Valid() const;

    QString getClientRequestToken() const;
    void setClientRequestToken(const QString &client_request_token);
    bool is_client_request_token_Set() const;
    bool is_client_request_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_transact_items;
    bool m_transact_items_isSet;
    bool m_transact_items_isValid;

    OAIReturnConsumedCapacity m_return_consumed_capacity;
    bool m_return_consumed_capacity_isSet;
    bool m_return_consumed_capacity_isValid;

    OAIReturnItemCollectionMetrics m_return_item_collection_metrics;
    bool m_return_item_collection_metrics_isSet;
    bool m_return_item_collection_metrics_isValid;

    QString m_client_request_token;
    bool m_client_request_token_isSet;
    bool m_client_request_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransactWriteItemsInput)

#endif // OAITransactWriteItemsInput_H
