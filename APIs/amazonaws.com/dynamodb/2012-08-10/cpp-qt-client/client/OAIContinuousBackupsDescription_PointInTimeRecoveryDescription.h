/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContinuousBackupsDescription_PointInTimeRecoveryDescription.h
 *
 * 
 */

#ifndef OAIContinuousBackupsDescription_PointInTimeRecoveryDescription_H
#define OAIContinuousBackupsDescription_PointInTimeRecoveryDescription_H

#include <QJsonObject>

#include "OAIPointInTimeRecoveryStatus.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContinuousBackupsDescription_PointInTimeRecoveryDescription : public OAIObject {
public:
    OAIContinuousBackupsDescription_PointInTimeRecoveryDescription();
    OAIContinuousBackupsDescription_PointInTimeRecoveryDescription(QString json);
    ~OAIContinuousBackupsDescription_PointInTimeRecoveryDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPointInTimeRecoveryStatus getPointInTimeRecoveryStatus() const;
    void setPointInTimeRecoveryStatus(const OAIPointInTimeRecoveryStatus &point_in_time_recovery_status);
    bool is_point_in_time_recovery_status_Set() const;
    bool is_point_in_time_recovery_status_Valid() const;

    QDateTime getEarliestRestorableDateTime() const;
    void setEarliestRestorableDateTime(const QDateTime &earliest_restorable_date_time);
    bool is_earliest_restorable_date_time_Set() const;
    bool is_earliest_restorable_date_time_Valid() const;

    QDateTime getLatestRestorableDateTime() const;
    void setLatestRestorableDateTime(const QDateTime &latest_restorable_date_time);
    bool is_latest_restorable_date_time_Set() const;
    bool is_latest_restorable_date_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPointInTimeRecoveryStatus m_point_in_time_recovery_status;
    bool m_point_in_time_recovery_status_isSet;
    bool m_point_in_time_recovery_status_isValid;

    QDateTime m_earliest_restorable_date_time;
    bool m_earliest_restorable_date_time_isSet;
    bool m_earliest_restorable_date_time_isValid;

    QDateTime m_latest_restorable_date_time;
    bool m_latest_restorable_date_time_isSet;
    bool m_latest_restorable_date_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContinuousBackupsDescription_PointInTimeRecoveryDescription)

#endif // OAIContinuousBackupsDescription_PointInTimeRecoveryDescription_H
