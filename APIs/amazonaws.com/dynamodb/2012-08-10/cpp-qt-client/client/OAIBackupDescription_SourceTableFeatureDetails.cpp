/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBackupDescription_SourceTableFeatureDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBackupDescription_SourceTableFeatureDetails::OAIBackupDescription_SourceTableFeatureDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBackupDescription_SourceTableFeatureDetails::OAIBackupDescription_SourceTableFeatureDetails() {
    this->initializeModel();
}

OAIBackupDescription_SourceTableFeatureDetails::~OAIBackupDescription_SourceTableFeatureDetails() {}

void OAIBackupDescription_SourceTableFeatureDetails::initializeModel() {

    m_local_secondary_indexes_isSet = false;
    m_local_secondary_indexes_isValid = false;

    m_global_secondary_indexes_isSet = false;
    m_global_secondary_indexes_isValid = false;

    m_stream_description_isSet = false;
    m_stream_description_isValid = false;

    m_time_to_live_description_isSet = false;
    m_time_to_live_description_isValid = false;

    m_sse_description_isSet = false;
    m_sse_description_isValid = false;
}

void OAIBackupDescription_SourceTableFeatureDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBackupDescription_SourceTableFeatureDetails::fromJsonObject(QJsonObject json) {

    m_local_secondary_indexes_isValid = ::OpenAPI::fromJsonValue(m_local_secondary_indexes, json[QString("LocalSecondaryIndexes")]);
    m_local_secondary_indexes_isSet = !json[QString("LocalSecondaryIndexes")].isNull() && m_local_secondary_indexes_isValid;

    m_global_secondary_indexes_isValid = ::OpenAPI::fromJsonValue(m_global_secondary_indexes, json[QString("GlobalSecondaryIndexes")]);
    m_global_secondary_indexes_isSet = !json[QString("GlobalSecondaryIndexes")].isNull() && m_global_secondary_indexes_isValid;

    m_stream_description_isValid = ::OpenAPI::fromJsonValue(m_stream_description, json[QString("StreamDescription")]);
    m_stream_description_isSet = !json[QString("StreamDescription")].isNull() && m_stream_description_isValid;

    m_time_to_live_description_isValid = ::OpenAPI::fromJsonValue(m_time_to_live_description, json[QString("TimeToLiveDescription")]);
    m_time_to_live_description_isSet = !json[QString("TimeToLiveDescription")].isNull() && m_time_to_live_description_isValid;

    m_sse_description_isValid = ::OpenAPI::fromJsonValue(m_sse_description, json[QString("SSEDescription")]);
    m_sse_description_isSet = !json[QString("SSEDescription")].isNull() && m_sse_description_isValid;
}

QString OAIBackupDescription_SourceTableFeatureDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBackupDescription_SourceTableFeatureDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_local_secondary_indexes.isSet()) {
        obj.insert(QString("LocalSecondaryIndexes"), ::OpenAPI::toJsonValue(m_local_secondary_indexes));
    }
    if (m_global_secondary_indexes.isSet()) {
        obj.insert(QString("GlobalSecondaryIndexes"), ::OpenAPI::toJsonValue(m_global_secondary_indexes));
    }
    if (m_stream_description.isSet()) {
        obj.insert(QString("StreamDescription"), ::OpenAPI::toJsonValue(m_stream_description));
    }
    if (m_time_to_live_description.isSet()) {
        obj.insert(QString("TimeToLiveDescription"), ::OpenAPI::toJsonValue(m_time_to_live_description));
    }
    if (m_sse_description.isSet()) {
        obj.insert(QString("SSEDescription"), ::OpenAPI::toJsonValue(m_sse_description));
    }
    return obj;
}

QList OAIBackupDescription_SourceTableFeatureDetails::getLocalSecondaryIndexes() const {
    return m_local_secondary_indexes;
}
void OAIBackupDescription_SourceTableFeatureDetails::setLocalSecondaryIndexes(const QList &local_secondary_indexes) {
    m_local_secondary_indexes = local_secondary_indexes;
    m_local_secondary_indexes_isSet = true;
}

bool OAIBackupDescription_SourceTableFeatureDetails::is_local_secondary_indexes_Set() const{
    return m_local_secondary_indexes_isSet;
}

bool OAIBackupDescription_SourceTableFeatureDetails::is_local_secondary_indexes_Valid() const{
    return m_local_secondary_indexes_isValid;
}

QList OAIBackupDescription_SourceTableFeatureDetails::getGlobalSecondaryIndexes() const {
    return m_global_secondary_indexes;
}
void OAIBackupDescription_SourceTableFeatureDetails::setGlobalSecondaryIndexes(const QList &global_secondary_indexes) {
    m_global_secondary_indexes = global_secondary_indexes;
    m_global_secondary_indexes_isSet = true;
}

bool OAIBackupDescription_SourceTableFeatureDetails::is_global_secondary_indexes_Set() const{
    return m_global_secondary_indexes_isSet;
}

bool OAIBackupDescription_SourceTableFeatureDetails::is_global_secondary_indexes_Valid() const{
    return m_global_secondary_indexes_isValid;
}

OAISourceTableFeatureDetails_StreamDescription OAIBackupDescription_SourceTableFeatureDetails::getStreamDescription() const {
    return m_stream_description;
}
void OAIBackupDescription_SourceTableFeatureDetails::setStreamDescription(const OAISourceTableFeatureDetails_StreamDescription &stream_description) {
    m_stream_description = stream_description;
    m_stream_description_isSet = true;
}

bool OAIBackupDescription_SourceTableFeatureDetails::is_stream_description_Set() const{
    return m_stream_description_isSet;
}

bool OAIBackupDescription_SourceTableFeatureDetails::is_stream_description_Valid() const{
    return m_stream_description_isValid;
}

OAISourceTableFeatureDetails_TimeToLiveDescription OAIBackupDescription_SourceTableFeatureDetails::getTimeToLiveDescription() const {
    return m_time_to_live_description;
}
void OAIBackupDescription_SourceTableFeatureDetails::setTimeToLiveDescription(const OAISourceTableFeatureDetails_TimeToLiveDescription &time_to_live_description) {
    m_time_to_live_description = time_to_live_description;
    m_time_to_live_description_isSet = true;
}

bool OAIBackupDescription_SourceTableFeatureDetails::is_time_to_live_description_Set() const{
    return m_time_to_live_description_isSet;
}

bool OAIBackupDescription_SourceTableFeatureDetails::is_time_to_live_description_Valid() const{
    return m_time_to_live_description_isValid;
}

OAISourceTableFeatureDetails_SSEDescription OAIBackupDescription_SourceTableFeatureDetails::getSseDescription() const {
    return m_sse_description;
}
void OAIBackupDescription_SourceTableFeatureDetails::setSseDescription(const OAISourceTableFeatureDetails_SSEDescription &sse_description) {
    m_sse_description = sse_description;
    m_sse_description_isSet = true;
}

bool OAIBackupDescription_SourceTableFeatureDetails::is_sse_description_Set() const{
    return m_sse_description_isSet;
}

bool OAIBackupDescription_SourceTableFeatureDetails::is_sse_description_Valid() const{
    return m_sse_description_isValid;
}

bool OAIBackupDescription_SourceTableFeatureDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_local_secondary_indexes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_global_secondary_indexes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_stream_description.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_to_live_description.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sse_description.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBackupDescription_SourceTableFeatureDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
