/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateTableInput_SSESpecification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateTableInput_SSESpecification::OAICreateTableInput_SSESpecification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateTableInput_SSESpecification::OAICreateTableInput_SSESpecification() {
    this->initializeModel();
}

OAICreateTableInput_SSESpecification::~OAICreateTableInput_SSESpecification() {}

void OAICreateTableInput_SSESpecification::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_sse_type_isSet = false;
    m_sse_type_isValid = false;

    m_kms_master_key_id_isSet = false;
    m_kms_master_key_id_isValid = false;
}

void OAICreateTableInput_SSESpecification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateTableInput_SSESpecification::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("Enabled")]);
    m_enabled_isSet = !json[QString("Enabled")].isNull() && m_enabled_isValid;

    m_sse_type_isValid = ::OpenAPI::fromJsonValue(m_sse_type, json[QString("SSEType")]);
    m_sse_type_isSet = !json[QString("SSEType")].isNull() && m_sse_type_isValid;

    m_kms_master_key_id_isValid = ::OpenAPI::fromJsonValue(m_kms_master_key_id, json[QString("KMSMasterKeyId")]);
    m_kms_master_key_id_isSet = !json[QString("KMSMasterKeyId")].isNull() && m_kms_master_key_id_isValid;
}

QString OAICreateTableInput_SSESpecification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateTableInput_SSESpecification::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("Enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_sse_type.isSet()) {
        obj.insert(QString("SSEType"), ::OpenAPI::toJsonValue(m_sse_type));
    }
    if (m_kms_master_key_id_isSet) {
        obj.insert(QString("KMSMasterKeyId"), ::OpenAPI::toJsonValue(m_kms_master_key_id));
    }
    return obj;
}

bool OAICreateTableInput_SSESpecification::getEnabled() const {
    return m_enabled;
}
void OAICreateTableInput_SSESpecification::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAICreateTableInput_SSESpecification::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAICreateTableInput_SSESpecification::is_enabled_Valid() const{
    return m_enabled_isValid;
}

OAISSEType OAICreateTableInput_SSESpecification::getSseType() const {
    return m_sse_type;
}
void OAICreateTableInput_SSESpecification::setSseType(const OAISSEType &sse_type) {
    m_sse_type = sse_type;
    m_sse_type_isSet = true;
}

bool OAICreateTableInput_SSESpecification::is_sse_type_Set() const{
    return m_sse_type_isSet;
}

bool OAICreateTableInput_SSESpecification::is_sse_type_Valid() const{
    return m_sse_type_isValid;
}

QString OAICreateTableInput_SSESpecification::getKmsMasterKeyId() const {
    return m_kms_master_key_id;
}
void OAICreateTableInput_SSESpecification::setKmsMasterKeyId(const QString &kms_master_key_id) {
    m_kms_master_key_id = kms_master_key_id;
    m_kms_master_key_id_isSet = true;
}

bool OAICreateTableInput_SSESpecification::is_kms_master_key_id_Set() const{
    return m_kms_master_key_id_isSet;
}

bool OAICreateTableInput_SSESpecification::is_kms_master_key_id_Valid() const{
    return m_kms_master_key_id_isValid;
}

bool OAICreateTableInput_SSESpecification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sse_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_kms_master_key_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateTableInput_SSESpecification::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
