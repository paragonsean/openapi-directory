/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAutoScalingPolicyDescription_TargetTrackingScalingPolicyConfiguration.h
 *
 * 
 */

#ifndef OAIAutoScalingPolicyDescription_TargetTrackingScalingPolicyConfiguration_H
#define OAIAutoScalingPolicyDescription_TargetTrackingScalingPolicyConfiguration_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAutoScalingPolicyDescription_TargetTrackingScalingPolicyConfiguration : public OAIObject {
public:
    OAIAutoScalingPolicyDescription_TargetTrackingScalingPolicyConfiguration();
    OAIAutoScalingPolicyDescription_TargetTrackingScalingPolicyConfiguration(QString json);
    ~OAIAutoScalingPolicyDescription_TargetTrackingScalingPolicyConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getDisableScaleIn() const;
    void setDisableScaleIn(const bool &disable_scale_in);
    bool is_disable_scale_in_Set() const;
    bool is_disable_scale_in_Valid() const;

    qint32 getScaleInCooldown() const;
    void setScaleInCooldown(const qint32 &scale_in_cooldown);
    bool is_scale_in_cooldown_Set() const;
    bool is_scale_in_cooldown_Valid() const;

    qint32 getScaleOutCooldown() const;
    void setScaleOutCooldown(const qint32 &scale_out_cooldown);
    bool is_scale_out_cooldown_Set() const;
    bool is_scale_out_cooldown_Valid() const;

    double getTargetValue() const;
    void setTargetValue(const double &target_value);
    bool is_target_value_Set() const;
    bool is_target_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_disable_scale_in;
    bool m_disable_scale_in_isSet;
    bool m_disable_scale_in_isValid;

    qint32 m_scale_in_cooldown;
    bool m_scale_in_cooldown_isSet;
    bool m_scale_in_cooldown_isValid;

    qint32 m_scale_out_cooldown;
    bool m_scale_out_cooldown_isSet;
    bool m_scale_out_cooldown_isValid;

    double m_target_value;
    bool m_target_value_isSet;
    bool m_target_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAutoScalingPolicyDescription_TargetTrackingScalingPolicyConfiguration)

#endif // OAIAutoScalingPolicyDescription_TargetTrackingScalingPolicyConfiguration_H
