/*
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BillingMode;
import org.openapitools.client.model.RestoreTableFromBackupInputProvisionedThroughputOverride;
import org.openapitools.client.model.RestoreTableFromBackupInputSSESpecificationOverride;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RestoreTableToPointInTimeInput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:28.437037-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RestoreTableToPointInTimeInput {
  public static final String SERIALIZED_NAME_SOURCE_TABLE_ARN = "SourceTableArn";
  @SerializedName(SERIALIZED_NAME_SOURCE_TABLE_ARN)
  private String sourceTableArn;

  public static final String SERIALIZED_NAME_SOURCE_TABLE_NAME = "SourceTableName";
  @SerializedName(SERIALIZED_NAME_SOURCE_TABLE_NAME)
  private String sourceTableName;

  public static final String SERIALIZED_NAME_TARGET_TABLE_NAME = "TargetTableName";
  @SerializedName(SERIALIZED_NAME_TARGET_TABLE_NAME)
  private String targetTableName;

  public static final String SERIALIZED_NAME_USE_LATEST_RESTORABLE_TIME = "UseLatestRestorableTime";
  @SerializedName(SERIALIZED_NAME_USE_LATEST_RESTORABLE_TIME)
  private Boolean useLatestRestorableTime;

  public static final String SERIALIZED_NAME_RESTORE_DATE_TIME = "RestoreDateTime";
  @SerializedName(SERIALIZED_NAME_RESTORE_DATE_TIME)
  private OffsetDateTime restoreDateTime;

  public static final String SERIALIZED_NAME_BILLING_MODE_OVERRIDE = "BillingModeOverride";
  @SerializedName(SERIALIZED_NAME_BILLING_MODE_OVERRIDE)
  private BillingMode billingModeOverride;

  public static final String SERIALIZED_NAME_GLOBAL_SECONDARY_INDEX_OVERRIDE = "GlobalSecondaryIndexOverride";
  @SerializedName(SERIALIZED_NAME_GLOBAL_SECONDARY_INDEX_OVERRIDE)
  private List globalSecondaryIndexOverride;

  public static final String SERIALIZED_NAME_LOCAL_SECONDARY_INDEX_OVERRIDE = "LocalSecondaryIndexOverride";
  @SerializedName(SERIALIZED_NAME_LOCAL_SECONDARY_INDEX_OVERRIDE)
  private List localSecondaryIndexOverride;

  public static final String SERIALIZED_NAME_PROVISIONED_THROUGHPUT_OVERRIDE = "ProvisionedThroughputOverride";
  @SerializedName(SERIALIZED_NAME_PROVISIONED_THROUGHPUT_OVERRIDE)
  private RestoreTableFromBackupInputProvisionedThroughputOverride provisionedThroughputOverride;

  public static final String SERIALIZED_NAME_SS_E_SPECIFICATION_OVERRIDE = "SSESpecificationOverride";
  @SerializedName(SERIALIZED_NAME_SS_E_SPECIFICATION_OVERRIDE)
  private RestoreTableFromBackupInputSSESpecificationOverride ssESpecificationOverride;

  public RestoreTableToPointInTimeInput() {
  }

  public RestoreTableToPointInTimeInput sourceTableArn(String sourceTableArn) {
    this.sourceTableArn = sourceTableArn;
    return this;
  }

  /**
   * Get sourceTableArn
   * @return sourceTableArn
   */
  @javax.annotation.Nullable
  public String getSourceTableArn() {
    return sourceTableArn;
  }

  public void setSourceTableArn(String sourceTableArn) {
    this.sourceTableArn = sourceTableArn;
  }


  public RestoreTableToPointInTimeInput sourceTableName(String sourceTableName) {
    this.sourceTableName = sourceTableName;
    return this;
  }

  /**
   * Get sourceTableName
   * @return sourceTableName
   */
  @javax.annotation.Nullable
  public String getSourceTableName() {
    return sourceTableName;
  }

  public void setSourceTableName(String sourceTableName) {
    this.sourceTableName = sourceTableName;
  }


  public RestoreTableToPointInTimeInput targetTableName(String targetTableName) {
    this.targetTableName = targetTableName;
    return this;
  }

  /**
   * Get targetTableName
   * @return targetTableName
   */
  @javax.annotation.Nonnull
  public String getTargetTableName() {
    return targetTableName;
  }

  public void setTargetTableName(String targetTableName) {
    this.targetTableName = targetTableName;
  }


  public RestoreTableToPointInTimeInput useLatestRestorableTime(Boolean useLatestRestorableTime) {
    this.useLatestRestorableTime = useLatestRestorableTime;
    return this;
  }

  /**
   * Get useLatestRestorableTime
   * @return useLatestRestorableTime
   */
  @javax.annotation.Nullable
  public Boolean getUseLatestRestorableTime() {
    return useLatestRestorableTime;
  }

  public void setUseLatestRestorableTime(Boolean useLatestRestorableTime) {
    this.useLatestRestorableTime = useLatestRestorableTime;
  }


  public RestoreTableToPointInTimeInput restoreDateTime(OffsetDateTime restoreDateTime) {
    this.restoreDateTime = restoreDateTime;
    return this;
  }

  /**
   * Get restoreDateTime
   * @return restoreDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getRestoreDateTime() {
    return restoreDateTime;
  }

  public void setRestoreDateTime(OffsetDateTime restoreDateTime) {
    this.restoreDateTime = restoreDateTime;
  }


  public RestoreTableToPointInTimeInput billingModeOverride(BillingMode billingModeOverride) {
    this.billingModeOverride = billingModeOverride;
    return this;
  }

  /**
   * Get billingModeOverride
   * @return billingModeOverride
   */
  @javax.annotation.Nullable
  public BillingMode getBillingModeOverride() {
    return billingModeOverride;
  }

  public void setBillingModeOverride(BillingMode billingModeOverride) {
    this.billingModeOverride = billingModeOverride;
  }


  public RestoreTableToPointInTimeInput globalSecondaryIndexOverride(List globalSecondaryIndexOverride) {
    this.globalSecondaryIndexOverride = globalSecondaryIndexOverride;
    return this;
  }

  /**
   * Get globalSecondaryIndexOverride
   * @return globalSecondaryIndexOverride
   */
  @javax.annotation.Nullable
  public List getGlobalSecondaryIndexOverride() {
    return globalSecondaryIndexOverride;
  }

  public void setGlobalSecondaryIndexOverride(List globalSecondaryIndexOverride) {
    this.globalSecondaryIndexOverride = globalSecondaryIndexOverride;
  }


  public RestoreTableToPointInTimeInput localSecondaryIndexOverride(List localSecondaryIndexOverride) {
    this.localSecondaryIndexOverride = localSecondaryIndexOverride;
    return this;
  }

  /**
   * Get localSecondaryIndexOverride
   * @return localSecondaryIndexOverride
   */
  @javax.annotation.Nullable
  public List getLocalSecondaryIndexOverride() {
    return localSecondaryIndexOverride;
  }

  public void setLocalSecondaryIndexOverride(List localSecondaryIndexOverride) {
    this.localSecondaryIndexOverride = localSecondaryIndexOverride;
  }


  public RestoreTableToPointInTimeInput provisionedThroughputOverride(RestoreTableFromBackupInputProvisionedThroughputOverride provisionedThroughputOverride) {
    this.provisionedThroughputOverride = provisionedThroughputOverride;
    return this;
  }

  /**
   * Get provisionedThroughputOverride
   * @return provisionedThroughputOverride
   */
  @javax.annotation.Nullable
  public RestoreTableFromBackupInputProvisionedThroughputOverride getProvisionedThroughputOverride() {
    return provisionedThroughputOverride;
  }

  public void setProvisionedThroughputOverride(RestoreTableFromBackupInputProvisionedThroughputOverride provisionedThroughputOverride) {
    this.provisionedThroughputOverride = provisionedThroughputOverride;
  }


  public RestoreTableToPointInTimeInput ssESpecificationOverride(RestoreTableFromBackupInputSSESpecificationOverride ssESpecificationOverride) {
    this.ssESpecificationOverride = ssESpecificationOverride;
    return this;
  }

  /**
   * Get ssESpecificationOverride
   * @return ssESpecificationOverride
   */
  @javax.annotation.Nullable
  public RestoreTableFromBackupInputSSESpecificationOverride getSsESpecificationOverride() {
    return ssESpecificationOverride;
  }

  public void setSsESpecificationOverride(RestoreTableFromBackupInputSSESpecificationOverride ssESpecificationOverride) {
    this.ssESpecificationOverride = ssESpecificationOverride;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestoreTableToPointInTimeInput restoreTableToPointInTimeInput = (RestoreTableToPointInTimeInput) o;
    return Objects.equals(this.sourceTableArn, restoreTableToPointInTimeInput.sourceTableArn) &&
        Objects.equals(this.sourceTableName, restoreTableToPointInTimeInput.sourceTableName) &&
        Objects.equals(this.targetTableName, restoreTableToPointInTimeInput.targetTableName) &&
        Objects.equals(this.useLatestRestorableTime, restoreTableToPointInTimeInput.useLatestRestorableTime) &&
        Objects.equals(this.restoreDateTime, restoreTableToPointInTimeInput.restoreDateTime) &&
        Objects.equals(this.billingModeOverride, restoreTableToPointInTimeInput.billingModeOverride) &&
        Objects.equals(this.globalSecondaryIndexOverride, restoreTableToPointInTimeInput.globalSecondaryIndexOverride) &&
        Objects.equals(this.localSecondaryIndexOverride, restoreTableToPointInTimeInput.localSecondaryIndexOverride) &&
        Objects.equals(this.provisionedThroughputOverride, restoreTableToPointInTimeInput.provisionedThroughputOverride) &&
        Objects.equals(this.ssESpecificationOverride, restoreTableToPointInTimeInput.ssESpecificationOverride);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceTableArn, sourceTableName, targetTableName, useLatestRestorableTime, restoreDateTime, billingModeOverride, globalSecondaryIndexOverride, localSecondaryIndexOverride, provisionedThroughputOverride, ssESpecificationOverride);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestoreTableToPointInTimeInput {\n");
    sb.append("    sourceTableArn: ").append(toIndentedString(sourceTableArn)).append("\n");
    sb.append("    sourceTableName: ").append(toIndentedString(sourceTableName)).append("\n");
    sb.append("    targetTableName: ").append(toIndentedString(targetTableName)).append("\n");
    sb.append("    useLatestRestorableTime: ").append(toIndentedString(useLatestRestorableTime)).append("\n");
    sb.append("    restoreDateTime: ").append(toIndentedString(restoreDateTime)).append("\n");
    sb.append("    billingModeOverride: ").append(toIndentedString(billingModeOverride)).append("\n");
    sb.append("    globalSecondaryIndexOverride: ").append(toIndentedString(globalSecondaryIndexOverride)).append("\n");
    sb.append("    localSecondaryIndexOverride: ").append(toIndentedString(localSecondaryIndexOverride)).append("\n");
    sb.append("    provisionedThroughputOverride: ").append(toIndentedString(provisionedThroughputOverride)).append("\n");
    sb.append("    ssESpecificationOverride: ").append(toIndentedString(ssESpecificationOverride)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("SourceTableArn");
    openapiFields.add("SourceTableName");
    openapiFields.add("TargetTableName");
    openapiFields.add("UseLatestRestorableTime");
    openapiFields.add("RestoreDateTime");
    openapiFields.add("BillingModeOverride");
    openapiFields.add("GlobalSecondaryIndexOverride");
    openapiFields.add("LocalSecondaryIndexOverride");
    openapiFields.add("ProvisionedThroughputOverride");
    openapiFields.add("SSESpecificationOverride");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("TargetTableName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RestoreTableToPointInTimeInput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RestoreTableToPointInTimeInput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RestoreTableToPointInTimeInput is not found in the empty JSON string", RestoreTableToPointInTimeInput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RestoreTableToPointInTimeInput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RestoreTableToPointInTimeInput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RestoreTableToPointInTimeInput.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `SourceTableArn`
      if (jsonObj.get("SourceTableArn") != null && !jsonObj.get("SourceTableArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SourceTableArn"));
      }
      // validate the optional field `SourceTableName`
      if (jsonObj.get("SourceTableName") != null && !jsonObj.get("SourceTableName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SourceTableName"));
      }
      // validate the required field `TargetTableName`
      String.validateJsonElement(jsonObj.get("TargetTableName"));
      // validate the optional field `UseLatestRestorableTime`
      if (jsonObj.get("UseLatestRestorableTime") != null && !jsonObj.get("UseLatestRestorableTime").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("UseLatestRestorableTime"));
      }
      // validate the optional field `RestoreDateTime`
      if (jsonObj.get("RestoreDateTime") != null && !jsonObj.get("RestoreDateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("RestoreDateTime"));
      }
      // validate the optional field `BillingModeOverride`
      if (jsonObj.get("BillingModeOverride") != null && !jsonObj.get("BillingModeOverride").isJsonNull()) {
        BillingMode.validateJsonElement(jsonObj.get("BillingModeOverride"));
      }
      // validate the optional field `GlobalSecondaryIndexOverride`
      if (jsonObj.get("GlobalSecondaryIndexOverride") != null && !jsonObj.get("GlobalSecondaryIndexOverride").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("GlobalSecondaryIndexOverride"));
      }
      // validate the optional field `LocalSecondaryIndexOverride`
      if (jsonObj.get("LocalSecondaryIndexOverride") != null && !jsonObj.get("LocalSecondaryIndexOverride").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("LocalSecondaryIndexOverride"));
      }
      // validate the optional field `ProvisionedThroughputOverride`
      if (jsonObj.get("ProvisionedThroughputOverride") != null && !jsonObj.get("ProvisionedThroughputOverride").isJsonNull()) {
        RestoreTableFromBackupInputProvisionedThroughputOverride.validateJsonElement(jsonObj.get("ProvisionedThroughputOverride"));
      }
      // validate the optional field `SSESpecificationOverride`
      if (jsonObj.get("SSESpecificationOverride") != null && !jsonObj.get("SSESpecificationOverride").isJsonNull()) {
        RestoreTableFromBackupInputSSESpecificationOverride.validateJsonElement(jsonObj.get("SSESpecificationOverride"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RestoreTableToPointInTimeInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RestoreTableToPointInTimeInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RestoreTableToPointInTimeInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RestoreTableToPointInTimeInput.class));

       return (TypeAdapter<T>) new TypeAdapter<RestoreTableToPointInTimeInput>() {
           @Override
           public void write(JsonWriter out, RestoreTableToPointInTimeInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RestoreTableToPointInTimeInput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RestoreTableToPointInTimeInput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RestoreTableToPointInTimeInput
   * @throws IOException if the JSON string is invalid with respect to RestoreTableToPointInTimeInput
   */
  public static RestoreTableToPointInTimeInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RestoreTableToPointInTimeInput.class);
  }

  /**
   * Convert an instance of RestoreTableToPointInTimeInput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

