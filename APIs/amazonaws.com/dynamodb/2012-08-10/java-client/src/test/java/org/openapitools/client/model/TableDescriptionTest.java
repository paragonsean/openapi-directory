/*
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TableDescriptionArchivalSummary;
import org.openapitools.client.model.TableDescriptionBillingModeSummary;
import org.openapitools.client.model.TableDescriptionProvisionedThroughput;
import org.openapitools.client.model.TableDescriptionRestoreSummary;
import org.openapitools.client.model.TableDescriptionSSEDescription;
import org.openapitools.client.model.TableDescriptionStreamSpecification;
import org.openapitools.client.model.TableDescriptionTableClassSummary;
import org.openapitools.client.model.TableStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TableDescription
 */
public class TableDescriptionTest {
    private final TableDescription model = new TableDescription();

    /**
     * Model tests for TableDescription
     */
    @Test
    public void testTableDescription() {
        // TODO: test TableDescription
    }

    /**
     * Test the property 'attributeDefinitions'
     */
    @Test
    public void attributeDefinitionsTest() {
        // TODO: test attributeDefinitions
    }

    /**
     * Test the property 'tableName'
     */
    @Test
    public void tableNameTest() {
        // TODO: test tableName
    }

    /**
     * Test the property 'keySchema'
     */
    @Test
    public void keySchemaTest() {
        // TODO: test keySchema
    }

    /**
     * Test the property 'tableStatus'
     */
    @Test
    public void tableStatusTest() {
        // TODO: test tableStatus
    }

    /**
     * Test the property 'creationDateTime'
     */
    @Test
    public void creationDateTimeTest() {
        // TODO: test creationDateTime
    }

    /**
     * Test the property 'provisionedThroughput'
     */
    @Test
    public void provisionedThroughputTest() {
        // TODO: test provisionedThroughput
    }

    /**
     * Test the property 'tableSizeBytes'
     */
    @Test
    public void tableSizeBytesTest() {
        // TODO: test tableSizeBytes
    }

    /**
     * Test the property 'itemCount'
     */
    @Test
    public void itemCountTest() {
        // TODO: test itemCount
    }

    /**
     * Test the property 'tableArn'
     */
    @Test
    public void tableArnTest() {
        // TODO: test tableArn
    }

    /**
     * Test the property 'tableId'
     */
    @Test
    public void tableIdTest() {
        // TODO: test tableId
    }

    /**
     * Test the property 'billingModeSummary'
     */
    @Test
    public void billingModeSummaryTest() {
        // TODO: test billingModeSummary
    }

    /**
     * Test the property 'localSecondaryIndexes'
     */
    @Test
    public void localSecondaryIndexesTest() {
        // TODO: test localSecondaryIndexes
    }

    /**
     * Test the property 'globalSecondaryIndexes'
     */
    @Test
    public void globalSecondaryIndexesTest() {
        // TODO: test globalSecondaryIndexes
    }

    /**
     * Test the property 'streamSpecification'
     */
    @Test
    public void streamSpecificationTest() {
        // TODO: test streamSpecification
    }

    /**
     * Test the property 'latestStreamLabel'
     */
    @Test
    public void latestStreamLabelTest() {
        // TODO: test latestStreamLabel
    }

    /**
     * Test the property 'latestStreamArn'
     */
    @Test
    public void latestStreamArnTest() {
        // TODO: test latestStreamArn
    }

    /**
     * Test the property 'globalTableVersion'
     */
    @Test
    public void globalTableVersionTest() {
        // TODO: test globalTableVersion
    }

    /**
     * Test the property 'replicas'
     */
    @Test
    public void replicasTest() {
        // TODO: test replicas
    }

    /**
     * Test the property 'restoreSummary'
     */
    @Test
    public void restoreSummaryTest() {
        // TODO: test restoreSummary
    }

    /**
     * Test the property 'ssEDescription'
     */
    @Test
    public void ssEDescriptionTest() {
        // TODO: test ssEDescription
    }

    /**
     * Test the property 'archivalSummary'
     */
    @Test
    public void archivalSummaryTest() {
        // TODO: test archivalSummary
    }

    /**
     * Test the property 'tableClassSummary'
     */
    @Test
    public void tableClassSummaryTest() {
        // TODO: test tableClassSummary
    }

    /**
     * Test the property 'deletionProtectionEnabled'
     */
    @Test
    public void deletionProtectionEnabledTest() {
        // TODO: test deletionProtectionEnabled
    }

}
