/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TableClass from './TableClass';
import TableClassSummary from './TableClassSummary';

/**
 * The TableDescriptionTableClassSummary model module.
 * @module model/TableDescriptionTableClassSummary
 * @version 2012-08-10
 */
class TableDescriptionTableClassSummary {
    /**
     * Constructs a new <code>TableDescriptionTableClassSummary</code>.
     * @alias module:model/TableDescriptionTableClassSummary
     * @implements module:model/TableClassSummary
     */
    constructor() { 
        TableClassSummary.initialize(this);
        TableDescriptionTableClassSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TableDescriptionTableClassSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TableDescriptionTableClassSummary} obj Optional instance to populate.
     * @return {module:model/TableDescriptionTableClassSummary} The populated <code>TableDescriptionTableClassSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TableDescriptionTableClassSummary();
            TableClassSummary.constructFromObject(data, obj);

            if (data.hasOwnProperty('TableClass')) {
                obj['TableClass'] = ApiClient.convertToType(data['TableClass'], TableClass);
            }
            if (data.hasOwnProperty('LastUpdateDateTime')) {
                obj['LastUpdateDateTime'] = ApiClient.convertToType(data['LastUpdateDateTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TableDescriptionTableClassSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TableDescriptionTableClassSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `TableClass`
        if (data['TableClass']) { // data not null
          TableClass.validateJSON(data['TableClass']);
        }
        // validate the optional field `LastUpdateDateTime`
        if (data['LastUpdateDateTime']) { // data not null
          Date.validateJSON(data['LastUpdateDateTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/TableClass} TableClass
 */
TableDescriptionTableClassSummary.prototype['TableClass'] = undefined;

/**
 * @member {Date} LastUpdateDateTime
 */
TableDescriptionTableClassSummary.prototype['LastUpdateDateTime'] = undefined;


// Implement TableClassSummary interface:
/**
 * @member {module:model/TableClass} TableClass
 */
TableClassSummary.prototype['TableClass'] = undefined;
/**
 * @member {Date} LastUpdateDateTime
 */
TableClassSummary.prototype['LastUpdateDateTime'] = undefined;




export default TableDescriptionTableClassSummary;

