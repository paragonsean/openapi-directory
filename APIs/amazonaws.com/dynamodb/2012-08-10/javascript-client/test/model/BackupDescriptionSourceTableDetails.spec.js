/**
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonDynamoDb);
  }
}(this, function(expect, AmazonDynamoDb) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonDynamoDb.BackupDescriptionSourceTableDetails();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BackupDescriptionSourceTableDetails', function() {
    it('should create an instance of BackupDescriptionSourceTableDetails', function() {
      // uncomment below and update the code to test BackupDescriptionSourceTableDetails
      //var instance = new AmazonDynamoDb.BackupDescriptionSourceTableDetails();
      //expect(instance).to.be.a(AmazonDynamoDb.BackupDescriptionSourceTableDetails);
    });

    it('should have the property tableName (base name: "TableName")', function() {
      // uncomment below and update the code to test the property tableName
      //var instance = new AmazonDynamoDb.BackupDescriptionSourceTableDetails();
      //expect(instance).to.be();
    });

    it('should have the property tableId (base name: "TableId")', function() {
      // uncomment below and update the code to test the property tableId
      //var instance = new AmazonDynamoDb.BackupDescriptionSourceTableDetails();
      //expect(instance).to.be();
    });

    it('should have the property tableArn (base name: "TableArn")', function() {
      // uncomment below and update the code to test the property tableArn
      //var instance = new AmazonDynamoDb.BackupDescriptionSourceTableDetails();
      //expect(instance).to.be();
    });

    it('should have the property tableSizeBytes (base name: "TableSizeBytes")', function() {
      // uncomment below and update the code to test the property tableSizeBytes
      //var instance = new AmazonDynamoDb.BackupDescriptionSourceTableDetails();
      //expect(instance).to.be();
    });

    it('should have the property keySchema (base name: "KeySchema")', function() {
      // uncomment below and update the code to test the property keySchema
      //var instance = new AmazonDynamoDb.BackupDescriptionSourceTableDetails();
      //expect(instance).to.be();
    });

    it('should have the property tableCreationDateTime (base name: "TableCreationDateTime")', function() {
      // uncomment below and update the code to test the property tableCreationDateTime
      //var instance = new AmazonDynamoDb.BackupDescriptionSourceTableDetails();
      //expect(instance).to.be();
    });

    it('should have the property provisionedThroughput (base name: "ProvisionedThroughput")', function() {
      // uncomment below and update the code to test the property provisionedThroughput
      //var instance = new AmazonDynamoDb.BackupDescriptionSourceTableDetails();
      //expect(instance).to.be();
    });

    it('should have the property itemCount (base name: "ItemCount")', function() {
      // uncomment below and update the code to test the property itemCount
      //var instance = new AmazonDynamoDb.BackupDescriptionSourceTableDetails();
      //expect(instance).to.be();
    });

    it('should have the property billingMode (base name: "BillingMode")', function() {
      // uncomment below and update the code to test the property billingMode
      //var instance = new AmazonDynamoDb.BackupDescriptionSourceTableDetails();
      //expect(instance).to.be();
    });

  });

}));
