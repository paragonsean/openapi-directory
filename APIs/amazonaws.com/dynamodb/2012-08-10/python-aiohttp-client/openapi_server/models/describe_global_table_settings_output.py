# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeGlobalTableSettingsOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, global_table_name: str=None, replica_settings: List=None):
        """DescribeGlobalTableSettingsOutput - a model defined in OpenAPI

        :param global_table_name: The global_table_name of this DescribeGlobalTableSettingsOutput.
        :param replica_settings: The replica_settings of this DescribeGlobalTableSettingsOutput.
        """
        self.openapi_types = {
            'global_table_name': str,
            'replica_settings': List
        }

        self.attribute_map = {
            'global_table_name': 'GlobalTableName',
            'replica_settings': 'ReplicaSettings'
        }

        self._global_table_name = global_table_name
        self._replica_settings = replica_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeGlobalTableSettingsOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeGlobalTableSettingsOutput of this DescribeGlobalTableSettingsOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def global_table_name(self):
        """Gets the global_table_name of this DescribeGlobalTableSettingsOutput.


        :return: The global_table_name of this DescribeGlobalTableSettingsOutput.
        :rtype: str
        """
        return self._global_table_name

    @global_table_name.setter
    def global_table_name(self, global_table_name):
        """Sets the global_table_name of this DescribeGlobalTableSettingsOutput.


        :param global_table_name: The global_table_name of this DescribeGlobalTableSettingsOutput.
        :type global_table_name: str
        """

        self._global_table_name = global_table_name

    @property
    def replica_settings(self):
        """Gets the replica_settings of this DescribeGlobalTableSettingsOutput.


        :return: The replica_settings of this DescribeGlobalTableSettingsOutput.
        :rtype: List
        """
        return self._replica_settings

    @replica_settings.setter
    def replica_settings(self, replica_settings):
        """Sets the replica_settings of this DescribeGlobalTableSettingsOutput.


        :param replica_settings: The replica_settings of this DescribeGlobalTableSettingsOutput.
        :type replica_settings: List
        """

        self._replica_settings = replica_settings
