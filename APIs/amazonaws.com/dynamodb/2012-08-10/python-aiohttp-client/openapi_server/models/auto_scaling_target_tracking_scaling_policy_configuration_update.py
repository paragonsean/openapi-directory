# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AutoScalingTargetTrackingScalingPolicyConfigurationUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disable_scale_in: bool=None, scale_in_cooldown: int=None, scale_out_cooldown: int=None, target_value: float=None):
        """AutoScalingTargetTrackingScalingPolicyConfigurationUpdate - a model defined in OpenAPI

        :param disable_scale_in: The disable_scale_in of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.
        :param scale_in_cooldown: The scale_in_cooldown of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.
        :param scale_out_cooldown: The scale_out_cooldown of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.
        :param target_value: The target_value of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.
        """
        self.openapi_types = {
            'disable_scale_in': bool,
            'scale_in_cooldown': int,
            'scale_out_cooldown': int,
            'target_value': float
        }

        self.attribute_map = {
            'disable_scale_in': 'DisableScaleIn',
            'scale_in_cooldown': 'ScaleInCooldown',
            'scale_out_cooldown': 'ScaleOutCooldown',
            'target_value': 'TargetValue'
        }

        self._disable_scale_in = disable_scale_in
        self._scale_in_cooldown = scale_in_cooldown
        self._scale_out_cooldown = scale_out_cooldown
        self._target_value = target_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutoScalingTargetTrackingScalingPolicyConfigurationUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutoScalingTargetTrackingScalingPolicyConfigurationUpdate of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disable_scale_in(self):
        """Gets the disable_scale_in of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.


        :return: The disable_scale_in of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.
        :rtype: bool
        """
        return self._disable_scale_in

    @disable_scale_in.setter
    def disable_scale_in(self, disable_scale_in):
        """Sets the disable_scale_in of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.


        :param disable_scale_in: The disable_scale_in of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.
        :type disable_scale_in: bool
        """

        self._disable_scale_in = disable_scale_in

    @property
    def scale_in_cooldown(self):
        """Gets the scale_in_cooldown of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.


        :return: The scale_in_cooldown of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.
        :rtype: int
        """
        return self._scale_in_cooldown

    @scale_in_cooldown.setter
    def scale_in_cooldown(self, scale_in_cooldown):
        """Sets the scale_in_cooldown of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.


        :param scale_in_cooldown: The scale_in_cooldown of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.
        :type scale_in_cooldown: int
        """

        self._scale_in_cooldown = scale_in_cooldown

    @property
    def scale_out_cooldown(self):
        """Gets the scale_out_cooldown of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.


        :return: The scale_out_cooldown of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.
        :rtype: int
        """
        return self._scale_out_cooldown

    @scale_out_cooldown.setter
    def scale_out_cooldown(self, scale_out_cooldown):
        """Sets the scale_out_cooldown of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.


        :param scale_out_cooldown: The scale_out_cooldown of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.
        :type scale_out_cooldown: int
        """

        self._scale_out_cooldown = scale_out_cooldown

    @property
    def target_value(self):
        """Gets the target_value of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.


        :return: The target_value of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.
        :rtype: float
        """
        return self._target_value

    @target_value.setter
    def target_value(self, target_value):
        """Sets the target_value of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.


        :param target_value: The target_value of this AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.
        :type target_value: float
        """
        if target_value is None:
            raise ValueError("Invalid value for `target_value`, must not be `None`")

        self._target_value = target_value
