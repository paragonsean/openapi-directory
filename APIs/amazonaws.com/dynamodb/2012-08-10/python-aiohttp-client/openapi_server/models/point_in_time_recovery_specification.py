# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PointInTimeRecoverySpecification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, point_in_time_recovery_enabled: bool=None):
        """PointInTimeRecoverySpecification - a model defined in OpenAPI

        :param point_in_time_recovery_enabled: The point_in_time_recovery_enabled of this PointInTimeRecoverySpecification.
        """
        self.openapi_types = {
            'point_in_time_recovery_enabled': bool
        }

        self.attribute_map = {
            'point_in_time_recovery_enabled': 'PointInTimeRecoveryEnabled'
        }

        self._point_in_time_recovery_enabled = point_in_time_recovery_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PointInTimeRecoverySpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PointInTimeRecoverySpecification of this PointInTimeRecoverySpecification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def point_in_time_recovery_enabled(self):
        """Gets the point_in_time_recovery_enabled of this PointInTimeRecoverySpecification.


        :return: The point_in_time_recovery_enabled of this PointInTimeRecoverySpecification.
        :rtype: bool
        """
        return self._point_in_time_recovery_enabled

    @point_in_time_recovery_enabled.setter
    def point_in_time_recovery_enabled(self, point_in_time_recovery_enabled):
        """Sets the point_in_time_recovery_enabled of this PointInTimeRecoverySpecification.


        :param point_in_time_recovery_enabled: The point_in_time_recovery_enabled of this PointInTimeRecoverySpecification.
        :type point_in_time_recovery_enabled: bool
        """
        if point_in_time_recovery_enabled is None:
            raise ValueError("Invalid value for `point_in_time_recovery_enabled`, must not be `None`")

        self._point_in_time_recovery_enabled = point_in_time_recovery_enabled
