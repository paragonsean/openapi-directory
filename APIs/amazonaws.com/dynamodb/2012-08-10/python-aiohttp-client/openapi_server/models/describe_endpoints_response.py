# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeEndpointsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, endpoints: List=None):
        """DescribeEndpointsResponse - a model defined in OpenAPI

        :param endpoints: The endpoints of this DescribeEndpointsResponse.
        """
        self.openapi_types = {
            'endpoints': List
        }

        self.attribute_map = {
            'endpoints': 'Endpoints'
        }

        self._endpoints = endpoints

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeEndpointsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeEndpointsResponse of this DescribeEndpointsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoints(self):
        """Gets the endpoints of this DescribeEndpointsResponse.


        :return: The endpoints of this DescribeEndpointsResponse.
        :rtype: List
        """
        return self._endpoints

    @endpoints.setter
    def endpoints(self, endpoints):
        """Sets the endpoints of this DescribeEndpointsResponse.


        :param endpoints: The endpoints of this DescribeEndpointsResponse.
        :type endpoints: List
        """
        if endpoints is None:
            raise ValueError("Invalid value for `endpoints`, must not be `None`")

        self._endpoints = endpoints
