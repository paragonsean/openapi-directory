# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_continuous_backups_input_point_in_time_recovery_specification import UpdateContinuousBackupsInputPointInTimeRecoverySpecification
from openapi_server import util


class UpdateContinuousBackupsInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, table_name: str=None, point_in_time_recovery_specification: UpdateContinuousBackupsInputPointInTimeRecoverySpecification=None):
        """UpdateContinuousBackupsInput - a model defined in OpenAPI

        :param table_name: The table_name of this UpdateContinuousBackupsInput.
        :param point_in_time_recovery_specification: The point_in_time_recovery_specification of this UpdateContinuousBackupsInput.
        """
        self.openapi_types = {
            'table_name': str,
            'point_in_time_recovery_specification': UpdateContinuousBackupsInputPointInTimeRecoverySpecification
        }

        self.attribute_map = {
            'table_name': 'TableName',
            'point_in_time_recovery_specification': 'PointInTimeRecoverySpecification'
        }

        self._table_name = table_name
        self._point_in_time_recovery_specification = point_in_time_recovery_specification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateContinuousBackupsInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateContinuousBackupsInput of this UpdateContinuousBackupsInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def table_name(self):
        """Gets the table_name of this UpdateContinuousBackupsInput.


        :return: The table_name of this UpdateContinuousBackupsInput.
        :rtype: str
        """
        return self._table_name

    @table_name.setter
    def table_name(self, table_name):
        """Sets the table_name of this UpdateContinuousBackupsInput.


        :param table_name: The table_name of this UpdateContinuousBackupsInput.
        :type table_name: str
        """
        if table_name is None:
            raise ValueError("Invalid value for `table_name`, must not be `None`")

        self._table_name = table_name

    @property
    def point_in_time_recovery_specification(self):
        """Gets the point_in_time_recovery_specification of this UpdateContinuousBackupsInput.


        :return: The point_in_time_recovery_specification of this UpdateContinuousBackupsInput.
        :rtype: UpdateContinuousBackupsInputPointInTimeRecoverySpecification
        """
        return self._point_in_time_recovery_specification

    @point_in_time_recovery_specification.setter
    def point_in_time_recovery_specification(self, point_in_time_recovery_specification):
        """Sets the point_in_time_recovery_specification of this UpdateContinuousBackupsInput.


        :param point_in_time_recovery_specification: The point_in_time_recovery_specification of this UpdateContinuousBackupsInput.
        :type point_in_time_recovery_specification: UpdateContinuousBackupsInputPointInTimeRecoverySpecification
        """
        if point_in_time_recovery_specification is None:
            raise ValueError("Invalid value for `point_in_time_recovery_specification`, must not be `None`")

        self._point_in_time_recovery_specification = point_in_time_recovery_specification
