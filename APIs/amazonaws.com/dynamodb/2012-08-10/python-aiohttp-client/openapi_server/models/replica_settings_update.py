# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.replica_settings_update_replica_provisioned_read_capacity_auto_scaling_settings_update import ReplicaSettingsUpdateReplicaProvisionedReadCapacityAutoScalingSettingsUpdate
from openapi_server.models.table_class import TableClass
from openapi_server import util


class ReplicaSettingsUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, region_name: str=None, replica_provisioned_read_capacity_units: int=None, replica_provisioned_read_capacity_auto_scaling_settings_update: ReplicaSettingsUpdateReplicaProvisionedReadCapacityAutoScalingSettingsUpdate=None, replica_global_secondary_index_settings_update: List=None, replica_table_class: TableClass=None):
        """ReplicaSettingsUpdate - a model defined in OpenAPI

        :param region_name: The region_name of this ReplicaSettingsUpdate.
        :param replica_provisioned_read_capacity_units: The replica_provisioned_read_capacity_units of this ReplicaSettingsUpdate.
        :param replica_provisioned_read_capacity_auto_scaling_settings_update: The replica_provisioned_read_capacity_auto_scaling_settings_update of this ReplicaSettingsUpdate.
        :param replica_global_secondary_index_settings_update: The replica_global_secondary_index_settings_update of this ReplicaSettingsUpdate.
        :param replica_table_class: The replica_table_class of this ReplicaSettingsUpdate.
        """
        self.openapi_types = {
            'region_name': str,
            'replica_provisioned_read_capacity_units': int,
            'replica_provisioned_read_capacity_auto_scaling_settings_update': ReplicaSettingsUpdateReplicaProvisionedReadCapacityAutoScalingSettingsUpdate,
            'replica_global_secondary_index_settings_update': List,
            'replica_table_class': TableClass
        }

        self.attribute_map = {
            'region_name': 'RegionName',
            'replica_provisioned_read_capacity_units': 'ReplicaProvisionedReadCapacityUnits',
            'replica_provisioned_read_capacity_auto_scaling_settings_update': 'ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate',
            'replica_global_secondary_index_settings_update': 'ReplicaGlobalSecondaryIndexSettingsUpdate',
            'replica_table_class': 'ReplicaTableClass'
        }

        self._region_name = region_name
        self._replica_provisioned_read_capacity_units = replica_provisioned_read_capacity_units
        self._replica_provisioned_read_capacity_auto_scaling_settings_update = replica_provisioned_read_capacity_auto_scaling_settings_update
        self._replica_global_secondary_index_settings_update = replica_global_secondary_index_settings_update
        self._replica_table_class = replica_table_class

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReplicaSettingsUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReplicaSettingsUpdate of this ReplicaSettingsUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def region_name(self):
        """Gets the region_name of this ReplicaSettingsUpdate.


        :return: The region_name of this ReplicaSettingsUpdate.
        :rtype: str
        """
        return self._region_name

    @region_name.setter
    def region_name(self, region_name):
        """Sets the region_name of this ReplicaSettingsUpdate.


        :param region_name: The region_name of this ReplicaSettingsUpdate.
        :type region_name: str
        """
        if region_name is None:
            raise ValueError("Invalid value for `region_name`, must not be `None`")

        self._region_name = region_name

    @property
    def replica_provisioned_read_capacity_units(self):
        """Gets the replica_provisioned_read_capacity_units of this ReplicaSettingsUpdate.


        :return: The replica_provisioned_read_capacity_units of this ReplicaSettingsUpdate.
        :rtype: int
        """
        return self._replica_provisioned_read_capacity_units

    @replica_provisioned_read_capacity_units.setter
    def replica_provisioned_read_capacity_units(self, replica_provisioned_read_capacity_units):
        """Sets the replica_provisioned_read_capacity_units of this ReplicaSettingsUpdate.


        :param replica_provisioned_read_capacity_units: The replica_provisioned_read_capacity_units of this ReplicaSettingsUpdate.
        :type replica_provisioned_read_capacity_units: int
        """

        self._replica_provisioned_read_capacity_units = replica_provisioned_read_capacity_units

    @property
    def replica_provisioned_read_capacity_auto_scaling_settings_update(self):
        """Gets the replica_provisioned_read_capacity_auto_scaling_settings_update of this ReplicaSettingsUpdate.


        :return: The replica_provisioned_read_capacity_auto_scaling_settings_update of this ReplicaSettingsUpdate.
        :rtype: ReplicaSettingsUpdateReplicaProvisionedReadCapacityAutoScalingSettingsUpdate
        """
        return self._replica_provisioned_read_capacity_auto_scaling_settings_update

    @replica_provisioned_read_capacity_auto_scaling_settings_update.setter
    def replica_provisioned_read_capacity_auto_scaling_settings_update(self, replica_provisioned_read_capacity_auto_scaling_settings_update):
        """Sets the replica_provisioned_read_capacity_auto_scaling_settings_update of this ReplicaSettingsUpdate.


        :param replica_provisioned_read_capacity_auto_scaling_settings_update: The replica_provisioned_read_capacity_auto_scaling_settings_update of this ReplicaSettingsUpdate.
        :type replica_provisioned_read_capacity_auto_scaling_settings_update: ReplicaSettingsUpdateReplicaProvisionedReadCapacityAutoScalingSettingsUpdate
        """

        self._replica_provisioned_read_capacity_auto_scaling_settings_update = replica_provisioned_read_capacity_auto_scaling_settings_update

    @property
    def replica_global_secondary_index_settings_update(self):
        """Gets the replica_global_secondary_index_settings_update of this ReplicaSettingsUpdate.


        :return: The replica_global_secondary_index_settings_update of this ReplicaSettingsUpdate.
        :rtype: List
        """
        return self._replica_global_secondary_index_settings_update

    @replica_global_secondary_index_settings_update.setter
    def replica_global_secondary_index_settings_update(self, replica_global_secondary_index_settings_update):
        """Sets the replica_global_secondary_index_settings_update of this ReplicaSettingsUpdate.


        :param replica_global_secondary_index_settings_update: The replica_global_secondary_index_settings_update of this ReplicaSettingsUpdate.
        :type replica_global_secondary_index_settings_update: List
        """

        self._replica_global_secondary_index_settings_update = replica_global_secondary_index_settings_update

    @property
    def replica_table_class(self):
        """Gets the replica_table_class of this ReplicaSettingsUpdate.


        :return: The replica_table_class of this ReplicaSettingsUpdate.
        :rtype: TableClass
        """
        return self._replica_table_class

    @replica_table_class.setter
    def replica_table_class(self, replica_table_class):
        """Sets the replica_table_class of this ReplicaSettingsUpdate.


        :param replica_table_class: The replica_table_class of this ReplicaSettingsUpdate.
        :type replica_table_class: TableClass
        """

        self._replica_table_class = replica_table_class
