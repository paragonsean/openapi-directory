# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListGlobalTablesInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exclusive_start_global_table_name: str=None, limit: int=None, region_name: str=None):
        """ListGlobalTablesInput - a model defined in OpenAPI

        :param exclusive_start_global_table_name: The exclusive_start_global_table_name of this ListGlobalTablesInput.
        :param limit: The limit of this ListGlobalTablesInput.
        :param region_name: The region_name of this ListGlobalTablesInput.
        """
        self.openapi_types = {
            'exclusive_start_global_table_name': str,
            'limit': int,
            'region_name': str
        }

        self.attribute_map = {
            'exclusive_start_global_table_name': 'ExclusiveStartGlobalTableName',
            'limit': 'Limit',
            'region_name': 'RegionName'
        }

        self._exclusive_start_global_table_name = exclusive_start_global_table_name
        self._limit = limit
        self._region_name = region_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListGlobalTablesInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListGlobalTablesInput of this ListGlobalTablesInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exclusive_start_global_table_name(self):
        """Gets the exclusive_start_global_table_name of this ListGlobalTablesInput.


        :return: The exclusive_start_global_table_name of this ListGlobalTablesInput.
        :rtype: str
        """
        return self._exclusive_start_global_table_name

    @exclusive_start_global_table_name.setter
    def exclusive_start_global_table_name(self, exclusive_start_global_table_name):
        """Sets the exclusive_start_global_table_name of this ListGlobalTablesInput.


        :param exclusive_start_global_table_name: The exclusive_start_global_table_name of this ListGlobalTablesInput.
        :type exclusive_start_global_table_name: str
        """

        self._exclusive_start_global_table_name = exclusive_start_global_table_name

    @property
    def limit(self):
        """Gets the limit of this ListGlobalTablesInput.


        :return: The limit of this ListGlobalTablesInput.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this ListGlobalTablesInput.


        :param limit: The limit of this ListGlobalTablesInput.
        :type limit: int
        """

        self._limit = limit

    @property
    def region_name(self):
        """Gets the region_name of this ListGlobalTablesInput.


        :return: The region_name of this ListGlobalTablesInput.
        :rtype: str
        """
        return self._region_name

    @region_name.setter
    def region_name(self, region_name):
        """Sets the region_name of this ListGlobalTablesInput.


        :param region_name: The region_name of this ListGlobalTablesInput.
        :type region_name: str
        """

        self._region_name = region_name
