# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TableDescriptionProvisionedThroughput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, last_increase_date_time: datetime=None, last_decrease_date_time: datetime=None, number_of_decreases_today: int=None, read_capacity_units: int=None, write_capacity_units: int=None):
        """TableDescriptionProvisionedThroughput - a model defined in OpenAPI

        :param last_increase_date_time: The last_increase_date_time of this TableDescriptionProvisionedThroughput.
        :param last_decrease_date_time: The last_decrease_date_time of this TableDescriptionProvisionedThroughput.
        :param number_of_decreases_today: The number_of_decreases_today of this TableDescriptionProvisionedThroughput.
        :param read_capacity_units: The read_capacity_units of this TableDescriptionProvisionedThroughput.
        :param write_capacity_units: The write_capacity_units of this TableDescriptionProvisionedThroughput.
        """
        self.openapi_types = {
            'last_increase_date_time': datetime,
            'last_decrease_date_time': datetime,
            'number_of_decreases_today': int,
            'read_capacity_units': int,
            'write_capacity_units': int
        }

        self.attribute_map = {
            'last_increase_date_time': 'LastIncreaseDateTime',
            'last_decrease_date_time': 'LastDecreaseDateTime',
            'number_of_decreases_today': 'NumberOfDecreasesToday',
            'read_capacity_units': 'ReadCapacityUnits',
            'write_capacity_units': 'WriteCapacityUnits'
        }

        self._last_increase_date_time = last_increase_date_time
        self._last_decrease_date_time = last_decrease_date_time
        self._number_of_decreases_today = number_of_decreases_today
        self._read_capacity_units = read_capacity_units
        self._write_capacity_units = write_capacity_units

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TableDescriptionProvisionedThroughput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TableDescription_ProvisionedThroughput of this TableDescriptionProvisionedThroughput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def last_increase_date_time(self):
        """Gets the last_increase_date_time of this TableDescriptionProvisionedThroughput.


        :return: The last_increase_date_time of this TableDescriptionProvisionedThroughput.
        :rtype: datetime
        """
        return self._last_increase_date_time

    @last_increase_date_time.setter
    def last_increase_date_time(self, last_increase_date_time):
        """Sets the last_increase_date_time of this TableDescriptionProvisionedThroughput.


        :param last_increase_date_time: The last_increase_date_time of this TableDescriptionProvisionedThroughput.
        :type last_increase_date_time: datetime
        """

        self._last_increase_date_time = last_increase_date_time

    @property
    def last_decrease_date_time(self):
        """Gets the last_decrease_date_time of this TableDescriptionProvisionedThroughput.


        :return: The last_decrease_date_time of this TableDescriptionProvisionedThroughput.
        :rtype: datetime
        """
        return self._last_decrease_date_time

    @last_decrease_date_time.setter
    def last_decrease_date_time(self, last_decrease_date_time):
        """Sets the last_decrease_date_time of this TableDescriptionProvisionedThroughput.


        :param last_decrease_date_time: The last_decrease_date_time of this TableDescriptionProvisionedThroughput.
        :type last_decrease_date_time: datetime
        """

        self._last_decrease_date_time = last_decrease_date_time

    @property
    def number_of_decreases_today(self):
        """Gets the number_of_decreases_today of this TableDescriptionProvisionedThroughput.


        :return: The number_of_decreases_today of this TableDescriptionProvisionedThroughput.
        :rtype: int
        """
        return self._number_of_decreases_today

    @number_of_decreases_today.setter
    def number_of_decreases_today(self, number_of_decreases_today):
        """Sets the number_of_decreases_today of this TableDescriptionProvisionedThroughput.


        :param number_of_decreases_today: The number_of_decreases_today of this TableDescriptionProvisionedThroughput.
        :type number_of_decreases_today: int
        """

        self._number_of_decreases_today = number_of_decreases_today

    @property
    def read_capacity_units(self):
        """Gets the read_capacity_units of this TableDescriptionProvisionedThroughput.


        :return: The read_capacity_units of this TableDescriptionProvisionedThroughput.
        :rtype: int
        """
        return self._read_capacity_units

    @read_capacity_units.setter
    def read_capacity_units(self, read_capacity_units):
        """Sets the read_capacity_units of this TableDescriptionProvisionedThroughput.


        :param read_capacity_units: The read_capacity_units of this TableDescriptionProvisionedThroughput.
        :type read_capacity_units: int
        """

        self._read_capacity_units = read_capacity_units

    @property
    def write_capacity_units(self):
        """Gets the write_capacity_units of this TableDescriptionProvisionedThroughput.


        :return: The write_capacity_units of this TableDescriptionProvisionedThroughput.
        :rtype: int
        """
        return self._write_capacity_units

    @write_capacity_units.setter
    def write_capacity_units(self, write_capacity_units):
        """Sets the write_capacity_units of this TableDescriptionProvisionedThroughput.


        :param write_capacity_units: The write_capacity_units of this TableDescriptionProvisionedThroughput.
        :type write_capacity_units: int
        """

        self._write_capacity_units = write_capacity_units
