# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ArchivalSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, archival_date_time: datetime=None, archival_reason: str=None, archival_backup_arn: str=None):
        """ArchivalSummary - a model defined in OpenAPI

        :param archival_date_time: The archival_date_time of this ArchivalSummary.
        :param archival_reason: The archival_reason of this ArchivalSummary.
        :param archival_backup_arn: The archival_backup_arn of this ArchivalSummary.
        """
        self.openapi_types = {
            'archival_date_time': datetime,
            'archival_reason': str,
            'archival_backup_arn': str
        }

        self.attribute_map = {
            'archival_date_time': 'ArchivalDateTime',
            'archival_reason': 'ArchivalReason',
            'archival_backup_arn': 'ArchivalBackupArn'
        }

        self._archival_date_time = archival_date_time
        self._archival_reason = archival_reason
        self._archival_backup_arn = archival_backup_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArchivalSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArchivalSummary of this ArchivalSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def archival_date_time(self):
        """Gets the archival_date_time of this ArchivalSummary.


        :return: The archival_date_time of this ArchivalSummary.
        :rtype: datetime
        """
        return self._archival_date_time

    @archival_date_time.setter
    def archival_date_time(self, archival_date_time):
        """Sets the archival_date_time of this ArchivalSummary.


        :param archival_date_time: The archival_date_time of this ArchivalSummary.
        :type archival_date_time: datetime
        """

        self._archival_date_time = archival_date_time

    @property
    def archival_reason(self):
        """Gets the archival_reason of this ArchivalSummary.


        :return: The archival_reason of this ArchivalSummary.
        :rtype: str
        """
        return self._archival_reason

    @archival_reason.setter
    def archival_reason(self, archival_reason):
        """Sets the archival_reason of this ArchivalSummary.


        :param archival_reason: The archival_reason of this ArchivalSummary.
        :type archival_reason: str
        """

        self._archival_reason = archival_reason

    @property
    def archival_backup_arn(self):
        """Gets the archival_backup_arn of this ArchivalSummary.


        :return: The archival_backup_arn of this ArchivalSummary.
        :rtype: str
        """
        return self._archival_backup_arn

    @archival_backup_arn.setter
    def archival_backup_arn(self, archival_backup_arn):
        """Sets the archival_backup_arn of this ArchivalSummary.


        :param archival_backup_arn: The archival_backup_arn of this ArchivalSummary.
        :type archival_backup_arn: str
        """

        self._archival_backup_arn = archival_backup_arn
