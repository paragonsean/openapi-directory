# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.batch_statement_response_error import BatchStatementResponseError
from openapi_server import util


class BatchStatementResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: BatchStatementResponseError=None, table_name: str=None, item: Dict=None):
        """BatchStatementResponse - a model defined in OpenAPI

        :param error: The error of this BatchStatementResponse.
        :param table_name: The table_name of this BatchStatementResponse.
        :param item: The item of this BatchStatementResponse.
        """
        self.openapi_types = {
            'error': BatchStatementResponseError,
            'table_name': str,
            'item': Dict
        }

        self.attribute_map = {
            'error': 'Error',
            'table_name': 'TableName',
            'item': 'Item'
        }

        self._error = error
        self._table_name = table_name
        self._item = item

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchStatementResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchStatementResponse of this BatchStatementResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this BatchStatementResponse.


        :return: The error of this BatchStatementResponse.
        :rtype: BatchStatementResponseError
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this BatchStatementResponse.


        :param error: The error of this BatchStatementResponse.
        :type error: BatchStatementResponseError
        """

        self._error = error

    @property
    def table_name(self):
        """Gets the table_name of this BatchStatementResponse.


        :return: The table_name of this BatchStatementResponse.
        :rtype: str
        """
        return self._table_name

    @table_name.setter
    def table_name(self, table_name):
        """Sets the table_name of this BatchStatementResponse.


        :param table_name: The table_name of this BatchStatementResponse.
        :type table_name: str
        """

        self._table_name = table_name

    @property
    def item(self):
        """Gets the item of this BatchStatementResponse.


        :return: The item of this BatchStatementResponse.
        :rtype: Dict
        """
        return self._item

    @item.setter
    def item(self, item):
        """Sets the item of this BatchStatementResponse.


        :param item: The item of this BatchStatementResponse.
        :type item: Dict
        """

        self._item = item
