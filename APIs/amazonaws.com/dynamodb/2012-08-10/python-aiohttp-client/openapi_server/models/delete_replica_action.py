# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteReplicaAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, region_name: str=None):
        """DeleteReplicaAction - a model defined in OpenAPI

        :param region_name: The region_name of this DeleteReplicaAction.
        """
        self.openapi_types = {
            'region_name': str
        }

        self.attribute_map = {
            'region_name': 'RegionName'
        }

        self._region_name = region_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteReplicaAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteReplicaAction of this DeleteReplicaAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def region_name(self):
        """Gets the region_name of this DeleteReplicaAction.


        :return: The region_name of this DeleteReplicaAction.
        :rtype: str
        """
        return self._region_name

    @region_name.setter
    def region_name(self, region_name):
        """Sets the region_name of this DeleteReplicaAction.


        :param region_name: The region_name of this DeleteReplicaAction.
        :type region_name: str
        """
        if region_name is None:
            raise ValueError("Invalid value for `region_name`, must not be `None`")

        self._region_name = region_name
