# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_import_output_import_table_description import DescribeImportOutputImportTableDescription
from openapi_server import util


class ImportTableOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, import_table_description: DescribeImportOutputImportTableDescription=None):
        """ImportTableOutput - a model defined in OpenAPI

        :param import_table_description: The import_table_description of this ImportTableOutput.
        """
        self.openapi_types = {
            'import_table_description': DescribeImportOutputImportTableDescription
        }

        self.attribute_map = {
            'import_table_description': 'ImportTableDescription'
        }

        self._import_table_description = import_table_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportTableOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportTableOutput of this ImportTableOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def import_table_description(self):
        """Gets the import_table_description of this ImportTableOutput.


        :return: The import_table_description of this ImportTableOutput.
        :rtype: DescribeImportOutputImportTableDescription
        """
        return self._import_table_description

    @import_table_description.setter
    def import_table_description(self, import_table_description):
        """Sets the import_table_description of this ImportTableOutput.


        :param import_table_description: The import_table_description of this ImportTableOutput.
        :type import_table_description: DescribeImportOutputImportTableDescription
        """
        if import_table_description is None:
            raise ValueError("Invalid value for `import_table_description`, must not be `None`")

        self._import_table_description = import_table_description
