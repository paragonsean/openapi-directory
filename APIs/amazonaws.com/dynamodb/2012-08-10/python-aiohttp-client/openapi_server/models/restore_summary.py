# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RestoreSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_backup_arn: str=None, source_table_arn: str=None, restore_date_time: datetime=None, restore_in_progress: bool=None):
        """RestoreSummary - a model defined in OpenAPI

        :param source_backup_arn: The source_backup_arn of this RestoreSummary.
        :param source_table_arn: The source_table_arn of this RestoreSummary.
        :param restore_date_time: The restore_date_time of this RestoreSummary.
        :param restore_in_progress: The restore_in_progress of this RestoreSummary.
        """
        self.openapi_types = {
            'source_backup_arn': str,
            'source_table_arn': str,
            'restore_date_time': datetime,
            'restore_in_progress': bool
        }

        self.attribute_map = {
            'source_backup_arn': 'SourceBackupArn',
            'source_table_arn': 'SourceTableArn',
            'restore_date_time': 'RestoreDateTime',
            'restore_in_progress': 'RestoreInProgress'
        }

        self._source_backup_arn = source_backup_arn
        self._source_table_arn = source_table_arn
        self._restore_date_time = restore_date_time
        self._restore_in_progress = restore_in_progress

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RestoreSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RestoreSummary of this RestoreSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_backup_arn(self):
        """Gets the source_backup_arn of this RestoreSummary.


        :return: The source_backup_arn of this RestoreSummary.
        :rtype: str
        """
        return self._source_backup_arn

    @source_backup_arn.setter
    def source_backup_arn(self, source_backup_arn):
        """Sets the source_backup_arn of this RestoreSummary.


        :param source_backup_arn: The source_backup_arn of this RestoreSummary.
        :type source_backup_arn: str
        """

        self._source_backup_arn = source_backup_arn

    @property
    def source_table_arn(self):
        """Gets the source_table_arn of this RestoreSummary.


        :return: The source_table_arn of this RestoreSummary.
        :rtype: str
        """
        return self._source_table_arn

    @source_table_arn.setter
    def source_table_arn(self, source_table_arn):
        """Sets the source_table_arn of this RestoreSummary.


        :param source_table_arn: The source_table_arn of this RestoreSummary.
        :type source_table_arn: str
        """

        self._source_table_arn = source_table_arn

    @property
    def restore_date_time(self):
        """Gets the restore_date_time of this RestoreSummary.


        :return: The restore_date_time of this RestoreSummary.
        :rtype: datetime
        """
        return self._restore_date_time

    @restore_date_time.setter
    def restore_date_time(self, restore_date_time):
        """Sets the restore_date_time of this RestoreSummary.


        :param restore_date_time: The restore_date_time of this RestoreSummary.
        :type restore_date_time: datetime
        """
        if restore_date_time is None:
            raise ValueError("Invalid value for `restore_date_time`, must not be `None`")

        self._restore_date_time = restore_date_time

    @property
    def restore_in_progress(self):
        """Gets the restore_in_progress of this RestoreSummary.


        :return: The restore_in_progress of this RestoreSummary.
        :rtype: bool
        """
        return self._restore_in_progress

    @restore_in_progress.setter
    def restore_in_progress(self, restore_in_progress):
        """Sets the restore_in_progress of this RestoreSummary.


        :param restore_in_progress: The restore_in_progress of this RestoreSummary.
        :type restore_in_progress: bool
        """
        if restore_in_progress is None:
            raise ValueError("Invalid value for `restore_in_progress`, must not be `None`")

        self._restore_in_progress = restore_in_progress
