# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auto_scaling_settings_update import AutoScalingSettingsUpdate
from openapi_server import util


class UpdateTableReplicaAutoScalingInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, global_secondary_index_updates: List=None, table_name: str=None, provisioned_write_capacity_auto_scaling_update: AutoScalingSettingsUpdate=None, replica_updates: List=None):
        """UpdateTableReplicaAutoScalingInput - a model defined in OpenAPI

        :param global_secondary_index_updates: The global_secondary_index_updates of this UpdateTableReplicaAutoScalingInput.
        :param table_name: The table_name of this UpdateTableReplicaAutoScalingInput.
        :param provisioned_write_capacity_auto_scaling_update: The provisioned_write_capacity_auto_scaling_update of this UpdateTableReplicaAutoScalingInput.
        :param replica_updates: The replica_updates of this UpdateTableReplicaAutoScalingInput.
        """
        self.openapi_types = {
            'global_secondary_index_updates': List,
            'table_name': str,
            'provisioned_write_capacity_auto_scaling_update': AutoScalingSettingsUpdate,
            'replica_updates': List
        }

        self.attribute_map = {
            'global_secondary_index_updates': 'GlobalSecondaryIndexUpdates',
            'table_name': 'TableName',
            'provisioned_write_capacity_auto_scaling_update': 'ProvisionedWriteCapacityAutoScalingUpdate',
            'replica_updates': 'ReplicaUpdates'
        }

        self._global_secondary_index_updates = global_secondary_index_updates
        self._table_name = table_name
        self._provisioned_write_capacity_auto_scaling_update = provisioned_write_capacity_auto_scaling_update
        self._replica_updates = replica_updates

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateTableReplicaAutoScalingInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateTableReplicaAutoScalingInput of this UpdateTableReplicaAutoScalingInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def global_secondary_index_updates(self):
        """Gets the global_secondary_index_updates of this UpdateTableReplicaAutoScalingInput.


        :return: The global_secondary_index_updates of this UpdateTableReplicaAutoScalingInput.
        :rtype: List
        """
        return self._global_secondary_index_updates

    @global_secondary_index_updates.setter
    def global_secondary_index_updates(self, global_secondary_index_updates):
        """Sets the global_secondary_index_updates of this UpdateTableReplicaAutoScalingInput.


        :param global_secondary_index_updates: The global_secondary_index_updates of this UpdateTableReplicaAutoScalingInput.
        :type global_secondary_index_updates: List
        """

        self._global_secondary_index_updates = global_secondary_index_updates

    @property
    def table_name(self):
        """Gets the table_name of this UpdateTableReplicaAutoScalingInput.


        :return: The table_name of this UpdateTableReplicaAutoScalingInput.
        :rtype: str
        """
        return self._table_name

    @table_name.setter
    def table_name(self, table_name):
        """Sets the table_name of this UpdateTableReplicaAutoScalingInput.


        :param table_name: The table_name of this UpdateTableReplicaAutoScalingInput.
        :type table_name: str
        """
        if table_name is None:
            raise ValueError("Invalid value for `table_name`, must not be `None`")

        self._table_name = table_name

    @property
    def provisioned_write_capacity_auto_scaling_update(self):
        """Gets the provisioned_write_capacity_auto_scaling_update of this UpdateTableReplicaAutoScalingInput.


        :return: The provisioned_write_capacity_auto_scaling_update of this UpdateTableReplicaAutoScalingInput.
        :rtype: AutoScalingSettingsUpdate
        """
        return self._provisioned_write_capacity_auto_scaling_update

    @provisioned_write_capacity_auto_scaling_update.setter
    def provisioned_write_capacity_auto_scaling_update(self, provisioned_write_capacity_auto_scaling_update):
        """Sets the provisioned_write_capacity_auto_scaling_update of this UpdateTableReplicaAutoScalingInput.


        :param provisioned_write_capacity_auto_scaling_update: The provisioned_write_capacity_auto_scaling_update of this UpdateTableReplicaAutoScalingInput.
        :type provisioned_write_capacity_auto_scaling_update: AutoScalingSettingsUpdate
        """

        self._provisioned_write_capacity_auto_scaling_update = provisioned_write_capacity_auto_scaling_update

    @property
    def replica_updates(self):
        """Gets the replica_updates of this UpdateTableReplicaAutoScalingInput.


        :return: The replica_updates of this UpdateTableReplicaAutoScalingInput.
        :rtype: List
        """
        return self._replica_updates

    @replica_updates.setter
    def replica_updates(self, replica_updates):
        """Sets the replica_updates of this UpdateTableReplicaAutoScalingInput.


        :param replica_updates: The replica_updates of this UpdateTableReplicaAutoScalingInput.
        :type replica_updates: List
        """

        self._replica_updates = replica_updates
