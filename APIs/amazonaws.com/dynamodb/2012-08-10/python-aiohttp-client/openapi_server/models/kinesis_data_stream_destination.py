# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destination_status import DestinationStatus
from openapi_server import util


class KinesisDataStreamDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stream_arn: str=None, destination_status: DestinationStatus=None, destination_status_description: str=None):
        """KinesisDataStreamDestination - a model defined in OpenAPI

        :param stream_arn: The stream_arn of this KinesisDataStreamDestination.
        :param destination_status: The destination_status of this KinesisDataStreamDestination.
        :param destination_status_description: The destination_status_description of this KinesisDataStreamDestination.
        """
        self.openapi_types = {
            'stream_arn': str,
            'destination_status': DestinationStatus,
            'destination_status_description': str
        }

        self.attribute_map = {
            'stream_arn': 'StreamArn',
            'destination_status': 'DestinationStatus',
            'destination_status_description': 'DestinationStatusDescription'
        }

        self._stream_arn = stream_arn
        self._destination_status = destination_status
        self._destination_status_description = destination_status_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KinesisDataStreamDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KinesisDataStreamDestination of this KinesisDataStreamDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stream_arn(self):
        """Gets the stream_arn of this KinesisDataStreamDestination.


        :return: The stream_arn of this KinesisDataStreamDestination.
        :rtype: str
        """
        return self._stream_arn

    @stream_arn.setter
    def stream_arn(self, stream_arn):
        """Sets the stream_arn of this KinesisDataStreamDestination.


        :param stream_arn: The stream_arn of this KinesisDataStreamDestination.
        :type stream_arn: str
        """

        self._stream_arn = stream_arn

    @property
    def destination_status(self):
        """Gets the destination_status of this KinesisDataStreamDestination.


        :return: The destination_status of this KinesisDataStreamDestination.
        :rtype: DestinationStatus
        """
        return self._destination_status

    @destination_status.setter
    def destination_status(self, destination_status):
        """Sets the destination_status of this KinesisDataStreamDestination.


        :param destination_status: The destination_status of this KinesisDataStreamDestination.
        :type destination_status: DestinationStatus
        """

        self._destination_status = destination_status

    @property
    def destination_status_description(self):
        """Gets the destination_status_description of this KinesisDataStreamDestination.


        :return: The destination_status_description of this KinesisDataStreamDestination.
        :rtype: str
        """
        return self._destination_status_description

    @destination_status_description.setter
    def destination_status_description(self, destination_status_description):
        """Sets the destination_status_description of this KinesisDataStreamDestination.


        :param destination_status_description: The destination_status_description of this KinesisDataStreamDestination.
        :type destination_status_description: str
        """

        self._destination_status_description = destination_status_description
