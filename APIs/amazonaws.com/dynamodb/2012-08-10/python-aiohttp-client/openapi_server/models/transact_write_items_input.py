# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.return_consumed_capacity import ReturnConsumedCapacity
from openapi_server.models.return_item_collection_metrics import ReturnItemCollectionMetrics
from openapi_server import util


class TransactWriteItemsInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, transact_items: List=None, return_consumed_capacity: ReturnConsumedCapacity=None, return_item_collection_metrics: ReturnItemCollectionMetrics=None, client_request_token: str=None):
        """TransactWriteItemsInput - a model defined in OpenAPI

        :param transact_items: The transact_items of this TransactWriteItemsInput.
        :param return_consumed_capacity: The return_consumed_capacity of this TransactWriteItemsInput.
        :param return_item_collection_metrics: The return_item_collection_metrics of this TransactWriteItemsInput.
        :param client_request_token: The client_request_token of this TransactWriteItemsInput.
        """
        self.openapi_types = {
            'transact_items': List,
            'return_consumed_capacity': ReturnConsumedCapacity,
            'return_item_collection_metrics': ReturnItemCollectionMetrics,
            'client_request_token': str
        }

        self.attribute_map = {
            'transact_items': 'TransactItems',
            'return_consumed_capacity': 'ReturnConsumedCapacity',
            'return_item_collection_metrics': 'ReturnItemCollectionMetrics',
            'client_request_token': 'ClientRequestToken'
        }

        self._transact_items = transact_items
        self._return_consumed_capacity = return_consumed_capacity
        self._return_item_collection_metrics = return_item_collection_metrics
        self._client_request_token = client_request_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransactWriteItemsInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransactWriteItemsInput of this TransactWriteItemsInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def transact_items(self):
        """Gets the transact_items of this TransactWriteItemsInput.


        :return: The transact_items of this TransactWriteItemsInput.
        :rtype: List
        """
        return self._transact_items

    @transact_items.setter
    def transact_items(self, transact_items):
        """Sets the transact_items of this TransactWriteItemsInput.


        :param transact_items: The transact_items of this TransactWriteItemsInput.
        :type transact_items: List
        """
        if transact_items is None:
            raise ValueError("Invalid value for `transact_items`, must not be `None`")

        self._transact_items = transact_items

    @property
    def return_consumed_capacity(self):
        """Gets the return_consumed_capacity of this TransactWriteItemsInput.


        :return: The return_consumed_capacity of this TransactWriteItemsInput.
        :rtype: ReturnConsumedCapacity
        """
        return self._return_consumed_capacity

    @return_consumed_capacity.setter
    def return_consumed_capacity(self, return_consumed_capacity):
        """Sets the return_consumed_capacity of this TransactWriteItemsInput.


        :param return_consumed_capacity: The return_consumed_capacity of this TransactWriteItemsInput.
        :type return_consumed_capacity: ReturnConsumedCapacity
        """

        self._return_consumed_capacity = return_consumed_capacity

    @property
    def return_item_collection_metrics(self):
        """Gets the return_item_collection_metrics of this TransactWriteItemsInput.


        :return: The return_item_collection_metrics of this TransactWriteItemsInput.
        :rtype: ReturnItemCollectionMetrics
        """
        return self._return_item_collection_metrics

    @return_item_collection_metrics.setter
    def return_item_collection_metrics(self, return_item_collection_metrics):
        """Sets the return_item_collection_metrics of this TransactWriteItemsInput.


        :param return_item_collection_metrics: The return_item_collection_metrics of this TransactWriteItemsInput.
        :type return_item_collection_metrics: ReturnItemCollectionMetrics
        """

        self._return_item_collection_metrics = return_item_collection_metrics

    @property
    def client_request_token(self):
        """Gets the client_request_token of this TransactWriteItemsInput.


        :return: The client_request_token of this TransactWriteItemsInput.
        :rtype: str
        """
        return self._client_request_token

    @client_request_token.setter
    def client_request_token(self, client_request_token):
        """Sets the client_request_token of this TransactWriteItemsInput.


        :param client_request_token: The client_request_token of this TransactWriteItemsInput.
        :type client_request_token: str
        """

        self._client_request_token = client_request_token
