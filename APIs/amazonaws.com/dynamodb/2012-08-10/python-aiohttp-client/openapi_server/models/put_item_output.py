# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.put_item_output_consumed_capacity import PutItemOutputConsumedCapacity
from openapi_server.models.put_item_output_item_collection_metrics import PutItemOutputItemCollectionMetrics
from openapi_server import util


class PutItemOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: Dict=None, consumed_capacity: PutItemOutputConsumedCapacity=None, item_collection_metrics: PutItemOutputItemCollectionMetrics=None):
        """PutItemOutput - a model defined in OpenAPI

        :param attributes: The attributes of this PutItemOutput.
        :param consumed_capacity: The consumed_capacity of this PutItemOutput.
        :param item_collection_metrics: The item_collection_metrics of this PutItemOutput.
        """
        self.openapi_types = {
            'attributes': Dict,
            'consumed_capacity': PutItemOutputConsumedCapacity,
            'item_collection_metrics': PutItemOutputItemCollectionMetrics
        }

        self.attribute_map = {
            'attributes': 'Attributes',
            'consumed_capacity': 'ConsumedCapacity',
            'item_collection_metrics': 'ItemCollectionMetrics'
        }

        self._attributes = attributes
        self._consumed_capacity = consumed_capacity
        self._item_collection_metrics = item_collection_metrics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutItemOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutItemOutput of this PutItemOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this PutItemOutput.


        :return: The attributes of this PutItemOutput.
        :rtype: Dict
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this PutItemOutput.


        :param attributes: The attributes of this PutItemOutput.
        :type attributes: Dict
        """

        self._attributes = attributes

    @property
    def consumed_capacity(self):
        """Gets the consumed_capacity of this PutItemOutput.


        :return: The consumed_capacity of this PutItemOutput.
        :rtype: PutItemOutputConsumedCapacity
        """
        return self._consumed_capacity

    @consumed_capacity.setter
    def consumed_capacity(self, consumed_capacity):
        """Sets the consumed_capacity of this PutItemOutput.


        :param consumed_capacity: The consumed_capacity of this PutItemOutput.
        :type consumed_capacity: PutItemOutputConsumedCapacity
        """

        self._consumed_capacity = consumed_capacity

    @property
    def item_collection_metrics(self):
        """Gets the item_collection_metrics of this PutItemOutput.


        :return: The item_collection_metrics of this PutItemOutput.
        :rtype: PutItemOutputItemCollectionMetrics
        """
        return self._item_collection_metrics

    @item_collection_metrics.setter
    def item_collection_metrics(self, item_collection_metrics):
        """Sets the item_collection_metrics of this PutItemOutput.


        :param item_collection_metrics: The item_collection_metrics of this PutItemOutput.
        :type item_collection_metrics: PutItemOutputItemCollectionMetrics
        """

        self._item_collection_metrics = item_collection_metrics
