# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.continuous_backups_description_point_in_time_recovery_description import ContinuousBackupsDescriptionPointInTimeRecoveryDescription
from openapi_server.models.continuous_backups_status import ContinuousBackupsStatus
from openapi_server import util


class ContinuousBackupsDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, continuous_backups_status: ContinuousBackupsStatus=None, point_in_time_recovery_description: ContinuousBackupsDescriptionPointInTimeRecoveryDescription=None):
        """ContinuousBackupsDescription - a model defined in OpenAPI

        :param continuous_backups_status: The continuous_backups_status of this ContinuousBackupsDescription.
        :param point_in_time_recovery_description: The point_in_time_recovery_description of this ContinuousBackupsDescription.
        """
        self.openapi_types = {
            'continuous_backups_status': ContinuousBackupsStatus,
            'point_in_time_recovery_description': ContinuousBackupsDescriptionPointInTimeRecoveryDescription
        }

        self.attribute_map = {
            'continuous_backups_status': 'ContinuousBackupsStatus',
            'point_in_time_recovery_description': 'PointInTimeRecoveryDescription'
        }

        self._continuous_backups_status = continuous_backups_status
        self._point_in_time_recovery_description = point_in_time_recovery_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContinuousBackupsDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContinuousBackupsDescription of this ContinuousBackupsDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def continuous_backups_status(self):
        """Gets the continuous_backups_status of this ContinuousBackupsDescription.


        :return: The continuous_backups_status of this ContinuousBackupsDescription.
        :rtype: ContinuousBackupsStatus
        """
        return self._continuous_backups_status

    @continuous_backups_status.setter
    def continuous_backups_status(self, continuous_backups_status):
        """Sets the continuous_backups_status of this ContinuousBackupsDescription.


        :param continuous_backups_status: The continuous_backups_status of this ContinuousBackupsDescription.
        :type continuous_backups_status: ContinuousBackupsStatus
        """
        if continuous_backups_status is None:
            raise ValueError("Invalid value for `continuous_backups_status`, must not be `None`")

        self._continuous_backups_status = continuous_backups_status

    @property
    def point_in_time_recovery_description(self):
        """Gets the point_in_time_recovery_description of this ContinuousBackupsDescription.


        :return: The point_in_time_recovery_description of this ContinuousBackupsDescription.
        :rtype: ContinuousBackupsDescriptionPointInTimeRecoveryDescription
        """
        return self._point_in_time_recovery_description

    @point_in_time_recovery_description.setter
    def point_in_time_recovery_description(self, point_in_time_recovery_description):
        """Sets the point_in_time_recovery_description of this ContinuousBackupsDescription.


        :param point_in_time_recovery_description: The point_in_time_recovery_description of this ContinuousBackupsDescription.
        :type point_in_time_recovery_description: ContinuousBackupsDescriptionPointInTimeRecoveryDescription
        """

        self._point_in_time_recovery_description = point_in_time_recovery_description
