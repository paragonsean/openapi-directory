# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conditional_operator import ConditionalOperator
from openapi_server.models.return_consumed_capacity import ReturnConsumedCapacity
from openapi_server.models.return_item_collection_metrics import ReturnItemCollectionMetrics
from openapi_server.models.return_value import ReturnValue
from openapi_server.models.return_values_on_condition_check_failure import ReturnValuesOnConditionCheckFailure
from openapi_server import util


class UpdateItemInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, table_name: str=None, key: Dict=None, attribute_updates: Dict=None, expected: Dict=None, conditional_operator: ConditionalOperator=None, return_values: ReturnValue=None, return_consumed_capacity: ReturnConsumedCapacity=None, return_item_collection_metrics: ReturnItemCollectionMetrics=None, update_expression: str=None, condition_expression: str=None, expression_attribute_names: Dict=None, expression_attribute_values: Dict=None, return_values_on_condition_check_failure: ReturnValuesOnConditionCheckFailure=None):
        """UpdateItemInput - a model defined in OpenAPI

        :param table_name: The table_name of this UpdateItemInput.
        :param key: The key of this UpdateItemInput.
        :param attribute_updates: The attribute_updates of this UpdateItemInput.
        :param expected: The expected of this UpdateItemInput.
        :param conditional_operator: The conditional_operator of this UpdateItemInput.
        :param return_values: The return_values of this UpdateItemInput.
        :param return_consumed_capacity: The return_consumed_capacity of this UpdateItemInput.
        :param return_item_collection_metrics: The return_item_collection_metrics of this UpdateItemInput.
        :param update_expression: The update_expression of this UpdateItemInput.
        :param condition_expression: The condition_expression of this UpdateItemInput.
        :param expression_attribute_names: The expression_attribute_names of this UpdateItemInput.
        :param expression_attribute_values: The expression_attribute_values of this UpdateItemInput.
        :param return_values_on_condition_check_failure: The return_values_on_condition_check_failure of this UpdateItemInput.
        """
        self.openapi_types = {
            'table_name': str,
            'key': Dict,
            'attribute_updates': Dict,
            'expected': Dict,
            'conditional_operator': ConditionalOperator,
            'return_values': ReturnValue,
            'return_consumed_capacity': ReturnConsumedCapacity,
            'return_item_collection_metrics': ReturnItemCollectionMetrics,
            'update_expression': str,
            'condition_expression': str,
            'expression_attribute_names': Dict,
            'expression_attribute_values': Dict,
            'return_values_on_condition_check_failure': ReturnValuesOnConditionCheckFailure
        }

        self.attribute_map = {
            'table_name': 'TableName',
            'key': 'Key',
            'attribute_updates': 'AttributeUpdates',
            'expected': 'Expected',
            'conditional_operator': 'ConditionalOperator',
            'return_values': 'ReturnValues',
            'return_consumed_capacity': 'ReturnConsumedCapacity',
            'return_item_collection_metrics': 'ReturnItemCollectionMetrics',
            'update_expression': 'UpdateExpression',
            'condition_expression': 'ConditionExpression',
            'expression_attribute_names': 'ExpressionAttributeNames',
            'expression_attribute_values': 'ExpressionAttributeValues',
            'return_values_on_condition_check_failure': 'ReturnValuesOnConditionCheckFailure'
        }

        self._table_name = table_name
        self._key = key
        self._attribute_updates = attribute_updates
        self._expected = expected
        self._conditional_operator = conditional_operator
        self._return_values = return_values
        self._return_consumed_capacity = return_consumed_capacity
        self._return_item_collection_metrics = return_item_collection_metrics
        self._update_expression = update_expression
        self._condition_expression = condition_expression
        self._expression_attribute_names = expression_attribute_names
        self._expression_attribute_values = expression_attribute_values
        self._return_values_on_condition_check_failure = return_values_on_condition_check_failure

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateItemInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateItemInput of this UpdateItemInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def table_name(self):
        """Gets the table_name of this UpdateItemInput.


        :return: The table_name of this UpdateItemInput.
        :rtype: str
        """
        return self._table_name

    @table_name.setter
    def table_name(self, table_name):
        """Sets the table_name of this UpdateItemInput.


        :param table_name: The table_name of this UpdateItemInput.
        :type table_name: str
        """
        if table_name is None:
            raise ValueError("Invalid value for `table_name`, must not be `None`")

        self._table_name = table_name

    @property
    def key(self):
        """Gets the key of this UpdateItemInput.


        :return: The key of this UpdateItemInput.
        :rtype: Dict
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this UpdateItemInput.


        :param key: The key of this UpdateItemInput.
        :type key: Dict
        """
        if key is None:
            raise ValueError("Invalid value for `key`, must not be `None`")

        self._key = key

    @property
    def attribute_updates(self):
        """Gets the attribute_updates of this UpdateItemInput.


        :return: The attribute_updates of this UpdateItemInput.
        :rtype: Dict
        """
        return self._attribute_updates

    @attribute_updates.setter
    def attribute_updates(self, attribute_updates):
        """Sets the attribute_updates of this UpdateItemInput.


        :param attribute_updates: The attribute_updates of this UpdateItemInput.
        :type attribute_updates: Dict
        """

        self._attribute_updates = attribute_updates

    @property
    def expected(self):
        """Gets the expected of this UpdateItemInput.


        :return: The expected of this UpdateItemInput.
        :rtype: Dict
        """
        return self._expected

    @expected.setter
    def expected(self, expected):
        """Sets the expected of this UpdateItemInput.


        :param expected: The expected of this UpdateItemInput.
        :type expected: Dict
        """

        self._expected = expected

    @property
    def conditional_operator(self):
        """Gets the conditional_operator of this UpdateItemInput.


        :return: The conditional_operator of this UpdateItemInput.
        :rtype: ConditionalOperator
        """
        return self._conditional_operator

    @conditional_operator.setter
    def conditional_operator(self, conditional_operator):
        """Sets the conditional_operator of this UpdateItemInput.


        :param conditional_operator: The conditional_operator of this UpdateItemInput.
        :type conditional_operator: ConditionalOperator
        """

        self._conditional_operator = conditional_operator

    @property
    def return_values(self):
        """Gets the return_values of this UpdateItemInput.


        :return: The return_values of this UpdateItemInput.
        :rtype: ReturnValue
        """
        return self._return_values

    @return_values.setter
    def return_values(self, return_values):
        """Sets the return_values of this UpdateItemInput.


        :param return_values: The return_values of this UpdateItemInput.
        :type return_values: ReturnValue
        """

        self._return_values = return_values

    @property
    def return_consumed_capacity(self):
        """Gets the return_consumed_capacity of this UpdateItemInput.


        :return: The return_consumed_capacity of this UpdateItemInput.
        :rtype: ReturnConsumedCapacity
        """
        return self._return_consumed_capacity

    @return_consumed_capacity.setter
    def return_consumed_capacity(self, return_consumed_capacity):
        """Sets the return_consumed_capacity of this UpdateItemInput.


        :param return_consumed_capacity: The return_consumed_capacity of this UpdateItemInput.
        :type return_consumed_capacity: ReturnConsumedCapacity
        """

        self._return_consumed_capacity = return_consumed_capacity

    @property
    def return_item_collection_metrics(self):
        """Gets the return_item_collection_metrics of this UpdateItemInput.


        :return: The return_item_collection_metrics of this UpdateItemInput.
        :rtype: ReturnItemCollectionMetrics
        """
        return self._return_item_collection_metrics

    @return_item_collection_metrics.setter
    def return_item_collection_metrics(self, return_item_collection_metrics):
        """Sets the return_item_collection_metrics of this UpdateItemInput.


        :param return_item_collection_metrics: The return_item_collection_metrics of this UpdateItemInput.
        :type return_item_collection_metrics: ReturnItemCollectionMetrics
        """

        self._return_item_collection_metrics = return_item_collection_metrics

    @property
    def update_expression(self):
        """Gets the update_expression of this UpdateItemInput.


        :return: The update_expression of this UpdateItemInput.
        :rtype: str
        """
        return self._update_expression

    @update_expression.setter
    def update_expression(self, update_expression):
        """Sets the update_expression of this UpdateItemInput.


        :param update_expression: The update_expression of this UpdateItemInput.
        :type update_expression: str
        """

        self._update_expression = update_expression

    @property
    def condition_expression(self):
        """Gets the condition_expression of this UpdateItemInput.


        :return: The condition_expression of this UpdateItemInput.
        :rtype: str
        """
        return self._condition_expression

    @condition_expression.setter
    def condition_expression(self, condition_expression):
        """Sets the condition_expression of this UpdateItemInput.


        :param condition_expression: The condition_expression of this UpdateItemInput.
        :type condition_expression: str
        """

        self._condition_expression = condition_expression

    @property
    def expression_attribute_names(self):
        """Gets the expression_attribute_names of this UpdateItemInput.


        :return: The expression_attribute_names of this UpdateItemInput.
        :rtype: Dict
        """
        return self._expression_attribute_names

    @expression_attribute_names.setter
    def expression_attribute_names(self, expression_attribute_names):
        """Sets the expression_attribute_names of this UpdateItemInput.


        :param expression_attribute_names: The expression_attribute_names of this UpdateItemInput.
        :type expression_attribute_names: Dict
        """

        self._expression_attribute_names = expression_attribute_names

    @property
    def expression_attribute_values(self):
        """Gets the expression_attribute_values of this UpdateItemInput.


        :return: The expression_attribute_values of this UpdateItemInput.
        :rtype: Dict
        """
        return self._expression_attribute_values

    @expression_attribute_values.setter
    def expression_attribute_values(self, expression_attribute_values):
        """Sets the expression_attribute_values of this UpdateItemInput.


        :param expression_attribute_values: The expression_attribute_values of this UpdateItemInput.
        :type expression_attribute_values: Dict
        """

        self._expression_attribute_values = expression_attribute_values

    @property
    def return_values_on_condition_check_failure(self):
        """Gets the return_values_on_condition_check_failure of this UpdateItemInput.


        :return: The return_values_on_condition_check_failure of this UpdateItemInput.
        :rtype: ReturnValuesOnConditionCheckFailure
        """
        return self._return_values_on_condition_check_failure

    @return_values_on_condition_check_failure.setter
    def return_values_on_condition_check_failure(self, return_values_on_condition_check_failure):
        """Sets the return_values_on_condition_check_failure of this UpdateItemInput.


        :param return_values_on_condition_check_failure: The return_values_on_condition_check_failure of this UpdateItemInput.
        :type return_values_on_condition_check_failure: ReturnValuesOnConditionCheckFailure
        """

        self._return_values_on_condition_check_failure = return_values_on_condition_check_failure
