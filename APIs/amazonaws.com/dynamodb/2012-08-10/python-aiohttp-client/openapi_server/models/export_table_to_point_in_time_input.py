# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.export_format import ExportFormat
from openapi_server.models.s3_sse_algorithm import S3SseAlgorithm
from openapi_server import util


class ExportTableToPointInTimeInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, table_arn: str=None, export_time: datetime=None, client_token: str=None, s3_bucket: str=None, s3_bucket_owner: str=None, s3_prefix: str=None, s3_sse_algorithm: S3SseAlgorithm=None, s3_sse_kms_key_id: str=None, export_format: ExportFormat=None):
        """ExportTableToPointInTimeInput - a model defined in OpenAPI

        :param table_arn: The table_arn of this ExportTableToPointInTimeInput.
        :param export_time: The export_time of this ExportTableToPointInTimeInput.
        :param client_token: The client_token of this ExportTableToPointInTimeInput.
        :param s3_bucket: The s3_bucket of this ExportTableToPointInTimeInput.
        :param s3_bucket_owner: The s3_bucket_owner of this ExportTableToPointInTimeInput.
        :param s3_prefix: The s3_prefix of this ExportTableToPointInTimeInput.
        :param s3_sse_algorithm: The s3_sse_algorithm of this ExportTableToPointInTimeInput.
        :param s3_sse_kms_key_id: The s3_sse_kms_key_id of this ExportTableToPointInTimeInput.
        :param export_format: The export_format of this ExportTableToPointInTimeInput.
        """
        self.openapi_types = {
            'table_arn': str,
            'export_time': datetime,
            'client_token': str,
            's3_bucket': str,
            's3_bucket_owner': str,
            's3_prefix': str,
            's3_sse_algorithm': S3SseAlgorithm,
            's3_sse_kms_key_id': str,
            'export_format': ExportFormat
        }

        self.attribute_map = {
            'table_arn': 'TableArn',
            'export_time': 'ExportTime',
            'client_token': 'ClientToken',
            's3_bucket': 'S3Bucket',
            's3_bucket_owner': 'S3BucketOwner',
            's3_prefix': 'S3Prefix',
            's3_sse_algorithm': 'S3SseAlgorithm',
            's3_sse_kms_key_id': 'S3SseKmsKeyId',
            'export_format': 'ExportFormat'
        }

        self._table_arn = table_arn
        self._export_time = export_time
        self._client_token = client_token
        self._s3_bucket = s3_bucket
        self._s3_bucket_owner = s3_bucket_owner
        self._s3_prefix = s3_prefix
        self._s3_sse_algorithm = s3_sse_algorithm
        self._s3_sse_kms_key_id = s3_sse_kms_key_id
        self._export_format = export_format

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportTableToPointInTimeInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportTableToPointInTimeInput of this ExportTableToPointInTimeInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def table_arn(self):
        """Gets the table_arn of this ExportTableToPointInTimeInput.


        :return: The table_arn of this ExportTableToPointInTimeInput.
        :rtype: str
        """
        return self._table_arn

    @table_arn.setter
    def table_arn(self, table_arn):
        """Sets the table_arn of this ExportTableToPointInTimeInput.


        :param table_arn: The table_arn of this ExportTableToPointInTimeInput.
        :type table_arn: str
        """
        if table_arn is None:
            raise ValueError("Invalid value for `table_arn`, must not be `None`")

        self._table_arn = table_arn

    @property
    def export_time(self):
        """Gets the export_time of this ExportTableToPointInTimeInput.


        :return: The export_time of this ExportTableToPointInTimeInput.
        :rtype: datetime
        """
        return self._export_time

    @export_time.setter
    def export_time(self, export_time):
        """Sets the export_time of this ExportTableToPointInTimeInput.


        :param export_time: The export_time of this ExportTableToPointInTimeInput.
        :type export_time: datetime
        """

        self._export_time = export_time

    @property
    def client_token(self):
        """Gets the client_token of this ExportTableToPointInTimeInput.


        :return: The client_token of this ExportTableToPointInTimeInput.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this ExportTableToPointInTimeInput.


        :param client_token: The client_token of this ExportTableToPointInTimeInput.
        :type client_token: str
        """

        self._client_token = client_token

    @property
    def s3_bucket(self):
        """Gets the s3_bucket of this ExportTableToPointInTimeInput.


        :return: The s3_bucket of this ExportTableToPointInTimeInput.
        :rtype: str
        """
        return self._s3_bucket

    @s3_bucket.setter
    def s3_bucket(self, s3_bucket):
        """Sets the s3_bucket of this ExportTableToPointInTimeInput.


        :param s3_bucket: The s3_bucket of this ExportTableToPointInTimeInput.
        :type s3_bucket: str
        """
        if s3_bucket is None:
            raise ValueError("Invalid value for `s3_bucket`, must not be `None`")

        self._s3_bucket = s3_bucket

    @property
    def s3_bucket_owner(self):
        """Gets the s3_bucket_owner of this ExportTableToPointInTimeInput.


        :return: The s3_bucket_owner of this ExportTableToPointInTimeInput.
        :rtype: str
        """
        return self._s3_bucket_owner

    @s3_bucket_owner.setter
    def s3_bucket_owner(self, s3_bucket_owner):
        """Sets the s3_bucket_owner of this ExportTableToPointInTimeInput.


        :param s3_bucket_owner: The s3_bucket_owner of this ExportTableToPointInTimeInput.
        :type s3_bucket_owner: str
        """

        self._s3_bucket_owner = s3_bucket_owner

    @property
    def s3_prefix(self):
        """Gets the s3_prefix of this ExportTableToPointInTimeInput.


        :return: The s3_prefix of this ExportTableToPointInTimeInput.
        :rtype: str
        """
        return self._s3_prefix

    @s3_prefix.setter
    def s3_prefix(self, s3_prefix):
        """Sets the s3_prefix of this ExportTableToPointInTimeInput.


        :param s3_prefix: The s3_prefix of this ExportTableToPointInTimeInput.
        :type s3_prefix: str
        """

        self._s3_prefix = s3_prefix

    @property
    def s3_sse_algorithm(self):
        """Gets the s3_sse_algorithm of this ExportTableToPointInTimeInput.


        :return: The s3_sse_algorithm of this ExportTableToPointInTimeInput.
        :rtype: S3SseAlgorithm
        """
        return self._s3_sse_algorithm

    @s3_sse_algorithm.setter
    def s3_sse_algorithm(self, s3_sse_algorithm):
        """Sets the s3_sse_algorithm of this ExportTableToPointInTimeInput.


        :param s3_sse_algorithm: The s3_sse_algorithm of this ExportTableToPointInTimeInput.
        :type s3_sse_algorithm: S3SseAlgorithm
        """

        self._s3_sse_algorithm = s3_sse_algorithm

    @property
    def s3_sse_kms_key_id(self):
        """Gets the s3_sse_kms_key_id of this ExportTableToPointInTimeInput.


        :return: The s3_sse_kms_key_id of this ExportTableToPointInTimeInput.
        :rtype: str
        """
        return self._s3_sse_kms_key_id

    @s3_sse_kms_key_id.setter
    def s3_sse_kms_key_id(self, s3_sse_kms_key_id):
        """Sets the s3_sse_kms_key_id of this ExportTableToPointInTimeInput.


        :param s3_sse_kms_key_id: The s3_sse_kms_key_id of this ExportTableToPointInTimeInput.
        :type s3_sse_kms_key_id: str
        """

        self._s3_sse_kms_key_id = s3_sse_kms_key_id

    @property
    def export_format(self):
        """Gets the export_format of this ExportTableToPointInTimeInput.


        :return: The export_format of this ExportTableToPointInTimeInput.
        :rtype: ExportFormat
        """
        return self._export_format

    @export_format.setter
    def export_format(self, export_format):
        """Sets the export_format of this ExportTableToPointInTimeInput.


        :param export_format: The export_format of this ExportTableToPointInTimeInput.
        :type export_format: ExportFormat
        """

        self._export_format = export_format
