# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_table_output_table import DescribeTableOutputTable
from openapi_server import util


class DescribeTableOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, table: DescribeTableOutputTable=None):
        """DescribeTableOutput - a model defined in OpenAPI

        :param table: The table of this DescribeTableOutput.
        """
        self.openapi_types = {
            'table': DescribeTableOutputTable
        }

        self.attribute_map = {
            'table': 'Table'
        }

        self._table = table

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeTableOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeTableOutput of this DescribeTableOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def table(self):
        """Gets the table of this DescribeTableOutput.


        :return: The table of this DescribeTableOutput.
        :rtype: DescribeTableOutputTable
        """
        return self._table

    @table.setter
    def table(self, table):
        """Sets the table of this DescribeTableOutput.


        :param table: The table of this DescribeTableOutput.
        :type table: DescribeTableOutputTable
        """

        self._table = table
