# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_export_output_export_description import DescribeExportOutputExportDescription
from openapi_server import util


class DescribeExportOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, export_description: DescribeExportOutputExportDescription=None):
        """DescribeExportOutput - a model defined in OpenAPI

        :param export_description: The export_description of this DescribeExportOutput.
        """
        self.openapi_types = {
            'export_description': DescribeExportOutputExportDescription
        }

        self.attribute_map = {
            'export_description': 'ExportDescription'
        }

        self._export_description = export_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeExportOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeExportOutput of this DescribeExportOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def export_description(self):
        """Gets the export_description of this DescribeExportOutput.


        :return: The export_description of this DescribeExportOutput.
        :rtype: DescribeExportOutputExportDescription
        """
        return self._export_description

    @export_description.setter
    def export_description(self, export_description):
        """Sets the export_description of this DescribeExportOutput.


        :param export_description: The export_description of this DescribeExportOutput.
        :type export_description: DescribeExportOutputExportDescription
        """

        self._export_description = export_description
