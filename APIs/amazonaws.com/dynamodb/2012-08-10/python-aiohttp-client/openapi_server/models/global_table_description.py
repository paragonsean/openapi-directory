# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.global_table_status import GlobalTableStatus
from openapi_server import util


class GlobalTableDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, replication_group: List=None, global_table_arn: str=None, creation_date_time: datetime=None, global_table_status: GlobalTableStatus=None, global_table_name: str=None):
        """GlobalTableDescription - a model defined in OpenAPI

        :param replication_group: The replication_group of this GlobalTableDescription.
        :param global_table_arn: The global_table_arn of this GlobalTableDescription.
        :param creation_date_time: The creation_date_time of this GlobalTableDescription.
        :param global_table_status: The global_table_status of this GlobalTableDescription.
        :param global_table_name: The global_table_name of this GlobalTableDescription.
        """
        self.openapi_types = {
            'replication_group': List,
            'global_table_arn': str,
            'creation_date_time': datetime,
            'global_table_status': GlobalTableStatus,
            'global_table_name': str
        }

        self.attribute_map = {
            'replication_group': 'ReplicationGroup',
            'global_table_arn': 'GlobalTableArn',
            'creation_date_time': 'CreationDateTime',
            'global_table_status': 'GlobalTableStatus',
            'global_table_name': 'GlobalTableName'
        }

        self._replication_group = replication_group
        self._global_table_arn = global_table_arn
        self._creation_date_time = creation_date_time
        self._global_table_status = global_table_status
        self._global_table_name = global_table_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GlobalTableDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GlobalTableDescription of this GlobalTableDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def replication_group(self):
        """Gets the replication_group of this GlobalTableDescription.


        :return: The replication_group of this GlobalTableDescription.
        :rtype: List
        """
        return self._replication_group

    @replication_group.setter
    def replication_group(self, replication_group):
        """Sets the replication_group of this GlobalTableDescription.


        :param replication_group: The replication_group of this GlobalTableDescription.
        :type replication_group: List
        """

        self._replication_group = replication_group

    @property
    def global_table_arn(self):
        """Gets the global_table_arn of this GlobalTableDescription.


        :return: The global_table_arn of this GlobalTableDescription.
        :rtype: str
        """
        return self._global_table_arn

    @global_table_arn.setter
    def global_table_arn(self, global_table_arn):
        """Sets the global_table_arn of this GlobalTableDescription.


        :param global_table_arn: The global_table_arn of this GlobalTableDescription.
        :type global_table_arn: str
        """

        self._global_table_arn = global_table_arn

    @property
    def creation_date_time(self):
        """Gets the creation_date_time of this GlobalTableDescription.


        :return: The creation_date_time of this GlobalTableDescription.
        :rtype: datetime
        """
        return self._creation_date_time

    @creation_date_time.setter
    def creation_date_time(self, creation_date_time):
        """Sets the creation_date_time of this GlobalTableDescription.


        :param creation_date_time: The creation_date_time of this GlobalTableDescription.
        :type creation_date_time: datetime
        """

        self._creation_date_time = creation_date_time

    @property
    def global_table_status(self):
        """Gets the global_table_status of this GlobalTableDescription.


        :return: The global_table_status of this GlobalTableDescription.
        :rtype: GlobalTableStatus
        """
        return self._global_table_status

    @global_table_status.setter
    def global_table_status(self, global_table_status):
        """Sets the global_table_status of this GlobalTableDescription.


        :param global_table_status: The global_table_status of this GlobalTableDescription.
        :type global_table_status: GlobalTableStatus
        """

        self._global_table_status = global_table_status

    @property
    def global_table_name(self):
        """Gets the global_table_name of this GlobalTableDescription.


        :return: The global_table_name of this GlobalTableDescription.
        :rtype: str
        """
        return self._global_table_name

    @global_table_name.setter
    def global_table_name(self, global_table_name):
        """Sets the global_table_name of this GlobalTableDescription.


        :param global_table_name: The global_table_name of this GlobalTableDescription.
        :type global_table_name: str
        """

        self._global_table_name = global_table_name
