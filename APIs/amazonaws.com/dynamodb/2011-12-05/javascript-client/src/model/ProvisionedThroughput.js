/**
 * Amazon DynamoDB
 * <p>Amazon DynamoDB is a fast, highly scalable, highly available, cost-effective non-relational database service.</p> <p>Amazon DynamoDB removes traditional scalability limitations on data storage while maintaining low latency and predictable performance.</p>
 *
 * The version of the OpenAPI document: 2011-12-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProvisionedThroughput model module.
 * @module model/ProvisionedThroughput
 * @version 2011-12-05
 */
class ProvisionedThroughput {
    /**
     * Constructs a new <code>ProvisionedThroughput</code>.
     * Provisioned throughput reserves the required read and write resources for your table in terms of &lt;code&gt;ReadCapacityUnits&lt;/code&gt; and &lt;code&gt;WriteCapacityUnits&lt;/code&gt;. Values for provisioned throughput depend upon your expected read/write rates, item size, and consistency. Provide the expected number of read and write operations, assuming an item size of 1k and strictly consistent reads. For 2k item size, double the value. For 3k, triple the value, etc. Eventually-consistent reads consume half the resources of strictly consistent reads.
     * @alias module:model/ProvisionedThroughput
     * @param readCapacityUnits {Number} 
     * @param writeCapacityUnits {Number} 
     */
    constructor(readCapacityUnits, writeCapacityUnits) { 
        
        ProvisionedThroughput.initialize(this, readCapacityUnits, writeCapacityUnits);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, readCapacityUnits, writeCapacityUnits) { 
        obj['ReadCapacityUnits'] = readCapacityUnits;
        obj['WriteCapacityUnits'] = writeCapacityUnits;
    }

    /**
     * Constructs a <code>ProvisionedThroughput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProvisionedThroughput} obj Optional instance to populate.
     * @return {module:model/ProvisionedThroughput} The populated <code>ProvisionedThroughput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProvisionedThroughput();

            if (data.hasOwnProperty('ReadCapacityUnits')) {
                obj['ReadCapacityUnits'] = ApiClient.convertToType(data['ReadCapacityUnits'], 'Number');
            }
            if (data.hasOwnProperty('WriteCapacityUnits')) {
                obj['WriteCapacityUnits'] = ApiClient.convertToType(data['WriteCapacityUnits'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProvisionedThroughput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProvisionedThroughput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProvisionedThroughput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ReadCapacityUnits`
        if (data['ReadCapacityUnits']) { // data not null
          Number.validateJSON(data['ReadCapacityUnits']);
        }
        // validate the optional field `WriteCapacityUnits`
        if (data['WriteCapacityUnits']) { // data not null
          Number.validateJSON(data['WriteCapacityUnits']);
        }

        return true;
    }


}

ProvisionedThroughput.RequiredProperties = ["ReadCapacityUnits", "WriteCapacityUnits"];

/**
 * @member {Number} ReadCapacityUnits
 */
ProvisionedThroughput.prototype['ReadCapacityUnits'] = undefined;

/**
 * @member {Number} WriteCapacityUnits
 */
ProvisionedThroughput.prototype['WriteCapacityUnits'] = undefined;






export default ProvisionedThroughput;

