/**
 * Amazon DynamoDB
 * <p>Amazon DynamoDB is a fast, highly scalable, highly available, cost-effective non-relational database service.</p> <p>Amazon DynamoDB removes traditional scalability limitations on data storage while maintaining low latency and predictable performance.</p>
 *
 * The version of the OpenAPI document: 2011-12-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import KeySchemaElement from './KeySchemaElement';
import ScalarAttributeType from './ScalarAttributeType';

/**
 * The KeySchemaHashKeyElement model module.
 * @module model/KeySchemaHashKeyElement
 * @version 2011-12-05
 */
class KeySchemaHashKeyElement {
    /**
     * Constructs a new <code>KeySchemaHashKeyElement</code>.
     * @alias module:model/KeySchemaHashKeyElement
     * @implements module:model/KeySchemaElement
     * @param attributeName {String} 
     * @param attributeType {module:model/ScalarAttributeType} 
     */
    constructor(attributeName, attributeType) { 
        KeySchemaElement.initialize(this, attributeName, attributeType);
        KeySchemaHashKeyElement.initialize(this, attributeName, attributeType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, attributeName, attributeType) { 
        obj['AttributeName'] = attributeName;
        obj['AttributeType'] = attributeType;
    }

    /**
     * Constructs a <code>KeySchemaHashKeyElement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KeySchemaHashKeyElement} obj Optional instance to populate.
     * @return {module:model/KeySchemaHashKeyElement} The populated <code>KeySchemaHashKeyElement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KeySchemaHashKeyElement();
            KeySchemaElement.constructFromObject(data, obj);

            if (data.hasOwnProperty('AttributeName')) {
                obj['AttributeName'] = ApiClient.convertToType(data['AttributeName'], 'String');
            }
            if (data.hasOwnProperty('AttributeType')) {
                obj['AttributeType'] = ApiClient.convertToType(data['AttributeType'], ScalarAttributeType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KeySchemaHashKeyElement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KeySchemaHashKeyElement</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of KeySchemaHashKeyElement.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `AttributeName`
        if (data['AttributeName']) { // data not null
          String.validateJSON(data['AttributeName']);
        }
        // validate the optional field `AttributeType`
        if (data['AttributeType']) { // data not null
          ScalarAttributeType.validateJSON(data['AttributeType']);
        }

        return true;
    }


}

KeySchemaHashKeyElement.RequiredProperties = ["AttributeName", "AttributeType"];

/**
 * @member {String} AttributeName
 */
KeySchemaHashKeyElement.prototype['AttributeName'] = undefined;

/**
 * @member {module:model/ScalarAttributeType} AttributeType
 */
KeySchemaHashKeyElement.prototype['AttributeType'] = undefined;


// Implement KeySchemaElement interface:
/**
 * @member {String} AttributeName
 */
KeySchemaElement.prototype['AttributeName'] = undefined;
/**
 * @member {module:model/ScalarAttributeType} AttributeType
 */
KeySchemaElement.prototype['AttributeType'] = undefined;




export default KeySchemaHashKeyElement;

