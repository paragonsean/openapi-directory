/**
 * Amazon DynamoDB
 * <p>Amazon DynamoDB is a fast, highly scalable, highly available, cost-effective non-relational database service.</p> <p>Amazon DynamoDB removes traditional scalability limitations on data storage while maintaining low latency and predictable performance.</p>
 *
 * The version of the OpenAPI document: 2011-12-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import KeySchema from './KeySchema';
import ProvisionedThroughputDescription from './ProvisionedThroughputDescription';
import TableStatus from './TableStatus';

/**
 * The TableDescription model module.
 * @module model/TableDescription
 * @version 2011-12-05
 */
class TableDescription {
    /**
     * Constructs a new <code>TableDescription</code>.
     * @alias module:model/TableDescription
     */
    constructor() { 
        
        TableDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TableDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TableDescription} obj Optional instance to populate.
     * @return {module:model/TableDescription} The populated <code>TableDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TableDescription();

            if (data.hasOwnProperty('TableName')) {
                obj['TableName'] = ApiClient.convertToType(data['TableName'], 'String');
            }
            if (data.hasOwnProperty('KeySchema')) {
                obj['KeySchema'] = KeySchema.constructFromObject(data['KeySchema']);
            }
            if (data.hasOwnProperty('TableStatus')) {
                obj['TableStatus'] = TableStatus.constructFromObject(data['TableStatus']);
            }
            if (data.hasOwnProperty('CreationDateTime')) {
                obj['CreationDateTime'] = ApiClient.convertToType(data['CreationDateTime'], 'Date');
            }
            if (data.hasOwnProperty('ProvisionedThroughput')) {
                obj['ProvisionedThroughput'] = ProvisionedThroughputDescription.constructFromObject(data['ProvisionedThroughput']);
            }
            if (data.hasOwnProperty('TableSizeBytes')) {
                obj['TableSizeBytes'] = ApiClient.convertToType(data['TableSizeBytes'], 'Number');
            }
            if (data.hasOwnProperty('ItemCount')) {
                obj['ItemCount'] = ApiClient.convertToType(data['ItemCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TableDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TableDescription</code>.
     */
    static validateJSON(data) {
        // validate the optional field `TableName`
        if (data['TableName']) { // data not null
          String.validateJSON(data['TableName']);
        }
        // validate the optional field `KeySchema`
        if (data['KeySchema']) { // data not null
          KeySchema.validateJSON(data['KeySchema']);
        }
        // validate the optional field `ProvisionedThroughput`
        if (data['ProvisionedThroughput']) { // data not null
          ProvisionedThroughputDescription.validateJSON(data['ProvisionedThroughput']);
        }

        return true;
    }


}



/**
 * @member {String} TableName
 */
TableDescription.prototype['TableName'] = undefined;

/**
 * @member {module:model/KeySchema} KeySchema
 */
TableDescription.prototype['KeySchema'] = undefined;

/**
 * @member {module:model/TableStatus} TableStatus
 */
TableDescription.prototype['TableStatus'] = undefined;

/**
 * @member {Date} CreationDateTime
 */
TableDescription.prototype['CreationDateTime'] = undefined;

/**
 * @member {module:model/ProvisionedThroughputDescription} ProvisionedThroughput
 */
TableDescription.prototype['ProvisionedThroughput'] = undefined;

/**
 * @member {Number} TableSizeBytes
 */
TableDescription.prototype['TableSizeBytes'] = undefined;

/**
 * @member {Number} ItemCount
 */
TableDescription.prototype['ItemCount'] = undefined;






export default TableDescription;

