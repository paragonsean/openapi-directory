/**
 * Amazon DynamoDB
 * <p>Amazon DynamoDB is a fast, highly scalable, highly available, cost-effective non-relational database service.</p> <p>Amazon DynamoDB removes traditional scalability limitations on data storage while maintaining low latency and predictable performance.</p>
 *
 * The version of the OpenAPI document: 2011-12-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExpectedAttributeValueValue from './ExpectedAttributeValueValue';

/**
 * The ExpectedAttributeValue model module.
 * @module model/ExpectedAttributeValue
 * @version 2011-12-05
 */
class ExpectedAttributeValue {
    /**
     * Constructs a new <code>ExpectedAttributeValue</code>.
     * Allows you to provide an attribute name, and whether or not Amazon DynamoDB should check to see if the attribute value already exists; or if the attribute value exists and has a particular value before changing it.
     * @alias module:model/ExpectedAttributeValue
     */
    constructor() { 
        
        ExpectedAttributeValue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExpectedAttributeValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExpectedAttributeValue} obj Optional instance to populate.
     * @return {module:model/ExpectedAttributeValue} The populated <code>ExpectedAttributeValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExpectedAttributeValue();

            if (data.hasOwnProperty('Value')) {
                obj['Value'] = ExpectedAttributeValueValue.constructFromObject(data['Value']);
            }
            if (data.hasOwnProperty('Exists')) {
                obj['Exists'] = ApiClient.convertToType(data['Exists'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExpectedAttributeValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExpectedAttributeValue</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Value`
        if (data['Value']) { // data not null
          ExpectedAttributeValueValue.validateJSON(data['Value']);
        }
        // validate the optional field `Exists`
        if (data['Exists']) { // data not null
          Boolean.validateJSON(data['Exists']);
        }

        return true;
    }


}



/**
 * @member {module:model/ExpectedAttributeValueValue} Value
 */
ExpectedAttributeValue.prototype['Value'] = undefined;

/**
 * @member {Boolean} Exists
 */
ExpectedAttributeValue.prototype['Exists'] = undefined;






export default ExpectedAttributeValue;

