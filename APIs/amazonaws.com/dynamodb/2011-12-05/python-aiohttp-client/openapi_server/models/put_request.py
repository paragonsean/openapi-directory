# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, item: Dict=None):
        """PutRequest - a model defined in OpenAPI

        :param item: The item of this PutRequest.
        """
        self.openapi_types = {
            'item': Dict
        }

        self.attribute_map = {
            'item': 'Item'
        }

        self._item = item

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutRequest of this PutRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def item(self):
        """Gets the item of this PutRequest.


        :return: The item of this PutRequest.
        :rtype: Dict
        """
        return self._item

    @item.setter
    def item(self, item):
        """Sets the item of this PutRequest.


        :param item: The item of this PutRequest.
        :type item: Dict
        """
        if item is None:
            raise ValueError("Invalid value for `item`, must not be `None`")

        self._item = item
