# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.key_hash_key_element import KeyHashKeyElement
from openapi_server.models.key_range_key_element import KeyRangeKeyElement
from openapi_server import util


class Key(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hash_key_element: KeyHashKeyElement=None, range_key_element: KeyRangeKeyElement=None):
        """Key - a model defined in OpenAPI

        :param hash_key_element: The hash_key_element of this Key.
        :param range_key_element: The range_key_element of this Key.
        """
        self.openapi_types = {
            'hash_key_element': KeyHashKeyElement,
            'range_key_element': KeyRangeKeyElement
        }

        self.attribute_map = {
            'hash_key_element': 'HashKeyElement',
            'range_key_element': 'RangeKeyElement'
        }

        self._hash_key_element = hash_key_element
        self._range_key_element = range_key_element

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Key':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Key of this Key.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hash_key_element(self):
        """Gets the hash_key_element of this Key.


        :return: The hash_key_element of this Key.
        :rtype: KeyHashKeyElement
        """
        return self._hash_key_element

    @hash_key_element.setter
    def hash_key_element(self, hash_key_element):
        """Sets the hash_key_element of this Key.


        :param hash_key_element: The hash_key_element of this Key.
        :type hash_key_element: KeyHashKeyElement
        """
        if hash_key_element is None:
            raise ValueError("Invalid value for `hash_key_element`, must not be `None`")

        self._hash_key_element = hash_key_element

    @property
    def range_key_element(self):
        """Gets the range_key_element of this Key.


        :return: The range_key_element of this Key.
        :rtype: KeyRangeKeyElement
        """
        return self._range_key_element

    @range_key_element.setter
    def range_key_element(self, range_key_element):
        """Sets the range_key_element of this Key.


        :param range_key_element: The range_key_element of this Key.
        :type range_key_element: KeyRangeKeyElement
        """

        self._range_key_element = range_key_element
