# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.scalar_attribute_type import ScalarAttributeType
from openapi_server import util


class KeySchemaHashKeyElement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribute_name: str=None, attribute_type: ScalarAttributeType=None):
        """KeySchemaHashKeyElement - a model defined in OpenAPI

        :param attribute_name: The attribute_name of this KeySchemaHashKeyElement.
        :param attribute_type: The attribute_type of this KeySchemaHashKeyElement.
        """
        self.openapi_types = {
            'attribute_name': str,
            'attribute_type': ScalarAttributeType
        }

        self.attribute_map = {
            'attribute_name': 'AttributeName',
            'attribute_type': 'AttributeType'
        }

        self._attribute_name = attribute_name
        self._attribute_type = attribute_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KeySchemaHashKeyElement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KeySchema_HashKeyElement of this KeySchemaHashKeyElement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribute_name(self):
        """Gets the attribute_name of this KeySchemaHashKeyElement.


        :return: The attribute_name of this KeySchemaHashKeyElement.
        :rtype: str
        """
        return self._attribute_name

    @attribute_name.setter
    def attribute_name(self, attribute_name):
        """Sets the attribute_name of this KeySchemaHashKeyElement.


        :param attribute_name: The attribute_name of this KeySchemaHashKeyElement.
        :type attribute_name: str
        """
        if attribute_name is None:
            raise ValueError("Invalid value for `attribute_name`, must not be `None`")

        self._attribute_name = attribute_name

    @property
    def attribute_type(self):
        """Gets the attribute_type of this KeySchemaHashKeyElement.


        :return: The attribute_type of this KeySchemaHashKeyElement.
        :rtype: ScalarAttributeType
        """
        return self._attribute_type

    @attribute_type.setter
    def attribute_type(self, attribute_type):
        """Sets the attribute_type of this KeySchemaHashKeyElement.


        :param attribute_type: The attribute_type of this KeySchemaHashKeyElement.
        :type attribute_type: ScalarAttributeType
        """
        if attribute_type is None:
            raise ValueError("Invalid value for `attribute_type`, must not be `None`")

        self._attribute_type = attribute_type
