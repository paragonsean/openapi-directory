# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetItemOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, item: Dict=None, consumed_capacity_units: float=None):
        """GetItemOutput - a model defined in OpenAPI

        :param item: The item of this GetItemOutput.
        :param consumed_capacity_units: The consumed_capacity_units of this GetItemOutput.
        """
        self.openapi_types = {
            'item': Dict,
            'consumed_capacity_units': float
        }

        self.attribute_map = {
            'item': 'Item',
            'consumed_capacity_units': 'ConsumedCapacityUnits'
        }

        self._item = item
        self._consumed_capacity_units = consumed_capacity_units

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetItemOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetItemOutput of this GetItemOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def item(self):
        """Gets the item of this GetItemOutput.


        :return: The item of this GetItemOutput.
        :rtype: Dict
        """
        return self._item

    @item.setter
    def item(self, item):
        """Sets the item of this GetItemOutput.


        :param item: The item of this GetItemOutput.
        :type item: Dict
        """

        self._item = item

    @property
    def consumed_capacity_units(self):
        """Gets the consumed_capacity_units of this GetItemOutput.

        The number of Capacity Units of the provisioned throughput of the table consumed during the operation. <code>GetItem</code>, <code>BatchGetItem</code>, <code>BatchWriteItem</code>, <code>Query</code>, and <code>Scan</code> operations consume <code>ReadCapacityUnits</code>, while <code>PutItem</code>, <code>UpdateItem</code>, and <code>DeleteItem</code> operations consume <code>WriteCapacityUnits</code>.

        :return: The consumed_capacity_units of this GetItemOutput.
        :rtype: float
        """
        return self._consumed_capacity_units

    @consumed_capacity_units.setter
    def consumed_capacity_units(self, consumed_capacity_units):
        """Sets the consumed_capacity_units of this GetItemOutput.

        The number of Capacity Units of the provisioned throughput of the table consumed during the operation. <code>GetItem</code>, <code>BatchGetItem</code>, <code>BatchWriteItem</code>, <code>Query</code>, and <code>Scan</code> operations consume <code>ReadCapacityUnits</code>, while <code>PutItem</code>, <code>UpdateItem</code>, and <code>DeleteItem</code> operations consume <code>WriteCapacityUnits</code>.

        :param consumed_capacity_units: The consumed_capacity_units of this GetItemOutput.
        :type consumed_capacity_units: float
        """

        self._consumed_capacity_units = consumed_capacity_units
