/**
 * Amazon DynamoDB
 * <p>Amazon DynamoDB is a fast, highly scalable, highly available, cost-effective non-relational database service.</p> <p>Amazon DynamoDB removes traditional scalability limitations on data storage while maintaining low latency and predictable performance.</p>
 *
 * The version of the OpenAPI document: 2011-12-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScalarAttributeType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScalarAttributeType::OAIScalarAttributeType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScalarAttributeType::OAIScalarAttributeType() {
    this->initializeModel();
}

OAIScalarAttributeType::~OAIScalarAttributeType() {}

void OAIScalarAttributeType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIScalarAttributeType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIScalarAttributeType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("S", Qt::CaseInsensitive) == 0) {
        m_value = eOAIScalarAttributeType::S;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("N", Qt::CaseInsensitive) == 0) {
        m_value = eOAIScalarAttributeType::N;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("B", Qt::CaseInsensitive) == 0) {
        m_value = eOAIScalarAttributeType::B;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIScalarAttributeType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIScalarAttributeType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIScalarAttributeType::S:
            val = "S";
            break;
        case eOAIScalarAttributeType::N:
            val = "N";
            break;
        case eOAIScalarAttributeType::B:
            val = "B";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIScalarAttributeType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIScalarAttributeType::eOAIScalarAttributeType OAIScalarAttributeType::getValue() const {
    return m_value;
}

void OAIScalarAttributeType::setValue(const OAIScalarAttributeType::eOAIScalarAttributeType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIScalarAttributeType::isSet() const {
    
    return m_value_isSet;
}

bool OAIScalarAttributeType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
