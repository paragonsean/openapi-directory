/**
 * Amazon DynamoDB
 * <p>Amazon DynamoDB is a fast, highly scalable, highly available, cost-effective non-relational database service.</p> <p>Amazon DynamoDB removes traditional scalability limitations on data storage while maintaining low latency and predictable performance.</p>
 *
 * The version of the OpenAPI document: 2011-12-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComparisonOperator.h
 *
 * &lt;p&gt;A comparison operator is an enumeration of several operations:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;EQ&lt;/code&gt; for &lt;em&gt;equal&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;NE&lt;/code&gt; for &lt;em&gt;not equal&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;IN&lt;/code&gt; checks for exact matches.&lt;/li&gt; &lt;li&gt;&lt;code&gt;LE&lt;/code&gt; for &lt;em&gt;less than or equal to&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;LT&lt;/code&gt; for &lt;em&gt;less than&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;GE&lt;/code&gt; for &lt;em&gt;greater than or equal to&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;GT&lt;/code&gt; for &lt;em&gt;greater than&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;BETWEEN&lt;/code&gt; for &lt;em&gt;between&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;NOT_NULL&lt;/code&gt; for &lt;em&gt;exists&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;NULL&lt;/code&gt; for &lt;em&gt;not exists&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;CONTAINS&lt;/code&gt; for substring or value in a set.&lt;/li&gt; &lt;li&gt;&lt;code&gt;NOT_CONTAINS&lt;/code&gt; for absence of a substring or absence of a value in a set.&lt;/li&gt; &lt;li&gt;&lt;code&gt;BEGINS_WITH&lt;/code&gt; for a substring prefix.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Scan operations support all available comparison operators.&lt;/p&gt; &lt;p&gt;Query operations support a subset of the available comparison operators: EQ, LE, LT, GE, GT, BETWEEN, and BEGINS_WITH.&lt;/p&gt;
 */

#ifndef OAIComparisonOperator_H
#define OAIComparisonOperator_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIComparisonOperator : public OAIEnum {
public:
    OAIComparisonOperator();
    OAIComparisonOperator(QString json);
    ~OAIComparisonOperator() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIComparisonOperator {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        EQ, 
        NE, 
        IN, 
        LE, 
        LT, 
        GE, 
        GT, 
        BETWEEN, 
        NOT_NULL, 
        r_NULL, 
        CONTAINS, 
        NOT_CONTAINS, 
        BEGINS_WITH
    };
    OAIComparisonOperator::eOAIComparisonOperator getValue() const;
    void setValue(const OAIComparisonOperator::eOAIComparisonOperator& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIComparisonOperator m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComparisonOperator)

#endif // OAIComparisonOperator_H
