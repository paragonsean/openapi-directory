/**
 * Amazon DynamoDB
 * <p>Amazon DynamoDB is a fast, highly scalable, highly available, cost-effective non-relational database service.</p> <p>Amazon DynamoDB removes traditional scalability limitations on data storage while maintaining low latency and predictable performance.</p>
 *
 * The version of the OpenAPI document: 2011-12-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScanOutput.h
 *
 * 
 */

#ifndef OAIScanOutput_H
#define OAIScanOutput_H

#include <QJsonObject>

#include "OAIAttributeValue.h"
#include "OAIScanOutput_LastEvaluatedKey.h"
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttributeValue;
class OAIScanOutput_LastEvaluatedKey;

class OAIScanOutput : public OAIObject {
public:
    OAIScanOutput();
    OAIScanOutput(QString json);
    ~OAIScanOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QMap> getItems() const;
    void setItems(const QList<QMap> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    qint32 getScannedCount() const;
    void setScannedCount(const qint32 &scanned_count);
    bool is_scanned_count_Set() const;
    bool is_scanned_count_Valid() const;

    OAIScanOutput_LastEvaluatedKey getLastEvaluatedKey() const;
    void setLastEvaluatedKey(const OAIScanOutput_LastEvaluatedKey &last_evaluated_key);
    bool is_last_evaluated_key_Set() const;
    bool is_last_evaluated_key_Valid() const;

    double getConsumedCapacityUnits() const;
    void setConsumedCapacityUnits(const double &consumed_capacity_units);
    bool is_consumed_capacity_units_Set() const;
    bool is_consumed_capacity_units_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QMap> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    qint32 m_scanned_count;
    bool m_scanned_count_isSet;
    bool m_scanned_count_isValid;

    OAIScanOutput_LastEvaluatedKey m_last_evaluated_key;
    bool m_last_evaluated_key_isSet;
    bool m_last_evaluated_key_isValid;

    double m_consumed_capacity_units;
    bool m_consumed_capacity_units_isSet;
    bool m_consumed_capacity_units_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScanOutput)

#endif // OAIScanOutput_H
