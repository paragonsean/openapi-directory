/**
 * Amazon DynamoDB
 * <p>Amazon DynamoDB is a fast, highly scalable, highly available, cost-effective non-relational database service.</p> <p>Amazon DynamoDB removes traditional scalability limitations on data storage while maintaining low latency and predictable performance.</p>
 *
 * The version of the OpenAPI document: 2011-12-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProvisionedThroughput.h
 *
 * Provisioned throughput reserves the required read and write resources for your table in terms of &lt;code&gt;ReadCapacityUnits&lt;/code&gt; and &lt;code&gt;WriteCapacityUnits&lt;/code&gt;. Values for provisioned throughput depend upon your expected read/write rates, item size, and consistency. Provide the expected number of read and write operations, assuming an item size of 1k and strictly consistent reads. For 2k item size, double the value. For 3k, triple the value, etc. Eventually-consistent reads consume half the resources of strictly consistent reads.
 */

#ifndef OAIProvisionedThroughput_H
#define OAIProvisionedThroughput_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProvisionedThroughput : public OAIObject {
public:
    OAIProvisionedThroughput();
    OAIProvisionedThroughput(QString json);
    ~OAIProvisionedThroughput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getReadCapacityUnits() const;
    void setReadCapacityUnits(const qint32 &read_capacity_units);
    bool is_read_capacity_units_Set() const;
    bool is_read_capacity_units_Valid() const;

    qint32 getWriteCapacityUnits() const;
    void setWriteCapacityUnits(const qint32 &write_capacity_units);
    bool is_write_capacity_units_Set() const;
    bool is_write_capacity_units_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_read_capacity_units;
    bool m_read_capacity_units_isSet;
    bool m_read_capacity_units_isValid;

    qint32 m_write_capacity_units;
    bool m_write_capacity_units_isSet;
    bool m_write_capacity_units_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProvisionedThroughput)

#endif // OAIProvisionedThroughput_H
