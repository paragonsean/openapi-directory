/**
 * Amazon DynamoDB
 * <p>Amazon DynamoDB is a fast, highly scalable, highly available, cost-effective non-relational database service.</p> <p>Amazon DynamoDB removes traditional scalability limitations on data storage while maintaining low latency and predictable performance.</p>
 *
 * The version of the OpenAPI document: 2011-12-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWriteRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWriteRequest::OAIWriteRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWriteRequest::OAIWriteRequest() {
    this->initializeModel();
}

OAIWriteRequest::~OAIWriteRequest() {}

void OAIWriteRequest::initializeModel() {

    m_put_request_isSet = false;
    m_put_request_isValid = false;

    m_delete_request_isSet = false;
    m_delete_request_isValid = false;
}

void OAIWriteRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWriteRequest::fromJsonObject(QJsonObject json) {

    m_put_request_isValid = ::OpenAPI::fromJsonValue(m_put_request, json[QString("PutRequest")]);
    m_put_request_isSet = !json[QString("PutRequest")].isNull() && m_put_request_isValid;

    m_delete_request_isValid = ::OpenAPI::fromJsonValue(m_delete_request, json[QString("DeleteRequest")]);
    m_delete_request_isSet = !json[QString("DeleteRequest")].isNull() && m_delete_request_isValid;
}

QString OAIWriteRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWriteRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_put_request.isSet()) {
        obj.insert(QString("PutRequest"), ::OpenAPI::toJsonValue(m_put_request));
    }
    if (m_delete_request.isSet()) {
        obj.insert(QString("DeleteRequest"), ::OpenAPI::toJsonValue(m_delete_request));
    }
    return obj;
}

OAIPutRequest OAIWriteRequest::getPutRequest() const {
    return m_put_request;
}
void OAIWriteRequest::setPutRequest(const OAIPutRequest &put_request) {
    m_put_request = put_request;
    m_put_request_isSet = true;
}

bool OAIWriteRequest::is_put_request_Set() const{
    return m_put_request_isSet;
}

bool OAIWriteRequest::is_put_request_Valid() const{
    return m_put_request_isValid;
}

OAIDeleteRequest OAIWriteRequest::getDeleteRequest() const {
    return m_delete_request;
}
void OAIWriteRequest::setDeleteRequest(const OAIDeleteRequest &delete_request) {
    m_delete_request = delete_request;
    m_delete_request_isSet = true;
}

bool OAIWriteRequest::is_delete_request_Set() const{
    return m_delete_request_isSet;
}

bool OAIWriteRequest::is_delete_request_Valid() const{
    return m_delete_request_isValid;
}

bool OAIWriteRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_put_request.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_delete_request.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWriteRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
