/**
 * Amazon DynamoDB
 * <p>Amazon DynamoDB is a fast, highly scalable, highly available, cost-effective non-relational database service.</p> <p>Amazon DynamoDB removes traditional scalability limitations on data storage while maintaining low latency and predictable performance.</p>
 *
 * The version of the OpenAPI document: 2011-12-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKey::OAIKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKey::OAIKey() {
    this->initializeModel();
}

OAIKey::~OAIKey() {}

void OAIKey::initializeModel() {

    m_hash_key_element_isSet = false;
    m_hash_key_element_isValid = false;

    m_range_key_element_isSet = false;
    m_range_key_element_isValid = false;
}

void OAIKey::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKey::fromJsonObject(QJsonObject json) {

    m_hash_key_element_isValid = ::OpenAPI::fromJsonValue(m_hash_key_element, json[QString("HashKeyElement")]);
    m_hash_key_element_isSet = !json[QString("HashKeyElement")].isNull() && m_hash_key_element_isValid;

    m_range_key_element_isValid = ::OpenAPI::fromJsonValue(m_range_key_element, json[QString("RangeKeyElement")]);
    m_range_key_element_isSet = !json[QString("RangeKeyElement")].isNull() && m_range_key_element_isValid;
}

QString OAIKey::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKey::asJsonObject() const {
    QJsonObject obj;
    if (m_hash_key_element.isSet()) {
        obj.insert(QString("HashKeyElement"), ::OpenAPI::toJsonValue(m_hash_key_element));
    }
    if (m_range_key_element.isSet()) {
        obj.insert(QString("RangeKeyElement"), ::OpenAPI::toJsonValue(m_range_key_element));
    }
    return obj;
}

OAIKey_HashKeyElement OAIKey::getHashKeyElement() const {
    return m_hash_key_element;
}
void OAIKey::setHashKeyElement(const OAIKey_HashKeyElement &hash_key_element) {
    m_hash_key_element = hash_key_element;
    m_hash_key_element_isSet = true;
}

bool OAIKey::is_hash_key_element_Set() const{
    return m_hash_key_element_isSet;
}

bool OAIKey::is_hash_key_element_Valid() const{
    return m_hash_key_element_isValid;
}

OAIKey_RangeKeyElement OAIKey::getRangeKeyElement() const {
    return m_range_key_element;
}
void OAIKey::setRangeKeyElement(const OAIKey_RangeKeyElement &range_key_element) {
    m_range_key_element = range_key_element;
    m_range_key_element_isSet = true;
}

bool OAIKey::is_range_key_element_Set() const{
    return m_range_key_element_isSet;
}

bool OAIKey::is_range_key_element_Valid() const{
    return m_range_key_element_isValid;
}

bool OAIKey::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hash_key_element.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_range_key_element.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_hash_key_element_isValid && true;
}

} // namespace OpenAPI
