# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ModifyGlobalClusterMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, global_cluster_identifier: str=None, new_global_cluster_identifier: str=None, deletion_protection: bool=None, engine_version: str=None, allow_major_version_upgrade: bool=None):
        """ModifyGlobalClusterMessage - a model defined in OpenAPI

        :param global_cluster_identifier: The global_cluster_identifier of this ModifyGlobalClusterMessage.
        :param new_global_cluster_identifier: The new_global_cluster_identifier of this ModifyGlobalClusterMessage.
        :param deletion_protection: The deletion_protection of this ModifyGlobalClusterMessage.
        :param engine_version: The engine_version of this ModifyGlobalClusterMessage.
        :param allow_major_version_upgrade: The allow_major_version_upgrade of this ModifyGlobalClusterMessage.
        """
        self.openapi_types = {
            'global_cluster_identifier': str,
            'new_global_cluster_identifier': str,
            'deletion_protection': bool,
            'engine_version': str,
            'allow_major_version_upgrade': bool
        }

        self.attribute_map = {
            'global_cluster_identifier': 'GlobalClusterIdentifier',
            'new_global_cluster_identifier': 'NewGlobalClusterIdentifier',
            'deletion_protection': 'DeletionProtection',
            'engine_version': 'EngineVersion',
            'allow_major_version_upgrade': 'AllowMajorVersionUpgrade'
        }

        self._global_cluster_identifier = global_cluster_identifier
        self._new_global_cluster_identifier = new_global_cluster_identifier
        self._deletion_protection = deletion_protection
        self._engine_version = engine_version
        self._allow_major_version_upgrade = allow_major_version_upgrade

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModifyGlobalClusterMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModifyGlobalClusterMessage of this ModifyGlobalClusterMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def global_cluster_identifier(self):
        """Gets the global_cluster_identifier of this ModifyGlobalClusterMessage.


        :return: The global_cluster_identifier of this ModifyGlobalClusterMessage.
        :rtype: str
        """
        return self._global_cluster_identifier

    @global_cluster_identifier.setter
    def global_cluster_identifier(self, global_cluster_identifier):
        """Sets the global_cluster_identifier of this ModifyGlobalClusterMessage.


        :param global_cluster_identifier: The global_cluster_identifier of this ModifyGlobalClusterMessage.
        :type global_cluster_identifier: str
        """
        if global_cluster_identifier is None:
            raise ValueError("Invalid value for `global_cluster_identifier`, must not be `None`")

        self._global_cluster_identifier = global_cluster_identifier

    @property
    def new_global_cluster_identifier(self):
        """Gets the new_global_cluster_identifier of this ModifyGlobalClusterMessage.


        :return: The new_global_cluster_identifier of this ModifyGlobalClusterMessage.
        :rtype: str
        """
        return self._new_global_cluster_identifier

    @new_global_cluster_identifier.setter
    def new_global_cluster_identifier(self, new_global_cluster_identifier):
        """Sets the new_global_cluster_identifier of this ModifyGlobalClusterMessage.


        :param new_global_cluster_identifier: The new_global_cluster_identifier of this ModifyGlobalClusterMessage.
        :type new_global_cluster_identifier: str
        """

        self._new_global_cluster_identifier = new_global_cluster_identifier

    @property
    def deletion_protection(self):
        """Gets the deletion_protection of this ModifyGlobalClusterMessage.


        :return: The deletion_protection of this ModifyGlobalClusterMessage.
        :rtype: bool
        """
        return self._deletion_protection

    @deletion_protection.setter
    def deletion_protection(self, deletion_protection):
        """Sets the deletion_protection of this ModifyGlobalClusterMessage.


        :param deletion_protection: The deletion_protection of this ModifyGlobalClusterMessage.
        :type deletion_protection: bool
        """

        self._deletion_protection = deletion_protection

    @property
    def engine_version(self):
        """Gets the engine_version of this ModifyGlobalClusterMessage.


        :return: The engine_version of this ModifyGlobalClusterMessage.
        :rtype: str
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """Sets the engine_version of this ModifyGlobalClusterMessage.


        :param engine_version: The engine_version of this ModifyGlobalClusterMessage.
        :type engine_version: str
        """

        self._engine_version = engine_version

    @property
    def allow_major_version_upgrade(self):
        """Gets the allow_major_version_upgrade of this ModifyGlobalClusterMessage.


        :return: The allow_major_version_upgrade of this ModifyGlobalClusterMessage.
        :rtype: bool
        """
        return self._allow_major_version_upgrade

    @allow_major_version_upgrade.setter
    def allow_major_version_upgrade(self, allow_major_version_upgrade):
        """Sets the allow_major_version_upgrade of this ModifyGlobalClusterMessage.


        :param allow_major_version_upgrade: The allow_major_version_upgrade of this ModifyGlobalClusterMessage.
        :type allow_major_version_upgrade: bool
        """

        self._allow_major_version_upgrade = allow_major_version_upgrade
