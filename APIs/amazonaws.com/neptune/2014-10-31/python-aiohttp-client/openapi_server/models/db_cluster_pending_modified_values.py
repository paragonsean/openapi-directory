# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cluster_pending_modified_values_pending_cloudwatch_logs_exports import ClusterPendingModifiedValuesPendingCloudwatchLogsExports
from openapi_server import util


class DBClusterPendingModifiedValues(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pending_cloudwatch_logs_exports: ClusterPendingModifiedValuesPendingCloudwatchLogsExports=None, db_cluster_identifier: str=None, iam_database_authentication_enabled: bool=None, engine_version: str=None, backup_retention_period: int=None, allocated_storage: int=None, iops: int=None):
        """DBClusterPendingModifiedValues - a model defined in OpenAPI

        :param pending_cloudwatch_logs_exports: The pending_cloudwatch_logs_exports of this DBClusterPendingModifiedValues.
        :param db_cluster_identifier: The db_cluster_identifier of this DBClusterPendingModifiedValues.
        :param iam_database_authentication_enabled: The iam_database_authentication_enabled of this DBClusterPendingModifiedValues.
        :param engine_version: The engine_version of this DBClusterPendingModifiedValues.
        :param backup_retention_period: The backup_retention_period of this DBClusterPendingModifiedValues.
        :param allocated_storage: The allocated_storage of this DBClusterPendingModifiedValues.
        :param iops: The iops of this DBClusterPendingModifiedValues.
        """
        self.openapi_types = {
            'pending_cloudwatch_logs_exports': ClusterPendingModifiedValuesPendingCloudwatchLogsExports,
            'db_cluster_identifier': str,
            'iam_database_authentication_enabled': bool,
            'engine_version': str,
            'backup_retention_period': int,
            'allocated_storage': int,
            'iops': int
        }

        self.attribute_map = {
            'pending_cloudwatch_logs_exports': 'PendingCloudwatchLogsExports',
            'db_cluster_identifier': 'DBClusterIdentifier',
            'iam_database_authentication_enabled': 'IAMDatabaseAuthenticationEnabled',
            'engine_version': 'EngineVersion',
            'backup_retention_period': 'BackupRetentionPeriod',
            'allocated_storage': 'AllocatedStorage',
            'iops': 'Iops'
        }

        self._pending_cloudwatch_logs_exports = pending_cloudwatch_logs_exports
        self._db_cluster_identifier = db_cluster_identifier
        self._iam_database_authentication_enabled = iam_database_authentication_enabled
        self._engine_version = engine_version
        self._backup_retention_period = backup_retention_period
        self._allocated_storage = allocated_storage
        self._iops = iops

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DBClusterPendingModifiedValues':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DBCluster_PendingModifiedValues of this DBClusterPendingModifiedValues.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pending_cloudwatch_logs_exports(self):
        """Gets the pending_cloudwatch_logs_exports of this DBClusterPendingModifiedValues.


        :return: The pending_cloudwatch_logs_exports of this DBClusterPendingModifiedValues.
        :rtype: ClusterPendingModifiedValuesPendingCloudwatchLogsExports
        """
        return self._pending_cloudwatch_logs_exports

    @pending_cloudwatch_logs_exports.setter
    def pending_cloudwatch_logs_exports(self, pending_cloudwatch_logs_exports):
        """Sets the pending_cloudwatch_logs_exports of this DBClusterPendingModifiedValues.


        :param pending_cloudwatch_logs_exports: The pending_cloudwatch_logs_exports of this DBClusterPendingModifiedValues.
        :type pending_cloudwatch_logs_exports: ClusterPendingModifiedValuesPendingCloudwatchLogsExports
        """

        self._pending_cloudwatch_logs_exports = pending_cloudwatch_logs_exports

    @property
    def db_cluster_identifier(self):
        """Gets the db_cluster_identifier of this DBClusterPendingModifiedValues.


        :return: The db_cluster_identifier of this DBClusterPendingModifiedValues.
        :rtype: str
        """
        return self._db_cluster_identifier

    @db_cluster_identifier.setter
    def db_cluster_identifier(self, db_cluster_identifier):
        """Sets the db_cluster_identifier of this DBClusterPendingModifiedValues.


        :param db_cluster_identifier: The db_cluster_identifier of this DBClusterPendingModifiedValues.
        :type db_cluster_identifier: str
        """

        self._db_cluster_identifier = db_cluster_identifier

    @property
    def iam_database_authentication_enabled(self):
        """Gets the iam_database_authentication_enabled of this DBClusterPendingModifiedValues.


        :return: The iam_database_authentication_enabled of this DBClusterPendingModifiedValues.
        :rtype: bool
        """
        return self._iam_database_authentication_enabled

    @iam_database_authentication_enabled.setter
    def iam_database_authentication_enabled(self, iam_database_authentication_enabled):
        """Sets the iam_database_authentication_enabled of this DBClusterPendingModifiedValues.


        :param iam_database_authentication_enabled: The iam_database_authentication_enabled of this DBClusterPendingModifiedValues.
        :type iam_database_authentication_enabled: bool
        """

        self._iam_database_authentication_enabled = iam_database_authentication_enabled

    @property
    def engine_version(self):
        """Gets the engine_version of this DBClusterPendingModifiedValues.


        :return: The engine_version of this DBClusterPendingModifiedValues.
        :rtype: str
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """Sets the engine_version of this DBClusterPendingModifiedValues.


        :param engine_version: The engine_version of this DBClusterPendingModifiedValues.
        :type engine_version: str
        """

        self._engine_version = engine_version

    @property
    def backup_retention_period(self):
        """Gets the backup_retention_period of this DBClusterPendingModifiedValues.


        :return: The backup_retention_period of this DBClusterPendingModifiedValues.
        :rtype: int
        """
        return self._backup_retention_period

    @backup_retention_period.setter
    def backup_retention_period(self, backup_retention_period):
        """Sets the backup_retention_period of this DBClusterPendingModifiedValues.


        :param backup_retention_period: The backup_retention_period of this DBClusterPendingModifiedValues.
        :type backup_retention_period: int
        """

        self._backup_retention_period = backup_retention_period

    @property
    def allocated_storage(self):
        """Gets the allocated_storage of this DBClusterPendingModifiedValues.


        :return: The allocated_storage of this DBClusterPendingModifiedValues.
        :rtype: int
        """
        return self._allocated_storage

    @allocated_storage.setter
    def allocated_storage(self, allocated_storage):
        """Sets the allocated_storage of this DBClusterPendingModifiedValues.


        :param allocated_storage: The allocated_storage of this DBClusterPendingModifiedValues.
        :type allocated_storage: int
        """

        self._allocated_storage = allocated_storage

    @property
    def iops(self):
        """Gets the iops of this DBClusterPendingModifiedValues.


        :return: The iops of this DBClusterPendingModifiedValues.
        :rtype: int
        """
        return self._iops

    @iops.setter
    def iops(self, iops):
        """Sets the iops of this DBClusterPendingModifiedValues.


        :param iops: The iops of this DBClusterPendingModifiedValues.
        :type iops: int
        """

        self._iops = iops
