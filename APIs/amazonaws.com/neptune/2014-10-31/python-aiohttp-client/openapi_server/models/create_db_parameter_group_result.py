# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.db_parameter_group import DBParameterGroup
from openapi_server import util


class CreateDBParameterGroupResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, db_parameter_group: DBParameterGroup=None):
        """CreateDBParameterGroupResult - a model defined in OpenAPI

        :param db_parameter_group: The db_parameter_group of this CreateDBParameterGroupResult.
        """
        self.openapi_types = {
            'db_parameter_group': DBParameterGroup
        }

        self.attribute_map = {
            'db_parameter_group': 'DBParameterGroup'
        }

        self._db_parameter_group = db_parameter_group

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDBParameterGroupResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDBParameterGroupResult of this CreateDBParameterGroupResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def db_parameter_group(self):
        """Gets the db_parameter_group of this CreateDBParameterGroupResult.


        :return: The db_parameter_group of this CreateDBParameterGroupResult.
        :rtype: DBParameterGroup
        """
        return self._db_parameter_group

    @db_parameter_group.setter
    def db_parameter_group(self, db_parameter_group):
        """Sets the db_parameter_group of this CreateDBParameterGroupResult.


        :param db_parameter_group: The db_parameter_group of this CreateDBParameterGroupResult.
        :type db_parameter_group: DBParameterGroup
        """

        self._db_parameter_group = db_parameter_group
