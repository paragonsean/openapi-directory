# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source_type import SourceType
from openapi_server import util


class Event(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_identifier: str=None, source_type: SourceType=None, message: str=None, event_categories: List=None, _date: datetime=None, source_arn: str=None):
        """Event - a model defined in OpenAPI

        :param source_identifier: The source_identifier of this Event.
        :param source_type: The source_type of this Event.
        :param message: The message of this Event.
        :param event_categories: The event_categories of this Event.
        :param _date: The _date of this Event.
        :param source_arn: The source_arn of this Event.
        """
        self.openapi_types = {
            'source_identifier': str,
            'source_type': SourceType,
            'message': str,
            'event_categories': List,
            '_date': datetime,
            'source_arn': str
        }

        self.attribute_map = {
            'source_identifier': 'SourceIdentifier',
            'source_type': 'SourceType',
            'message': 'Message',
            'event_categories': 'EventCategories',
            '_date': 'Date',
            'source_arn': 'SourceArn'
        }

        self._source_identifier = source_identifier
        self._source_type = source_type
        self._message = message
        self._event_categories = event_categories
        self.__date = _date
        self._source_arn = source_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Event':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Event of this Event.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_identifier(self):
        """Gets the source_identifier of this Event.


        :return: The source_identifier of this Event.
        :rtype: str
        """
        return self._source_identifier

    @source_identifier.setter
    def source_identifier(self, source_identifier):
        """Sets the source_identifier of this Event.


        :param source_identifier: The source_identifier of this Event.
        :type source_identifier: str
        """

        self._source_identifier = source_identifier

    @property
    def source_type(self):
        """Gets the source_type of this Event.


        :return: The source_type of this Event.
        :rtype: SourceType
        """
        return self._source_type

    @source_type.setter
    def source_type(self, source_type):
        """Sets the source_type of this Event.


        :param source_type: The source_type of this Event.
        :type source_type: SourceType
        """

        self._source_type = source_type

    @property
    def message(self):
        """Gets the message of this Event.


        :return: The message of this Event.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Event.


        :param message: The message of this Event.
        :type message: str
        """

        self._message = message

    @property
    def event_categories(self):
        """Gets the event_categories of this Event.


        :return: The event_categories of this Event.
        :rtype: List
        """
        return self._event_categories

    @event_categories.setter
    def event_categories(self, event_categories):
        """Sets the event_categories of this Event.


        :param event_categories: The event_categories of this Event.
        :type event_categories: List
        """

        self._event_categories = event_categories

    @property
    def _date(self):
        """Gets the _date of this Event.


        :return: The _date of this Event.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this Event.


        :param _date: The _date of this Event.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def source_arn(self):
        """Gets the source_arn of this Event.


        :return: The source_arn of this Event.
        :rtype: str
        """
        return self._source_arn

    @source_arn.setter
    def source_arn(self, source_arn):
        """Sets the source_arn of this Event.


        :param source_arn: The source_arn of this Event.
        :type source_arn: str
        """

        self._source_arn = source_arn
