# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DomainMembership(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain: str=None, status: str=None, fqdn: str=None, iam_role_name: str=None):
        """DomainMembership - a model defined in OpenAPI

        :param domain: The domain of this DomainMembership.
        :param status: The status of this DomainMembership.
        :param fqdn: The fqdn of this DomainMembership.
        :param iam_role_name: The iam_role_name of this DomainMembership.
        """
        self.openapi_types = {
            'domain': str,
            'status': str,
            'fqdn': str,
            'iam_role_name': str
        }

        self.attribute_map = {
            'domain': 'Domain',
            'status': 'Status',
            'fqdn': 'FQDN',
            'iam_role_name': 'IAMRoleName'
        }

        self._domain = domain
        self._status = status
        self._fqdn = fqdn
        self._iam_role_name = iam_role_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainMembership':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainMembership of this DomainMembership.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain(self):
        """Gets the domain of this DomainMembership.


        :return: The domain of this DomainMembership.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this DomainMembership.


        :param domain: The domain of this DomainMembership.
        :type domain: str
        """

        self._domain = domain

    @property
    def status(self):
        """Gets the status of this DomainMembership.


        :return: The status of this DomainMembership.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DomainMembership.


        :param status: The status of this DomainMembership.
        :type status: str
        """

        self._status = status

    @property
    def fqdn(self):
        """Gets the fqdn of this DomainMembership.


        :return: The fqdn of this DomainMembership.
        :rtype: str
        """
        return self._fqdn

    @fqdn.setter
    def fqdn(self, fqdn):
        """Sets the fqdn of this DomainMembership.


        :param fqdn: The fqdn of this DomainMembership.
        :type fqdn: str
        """

        self._fqdn = fqdn

    @property
    def iam_role_name(self):
        """Gets the iam_role_name of this DomainMembership.


        :return: The iam_role_name of this DomainMembership.
        :rtype: str
        """
        return self._iam_role_name

    @iam_role_name.setter
    def iam_role_name(self, iam_role_name):
        """Sets the iam_role_name of this DomainMembership.


        :param iam_role_name: The iam_role_name of this DomainMembership.
        :type iam_role_name: str
        """

        self._iam_role_name = iam_role_name
