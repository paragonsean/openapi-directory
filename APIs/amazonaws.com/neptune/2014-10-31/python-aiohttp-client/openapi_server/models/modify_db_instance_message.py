# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.modify_db_instance_message_cloudwatch_logs_export_configuration import ModifyDBInstanceMessageCloudwatchLogsExportConfiguration
from openapi_server import util


class ModifyDBInstanceMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, db_instance_identifier: str=None, allocated_storage: int=None, db_instance_class: str=None, db_subnet_group_name: str=None, db_security_groups: List=None, vpc_security_group_ids: List=None, apply_immediately: bool=None, master_user_password: str=None, db_parameter_group_name: str=None, backup_retention_period: int=None, preferred_backup_window: str=None, preferred_maintenance_window: str=None, multi_az: bool=None, engine_version: str=None, allow_major_version_upgrade: bool=None, auto_minor_version_upgrade: bool=None, license_model: str=None, iops: int=None, option_group_name: str=None, new_db_instance_identifier: str=None, storage_type: str=None, tde_credential_arn: str=None, tde_credential_password: str=None, ca_certificate_identifier: str=None, domain: str=None, copy_tags_to_snapshot: bool=None, monitoring_interval: int=None, db_port_number: int=None, publicly_accessible: bool=None, monitoring_role_arn: str=None, domain_iam_role_name: str=None, promotion_tier: int=None, enable_iam_database_authentication: bool=None, enable_performance_insights: bool=None, performance_insights_kms_key_id: str=None, cloudwatch_logs_export_configuration: ModifyDBInstanceMessageCloudwatchLogsExportConfiguration=None, deletion_protection: bool=None):
        """ModifyDBInstanceMessage - a model defined in OpenAPI

        :param db_instance_identifier: The db_instance_identifier of this ModifyDBInstanceMessage.
        :param allocated_storage: The allocated_storage of this ModifyDBInstanceMessage.
        :param db_instance_class: The db_instance_class of this ModifyDBInstanceMessage.
        :param db_subnet_group_name: The db_subnet_group_name of this ModifyDBInstanceMessage.
        :param db_security_groups: The db_security_groups of this ModifyDBInstanceMessage.
        :param vpc_security_group_ids: The vpc_security_group_ids of this ModifyDBInstanceMessage.
        :param apply_immediately: The apply_immediately of this ModifyDBInstanceMessage.
        :param master_user_password: The master_user_password of this ModifyDBInstanceMessage.
        :param db_parameter_group_name: The db_parameter_group_name of this ModifyDBInstanceMessage.
        :param backup_retention_period: The backup_retention_period of this ModifyDBInstanceMessage.
        :param preferred_backup_window: The preferred_backup_window of this ModifyDBInstanceMessage.
        :param preferred_maintenance_window: The preferred_maintenance_window of this ModifyDBInstanceMessage.
        :param multi_az: The multi_az of this ModifyDBInstanceMessage.
        :param engine_version: The engine_version of this ModifyDBInstanceMessage.
        :param allow_major_version_upgrade: The allow_major_version_upgrade of this ModifyDBInstanceMessage.
        :param auto_minor_version_upgrade: The auto_minor_version_upgrade of this ModifyDBInstanceMessage.
        :param license_model: The license_model of this ModifyDBInstanceMessage.
        :param iops: The iops of this ModifyDBInstanceMessage.
        :param option_group_name: The option_group_name of this ModifyDBInstanceMessage.
        :param new_db_instance_identifier: The new_db_instance_identifier of this ModifyDBInstanceMessage.
        :param storage_type: The storage_type of this ModifyDBInstanceMessage.
        :param tde_credential_arn: The tde_credential_arn of this ModifyDBInstanceMessage.
        :param tde_credential_password: The tde_credential_password of this ModifyDBInstanceMessage.
        :param ca_certificate_identifier: The ca_certificate_identifier of this ModifyDBInstanceMessage.
        :param domain: The domain of this ModifyDBInstanceMessage.
        :param copy_tags_to_snapshot: The copy_tags_to_snapshot of this ModifyDBInstanceMessage.
        :param monitoring_interval: The monitoring_interval of this ModifyDBInstanceMessage.
        :param db_port_number: The db_port_number of this ModifyDBInstanceMessage.
        :param publicly_accessible: The publicly_accessible of this ModifyDBInstanceMessage.
        :param monitoring_role_arn: The monitoring_role_arn of this ModifyDBInstanceMessage.
        :param domain_iam_role_name: The domain_iam_role_name of this ModifyDBInstanceMessage.
        :param promotion_tier: The promotion_tier of this ModifyDBInstanceMessage.
        :param enable_iam_database_authentication: The enable_iam_database_authentication of this ModifyDBInstanceMessage.
        :param enable_performance_insights: The enable_performance_insights of this ModifyDBInstanceMessage.
        :param performance_insights_kms_key_id: The performance_insights_kms_key_id of this ModifyDBInstanceMessage.
        :param cloudwatch_logs_export_configuration: The cloudwatch_logs_export_configuration of this ModifyDBInstanceMessage.
        :param deletion_protection: The deletion_protection of this ModifyDBInstanceMessage.
        """
        self.openapi_types = {
            'db_instance_identifier': str,
            'allocated_storage': int,
            'db_instance_class': str,
            'db_subnet_group_name': str,
            'db_security_groups': List,
            'vpc_security_group_ids': List,
            'apply_immediately': bool,
            'master_user_password': str,
            'db_parameter_group_name': str,
            'backup_retention_period': int,
            'preferred_backup_window': str,
            'preferred_maintenance_window': str,
            'multi_az': bool,
            'engine_version': str,
            'allow_major_version_upgrade': bool,
            'auto_minor_version_upgrade': bool,
            'license_model': str,
            'iops': int,
            'option_group_name': str,
            'new_db_instance_identifier': str,
            'storage_type': str,
            'tde_credential_arn': str,
            'tde_credential_password': str,
            'ca_certificate_identifier': str,
            'domain': str,
            'copy_tags_to_snapshot': bool,
            'monitoring_interval': int,
            'db_port_number': int,
            'publicly_accessible': bool,
            'monitoring_role_arn': str,
            'domain_iam_role_name': str,
            'promotion_tier': int,
            'enable_iam_database_authentication': bool,
            'enable_performance_insights': bool,
            'performance_insights_kms_key_id': str,
            'cloudwatch_logs_export_configuration': ModifyDBInstanceMessageCloudwatchLogsExportConfiguration,
            'deletion_protection': bool
        }

        self.attribute_map = {
            'db_instance_identifier': 'DBInstanceIdentifier',
            'allocated_storage': 'AllocatedStorage',
            'db_instance_class': 'DBInstanceClass',
            'db_subnet_group_name': 'DBSubnetGroupName',
            'db_security_groups': 'DBSecurityGroups',
            'vpc_security_group_ids': 'VpcSecurityGroupIds',
            'apply_immediately': 'ApplyImmediately',
            'master_user_password': 'MasterUserPassword',
            'db_parameter_group_name': 'DBParameterGroupName',
            'backup_retention_period': 'BackupRetentionPeriod',
            'preferred_backup_window': 'PreferredBackupWindow',
            'preferred_maintenance_window': 'PreferredMaintenanceWindow',
            'multi_az': 'MultiAZ',
            'engine_version': 'EngineVersion',
            'allow_major_version_upgrade': 'AllowMajorVersionUpgrade',
            'auto_minor_version_upgrade': 'AutoMinorVersionUpgrade',
            'license_model': 'LicenseModel',
            'iops': 'Iops',
            'option_group_name': 'OptionGroupName',
            'new_db_instance_identifier': 'NewDBInstanceIdentifier',
            'storage_type': 'StorageType',
            'tde_credential_arn': 'TdeCredentialArn',
            'tde_credential_password': 'TdeCredentialPassword',
            'ca_certificate_identifier': 'CACertificateIdentifier',
            'domain': 'Domain',
            'copy_tags_to_snapshot': 'CopyTagsToSnapshot',
            'monitoring_interval': 'MonitoringInterval',
            'db_port_number': 'DBPortNumber',
            'publicly_accessible': 'PubliclyAccessible',
            'monitoring_role_arn': 'MonitoringRoleArn',
            'domain_iam_role_name': 'DomainIAMRoleName',
            'promotion_tier': 'PromotionTier',
            'enable_iam_database_authentication': 'EnableIAMDatabaseAuthentication',
            'enable_performance_insights': 'EnablePerformanceInsights',
            'performance_insights_kms_key_id': 'PerformanceInsightsKMSKeyId',
            'cloudwatch_logs_export_configuration': 'CloudwatchLogsExportConfiguration',
            'deletion_protection': 'DeletionProtection'
        }

        self._db_instance_identifier = db_instance_identifier
        self._allocated_storage = allocated_storage
        self._db_instance_class = db_instance_class
        self._db_subnet_group_name = db_subnet_group_name
        self._db_security_groups = db_security_groups
        self._vpc_security_group_ids = vpc_security_group_ids
        self._apply_immediately = apply_immediately
        self._master_user_password = master_user_password
        self._db_parameter_group_name = db_parameter_group_name
        self._backup_retention_period = backup_retention_period
        self._preferred_backup_window = preferred_backup_window
        self._preferred_maintenance_window = preferred_maintenance_window
        self._multi_az = multi_az
        self._engine_version = engine_version
        self._allow_major_version_upgrade = allow_major_version_upgrade
        self._auto_minor_version_upgrade = auto_minor_version_upgrade
        self._license_model = license_model
        self._iops = iops
        self._option_group_name = option_group_name
        self._new_db_instance_identifier = new_db_instance_identifier
        self._storage_type = storage_type
        self._tde_credential_arn = tde_credential_arn
        self._tde_credential_password = tde_credential_password
        self._ca_certificate_identifier = ca_certificate_identifier
        self._domain = domain
        self._copy_tags_to_snapshot = copy_tags_to_snapshot
        self._monitoring_interval = monitoring_interval
        self._db_port_number = db_port_number
        self._publicly_accessible = publicly_accessible
        self._monitoring_role_arn = monitoring_role_arn
        self._domain_iam_role_name = domain_iam_role_name
        self._promotion_tier = promotion_tier
        self._enable_iam_database_authentication = enable_iam_database_authentication
        self._enable_performance_insights = enable_performance_insights
        self._performance_insights_kms_key_id = performance_insights_kms_key_id
        self._cloudwatch_logs_export_configuration = cloudwatch_logs_export_configuration
        self._deletion_protection = deletion_protection

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModifyDBInstanceMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModifyDBInstanceMessage of this ModifyDBInstanceMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def db_instance_identifier(self):
        """Gets the db_instance_identifier of this ModifyDBInstanceMessage.


        :return: The db_instance_identifier of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._db_instance_identifier

    @db_instance_identifier.setter
    def db_instance_identifier(self, db_instance_identifier):
        """Sets the db_instance_identifier of this ModifyDBInstanceMessage.


        :param db_instance_identifier: The db_instance_identifier of this ModifyDBInstanceMessage.
        :type db_instance_identifier: str
        """
        if db_instance_identifier is None:
            raise ValueError("Invalid value for `db_instance_identifier`, must not be `None`")

        self._db_instance_identifier = db_instance_identifier

    @property
    def allocated_storage(self):
        """Gets the allocated_storage of this ModifyDBInstanceMessage.


        :return: The allocated_storage of this ModifyDBInstanceMessage.
        :rtype: int
        """
        return self._allocated_storage

    @allocated_storage.setter
    def allocated_storage(self, allocated_storage):
        """Sets the allocated_storage of this ModifyDBInstanceMessage.


        :param allocated_storage: The allocated_storage of this ModifyDBInstanceMessage.
        :type allocated_storage: int
        """

        self._allocated_storage = allocated_storage

    @property
    def db_instance_class(self):
        """Gets the db_instance_class of this ModifyDBInstanceMessage.


        :return: The db_instance_class of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._db_instance_class

    @db_instance_class.setter
    def db_instance_class(self, db_instance_class):
        """Sets the db_instance_class of this ModifyDBInstanceMessage.


        :param db_instance_class: The db_instance_class of this ModifyDBInstanceMessage.
        :type db_instance_class: str
        """

        self._db_instance_class = db_instance_class

    @property
    def db_subnet_group_name(self):
        """Gets the db_subnet_group_name of this ModifyDBInstanceMessage.


        :return: The db_subnet_group_name of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._db_subnet_group_name

    @db_subnet_group_name.setter
    def db_subnet_group_name(self, db_subnet_group_name):
        """Sets the db_subnet_group_name of this ModifyDBInstanceMessage.


        :param db_subnet_group_name: The db_subnet_group_name of this ModifyDBInstanceMessage.
        :type db_subnet_group_name: str
        """

        self._db_subnet_group_name = db_subnet_group_name

    @property
    def db_security_groups(self):
        """Gets the db_security_groups of this ModifyDBInstanceMessage.


        :return: The db_security_groups of this ModifyDBInstanceMessage.
        :rtype: List
        """
        return self._db_security_groups

    @db_security_groups.setter
    def db_security_groups(self, db_security_groups):
        """Sets the db_security_groups of this ModifyDBInstanceMessage.


        :param db_security_groups: The db_security_groups of this ModifyDBInstanceMessage.
        :type db_security_groups: List
        """

        self._db_security_groups = db_security_groups

    @property
    def vpc_security_group_ids(self):
        """Gets the vpc_security_group_ids of this ModifyDBInstanceMessage.


        :return: The vpc_security_group_ids of this ModifyDBInstanceMessage.
        :rtype: List
        """
        return self._vpc_security_group_ids

    @vpc_security_group_ids.setter
    def vpc_security_group_ids(self, vpc_security_group_ids):
        """Sets the vpc_security_group_ids of this ModifyDBInstanceMessage.


        :param vpc_security_group_ids: The vpc_security_group_ids of this ModifyDBInstanceMessage.
        :type vpc_security_group_ids: List
        """

        self._vpc_security_group_ids = vpc_security_group_ids

    @property
    def apply_immediately(self):
        """Gets the apply_immediately of this ModifyDBInstanceMessage.


        :return: The apply_immediately of this ModifyDBInstanceMessage.
        :rtype: bool
        """
        return self._apply_immediately

    @apply_immediately.setter
    def apply_immediately(self, apply_immediately):
        """Sets the apply_immediately of this ModifyDBInstanceMessage.


        :param apply_immediately: The apply_immediately of this ModifyDBInstanceMessage.
        :type apply_immediately: bool
        """

        self._apply_immediately = apply_immediately

    @property
    def master_user_password(self):
        """Gets the master_user_password of this ModifyDBInstanceMessage.


        :return: The master_user_password of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._master_user_password

    @master_user_password.setter
    def master_user_password(self, master_user_password):
        """Sets the master_user_password of this ModifyDBInstanceMessage.


        :param master_user_password: The master_user_password of this ModifyDBInstanceMessage.
        :type master_user_password: str
        """

        self._master_user_password = master_user_password

    @property
    def db_parameter_group_name(self):
        """Gets the db_parameter_group_name of this ModifyDBInstanceMessage.


        :return: The db_parameter_group_name of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._db_parameter_group_name

    @db_parameter_group_name.setter
    def db_parameter_group_name(self, db_parameter_group_name):
        """Sets the db_parameter_group_name of this ModifyDBInstanceMessage.


        :param db_parameter_group_name: The db_parameter_group_name of this ModifyDBInstanceMessage.
        :type db_parameter_group_name: str
        """

        self._db_parameter_group_name = db_parameter_group_name

    @property
    def backup_retention_period(self):
        """Gets the backup_retention_period of this ModifyDBInstanceMessage.


        :return: The backup_retention_period of this ModifyDBInstanceMessage.
        :rtype: int
        """
        return self._backup_retention_period

    @backup_retention_period.setter
    def backup_retention_period(self, backup_retention_period):
        """Sets the backup_retention_period of this ModifyDBInstanceMessage.


        :param backup_retention_period: The backup_retention_period of this ModifyDBInstanceMessage.
        :type backup_retention_period: int
        """

        self._backup_retention_period = backup_retention_period

    @property
    def preferred_backup_window(self):
        """Gets the preferred_backup_window of this ModifyDBInstanceMessage.


        :return: The preferred_backup_window of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._preferred_backup_window

    @preferred_backup_window.setter
    def preferred_backup_window(self, preferred_backup_window):
        """Sets the preferred_backup_window of this ModifyDBInstanceMessage.


        :param preferred_backup_window: The preferred_backup_window of this ModifyDBInstanceMessage.
        :type preferred_backup_window: str
        """

        self._preferred_backup_window = preferred_backup_window

    @property
    def preferred_maintenance_window(self):
        """Gets the preferred_maintenance_window of this ModifyDBInstanceMessage.


        :return: The preferred_maintenance_window of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._preferred_maintenance_window

    @preferred_maintenance_window.setter
    def preferred_maintenance_window(self, preferred_maintenance_window):
        """Sets the preferred_maintenance_window of this ModifyDBInstanceMessage.


        :param preferred_maintenance_window: The preferred_maintenance_window of this ModifyDBInstanceMessage.
        :type preferred_maintenance_window: str
        """

        self._preferred_maintenance_window = preferred_maintenance_window

    @property
    def multi_az(self):
        """Gets the multi_az of this ModifyDBInstanceMessage.


        :return: The multi_az of this ModifyDBInstanceMessage.
        :rtype: bool
        """
        return self._multi_az

    @multi_az.setter
    def multi_az(self, multi_az):
        """Sets the multi_az of this ModifyDBInstanceMessage.


        :param multi_az: The multi_az of this ModifyDBInstanceMessage.
        :type multi_az: bool
        """

        self._multi_az = multi_az

    @property
    def engine_version(self):
        """Gets the engine_version of this ModifyDBInstanceMessage.


        :return: The engine_version of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """Sets the engine_version of this ModifyDBInstanceMessage.


        :param engine_version: The engine_version of this ModifyDBInstanceMessage.
        :type engine_version: str
        """

        self._engine_version = engine_version

    @property
    def allow_major_version_upgrade(self):
        """Gets the allow_major_version_upgrade of this ModifyDBInstanceMessage.


        :return: The allow_major_version_upgrade of this ModifyDBInstanceMessage.
        :rtype: bool
        """
        return self._allow_major_version_upgrade

    @allow_major_version_upgrade.setter
    def allow_major_version_upgrade(self, allow_major_version_upgrade):
        """Sets the allow_major_version_upgrade of this ModifyDBInstanceMessage.


        :param allow_major_version_upgrade: The allow_major_version_upgrade of this ModifyDBInstanceMessage.
        :type allow_major_version_upgrade: bool
        """

        self._allow_major_version_upgrade = allow_major_version_upgrade

    @property
    def auto_minor_version_upgrade(self):
        """Gets the auto_minor_version_upgrade of this ModifyDBInstanceMessage.


        :return: The auto_minor_version_upgrade of this ModifyDBInstanceMessage.
        :rtype: bool
        """
        return self._auto_minor_version_upgrade

    @auto_minor_version_upgrade.setter
    def auto_minor_version_upgrade(self, auto_minor_version_upgrade):
        """Sets the auto_minor_version_upgrade of this ModifyDBInstanceMessage.


        :param auto_minor_version_upgrade: The auto_minor_version_upgrade of this ModifyDBInstanceMessage.
        :type auto_minor_version_upgrade: bool
        """

        self._auto_minor_version_upgrade = auto_minor_version_upgrade

    @property
    def license_model(self):
        """Gets the license_model of this ModifyDBInstanceMessage.


        :return: The license_model of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._license_model

    @license_model.setter
    def license_model(self, license_model):
        """Sets the license_model of this ModifyDBInstanceMessage.


        :param license_model: The license_model of this ModifyDBInstanceMessage.
        :type license_model: str
        """

        self._license_model = license_model

    @property
    def iops(self):
        """Gets the iops of this ModifyDBInstanceMessage.


        :return: The iops of this ModifyDBInstanceMessage.
        :rtype: int
        """
        return self._iops

    @iops.setter
    def iops(self, iops):
        """Sets the iops of this ModifyDBInstanceMessage.


        :param iops: The iops of this ModifyDBInstanceMessage.
        :type iops: int
        """

        self._iops = iops

    @property
    def option_group_name(self):
        """Gets the option_group_name of this ModifyDBInstanceMessage.


        :return: The option_group_name of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._option_group_name

    @option_group_name.setter
    def option_group_name(self, option_group_name):
        """Sets the option_group_name of this ModifyDBInstanceMessage.


        :param option_group_name: The option_group_name of this ModifyDBInstanceMessage.
        :type option_group_name: str
        """

        self._option_group_name = option_group_name

    @property
    def new_db_instance_identifier(self):
        """Gets the new_db_instance_identifier of this ModifyDBInstanceMessage.


        :return: The new_db_instance_identifier of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._new_db_instance_identifier

    @new_db_instance_identifier.setter
    def new_db_instance_identifier(self, new_db_instance_identifier):
        """Sets the new_db_instance_identifier of this ModifyDBInstanceMessage.


        :param new_db_instance_identifier: The new_db_instance_identifier of this ModifyDBInstanceMessage.
        :type new_db_instance_identifier: str
        """

        self._new_db_instance_identifier = new_db_instance_identifier

    @property
    def storage_type(self):
        """Gets the storage_type of this ModifyDBInstanceMessage.


        :return: The storage_type of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._storage_type

    @storage_type.setter
    def storage_type(self, storage_type):
        """Sets the storage_type of this ModifyDBInstanceMessage.


        :param storage_type: The storage_type of this ModifyDBInstanceMessage.
        :type storage_type: str
        """

        self._storage_type = storage_type

    @property
    def tde_credential_arn(self):
        """Gets the tde_credential_arn of this ModifyDBInstanceMessage.


        :return: The tde_credential_arn of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._tde_credential_arn

    @tde_credential_arn.setter
    def tde_credential_arn(self, tde_credential_arn):
        """Sets the tde_credential_arn of this ModifyDBInstanceMessage.


        :param tde_credential_arn: The tde_credential_arn of this ModifyDBInstanceMessage.
        :type tde_credential_arn: str
        """

        self._tde_credential_arn = tde_credential_arn

    @property
    def tde_credential_password(self):
        """Gets the tde_credential_password of this ModifyDBInstanceMessage.


        :return: The tde_credential_password of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._tde_credential_password

    @tde_credential_password.setter
    def tde_credential_password(self, tde_credential_password):
        """Sets the tde_credential_password of this ModifyDBInstanceMessage.


        :param tde_credential_password: The tde_credential_password of this ModifyDBInstanceMessage.
        :type tde_credential_password: str
        """

        self._tde_credential_password = tde_credential_password

    @property
    def ca_certificate_identifier(self):
        """Gets the ca_certificate_identifier of this ModifyDBInstanceMessage.


        :return: The ca_certificate_identifier of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._ca_certificate_identifier

    @ca_certificate_identifier.setter
    def ca_certificate_identifier(self, ca_certificate_identifier):
        """Sets the ca_certificate_identifier of this ModifyDBInstanceMessage.


        :param ca_certificate_identifier: The ca_certificate_identifier of this ModifyDBInstanceMessage.
        :type ca_certificate_identifier: str
        """

        self._ca_certificate_identifier = ca_certificate_identifier

    @property
    def domain(self):
        """Gets the domain of this ModifyDBInstanceMessage.


        :return: The domain of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this ModifyDBInstanceMessage.


        :param domain: The domain of this ModifyDBInstanceMessage.
        :type domain: str
        """

        self._domain = domain

    @property
    def copy_tags_to_snapshot(self):
        """Gets the copy_tags_to_snapshot of this ModifyDBInstanceMessage.


        :return: The copy_tags_to_snapshot of this ModifyDBInstanceMessage.
        :rtype: bool
        """
        return self._copy_tags_to_snapshot

    @copy_tags_to_snapshot.setter
    def copy_tags_to_snapshot(self, copy_tags_to_snapshot):
        """Sets the copy_tags_to_snapshot of this ModifyDBInstanceMessage.


        :param copy_tags_to_snapshot: The copy_tags_to_snapshot of this ModifyDBInstanceMessage.
        :type copy_tags_to_snapshot: bool
        """

        self._copy_tags_to_snapshot = copy_tags_to_snapshot

    @property
    def monitoring_interval(self):
        """Gets the monitoring_interval of this ModifyDBInstanceMessage.


        :return: The monitoring_interval of this ModifyDBInstanceMessage.
        :rtype: int
        """
        return self._monitoring_interval

    @monitoring_interval.setter
    def monitoring_interval(self, monitoring_interval):
        """Sets the monitoring_interval of this ModifyDBInstanceMessage.


        :param monitoring_interval: The monitoring_interval of this ModifyDBInstanceMessage.
        :type monitoring_interval: int
        """

        self._monitoring_interval = monitoring_interval

    @property
    def db_port_number(self):
        """Gets the db_port_number of this ModifyDBInstanceMessage.


        :return: The db_port_number of this ModifyDBInstanceMessage.
        :rtype: int
        """
        return self._db_port_number

    @db_port_number.setter
    def db_port_number(self, db_port_number):
        """Sets the db_port_number of this ModifyDBInstanceMessage.


        :param db_port_number: The db_port_number of this ModifyDBInstanceMessage.
        :type db_port_number: int
        """

        self._db_port_number = db_port_number

    @property
    def publicly_accessible(self):
        """Gets the publicly_accessible of this ModifyDBInstanceMessage.


        :return: The publicly_accessible of this ModifyDBInstanceMessage.
        :rtype: bool
        """
        return self._publicly_accessible

    @publicly_accessible.setter
    def publicly_accessible(self, publicly_accessible):
        """Sets the publicly_accessible of this ModifyDBInstanceMessage.


        :param publicly_accessible: The publicly_accessible of this ModifyDBInstanceMessage.
        :type publicly_accessible: bool
        """

        self._publicly_accessible = publicly_accessible

    @property
    def monitoring_role_arn(self):
        """Gets the monitoring_role_arn of this ModifyDBInstanceMessage.


        :return: The monitoring_role_arn of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._monitoring_role_arn

    @monitoring_role_arn.setter
    def monitoring_role_arn(self, monitoring_role_arn):
        """Sets the monitoring_role_arn of this ModifyDBInstanceMessage.


        :param monitoring_role_arn: The monitoring_role_arn of this ModifyDBInstanceMessage.
        :type monitoring_role_arn: str
        """

        self._monitoring_role_arn = monitoring_role_arn

    @property
    def domain_iam_role_name(self):
        """Gets the domain_iam_role_name of this ModifyDBInstanceMessage.


        :return: The domain_iam_role_name of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._domain_iam_role_name

    @domain_iam_role_name.setter
    def domain_iam_role_name(self, domain_iam_role_name):
        """Sets the domain_iam_role_name of this ModifyDBInstanceMessage.


        :param domain_iam_role_name: The domain_iam_role_name of this ModifyDBInstanceMessage.
        :type domain_iam_role_name: str
        """

        self._domain_iam_role_name = domain_iam_role_name

    @property
    def promotion_tier(self):
        """Gets the promotion_tier of this ModifyDBInstanceMessage.


        :return: The promotion_tier of this ModifyDBInstanceMessage.
        :rtype: int
        """
        return self._promotion_tier

    @promotion_tier.setter
    def promotion_tier(self, promotion_tier):
        """Sets the promotion_tier of this ModifyDBInstanceMessage.


        :param promotion_tier: The promotion_tier of this ModifyDBInstanceMessage.
        :type promotion_tier: int
        """

        self._promotion_tier = promotion_tier

    @property
    def enable_iam_database_authentication(self):
        """Gets the enable_iam_database_authentication of this ModifyDBInstanceMessage.


        :return: The enable_iam_database_authentication of this ModifyDBInstanceMessage.
        :rtype: bool
        """
        return self._enable_iam_database_authentication

    @enable_iam_database_authentication.setter
    def enable_iam_database_authentication(self, enable_iam_database_authentication):
        """Sets the enable_iam_database_authentication of this ModifyDBInstanceMessage.


        :param enable_iam_database_authentication: The enable_iam_database_authentication of this ModifyDBInstanceMessage.
        :type enable_iam_database_authentication: bool
        """

        self._enable_iam_database_authentication = enable_iam_database_authentication

    @property
    def enable_performance_insights(self):
        """Gets the enable_performance_insights of this ModifyDBInstanceMessage.


        :return: The enable_performance_insights of this ModifyDBInstanceMessage.
        :rtype: bool
        """
        return self._enable_performance_insights

    @enable_performance_insights.setter
    def enable_performance_insights(self, enable_performance_insights):
        """Sets the enable_performance_insights of this ModifyDBInstanceMessage.


        :param enable_performance_insights: The enable_performance_insights of this ModifyDBInstanceMessage.
        :type enable_performance_insights: bool
        """

        self._enable_performance_insights = enable_performance_insights

    @property
    def performance_insights_kms_key_id(self):
        """Gets the performance_insights_kms_key_id of this ModifyDBInstanceMessage.


        :return: The performance_insights_kms_key_id of this ModifyDBInstanceMessage.
        :rtype: str
        """
        return self._performance_insights_kms_key_id

    @performance_insights_kms_key_id.setter
    def performance_insights_kms_key_id(self, performance_insights_kms_key_id):
        """Sets the performance_insights_kms_key_id of this ModifyDBInstanceMessage.


        :param performance_insights_kms_key_id: The performance_insights_kms_key_id of this ModifyDBInstanceMessage.
        :type performance_insights_kms_key_id: str
        """

        self._performance_insights_kms_key_id = performance_insights_kms_key_id

    @property
    def cloudwatch_logs_export_configuration(self):
        """Gets the cloudwatch_logs_export_configuration of this ModifyDBInstanceMessage.


        :return: The cloudwatch_logs_export_configuration of this ModifyDBInstanceMessage.
        :rtype: ModifyDBInstanceMessageCloudwatchLogsExportConfiguration
        """
        return self._cloudwatch_logs_export_configuration

    @cloudwatch_logs_export_configuration.setter
    def cloudwatch_logs_export_configuration(self, cloudwatch_logs_export_configuration):
        """Sets the cloudwatch_logs_export_configuration of this ModifyDBInstanceMessage.


        :param cloudwatch_logs_export_configuration: The cloudwatch_logs_export_configuration of this ModifyDBInstanceMessage.
        :type cloudwatch_logs_export_configuration: ModifyDBInstanceMessageCloudwatchLogsExportConfiguration
        """

        self._cloudwatch_logs_export_configuration = cloudwatch_logs_export_configuration

    @property
    def deletion_protection(self):
        """Gets the deletion_protection of this ModifyDBInstanceMessage.


        :return: The deletion_protection of this ModifyDBInstanceMessage.
        :rtype: bool
        """
        return self._deletion_protection

    @deletion_protection.setter
    def deletion_protection(self, deletion_protection):
        """Sets the deletion_protection of this ModifyDBInstanceMessage.


        :param deletion_protection: The deletion_protection of this ModifyDBInstanceMessage.
        :type deletion_protection: bool
        """

        self._deletion_protection = deletion_protection
