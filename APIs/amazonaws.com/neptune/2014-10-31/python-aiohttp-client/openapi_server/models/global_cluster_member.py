# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GlobalClusterMember(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, db_cluster_arn: str=None, readers: List=None, is_writer: bool=None):
        """GlobalClusterMember - a model defined in OpenAPI

        :param db_cluster_arn: The db_cluster_arn of this GlobalClusterMember.
        :param readers: The readers of this GlobalClusterMember.
        :param is_writer: The is_writer of this GlobalClusterMember.
        """
        self.openapi_types = {
            'db_cluster_arn': str,
            'readers': List,
            'is_writer': bool
        }

        self.attribute_map = {
            'db_cluster_arn': 'DBClusterArn',
            'readers': 'Readers',
            'is_writer': 'IsWriter'
        }

        self._db_cluster_arn = db_cluster_arn
        self._readers = readers
        self._is_writer = is_writer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GlobalClusterMember':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GlobalClusterMember of this GlobalClusterMember.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def db_cluster_arn(self):
        """Gets the db_cluster_arn of this GlobalClusterMember.


        :return: The db_cluster_arn of this GlobalClusterMember.
        :rtype: str
        """
        return self._db_cluster_arn

    @db_cluster_arn.setter
    def db_cluster_arn(self, db_cluster_arn):
        """Sets the db_cluster_arn of this GlobalClusterMember.


        :param db_cluster_arn: The db_cluster_arn of this GlobalClusterMember.
        :type db_cluster_arn: str
        """

        self._db_cluster_arn = db_cluster_arn

    @property
    def readers(self):
        """Gets the readers of this GlobalClusterMember.


        :return: The readers of this GlobalClusterMember.
        :rtype: List
        """
        return self._readers

    @readers.setter
    def readers(self, readers):
        """Sets the readers of this GlobalClusterMember.


        :param readers: The readers of this GlobalClusterMember.
        :type readers: List
        """

        self._readers = readers

    @property
    def is_writer(self):
        """Gets the is_writer of this GlobalClusterMember.


        :return: The is_writer of this GlobalClusterMember.
        :rtype: bool
        """
        return self._is_writer

    @is_writer.setter
    def is_writer(self, is_writer):
        """Sets the is_writer of this GlobalClusterMember.


        :param is_writer: The is_writer of this GlobalClusterMember.
        :type is_writer: bool
        """

        self._is_writer = is_writer
