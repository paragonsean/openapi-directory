# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.db_instance import DBInstance
from openapi_server import util


class RebootDBInstanceResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, db_instance: DBInstance=None):
        """RebootDBInstanceResult - a model defined in OpenAPI

        :param db_instance: The db_instance of this RebootDBInstanceResult.
        """
        self.openapi_types = {
            'db_instance': DBInstance
        }

        self.attribute_map = {
            'db_instance': 'DBInstance'
        }

        self._db_instance = db_instance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RebootDBInstanceResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RebootDBInstanceResult of this RebootDBInstanceResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def db_instance(self):
        """Gets the db_instance of this RebootDBInstanceResult.


        :return: The db_instance of this RebootDBInstanceResult.
        :rtype: DBInstance
        """
        return self._db_instance

    @db_instance.setter
    def db_instance(self, db_instance):
        """Sets the db_instance of this RebootDBInstanceResult.


        :param db_instance: The db_instance of this RebootDBInstanceResult.
        :type db_instance: DBInstance
        """

        self._db_instance = db_instance
