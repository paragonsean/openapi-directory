# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ModifyDBClusterSnapshotAttributeMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, db_cluster_snapshot_identifier: str=None, attribute_name: str=None, values_to_add: List=None, values_to_remove: List=None):
        """ModifyDBClusterSnapshotAttributeMessage - a model defined in OpenAPI

        :param db_cluster_snapshot_identifier: The db_cluster_snapshot_identifier of this ModifyDBClusterSnapshotAttributeMessage.
        :param attribute_name: The attribute_name of this ModifyDBClusterSnapshotAttributeMessage.
        :param values_to_add: The values_to_add of this ModifyDBClusterSnapshotAttributeMessage.
        :param values_to_remove: The values_to_remove of this ModifyDBClusterSnapshotAttributeMessage.
        """
        self.openapi_types = {
            'db_cluster_snapshot_identifier': str,
            'attribute_name': str,
            'values_to_add': List,
            'values_to_remove': List
        }

        self.attribute_map = {
            'db_cluster_snapshot_identifier': 'DBClusterSnapshotIdentifier',
            'attribute_name': 'AttributeName',
            'values_to_add': 'ValuesToAdd',
            'values_to_remove': 'ValuesToRemove'
        }

        self._db_cluster_snapshot_identifier = db_cluster_snapshot_identifier
        self._attribute_name = attribute_name
        self._values_to_add = values_to_add
        self._values_to_remove = values_to_remove

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModifyDBClusterSnapshotAttributeMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModifyDBClusterSnapshotAttributeMessage of this ModifyDBClusterSnapshotAttributeMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def db_cluster_snapshot_identifier(self):
        """Gets the db_cluster_snapshot_identifier of this ModifyDBClusterSnapshotAttributeMessage.


        :return: The db_cluster_snapshot_identifier of this ModifyDBClusterSnapshotAttributeMessage.
        :rtype: str
        """
        return self._db_cluster_snapshot_identifier

    @db_cluster_snapshot_identifier.setter
    def db_cluster_snapshot_identifier(self, db_cluster_snapshot_identifier):
        """Sets the db_cluster_snapshot_identifier of this ModifyDBClusterSnapshotAttributeMessage.


        :param db_cluster_snapshot_identifier: The db_cluster_snapshot_identifier of this ModifyDBClusterSnapshotAttributeMessage.
        :type db_cluster_snapshot_identifier: str
        """
        if db_cluster_snapshot_identifier is None:
            raise ValueError("Invalid value for `db_cluster_snapshot_identifier`, must not be `None`")

        self._db_cluster_snapshot_identifier = db_cluster_snapshot_identifier

    @property
    def attribute_name(self):
        """Gets the attribute_name of this ModifyDBClusterSnapshotAttributeMessage.


        :return: The attribute_name of this ModifyDBClusterSnapshotAttributeMessage.
        :rtype: str
        """
        return self._attribute_name

    @attribute_name.setter
    def attribute_name(self, attribute_name):
        """Sets the attribute_name of this ModifyDBClusterSnapshotAttributeMessage.


        :param attribute_name: The attribute_name of this ModifyDBClusterSnapshotAttributeMessage.
        :type attribute_name: str
        """
        if attribute_name is None:
            raise ValueError("Invalid value for `attribute_name`, must not be `None`")

        self._attribute_name = attribute_name

    @property
    def values_to_add(self):
        """Gets the values_to_add of this ModifyDBClusterSnapshotAttributeMessage.


        :return: The values_to_add of this ModifyDBClusterSnapshotAttributeMessage.
        :rtype: List
        """
        return self._values_to_add

    @values_to_add.setter
    def values_to_add(self, values_to_add):
        """Sets the values_to_add of this ModifyDBClusterSnapshotAttributeMessage.


        :param values_to_add: The values_to_add of this ModifyDBClusterSnapshotAttributeMessage.
        :type values_to_add: List
        """

        self._values_to_add = values_to_add

    @property
    def values_to_remove(self):
        """Gets the values_to_remove of this ModifyDBClusterSnapshotAttributeMessage.


        :return: The values_to_remove of this ModifyDBClusterSnapshotAttributeMessage.
        :rtype: List
        """
        return self._values_to_remove

    @values_to_remove.setter
    def values_to_remove(self, values_to_remove):
        """Sets the values_to_remove of this ModifyDBClusterSnapshotAttributeMessage.


        :param values_to_remove: The values_to_remove of this ModifyDBClusterSnapshotAttributeMessage.
        :type values_to_remove: List
        """

        self._values_to_remove = values_to_remove
