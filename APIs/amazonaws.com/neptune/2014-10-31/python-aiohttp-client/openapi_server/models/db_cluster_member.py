# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DBClusterMember(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, db_instance_identifier: str=None, is_cluster_writer: bool=None, db_cluster_parameter_group_status: str=None, promotion_tier: int=None):
        """DBClusterMember - a model defined in OpenAPI

        :param db_instance_identifier: The db_instance_identifier of this DBClusterMember.
        :param is_cluster_writer: The is_cluster_writer of this DBClusterMember.
        :param db_cluster_parameter_group_status: The db_cluster_parameter_group_status of this DBClusterMember.
        :param promotion_tier: The promotion_tier of this DBClusterMember.
        """
        self.openapi_types = {
            'db_instance_identifier': str,
            'is_cluster_writer': bool,
            'db_cluster_parameter_group_status': str,
            'promotion_tier': int
        }

        self.attribute_map = {
            'db_instance_identifier': 'DBInstanceIdentifier',
            'is_cluster_writer': 'IsClusterWriter',
            'db_cluster_parameter_group_status': 'DBClusterParameterGroupStatus',
            'promotion_tier': 'PromotionTier'
        }

        self._db_instance_identifier = db_instance_identifier
        self._is_cluster_writer = is_cluster_writer
        self._db_cluster_parameter_group_status = db_cluster_parameter_group_status
        self._promotion_tier = promotion_tier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DBClusterMember':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DBClusterMember of this DBClusterMember.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def db_instance_identifier(self):
        """Gets the db_instance_identifier of this DBClusterMember.


        :return: The db_instance_identifier of this DBClusterMember.
        :rtype: str
        """
        return self._db_instance_identifier

    @db_instance_identifier.setter
    def db_instance_identifier(self, db_instance_identifier):
        """Sets the db_instance_identifier of this DBClusterMember.


        :param db_instance_identifier: The db_instance_identifier of this DBClusterMember.
        :type db_instance_identifier: str
        """

        self._db_instance_identifier = db_instance_identifier

    @property
    def is_cluster_writer(self):
        """Gets the is_cluster_writer of this DBClusterMember.


        :return: The is_cluster_writer of this DBClusterMember.
        :rtype: bool
        """
        return self._is_cluster_writer

    @is_cluster_writer.setter
    def is_cluster_writer(self, is_cluster_writer):
        """Sets the is_cluster_writer of this DBClusterMember.


        :param is_cluster_writer: The is_cluster_writer of this DBClusterMember.
        :type is_cluster_writer: bool
        """

        self._is_cluster_writer = is_cluster_writer

    @property
    def db_cluster_parameter_group_status(self):
        """Gets the db_cluster_parameter_group_status of this DBClusterMember.


        :return: The db_cluster_parameter_group_status of this DBClusterMember.
        :rtype: str
        """
        return self._db_cluster_parameter_group_status

    @db_cluster_parameter_group_status.setter
    def db_cluster_parameter_group_status(self, db_cluster_parameter_group_status):
        """Sets the db_cluster_parameter_group_status of this DBClusterMember.


        :param db_cluster_parameter_group_status: The db_cluster_parameter_group_status of this DBClusterMember.
        :type db_cluster_parameter_group_status: str
        """

        self._db_cluster_parameter_group_status = db_cluster_parameter_group_status

    @property
    def promotion_tier(self):
        """Gets the promotion_tier of this DBClusterMember.


        :return: The promotion_tier of this DBClusterMember.
        :rtype: int
        """
        return self._promotion_tier

    @promotion_tier.setter
    def promotion_tier(self, promotion_tier):
        """Sets the promotion_tier of this DBClusterMember.


        :param promotion_tier: The promotion_tier of this DBClusterMember.
        :type promotion_tier: int
        """

        self._promotion_tier = promotion_tier
