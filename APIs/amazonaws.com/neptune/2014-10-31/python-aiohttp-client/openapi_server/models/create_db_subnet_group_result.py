# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.db_subnet_group import DBSubnetGroup
from openapi_server import util


class CreateDBSubnetGroupResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, db_subnet_group: DBSubnetGroup=None):
        """CreateDBSubnetGroupResult - a model defined in OpenAPI

        :param db_subnet_group: The db_subnet_group of this CreateDBSubnetGroupResult.
        """
        self.openapi_types = {
            'db_subnet_group': DBSubnetGroup
        }

        self.attribute_map = {
            'db_subnet_group': 'DBSubnetGroup'
        }

        self._db_subnet_group = db_subnet_group

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDBSubnetGroupResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDBSubnetGroupResult of this CreateDBSubnetGroupResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def db_subnet_group(self):
        """Gets the db_subnet_group of this CreateDBSubnetGroupResult.


        :return: The db_subnet_group of this CreateDBSubnetGroupResult.
        :rtype: DBSubnetGroup
        """
        return self._db_subnet_group

    @db_subnet_group.setter
    def db_subnet_group(self, db_subnet_group):
        """Sets the db_subnet_group of this CreateDBSubnetGroupResult.


        :param db_subnet_group: The db_subnet_group of this CreateDBSubnetGroupResult.
        :type db_subnet_group: DBSubnetGroup
        """

        self._db_subnet_group = db_subnet_group
