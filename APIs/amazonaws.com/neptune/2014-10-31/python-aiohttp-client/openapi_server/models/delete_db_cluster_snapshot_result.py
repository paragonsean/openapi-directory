# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.db_cluster_snapshot import DBClusterSnapshot
from openapi_server import util


class DeleteDBClusterSnapshotResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, db_cluster_snapshot: DBClusterSnapshot=None):
        """DeleteDBClusterSnapshotResult - a model defined in OpenAPI

        :param db_cluster_snapshot: The db_cluster_snapshot of this DeleteDBClusterSnapshotResult.
        """
        self.openapi_types = {
            'db_cluster_snapshot': DBClusterSnapshot
        }

        self.attribute_map = {
            'db_cluster_snapshot': 'DBClusterSnapshot'
        }

        self._db_cluster_snapshot = db_cluster_snapshot

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteDBClusterSnapshotResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteDBClusterSnapshotResult of this DeleteDBClusterSnapshotResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def db_cluster_snapshot(self):
        """Gets the db_cluster_snapshot of this DeleteDBClusterSnapshotResult.


        :return: The db_cluster_snapshot of this DeleteDBClusterSnapshotResult.
        :rtype: DBClusterSnapshot
        """
        return self._db_cluster_snapshot

    @db_cluster_snapshot.setter
    def db_cluster_snapshot(self, db_cluster_snapshot):
        """Sets the db_cluster_snapshot of this DeleteDBClusterSnapshotResult.


        :param db_cluster_snapshot: The db_cluster_snapshot of this DeleteDBClusterSnapshotResult.
        :type db_cluster_snapshot: DBClusterSnapshot
        """

        self._db_cluster_snapshot = db_cluster_snapshot
