# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cluster_pending_modified_values_pending_cloudwatch_logs_exports import ClusterPendingModifiedValuesPendingCloudwatchLogsExports
from openapi_server import util


class PendingModifiedValues(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, db_instance_class: str=None, allocated_storage: int=None, master_user_password: str=None, port: int=None, backup_retention_period: int=None, multi_az: bool=None, engine_version: str=None, license_model: str=None, iops: int=None, db_instance_identifier: str=None, storage_type: str=None, ca_certificate_identifier: str=None, db_subnet_group_name: str=None, pending_cloudwatch_logs_exports: ClusterPendingModifiedValuesPendingCloudwatchLogsExports=None):
        """PendingModifiedValues - a model defined in OpenAPI

        :param db_instance_class: The db_instance_class of this PendingModifiedValues.
        :param allocated_storage: The allocated_storage of this PendingModifiedValues.
        :param master_user_password: The master_user_password of this PendingModifiedValues.
        :param port: The port of this PendingModifiedValues.
        :param backup_retention_period: The backup_retention_period of this PendingModifiedValues.
        :param multi_az: The multi_az of this PendingModifiedValues.
        :param engine_version: The engine_version of this PendingModifiedValues.
        :param license_model: The license_model of this PendingModifiedValues.
        :param iops: The iops of this PendingModifiedValues.
        :param db_instance_identifier: The db_instance_identifier of this PendingModifiedValues.
        :param storage_type: The storage_type of this PendingModifiedValues.
        :param ca_certificate_identifier: The ca_certificate_identifier of this PendingModifiedValues.
        :param db_subnet_group_name: The db_subnet_group_name of this PendingModifiedValues.
        :param pending_cloudwatch_logs_exports: The pending_cloudwatch_logs_exports of this PendingModifiedValues.
        """
        self.openapi_types = {
            'db_instance_class': str,
            'allocated_storage': int,
            'master_user_password': str,
            'port': int,
            'backup_retention_period': int,
            'multi_az': bool,
            'engine_version': str,
            'license_model': str,
            'iops': int,
            'db_instance_identifier': str,
            'storage_type': str,
            'ca_certificate_identifier': str,
            'db_subnet_group_name': str,
            'pending_cloudwatch_logs_exports': ClusterPendingModifiedValuesPendingCloudwatchLogsExports
        }

        self.attribute_map = {
            'db_instance_class': 'DBInstanceClass',
            'allocated_storage': 'AllocatedStorage',
            'master_user_password': 'MasterUserPassword',
            'port': 'Port',
            'backup_retention_period': 'BackupRetentionPeriod',
            'multi_az': 'MultiAZ',
            'engine_version': 'EngineVersion',
            'license_model': 'LicenseModel',
            'iops': 'Iops',
            'db_instance_identifier': 'DBInstanceIdentifier',
            'storage_type': 'StorageType',
            'ca_certificate_identifier': 'CACertificateIdentifier',
            'db_subnet_group_name': 'DBSubnetGroupName',
            'pending_cloudwatch_logs_exports': 'PendingCloudwatchLogsExports'
        }

        self._db_instance_class = db_instance_class
        self._allocated_storage = allocated_storage
        self._master_user_password = master_user_password
        self._port = port
        self._backup_retention_period = backup_retention_period
        self._multi_az = multi_az
        self._engine_version = engine_version
        self._license_model = license_model
        self._iops = iops
        self._db_instance_identifier = db_instance_identifier
        self._storage_type = storage_type
        self._ca_certificate_identifier = ca_certificate_identifier
        self._db_subnet_group_name = db_subnet_group_name
        self._pending_cloudwatch_logs_exports = pending_cloudwatch_logs_exports

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PendingModifiedValues':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PendingModifiedValues of this PendingModifiedValues.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def db_instance_class(self):
        """Gets the db_instance_class of this PendingModifiedValues.


        :return: The db_instance_class of this PendingModifiedValues.
        :rtype: str
        """
        return self._db_instance_class

    @db_instance_class.setter
    def db_instance_class(self, db_instance_class):
        """Sets the db_instance_class of this PendingModifiedValues.


        :param db_instance_class: The db_instance_class of this PendingModifiedValues.
        :type db_instance_class: str
        """

        self._db_instance_class = db_instance_class

    @property
    def allocated_storage(self):
        """Gets the allocated_storage of this PendingModifiedValues.


        :return: The allocated_storage of this PendingModifiedValues.
        :rtype: int
        """
        return self._allocated_storage

    @allocated_storage.setter
    def allocated_storage(self, allocated_storage):
        """Sets the allocated_storage of this PendingModifiedValues.


        :param allocated_storage: The allocated_storage of this PendingModifiedValues.
        :type allocated_storage: int
        """

        self._allocated_storage = allocated_storage

    @property
    def master_user_password(self):
        """Gets the master_user_password of this PendingModifiedValues.


        :return: The master_user_password of this PendingModifiedValues.
        :rtype: str
        """
        return self._master_user_password

    @master_user_password.setter
    def master_user_password(self, master_user_password):
        """Sets the master_user_password of this PendingModifiedValues.


        :param master_user_password: The master_user_password of this PendingModifiedValues.
        :type master_user_password: str
        """

        self._master_user_password = master_user_password

    @property
    def port(self):
        """Gets the port of this PendingModifiedValues.


        :return: The port of this PendingModifiedValues.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this PendingModifiedValues.


        :param port: The port of this PendingModifiedValues.
        :type port: int
        """

        self._port = port

    @property
    def backup_retention_period(self):
        """Gets the backup_retention_period of this PendingModifiedValues.


        :return: The backup_retention_period of this PendingModifiedValues.
        :rtype: int
        """
        return self._backup_retention_period

    @backup_retention_period.setter
    def backup_retention_period(self, backup_retention_period):
        """Sets the backup_retention_period of this PendingModifiedValues.


        :param backup_retention_period: The backup_retention_period of this PendingModifiedValues.
        :type backup_retention_period: int
        """

        self._backup_retention_period = backup_retention_period

    @property
    def multi_az(self):
        """Gets the multi_az of this PendingModifiedValues.


        :return: The multi_az of this PendingModifiedValues.
        :rtype: bool
        """
        return self._multi_az

    @multi_az.setter
    def multi_az(self, multi_az):
        """Sets the multi_az of this PendingModifiedValues.


        :param multi_az: The multi_az of this PendingModifiedValues.
        :type multi_az: bool
        """

        self._multi_az = multi_az

    @property
    def engine_version(self):
        """Gets the engine_version of this PendingModifiedValues.


        :return: The engine_version of this PendingModifiedValues.
        :rtype: str
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """Sets the engine_version of this PendingModifiedValues.


        :param engine_version: The engine_version of this PendingModifiedValues.
        :type engine_version: str
        """

        self._engine_version = engine_version

    @property
    def license_model(self):
        """Gets the license_model of this PendingModifiedValues.


        :return: The license_model of this PendingModifiedValues.
        :rtype: str
        """
        return self._license_model

    @license_model.setter
    def license_model(self, license_model):
        """Sets the license_model of this PendingModifiedValues.


        :param license_model: The license_model of this PendingModifiedValues.
        :type license_model: str
        """

        self._license_model = license_model

    @property
    def iops(self):
        """Gets the iops of this PendingModifiedValues.


        :return: The iops of this PendingModifiedValues.
        :rtype: int
        """
        return self._iops

    @iops.setter
    def iops(self, iops):
        """Sets the iops of this PendingModifiedValues.


        :param iops: The iops of this PendingModifiedValues.
        :type iops: int
        """

        self._iops = iops

    @property
    def db_instance_identifier(self):
        """Gets the db_instance_identifier of this PendingModifiedValues.


        :return: The db_instance_identifier of this PendingModifiedValues.
        :rtype: str
        """
        return self._db_instance_identifier

    @db_instance_identifier.setter
    def db_instance_identifier(self, db_instance_identifier):
        """Sets the db_instance_identifier of this PendingModifiedValues.


        :param db_instance_identifier: The db_instance_identifier of this PendingModifiedValues.
        :type db_instance_identifier: str
        """

        self._db_instance_identifier = db_instance_identifier

    @property
    def storage_type(self):
        """Gets the storage_type of this PendingModifiedValues.


        :return: The storage_type of this PendingModifiedValues.
        :rtype: str
        """
        return self._storage_type

    @storage_type.setter
    def storage_type(self, storage_type):
        """Sets the storage_type of this PendingModifiedValues.


        :param storage_type: The storage_type of this PendingModifiedValues.
        :type storage_type: str
        """

        self._storage_type = storage_type

    @property
    def ca_certificate_identifier(self):
        """Gets the ca_certificate_identifier of this PendingModifiedValues.


        :return: The ca_certificate_identifier of this PendingModifiedValues.
        :rtype: str
        """
        return self._ca_certificate_identifier

    @ca_certificate_identifier.setter
    def ca_certificate_identifier(self, ca_certificate_identifier):
        """Sets the ca_certificate_identifier of this PendingModifiedValues.


        :param ca_certificate_identifier: The ca_certificate_identifier of this PendingModifiedValues.
        :type ca_certificate_identifier: str
        """

        self._ca_certificate_identifier = ca_certificate_identifier

    @property
    def db_subnet_group_name(self):
        """Gets the db_subnet_group_name of this PendingModifiedValues.


        :return: The db_subnet_group_name of this PendingModifiedValues.
        :rtype: str
        """
        return self._db_subnet_group_name

    @db_subnet_group_name.setter
    def db_subnet_group_name(self, db_subnet_group_name):
        """Sets the db_subnet_group_name of this PendingModifiedValues.


        :param db_subnet_group_name: The db_subnet_group_name of this PendingModifiedValues.
        :type db_subnet_group_name: str
        """

        self._db_subnet_group_name = db_subnet_group_name

    @property
    def pending_cloudwatch_logs_exports(self):
        """Gets the pending_cloudwatch_logs_exports of this PendingModifiedValues.


        :return: The pending_cloudwatch_logs_exports of this PendingModifiedValues.
        :rtype: ClusterPendingModifiedValuesPendingCloudwatchLogsExports
        """
        return self._pending_cloudwatch_logs_exports

    @pending_cloudwatch_logs_exports.setter
    def pending_cloudwatch_logs_exports(self, pending_cloudwatch_logs_exports):
        """Sets the pending_cloudwatch_logs_exports of this PendingModifiedValues.


        :param pending_cloudwatch_logs_exports: The pending_cloudwatch_logs_exports of this PendingModifiedValues.
        :type pending_cloudwatch_logs_exports: ClusterPendingModifiedValuesPendingCloudwatchLogsExports
        """

        self._pending_cloudwatch_logs_exports = pending_cloudwatch_logs_exports
