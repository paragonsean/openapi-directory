# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.global_cluster import GlobalCluster
from openapi_server import util


class RemoveFromGlobalClusterResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, global_cluster: GlobalCluster=None):
        """RemoveFromGlobalClusterResult - a model defined in OpenAPI

        :param global_cluster: The global_cluster of this RemoveFromGlobalClusterResult.
        """
        self.openapi_types = {
            'global_cluster': GlobalCluster
        }

        self.attribute_map = {
            'global_cluster': 'GlobalCluster'
        }

        self._global_cluster = global_cluster

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoveFromGlobalClusterResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemoveFromGlobalClusterResult of this RemoveFromGlobalClusterResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def global_cluster(self):
        """Gets the global_cluster of this RemoveFromGlobalClusterResult.


        :return: The global_cluster of this RemoveFromGlobalClusterResult.
        :rtype: GlobalCluster
        """
        return self._global_cluster

    @global_cluster.setter
    def global_cluster(self, global_cluster):
        """Sets the global_cluster of this RemoveFromGlobalClusterResult.


        :param global_cluster: The global_cluster of this RemoveFromGlobalClusterResult.
        :type global_cluster: GlobalCluster
        """

        self._global_cluster = global_cluster
