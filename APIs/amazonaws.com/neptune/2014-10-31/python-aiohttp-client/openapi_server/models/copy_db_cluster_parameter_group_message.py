# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CopyDBClusterParameterGroupMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_db_cluster_parameter_group_identifier: str=None, target_db_cluster_parameter_group_identifier: str=None, target_db_cluster_parameter_group_description: str=None, tags: List=None):
        """CopyDBClusterParameterGroupMessage - a model defined in OpenAPI

        :param source_db_cluster_parameter_group_identifier: The source_db_cluster_parameter_group_identifier of this CopyDBClusterParameterGroupMessage.
        :param target_db_cluster_parameter_group_identifier: The target_db_cluster_parameter_group_identifier of this CopyDBClusterParameterGroupMessage.
        :param target_db_cluster_parameter_group_description: The target_db_cluster_parameter_group_description of this CopyDBClusterParameterGroupMessage.
        :param tags: The tags of this CopyDBClusterParameterGroupMessage.
        """
        self.openapi_types = {
            'source_db_cluster_parameter_group_identifier': str,
            'target_db_cluster_parameter_group_identifier': str,
            'target_db_cluster_parameter_group_description': str,
            'tags': List
        }

        self.attribute_map = {
            'source_db_cluster_parameter_group_identifier': 'SourceDBClusterParameterGroupIdentifier',
            'target_db_cluster_parameter_group_identifier': 'TargetDBClusterParameterGroupIdentifier',
            'target_db_cluster_parameter_group_description': 'TargetDBClusterParameterGroupDescription',
            'tags': 'Tags'
        }

        self._source_db_cluster_parameter_group_identifier = source_db_cluster_parameter_group_identifier
        self._target_db_cluster_parameter_group_identifier = target_db_cluster_parameter_group_identifier
        self._target_db_cluster_parameter_group_description = target_db_cluster_parameter_group_description
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CopyDBClusterParameterGroupMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CopyDBClusterParameterGroupMessage of this CopyDBClusterParameterGroupMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_db_cluster_parameter_group_identifier(self):
        """Gets the source_db_cluster_parameter_group_identifier of this CopyDBClusterParameterGroupMessage.


        :return: The source_db_cluster_parameter_group_identifier of this CopyDBClusterParameterGroupMessage.
        :rtype: str
        """
        return self._source_db_cluster_parameter_group_identifier

    @source_db_cluster_parameter_group_identifier.setter
    def source_db_cluster_parameter_group_identifier(self, source_db_cluster_parameter_group_identifier):
        """Sets the source_db_cluster_parameter_group_identifier of this CopyDBClusterParameterGroupMessage.


        :param source_db_cluster_parameter_group_identifier: The source_db_cluster_parameter_group_identifier of this CopyDBClusterParameterGroupMessage.
        :type source_db_cluster_parameter_group_identifier: str
        """
        if source_db_cluster_parameter_group_identifier is None:
            raise ValueError("Invalid value for `source_db_cluster_parameter_group_identifier`, must not be `None`")

        self._source_db_cluster_parameter_group_identifier = source_db_cluster_parameter_group_identifier

    @property
    def target_db_cluster_parameter_group_identifier(self):
        """Gets the target_db_cluster_parameter_group_identifier of this CopyDBClusterParameterGroupMessage.


        :return: The target_db_cluster_parameter_group_identifier of this CopyDBClusterParameterGroupMessage.
        :rtype: str
        """
        return self._target_db_cluster_parameter_group_identifier

    @target_db_cluster_parameter_group_identifier.setter
    def target_db_cluster_parameter_group_identifier(self, target_db_cluster_parameter_group_identifier):
        """Sets the target_db_cluster_parameter_group_identifier of this CopyDBClusterParameterGroupMessage.


        :param target_db_cluster_parameter_group_identifier: The target_db_cluster_parameter_group_identifier of this CopyDBClusterParameterGroupMessage.
        :type target_db_cluster_parameter_group_identifier: str
        """
        if target_db_cluster_parameter_group_identifier is None:
            raise ValueError("Invalid value for `target_db_cluster_parameter_group_identifier`, must not be `None`")

        self._target_db_cluster_parameter_group_identifier = target_db_cluster_parameter_group_identifier

    @property
    def target_db_cluster_parameter_group_description(self):
        """Gets the target_db_cluster_parameter_group_description of this CopyDBClusterParameterGroupMessage.


        :return: The target_db_cluster_parameter_group_description of this CopyDBClusterParameterGroupMessage.
        :rtype: str
        """
        return self._target_db_cluster_parameter_group_description

    @target_db_cluster_parameter_group_description.setter
    def target_db_cluster_parameter_group_description(self, target_db_cluster_parameter_group_description):
        """Sets the target_db_cluster_parameter_group_description of this CopyDBClusterParameterGroupMessage.


        :param target_db_cluster_parameter_group_description: The target_db_cluster_parameter_group_description of this CopyDBClusterParameterGroupMessage.
        :type target_db_cluster_parameter_group_description: str
        """
        if target_db_cluster_parameter_group_description is None:
            raise ValueError("Invalid value for `target_db_cluster_parameter_group_description`, must not be `None`")

        self._target_db_cluster_parameter_group_description = target_db_cluster_parameter_group_description

    @property
    def tags(self):
        """Gets the tags of this CopyDBClusterParameterGroupMessage.


        :return: The tags of this CopyDBClusterParameterGroupMessage.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CopyDBClusterParameterGroupMessage.


        :param tags: The tags of this CopyDBClusterParameterGroupMessage.
        :type tags: List
        """

        self._tags = tags
