# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_subscription import EventSubscription
from openapi_server import util


class AddSourceIdentifierToSubscriptionResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_subscription: EventSubscription=None):
        """AddSourceIdentifierToSubscriptionResult - a model defined in OpenAPI

        :param event_subscription: The event_subscription of this AddSourceIdentifierToSubscriptionResult.
        """
        self.openapi_types = {
            'event_subscription': EventSubscription
        }

        self.attribute_map = {
            'event_subscription': 'EventSubscription'
        }

        self._event_subscription = event_subscription

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddSourceIdentifierToSubscriptionResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddSourceIdentifierToSubscriptionResult of this AddSourceIdentifierToSubscriptionResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_subscription(self):
        """Gets the event_subscription of this AddSourceIdentifierToSubscriptionResult.


        :return: The event_subscription of this AddSourceIdentifierToSubscriptionResult.
        :rtype: EventSubscription
        """
        return self._event_subscription

    @event_subscription.setter
    def event_subscription(self, event_subscription):
        """Sets the event_subscription of this AddSourceIdentifierToSubscriptionResult.


        :param event_subscription: The event_subscription of this AddSourceIdentifierToSubscriptionResult.
        :type event_subscription: EventSubscription
        """

        self._event_subscription = event_subscription
