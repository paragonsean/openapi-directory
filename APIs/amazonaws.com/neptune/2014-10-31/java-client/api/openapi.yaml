openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>Amazon Neptune</fullname> <p>Amazon Neptune is a fast, reliable,\
    \ fully-managed graph database service that makes it easy to build and run applications\
    \ that work with highly connected datasets. The core of Amazon Neptune is a purpose-built,\
    \ high-performance graph database engine optimized for storing billions of relationships\
    \ and querying the graph with milliseconds latency. Amazon Neptune supports popular\
    \ graph models Property Graph and W3C's RDF, and their respective query languages\
    \ Apache TinkerPop Gremlin and SPARQL, allowing you to easily build queries that\
    \ efficiently navigate highly connected datasets. Neptune powers graph use cases\
    \ such as recommendation engines, fraud detection, knowledge graphs, drug discovery,\
    \ and network security.</p> <p>This interface reference for Amazon Neptune contains\
    \ documentation for a programming or command line interface you can use to manage\
    \ Amazon Neptune. Note that Amazon Neptune is asynchronous, which means that some\
    \ interfaces might require techniques such as polling or callback functions to\
    \ determine when a command has been applied. In this reference, the parameter\
    \ descriptions indicate whether a command is applied immediately, on the next\
    \ instance reboot, or during the maintenance window. The reference structure is\
    \ as follows, and we list following some related topics from the user guide.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Neptune
  version: 2014-10-31
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: neptune
  x-aws-signingName: rds
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/neptune-2014-10-31.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/rds/
servers:
- description: The Amazon Neptune multi-region endpoint
  url: "http://rds.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Neptune multi-region endpoint
  url: "https://rds.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The general Amazon Neptune multi-region endpoint
  url: http://rds.amazonaws.com
- description: The general Amazon Neptune multi-region endpoint
  url: https://rds.amazonaws.com
- description: The Amazon Neptune endpoint for China (Beijing) and China (Ningxia)
  url: "http://rds.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Neptune endpoint for China (Beijing) and China (Ningxia)
  url: "https://rds.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#Action=AddRoleToDBCluster:
    get:
      description: Associates an Identity and Access Management (IAM) role with an
        Neptune DB cluster.
      operationId: GET_AddRoleToDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the DB cluster to associate the IAM role with.
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "The Amazon Resource Name (ARN) of the IAM role to associate\
          \ with the Neptune DB cluster, for example <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>."
        explode: true
        in: query
        name: RoleArn
        required: true
        schema:
          type: string
        style: form
      - description: "The name of the feature for the Neptune DB cluster that the\
          \ IAM role is to be associated with. For the list of supported feature names,\
          \ see <a href=\"neptune/latest/userguide/api-other-apis.html#DBEngineVersion\"\
          >DBEngineVersion</a>."
        explode: true
        in: query
        name: FeatureName
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AddRoleToDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterRoleAlreadyExistsFault'
          description: DBClusterRoleAlreadyExistsFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterRoleQuotaExceededFault'
          description: DBClusterRoleQuotaExceededFault
      x-aws-operation-name: AddRoleToDBCluster
      x-accepts:
      - text/xml
    post:
      description: Associates an Identity and Access Management (IAM) role with an
        Neptune DB cluster.
      operationId: POST_AddRoleToDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AddRoleToDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AddRoleToDBClusterMessage'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterRoleAlreadyExistsFault'
          description: DBClusterRoleAlreadyExistsFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterRoleQuotaExceededFault'
          description: DBClusterRoleQuotaExceededFault
      x-aws-operation-name: AddRoleToDBCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=AddSourceIdentifierToSubscription:
    get:
      description: Adds a source identifier to an existing event notification subscription.
      operationId: GET_AddSourceIdentifierToSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the event notification subscription you want to add
          a source identifier to.
        explode: true
        in: query
        name: SubscriptionName
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The identifier of the event source to be added.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>If the source type is a DB instance, then a <code>DBInstanceIdentifier</code>\
          \ must be supplied.</p> </li> <li> <p>If the source type is a DB security\
          \ group, a <code>DBSecurityGroupName</code> must be supplied.</p> </li>\
          \ <li> <p>If the source type is a DB parameter group, a <code>DBParameterGroupName</code>\
          \ must be supplied.</p> </li> <li> <p>If the source type is a DB snapshot,\
          \ a <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> </ul>"
        explode: true
        in: query
        name: SourceIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AddSourceIdentifierToSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AddSourceIdentifierToSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
          description: SourceNotFoundFault
      x-aws-operation-name: AddSourceIdentifierToSubscription
      x-accepts:
      - text/xml
    post:
      description: Adds a source identifier to an existing event notification subscription.
      operationId: POST_AddSourceIdentifierToSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AddSourceIdentifierToSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AddSourceIdentifierToSubscriptionMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AddSourceIdentifierToSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
          description: SourceNotFoundFault
      x-aws-operation-name: AddSourceIdentifierToSubscription
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=AddTagsToResource:
    get:
      description: "Adds metadata tags to an Amazon Neptune resource. These tags can\
        \ also be used with cost allocation reporting to track cost associated with\
        \ Amazon Neptune resources, or used in a Condition statement in an IAM policy\
        \ for Amazon Neptune."
      operationId: GET_AddTagsToResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Neptune resource that the tags are added to. This\
          \ value is an Amazon Resource Name (ARN). For information about creating\
          \ an ARN, see <a href=\"https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"\
          > Constructing an Amazon Resource Name (ARN)</a>."
        explode: true
        in: query
        name: ResourceName
        required: true
        schema:
          type: string
        style: form
      - description: The tags to be assigned to the Amazon Neptune resource.
        explode: true
        in: query
        name: Tags
        required: true
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AddTagsToResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
          description: DBSnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: AddTagsToResource
      x-accepts:
      - text/xml
    post:
      description: "Adds metadata tags to an Amazon Neptune resource. These tags can\
        \ also be used with cost allocation reporting to track cost associated with\
        \ Amazon Neptune resources, or used in a Condition statement in an IAM policy\
        \ for Amazon Neptune."
      operationId: POST_AddTagsToResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AddTagsToResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AddTagsToResourceMessage'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
          description: DBSnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: AddTagsToResource
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ApplyPendingMaintenanceAction:
    get:
      description: "Applies a pending maintenance action to a resource (for example,\
        \ to a DB instance)."
      operationId: GET_ApplyPendingMaintenanceAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) of the resource that the pending\
          \ maintenance action applies to. For information about creating an ARN,\
          \ see <a href=\"https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"\
          > Constructing an Amazon Resource Name (ARN)</a>."
        explode: true
        in: query
        name: ResourceIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The pending maintenance action to apply to this resource.</p>\
          \ <p>Valid values: <code>system-update</code>, <code>db-upgrade</code> </p>"
        explode: true
        in: query
        name: ApplyAction
        required: true
        schema:
          type: string
        style: form
      - description: "<p>A value that specifies the type of opt-in request, or undoes\
          \ an opt-in request. An opt-in request of type <code>immediate</code> can't\
          \ be undone.</p> <p>Valid values:</p> <ul> <li> <p> <code>immediate</code>\
          \ - Apply the maintenance action immediately.</p> </li> <li> <p> <code>next-maintenance</code>\
          \ - Apply the maintenance action during the next maintenance window for\
          \ the resource.</p> </li> <li> <p> <code>undo-opt-in</code> - Cancel any\
          \ existing <code>next-maintenance</code> opt-in requests.</p> </li> </ul>"
        explode: true
        in: query
        name: OptInType
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ApplyPendingMaintenanceAction
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplyPendingMaintenanceActionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
          description: ResourceNotFoundFault
      x-aws-operation-name: ApplyPendingMaintenanceAction
      x-accepts:
      - text/xml
    post:
      description: "Applies a pending maintenance action to a resource (for example,\
        \ to a DB instance)."
      operationId: POST_ApplyPendingMaintenanceAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ApplyPendingMaintenanceAction
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ApplyPendingMaintenanceActionMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplyPendingMaintenanceActionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
          description: ResourceNotFoundFault
      x-aws-operation-name: ApplyPendingMaintenanceAction
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CopyDBClusterParameterGroup:
    get:
      description: Copies the specified DB cluster parameter group.
      operationId: GET_CopyDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The identifier or Amazon Resource Name (ARN) for the source\
          \ DB cluster parameter group. For information about creating an ARN, see\
          \ <a href=\"https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"\
          > Constructing an Amazon Resource Name (ARN)</a>.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Must specify a valid DB cluster parameter group.</p> </li>\
          \ <li> <p>If the source DB cluster parameter group is in the same Amazon\
          \ Region as the copy, specify a valid DB parameter group identifier, for\
          \ example <code>my-db-cluster-param-group</code>, or a valid ARN.</p> </li>\
          \ <li> <p>If the source DB parameter group is in a different Amazon Region\
          \ than the copy, specify a valid DB cluster parameter group ARN, for example\
          \ <code>arn:aws:rds:us-east-1:123456789012:cluster-pg:custom-cluster-group1</code>.</p>\
          \ </li> </ul>"
        explode: true
        in: query
        name: SourceDBClusterParameterGroupIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The identifier for the copied DB cluster parameter group.</p>\
          \ <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank</p> </li>\
          \ <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li>\
          \ <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end\
          \ with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example:\
          \ <code>my-cluster-param-group1</code> </p>"
        explode: true
        in: query
        name: TargetDBClusterParameterGroupIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: A description for the copied DB cluster parameter group.
        explode: true
        in: query
        name: TargetDBClusterParameterGroupDescription
        required: true
        schema:
          type: string
        style: form
      - description: The tags to be assigned to the copied DB cluster parameter group.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CopyDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyDBClusterParameterGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
          description: DBParameterGroupQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
          description: DBParameterGroupAlreadyExistsFault
      x-aws-operation-name: CopyDBClusterParameterGroup
      x-accepts:
      - text/xml
    post:
      description: Copies the specified DB cluster parameter group.
      operationId: POST_CopyDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CopyDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CopyDBClusterParameterGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyDBClusterParameterGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
          description: DBParameterGroupQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
          description: DBParameterGroupAlreadyExistsFault
      x-aws-operation-name: CopyDBClusterParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CopyDBClusterSnapshot:
    get:
      description: "<p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster\
        \ snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code>\
        \ must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.</p>"
      operationId: GET_CopyDBClusterSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The identifier of the DB cluster snapshot to copy. This parameter\
          \ is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must specify\
          \ a valid system snapshot in the \"available\" state.</p> </li> <li> <p>Specify\
          \ a valid DB snapshot identifier.</p> </li> </ul> <p>Example: <code>my-cluster-snapshot1</code>\
          \ </p>"
        explode: true
        in: query
        name: SourceDBClusterSnapshotIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The identifier of the new DB cluster snapshot to create from\
          \ the source DB cluster snapshot. This parameter is not case-sensitive.</p>\
          \ <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers,\
          \ or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li>\
          \ <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>\
          \ </li> </ul> <p>Example: <code>my-cluster-snapshot2</code> </p>"
        explode: true
        in: query
        name: TargetDBClusterSnapshotIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The Amazon Amazon KMS key ID for an encrypted DB cluster\
          \ snapshot. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier,\
          \ or the KMS key alias for the KMS encryption key.</p> <p>If you copy an\
          \ encrypted DB cluster snapshot from your Amazon account, you can specify\
          \ a value for <code>KmsKeyId</code> to encrypt the copy with a new KMS encryption\
          \ key. If you don't specify a value for <code>KmsKeyId</code>, then the\
          \ copy of the DB cluster snapshot is encrypted with the same KMS key as\
          \ the source DB cluster snapshot.</p> <p>If you copy an encrypted DB cluster\
          \ snapshot that is shared from another Amazon account, then you must specify\
          \ a value for <code>KmsKeyId</code>.</p> <p> KMS encryption keys are specific\
          \ to the Amazon Region that they are created in, and you can't use encryption\
          \ keys from one Amazon Region in another Amazon Region.</p> <p>You cannot\
          \ encrypt an unencrypted DB cluster snapshot when you copy it. If you try\
          \ to copy an unencrypted DB cluster snapshot and specify a value for the\
          \ KmsKeyId parameter, an error is returned.</p>"
        explode: true
        in: query
        name: KmsKeyId
        required: false
        schema:
          type: string
        style: form
      - description: Not currently supported.
        explode: true
        in: query
        name: PreSignedUrl
        required: false
        schema:
          type: string
        style: form
      - description: "True to copy all tags from the source DB cluster snapshot to\
          \ the target DB cluster snapshot, and otherwise false. The default is false."
        explode: true
        in: query
        name: CopyTags
        required: false
        schema:
          type: boolean
        style: form
      - description: The tags to assign to the new DB cluster snapshot copy.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CopyDBClusterSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyDBClusterSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotAlreadyExistsFault'
          description: DBClusterSnapshotAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
      x-aws-operation-name: CopyDBClusterSnapshot
      x-accepts:
      - text/xml
    post:
      description: "<p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster\
        \ snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code>\
        \ must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.</p>"
      operationId: POST_CopyDBClusterSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CopyDBClusterSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CopyDBClusterSnapshotMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyDBClusterSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotAlreadyExistsFault'
          description: DBClusterSnapshotAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
      x-aws-operation-name: CopyDBClusterSnapshot
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CopyDBParameterGroup:
    get:
      description: Copies the specified DB parameter group.
      operationId: GET_CopyDBParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The identifier or ARN for the source DB parameter group.\
          \ For information about creating an ARN, see <a href=\"https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"\
          > Constructing an Amazon Resource Name (ARN)</a>.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Must specify a valid DB parameter group.</p> </li> <li> <p>Must\
          \ specify a valid DB parameter group identifier, for example <code>my-db-param-group</code>,\
          \ or a valid ARN.</p> </li> </ul>"
        explode: true
        in: query
        name: SourceDBParameterGroupIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The identifier for the copied DB parameter group.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Cannot be null, empty, or blank.</p> </li> <li> <p>Must contain\
          \ from 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character\
          \ must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain\
          \ two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-db-parameter-group</code>\
          \ </p>"
        explode: true
        in: query
        name: TargetDBParameterGroupIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: A description for the copied DB parameter group.
        explode: true
        in: query
        name: TargetDBParameterGroupDescription
        required: true
        schema:
          type: string
        style: form
      - description: The tags to be assigned to the copied DB parameter group.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CopyDBParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyDBParameterGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
          description: DBParameterGroupAlreadyExistsFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
          description: DBParameterGroupQuotaExceededFault
      x-aws-operation-name: CopyDBParameterGroup
      x-accepts:
      - text/xml
    post:
      description: Copies the specified DB parameter group.
      operationId: POST_CopyDBParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CopyDBParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CopyDBParameterGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyDBParameterGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
          description: DBParameterGroupAlreadyExistsFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
          description: DBParameterGroupQuotaExceededFault
      x-aws-operation-name: CopyDBParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateDBCluster:
    get:
      description: "<p>Creates a new Amazon Neptune DB cluster.</p> <p>You can use\
        \ the <code>ReplicationSourceIdentifier</code> parameter to create the DB\
        \ cluster as a Read Replica of another DB cluster or Amazon Neptune DB instance.</p>\
        \ <p>Note that when you create a new cluster using <code>CreateDBCluster</code>\
        \ directly, deletion protection is disabled by default (when you create a\
        \ new production cluster in the console, deletion protection is enabled by\
        \ default). You can only delete a DB cluster if its <code>DeletionProtection</code>\
        \ field is set to <code>false</code>.</p>"
      operationId: GET_CreateDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A list of EC2 Availability Zones that instances in the DB cluster
          can be created in.
        explode: true
        in: query
        name: AvailabilityZones
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: AvailabilityZone
          type: array
        style: form
      - description: "<p>The number of days for which automated backups are retained.\
          \ You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Must be a value from 1 to 35</p> </li> </ul>"
        explode: true
        in: query
        name: BackupRetentionPeriod
        required: false
        schema:
          type: integer
        style: form
      - description: ' <i>(Not supported by Neptune)</i> '
        explode: true
        in: query
        name: CharacterSetName
        required: false
        schema:
          type: string
        style: form
      - description: " <i>If set to <code>true</code>, tags are copied to any snapshot\
          \ of the DB cluster that is created.</i> "
        explode: true
        in: query
        name: CopyTagsToSnapshot
        required: false
        schema:
          type: boolean
        style: form
      - description: "The name for your database of up to 64 alpha-numeric characters.\
          \ If you do not provide a name, Amazon Neptune will not create a database\
          \ in the DB cluster you are creating."
        explode: true
        in: query
        name: DatabaseName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The DB cluster identifier. This parameter is stored as a\
          \ lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from\
          \ 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character\
          \ must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain\
          \ two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code>\
          \ </p>"
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p> The name of the DB cluster parameter group to associate\
          \ with this DB cluster. If this argument is omitted, the default is used.</p>\
          \ <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an\
          \ existing DBClusterParameterGroup.</p> </li> </ul>"
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: A list of EC2 VPC security groups to associate with this DB cluster.
        explode: true
        in: query
        name: VpcSecurityGroupIds
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: VpcSecurityGroupId
          type: array
        style: form
      - description: "<p>A DB subnet group to associate with this DB cluster.</p>\
          \ <p>Constraints: Must match the name of an existing DBSubnetGroup. Must\
          \ not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        explode: true
        in: query
        name: DBSubnetGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The name of the database engine to be used for this DB cluster.</p>\
          \ <p>Valid Values: <code>neptune</code> </p>"
        explode: true
        in: query
        name: Engine
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The version number of the database engine to use for the\
          \ new DB cluster.</p> <p>Example: <code>1.0.2.1</code> </p>"
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The port number on which the instances in the DB cluster\
          \ accept connections.</p> <p> Default: <code>8182</code> </p>"
        explode: true
        in: query
        name: Port
        required: false
        schema:
          type: integer
        style: form
      - description: Not supported by Neptune.
        explode: true
        in: query
        name: MasterUsername
        required: false
        schema:
          type: string
        style: form
      - description: Not supported by Neptune.
        explode: true
        in: query
        name: MasterUserPassword
        required: false
        schema:
          type: string
        style: form
      - description: ' <i>(Not supported by Neptune)</i> '
        explode: true
        in: query
        name: OptionGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The daily time range during which automated backups are created\
          \ if automated backups are enabled using the <code>BackupRetentionPeriod</code>\
          \ parameter.</p> <p>The default is a 30-minute window selected at random\
          \ from an 8-hour block of time for each Amazon Region. To see the time blocks\
          \ available, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html\"\
          > Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Neptune\
          \ User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format\
          \ <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in Universal Coordinated\
          \ Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance\
          \ window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>"
        explode: true
        in: query
        name: PreferredBackupWindow
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The weekly time range during which system maintenance can\
          \ occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>\
          \ </p> <p>The default is a 30-minute window selected at random from an 8-hour\
          \ block of time for each Amazon Region, occurring on a random day of the\
          \ week. To see the time blocks available, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html\"\
          > Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Neptune\
          \ User Guide.</i> </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p>\
          \ <p>Constraints: Minimum 30-minute window.</p>"
        explode: true
        in: query
        name: PreferredMaintenanceWindow
        required: false
        schema:
          type: string
        style: form
      - description: The Amazon Resource Name (ARN) of the source DB instance or DB
          cluster if this DB cluster is created as a Read Replica.
        explode: true
        in: query
        name: ReplicationSourceIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: The tags to assign to the new DB cluster.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - description: Specifies whether the DB cluster is encrypted.
        explode: true
        in: query
        name: StorageEncrypted
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The Amazon KMS key identifier for an encrypted DB cluster.</p>\
          \ <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS\
          \ encryption key. If you are creating a DB cluster with the same Amazon\
          \ account that owns the KMS encryption key used to encrypt the new DB cluster,\
          \ then you can use the KMS key alias instead of the ARN for the KMS encryption\
          \ key.</p> <p>If an encryption key is not specified in <code>KmsKeyId</code>:</p>\
          \ <ul> <li> <p>If <code>ReplicationSourceIdentifier</code> identifies an\
          \ encrypted source, then Amazon Neptune will use the encryption key used\
          \ to encrypt the source. Otherwise, Amazon Neptune will use your default\
          \ encryption key.</p> </li> <li> <p>If the <code>StorageEncrypted</code>\
          \ parameter is true and <code>ReplicationSourceIdentifier</code> is not\
          \ specified, then Amazon Neptune will use your default encryption key.</p>\
          \ </li> </ul> <p>Amazon KMS creates the default encryption key for your\
          \ Amazon account. Your Amazon account has a different default encryption\
          \ key for each Amazon Region.</p> <p>If you create a Read Replica of an\
          \ encrypted DB cluster in another Amazon Region, you must set <code>KmsKeyId</code>\
          \ to a KMS key ID that is valid in the destination Amazon Region. This key\
          \ is used to encrypt the Read Replica in that Amazon Region.</p>"
        explode: true
        in: query
        name: KmsKeyId
        required: false
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: PreSignedUrl
        required: false
        schema:
          type: string
        style: form
      - description: "<p>If set to <code>true</code>, enables Amazon Identity and\
          \ Access Management (IAM) authentication for the entire DB cluster (this\
          \ cannot be set at an instance level).</p> <p>Default: <code>false</code>.</p>"
        explode: true
        in: query
        name: EnableIAMDatabaseAuthentication
        required: false
        schema:
          type: boolean
        style: form
      - description: The list of log types that need to be enabled for exporting to
          CloudWatch Logs.
        explode: true
        in: query
        name: EnableCloudwatchLogsExports
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - description: "A value that indicates whether the DB cluster has deletion protection\
          \ enabled. The database can't be deleted when deletion protection is enabled.\
          \ By default, deletion protection is enabled."
        explode: true
        in: query
        name: DeletionProtection
        required: false
        schema:
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: ServerlessV2ScalingConfiguration
        required: false
        schema:
          $ref: '#/components/schemas/GET_CreateDBCluster_ServerlessV2ScalingConfiguration_parameter'
        style: form
      - description: The ID of the Neptune global database to which this new DB cluster
          should be added.
        explode: true
        in: query
        name: GlobalClusterIdentifier
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[A-Za-z][0-9A-Za-z-:._]*"
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
          description: DBClusterAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientStorageClusterCapacityFault'
          description: InsufficientStorageClusterCapacityFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterQuotaExceededFault'
          description: DBClusterQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
          description: InvalidDBSubnetGroupStateFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNotFoundFault'
          description: DBClusterParameterGroupNotFoundFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
          description: DBSubnetGroupDoesNotCoverEnoughAZs
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "496":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
      x-aws-operation-name: CreateDBCluster
      x-accepts:
      - text/xml
    post:
      description: "<p>Creates a new Amazon Neptune DB cluster.</p> <p>You can use\
        \ the <code>ReplicationSourceIdentifier</code> parameter to create the DB\
        \ cluster as a Read Replica of another DB cluster or Amazon Neptune DB instance.</p>\
        \ <p>Note that when you create a new cluster using <code>CreateDBCluster</code>\
        \ directly, deletion protection is disabled by default (when you create a\
        \ new production cluster in the console, deletion protection is enabled by\
        \ default). You can only delete a DB cluster if its <code>DeletionProtection</code>\
        \ field is set to <code>false</code>.</p>"
      operationId: POST_CreateDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
          description: DBClusterAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientStorageClusterCapacityFault'
          description: InsufficientStorageClusterCapacityFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterQuotaExceededFault'
          description: DBClusterQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
          description: InvalidDBSubnetGroupStateFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNotFoundFault'
          description: DBClusterParameterGroupNotFoundFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
          description: DBSubnetGroupDoesNotCoverEnoughAZs
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "496":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
      x-aws-operation-name: CreateDBCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateDBClusterEndpoint:
    get:
      description: Creates a new custom endpoint and associates it with an Amazon
        Neptune DB cluster.
      operationId: GET_CreateDBClusterEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The DB cluster identifier of the DB cluster associated with the
          endpoint. This parameter is stored as a lowercase string.
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: The identifier to use for the new endpoint. This parameter is
          stored as a lowercase string.
        explode: true
        in: query
        name: DBClusterEndpointIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>,\
          \ <code>ANY</code>."
        explode: true
        in: query
        name: EndpointType
        required: true
        schema:
          type: string
        style: form
      - description: List of DB instance identifiers that are part of the custom endpoint
          group.
        explode: true
        in: query
        name: StaticMembers
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - description: List of DB instance identifiers that aren't part of the custom
          endpoint group. All other eligible instances are reachable through the custom
          endpoint. Only relevant if the list of static members is empty.
        explode: true
        in: query
        name: ExcludedMembers
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - description: The tags to be assigned to the Amazon Neptune resource.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBClusterEndpoint
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBClusterEndpointOutput'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterEndpointQuotaExceededFault'
          description: DBClusterEndpointQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterEndpointAlreadyExistsFault'
          description: DBClusterEndpointAlreadyExistsFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: CreateDBClusterEndpoint
      x-accepts:
      - text/xml
    post:
      description: Creates a new custom endpoint and associates it with an Amazon
        Neptune DB cluster.
      operationId: POST_CreateDBClusterEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBClusterEndpoint
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBClusterEndpointMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBClusterEndpointOutput'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterEndpointQuotaExceededFault'
          description: DBClusterEndpointQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterEndpointAlreadyExistsFault'
          description: DBClusterEndpointAlreadyExistsFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: CreateDBClusterEndpoint
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateDBClusterParameterGroup:
    get:
      description: "<p>Creates a new DB cluster parameter group.</p> <p>Parameters\
        \ in a DB cluster parameter group apply to all of the instances in a DB cluster.</p>\
        \ <p> A DB cluster parameter group is initially created with the default parameters\
        \ for the database engine used by instances in the DB cluster. To provide\
        \ custom values for any of the parameters, you must modify the group after\
        \ creating it using <a>ModifyDBClusterParameterGroup</a>. Once you've created\
        \ a DB cluster parameter group, you need to associate it with your DB cluster\
        \ using <a>ModifyDBCluster</a>. When you associate a new DB cluster parameter\
        \ group with a running DB cluster, you need to reboot the DB instances in\
        \ the DB cluster without failover for the new DB cluster parameter group and\
        \ associated settings to take effect.</p> <important> <p>After you create\
        \ a DB cluster parameter group, you should wait at least 5 minutes before\
        \ creating your first DB cluster that uses that DB cluster parameter group\
        \ as the default parameter group. This allows Amazon Neptune to fully complete\
        \ the create action before the DB cluster parameter group is used as the default\
        \ for a new DB cluster. This is especially important for parameters that are\
        \ critical when creating the default database for a DB cluster, such as the\
        \ character set for the default database defined by the <code>character_set_database</code>\
        \ parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"\
        https://console.aws.amazon.com/rds/\">Amazon Neptune console</a> or the <a>DescribeDBClusterParameters</a>\
        \ command to verify that your DB cluster parameter group has been created\
        \ or modified.</p> </important>"
      operationId: GET_CreateDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The name of the DB cluster parameter group.</p> <p>Constraints:</p>
          <ul> <li> <p>Must match the name of an existing DBClusterParameterGroup.</p>
          </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note>
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - description: "The DB cluster parameter group family name. A DB cluster parameter\
          \ group can be associated with one and only one DB cluster parameter group\
          \ family, and can be applied only to a DB cluster running a database engine\
          \ and engine version compatible with that DB cluster parameter group family."
        explode: true
        in: query
        name: DBParameterGroupFamily
        required: true
        schema:
          type: string
        style: form
      - description: The description for the DB cluster parameter group.
        explode: true
        in: query
        name: Description
        required: true
        schema:
          type: string
        style: form
      - description: The tags to be assigned to the new DB cluster parameter group.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBClusterParameterGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
          description: DBParameterGroupQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
          description: DBParameterGroupAlreadyExistsFault
      x-aws-operation-name: CreateDBClusterParameterGroup
      x-accepts:
      - text/xml
    post:
      description: "<p>Creates a new DB cluster parameter group.</p> <p>Parameters\
        \ in a DB cluster parameter group apply to all of the instances in a DB cluster.</p>\
        \ <p> A DB cluster parameter group is initially created with the default parameters\
        \ for the database engine used by instances in the DB cluster. To provide\
        \ custom values for any of the parameters, you must modify the group after\
        \ creating it using <a>ModifyDBClusterParameterGroup</a>. Once you've created\
        \ a DB cluster parameter group, you need to associate it with your DB cluster\
        \ using <a>ModifyDBCluster</a>. When you associate a new DB cluster parameter\
        \ group with a running DB cluster, you need to reboot the DB instances in\
        \ the DB cluster without failover for the new DB cluster parameter group and\
        \ associated settings to take effect.</p> <important> <p>After you create\
        \ a DB cluster parameter group, you should wait at least 5 minutes before\
        \ creating your first DB cluster that uses that DB cluster parameter group\
        \ as the default parameter group. This allows Amazon Neptune to fully complete\
        \ the create action before the DB cluster parameter group is used as the default\
        \ for a new DB cluster. This is especially important for parameters that are\
        \ critical when creating the default database for a DB cluster, such as the\
        \ character set for the default database defined by the <code>character_set_database</code>\
        \ parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"\
        https://console.aws.amazon.com/rds/\">Amazon Neptune console</a> or the <a>DescribeDBClusterParameters</a>\
        \ command to verify that your DB cluster parameter group has been created\
        \ or modified.</p> </important>"
      operationId: POST_CreateDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBClusterParameterGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBClusterParameterGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
          description: DBParameterGroupQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
          description: DBParameterGroupAlreadyExistsFault
      x-aws-operation-name: CreateDBClusterParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateDBClusterSnapshot:
    get:
      description: Creates a snapshot of a DB cluster.
      operationId: GET_CreateDBClusterSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The identifier of the DB cluster snapshot. This parameter\
          \ is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must\
          \ contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First\
          \ character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen\
          \ or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1-snapshot1</code>\
          \ </p>"
        explode: true
        in: query
        name: DBClusterSnapshotIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The identifier of the DB cluster to create a snapshot for.\
          \ This parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li>\
          \ <p>Must match the identifier of an existing DBCluster.</p> </li> </ul>\
          \ <p>Example: <code>my-cluster1</code> </p>"
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: The tags to be assigned to the DB cluster snapshot.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBClusterSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBClusterSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotAlreadyExistsFault'
          description: DBClusterSnapshotAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
      x-aws-operation-name: CreateDBClusterSnapshot
      x-accepts:
      - text/xml
    post:
      description: Creates a snapshot of a DB cluster.
      operationId: POST_CreateDBClusterSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBClusterSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBClusterSnapshotMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBClusterSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotAlreadyExistsFault'
          description: DBClusterSnapshotAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
      x-aws-operation-name: CreateDBClusterSnapshot
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateDBInstance:
    get:
      description: Creates a new DB instance.
      operationId: GET_CreateDBInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Not supported.
        explode: true
        in: query
        name: DBName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The DB instance identifier. This parameter is stored as a\
          \ lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from\
          \ 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First character\
          \ must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain\
          \ two consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code>\
          \ </p>"
        explode: true
        in: query
        name: DBInstanceIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: Not supported by Neptune.
        explode: true
        in: query
        name: AllocatedStorage
        required: false
        schema:
          type: integer
        style: form
      - description: "The compute and memory capacity of the DB instance, for example,\
          \ <code>db.m4.large</code>. Not all DB instance classes are available in\
          \ all Amazon Regions."
        explode: true
        in: query
        name: DBInstanceClass
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The name of the database engine to be used for this instance.</p>\
          \ <p>Valid Values: <code>neptune</code> </p>"
        explode: true
        in: query
        name: Engine
        required: true
        schema:
          type: string
        style: form
      - description: Not supported by Neptune.
        explode: true
        in: query
        name: MasterUsername
        required: false
        schema:
          type: string
        style: form
      - description: Not supported by Neptune.
        explode: true
        in: query
        name: MasterUserPassword
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A list of DB security groups to associate with this DB instance.</p>\
          \ <p>Default: The default DB security group for the database engine.</p>"
        explode: true
        in: query
        name: DBSecurityGroups
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: DBSecurityGroupName
          type: array
        style: form
      - description: "<p>A list of EC2 VPC security groups to associate with this\
          \ DB instance.</p> <p>Not applicable. The associated list of EC2 VPC security\
          \ groups is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p>\
          \ <p>Default: The default EC2 VPC security group for the DB subnet group's\
          \ VPC.</p>"
        explode: true
        in: query
        name: VpcSecurityGroupIds
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: VpcSecurityGroupId
          type: array
        style: form
      - description: "<p> The EC2 Availability Zone that the DB instance is created\
          \ in</p> <p>Default: A random, system-chosen Availability Zone in the endpoint's\
          \ Amazon Region.</p> <p> Example: <code>us-east-1d</code> </p> <p> Constraint:\
          \ The AvailabilityZone parameter can't be specified if the MultiAZ parameter\
          \ is set to <code>true</code>. The specified Availability Zone must be in\
          \ the same Amazon Region as the current endpoint.</p>"
        explode: true
        in: query
        name: AvailabilityZone
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A DB subnet group to associate with this DB instance.</p>\
          \ <p>If there is no DB subnet group, then it is a non-VPC DB instance.</p>"
        explode: true
        in: query
        name: DBSubnetGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The time range each week during which system maintenance\
          \ can occur, in Universal Coordinated Time (UTC).</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>\
          \ </p> <p>The default is a 30-minute window selected at random from an 8-hour\
          \ block of time for each Amazon Region, occurring on a random day of the\
          \ week.</p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> <p>Constraints:\
          \ Minimum 30-minute window.</p>"
        explode: true
        in: query
        name: PreferredMaintenanceWindow
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The name of the DB parameter group to associate with this\
          \ DB instance. If this argument is omitted, the default DBParameterGroup\
          \ for the specified engine is used.</p> <p>Constraints:</p> <ul> <li> <p>Must\
          \ be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character\
          \ must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain\
          \ two consecutive hyphens</p> </li> </ul>"
        explode: true
        in: query
        name: DBParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The number of days for which automated backups are retained.</p>\
          \ <p>Not applicable. The retention period for automated backups is managed\
          \ by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p>\
          \ <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from\
          \ 0 to 35</p> </li> <li> <p>Cannot be set to 0 if the DB instance is a source\
          \ to Read Replicas</p> </li> </ul>"
        explode: true
        in: query
        name: BackupRetentionPeriod
        required: false
        schema:
          type: integer
        style: form
      - description: "<p> The daily time range during which automated backups are\
          \ created.</p> <p>Not applicable. The daily time range for creating automated\
          \ backups is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p>"
        explode: true
        in: query
        name: PreferredBackupWindow
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The port number on which the database accepts connections.</p>\
          \ <p>Not applicable. The port is managed by the DB cluster. For more information,\
          \ see <a>CreateDBCluster</a>.</p> <p> Default: <code>8182</code> </p> <p>Type:\
          \ Integer</p>"
        explode: true
        in: query
        name: Port
        required: false
        schema:
          type: integer
        style: form
      - description: Specifies if the DB instance is a Multi-AZ deployment. You can't
          set the AvailabilityZone parameter if the MultiAZ parameter is set to true.
        explode: true
        in: query
        name: MultiAZ
        required: false
        schema:
          type: boolean
        style: form
      - description: "The version number of the database engine to use. Currently,\
          \ setting this parameter has no effect."
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: "<p>Indicates that minor engine upgrades are applied automatically\
          \ to the DB instance during the maintenance window.</p> <p>Default: <code>true</code>\
          \ </p>"
        explode: true
        in: query
        name: AutoMinorVersionUpgrade
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>License model information for this DB instance.</p> <p> Valid\
          \ values: <code>license-included</code> | <code>bring-your-own-license</code>\
          \ | <code>general-public-license</code> </p>"
        explode: true
        in: query
        name: LicenseModel
        required: false
        schema:
          type: string
        style: form
      - description: The amount of Provisioned IOPS (input/output operations per second)
          to be initially allocated for the DB instance.
        explode: true
        in: query
        name: Iops
        required: false
        schema:
          type: integer
        style: form
      - description: ' <i>(Not supported by Neptune)</i> '
        explode: true
        in: query
        name: OptionGroupName
        required: false
        schema:
          type: string
        style: form
      - description: ' <i>(Not supported by Neptune)</i> '
        explode: true
        in: query
        name: CharacterSetName
        required: false
        schema:
          type: string
        style: form
      - description: This flag should no longer be used.
        explode: true
        in: query
        name: PubliclyAccessible
        required: false
        schema:
          type: boolean
        style: form
      - description: The tags to assign to the new instance.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - description: "<p>The identifier of the DB cluster that the instance will belong\
          \ to.</p> <p>For information on creating a DB cluster, see <a>CreateDBCluster</a>.</p>\
          \ <p>Type: String</p>"
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: <p>Specifies the storage type to be associated with the DB instance.</p>
          <p>Not applicable. Storage is managed by the DB Cluster.</p>
        explode: true
        in: query
        name: StorageType
        required: false
        schema:
          type: string
        style: form
      - description: The ARN from the key store with which to associate the instance
          for TDE encryption.
        explode: true
        in: query
        name: TdeCredentialArn
        required: false
        schema:
          type: string
        style: form
      - description: The password for the given ARN from the key store in order to
          access the device.
        explode: true
        in: query
        name: TdeCredentialPassword
        required: false
        schema:
          type: string
        style: form
      - description: "<p>Specifies whether the DB instance is encrypted.</p> <p>Not\
          \ applicable. The encryption for DB instances is managed by the DB cluster.\
          \ For more information, see <a>CreateDBCluster</a>.</p> <p>Default: false</p>"
        explode: true
        in: query
        name: StorageEncrypted
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The Amazon KMS key identifier for an encrypted DB instance.</p>\
          \ <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS\
          \ encryption key. If you are creating a DB instance with the same Amazon\
          \ account that owns the KMS encryption key used to encrypt the new DB instance,\
          \ then you can use the KMS key alias instead of the ARN for the KM encryption\
          \ key.</p> <p>Not applicable. The KMS key identifier is managed by the DB\
          \ cluster. For more information, see <a>CreateDBCluster</a>.</p> <p>If the\
          \ <code>StorageEncrypted</code> parameter is true, and you do not specify\
          \ a value for the <code>KmsKeyId</code> parameter, then Amazon Neptune will\
          \ use your default encryption key. Amazon KMS creates the default encryption\
          \ key for your Amazon account. Your Amazon account has a different default\
          \ encryption key for each Amazon Region.</p>"
        explode: true
        in: query
        name: KmsKeyId
        required: false
        schema:
          type: string
        style: form
      - description: Specify the Active Directory Domain to create the instance in.
        explode: true
        in: query
        name: Domain
        required: false
        schema:
          type: string
        style: form
      - description: "True to copy all tags from the DB instance to snapshots of the\
          \ DB instance, and otherwise false. The default is false."
        explode: true
        in: query
        name: CopyTagsToSnapshot
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The interval, in seconds, between points when Enhanced Monitoring\
          \ metrics are collected for the DB instance. To disable collecting Enhanced\
          \ Monitoring metrics, specify 0. The default is 0.</p> <p>If <code>MonitoringRoleArn</code>\
          \ is specified, then you must also set <code>MonitoringInterval</code> to\
          \ a value other than 0.</p> <p>Valid Values: <code>0, 1, 5, 10, 15, 30,\
          \ 60</code> </p>"
        explode: true
        in: query
        name: MonitoringInterval
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>The ARN for the IAM role that permits Neptune to send enhanced\
          \ monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>.</p>\
          \ <p>If <code>MonitoringInterval</code> is set to a value other than 0,\
          \ then you must supply a <code>MonitoringRoleArn</code> value.</p>"
        explode: true
        in: query
        name: MonitoringRoleArn
        required: false
        schema:
          type: string
        style: form
      - description: Specify the name of the IAM role to be used when making API calls
          to the Directory Service.
        explode: true
        in: query
        name: DomainIAMRoleName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A value that specifies the order in which an Read Replica\
          \ is promoted to the primary instance after a failure of the existing primary\
          \ instance. </p> <p>Default: 1</p> <p>Valid Values: 0 - 15</p>"
        explode: true
        in: query
        name: PromotionTier
        required: false
        schema:
          type: integer
        style: form
      - description: The time zone of the DB instance.
        explode: true
        in: query
        name: Timezone
        required: false
        schema:
          type: string
        style: form
      - description: Not supported by Neptune (ignored).
        explode: true
        in: query
        name: EnableIAMDatabaseAuthentication
        required: false
        schema:
          type: boolean
        style: form
      - description: ' <i>(Not supported by Neptune)</i> '
        explode: true
        in: query
        name: EnablePerformanceInsights
        required: false
        schema:
          type: boolean
        style: form
      - description: ' <i>(Not supported by Neptune)</i> '
        explode: true
        in: query
        name: PerformanceInsightsKMSKeyId
        required: false
        schema:
          type: string
        style: form
      - description: The list of log types that need to be enabled for exporting to
          CloudWatch Logs.
        explode: true
        in: query
        name: EnableCloudwatchLogsExports
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - description: "<p>A value that indicates whether the DB instance has deletion\
          \ protection enabled. The database can't be deleted when deletion protection\
          \ is enabled. By default, deletion protection is disabled. See <a href=\"\
          https://docs.aws.amazon.com/neptune/latest/userguide/manage-console-instances-delete.html\"\
          >Deleting a DB Instance</a>.</p> <p>DB instances in a DB cluster can be\
          \ deleted even when deletion protection is enabled in their parent DB cluster.</p>"
        explode: true
        in: query
        name: DeletionProtection
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBInstance
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBInstanceResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
          description: DBInstanceAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
          description: InsufficientDBInstanceCapacityFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
          description: DBSecurityGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InstanceQuotaExceededFault'
          description: InstanceQuotaExceededFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
          description: DBSubnetGroupDoesNotCoverEnoughAZs
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
          description: ProvisionedIopsNotAvailableInAZFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
          description: OptionGroupNotFoundFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageTypeNotSupportedFault'
          description: StorageTypeNotSupportedFault
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
          description: AuthorizationNotFoundFault
        "496":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
        "497":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DomainNotFoundFault'
          description: DomainNotFoundFault
      x-aws-operation-name: CreateDBInstance
      x-accepts:
      - text/xml
    post:
      description: Creates a new DB instance.
      operationId: POST_CreateDBInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBInstance
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBInstanceMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBInstanceResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
          description: DBInstanceAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
          description: InsufficientDBInstanceCapacityFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
          description: DBSecurityGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InstanceQuotaExceededFault'
          description: InstanceQuotaExceededFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
          description: DBSubnetGroupDoesNotCoverEnoughAZs
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
          description: ProvisionedIopsNotAvailableInAZFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
          description: OptionGroupNotFoundFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageTypeNotSupportedFault'
          description: StorageTypeNotSupportedFault
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
          description: AuthorizationNotFoundFault
        "496":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
        "497":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DomainNotFoundFault'
          description: DomainNotFoundFault
      x-aws-operation-name: CreateDBInstance
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateDBParameterGroup:
    get:
      description: "<p>Creates a new DB parameter group.</p> <p>A DB parameter group\
        \ is initially created with the default parameters for the database engine\
        \ used by the DB instance. To provide custom values for any of the parameters,\
        \ you must modify the group after creating it using <i>ModifyDBParameterGroup</i>.\
        \ Once you've created a DB parameter group, you need to associate it with\
        \ your DB instance using <i>ModifyDBInstance</i>. When you associate a new\
        \ DB parameter group with a running DB instance, you need to reboot the DB\
        \ instance without failover for the new DB parameter group and associated\
        \ settings to take effect.</p> <important> <p>After you create a DB parameter\
        \ group, you should wait at least 5 minutes before creating your first DB\
        \ instance that uses that DB parameter group as the default parameter group.\
        \ This allows Amazon Neptune to fully complete the create action before the\
        \ parameter group is used as the default for a new DB instance. This is especially\
        \ important for parameters that are critical when creating the default database\
        \ for a DB instance, such as the character set for the default database defined\
        \ by the <code>character_set_database</code> parameter. You can use the <i>Parameter\
        \ Groups</i> option of the Amazon Neptune console or the <i>DescribeDBParameters</i>\
        \ command to verify that your DB parameter group has been created or modified.</p>\
        \ </important>"
      operationId: GET_CreateDBParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of the DB parameter group.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li>\
          \ <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end\
          \ with a hyphen or contain two consecutive hyphens</p> </li> </ul> <note>\
          \ <p>This value is stored as a lowercase string.</p> </note>"
        explode: true
        in: query
        name: DBParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - description: "The DB parameter group family name. A DB parameter group can\
          \ be associated with one and only one DB parameter group family, and can\
          \ be applied only to a DB instance running a database engine and engine\
          \ version compatible with that DB parameter group family."
        explode: true
        in: query
        name: DBParameterGroupFamily
        required: true
        schema:
          type: string
        style: form
      - description: The description for the DB parameter group.
        explode: true
        in: query
        name: Description
        required: true
        schema:
          type: string
        style: form
      - description: The tags to be assigned to the new DB parameter group.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBParameterGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
          description: DBParameterGroupQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
          description: DBParameterGroupAlreadyExistsFault
      x-aws-operation-name: CreateDBParameterGroup
      x-accepts:
      - text/xml
    post:
      description: "<p>Creates a new DB parameter group.</p> <p>A DB parameter group\
        \ is initially created with the default parameters for the database engine\
        \ used by the DB instance. To provide custom values for any of the parameters,\
        \ you must modify the group after creating it using <i>ModifyDBParameterGroup</i>.\
        \ Once you've created a DB parameter group, you need to associate it with\
        \ your DB instance using <i>ModifyDBInstance</i>. When you associate a new\
        \ DB parameter group with a running DB instance, you need to reboot the DB\
        \ instance without failover for the new DB parameter group and associated\
        \ settings to take effect.</p> <important> <p>After you create a DB parameter\
        \ group, you should wait at least 5 minutes before creating your first DB\
        \ instance that uses that DB parameter group as the default parameter group.\
        \ This allows Amazon Neptune to fully complete the create action before the\
        \ parameter group is used as the default for a new DB instance. This is especially\
        \ important for parameters that are critical when creating the default database\
        \ for a DB instance, such as the character set for the default database defined\
        \ by the <code>character_set_database</code> parameter. You can use the <i>Parameter\
        \ Groups</i> option of the Amazon Neptune console or the <i>DescribeDBParameters</i>\
        \ command to verify that your DB parameter group has been created or modified.</p>\
        \ </important>"
      operationId: POST_CreateDBParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBParameterGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBParameterGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
          description: DBParameterGroupQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
          description: DBParameterGroupAlreadyExistsFault
      x-aws-operation-name: CreateDBParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateDBSubnetGroup:
    get:
      description: Creates a new DB subnet group. DB subnet groups must contain at
        least one subnet in at least two AZs in the Amazon Region.
      operationId: GET_CreateDBSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name for the DB subnet group. This value is stored as\
          \ a lowercase string.</p> <p>Constraints: Must contain no more than 255\
          \ letters, numbers, periods, underscores, spaces, or hyphens. Must not be\
          \ default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        explode: true
        in: query
        name: DBSubnetGroupName
        required: true
        schema:
          type: string
        style: form
      - description: The description for the DB subnet group.
        explode: true
        in: query
        name: DBSubnetGroupDescription
        required: true
        schema:
          type: string
        style: form
      - description: The EC2 Subnet IDs for the DB subnet group.
        explode: true
        in: query
        name: SubnetIds
        required: true
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: SubnetIdentifier
          type: array
        style: form
      - description: The tags to be assigned to the new DB subnet group.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBSubnetGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupAlreadyExistsFault'
          description: DBSubnetGroupAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupQuotaExceededFault'
          description: DBSubnetGroupQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'
          description: DBSubnetQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
          description: DBSubnetGroupDoesNotCoverEnoughAZs
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
      x-aws-operation-name: CreateDBSubnetGroup
      x-accepts:
      - text/xml
    post:
      description: Creates a new DB subnet group. DB subnet groups must contain at
        least one subnet in at least two AZs in the Amazon Region.
      operationId: POST_CreateDBSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBSubnetGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBSubnetGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupAlreadyExistsFault'
          description: DBSubnetGroupAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupQuotaExceededFault'
          description: DBSubnetGroupQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'
          description: DBSubnetQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
          description: DBSubnetGroupDoesNotCoverEnoughAZs
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
      x-aws-operation-name: CreateDBSubnetGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateEventSubscription:
    get:
      description: "<p>Creates an event notification subscription. This action requires\
        \ a topic ARN (Amazon Resource Name) created by either the Neptune console,\
        \ the SNS console, or the SNS API. To obtain an ARN with SNS, you must create\
        \ a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in\
        \ the SNS console.</p> <p>You can specify the type of source (SourceType)\
        \ you want to be notified of, provide a list of Neptune sources (SourceIds)\
        \ that triggers the events, and provide a list of event categories (EventCategories)\
        \ for events you want to be notified of. For example, you can specify SourceType\
        \ = db-instance, SourceIds = mydbinstance1, mydbinstance2 and EventCategories\
        \ = Availability, Backup.</p> <p>If you specify both the SourceType and SourceIds,\
        \ such as SourceType = db-instance and SourceIdentifier = myDBInstance1, you\
        \ are notified of all the db-instance events for the specified source. If\
        \ you specify a SourceType but do not specify a SourceIdentifier, you receive\
        \ notice of the events for that source type for all your Neptune sources.\
        \ If you do not specify either the SourceType nor the SourceIdentifier, you\
        \ are notified of events generated from all Neptune sources belonging to your\
        \ customer account.</p>"
      operationId: GET_CreateEventSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of the subscription.</p> <p>Constraints: The name\
          \ must be less than 255 characters.</p>"
        explode: true
        in: query
        name: SubscriptionName
        required: true
        schema:
          type: string
        style: form
      - description: The Amazon Resource Name (ARN) of the SNS topic created for event
          notification. The ARN is created by Amazon SNS when you create a topic and
          subscribe to it.
        explode: true
        in: query
        name: SnsTopicArn
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The type of source that is generating the events. For example,\
          \ if you want to be notified of events generated by a DB instance, you would\
          \ set this parameter to db-instance. if this value is not specified, all\
          \ events are returned.</p> <p>Valid values: <code>db-instance</code> | <code>db-cluster</code>\
          \ | <code>db-parameter-group</code> | <code>db-security-group</code> | <code>db-snapshot</code>\
          \ | <code>db-cluster-snapshot</code> </p>"
        explode: true
        in: query
        name: SourceType
        required: false
        schema:
          type: string
        style: form
      - description: ' A list of event categories for a SourceType that you want to
          subscribe to. You can see a list of the categories for a given SourceType
          by using the <b>DescribeEventCategories</b> action.'
        explode: true
        in: query
        name: EventCategories
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: EventCategory
          type: array
        style: form
      - description: "<p>The list of identifiers of the event sources for which events\
          \ are returned. If not specified, then all sources are included in the response.\
          \ An identifier must begin with a letter and must contain only ASCII letters,\
          \ digits, and hyphens; it can't end with a hyphen or contain two consecutive\
          \ hyphens.</p> <p>Constraints:</p> <ul> <li> <p>If SourceIds are supplied,\
          \ SourceType must also be provided.</p> </li> <li> <p>If the source type\
          \ is a DB instance, then a <code>DBInstanceIdentifier</code> must be supplied.</p>\
          \ </li> <li> <p>If the source type is a DB security group, a <code>DBSecurityGroupName</code>\
          \ must be supplied.</p> </li> <li> <p>If the source type is a DB parameter\
          \ group, a <code>DBParameterGroupName</code> must be supplied.</p> </li>\
          \ <li> <p>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code>\
          \ must be supplied.</p> </li> </ul>"
        explode: true
        in: query
        name: SourceIds
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: SourceId
          type: array
        style: form
      - description: " A Boolean value; set to <b>true</b> to activate the subscription,\
          \ set to <b>false</b> to create the subscription but not active it."
        explode: true
        in: query
        name: Enabled
        required: false
        schema:
          type: boolean
        style: form
      - description: The tags to be applied to the new event subscription.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateEventSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateEventSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'
          description: EventSubscriptionQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionAlreadyExistFault'
          description: SubscriptionAlreadyExistFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
          description: SNSInvalidTopicFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
          description: SNSNoAuthorizationFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
          description: SNSTopicArnNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
          description: SubscriptionCategoryNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
          description: SourceNotFoundFault
      x-aws-operation-name: CreateEventSubscription
      x-accepts:
      - text/xml
    post:
      description: "<p>Creates an event notification subscription. This action requires\
        \ a topic ARN (Amazon Resource Name) created by either the Neptune console,\
        \ the SNS console, or the SNS API. To obtain an ARN with SNS, you must create\
        \ a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in\
        \ the SNS console.</p> <p>You can specify the type of source (SourceType)\
        \ you want to be notified of, provide a list of Neptune sources (SourceIds)\
        \ that triggers the events, and provide a list of event categories (EventCategories)\
        \ for events you want to be notified of. For example, you can specify SourceType\
        \ = db-instance, SourceIds = mydbinstance1, mydbinstance2 and EventCategories\
        \ = Availability, Backup.</p> <p>If you specify both the SourceType and SourceIds,\
        \ such as SourceType = db-instance and SourceIdentifier = myDBInstance1, you\
        \ are notified of all the db-instance events for the specified source. If\
        \ you specify a SourceType but do not specify a SourceIdentifier, you receive\
        \ notice of the events for that source type for all your Neptune sources.\
        \ If you do not specify either the SourceType nor the SourceIdentifier, you\
        \ are notified of events generated from all Neptune sources belonging to your\
        \ customer account.</p>"
      operationId: POST_CreateEventSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateEventSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateEventSubscriptionMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateEventSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'
          description: EventSubscriptionQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionAlreadyExistFault'
          description: SubscriptionAlreadyExistFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
          description: SNSInvalidTopicFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
          description: SNSNoAuthorizationFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
          description: SNSTopicArnNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
          description: SubscriptionCategoryNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
          description: SourceNotFoundFault
      x-aws-operation-name: CreateEventSubscription
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateGlobalCluster:
    get:
      description: "<p>Creates a Neptune global database spread across multiple Amazon\
        \ Regions. The global database contains a single primary cluster with read-write\
        \ capability, and read-only secondary clusters that receive data from the\
        \ primary cluster through high-speed replication performed by the Neptune\
        \ storage subsystem.</p> <p>You can create a global database that is initially\
        \ empty, and then add a primary cluster and secondary clusters to it, or you\
        \ can specify an existing Neptune cluster during the create operation to become\
        \ the primary cluster of the global database.</p>"
      operationId: GET_CreateGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The cluster identifier of the new global database cluster.
        explode: true
        in: query
        name: GlobalClusterIdentifier
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[A-Za-z][0-9A-Za-z-:._]*"
          type: string
        style: form
      - description: (<i>Optional</i>) The Amazon Resource Name (ARN) of an existing
          Neptune DB cluster to use as the primary cluster of the new global database.
        explode: true
        in: query
        name: SourceDBClusterIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The name of the database engine to be used in the global\
          \ database.</p> <p>Valid values: <code>neptune</code> </p>"
        explode: true
        in: query
        name: Engine
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The Neptune engine version to be used by the global database.</p>\
          \ <p>Valid values: <code>1.2.0.0</code> or above.</p>"
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: The deletion protection setting for the new global database.
          The global database can't be deleted when deletion protection is enabled.
        explode: true
        in: query
        name: DeletionProtection
        required: false
        schema:
          type: boolean
        style: form
      - description: The storage encryption setting for the new global database cluster.
        explode: true
        in: query
        name: StorageEncrypted
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterAlreadyExistsFault'
          description: GlobalClusterAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterQuotaExceededFault'
          description: GlobalClusterQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: CreateGlobalCluster
      x-accepts:
      - text/xml
    post:
      description: "<p>Creates a Neptune global database spread across multiple Amazon\
        \ Regions. The global database contains a single primary cluster with read-write\
        \ capability, and read-only secondary clusters that receive data from the\
        \ primary cluster through high-speed replication performed by the Neptune\
        \ storage subsystem.</p> <p>You can create a global database that is initially\
        \ empty, and then add a primary cluster and secondary clusters to it, or you\
        \ can specify an existing Neptune cluster during the create operation to become\
        \ the primary cluster of the global database.</p>"
      operationId: POST_CreateGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateGlobalClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterAlreadyExistsFault'
          description: GlobalClusterAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterQuotaExceededFault'
          description: GlobalClusterQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: CreateGlobalCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteDBCluster:
    get:
      description: "<p>The DeleteDBCluster action deletes a previously provisioned\
        \ DB cluster. When you delete a DB cluster, all automated backups for that\
        \ DB cluster are deleted and can't be recovered. Manual DB cluster snapshots\
        \ of the specified DB cluster are not deleted.</p> <p>Note that the DB Cluster\
        \ cannot be deleted if deletion protection is enabled. To delete it, you must\
        \ first set its <code>DeletionProtection</code> field to <code>False</code>.</p>"
      operationId: GET_DeleteDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The DB cluster identifier for the DB cluster to be deleted.
          This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must
          match an existing DBClusterIdentifier.</p> </li> </ul>
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p> Determines whether a final DB cluster snapshot is created\
          \ before the DB cluster is deleted. If <code>true</code> is specified, no\
          \ DB cluster snapshot is created. If <code>false</code> is specified, a\
          \ DB cluster snapshot is created before the DB cluster is deleted.</p> <note>\
          \ <p>You must specify a <code>FinalDBSnapshotIdentifier</code> parameter\
          \ if <code>SkipFinalSnapshot</code> is <code>false</code>.</p> </note> <p>Default:\
          \ <code>false</code> </p>"
        explode: true
        in: query
        name: SkipFinalSnapshot
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p> The DB cluster snapshot identifier of the new DB cluster\
          \ snapshot created when <code>SkipFinalSnapshot</code> is set to <code>false</code>.</p>\
          \ <note> <p> Specifying this parameter and also setting the <code>SkipFinalShapshot</code>\
          \ parameter to true results in an error.</p> </note> <p>Constraints:</p>\
          \ <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li>\
          \ <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end\
          \ with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        explode: true
        in: query
        name: FinalDBSnapshotIdentifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotAlreadyExistsFault'
          description: DBClusterSnapshotAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
      x-aws-operation-name: DeleteDBCluster
      x-accepts:
      - text/xml
    post:
      description: "<p>The DeleteDBCluster action deletes a previously provisioned\
        \ DB cluster. When you delete a DB cluster, all automated backups for that\
        \ DB cluster are deleted and can't be recovered. Manual DB cluster snapshots\
        \ of the specified DB cluster are not deleted.</p> <p>Note that the DB Cluster\
        \ cannot be deleted if deletion protection is enabled. To delete it, you must\
        \ first set its <code>DeletionProtection</code> field to <code>False</code>.</p>"
      operationId: POST_DeleteDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDBClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotAlreadyExistsFault'
          description: DBClusterSnapshotAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
      x-aws-operation-name: DeleteDBCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteDBClusterEndpoint:
    get:
      description: Deletes a custom endpoint and removes it from an Amazon Neptune
        DB cluster.
      operationId: GET_DeleteDBClusterEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier associated with the custom endpoint. This parameter
          is stored as a lowercase string.
        explode: true
        in: query
        name: DBClusterEndpointIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBClusterEndpoint
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBClusterEndpointOutput'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterEndpointStateFault'
          description: InvalidDBClusterEndpointStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterEndpointNotFoundFault'
          description: DBClusterEndpointNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
      x-aws-operation-name: DeleteDBClusterEndpoint
      x-accepts:
      - text/xml
    post:
      description: Deletes a custom endpoint and removes it from an Amazon Neptune
        DB cluster.
      operationId: POST_DeleteDBClusterEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBClusterEndpoint
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDBClusterEndpointMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBClusterEndpointOutput'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterEndpointStateFault'
          description: InvalidDBClusterEndpointStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterEndpointNotFoundFault'
          description: DBClusterEndpointNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
      x-aws-operation-name: DeleteDBClusterEndpoint
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteDBClusterParameterGroup:
    get:
      description: Deletes a specified DB cluster parameter group. The DB cluster
        parameter group to be deleted can't be associated with any DB clusters.
      operationId: GET_DeleteDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The name of the DB cluster parameter group.</p> <p>Constraints:</p>
          <ul> <li> <p>Must be the name of an existing DB cluster parameter group.</p>
          </li> <li> <p>You can't delete a default DB cluster parameter group.</p>
          </li> <li> <p>Cannot be associated with any DB clusters.</p> </li> </ul>
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DeleteDBClusterParameterGroup
      x-accepts:
      - text/xml
    post:
      description: Deletes a specified DB cluster parameter group. The DB cluster
        parameter group to be deleted can't be associated with any DB clusters.
      operationId: POST_DeleteDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDBClusterParameterGroupMessage'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DeleteDBClusterParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteDBClusterSnapshot:
    get:
      description: "<p>Deletes a DB cluster snapshot. If the snapshot is being copied,\
        \ the copy operation is terminated.</p> <note> <p>The DB cluster snapshot\
        \ must be in the <code>available</code> state to be deleted.</p> </note>"
      operationId: GET_DeleteDBClusterSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The identifier of the DB cluster snapshot to delete.</p>\
          \ <p>Constraints: Must be the name of an existing DB cluster snapshot in\
          \ the <code>available</code> state.</p>"
        explode: true
        in: query
        name: DBClusterSnapshotIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBClusterSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBClusterSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
      x-aws-operation-name: DeleteDBClusterSnapshot
      x-accepts:
      - text/xml
    post:
      description: "<p>Deletes a DB cluster snapshot. If the snapshot is being copied,\
        \ the copy operation is terminated.</p> <note> <p>The DB cluster snapshot\
        \ must be in the <code>available</code> state to be deleted.</p> </note>"
      operationId: POST_DeleteDBClusterSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBClusterSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDBClusterSnapshotMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBClusterSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
      x-aws-operation-name: DeleteDBClusterSnapshot
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteDBInstance:
    get:
      description: "<p>The DeleteDBInstance action deletes a previously provisioned\
        \ DB instance. When you delete a DB instance, all automated backups for that\
        \ instance are deleted and can't be recovered. Manual DB snapshots of the\
        \ DB instance to be deleted by <code>DeleteDBInstance</code> are not deleted.</p>\
        \ <p> If you request a final DB snapshot the status of the Amazon Neptune\
        \ DB instance is <code>deleting</code> until the DB snapshot is created. The\
        \ API action <code>DescribeDBInstance</code> is used to monitor the status\
        \ of this operation. The action can't be canceled or reverted once submitted.</p>\
        \ <p>Note that when a DB instance is in a failure state and has a status of\
        \ <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>,\
        \ you can only delete it when the <code>SkipFinalSnapshot</code> parameter\
        \ is set to <code>true</code>.</p> <p>You can't delete a DB instance if it\
        \ is the only instance in the DB cluster, or if it has deletion protection\
        \ enabled.</p>"
      operationId: GET_DeleteDBInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The DB instance identifier for the DB instance to be deleted.
          This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must
          match the name of an existing DB instance.</p> </li> </ul>
        explode: true
        in: query
        name: DBInstanceIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p> Determines whether a final DB snapshot is created before\
          \ the DB instance is deleted. If <code>true</code> is specified, no DBSnapshot\
          \ is created. If <code>false</code> is specified, a DB snapshot is created\
          \ before the DB instance is deleted.</p> <p>Note that when a DB instance\
          \ is in a failure state and has a status of 'failed', 'incompatible-restore',\
          \ or 'incompatible-network', it can only be deleted when the SkipFinalSnapshot\
          \ parameter is set to \"true\".</p> <p>Specify <code>true</code> when deleting\
          \ a Read Replica.</p> <note> <p>The FinalDBSnapshotIdentifier parameter\
          \ must be specified if SkipFinalSnapshot is <code>false</code>.</p> </note>\
          \ <p>Default: <code>false</code> </p>"
        explode: true
        in: query
        name: SkipFinalSnapshot
        required: false
        schema:
          type: boolean
        style: form
      - description: <p> The DBSnapshotIdentifier of the new DBSnapshot created when
          SkipFinalSnapshot is set to <code>false</code>.</p> <note> <p>Specifying
          this parameter and also setting the SkipFinalShapshot parameter to true
          results in an error.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must be
          1 to 255 letters or numbers.</p> </li> <li> <p>First character must be a
          letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive
          hyphens</p> </li> <li> <p>Cannot be specified when deleting a Read Replica.</p>
          </li> </ul>
        explode: true
        in: query
        name: FinalDBSnapshotIdentifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBInstance
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBInstanceResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'
          description: DBSnapshotAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
      x-aws-operation-name: DeleteDBInstance
      x-accepts:
      - text/xml
    post:
      description: "<p>The DeleteDBInstance action deletes a previously provisioned\
        \ DB instance. When you delete a DB instance, all automated backups for that\
        \ instance are deleted and can't be recovered. Manual DB snapshots of the\
        \ DB instance to be deleted by <code>DeleteDBInstance</code> are not deleted.</p>\
        \ <p> If you request a final DB snapshot the status of the Amazon Neptune\
        \ DB instance is <code>deleting</code> until the DB snapshot is created. The\
        \ API action <code>DescribeDBInstance</code> is used to monitor the status\
        \ of this operation. The action can't be canceled or reverted once submitted.</p>\
        \ <p>Note that when a DB instance is in a failure state and has a status of\
        \ <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>,\
        \ you can only delete it when the <code>SkipFinalSnapshot</code> parameter\
        \ is set to <code>true</code>.</p> <p>You can't delete a DB instance if it\
        \ is the only instance in the DB cluster, or if it has deletion protection\
        \ enabled.</p>"
      operationId: POST_DeleteDBInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBInstance
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDBInstanceMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBInstanceResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'
          description: DBSnapshotAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
      x-aws-operation-name: DeleteDBInstance
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteDBParameterGroup:
    get:
      description: Deletes a specified DBParameterGroup. The DBParameterGroup to be
        deleted can't be associated with any DB instances.
      operationId: GET_DeleteDBParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The name of the DB parameter group.</p> <p>Constraints:</p>
          <ul> <li> <p>Must be the name of an existing DB parameter group</p> </li>
          <li> <p>You can't delete a default DB parameter group</p> </li> <li> <p>Cannot
          be associated with any DB instances</p> </li> </ul>
        explode: true
        in: query
        name: DBParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DeleteDBParameterGroup
      x-accepts:
      - text/xml
    post:
      description: Deletes a specified DBParameterGroup. The DBParameterGroup to be
        deleted can't be associated with any DB instances.
      operationId: POST_DeleteDBParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDBParameterGroupMessage'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DeleteDBParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteDBSubnetGroup:
    get:
      description: <p>Deletes a DB subnet group.</p> <note> <p>The specified database
        subnet group must not be associated with any DB instances.</p> </note>
      operationId: GET_DeleteDBSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of the database subnet group to delete.</p> <note>\
          \ <p>You can't delete the default subnet group.</p> </note> <p>Constraints:</p>\
          \ <p>Constraints: Must match the name of an existing DBSubnetGroup. Must\
          \ not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        explode: true
        in: query
        name: DBSubnetGroupName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
          description: InvalidDBSubnetGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetStateFault'
          description: InvalidDBSubnetStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
      x-aws-operation-name: DeleteDBSubnetGroup
      x-accepts:
      - text/xml
    post:
      description: <p>Deletes a DB subnet group.</p> <note> <p>The specified database
        subnet group must not be associated with any DB instances.</p> </note>
      operationId: POST_DeleteDBSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDBSubnetGroupMessage'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
          description: InvalidDBSubnetGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetStateFault'
          description: InvalidDBSubnetStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
      x-aws-operation-name: DeleteDBSubnetGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteEventSubscription:
    get:
      description: Deletes an event notification subscription.
      operationId: GET_DeleteEventSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the event notification subscription you want to delete.
        explode: true
        in: query
        name: SubscriptionName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteEventSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteEventSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidEventSubscriptionStateFault'
          description: InvalidEventSubscriptionStateFault
      x-aws-operation-name: DeleteEventSubscription
      x-accepts:
      - text/xml
    post:
      description: Deletes an event notification subscription.
      operationId: POST_DeleteEventSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteEventSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteEventSubscriptionMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteEventSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidEventSubscriptionStateFault'
          description: InvalidEventSubscriptionStateFault
      x-aws-operation-name: DeleteEventSubscription
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteGlobalCluster:
    get:
      description: Deletes a global database. The primary and all secondary clusters
        must already be detached or deleted first.
      operationId: GET_DeleteGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The cluster identifier of the global database cluster being deleted.
        explode: true
        in: query
        name: GlobalClusterIdentifier
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[A-Za-z][0-9A-Za-z-:._]*"
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
      x-aws-operation-name: DeleteGlobalCluster
      x-accepts:
      - text/xml
    post:
      description: Deletes a global database. The primary and all secondary clusters
        must already be detached or deleted first.
      operationId: POST_DeleteGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteGlobalClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
      x-aws-operation-name: DeleteGlobalCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBClusterEndpoints:
    get:
      description: <p>Returns information about endpoints for an Amazon Neptune DB
        cluster.</p> <note> <p>This operation can also return information for Amazon
        RDS clusters and Amazon DocDB clusters.</p> </note>
      operationId: GET_DescribeDBClusterEndpoints
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The DB cluster identifier of the DB cluster associated with the
          endpoint. This parameter is stored as a lowercase string.
        explode: true
        in: query
        name: DBClusterIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: The identifier of the endpoint to describe. This parameter is
          stored as a lowercase string.
        explode: true
        in: query
        name: DBClusterEndpointIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: "A set of name-value pairs that define which endpoints to include\
          \ in the output. The filters are specified as name-value pairs, in the format\
          \ <code>Name=<i>endpoint_type</i>,Values=<i>endpoint_type1</i>,<i>endpoint_type2</i>,...</code>.\
          \ <code>Name</code> can be one of: <code>db-cluster-endpoint-type</code>,\
          \ <code>db-cluster-endpoint-custom-type</code>, <code>db-cluster-endpoint-id</code>,\
          \ <code>db-cluster-endpoint-status</code>. <code>Values</code> for the <code>\
          \ db-cluster-endpoint-type</code> filter can be one or more of: <code>reader</code>,\
          \ <code>writer</code>, <code>custom</code>. <code>Values</code> for the\
          \ <code>db-cluster-endpoint-custom-type</code> filter can be one or more\
          \ of: <code>reader</code>, <code>any</code>. <code>Values</code> for the\
          \ <code>db-cluster-endpoint-status</code> filter can be one or more of:\
          \ <code>available</code>, <code>creating</code>, <code>deleting</code>,\
          \ <code>inactive</code>, <code>modifying</code>. "
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token called a marker is included in the response so you\
          \ can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints:\
          \ Minimum 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: " An optional pagination token provided by a previous <code>DescribeDBClusterEndpoints</code>\
          \ request. If this parameter is specified, the response includes only records\
          \ beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterEndpoints
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterEndpointMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: DescribeDBClusterEndpoints
      x-accepts:
      - text/xml
    post:
      description: <p>Returns information about endpoints for an Amazon Neptune DB
        cluster.</p> <note> <p>This operation can also return information for Amazon
        RDS clusters and Amazon DocDB clusters.</p> </note>
      operationId: POST_DescribeDBClusterEndpoints
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterEndpoints
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBClusterEndpointsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterEndpointMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: DescribeDBClusterEndpoints
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBClusterParameterGroups:
    get:
      description: " Returns a list of <code>DBClusterParameterGroup</code> descriptions.\
        \ If a <code>DBClusterParameterGroupName</code> parameter is specified, the\
        \ list will contain only the description of the specified DB cluster parameter\
        \ group."
      operationId: GET_DescribeDBClusterParameterGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of a specific DB cluster parameter group to return\
          \ details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match\
          \ the name of an existing DBClusterParameterGroup.</p> </li> </ul>"
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token called a marker is included in the response so that\
          \ the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
          \ Minimum 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: " An optional pagination token provided by a previous <code>DescribeDBClusterParameterGroups</code>\
          \ request. If this parameter is specified, the response includes only records\
          \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterParameterGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DescribeDBClusterParameterGroups
      x-accepts:
      - text/xml
    post:
      description: " Returns a list of <code>DBClusterParameterGroup</code> descriptions.\
        \ If a <code>DBClusterParameterGroupName</code> parameter is specified, the\
        \ list will contain only the description of the specified DB cluster parameter\
        \ group."
      operationId: POST_DescribeDBClusterParameterGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterParameterGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBClusterParameterGroupsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DescribeDBClusterParameterGroups
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBClusterParameters:
    get:
      description: Returns the detailed parameter list for a particular DB cluster
        parameter group.
      operationId: GET_DescribeDBClusterParameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of a specific DB cluster parameter group to return\
          \ parameter details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied,\
          \ must match the name of an existing DBClusterParameterGroup.</p> </li>\
          \ </ul>"
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - description: " A value that indicates to return only parameters for a specific\
          \ source. Parameter sources can be <code>engine</code>, <code>service</code>,\
          \ or <code>customer</code>."
        explode: true
        in: query
        name: Source
        required: false
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token called a marker is included in the response so that\
          \ the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
          \ Minimum 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: " An optional pagination token provided by a previous <code>DescribeDBClusterParameters</code>\
          \ request. If this parameter is specified, the response includes only records\
          \ beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterParameters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupDetails'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DescribeDBClusterParameters
      x-accepts:
      - text/xml
    post:
      description: Returns the detailed parameter list for a particular DB cluster
        parameter group.
      operationId: POST_DescribeDBClusterParameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterParameters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBClusterParametersMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupDetails'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DescribeDBClusterParameters
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBClusterSnapshotAttributes:
    get:
      description: "<p>Returns a list of DB cluster snapshot attribute names and values\
        \ for a manual DB cluster snapshot.</p> <p>When sharing snapshots with other\
        \ Amazon accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns\
        \ the <code>restore</code> attribute and a list of IDs for the Amazon accounts\
        \ that are authorized to copy or restore the manual DB cluster snapshot. If\
        \ <code>all</code> is included in the list of values for the <code>restore</code>\
        \ attribute, then the manual DB cluster snapshot is public and can be copied\
        \ or restored by all Amazon accounts.</p> <p>To add or remove access for an\
        \ Amazon account to copy or restore a manual DB cluster snapshot, or to make\
        \ the manual DB cluster snapshot public or private, use the <a>ModifyDBClusterSnapshotAttribute</a>\
        \ API action.</p>"
      operationId: GET_DescribeDBClusterSnapshotAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier for the DB cluster snapshot to describe the attributes
          for.
        explode: true
        in: query
        name: DBClusterSnapshotIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterSnapshotAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDBClusterSnapshotAttributesResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
      x-aws-operation-name: DescribeDBClusterSnapshotAttributes
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns a list of DB cluster snapshot attribute names and values\
        \ for a manual DB cluster snapshot.</p> <p>When sharing snapshots with other\
        \ Amazon accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns\
        \ the <code>restore</code> attribute and a list of IDs for the Amazon accounts\
        \ that are authorized to copy or restore the manual DB cluster snapshot. If\
        \ <code>all</code> is included in the list of values for the <code>restore</code>\
        \ attribute, then the manual DB cluster snapshot is public and can be copied\
        \ or restored by all Amazon accounts.</p> <p>To add or remove access for an\
        \ Amazon account to copy or restore a manual DB cluster snapshot, or to make\
        \ the manual DB cluster snapshot public or private, use the <a>ModifyDBClusterSnapshotAttribute</a>\
        \ API action.</p>"
      operationId: POST_DescribeDBClusterSnapshotAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterSnapshotAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBClusterSnapshotAttributesMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDBClusterSnapshotAttributesResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
      x-aws-operation-name: DescribeDBClusterSnapshotAttributes
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBClusterSnapshots:
    get:
      description: Returns information about DB cluster snapshots. This API action
        supports pagination.
      operationId: GET_DescribeDBClusterSnapshots
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The ID of the DB cluster to retrieve the list of DB cluster\
          \ snapshots for. This parameter can't be used in conjunction with the <code>DBClusterSnapshotIdentifier</code>\
          \ parameter. This parameter is not case-sensitive.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>If supplied, must match the identifier of an existing DBCluster.</p>\
          \ </li> </ul>"
        explode: true
        in: query
        name: DBClusterIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A specific DB cluster snapshot identifier to describe. This\
          \ parameter can't be used in conjunction with the <code>DBClusterIdentifier</code>\
          \ parameter. This value is stored as a lowercase string.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>If supplied, must match the identifier of an existing DBClusterSnapshot.</p>\
          \ </li> <li> <p>If this identifier is for an automated snapshot, the <code>SnapshotType</code>\
          \ parameter must also be specified.</p> </li> </ul>"
        explode: true
        in: query
        name: DBClusterSnapshotIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The type of DB cluster snapshots to be returned. You can\
          \ specify one of the following values:</p> <ul> <li> <p> <code>automated</code>\
          \ - Return all DB cluster snapshots that have been automatically taken by\
          \ Amazon Neptune for my Amazon account.</p> </li> <li> <p> <code>manual</code>\
          \ - Return all DB cluster snapshots that have been taken by my Amazon account.</p>\
          \ </li> <li> <p> <code>shared</code> - Return all manual DB cluster snapshots\
          \ that have been shared to my Amazon account.</p> </li> <li> <p> <code>public</code>\
          \ - Return all DB cluster snapshots that have been marked as public.</p>\
          \ </li> </ul> <p>If you don't specify a <code>SnapshotType</code> value,\
          \ then both automated and manual DB cluster snapshots are returned. You\
          \ can include shared DB cluster snapshots with these results by setting\
          \ the <code>IncludeShared</code> parameter to <code>true</code>. You can\
          \ include public DB cluster snapshots with these results by setting the\
          \ <code>IncludePublic</code> parameter to <code>true</code>.</p> <p>The\
          \ <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't\
          \ apply for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>.\
          \ The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code>\
          \ is set to <code>shared</code>. The <code>IncludeShared</code> parameter\
          \ doesn't apply when <code>SnapshotType</code> is set to <code>public</code>.</p>"
        explode: true
        in: query
        name: SnapshotType
        required: false
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token called a marker is included in the response so that\
          \ the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
          \ Minimum 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional pagination token provided by a previous <code>DescribeDBClusterSnapshots</code>\
          \ request. If this parameter is specified, the response includes only records\
          \ beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - description: "<p>True to include shared manual DB cluster snapshots from other\
          \ Amazon accounts that this Amazon account has been given permission to\
          \ copy or restore, and otherwise false. The default is <code>false</code>.</p>\
          \ <p>You can give an Amazon account permission to restore a manual DB cluster\
          \ snapshot from another Amazon account by the <a>ModifyDBClusterSnapshotAttribute</a>\
          \ API action.</p>"
        explode: true
        in: query
        name: IncludeShared
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>True to include manual DB cluster snapshots that are public\
          \ and can be copied or restored by any Amazon account, and otherwise false.\
          \ The default is <code>false</code>. The default is false.</p> <p>You can\
          \ share a manual DB cluster snapshot as public by using the <a>ModifyDBClusterSnapshotAttribute</a>\
          \ API action.</p>"
        explode: true
        in: query
        name: IncludePublic
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterSnapshots
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
      x-aws-operation-name: DescribeDBClusterSnapshots
      x-accepts:
      - text/xml
    post:
      description: Returns information about DB cluster snapshots. This API action
        supports pagination.
      operationId: POST_DescribeDBClusterSnapshots
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterSnapshots
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBClusterSnapshotsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
      x-aws-operation-name: DescribeDBClusterSnapshots
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBClusters:
    get:
      description: "<p>Returns information about provisioned DB clusters, and supports\
        \ pagination.</p> <note> <p>This operation can also return information for\
        \ Amazon RDS clusters and Amazon DocDB clusters.</p> </note>"
      operationId: GET_DescribeDBClusters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The user-supplied DB cluster identifier. If this parameter\
          \ is specified, information from only the specific DB cluster is returned.\
          \ This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li>\
          \ <p>If supplied, must match an existing DBClusterIdentifier.</p> </li>\
          \ </ul>"
        explode: true
        in: query
        name: DBClusterIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A filter that specifies one or more DB clusters to describe.</p>\
          \ <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts\
          \ DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The\
          \ results list will only include information about the DB clusters identified\
          \ by these ARNs.</p> </li> <li> <p> <code>engine</code> - Accepts an engine\
          \ name (such as <code>neptune</code>), and restricts the results list to\
          \ DB clusters created by that engine.</p> </li> </ul> <p>For example, to\
          \ invoke this API from the Amazon CLI and filter so that only Neptune DB\
          \ clusters are returned, you could use the following command:</p>"
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token called a marker is included in the response so that\
          \ the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
          \ Minimum 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional pagination token provided by a previous <a>DescribeDBClusters</a>\
          \ request. If this parameter is specified, the response includes only records\
          \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: DescribeDBClusters
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns information about provisioned DB clusters, and supports\
        \ pagination.</p> <note> <p>This operation can also return information for\
        \ Amazon RDS clusters and Amazon DocDB clusters.</p> </note>"
      operationId: POST_DescribeDBClusters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBClustersMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: DescribeDBClusters
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBEngineVersions:
    get:
      description: Returns a list of the available DB engines.
      operationId: GET_DescribeDBEngineVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The database engine to return.
        explode: true
        in: query
        name: Engine
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The database engine version to return.</p> <p>Example: <code>5.1.49</code>\
          \ </p>"
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The name of a specific DB parameter group family to return\
          \ details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match\
          \ an existing DBParameterGroupFamily.</p> </li> </ul>"
        explode: true
        in: query
        name: DBParameterGroupFamily
        required: false
        schema:
          type: string
        style: form
      - description: Not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more than the <code>MaxRecords</code> value is available, a pagination\
          \ token called a marker is included in the response so that the following\
          \ results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum\
          \ 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: " An optional pagination token provided by a previous request.\
          \ If this parameter is specified, the response includes only records beyond\
          \ the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - description: Indicates that only the default version of the specified engine
          or engine and major version combination is returned.
        explode: true
        in: query
        name: DefaultOnly
        required: false
        schema:
          type: boolean
        style: form
      - description: "If this parameter is specified and the requested engine supports\
          \ the <code>CharacterSetName</code> parameter for <code>CreateDBInstance</code>,\
          \ the response includes a list of supported character sets for each engine\
          \ version."
        explode: true
        in: query
        name: ListSupportedCharacterSets
        required: false
        schema:
          type: boolean
        style: form
      - description: "If this parameter is specified and the requested engine supports\
          \ the <code>TimeZone</code> parameter for <code>CreateDBInstance</code>,\
          \ the response includes a list of supported time zones for each engine version."
        explode: true
        in: query
        name: ListSupportedTimezones
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBEngineVersions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBEngineVersionMessage'
          description: Success
      x-aws-operation-name: DescribeDBEngineVersions
      x-accepts:
      - text/xml
    post:
      description: Returns a list of the available DB engines.
      operationId: POST_DescribeDBEngineVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBEngineVersions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBEngineVersionsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBEngineVersionMessage'
          description: Success
      x-aws-operation-name: DescribeDBEngineVersions
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBInstances:
    get:
      description: "<p>Returns information about provisioned instances, and supports\
        \ pagination.</p> <note> <p>This operation can also return information for\
        \ Amazon RDS instances and Amazon DocDB instances.</p> </note>"
      operationId: GET_DescribeDBInstances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The user-supplied instance identifier. If this parameter\
          \ is specified, information from only the specific DB instance is returned.\
          \ This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li>\
          \ <p>If supplied, must match the identifier of an existing DBInstance.</p>\
          \ </li> </ul>"
        explode: true
        in: query
        name: DBInstanceIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A filter that specifies one or more DB instances to describe.</p>\
          \ <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts\
          \ DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The\
          \ results list will only include information about the DB instances associated\
          \ with the DB clusters identified by these ARNs.</p> </li> <li> <p> <code>engine</code>\
          \ - Accepts an engine name (such as <code>neptune</code>), and restricts\
          \ the results list to DB instances created by that engine.</p> </li> </ul>\
          \ <p>For example, to invoke this API from the Amazon CLI and filter so that\
          \ only Neptune DB instances are returned, you could use the following command:</p>"
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token called a marker is included in the response so that\
          \ the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
          \ Minimum 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: " An optional pagination token provided by a previous <code>DescribeDBInstances</code>\
          \ request. If this parameter is specified, the response includes only records\
          \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBInstances
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
      x-aws-operation-name: DescribeDBInstances
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns information about provisioned instances, and supports\
        \ pagination.</p> <note> <p>This operation can also return information for\
        \ Amazon RDS instances and Amazon DocDB instances.</p> </note>"
      operationId: POST_DescribeDBInstances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBInstances
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBInstancesMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
      x-aws-operation-name: DescribeDBInstances
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBParameterGroups:
    get:
      description: "Returns a list of <code>DBParameterGroup</code> descriptions.\
        \ If a <code>DBParameterGroupName</code> is specified, the list will contain\
        \ only the description of the specified DB parameter group."
      operationId: GET_DescribeDBParameterGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of a specific DB parameter group to return details\
          \ for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the\
          \ name of an existing DBClusterParameterGroup.</p> </li> </ul>"
        explode: true
        in: query
        name: DBParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token called a marker is included in the response so that\
          \ the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
          \ Minimum 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional pagination token provided by a previous <code>DescribeDBParameterGroups</code>\
          \ request. If this parameter is specified, the response includes only records\
          \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBParameterGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DescribeDBParameterGroups
      x-accepts:
      - text/xml
    post:
      description: "Returns a list of <code>DBParameterGroup</code> descriptions.\
        \ If a <code>DBParameterGroupName</code> is specified, the list will contain\
        \ only the description of the specified DB parameter group."
      operationId: POST_DescribeDBParameterGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBParameterGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBParameterGroupsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DescribeDBParameterGroups
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBParameters:
    get:
      description: Returns the detailed parameter list for a particular DB parameter
        group.
      operationId: GET_DescribeDBParameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of a specific DB parameter group to return details\
          \ for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the\
          \ name of an existing DBParameterGroup.</p> </li> </ul>"
        explode: true
        in: query
        name: DBParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The parameter types to return.</p> <p>Default: All parameter\
          \ types returned</p> <p>Valid Values: <code>user | system | engine-default</code>\
          \ </p>"
        explode: true
        in: query
        name: Source
        required: false
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token called a marker is included in the response so that\
          \ the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
          \ Minimum 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional pagination token provided by a previous <code>DescribeDBParameters</code>\
          \ request. If this parameter is specified, the response includes only records\
          \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBParameters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupDetails'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DescribeDBParameters
      x-accepts:
      - text/xml
    post:
      description: Returns the detailed parameter list for a particular DB parameter
        group.
      operationId: POST_DescribeDBParameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBParameters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBParametersMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupDetails'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DescribeDBParameters
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBSubnetGroups:
    get:
      description: "<p>Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName\
        \ is specified, the list will contain only the descriptions of the specified\
        \ DBSubnetGroup.</p> <p>For an overview of CIDR ranges, go to the <a href=\"\
        http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>.</p>"
      operationId: GET_DescribeDBSubnetGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the DB subnet group to return details for.
        explode: true
        in: query
        name: DBSubnetGroupName
        required: false
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token called a marker is included in the response so that\
          \ the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
          \ Minimum 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: " An optional pagination token provided by a previous DescribeDBSubnetGroups\
          \ request. If this parameter is specified, the response includes only records\
          \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBSubnetGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
      x-aws-operation-name: DescribeDBSubnetGroups
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName\
        \ is specified, the list will contain only the descriptions of the specified\
        \ DBSubnetGroup.</p> <p>For an overview of CIDR ranges, go to the <a href=\"\
        http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>.</p>"
      operationId: POST_DescribeDBSubnetGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBSubnetGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBSubnetGroupsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
      x-aws-operation-name: DescribeDBSubnetGroups
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeEngineDefaultClusterParameters:
    get:
      description: Returns the default engine and system parameter information for
        the cluster database engine.
      operationId: GET_DescribeEngineDefaultClusterParameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the DB cluster parameter group family to return engine
          parameter information for.
        explode: true
        in: query
        name: DBParameterGroupFamily
        required: true
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token called a marker is included in the response so that\
          \ the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
          \ Minimum 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: " An optional pagination token provided by a previous <code>DescribeEngineDefaultClusterParameters</code>\
          \ request. If this parameter is specified, the response includes only records\
          \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEngineDefaultClusterParameters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEngineDefaultClusterParametersResult'
          description: Success
      x-aws-operation-name: DescribeEngineDefaultClusterParameters
      x-accepts:
      - text/xml
    post:
      description: Returns the default engine and system parameter information for
        the cluster database engine.
      operationId: POST_DescribeEngineDefaultClusterParameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEngineDefaultClusterParameters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEngineDefaultClusterParametersMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEngineDefaultClusterParametersResult'
          description: Success
      x-aws-operation-name: DescribeEngineDefaultClusterParameters
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeEngineDefaultParameters:
    get:
      description: Returns the default engine and system parameter information for
        the specified database engine.
      operationId: GET_DescribeEngineDefaultParameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the DB parameter group family.
        explode: true
        in: query
        name: DBParameterGroupFamily
        required: true
        schema:
          type: string
        style: form
      - description: Not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token called a marker is included in the response so that\
          \ the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
          \ Minimum 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: " An optional pagination token provided by a previous <code>DescribeEngineDefaultParameters</code>\
          \ request. If this parameter is specified, the response includes only records\
          \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEngineDefaultParameters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEngineDefaultParametersResult'
          description: Success
      x-aws-operation-name: DescribeEngineDefaultParameters
      x-accepts:
      - text/xml
    post:
      description: Returns the default engine and system parameter information for
        the specified database engine.
      operationId: POST_DescribeEngineDefaultParameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEngineDefaultParameters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEngineDefaultParametersMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEngineDefaultParametersResult'
          description: Success
      x-aws-operation-name: DescribeEngineDefaultParameters
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeEventCategories:
    get:
      description: "Displays a list of categories for all event source types, or,\
        \ if specified, for a specified source type."
      operationId: GET_DescribeEventCategories
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The type of source that is generating the events.</p> <p>Valid\
          \ values: db-instance | db-parameter-group | db-security-group | db-snapshot</p>"
        explode: true
        in: query
        name: SourceType
        required: false
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEventCategories
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventCategoriesMessage'
          description: Success
      x-aws-operation-name: DescribeEventCategories
      x-accepts:
      - text/xml
    post:
      description: "Displays a list of categories for all event source types, or,\
        \ if specified, for a specified source type."
      operationId: POST_DescribeEventCategories
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEventCategories
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEventCategoriesMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventCategoriesMessage'
          description: Success
      x-aws-operation-name: DescribeEventCategories
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeEventSubscriptions:
    get:
      description: "<p>Lists all the subscription descriptions for a customer account.\
        \ The description for a subscription includes SubscriptionName, SNSTopicARN,\
        \ CustomerID, SourceType, SourceID, CreationTime, and Status.</p> <p>If you\
        \ specify a SubscriptionName, lists the description for that subscription.</p>"
      operationId: GET_DescribeEventSubscriptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the event notification subscription you want to describe.
        explode: true
        in: query
        name: SubscriptionName
        required: false
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token called a marker is included in the response so that\
          \ the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
          \ Minimum 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: " An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions\
          \ request. If this parameter is specified, the response includes only records\
          \ beyond the marker, up to the value specified by <code>MaxRecords</code>\
          \ ."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEventSubscriptions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
      x-aws-operation-name: DescribeEventSubscriptions
      x-accepts:
      - text/xml
    post:
      description: "<p>Lists all the subscription descriptions for a customer account.\
        \ The description for a subscription includes SubscriptionName, SNSTopicARN,\
        \ CustomerID, SourceType, SourceID, CreationTime, and Status.</p> <p>If you\
        \ specify a SubscriptionName, lists the description for that subscription.</p>"
      operationId: POST_DescribeEventSubscriptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEventSubscriptions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEventSubscriptionsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
      x-aws-operation-name: DescribeEventSubscriptions
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeEvents:
    get:
      description: "Returns events related to DB instances, DB security groups, DB\
        \ snapshots, and DB parameter groups for the past 14 days. Events specific\
        \ to a particular DB instance, DB security group, database snapshot, or DB\
        \ parameter group can be obtained by providing the name as a parameter. By\
        \ default, the past hour of events are returned."
      operationId: GET_DescribeEvents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The identifier of the event source for which events are returned.\
          \ If not specified, then all sources are included in the response.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>If SourceIdentifier is supplied, SourceType must also be\
          \ provided.</p> </li> <li> <p>If the source type is <code>DBInstance</code>,\
          \ then a <code>DBInstanceIdentifier</code> must be supplied.</p> </li> <li>\
          \ <p>If the source type is <code>DBSecurityGroup</code>, a <code>DBSecurityGroupName</code>\
          \ must be supplied.</p> </li> <li> <p>If the source type is <code>DBParameterGroup</code>,\
          \ a <code>DBParameterGroupName</code> must be supplied.</p> </li> <li> <p>If\
          \ the source type is <code>DBSnapshot</code>, a <code>DBSnapshotIdentifier</code>\
          \ must be supplied.</p> </li> <li> <p>Cannot end with a hyphen or contain\
          \ two consecutive hyphens.</p> </li> </ul>"
        explode: true
        in: query
        name: SourceIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: "The event source to retrieve events for. If no value is specified,\
          \ all events are returned."
        explode: true
        in: query
        name: SourceType
        required: false
        schema:
          enum:
          - db-instance
          - db-parameter-group
          - db-security-group
          - db-snapshot
          - db-cluster
          - db-cluster-snapshot
          type: string
        style: form
      - description: "<p> The beginning of the time interval to retrieve events for,\
          \ specified in ISO 8601 format. For more information about ISO 8601, go\
          \ to the <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO8601 Wikipedia\
          \ page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>"
        explode: true
        in: query
        name: StartTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "<p> The end of the time interval for which to retrieve events,\
          \ specified in ISO 8601 format. For more information about ISO 8601, go\
          \ to the <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO8601 Wikipedia\
          \ page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>"
        explode: true
        in: query
        name: EndTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "<p>The number of minutes to retrieve events for.</p> <p>Default:\
          \ 60</p>"
        explode: true
        in: query
        name: Duration
        required: false
        schema:
          type: integer
        style: form
      - description: A list of event categories that trigger notifications for a event
          notification subscription.
        explode: true
        in: query
        name: EventCategories
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: EventCategory
          type: array
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token called a marker is included in the response so that\
          \ the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
          \ Minimum 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: " An optional pagination token provided by a previous DescribeEvents\
          \ request. If this parameter is specified, the response includes only records\
          \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEvents
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventsMessage'
          description: Success
      x-aws-operation-name: DescribeEvents
      x-accepts:
      - text/xml
    post:
      description: "Returns events related to DB instances, DB security groups, DB\
        \ snapshots, and DB parameter groups for the past 14 days. Events specific\
        \ to a particular DB instance, DB security group, database snapshot, or DB\
        \ parameter group can be obtained by providing the name as a parameter. By\
        \ default, the past hour of events are returned."
      operationId: POST_DescribeEvents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEvents
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEventsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventsMessage'
          description: Success
      x-aws-operation-name: DescribeEvents
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeGlobalClusters:
    get:
      description: Returns information about Neptune global database clusters. This
        API supports pagination.
      operationId: GET_DescribeGlobalClusters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The user-supplied DB cluster identifier. If this parameter\
          \ is specified, only information about the specified DB cluster is returned.\
          \ This parameter is not case-sensitive.</p> <p>Constraints: If supplied,\
          \ must match an existing DB cluster identifier.</p>"
        explode: true
        in: query
        name: GlobalClusterIdentifier
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[A-Za-z][0-9A-Za-z-:._]*"
          type: string
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination marker token is included in the response that you can use\
          \ to retrieve the remaining results.</p> <p>Default: <code>100</code> </p>\
          \ <p>Constraints: Minimum 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "(<i>Optional</i>) A pagination token returned by a previous\
          \ call to <code>DescribeGlobalClusters</code>. If this parameter is specified,\
          \ the response will only include records beyond the marker, up to the number\
          \ specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeGlobalClusters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClustersMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
      x-aws-operation-name: DescribeGlobalClusters
      x-accepts:
      - text/xml
    post:
      description: Returns information about Neptune global database clusters. This
        API supports pagination.
      operationId: POST_DescribeGlobalClusters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeGlobalClusters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeGlobalClustersMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClustersMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
      x-aws-operation-name: DescribeGlobalClusters
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeOrderableDBInstanceOptions:
    get:
      description: Returns a list of orderable DB instance options for the specified
        engine.
      operationId: GET_DescribeOrderableDBInstanceOptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the engine to retrieve DB instance options for.
        explode: true
        in: query
        name: Engine
        required: true
        schema:
          type: string
        style: form
      - description: The engine version filter value. Specify this parameter to show
          only the available offerings matching the specified engine version.
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: The DB instance class filter value. Specify this parameter to
          show only the available offerings matching the specified DB instance class.
        explode: true
        in: query
        name: DBInstanceClass
        required: false
        schema:
          type: string
        style: form
      - description: The license model filter value. Specify this parameter to show
          only the available offerings matching the specified license model.
        explode: true
        in: query
        name: LicenseModel
        required: false
        schema:
          type: string
        style: form
      - description: The VPC filter value. Specify this parameter to show only the
          available VPC or non-VPC offerings.
        explode: true
        in: query
        name: Vpc
        required: false
        schema:
          type: boolean
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token called a marker is included in the response so that\
          \ the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
          \ Minimum 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: " An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions\
          \ request. If this parameter is specified, the response includes only records\
          \ beyond the marker, up to the value specified by <code>MaxRecords</code>\
          \ ."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeOrderableDBInstanceOptions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OrderableDBInstanceOptionsMessage'
          description: Success
      x-aws-operation-name: DescribeOrderableDBInstanceOptions
      x-accepts:
      - text/xml
    post:
      description: Returns a list of orderable DB instance options for the specified
        engine.
      operationId: POST_DescribeOrderableDBInstanceOptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeOrderableDBInstanceOptions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeOrderableDBInstanceOptionsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OrderableDBInstanceOptionsMessage'
          description: Success
      x-aws-operation-name: DescribeOrderableDBInstanceOptions
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribePendingMaintenanceActions:
    get:
      description: "Returns a list of resources (for example, DB instances) that have\
        \ at least one pending maintenance action."
      operationId: GET_DescribePendingMaintenanceActions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of a resource to return pending maintenance actions for.
        explode: true
        in: query
        name: ResourceIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: <p>A filter that specifies one or more resources to return pending
          maintenance actions for.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code>
          - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs).
          The results list will only include pending maintenance actions for the DB
          clusters identified by these ARNs.</p> </li> <li> <p> <code>db-instance-id</code>
          - Accepts DB instance identifiers and DB instance ARNs. The results list
          will only include pending maintenance actions for the DB instances identified
          by these ARNs.</p> </li> </ul>
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - description: " An optional pagination token provided by a previous <code>DescribePendingMaintenanceActions</code>\
          \ request. If this parameter is specified, the response includes only records\
          \ beyond the marker, up to a number of records specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token called a marker is included in the response so that\
          \ the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
          \ Minimum 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribePendingMaintenanceActions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PendingMaintenanceActionsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
          description: ResourceNotFoundFault
      x-aws-operation-name: DescribePendingMaintenanceActions
      x-accepts:
      - text/xml
    post:
      description: "Returns a list of resources (for example, DB instances) that have\
        \ at least one pending maintenance action."
      operationId: POST_DescribePendingMaintenanceActions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribePendingMaintenanceActions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribePendingMaintenanceActionsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PendingMaintenanceActionsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
          description: ResourceNotFoundFault
      x-aws-operation-name: DescribePendingMaintenanceActions
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeValidDBInstanceModifications:
    get:
      description: You can call <a>DescribeValidDBInstanceModifications</a> to learn
        what modifications you can make to your DB instance. You can use this information
        when you call <a>ModifyDBInstance</a>.
      operationId: GET_DescribeValidDBInstanceModifications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The customer identifier or the ARN of your DB instance.
        explode: true
        in: query
        name: DBInstanceIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeValidDBInstanceModifications
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeValidDBInstanceModificationsResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: DescribeValidDBInstanceModifications
      x-accepts:
      - text/xml
    post:
      description: You can call <a>DescribeValidDBInstanceModifications</a> to learn
        what modifications you can make to your DB instance. You can use this information
        when you call <a>ModifyDBInstance</a>.
      operationId: POST_DescribeValidDBInstanceModifications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeValidDBInstanceModifications
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeValidDBInstanceModificationsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeValidDBInstanceModificationsResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: DescribeValidDBInstanceModifications
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=FailoverDBCluster:
    get:
      description: "<p>Forces a failover for a DB cluster.</p> <p>A failover for a\
        \ DB cluster promotes one of the Read Replicas (read-only instances) in the\
        \ DB cluster to be the primary instance (the cluster writer).</p> <p>Amazon\
        \ Neptune will automatically fail over to a Read Replica, if one exists, when\
        \ the primary instance fails. You can force a failover when you want to simulate\
        \ a failure of a primary instance for testing. Because each instance in a\
        \ DB cluster has its own endpoint address, you will need to clean up and re-establish\
        \ any existing connections that use those endpoint addresses when the failover\
        \ is complete.</p>"
      operationId: GET_FailoverDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>A DB cluster identifier to force a failover for. This parameter
          is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the
          identifier of an existing DBCluster.</p> </li> </ul>
        explode: true
        in: query
        name: DBClusterIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The name of the instance to promote to the primary instance.</p>\
          \ <p>You must specify the instance identifier for an Read Replica in the\
          \ DB cluster. For example, <code>mydbcluster-replica1</code>.</p>"
        explode: true
        in: query
        name: TargetDBInstanceIdentifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - FailoverDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FailoverDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: FailoverDBCluster
      x-accepts:
      - text/xml
    post:
      description: "<p>Forces a failover for a DB cluster.</p> <p>A failover for a\
        \ DB cluster promotes one of the Read Replicas (read-only instances) in the\
        \ DB cluster to be the primary instance (the cluster writer).</p> <p>Amazon\
        \ Neptune will automatically fail over to a Read Replica, if one exists, when\
        \ the primary instance fails. You can force a failover when you want to simulate\
        \ a failure of a primary instance for testing. Because each instance in a\
        \ DB cluster has its own endpoint address, you will need to clean up and re-establish\
        \ any existing connections that use those endpoint addresses when the failover\
        \ is complete.</p>"
      operationId: POST_FailoverDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - FailoverDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/FailoverDBClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FailoverDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: FailoverDBCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=FailoverGlobalCluster:
    get:
      description: "<p>Initiates the failover process for a Neptune global database.</p>\
        \ <p>A failover for a Neptune global database promotes one of secondary read-only\
        \ DB clusters to be the primary DB cluster and demotes the primary DB cluster\
        \ to being a secondary (read-only) DB cluster. In other words, the role of\
        \ the current primary DB cluster and the selected target secondary DB cluster\
        \ are switched. The selected secondary DB cluster assumes full read/write\
        \ capabilities for the Neptune global database.</p> <note> <p>This action\
        \ applies <b>only</b> to Neptune global databases. This action is only intended\
        \ for use on healthy Neptune global databases with healthy Neptune DB clusters\
        \ and no region-wide outages, to test disaster recovery scenarios or to reconfigure\
        \ the global database topology.</p> </note>"
      operationId: GET_FailoverGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>Identifier of the Neptune global database that should be\
          \ failed over. The identifier is the unique key assigned by the user when\
          \ the Neptune global database was created. In other words, it's the name\
          \ of the global database that you want to fail over.</p> <p>Constraints:\
          \ Must match the identifier of an existing Neptune global database.</p>"
        explode: true
        in: query
        name: GlobalClusterIdentifier
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[A-Za-z][0-9A-Za-z-:._]*"
          type: string
        style: form
      - description: The Amazon Resource Name (ARN) of the secondary Neptune DB cluster
          that you want to promote to primary for the global database.
        explode: true
        in: query
        name: TargetDbClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - FailoverGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FailoverGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: FailoverGlobalCluster
      x-accepts:
      - text/xml
    post:
      description: "<p>Initiates the failover process for a Neptune global database.</p>\
        \ <p>A failover for a Neptune global database promotes one of secondary read-only\
        \ DB clusters to be the primary DB cluster and demotes the primary DB cluster\
        \ to being a secondary (read-only) DB cluster. In other words, the role of\
        \ the current primary DB cluster and the selected target secondary DB cluster\
        \ are switched. The selected secondary DB cluster assumes full read/write\
        \ capabilities for the Neptune global database.</p> <note> <p>This action\
        \ applies <b>only</b> to Neptune global databases. This action is only intended\
        \ for use on healthy Neptune global databases with healthy Neptune DB clusters\
        \ and no region-wide outages, to test disaster recovery scenarios or to reconfigure\
        \ the global database topology.</p> </note>"
      operationId: POST_FailoverGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - FailoverGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/FailoverGlobalClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FailoverGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: FailoverGlobalCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ListTagsForResource:
    get:
      description: Lists all tags on an Amazon Neptune resource.
      operationId: GET_ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Neptune resource with tags to be listed. This value\
          \ is an Amazon Resource Name (ARN). For information about creating an ARN,\
          \ see <a href=\"https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"\
          > Constructing an Amazon Resource Name (ARN)</a>."
        explode: true
        in: query
        name: ResourceName
        required: true
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListTagsForResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
          description: DBSnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: ListTagsForResource
      x-accepts:
      - text/xml
    post:
      description: Lists all tags on an Amazon Neptune resource.
      operationId: POST_ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListTagsForResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
          description: DBSnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: ListTagsForResource
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyDBCluster:
    get:
      description: Modify a setting for a DB cluster. You can change one or more database
        configuration parameters by specifying these parameters and the new values
        in the request.
      operationId: GET_ModifyDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The DB cluster identifier for the cluster being modified.
          This parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li>
          <p>Must match the identifier of an existing DBCluster.</p> </li> </ul>
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The new DB cluster identifier for the DB cluster when renaming\
          \ a DB cluster. This value is stored as a lowercase string.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p>\
          \ </li> <li> <p>The first character must be a letter</p> </li> <li> <p>Cannot\
          \ end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example:\
          \ <code>my-cluster2</code> </p>"
        explode: true
        in: query
        name: NewDBClusterIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A value that specifies whether the modifications in this\
          \ request and any pending modifications are asynchronously applied as soon\
          \ as possible, regardless of the <code>PreferredMaintenanceWindow</code>\
          \ setting for the DB cluster. If this parameter is set to <code>false</code>,\
          \ changes to the DB cluster are applied during the next maintenance window.</p>\
          \ <p>The <code>ApplyImmediately</code> parameter only affects <code>NewDBClusterIdentifier</code>\
          \ values. If you set the <code>ApplyImmediately</code> parameter value to\
          \ false, then changes to <code>NewDBClusterIdentifier</code> values are\
          \ applied during the next maintenance window. All other changes are applied\
          \ immediately, regardless of the value of the <code>ApplyImmediately</code>\
          \ parameter.</p> <p>Default: <code>false</code> </p>"
        explode: true
        in: query
        name: ApplyImmediately
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The number of days for which automated backups are retained.\
          \ You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Must be a value from 1 to 35</p> </li> </ul>"
        explode: true
        in: query
        name: BackupRetentionPeriod
        required: false
        schema:
          type: integer
        style: form
      - description: The name of the DB cluster parameter group to use for the DB
          cluster.
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: A list of VPC security groups that the DB cluster will belong
          to.
        explode: true
        in: query
        name: VpcSecurityGroupIds
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: VpcSecurityGroupId
          type: array
        style: form
      - description: "<p>The port number on which the DB cluster accepts connections.</p>\
          \ <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default:\
          \ The same port as the original DB cluster.</p>"
        explode: true
        in: query
        name: Port
        required: false
        schema:
          type: integer
        style: form
      - description: Not supported by Neptune.
        explode: true
        in: query
        name: MasterUserPassword
        required: false
        schema:
          type: string
        style: form
      - description: ' <i>Not supported by Neptune.</i> '
        explode: true
        in: query
        name: OptionGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The daily time range during which automated backups are created\
          \ if automated backups are enabled, using the <code>BackupRetentionPeriod</code>\
          \ parameter.</p> <p>The default is a 30-minute window selected at random\
          \ from an 8-hour block of time for each Amazon Region.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li>\
          \ <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must\
          \ not conflict with the preferred maintenance window.</p> </li> <li> <p>Must\
          \ be at least 30 minutes.</p> </li> </ul>"
        explode: true
        in: query
        name: PreferredBackupWindow
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The weekly time range during which system maintenance can\
          \ occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>\
          \ </p> <p>The default is a 30-minute window selected at random from an 8-hour\
          \ block of time for each Amazon Region, occurring on a random day of the\
          \ week.</p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> <p>Constraints:\
          \ Minimum 30-minute window.</p>"
        explode: true
        in: query
        name: PreferredMaintenanceWindow
        required: false
        schema:
          type: string
        style: form
      - description: "<p>True to enable mapping of Amazon Identity and Access Management\
          \ (IAM) accounts to database accounts, and otherwise false.</p> <p>Default:\
          \ <code>false</code> </p>"
        explode: true
        in: query
        name: EnableIAMDatabaseAuthentication
        required: false
        schema:
          type: boolean
        style: form
      - description: The configuration setting for the log types to be enabled for
          export to CloudWatch Logs for a specific DB cluster.
        explode: true
        in: query
        name: CloudwatchLogsExportConfiguration
        required: false
        schema:
          $ref: '#/components/schemas/GET_ModifyDBCluster_CloudwatchLogsExportConfiguration_parameter'
        style: form
      - description: "<p>The version number of the database engine to which you want\
          \ to upgrade. Changing this parameter results in an outage. The change is\
          \ applied during the next maintenance window unless the <code>ApplyImmediately</code>\
          \ parameter is set to true.</p> <p>For a list of valid engine versions,\
          \ see <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/engine-releases.html\"\
          >Engine Releases for Amazon Neptune</a>, or call <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/api-other-apis.html#DescribeDBEngineVersions\"\
          >DescribeDBEngineVersions</a>.</p>"
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A value that indicates whether upgrades between different\
          \ major versions are allowed.</p> <p>Constraints: You must set the allow-major-version-upgrade\
          \ flag when providing an <code>EngineVersion</code> parameter that uses\
          \ a different major version than the DB cluster's current version.</p>"
        explode: true
        in: query
        name: AllowMajorVersionUpgrade
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The name of the DB parameter group to apply to all instances\
          \ of the DB cluster. </p> <note> <p>When you apply a parameter group using\
          \ <code>DBInstanceParameterGroupName</code>, parameter changes aren't applied\
          \ during the next maintenance window but instead are applied immediately.</p>\
          \ </note> <p>Default: The existing name setting</p> <p>Constraints:</p>\
          \ <ul> <li> <p>The DB parameter group must be in the same DB parameter group\
          \ family as the target DB cluster version.</p> </li> <li> <p>The <code>DBInstanceParameterGroupName</code>\
          \ parameter is only valid in combination with the <code>AllowMajorVersionUpgrade</code>\
          \ parameter.</p> </li> </ul>"
        explode: true
        in: query
        name: DBInstanceParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "A value that indicates whether the DB cluster has deletion protection\
          \ enabled. The database can't be deleted when deletion protection is enabled.\
          \ By default, deletion protection is disabled."
        explode: true
        in: query
        name: DeletionProtection
        required: false
        schema:
          type: boolean
        style: form
      - description: " <i>If set to <code>true</code>, tags are copied to any snapshot\
          \ of the DB cluster that is created.</i> "
        explode: true
        in: query
        name: CopyTagsToSnapshot
        required: false
        schema:
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: ServerlessV2ScalingConfiguration
        required: false
        schema:
          $ref: '#/components/schemas/GET_CreateDBCluster_ServerlessV2ScalingConfiguration_parameter'
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
          description: InvalidDBSubnetGroupStateFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNotFoundFault'
          description: DBClusterParameterGroupNotFoundFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
          description: InvalidDBSecurityGroupStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
          description: DBClusterAlreadyExistsFault
      x-aws-operation-name: ModifyDBCluster
      x-accepts:
      - text/xml
    post:
      description: Modify a setting for a DB cluster. You can change one or more database
        configuration parameters by specifying these parameters and the new values
        in the request.
      operationId: POST_ModifyDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyDBClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
          description: InvalidDBSubnetGroupStateFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNotFoundFault'
          description: DBClusterParameterGroupNotFoundFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
          description: InvalidDBSecurityGroupStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
          description: DBClusterAlreadyExistsFault
      x-aws-operation-name: ModifyDBCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyDBClusterEndpoint:
    get:
      description: Modifies the properties of an endpoint in an Amazon Neptune DB
        cluster.
      operationId: GET_ModifyDBClusterEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the endpoint to modify. This parameter is stored
          as a lowercase string.
        explode: true
        in: query
        name: DBClusterEndpointIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>,\
          \ <code>ANY</code>."
        explode: true
        in: query
        name: EndpointType
        required: false
        schema:
          type: string
        style: form
      - description: List of DB instance identifiers that are part of the custom endpoint
          group.
        explode: true
        in: query
        name: StaticMembers
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - description: List of DB instance identifiers that aren't part of the custom
          endpoint group. All other eligible instances are reachable through the custom
          endpoint. Only relevant if the list of static members is empty.
        explode: true
        in: query
        name: ExcludedMembers
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBClusterEndpoint
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBClusterEndpointOutput'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterEndpointStateFault'
          description: InvalidDBClusterEndpointStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterEndpointNotFoundFault'
          description: DBClusterEndpointNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: ModifyDBClusterEndpoint
      x-accepts:
      - text/xml
    post:
      description: Modifies the properties of an endpoint in an Amazon Neptune DB
        cluster.
      operationId: POST_ModifyDBClusterEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBClusterEndpoint
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyDBClusterEndpointMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBClusterEndpointOutput'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterEndpointStateFault'
          description: InvalidDBClusterEndpointStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterEndpointNotFoundFault'
          description: DBClusterEndpointNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: ModifyDBClusterEndpoint
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyDBClusterParameterGroup:
    get:
      description: "<p> Modifies the parameters of a DB cluster parameter group. To\
        \ modify more than one parameter, submit a list of the following: <code>ParameterName</code>,\
        \ <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of\
        \ 20 parameters can be modified in a single request.</p> <note> <p>Changes\
        \ to dynamic parameters are applied immediately. Changes to static parameters\
        \ require a reboot without failover to the DB cluster associated with the\
        \ parameter group before the change can take effect.</p> </note> <important>\
        \ <p>After you create a DB cluster parameter group, you should wait at least\
        \ 5 minutes before creating your first DB cluster that uses that DB cluster\
        \ parameter group as the default parameter group. This allows Amazon Neptune\
        \ to fully complete the create action before the parameter group is used as\
        \ the default for a new DB cluster. This is especially important for parameters\
        \ that are critical when creating the default database for a DB cluster, such\
        \ as the character set for the default database defined by the <code>character_set_database</code>\
        \ parameter. You can use the <i>Parameter Groups</i> option of the Amazon\
        \ Neptune console or the <a>DescribeDBClusterParameters</a> command to verify\
        \ that your DB cluster parameter group has been created or modified.</p> </important>"
      operationId: GET_ModifyDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the DB cluster parameter group to modify.
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - description: A list of parameters in the DB cluster parameter group to modify.
        explode: true
        in: query
        name: Parameters
        required: true
        schema:
          items:
            $ref: '#/components/schemas/GET_ModifyDBClusterParameterGroup_Parameters_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNameMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
      x-aws-operation-name: ModifyDBClusterParameterGroup
      x-accepts:
      - text/xml
    post:
      description: "<p> Modifies the parameters of a DB cluster parameter group. To\
        \ modify more than one parameter, submit a list of the following: <code>ParameterName</code>,\
        \ <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of\
        \ 20 parameters can be modified in a single request.</p> <note> <p>Changes\
        \ to dynamic parameters are applied immediately. Changes to static parameters\
        \ require a reboot without failover to the DB cluster associated with the\
        \ parameter group before the change can take effect.</p> </note> <important>\
        \ <p>After you create a DB cluster parameter group, you should wait at least\
        \ 5 minutes before creating your first DB cluster that uses that DB cluster\
        \ parameter group as the default parameter group. This allows Amazon Neptune\
        \ to fully complete the create action before the parameter group is used as\
        \ the default for a new DB cluster. This is especially important for parameters\
        \ that are critical when creating the default database for a DB cluster, such\
        \ as the character set for the default database defined by the <code>character_set_database</code>\
        \ parameter. You can use the <i>Parameter Groups</i> option of the Amazon\
        \ Neptune console or the <a>DescribeDBClusterParameters</a> command to verify\
        \ that your DB cluster parameter group has been created or modified.</p> </important>"
      operationId: POST_ModifyDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyDBClusterParameterGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNameMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
      x-aws-operation-name: ModifyDBClusterParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyDBClusterSnapshotAttribute:
    get:
      description: "<p>Adds an attribute and values to, or removes an attribute and\
        \ values from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster\
        \ snapshot with other Amazon accounts, specify <code>restore</code> as the\
        \ <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter\
        \ to add a list of IDs of the Amazon accounts that are authorized to restore\
        \ the manual DB cluster snapshot. Use the value <code>all</code> to make the\
        \ manual DB cluster snapshot public, which means that it can be copied or\
        \ restored by all Amazon accounts. Do not add the <code>all</code> value for\
        \ any manual DB cluster snapshots that contain private information that you\
        \ don't want available to all Amazon accounts. If a manual DB cluster snapshot\
        \ is encrypted, it can be shared, but only by specifying a list of authorized\
        \ Amazon account IDs for the <code>ValuesToAdd</code> parameter. You can't\
        \ use <code>all</code> as a value for that parameter in this case.</p> <p>To\
        \ view which Amazon accounts have access to copy or restore a manual DB cluster\
        \ snapshot, or whether a manual DB cluster snapshot public or private, use\
        \ the <a>DescribeDBClusterSnapshotAttributes</a> API action.</p>"
      operationId: GET_ModifyDBClusterSnapshotAttribute
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier for the DB cluster snapshot to modify the attributes
          for.
        explode: true
        in: query
        name: DBClusterSnapshotIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The name of the DB cluster snapshot attribute to modify.</p>\
          \ <p>To manage authorization for other Amazon accounts to copy or restore\
          \ a manual DB cluster snapshot, set this value to <code>restore</code>.</p>"
        explode: true
        in: query
        name: AttributeName
        required: true
        schema:
          type: string
        style: form
      - description: "<p>A list of DB cluster snapshot attributes to add to the attribute\
          \ specified by <code>AttributeName</code>.</p> <p>To authorize other Amazon\
          \ accounts to copy or restore a manual DB cluster snapshot, set this list\
          \ to include one or more Amazon account IDs, or <code>all</code> to make\
          \ the manual DB cluster snapshot restorable by any Amazon account. Do not\
          \ add the <code>all</code> value for any manual DB cluster snapshots that\
          \ contain private information that you don't want available to all Amazon\
          \ accounts.</p>"
        explode: true
        in: query
        name: ValuesToAdd
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: AttributeValue
          type: array
        style: form
      - description: "<p>A list of DB cluster snapshot attributes to remove from the\
          \ attribute specified by <code>AttributeName</code>.</p> <p>To remove authorization\
          \ for other Amazon accounts to copy or restore a manual DB cluster snapshot,\
          \ set this list to include one or more Amazon account identifiers, or <code>all</code>\
          \ to remove authorization for any Amazon account to copy or restore the\
          \ DB cluster snapshot. If you specify <code>all</code>, an Amazon account\
          \ whose account ID is explicitly added to the <code>restore</code> attribute\
          \ can still copy or restore a manual DB cluster snapshot.</p>"
        explode: true
        in: query
        name: ValuesToRemove
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: AttributeValue
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBClusterSnapshotAttribute
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBClusterSnapshotAttributeResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SharedSnapshotQuotaExceededFault'
          description: SharedSnapshotQuotaExceededFault
      x-aws-operation-name: ModifyDBClusterSnapshotAttribute
      x-accepts:
      - text/xml
    post:
      description: "<p>Adds an attribute and values to, or removes an attribute and\
        \ values from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster\
        \ snapshot with other Amazon accounts, specify <code>restore</code> as the\
        \ <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter\
        \ to add a list of IDs of the Amazon accounts that are authorized to restore\
        \ the manual DB cluster snapshot. Use the value <code>all</code> to make the\
        \ manual DB cluster snapshot public, which means that it can be copied or\
        \ restored by all Amazon accounts. Do not add the <code>all</code> value for\
        \ any manual DB cluster snapshots that contain private information that you\
        \ don't want available to all Amazon accounts. If a manual DB cluster snapshot\
        \ is encrypted, it can be shared, but only by specifying a list of authorized\
        \ Amazon account IDs for the <code>ValuesToAdd</code> parameter. You can't\
        \ use <code>all</code> as a value for that parameter in this case.</p> <p>To\
        \ view which Amazon accounts have access to copy or restore a manual DB cluster\
        \ snapshot, or whether a manual DB cluster snapshot public or private, use\
        \ the <a>DescribeDBClusterSnapshotAttributes</a> API action.</p>"
      operationId: POST_ModifyDBClusterSnapshotAttribute
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBClusterSnapshotAttribute
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyDBClusterSnapshotAttributeMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBClusterSnapshotAttributeResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SharedSnapshotQuotaExceededFault'
          description: SharedSnapshotQuotaExceededFault
      x-aws-operation-name: ModifyDBClusterSnapshotAttribute
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyDBInstance:
    get:
      description: "Modifies settings for a DB instance. You can change one or more\
        \ database configuration parameters by specifying these parameters and the\
        \ new values in the request. To learn what modifications you can make to your\
        \ DB instance, call <a>DescribeValidDBInstanceModifications</a> before you\
        \ call <a>ModifyDBInstance</a>."
      operationId: GET_ModifyDBInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The DB instance identifier. This value is stored as a lowercase
          string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of
          an existing DBInstance.</p> </li> </ul>
        explode: true
        in: query
        name: DBInstanceIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: Not supported by Neptune.
        explode: true
        in: query
        name: AllocatedStorage
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>The new compute and memory capacity of the DB instance, for\
          \ example, <code>db.m4.large</code>. Not all DB instance classes are available\
          \ in all Amazon Regions.</p> <p>If you modify the DB instance class, an\
          \ outage occurs during the change. The change is applied during the next\
          \ maintenance window, unless <code>ApplyImmediately</code> is specified\
          \ as <code>true</code> for this request.</p> <p>Default: Uses existing setting</p>"
        explode: true
        in: query
        name: DBInstanceClass
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The new DB subnet group for the DB instance. You can use\
          \ this parameter to move your DB instance to a different VPC.</p> <p>Changing\
          \ the subnet group causes an outage during the change. The change is applied\
          \ during the next maintenance window, unless you specify <code>true</code>\
          \ for the <code>ApplyImmediately</code> parameter.</p> <p>Constraints: If\
          \ supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example:\
          \ <code>mySubnetGroup</code> </p>"
        explode: true
        in: query
        name: DBSubnetGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A list of DB security groups to authorize on this DB instance.\
          \ Changing this setting doesn't result in an outage and the change is asynchronously\
          \ applied as soon as possible.</p> <p>Constraints:</p> <ul> <li> <p>If supplied,\
          \ must match existing DBSecurityGroups.</p> </li> </ul>"
        explode: true
        in: query
        name: DBSecurityGroups
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: DBSecurityGroupName
          type: array
        style: form
      - description: "<p>A list of EC2 VPC security groups to authorize on this DB\
          \ instance. This change is asynchronously applied as soon as possible.</p>\
          \ <p>Not applicable. The associated list of EC2 VPC security groups is managed\
          \ by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p>\
          \ <p>Constraints:</p> <ul> <li> <p>If supplied, must match existing VpcSecurityGroupIds.</p>\
          \ </li> </ul>"
        explode: true
        in: query
        name: VpcSecurityGroupIds
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: VpcSecurityGroupId
          type: array
        style: form
      - description: "<p>Specifies whether the modifications in this request and any\
          \ pending modifications are asynchronously applied as soon as possible,\
          \ regardless of the <code>PreferredMaintenanceWindow</code> setting for\
          \ the DB instance.</p> <p> If this parameter is set to <code>false</code>,\
          \ changes to the DB instance are applied during the next maintenance window.\
          \ Some parameter changes can cause an outage and are applied on the next\
          \ call to <a>RebootDBInstance</a>, or the next failure reboot.</p> <p>Default:\
          \ <code>false</code> </p>"
        explode: true
        in: query
        name: ApplyImmediately
        required: false
        schema:
          type: boolean
        style: form
      - description: Not supported by Neptune.
        explode: true
        in: query
        name: MasterUserPassword
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The name of the DB parameter group to apply to the DB instance.\
          \ Changing this setting doesn't result in an outage. The parameter group\
          \ name itself is changed immediately, but the actual parameter changes are\
          \ not applied until you reboot the instance without failover. The db instance\
          \ will NOT be rebooted automatically and the parameter changes will NOT\
          \ be applied during the next maintenance window.</p> <p>Default: Uses existing\
          \ setting</p> <p>Constraints: The DB parameter group must be in the same\
          \ DB parameter group family as this DB instance.</p>"
        explode: true
        in: query
        name: DBParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>Not applicable. The retention period for automated backups\
          \ is managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p>\
          \ <p>Default: Uses existing setting</p>"
        explode: true
        in: query
        name: BackupRetentionPeriod
        required: false
        schema:
          type: integer
        style: form
      - description: "<p> The daily time range during which automated backups are\
          \ created if automated backups are enabled.</p> <p>Not applicable. The daily\
          \ time range for creating automated backups is managed by the DB cluster.\
          \ For more information, see <a>ModifyDBCluster</a>.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Must be in the format hh24:mi-hh24:mi</p> </li> <li> <p>Must\
          \ be in Universal Time Coordinated (UTC)</p> </li> <li> <p>Must not conflict\
          \ with the preferred maintenance window</p> </li> <li> <p>Must be at least\
          \ 30 minutes</p> </li> </ul>"
        explode: true
        in: query
        name: PreferredBackupWindow
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The weekly time range (in UTC) during which system maintenance\
          \ can occur, which might result in an outage. Changing this parameter doesn't\
          \ result in an outage, except in the following situation, and the change\
          \ is asynchronously applied as soon as possible. If there are pending actions\
          \ that cause a reboot, and the maintenance window is changed to include\
          \ the current time, then changing this parameter will cause a reboot of\
          \ the DB instance. If moving this window to the current time, there must\
          \ be at least 30 minutes between the current time and end of the window\
          \ to ensure pending changes are applied.</p> <p>Default: Uses existing setting</p>\
          \ <p>Format: ddd:hh24:mi-ddd:hh24:mi</p> <p>Valid Days: Mon | Tue | Wed\
          \ | Thu | Fri | Sat | Sun</p> <p>Constraints: Must be at least 30 minutes</p>"
        explode: true
        in: query
        name: PreferredMaintenanceWindow
        required: false
        schema:
          type: string
        style: form
      - description: Specifies if the DB instance is a Multi-AZ deployment. Changing
          this parameter doesn't result in an outage and the change is applied during
          the next maintenance window unless the <code>ApplyImmediately</code> parameter
          is set to <code>true</code> for this request.
        explode: true
        in: query
        name: MultiAZ
        required: false
        schema:
          type: boolean
        style: form
      - description: "The version number of the database engine to upgrade to. Currently,\
          \ setting this parameter has no effect. To upgrade your database engine\
          \ to the most recent release, use the <a>ApplyPendingMaintenanceAction</a>\
          \ API."
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: Indicates that major version upgrades are allowed. Changing this
          parameter doesn't result in an outage and the change is asynchronously applied
          as soon as possible.
        explode: true
        in: query
        name: AllowMajorVersionUpgrade
        required: false
        schema:
          type: boolean
        style: form
      - description: " Indicates that minor version upgrades are applied automatically\
          \ to the DB instance during the maintenance window. Changing this parameter\
          \ doesn't result in an outage except in the following case and the change\
          \ is asynchronously applied as soon as possible. An outage will result if\
          \ this parameter is set to <code>true</code> during the maintenance window,\
          \ and a newer minor version is available, and Neptune has enabled auto patching\
          \ for that engine version."
        explode: true
        in: query
        name: AutoMinorVersionUpgrade
        required: false
        schema:
          type: boolean
        style: form
      - description: Not supported by Neptune.
        explode: true
        in: query
        name: LicenseModel
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The new Provisioned IOPS (I/O operations per second) value\
          \ for the instance.</p> <p>Changing this setting doesn't result in an outage\
          \ and the change is applied during the next maintenance window unless the\
          \ <code>ApplyImmediately</code> parameter is set to <code>true</code> for\
          \ this request.</p> <p>Default: Uses existing setting</p>"
        explode: true
        in: query
        name: Iops
        required: false
        schema:
          type: integer
        style: form
      - description: ' <i>(Not supported by Neptune)</i> '
        explode: true
        in: query
        name: OptionGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "<p> The new DB instance identifier for the DB instance when\
          \ renaming a DB instance. When you change the DB instance identifier, an\
          \ instance reboot will occur immediately if you set <code>Apply Immediately</code>\
          \ to true, or will occur during the next maintenance window if <code>Apply\
          \ Immediately</code> to false. This value is stored as a lowercase string.</p>\
          \ <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers,\
          \ or hyphens.</p> </li> <li> <p>The first character must be a letter.</p>\
          \ </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>\
          \ </li> </ul> <p>Example: <code>mydbinstance</code> </p>"
        explode: true
        in: query
        name: NewDBInstanceIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: Not supported.
        explode: true
        in: query
        name: StorageType
        required: false
        schema:
          type: string
        style: form
      - description: The ARN from the key store with which to associate the instance
          for TDE encryption.
        explode: true
        in: query
        name: TdeCredentialArn
        required: false
        schema:
          type: string
        style: form
      - description: The password for the given ARN from the key store in order to
          access the device.
        explode: true
        in: query
        name: TdeCredentialPassword
        required: false
        schema:
          type: string
        style: form
      - description: Indicates the certificate that needs to be associated with the
          instance.
        explode: true
        in: query
        name: CACertificateIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: Not supported.
        explode: true
        in: query
        name: Domain
        required: false
        schema:
          type: string
        style: form
      - description: "True to copy all tags from the DB instance to snapshots of the\
          \ DB instance, and otherwise false. The default is false."
        explode: true
        in: query
        name: CopyTagsToSnapshot
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The interval, in seconds, between points when Enhanced Monitoring\
          \ metrics are collected for the DB instance. To disable collecting Enhanced\
          \ Monitoring metrics, specify 0. The default is 0.</p> <p>If <code>MonitoringRoleArn</code>\
          \ is specified, then you must also set <code>MonitoringInterval</code> to\
          \ a value other than 0.</p> <p>Valid Values: <code>0, 1, 5, 10, 15, 30,\
          \ 60</code> </p>"
        explode: true
        in: query
        name: MonitoringInterval
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>The port number on which the database accepts connections.</p>\
          \ <p>The value of the <code>DBPortNumber</code> parameter must not match\
          \ any of the port values specified for options in the option group for the\
          \ DB instance.</p> <p>Your database will restart when you change the <code>DBPortNumber</code>\
          \ value regardless of the value of the <code>ApplyImmediately</code> parameter.</p>\
          \ <p> Default: <code>8182</code> </p>"
        explode: true
        in: query
        name: DBPortNumber
        required: false
        schema:
          type: integer
        style: form
      - description: This flag should no longer be used.
        explode: true
        in: query
        name: PubliclyAccessible
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The ARN for the IAM role that permits Neptune to send enhanced\
          \ monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>.</p>\
          \ <p>If <code>MonitoringInterval</code> is set to a value other than 0,\
          \ then you must supply a <code>MonitoringRoleArn</code> value.</p>"
        explode: true
        in: query
        name: MonitoringRoleArn
        required: false
        schema:
          type: string
        style: form
      - description: Not supported
        explode: true
        in: query
        name: DomainIAMRoleName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A value that specifies the order in which a Read Replica\
          \ is promoted to the primary instance after a failure of the existing primary\
          \ instance.</p> <p>Default: 1</p> <p>Valid Values: 0 - 15</p>"
        explode: true
        in: query
        name: PromotionTier
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>True to enable mapping of Amazon Identity and Access Management\
          \ (IAM) accounts to database accounts, and otherwise false.</p> <p>You can\
          \ enable IAM database authentication for the following database engines</p>\
          \ <p>Not applicable. Mapping Amazon IAM accounts to database accounts is\
          \ managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p>\
          \ <p>Default: <code>false</code> </p>"
        explode: true
        in: query
        name: EnableIAMDatabaseAuthentication
        required: false
        schema:
          type: boolean
        style: form
      - description: ' <i>(Not supported by Neptune)</i> '
        explode: true
        in: query
        name: EnablePerformanceInsights
        required: false
        schema:
          type: boolean
        style: form
      - description: ' <i>(Not supported by Neptune)</i> '
        explode: true
        in: query
        name: PerformanceInsightsKMSKeyId
        required: false
        schema:
          type: string
        style: form
      - description: The configuration setting for the log types to be enabled for
          export to CloudWatch Logs for a specific DB instance or DB cluster.
        explode: true
        in: query
        name: CloudwatchLogsExportConfiguration
        required: false
        schema:
          $ref: '#/components/schemas/GET_ModifyDBCluster_CloudwatchLogsExportConfiguration_parameter'
        style: form
      - description: "A value that indicates whether the DB instance has deletion\
          \ protection enabled. The database can't be deleted when deletion protection\
          \ is enabled. By default, deletion protection is disabled. See <a href=\"\
          https://docs.aws.amazon.com/neptune/latest/userguide/manage-console-instances-delete.html\"\
          >Deleting a DB Instance</a>."
        explode: true
        in: query
        name: DeletionProtection
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBInstance
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBInstanceResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
          description: InvalidDBSecurityGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
          description: DBInstanceAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
          description: DBSecurityGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
          description: InsufficientDBInstanceCapacityFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
          description: ProvisionedIopsNotAvailableInAZFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
          description: OptionGroupNotFoundFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBUpgradeDependencyFailureFault'
          description: DBUpgradeDependencyFailureFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageTypeNotSupportedFault'
          description: StorageTypeNotSupportedFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
          description: AuthorizationNotFoundFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CertificateNotFoundFault'
          description: CertificateNotFoundFault
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DomainNotFoundFault'
          description: DomainNotFoundFault
      x-aws-operation-name: ModifyDBInstance
      x-accepts:
      - text/xml
    post:
      description: "Modifies settings for a DB instance. You can change one or more\
        \ database configuration parameters by specifying these parameters and the\
        \ new values in the request. To learn what modifications you can make to your\
        \ DB instance, call <a>DescribeValidDBInstanceModifications</a> before you\
        \ call <a>ModifyDBInstance</a>."
      operationId: POST_ModifyDBInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBInstance
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyDBInstanceMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBInstanceResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
          description: InvalidDBSecurityGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
          description: DBInstanceAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
          description: DBSecurityGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
          description: InsufficientDBInstanceCapacityFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
          description: ProvisionedIopsNotAvailableInAZFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
          description: OptionGroupNotFoundFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBUpgradeDependencyFailureFault'
          description: DBUpgradeDependencyFailureFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageTypeNotSupportedFault'
          description: StorageTypeNotSupportedFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
          description: AuthorizationNotFoundFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CertificateNotFoundFault'
          description: CertificateNotFoundFault
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DomainNotFoundFault'
          description: DomainNotFoundFault
      x-aws-operation-name: ModifyDBInstance
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyDBParameterGroup:
    get:
      description: "<p>Modifies the parameters of a DB parameter group. To modify\
        \ more than one parameter, submit a list of the following: <code>ParameterName</code>,\
        \ <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of\
        \ 20 parameters can be modified in a single request.</p> <note> <p>Changes\
        \ to dynamic parameters are applied immediately. Changes to static parameters\
        \ require a reboot without failover to the DB instance associated with the\
        \ parameter group before the change can take effect.</p> </note> <important>\
        \ <p>After you modify a DB parameter group, you should wait at least 5 minutes\
        \ before creating your first DB instance that uses that DB parameter group\
        \ as the default parameter group. This allows Amazon Neptune to fully complete\
        \ the modify action before the parameter group is used as the default for\
        \ a new DB instance. This is especially important for parameters that are\
        \ critical when creating the default database for a DB instance, such as the\
        \ character set for the default database defined by the <code>character_set_database</code>\
        \ parameter. You can use the <i>Parameter Groups</i> option of the Amazon\
        \ Neptune console or the <i>DescribeDBParameters</i> command to verify that\
        \ your DB parameter group has been created or modified.</p> </important>"
      operationId: GET_ModifyDBParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of the DB parameter group.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>If supplied, must match the name of an existing DBParameterGroup.</p>\
          \ </li> </ul>"
        explode: true
        in: query
        name: DBParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - description: "<p>An array of parameter names, values, and the apply method\
          \ for the parameter update. At least one parameter name, value, and apply\
          \ method must be supplied; subsequent arguments are optional. A maximum\
          \ of 20 parameters can be modified in a single request.</p> <p>Valid Values\
          \ (for the application method): <code>immediate | pending-reboot</code>\
          \ </p> <note> <p>You can use the immediate value with dynamic parameters\
          \ only. You can use the pending-reboot value for both dynamic and static\
          \ parameters, and changes are applied when you reboot the DB instance without\
          \ failover.</p> </note>"
        explode: true
        in: query
        name: Parameters
        required: true
        schema:
          items:
            $ref: '#/components/schemas/GET_ModifyDBClusterParameterGroup_Parameters_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNameMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
      x-aws-operation-name: ModifyDBParameterGroup
      x-accepts:
      - text/xml
    post:
      description: "<p>Modifies the parameters of a DB parameter group. To modify\
        \ more than one parameter, submit a list of the following: <code>ParameterName</code>,\
        \ <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of\
        \ 20 parameters can be modified in a single request.</p> <note> <p>Changes\
        \ to dynamic parameters are applied immediately. Changes to static parameters\
        \ require a reboot without failover to the DB instance associated with the\
        \ parameter group before the change can take effect.</p> </note> <important>\
        \ <p>After you modify a DB parameter group, you should wait at least 5 minutes\
        \ before creating your first DB instance that uses that DB parameter group\
        \ as the default parameter group. This allows Amazon Neptune to fully complete\
        \ the modify action before the parameter group is used as the default for\
        \ a new DB instance. This is especially important for parameters that are\
        \ critical when creating the default database for a DB instance, such as the\
        \ character set for the default database defined by the <code>character_set_database</code>\
        \ parameter. You can use the <i>Parameter Groups</i> option of the Amazon\
        \ Neptune console or the <i>DescribeDBParameters</i> command to verify that\
        \ your DB parameter group has been created or modified.</p> </important>"
      operationId: POST_ModifyDBParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyDBParameterGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNameMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
      x-aws-operation-name: ModifyDBParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyDBSubnetGroup:
    get:
      description: Modifies an existing DB subnet group. DB subnet groups must contain
        at least one subnet in at least two AZs in the Amazon Region.
      operationId: GET_ModifyDBSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name for the DB subnet group. This value is stored as\
          \ a lowercase string. You can't modify the default subnet group.</p> <p>Constraints:\
          \ Must match the name of an existing DBSubnetGroup. Must not be default.</p>\
          \ <p>Example: <code>mySubnetgroup</code> </p>"
        explode: true
        in: query
        name: DBSubnetGroupName
        required: true
        schema:
          type: string
        style: form
      - description: The description for the DB subnet group.
        explode: true
        in: query
        name: DBSubnetGroupDescription
        required: false
        schema:
          type: string
        style: form
      - description: The EC2 subnet IDs for the DB subnet group.
        explode: true
        in: query
        name: SubnetIds
        required: true
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: SubnetIdentifier
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBSubnetGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'
          description: DBSubnetQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetAlreadyInUse'
          description: SubnetAlreadyInUse
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
          description: DBSubnetGroupDoesNotCoverEnoughAZs
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
      x-aws-operation-name: ModifyDBSubnetGroup
      x-accepts:
      - text/xml
    post:
      description: Modifies an existing DB subnet group. DB subnet groups must contain
        at least one subnet in at least two AZs in the Amazon Region.
      operationId: POST_ModifyDBSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyDBSubnetGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBSubnetGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'
          description: DBSubnetQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetAlreadyInUse'
          description: SubnetAlreadyInUse
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
          description: DBSubnetGroupDoesNotCoverEnoughAZs
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
      x-aws-operation-name: ModifyDBSubnetGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyEventSubscription:
    get:
      description: "<p>Modifies an existing event notification subscription. Note\
        \ that you can't modify the source identifiers using this call; to change\
        \ source identifiers for a subscription, use the <a>AddSourceIdentifierToSubscription</a>\
        \ and <a>RemoveSourceIdentifierFromSubscription</a> calls.</p> <p>You can\
        \ see a list of the event categories for a given SourceType by using the <b>DescribeEventCategories</b>\
        \ action.</p>"
      operationId: GET_ModifyEventSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the event notification subscription.
        explode: true
        in: query
        name: SubscriptionName
        required: true
        schema:
          type: string
        style: form
      - description: The Amazon Resource Name (ARN) of the SNS topic created for event
          notification. The ARN is created by Amazon SNS when you create a topic and
          subscribe to it.
        explode: true
        in: query
        name: SnsTopicArn
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The type of source that is generating the events. For example,\
          \ if you want to be notified of events generated by a DB instance, you would\
          \ set this parameter to db-instance. if this value is not specified, all\
          \ events are returned.</p> <p>Valid values: db-instance | db-parameter-group\
          \ | db-security-group | db-snapshot</p>"
        explode: true
        in: query
        name: SourceType
        required: false
        schema:
          type: string
        style: form
      - description: ' A list of event categories for a SourceType that you want to
          subscribe to. You can see a list of the categories for a given SourceType
          by using the <b>DescribeEventCategories</b> action.'
        explode: true
        in: query
        name: EventCategories
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: EventCategory
          type: array
        style: form
      - description: ' A Boolean value; set to <b>true</b> to activate the subscription.'
        explode: true
        in: query
        name: Enabled
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyEventSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyEventSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'
          description: EventSubscriptionQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
          description: SNSInvalidTopicFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
          description: SNSNoAuthorizationFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
          description: SNSTopicArnNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
          description: SubscriptionCategoryNotFoundFault
      x-aws-operation-name: ModifyEventSubscription
      x-accepts:
      - text/xml
    post:
      description: "<p>Modifies an existing event notification subscription. Note\
        \ that you can't modify the source identifiers using this call; to change\
        \ source identifiers for a subscription, use the <a>AddSourceIdentifierToSubscription</a>\
        \ and <a>RemoveSourceIdentifierFromSubscription</a> calls.</p> <p>You can\
        \ see a list of the event categories for a given SourceType by using the <b>DescribeEventCategories</b>\
        \ action.</p>"
      operationId: POST_ModifyEventSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyEventSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyEventSubscriptionMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyEventSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'
          description: EventSubscriptionQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
          description: SNSInvalidTopicFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
          description: SNSNoAuthorizationFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
          description: SNSTopicArnNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
          description: SubscriptionCategoryNotFoundFault
      x-aws-operation-name: ModifyEventSubscription
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyGlobalCluster:
    get:
      description: Modify a setting for an Amazon Neptune global cluster. You can
        change one or more database configuration parameters by specifying these parameters
        and their new values in the request.
      operationId: GET_ModifyGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The DB cluster identifier for the global cluster being modified.\
          \ This parameter is not case-sensitive.</p> <p>Constraints: Must match the\
          \ identifier of an existing global database cluster.</p>"
        explode: true
        in: query
        name: GlobalClusterIdentifier
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[A-Za-z][0-9A-Za-z-:._]*"
          type: string
        style: form
      - description: "<p>A new cluster identifier to assign to the global database.\
          \ This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul>\
          \ <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li>\
          \ <li> <p>The first character must be a letter.</p> </li> <li> <p>Can't\
          \ end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example:\
          \ <code>my-cluster2</code> </p>"
        explode: true
        in: query
        name: NewGlobalClusterIdentifier
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[A-Za-z][0-9A-Za-z-:._]*"
          type: string
        style: form
      - description: Indicates whether the global database has deletion protection
          enabled. The global database cannot be deleted when deletion protection
          is enabled.
        explode: true
        in: query
        name: DeletionProtection
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The version number of the database engine to which you want\
          \ to upgrade. Changing this parameter will result in an outage. The change\
          \ is applied during the next maintenance window unless <code>ApplyImmediately</code>\
          \ is enabled.</p> <p>To list all of the available Neptune engine versions,\
          \ use the following command:</p>"
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A value that indicates whether major version upgrades are\
          \ allowed.</p> <p>Constraints: You must allow major version upgrades if\
          \ you specify a value for the <code>EngineVersion</code> parameter that\
          \ is a different major version than the DB cluster's current version.</p>\
          \ <p>If you upgrade the major version of a global database, the cluster\
          \ and DB instance parameter groups are set to the default parameter groups\
          \ for the new version, so you will need to apply any custom parameter groups\
          \ after completing the upgrade.</p>"
        explode: true
        in: query
        name: AllowMajorVersionUpgrade
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
      x-aws-operation-name: ModifyGlobalCluster
      x-accepts:
      - text/xml
    post:
      description: Modify a setting for an Amazon Neptune global cluster. You can
        change one or more database configuration parameters by specifying these parameters
        and their new values in the request.
      operationId: POST_ModifyGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyGlobalClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
      x-aws-operation-name: ModifyGlobalCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=PromoteReadReplicaDBCluster:
    get:
      description: Not supported.
      operationId: GET_PromoteReadReplicaDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Not supported.
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - PromoteReadReplicaDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PromoteReadReplicaDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
      x-aws-operation-name: PromoteReadReplicaDBCluster
      x-accepts:
      - text/xml
    post:
      description: Not supported.
      operationId: POST_PromoteReadReplicaDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - PromoteReadReplicaDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PromoteReadReplicaDBClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PromoteReadReplicaDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
      x-aws-operation-name: PromoteReadReplicaDBCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RebootDBInstance:
    get:
      description: "<p>You might need to reboot your DB instance, usually for maintenance\
        \ reasons. For example, if you make certain modifications, or if you change\
        \ the DB parameter group associated with the DB instance, you must reboot\
        \ the instance for the changes to take effect.</p> <p>Rebooting a DB instance\
        \ restarts the database engine service. Rebooting a DB instance results in\
        \ a momentary outage, during which the DB instance status is set to rebooting.</p>"
      operationId: GET_RebootDBInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The DB instance identifier. This parameter is stored as a
          lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier
          of an existing DBInstance.</p> </li> </ul>
        explode: true
        in: query
        name: DBInstanceIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p> When <code>true</code>, the reboot is conducted through\
          \ a MultiAZ failover.</p> <p>Constraint: You can't specify <code>true</code>\
          \ if the instance is not configured for MultiAZ.</p>"
        explode: true
        in: query
        name: ForceFailover
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RebootDBInstance
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RebootDBInstanceResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
      x-aws-operation-name: RebootDBInstance
      x-accepts:
      - text/xml
    post:
      description: "<p>You might need to reboot your DB instance, usually for maintenance\
        \ reasons. For example, if you make certain modifications, or if you change\
        \ the DB parameter group associated with the DB instance, you must reboot\
        \ the instance for the changes to take effect.</p> <p>Rebooting a DB instance\
        \ restarts the database engine service. Rebooting a DB instance results in\
        \ a momentary outage, during which the DB instance status is set to rebooting.</p>"
      operationId: POST_RebootDBInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RebootDBInstance
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RebootDBInstanceMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RebootDBInstanceResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
      x-aws-operation-name: RebootDBInstance
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RemoveFromGlobalCluster:
    get:
      description: "Detaches a Neptune DB cluster from a Neptune global database.\
        \ A secondary cluster becomes a normal standalone cluster with read-write\
        \ capability instead of being read-only, and no longer receives data from\
        \ a the primary cluster."
      operationId: GET_RemoveFromGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the Neptune global database from which to detach
          the specified Neptune DB cluster.
        explode: true
        in: query
        name: GlobalClusterIdentifier
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[A-Za-z][0-9A-Za-z-:._]*"
          type: string
        style: form
      - description: The Amazon Resource Name (ARN) identifying the cluster to be
          detached from the Neptune global database cluster.
        explode: true
        in: query
        name: DbClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemoveFromGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RemoveFromGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: RemoveFromGlobalCluster
      x-accepts:
      - text/xml
    post:
      description: "Detaches a Neptune DB cluster from a Neptune global database.\
        \ A secondary cluster becomes a normal standalone cluster with read-write\
        \ capability instead of being read-only, and no longer receives data from\
        \ a the primary cluster."
      operationId: POST_RemoveFromGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemoveFromGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoveFromGlobalClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RemoveFromGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: RemoveFromGlobalCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RemoveRoleFromDBCluster:
    get:
      description: Disassociates an Identity and Access Management (IAM) role from
        a DB cluster.
      operationId: GET_RemoveRoleFromDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the DB cluster to disassociate the IAM role from.
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "The Amazon Resource Name (ARN) of the IAM role to disassociate\
          \ from the DB cluster, for example <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>."
        explode: true
        in: query
        name: RoleArn
        required: true
        schema:
          type: string
        style: form
      - description: "The name of the feature for the DB cluster that the IAM role\
          \ is to be disassociated from. For the list of supported feature names,\
          \ see <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/api-other-apis.html#DescribeDBEngineVersions\"\
          >DescribeDBEngineVersions</a>."
        explode: true
        in: query
        name: FeatureName
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemoveRoleFromDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterRoleNotFoundFault'
          description: DBClusterRoleNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
      x-aws-operation-name: RemoveRoleFromDBCluster
      x-accepts:
      - text/xml
    post:
      description: Disassociates an Identity and Access Management (IAM) role from
        a DB cluster.
      operationId: POST_RemoveRoleFromDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemoveRoleFromDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoveRoleFromDBClusterMessage'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterRoleNotFoundFault'
          description: DBClusterRoleNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
      x-aws-operation-name: RemoveRoleFromDBCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RemoveSourceIdentifierFromSubscription:
    get:
      description: Removes a source identifier from an existing event notification
        subscription.
      operationId: GET_RemoveSourceIdentifierFromSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the event notification subscription you want to remove
          a source identifier from.
        explode: true
        in: query
        name: SubscriptionName
        required: true
        schema:
          type: string
        style: form
      - description: " The source identifier to be removed from the subscription,\
          \ such as the <b>DB instance identifier</b> for a DB instance or the name\
          \ of a security group."
        explode: true
        in: query
        name: SourceIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemoveSourceIdentifierFromSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RemoveSourceIdentifierFromSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
          description: SourceNotFoundFault
      x-aws-operation-name: RemoveSourceIdentifierFromSubscription
      x-accepts:
      - text/xml
    post:
      description: Removes a source identifier from an existing event notification
        subscription.
      operationId: POST_RemoveSourceIdentifierFromSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemoveSourceIdentifierFromSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoveSourceIdentifierFromSubscriptionMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RemoveSourceIdentifierFromSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
          description: SourceNotFoundFault
      x-aws-operation-name: RemoveSourceIdentifierFromSubscription
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RemoveTagsFromResource:
    get:
      description: Removes metadata tags from an Amazon Neptune resource.
      operationId: GET_RemoveTagsFromResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Neptune resource that the tags are removed from.\
          \ This value is an Amazon Resource Name (ARN). For information about creating\
          \ an ARN, see <a href=\"https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"\
          > Constructing an Amazon Resource Name (ARN)</a>."
        explode: true
        in: query
        name: ResourceName
        required: true
        schema:
          type: string
        style: form
      - description: The tag key (name) of the tag to be removed.
        explode: true
        in: query
        name: TagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemoveTagsFromResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
          description: DBSnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: RemoveTagsFromResource
      x-accepts:
      - text/xml
    post:
      description: Removes metadata tags from an Amazon Neptune resource.
      operationId: POST_RemoveTagsFromResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemoveTagsFromResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoveTagsFromResourceMessage'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
          description: DBSnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: RemoveTagsFromResource
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ResetDBClusterParameterGroup:
    get:
      description: "<p> Modifies the parameters of a DB cluster parameter group to\
        \ the default value. To reset specific parameters submit a list of the following:\
        \ <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire\
        \ DB cluster parameter group, specify the <code>DBClusterParameterGroupName</code>\
        \ and <code>ResetAllParameters</code> parameters.</p> <p> When resetting the\
        \ entire group, dynamic parameters are updated immediately and static parameters\
        \ are set to <code>pending-reboot</code> to take effect on the next DB instance\
        \ restart or <a>RebootDBInstance</a> request. You must call <a>RebootDBInstance</a>\
        \ for every DB instance in your DB cluster that you want the updated static\
        \ parameter to apply to.</p>"
      operationId: GET_ResetDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the DB cluster parameter group to reset.
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - description: "A value that is set to <code>true</code> to reset all parameters\
          \ in the DB cluster parameter group to their default values, and <code>false</code>\
          \ otherwise. You can't use this parameter if there is a list of parameter\
          \ names specified for the <code>Parameters</code> parameter."
        explode: true
        in: query
        name: ResetAllParameters
        required: false
        schema:
          type: boolean
        style: form
      - description: A list of parameter names in the DB cluster parameter group to
          reset to the default values. You can't use this parameter if the <code>ResetAllParameters</code>
          parameter is set to <code>true</code>.
        explode: true
        in: query
        name: Parameters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_ModifyDBClusterParameterGroup_Parameters_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ResetDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNameMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: ResetDBClusterParameterGroup
      x-accepts:
      - text/xml
    post:
      description: "<p> Modifies the parameters of a DB cluster parameter group to\
        \ the default value. To reset specific parameters submit a list of the following:\
        \ <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire\
        \ DB cluster parameter group, specify the <code>DBClusterParameterGroupName</code>\
        \ and <code>ResetAllParameters</code> parameters.</p> <p> When resetting the\
        \ entire group, dynamic parameters are updated immediately and static parameters\
        \ are set to <code>pending-reboot</code> to take effect on the next DB instance\
        \ restart or <a>RebootDBInstance</a> request. You must call <a>RebootDBInstance</a>\
        \ for every DB instance in your DB cluster that you want the updated static\
        \ parameter to apply to.</p>"
      operationId: POST_ResetDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ResetDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResetDBClusterParameterGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNameMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: ResetDBClusterParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ResetDBParameterGroup:
    get:
      description: "Modifies the parameters of a DB parameter group to the engine/system\
        \ default value. To reset specific parameters, provide a list of the following:\
        \ <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire\
        \ DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code>\
        \ parameters. When resetting the entire group, dynamic parameters are updated\
        \ immediately and static parameters are set to <code>pending-reboot</code>\
        \ to take effect on the next DB instance restart or <code>RebootDBInstance</code>\
        \ request."
      operationId: GET_ResetDBParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The name of the DB parameter group.</p> <p>Constraints:</p>
          <ul> <li> <p>Must match the name of an existing DBParameterGroup.</p> </li>
          </ul>
        explode: true
        in: query
        name: DBParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - description: "<p>Specifies whether (<code>true</code>) or not (<code>false</code>)\
          \ to reset all parameters in the DB parameter group to default values.</p>\
          \ <p>Default: <code>true</code> </p>"
        explode: true
        in: query
        name: ResetAllParameters
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>To reset the entire DB parameter group, specify the <code>DBParameterGroup</code>\
          \ name and <code>ResetAllParameters</code> parameters. To reset specific\
          \ parameters, provide a list of the following: <code>ParameterName</code>\
          \ and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified\
          \ in a single request.</p> <p>Valid Values (for Apply method): <code>pending-reboot</code>\
          \ </p>"
        explode: true
        in: query
        name: Parameters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_ModifyDBClusterParameterGroup_Parameters_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ResetDBParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNameMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: ResetDBParameterGroup
      x-accepts:
      - text/xml
    post:
      description: "Modifies the parameters of a DB parameter group to the engine/system\
        \ default value. To reset specific parameters, provide a list of the following:\
        \ <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire\
        \ DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code>\
        \ parameters. When resetting the entire group, dynamic parameters are updated\
        \ immediately and static parameters are set to <code>pending-reboot</code>\
        \ to take effect on the next DB instance restart or <code>RebootDBInstance</code>\
        \ request."
      operationId: POST_ResetDBParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ResetDBParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResetDBParameterGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNameMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: ResetDBParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RestoreDBClusterFromSnapshot:
    get:
      description: "<p>Creates a new DB cluster from a DB snapshot or DB cluster snapshot.</p>\
        \ <p>If a DB snapshot is specified, the target DB cluster is created from\
        \ the source DB snapshot with a default configuration and default security\
        \ group.</p> <p>If a DB cluster snapshot is specified, the target DB cluster\
        \ is created from the source DB cluster restore point with the same configuration\
        \ as the original source DB cluster, except that the new DB cluster is created\
        \ with the default security group.</p>"
      operationId: GET_RestoreDBClusterFromSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Provides the list of EC2 Availability Zones that instances in
          the restored DB cluster can be created in.
        explode: true
        in: query
        name: AvailabilityZones
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: AvailabilityZone
          type: array
        style: form
      - description: "<p>The name of the DB cluster to create from the DB snapshot\
          \ or DB cluster snapshot. This parameter isn't case-sensitive.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p>\
          \ </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot\
          \ end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example:\
          \ <code>my-snapshot-id</code> </p>"
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The identifier for the DB snapshot or DB cluster snapshot\
          \ to restore from.</p> <p>You can use either the name or the Amazon Resource\
          \ Name (ARN) to specify a DB cluster snapshot. However, you can use only\
          \ the ARN to specify a DB snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must\
          \ match the identifier of an existing Snapshot.</p> </li> </ul>"
        explode: true
        in: query
        name: SnapshotIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The database engine to use for the new DB cluster.</p> <p>Default:\
          \ The same as source</p> <p>Constraint: Must be compatible with the engine\
          \ of the source</p>"
        explode: true
        in: query
        name: Engine
        required: true
        schema:
          type: string
        style: form
      - description: The version of the database engine to use for the new DB cluster.
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The port number on which the new DB cluster accepts connections.</p>\
          \ <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default:\
          \ The same port as the original DB cluster.</p>"
        explode: true
        in: query
        name: Port
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>The name of the DB subnet group to use for the new DB cluster.</p>\
          \ <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p>\
          \ <p>Example: <code>mySubnetgroup</code> </p>"
        explode: true
        in: query
        name: DBSubnetGroupName
        required: false
        schema:
          type: string
        style: form
      - description: Not supported.
        explode: true
        in: query
        name: DatabaseName
        required: false
        schema:
          type: string
        style: form
      - description: ' <i>(Not supported by Neptune)</i> '
        explode: true
        in: query
        name: OptionGroupName
        required: false
        schema:
          type: string
        style: form
      - description: A list of VPC security groups that the new DB cluster will belong
          to.
        explode: true
        in: query
        name: VpcSecurityGroupIds
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: VpcSecurityGroupId
          type: array
        style: form
      - description: The tags to be assigned to the restored DB cluster.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - description: "<p>The Amazon KMS key identifier to use when restoring an encrypted\
          \ DB cluster from a DB snapshot or DB cluster snapshot.</p> <p>The KMS key\
          \ identifier is the Amazon Resource Name (ARN) for the KMS encryption key.\
          \ If you are restoring a DB cluster with the same Amazon account that owns\
          \ the KMS encryption key used to encrypt the new DB cluster, then you can\
          \ use the KMS key alias instead of the ARN for the KMS encryption key.</p>\
          \ <p>If you do not specify a value for the <code>KmsKeyId</code> parameter,\
          \ then the following will occur:</p> <ul> <li> <p>If the DB snapshot or\
          \ DB cluster snapshot in <code>SnapshotIdentifier</code> is encrypted, then\
          \ the restored DB cluster is encrypted using the KMS key that was used to\
          \ encrypt the DB snapshot or DB cluster snapshot.</p> </li> <li> <p>If the\
          \ DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code>\
          \ is not encrypted, then the restored DB cluster is not encrypted.</p> </li>\
          \ </ul>"
        explode: true
        in: query
        name: KmsKeyId
        required: false
        schema:
          type: string
        style: form
      - description: "<p>True to enable mapping of Amazon Identity and Access Management\
          \ (IAM) accounts to database accounts, and otherwise false.</p> <p>Default:\
          \ <code>false</code> </p>"
        explode: true
        in: query
        name: EnableIAMDatabaseAuthentication
        required: false
        schema:
          type: boolean
        style: form
      - description: The list of logs that the restored DB cluster is to export to
          Amazon CloudWatch Logs.
        explode: true
        in: query
        name: EnableCloudwatchLogsExports
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - description: "<p>The name of the DB cluster parameter group to associate with\
          \ the new DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>If supplied,\
          \ must match the name of an existing DBClusterParameterGroup.</p> </li>\
          \ </ul>"
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "A value that indicates whether the DB cluster has deletion protection\
          \ enabled. The database can't be deleted when deletion protection is enabled.\
          \ By default, deletion protection is disabled. "
        explode: true
        in: query
        name: DeletionProtection
        required: false
        schema:
          type: boolean
        style: form
      - description: " <i>If set to <code>true</code>, tags are copied to any snapshot\
          \ of the restored DB cluster that is created.</i> "
        explode: true
        in: query
        name: CopyTagsToSnapshot
        required: false
        schema:
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: ServerlessV2ScalingConfiguration
        required: false
        schema:
          $ref: '#/components/schemas/GET_CreateDBCluster_ServerlessV2ScalingConfiguration_parameter'
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RestoreDBClusterFromSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreDBClusterFromSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
          description: DBClusterAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterQuotaExceededFault'
          description: DBClusterQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
          description: DBSnapshotNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBClusterCapacityFault'
          description: InsufficientDBClusterCapacityFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientStorageClusterCapacityFault'
          description: InsufficientStorageClusterCapacityFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
          description: InvalidDBSnapshotStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
          description: InvalidRestoreFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
          description: OptionGroupNotFoundFault
        "496":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
        "497":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNotFoundFault'
          description: DBClusterParameterGroupNotFoundFault
      x-aws-operation-name: RestoreDBClusterFromSnapshot
      x-accepts:
      - text/xml
    post:
      description: "<p>Creates a new DB cluster from a DB snapshot or DB cluster snapshot.</p>\
        \ <p>If a DB snapshot is specified, the target DB cluster is created from\
        \ the source DB snapshot with a default configuration and default security\
        \ group.</p> <p>If a DB cluster snapshot is specified, the target DB cluster\
        \ is created from the source DB cluster restore point with the same configuration\
        \ as the original source DB cluster, except that the new DB cluster is created\
        \ with the default security group.</p>"
      operationId: POST_RestoreDBClusterFromSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RestoreDBClusterFromSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RestoreDBClusterFromSnapshotMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreDBClusterFromSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
          description: DBClusterAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterQuotaExceededFault'
          description: DBClusterQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
          description: DBSnapshotNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBClusterCapacityFault'
          description: InsufficientDBClusterCapacityFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientStorageClusterCapacityFault'
          description: InsufficientStorageClusterCapacityFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
          description: InvalidDBSnapshotStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
          description: InvalidRestoreFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
          description: OptionGroupNotFoundFault
        "496":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
        "497":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNotFoundFault'
          description: DBClusterParameterGroupNotFoundFault
      x-aws-operation-name: RestoreDBClusterFromSnapshot
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RestoreDBClusterToPointInTime:
    get:
      description: "<p>Restores a DB cluster to an arbitrary point in time. Users\
        \ can restore to any point in time before <code>LatestRestorableTime</code>\
        \ for up to <code>BackupRetentionPeriod</code> days. The target DB cluster\
        \ is created from the source DB cluster with the same configuration as the\
        \ original DB cluster, except that the new DB cluster is created with the\
        \ default DB security group.</p> <note> <p>This action only restores the DB\
        \ cluster, not the DB instances for that DB cluster. You must invoke the <a>CreateDBInstance</a>\
        \ action to create DB instances for the restored DB cluster, specifying the\
        \ identifier of the restored DB cluster in <code>DBClusterIdentifier</code>.\
        \ You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code>\
        \ action has completed and the DB cluster is available.</p> </note>"
      operationId: GET_RestoreDBClusterToPointInTime
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of the new DB cluster to be created.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p>\
          \ </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot\
          \ end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The type of restore to be performed. You can specify one\
          \ of the following values:</p> <ul> <li> <p> <code>full-copy</code> - The\
          \ new DB cluster is restored as a full copy of the source DB cluster.</p>\
          \ </li> <li> <p> <code>copy-on-write</code> - The new DB cluster is restored\
          \ as a clone of the source DB cluster.</p> </li> </ul> <p>If you don't specify\
          \ a <code>RestoreType</code> value, then the new DB cluster is restored\
          \ as a full copy of the source DB cluster.</p>"
        explode: true
        in: query
        name: RestoreType
        required: false
        schema:
          type: string
        style: form
      - description: <p>The identifier of the source DB cluster from which to restore.</p>
          <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing
          DBCluster.</p> </li> </ul>
        explode: true
        in: query
        name: SourceDBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The date and time to restore the DB cluster to.</p> <p>Valid\
          \ Values: Value must be a time in Universal Coordinated Time (UTC) format</p>\
          \ <p>Constraints:</p> <ul> <li> <p>Must be before the latest restorable\
          \ time for the DB instance</p> </li> <li> <p>Must be specified if <code>UseLatestRestorableTime</code>\
          \ parameter is not provided</p> </li> <li> <p>Cannot be specified if <code>UseLatestRestorableTime</code>\
          \ parameter is true</p> </li> <li> <p>Cannot be specified if <code>RestoreType</code>\
          \ parameter is <code>copy-on-write</code> </p> </li> </ul> <p>Example: <code>2015-03-07T23:45:00Z</code>\
          \ </p>"
        explode: true
        in: query
        name: RestoreToTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "<p>A value that is set to <code>true</code> to restore the DB\
          \ cluster to the latest restorable backup time, and <code>false</code> otherwise.</p>\
          \ <p>Default: <code>false</code> </p> <p>Constraints: Cannot be specified\
          \ if <code>RestoreToTime</code> parameter is provided.</p>"
        explode: true
        in: query
        name: UseLatestRestorableTime
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The port number on which the new DB cluster accepts connections.</p>\
          \ <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default:\
          \ The same port as the original DB cluster.</p>"
        explode: true
        in: query
        name: Port
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>The DB subnet group name to use for the new DB cluster.</p>\
          \ <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p>\
          \ <p>Example: <code>mySubnetgroup</code> </p>"
        explode: true
        in: query
        name: DBSubnetGroupName
        required: false
        schema:
          type: string
        style: form
      - description: ' <i>(Not supported by Neptune)</i> '
        explode: true
        in: query
        name: OptionGroupName
        required: false
        schema:
          type: string
        style: form
      - description: A list of VPC security groups that the new DB cluster belongs
          to.
        explode: true
        in: query
        name: VpcSecurityGroupIds
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: VpcSecurityGroupId
          type: array
        style: form
      - description: The tags to be applied to the restored DB cluster.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - description: "<p>The Amazon KMS key identifier to use when restoring an encrypted\
          \ DB cluster from an encrypted DB cluster.</p> <p>The KMS key identifier\
          \ is the Amazon Resource Name (ARN) for the KMS encryption key. If you are\
          \ restoring a DB cluster with the same Amazon account that owns the KMS\
          \ encryption key used to encrypt the new DB cluster, then you can use the\
          \ KMS key alias instead of the ARN for the KMS encryption key.</p> <p>You\
          \ can restore to a new DB cluster and encrypt the new DB cluster with a\
          \ KMS key that is different than the KMS key used to encrypt the source\
          \ DB cluster. The new DB cluster is encrypted with the KMS key identified\
          \ by the <code>KmsKeyId</code> parameter.</p> <p>If you do not specify a\
          \ value for the <code>KmsKeyId</code> parameter, then the following will\
          \ occur:</p> <ul> <li> <p>If the DB cluster is encrypted, then the restored\
          \ DB cluster is encrypted using the KMS key that was used to encrypt the\
          \ source DB cluster.</p> </li> <li> <p>If the DB cluster is not encrypted,\
          \ then the restored DB cluster is not encrypted.</p> </li> </ul> <p>If <code>DBClusterIdentifier</code>\
          \ refers to a DB cluster that is not encrypted, then the restore request\
          \ is rejected.</p>"
        explode: true
        in: query
        name: KmsKeyId
        required: false
        schema:
          type: string
        style: form
      - description: "<p>True to enable mapping of Amazon Identity and Access Management\
          \ (IAM) accounts to database accounts, and otherwise false.</p> <p>Default:\
          \ <code>false</code> </p>"
        explode: true
        in: query
        name: EnableIAMDatabaseAuthentication
        required: false
        schema:
          type: boolean
        style: form
      - description: The list of logs that the restored DB cluster is to export to
          CloudWatch Logs.
        explode: true
        in: query
        name: EnableCloudwatchLogsExports
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - description: "<p>The name of the DB cluster parameter group to associate with\
          \ the new DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>If supplied,\
          \ must match the name of an existing DBClusterParameterGroup.</p> </li>\
          \ </ul>"
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "A value that indicates whether the DB cluster has deletion protection\
          \ enabled. The database can't be deleted when deletion protection is enabled.\
          \ By default, deletion protection is disabled. "
        explode: true
        in: query
        name: DeletionProtection
        required: false
        schema:
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: ServerlessV2ScalingConfiguration
        required: false
        schema:
          $ref: '#/components/schemas/GET_CreateDBCluster_ServerlessV2ScalingConfiguration_parameter'
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RestoreDBClusterToPointInTime
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreDBClusterToPointInTimeResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
          description: DBClusterAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterQuotaExceededFault'
          description: DBClusterQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBClusterCapacityFault'
          description: InsufficientDBClusterCapacityFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientStorageClusterCapacityFault'
          description: InsufficientStorageClusterCapacityFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
          description: InvalidDBSnapshotStateFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
          description: InvalidRestoreFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
          description: OptionGroupNotFoundFault
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "496":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNotFoundFault'
          description: DBClusterParameterGroupNotFoundFault
      x-aws-operation-name: RestoreDBClusterToPointInTime
      x-accepts:
      - text/xml
    post:
      description: "<p>Restores a DB cluster to an arbitrary point in time. Users\
        \ can restore to any point in time before <code>LatestRestorableTime</code>\
        \ for up to <code>BackupRetentionPeriod</code> days. The target DB cluster\
        \ is created from the source DB cluster with the same configuration as the\
        \ original DB cluster, except that the new DB cluster is created with the\
        \ default DB security group.</p> <note> <p>This action only restores the DB\
        \ cluster, not the DB instances for that DB cluster. You must invoke the <a>CreateDBInstance</a>\
        \ action to create DB instances for the restored DB cluster, specifying the\
        \ identifier of the restored DB cluster in <code>DBClusterIdentifier</code>.\
        \ You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code>\
        \ action has completed and the DB cluster is available.</p> </note>"
      operationId: POST_RestoreDBClusterToPointInTime
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RestoreDBClusterToPointInTime
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RestoreDBClusterToPointInTimeMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreDBClusterToPointInTimeResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
          description: DBClusterAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterQuotaExceededFault'
          description: DBClusterQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBClusterCapacityFault'
          description: InsufficientDBClusterCapacityFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientStorageClusterCapacityFault'
          description: InsufficientStorageClusterCapacityFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
          description: InvalidDBSnapshotStateFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
          description: InvalidRestoreFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
          description: OptionGroupNotFoundFault
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "496":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNotFoundFault'
          description: DBClusterParameterGroupNotFoundFault
      x-aws-operation-name: RestoreDBClusterToPointInTime
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=StartDBCluster:
    get:
      description: "Starts an Amazon Neptune DB cluster that was stopped using the\
        \ Amazon console, the Amazon CLI stop-db-cluster command, or the StopDBCluster\
        \ API."
      operationId: GET_StartDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The DB cluster identifier of the Neptune DB cluster to be started.
          This parameter is stored as a lowercase string.
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - StartDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StartDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: StartDBCluster
      x-accepts:
      - text/xml
    post:
      description: "Starts an Amazon Neptune DB cluster that was stopped using the\
        \ Amazon console, the Amazon CLI stop-db-cluster command, or the StopDBCluster\
        \ API."
      operationId: POST_StartDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - StartDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/StartDBClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StartDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: StartDBCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=StopDBCluster:
    get:
      description: "<p>Stops an Amazon Neptune DB cluster. When you stop a DB cluster,\
        \ Neptune retains the DB cluster's metadata, including its endpoints and DB\
        \ parameter groups.</p> <p>Neptune also retains the transaction logs so you\
        \ can do a point-in-time restore if necessary.</p>"
      operationId: GET_StopDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The DB cluster identifier of the Neptune DB cluster to be stopped.
          This parameter is stored as a lowercase string.
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - StopDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StopDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: StopDBCluster
      x-accepts:
      - text/xml
    post:
      description: "<p>Stops an Amazon Neptune DB cluster. When you stop a DB cluster,\
        \ Neptune retains the DB cluster's metadata, including its endpoints and DB\
        \ parameter groups.</p> <p>Neptune also retains the transaction logs so you\
        \ can do a point-in-time restore if necessary.</p>"
      operationId: POST_StopDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - StopDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/StopDBClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StopDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: StopDBCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    DBClusterNotFoundFault: {}
    DBClusterRoleAlreadyExistsFault: {}
    InvalidDBClusterStateFault: {}
    DBClusterRoleQuotaExceededFault: {}
    AddSourceIdentifierToSubscriptionResult:
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
      type: object
    SubscriptionNotFoundFault: {}
    SourceNotFoundFault: {}
    Tag:
      description: Metadata assigned to an Amazon Neptune resource consisting of a
        key-value pair.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A key is the required name of the tag. The string value\
              \ can be from 1 to 128 Unicode characters in length and can't be prefixed\
              \ with <code>aws:</code> or <code>rds:</code>. The string can only contain\
              \ the set of Unicode letters, digits, white-space, '_', '.', '/', '=',\
              \ '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\"\
              )."
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A value is the optional value of the tag. The string value\
              \ can be from 1 to 256 Unicode characters in length and can't be prefixed\
              \ with <code>aws:</code> or <code>rds:</code>. The string can only contain\
              \ the set of Unicode letters, digits, white-space, '_', '.', '/', '=',\
              \ '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\"\
              )."
      type: object
    DBInstanceNotFoundFault: {}
    DBSnapshotNotFoundFault: {}
    ApplyPendingMaintenanceActionResult:
      properties:
        ResourcePendingMaintenanceActions:
          $ref: '#/components/schemas/ResourcePendingMaintenanceActions'
      type: object
    ResourceNotFoundFault: {}
    CopyDBClusterParameterGroupResult:
      properties:
        DBClusterParameterGroup:
          $ref: '#/components/schemas/DBClusterParameterGroup'
      type: object
    DBParameterGroupNotFoundFault: {}
    DBParameterGroupQuotaExceededFault: {}
    DBParameterGroupAlreadyExistsFault: {}
    CopyDBClusterSnapshotResult:
      properties:
        DBClusterSnapshot:
          $ref: '#/components/schemas/DBClusterSnapshot'
      type: object
    DBClusterSnapshotAlreadyExistsFault: {}
    DBClusterSnapshotNotFoundFault: {}
    InvalidDBClusterSnapshotStateFault: {}
    SnapshotQuotaExceededFault: {}
    KMSKeyNotAccessibleFault: {}
    CopyDBParameterGroupResult:
      properties:
        DBParameterGroup:
          $ref: '#/components/schemas/DBParameterGroup'
      type: object
    CreateDBClusterResult:
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
      type: object
    String:
      type: string
    DoubleOptional:
      format: double
      type: number
    DBClusterAlreadyExistsFault: {}
    InsufficientStorageClusterCapacityFault: {}
    DBClusterQuotaExceededFault: {}
    StorageQuotaExceededFault: {}
    DBSubnetGroupNotFoundFault: {}
    InvalidVPCNetworkStateFault: {}
    InvalidDBSubnetGroupStateFault: {}
    InvalidSubnet: {}
    InvalidDBInstanceStateFault: {}
    DBClusterParameterGroupNotFoundFault: {}
    DBSubnetGroupDoesNotCoverEnoughAZs: {}
    GlobalClusterNotFoundFault: {}
    InvalidGlobalClusterStateFault: {}
    CreateDBClusterEndpointOutput:
      description: "<p>This data type represents the information you need to connect\
        \ to an Amazon Neptune DB cluster. This data type is used as a response element\
        \ in the following actions:</p> <ul> <li> <p> <code>CreateDBClusterEndpoint</code>\
        \ </p> </li> <li> <p> <code>DescribeDBClusterEndpoints</code> </p> </li> <li>\
        \ <p> <code>ModifyDBClusterEndpoint</code> </p> </li> <li> <p> <code>DeleteDBClusterEndpoint</code>\
        \ </p> </li> </ul> <p>For the data structure that represents Amazon Neptune\
        \ DB instance endpoints, see <code>Endpoint</code>.</p>"
      properties:
        DBClusterEndpointIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier associated with the endpoint. This parameter
              is stored as a lowercase string.
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The DB cluster identifier of the DB cluster associated with
              the endpoint. This parameter is stored as a lowercase string.
        DBClusterEndpointResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A unique system-generated identifier for an endpoint. It
              remains the same for the whole life of the endpoint.
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The DNS address of the endpoint.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The current status of the endpoint. One of: <code>creating</code>,\
              \ <code>available</code>, <code>deleting</code>, <code>inactive</code>,\
              \ <code>modifying</code>. The <code>inactive</code> state applies to\
              \ an endpoint that cannot be used for a certain kind of cluster, such\
              \ as a <code>writer</code> endpoint for a read-only secondary cluster\
              \ in a global database."
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>,\
              \ <code>CUSTOM</code>."
        CustomEndpointType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The type associated with a custom endpoint. One of: <code>READER</code>,\
              \ <code>WRITER</code>, <code>ANY</code>."
        StaticMembers:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: List of DB instance identifiers that are part of the custom
              endpoint group.
        ExcludedMembers:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: List of DB instance identifiers that aren't part of the custom
              endpoint group. All other eligible instances are reachable through the
              custom endpoint. Only relevant if the list of static members is empty.
        DBClusterEndpointArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the endpoint.
      type: object
    DBClusterEndpointQuotaExceededFault: {}
    DBClusterEndpointAlreadyExistsFault: {}
    CreateDBClusterParameterGroupResult:
      properties:
        DBClusterParameterGroup:
          $ref: '#/components/schemas/DBClusterParameterGroup'
      type: object
    CreateDBClusterSnapshotResult:
      properties:
        DBClusterSnapshot:
          $ref: '#/components/schemas/DBClusterSnapshot'
      type: object
    CreateDBInstanceResult:
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
      type: object
    DBInstanceAlreadyExistsFault: {}
    InsufficientDBInstanceCapacityFault: {}
    DBSecurityGroupNotFoundFault: {}
    InstanceQuotaExceededFault: {}
    ProvisionedIopsNotAvailableInAZFault: {}
    OptionGroupNotFoundFault: {}
    StorageTypeNotSupportedFault: {}
    AuthorizationNotFoundFault: {}
    DomainNotFoundFault: {}
    CreateDBParameterGroupResult:
      properties:
        DBParameterGroup:
          $ref: '#/components/schemas/DBParameterGroup'
      type: object
    CreateDBSubnetGroupResult:
      properties:
        DBSubnetGroup:
          $ref: '#/components/schemas/DBSubnetGroup'
      type: object
    DBSubnetGroupAlreadyExistsFault: {}
    DBSubnetGroupQuotaExceededFault: {}
    DBSubnetQuotaExceededFault: {}
    CreateEventSubscriptionResult:
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
      type: object
    EventSubscriptionQuotaExceededFault: {}
    SubscriptionAlreadyExistFault: {}
    SNSInvalidTopicFault: {}
    SNSNoAuthorizationFault: {}
    SNSTopicArnNotFoundFault: {}
    SubscriptionCategoryNotFoundFault: {}
    CreateGlobalClusterResult:
      properties:
        GlobalCluster:
          $ref: '#/components/schemas/GlobalCluster'
      type: object
    GlobalClusterAlreadyExistsFault: {}
    GlobalClusterQuotaExceededFault: {}
    DeleteDBClusterResult:
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
      type: object
    DeleteDBClusterEndpointOutput:
      description: "<p>This data type represents the information you need to connect\
        \ to an Amazon Neptune DB cluster. This data type is used as a response element\
        \ in the following actions:</p> <ul> <li> <p> <code>CreateDBClusterEndpoint</code>\
        \ </p> </li> <li> <p> <code>DescribeDBClusterEndpoints</code> </p> </li> <li>\
        \ <p> <code>ModifyDBClusterEndpoint</code> </p> </li> <li> <p> <code>DeleteDBClusterEndpoint</code>\
        \ </p> </li> </ul> <p>For the data structure that represents Amazon RDS DB\
        \ instance endpoints, see <code>Endpoint</code>.</p>"
      properties:
        DBClusterEndpointIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier associated with the endpoint. This parameter
              is stored as a lowercase string.
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The DB cluster identifier of the DB cluster associated with
              the endpoint. This parameter is stored as a lowercase string.
        DBClusterEndpointResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A unique system-generated identifier for an endpoint. It
              remains the same for the whole life of the endpoint.
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The DNS address of the endpoint.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The current status of the endpoint. One of: <code>creating</code>,\
              \ <code>available</code>, <code>deleting</code>, <code>inactive</code>,\
              \ <code>modifying</code>. The <code>inactive</code> state applies to\
              \ an endpoint that cannot be used for a certain kind of cluster, such\
              \ as a <code>writer</code> endpoint for a read-only secondary cluster\
              \ in a global database."
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>,\
              \ <code>CUSTOM</code>."
        CustomEndpointType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The type associated with a custom endpoint. One of: <code>READER</code>,\
              \ <code>WRITER</code>, <code>ANY</code>."
        StaticMembers:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: List of DB instance identifiers that are part of the custom
              endpoint group.
        ExcludedMembers:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: List of DB instance identifiers that aren't part of the custom
              endpoint group. All other eligible instances are reachable through the
              custom endpoint. Only relevant if the list of static members is empty.
        DBClusterEndpointArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the endpoint.
      type: object
    InvalidDBClusterEndpointStateFault: {}
    DBClusterEndpointNotFoundFault: {}
    InvalidDBParameterGroupStateFault: {}
    DeleteDBClusterSnapshotResult:
      properties:
        DBClusterSnapshot:
          $ref: '#/components/schemas/DBClusterSnapshot'
      type: object
    DeleteDBInstanceResult:
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
      type: object
    DBSnapshotAlreadyExistsFault: {}
    InvalidDBSubnetStateFault: {}
    DeleteEventSubscriptionResult:
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
      type: object
    InvalidEventSubscriptionStateFault: {}
    DeleteGlobalClusterResult:
      properties:
        GlobalCluster:
          $ref: '#/components/schemas/GlobalCluster'
      type: object
    DBClusterEndpointMessage:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous <code>DescribeDBClusterEndpoints</code>\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        DBClusterEndpoints:
          allOf:
          - $ref: '#/components/schemas/DBClusterEndpointList'
          - description: Contains the details of the endpoints associated with the
              cluster and matching any filter conditions.
      type: object
    Filter:
      description: This type is not currently supported.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: This parameter is not currently supported.
        Values:
          allOf:
          - $ref: '#/components/schemas/FilterValueList'
          - description: This parameter is not currently supported.
      required:
      - Name
      - Values
      type: object
    DBClusterParameterGroupsMessage:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous <code>DescribeDBClusterParameterGroups</code>\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        DBClusterParameterGroups:
          allOf:
          - $ref: '#/components/schemas/DBClusterParameterGroupList'
          - description: A list of DB cluster parameter groups.
      type: object
    DBClusterParameterGroupDetails:
      properties:
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersList'
          - description: Provides a list of parameters for the DB cluster parameter
              group.
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous DescribeDBClusterParameters\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>\
              \ ."
      type: object
    DescribeDBClusterSnapshotAttributesResult:
      properties:
        DBClusterSnapshotAttributesResult:
          $ref: '#/components/schemas/DBClusterSnapshotAttributesResult'
      type: object
    DBClusterSnapshotMessage:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous <a>DescribeDBClusterSnapshots</a>\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        DBClusterSnapshots:
          allOf:
          - $ref: '#/components/schemas/DBClusterSnapshotList'
          - description: Provides a list of DB cluster snapshots for the user.
      type: object
    DBClusterMessage:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A pagination token that can be used in a subsequent DescribeDBClusters
              request.
        DBClusters:
          allOf:
          - $ref: '#/components/schemas/DBClusterList'
          - description: Contains a list of DB clusters for the user.
      type: object
    DBEngineVersionMessage:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        DBEngineVersions:
          allOf:
          - $ref: '#/components/schemas/DBEngineVersionList'
          - description: ' A list of <code>DBEngineVersion</code> elements.'
      type: object
    DBInstanceMessage:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>\
              \ ."
        DBInstances:
          allOf:
          - $ref: '#/components/schemas/DBInstanceList'
          - description: ' A list of <a>DBInstance</a> instances.'
      type: object
    DBParameterGroupsMessage:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        DBParameterGroups:
          allOf:
          - $ref: '#/components/schemas/DBParameterGroupList'
          - description: A list of <a>DBParameterGroup</a> instances.
      type: object
    DBParameterGroupDetails:
      properties:
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersList'
          - description: A list of <a>Parameter</a> values.
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
      type: object
    DBSubnetGroupMessage:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        DBSubnetGroups:
          allOf:
          - $ref: '#/components/schemas/DBSubnetGroups'
          - description: ' A list of <a>DBSubnetGroup</a> instances.'
      type: object
    DescribeEngineDefaultClusterParametersResult:
      properties:
        EngineDefaults:
          $ref: '#/components/schemas/EngineDefaults'
      type: object
    DescribeEngineDefaultParametersResult:
      properties:
        EngineDefaults:
          $ref: '#/components/schemas/EngineDefaults'
      type: object
    EventCategoriesMessage:
      properties:
        EventCategoriesMapList:
          allOf:
          - $ref: '#/components/schemas/EventCategoriesMapList'
          - description: A list of EventCategoriesMap data types.
      type: object
    EventSubscriptionsMessage:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        EventSubscriptionsList:
          allOf:
          - $ref: '#/components/schemas/EventSubscriptionsList'
          - description: A list of EventSubscriptions data types.
      type: object
    EventsMessage:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous Events\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>\
              \ ."
        Events:
          allOf:
          - $ref: '#/components/schemas/EventList'
          - description: ' A list of <a>Event</a> instances.'
      type: object
    GlobalClustersMessage:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A pagination token. If this parameter is returned in the\
              \ response, more records are available, which can be retrieved by one\
              \ or more additional calls to <code>DescribeGlobalClusters</code>."
        GlobalClusters:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterList'
          - description: The list of global clusters and instances returned by this
              request.
      type: object
    OrderableDBInstanceOptionsMessage:
      properties:
        OrderableDBInstanceOptions:
          allOf:
          - $ref: '#/components/schemas/OrderableDBInstanceOptionsList'
          - description: An <a>OrderableDBInstanceOption</a> structure containing
              information about orderable options for the DB instance.
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous OrderableDBInstanceOptions\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>\
              \ ."
      type: object
    PendingMaintenanceActionsMessage:
      properties:
        PendingMaintenanceActions:
          allOf:
          - $ref: '#/components/schemas/PendingMaintenanceActions'
          - description: A list of the pending maintenance actions for the resource.
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous <code>DescribePendingMaintenanceActions</code>\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to a number of records specified by\
              \ <code>MaxRecords</code>."
      type: object
    DescribeValidDBInstanceModificationsResult:
      properties:
        ValidDBInstanceModificationsMessage:
          $ref: '#/components/schemas/ValidDBInstanceModificationsMessage'
      type: object
    FailoverDBClusterResult:
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
      type: object
    FailoverGlobalClusterResult:
      properties:
        GlobalCluster:
          $ref: '#/components/schemas/GlobalCluster'
      type: object
    TagListMessage:
      properties:
        TagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: List of tags returned by the ListTagsForResource operation.
      type: object
    ModifyDBClusterResult:
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
      type: object
    LogTypeList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    InvalidDBSecurityGroupStateFault: {}
    ModifyDBClusterEndpointOutput:
      description: "<p>This data type represents the information you need to connect\
        \ to an Amazon Neptune DB cluster. This data type is used as a response element\
        \ in the following actions:</p> <ul> <li> <p> <code>CreateDBClusterEndpoint</code>\
        \ </p> </li> <li> <p> <code>DescribeDBClusterEndpoints</code> </p> </li> <li>\
        \ <p> <code>ModifyDBClusterEndpoint</code> </p> </li> <li> <p> <code>DeleteDBClusterEndpoint</code>\
        \ </p> </li> </ul> <p>For the data structure that represents Amazon RDS DB\
        \ instance endpoints, see <code>Endpoint</code>.</p>"
      properties:
        DBClusterEndpointIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier associated with the endpoint. This parameter
              is stored as a lowercase string.
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The DB cluster identifier of the DB cluster associated with
              the endpoint. This parameter is stored as a lowercase string.
        DBClusterEndpointResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A unique system-generated identifier for an endpoint. It
              remains the same for the whole life of the endpoint.
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The DNS address of the endpoint.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The current status of the endpoint. One of: <code>creating</code>,\
              \ <code>available</code>, <code>deleting</code>, <code>inactive</code>,\
              \ <code>modifying</code>. The <code>inactive</code> state applies to\
              \ an endpoint that cannot be used for a certain kind of cluster, such\
              \ as a <code>writer</code> endpoint for a read-only secondary cluster\
              \ in a global database."
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>,\
              \ <code>CUSTOM</code>."
        CustomEndpointType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The type associated with a custom endpoint. One of: <code>READER</code>,\
              \ <code>WRITER</code>, <code>ANY</code>."
        StaticMembers:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: List of DB instance identifiers that are part of the custom
              endpoint group.
        ExcludedMembers:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: List of DB instance identifiers that aren't part of the custom
              endpoint group. All other eligible instances are reachable through the
              custom endpoint. Only relevant if the list of static members is empty.
        DBClusterEndpointArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the endpoint.
      type: object
    DBClusterParameterGroupNameMessage:
      properties:
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The name of the DB cluster parameter group.</p> <p>Constraints:</p>
              <ul> <li> <p>Must be 1 to 255 letters or numbers.</p> </li> <li> <p>First
              character must be a letter</p> </li> <li> <p>Cannot end with a hyphen
              or contain two consecutive hyphens</p> </li> </ul> <note> <p>This value
              is stored as a lowercase string.</p> </note>
      type: object
    Parameter:
      description: Specifies a parameter.
      properties:
        ParameterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the parameter.
        ParameterValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the value of the parameter.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides a description of the parameter.
        Source:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Indicates the source of the parameter value.
        ApplyType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the engine specific parameters type.
        DataType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the valid data type for the parameter.
        AllowedValues:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the valid range of values for the parameter.
        IsModifiable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Indicates whether (<code>true</code>) or not (<code>false</code>)
              the parameter can be modified. Some parameters have security or operational
              implications that prevent them from being changed.'
        MinimumEngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The earliest engine version to which the parameter can apply.
        ApplyMethod:
          allOf:
          - $ref: '#/components/schemas/ApplyMethod'
          - description: Indicates when to apply parameter updates.
      type: object
    ModifyDBClusterSnapshotAttributeResult:
      properties:
        DBClusterSnapshotAttributesResult:
          $ref: '#/components/schemas/DBClusterSnapshotAttributesResult'
      type: object
    SharedSnapshotQuotaExceededFault: {}
    ModifyDBInstanceResult:
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
      type: object
    DBUpgradeDependencyFailureFault: {}
    CertificateNotFoundFault: {}
    DBParameterGroupNameMessage:
      properties:
        DBParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the name of the DB parameter group.
      type: object
    ModifyDBSubnetGroupResult:
      properties:
        DBSubnetGroup:
          $ref: '#/components/schemas/DBSubnetGroup'
      type: object
    SubnetAlreadyInUse: {}
    ModifyEventSubscriptionResult:
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
      type: object
    ModifyGlobalClusterResult:
      properties:
        GlobalCluster:
          $ref: '#/components/schemas/GlobalCluster'
      type: object
    PromoteReadReplicaDBClusterResult:
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
      type: object
    RebootDBInstanceResult:
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
      type: object
    RemoveFromGlobalClusterResult:
      properties:
        GlobalCluster:
          $ref: '#/components/schemas/GlobalCluster'
      type: object
    DBClusterRoleNotFoundFault: {}
    RemoveSourceIdentifierFromSubscriptionResult:
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
      type: object
    RestoreDBClusterFromSnapshotResult:
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
      type: object
    InsufficientDBClusterCapacityFault: {}
    InvalidDBSnapshotStateFault: {}
    InvalidRestoreFault: {}
    RestoreDBClusterToPointInTimeResult:
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
      type: object
    StartDBClusterResult:
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
      type: object
    StopDBClusterResult:
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
      type: object
    AddRoleToDBClusterMessage:
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the DB cluster to associate the IAM role with.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The Amazon Resource Name (ARN) of the IAM role to associate\
              \ with the Neptune DB cluster, for example <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>."
        FeatureName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of the feature for the Neptune DB cluster that\
              \ the IAM role is to be associated with. For the list of supported feature\
              \ names, see <a href=\"neptune/latest/userguide/api-other-apis.html#DBEngineVersion\"\
              >DBEngineVersion</a>."
      required:
      - DBClusterIdentifier
      - RoleArn
      title: AddRoleToDBClusterMessage
      type: object
    AddSourceIdentifierToSubscriptionMessage:
      properties:
        SubscriptionName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the event notification subscription you want
              to add a source identifier to.
        SourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier of the event source to be added.</p> <p>Constraints:</p>\
              \ <ul> <li> <p>If the source type is a DB instance, then a <code>DBInstanceIdentifier</code>\
              \ must be supplied.</p> </li> <li> <p>If the source type is a DB security\
              \ group, a <code>DBSecurityGroupName</code> must be supplied.</p> </li>\
              \ <li> <p>If the source type is a DB parameter group, a <code>DBParameterGroupName</code>\
              \ must be supplied.</p> </li> <li> <p>If the source type is a DB snapshot,\
              \ a <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> </ul>"
      required:
      - SourceIdentifier
      - SubscriptionName
      title: AddSourceIdentifierToSubscriptionMessage
      type: object
    EventSubscription:
      description: Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a>
        action.
      properties:
        CustomerAwsId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon customer account associated with the event notification
              subscription.
        CustSubscriptionId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The event notification subscription Id.
        SnsTopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The topic ARN of the event notification subscription.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The status of the event notification subscription.</p>\
              \ <p>Constraints:</p> <p>Can be one of the following: creating | modifying\
              \ | deleting | active | no-permission | topic-not-exist</p> <p>The status\
              \ \"no-permission\" indicates that Neptune no longer has permission\
              \ to post to the SNS topic. The status \"topic-not-exist\" indicates\
              \ that the topic was deleted after the subscription was created.</p>"
        SubscriptionCreationTime:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The time the event notification subscription was created.
        SourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The source type for the event notification subscription.
        SourceIdsList:
          allOf:
          - $ref: '#/components/schemas/SourceIdsList'
          - description: A list of source IDs for the event notification subscription.
        EventCategoriesList:
          allOf:
          - $ref: '#/components/schemas/EventCategoriesList'
          - description: A list of event categories for the event notification subscription.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A Boolean value indicating if the subscription is enabled.
              True indicates the subscription is enabled.
        EventSubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the event subscription.
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
      type: array
    AddTagsToResourceMessage:
      properties:
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The Amazon Neptune resource that the tags are added to.\
              \ This value is an Amazon Resource Name (ARN). For information about\
              \ creating an ARN, see <a href=\"https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"\
              > Constructing an Amazon Resource Name (ARN)</a>."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the Amazon Neptune resource.
      required:
      - ResourceName
      - Tags
      title: AddTagsToResourceMessage
      type: object
    ApplyMethod:
      enum:
      - immediate
      - pending-reboot
      type: string
    ApplyPendingMaintenanceActionMessage:
      properties:
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The Amazon Resource Name (ARN) of the resource that the\
              \ pending maintenance action applies to. For information about creating\
              \ an ARN, see <a href=\"https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"\
              > Constructing an Amazon Resource Name (ARN)</a>."
        ApplyAction:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The pending maintenance action to apply to this resource.</p>\
              \ <p>Valid values: <code>system-update</code>, <code>db-upgrade</code>\
              \ </p>"
        OptInType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>A value that specifies the type of opt-in request, or\
              \ undoes an opt-in request. An opt-in request of type <code>immediate</code>\
              \ can't be undone.</p> <p>Valid values:</p> <ul> <li> <p> <code>immediate</code>\
              \ - Apply the maintenance action immediately.</p> </li> <li> <p> <code>next-maintenance</code>\
              \ - Apply the maintenance action during the next maintenance window\
              \ for the resource.</p> </li> <li> <p> <code>undo-opt-in</code> - Cancel\
              \ any existing <code>next-maintenance</code> opt-in requests.</p> </li>\
              \ </ul>"
      required:
      - ApplyAction
      - OptInType
      - ResourceIdentifier
      title: ApplyPendingMaintenanceActionMessage
      type: object
    ResourcePendingMaintenanceActions:
      description: Describes the pending maintenance actions for a resource.
      properties:
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the resource that has pending maintenance actions.
        PendingMaintenanceActionDetails:
          allOf:
          - $ref: '#/components/schemas/PendingMaintenanceActionDetails'
          - description: A list that provides details about the pending maintenance
              actions for the resource.
      type: object
    AttributeValueList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: AttributeValue
      type: array
    AvailabilityZone:
      description: Specifies an Availability Zone.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the availability zone.
      type: object
    AvailabilityZoneList:
      items:
        $ref: '#/components/schemas/AvailabilityZoneList_inner'
      type: array
    AvailabilityZones:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: AvailabilityZone
      type: array
    Boolean:
      type: boolean
    BooleanOptional:
      type: boolean
    CharacterSet:
      description: Specifies a character set.
      properties:
        CharacterSetName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the character set.
        CharacterSetDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description of the character set.
      type: object
    CloudwatchLogsExportConfiguration:
      description: <p>The configuration setting for the log types to be enabled for
        export to CloudWatch Logs for a specific DB instance or DB cluster.</p> <p>The
        <code>EnableLogTypes</code> and <code>DisableLogTypes</code> arrays determine
        which logs will be exported (or not exported) to CloudWatch Logs.</p>
      properties:
        EnableLogTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: The list of log types to enable.
        DisableLogTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: The list of log types to disable.
      type: object
    PendingCloudwatchLogsExports:
      description: "A list of the log types whose configuration is still pending.\
        \ In other words, these log types are in the process of being activated or\
        \ deactivated."
      properties:
        LogTypesToEnable:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: "Log types that are in the process of being deactivated.\
              \ After they are deactivated, these log types aren't exported to CloudWatch\
              \ Logs."
        LogTypesToDisable:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: "Log types that are in the process of being enabled. After\
              \ they are enabled, these log types are exported to CloudWatch Logs."
      type: object
    IntegerOptional:
      type: integer
    ClusterPendingModifiedValues:
      description: This data type is used as a response element in the <code>ModifyDBCluster</code>
        operation and contains changes that will be applied during the next maintenance
        window.
      properties:
        PendingCloudwatchLogsExports:
          $ref: '#/components/schemas/ClusterPendingModifiedValues_PendingCloudwatchLogsExports'
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The DBClusterIdentifier value for the DB cluster.
        IAMDatabaseAuthenticationEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: A value that indicates whether mapping of Amazon Web Services
              Identity and Access Management (IAM) accounts to database accounts is
              enabled.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The database engine version.
        BackupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The number of days for which automatic DB snapshots are retained.
        AllocatedStorage:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The allocated storage size in gibibytes (GiB) for database\
              \ engines. For Neptune, <code>AllocatedStorage</code> always returns\
              \ 1, because Neptune DB cluster storage size isn't fixed, but instead\
              \ automatically adjusts as needed."
        Iops:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The Provisioned IOPS (I/O operations per second) value. This
              setting is only for non-Aurora Multi-AZ DB clusters.
      type: object
    CopyDBClusterParameterGroupMessage:
      properties:
        SourceDBClusterParameterGroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier or Amazon Resource Name (ARN) for the\
              \ source DB cluster parameter group. For information about creating\
              \ an ARN, see <a href=\"https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"\
              > Constructing an Amazon Resource Name (ARN)</a>.</p> <p>Constraints:</p>\
              \ <ul> <li> <p>Must specify a valid DB cluster parameter group.</p>\
              \ </li> <li> <p>If the source DB cluster parameter group is in the same\
              \ Amazon Region as the copy, specify a valid DB parameter group identifier,\
              \ for example <code>my-db-cluster-param-group</code>, or a valid ARN.</p>\
              \ </li> <li> <p>If the source DB parameter group is in a different Amazon\
              \ Region than the copy, specify a valid DB cluster parameter group ARN,\
              \ for example <code>arn:aws:rds:us-east-1:123456789012:cluster-pg:custom-cluster-group1</code>.</p>\
              \ </li> </ul>"
        TargetDBClusterParameterGroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier for the copied DB cluster parameter group.</p>\
              \ <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank</p>\
              \ </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p>\
              \ </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot\
              \ end with a hyphen or contain two consecutive hyphens</p> </li> </ul>\
              \ <p>Example: <code>my-cluster-param-group1</code> </p>"
        TargetDBClusterParameterGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description for the copied DB cluster parameter group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the copied DB cluster parameter
              group.
      required:
      - SourceDBClusterParameterGroupIdentifier
      - TargetDBClusterParameterGroupDescription
      - TargetDBClusterParameterGroupIdentifier
      title: CopyDBClusterParameterGroupMessage
      type: object
    DBClusterParameterGroup:
      description: <p>Contains the details of an Amazon Neptune DB cluster parameter
        group.</p> <p>This data type is used as a response element in the <a>DescribeDBClusterParameterGroups</a>
        action.</p>
      properties:
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the name of the DB cluster parameter group.
        DBParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the name of the DB parameter group family that this
              DB cluster parameter group is compatible with.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the customer-specified description for this DB cluster
              parameter group.
        DBClusterParameterGroupArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the DB cluster parameter
              group.
      type: object
    CopyDBClusterSnapshotMessage:
      properties:
        SourceDBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier of the DB cluster snapshot to copy. This\
              \ parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li>\
              \ <p>Must specify a valid system snapshot in the \"available\" state.</p>\
              \ </li> <li> <p>Specify a valid DB snapshot identifier.</p> </li> </ul>\
              \ <p>Example: <code>my-cluster-snapshot1</code> </p>"
        TargetDBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier of the new DB cluster snapshot to create\
              \ from the source DB cluster snapshot. This parameter is not case-sensitive.</p>\
              \ <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters,\
              \ numbers, or hyphens.</p> </li> <li> <p>First character must be a letter.</p>\
              \ </li> <li> <p>Cannot end with a hyphen or contain two consecutive\
              \ hyphens.</p> </li> </ul> <p>Example: <code>my-cluster-snapshot2</code>\
              \ </p>"
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The Amazon Amazon KMS key ID for an encrypted DB cluster\
              \ snapshot. The KMS key ID is the Amazon Resource Name (ARN), KMS key\
              \ identifier, or the KMS key alias for the KMS encryption key.</p> <p>If\
              \ you copy an encrypted DB cluster snapshot from your Amazon account,\
              \ you can specify a value for <code>KmsKeyId</code> to encrypt the copy\
              \ with a new KMS encryption key. If you don't specify a value for <code>KmsKeyId</code>,\
              \ then the copy of the DB cluster snapshot is encrypted with the same\
              \ KMS key as the source DB cluster snapshot.</p> <p>If you copy an encrypted\
              \ DB cluster snapshot that is shared from another Amazon account, then\
              \ you must specify a value for <code>KmsKeyId</code>.</p> <p> KMS encryption\
              \ keys are specific to the Amazon Region that they are created in, and\
              \ you can't use encryption keys from one Amazon Region in another Amazon\
              \ Region.</p> <p>You cannot encrypt an unencrypted DB cluster snapshot\
              \ when you copy it. If you try to copy an unencrypted DB cluster snapshot\
              \ and specify a value for the KmsKeyId parameter, an error is returned.</p>"
        PreSignedUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not currently supported.
        CopyTags:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "True to copy all tags from the source DB cluster snapshot\
              \ to the target DB cluster snapshot, and otherwise false. The default\
              \ is false."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to assign to the new DB cluster snapshot copy.
      required:
      - SourceDBClusterSnapshotIdentifier
      - TargetDBClusterSnapshotIdentifier
      title: CopyDBClusterSnapshotMessage
      type: object
    DBClusterSnapshot:
      description: <p>Contains the details for an Amazon Neptune DB cluster snapshot</p>
        <p>This data type is used as a response element in the <a>DescribeDBClusterSnapshots</a>
        action.</p>
      properties:
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZones'
          - description: Provides the list of EC2 Availability Zones that instances
              in the DB cluster snapshot can be restored in.
        DBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the identifier for a DB cluster snapshot. Must\
              \ match the identifier of an existing snapshot.</p> <p>After you restore\
              \ a DB cluster using a <code>DBClusterSnapshotIdentifier</code>, you\
              \ must specify the same <code>DBClusterSnapshotIdentifier</code> for\
              \ any future updates to the DB cluster. When you specify this property\
              \ for an update, the DB cluster is not restored from the snapshot again,\
              \ and the data in the database is not changed.</p> <p>However, if you\
              \ don't specify the <code>DBClusterSnapshotIdentifier</code>, an empty\
              \ DB cluster is created, and the original DB cluster is deleted. If\
              \ you specify a property that is different from the previous snapshot\
              \ restore property, the DB cluster is restored from the snapshot specified\
              \ by the <code>DBClusterSnapshotIdentifier</code>, and the original\
              \ DB cluster is deleted.</p>"
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the DB cluster identifier of the DB cluster that
              this DB cluster snapshot was created from.
        SnapshotCreateTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "Provides the time when the snapshot was taken, in Universal\
              \ Coordinated Time (UTC)."
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the database engine.
        AllocatedStorage:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Specifies the allocated storage size in gibibytes (GiB).
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the status of this DB cluster snapshot.
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Specifies the port that the DB cluster was listening on at
              the time of the snapshot.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the VPC ID associated with the DB cluster snapshot.
        ClusterCreateTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "Specifies the time when the DB cluster was created, in Universal\
              \ Coordinated Time (UTC)."
        MasterUsername:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the version of the database engine for this DB cluster
              snapshot.
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the license model information for this DB cluster
              snapshot.
        SnapshotType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the type of the DB cluster snapshot.
        PercentProgress:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Specifies the percentage of the estimated data that has been
              transferred.
        StorageEncrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the DB cluster snapshot is encrypted.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If <code>StorageEncrypted</code> is true, the Amazon KMS\
              \ key identifier for the encrypted DB cluster snapshot."
        DBClusterSnapshotArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the DB cluster snapshot.
        SourceDBClusterSnapshotArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If the DB cluster snapshot was copied from a source DB cluster\
              \ snapshot, the Amazon Resource Name (ARN) for the source DB cluster\
              \ snapshot, otherwise, a null value."
        IAMDatabaseAuthenticationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "True if mapping of Amazon Identity and Access Management\
              \ (IAM) accounts to database accounts is enabled, and otherwise false."
      type: object
    CopyDBParameterGroupMessage:
      properties:
        SourceDBParameterGroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier or ARN for the source DB parameter group.\
              \ For information about creating an ARN, see <a href=\"https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"\
              > Constructing an Amazon Resource Name (ARN)</a>.</p> <p>Constraints:</p>\
              \ <ul> <li> <p>Must specify a valid DB parameter group.</p> </li> <li>\
              \ <p>Must specify a valid DB parameter group identifier, for example\
              \ <code>my-db-param-group</code>, or a valid ARN.</p> </li> </ul>"
        TargetDBParameterGroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier for the copied DB parameter group.</p>\
              \ <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank.</p>\
              \ </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens.</p>\
              \ </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot\
              \ end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>\
              \ <p>Example: <code>my-db-parameter-group</code> </p>"
        TargetDBParameterGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description for the copied DB parameter group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the copied DB parameter group.
      required:
      - SourceDBParameterGroupIdentifier
      - TargetDBParameterGroupDescription
      - TargetDBParameterGroupIdentifier
      title: CopyDBParameterGroupMessage
      type: object
    DBParameterGroup:
      description: <p>Contains the details of an Amazon Neptune DB parameter group.</p>
        <p>This data type is used as a response element in the <a>DescribeDBParameterGroups</a>
        action.</p>
      properties:
        DBParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the name of the DB parameter group.
        DBParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the name of the DB parameter group family that this
              DB parameter group is compatible with.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the customer-specified description for this DB parameter
              group.
        DBParameterGroupArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the DB parameter group.
      type: object
    StringList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    CreateDBClusterEndpointMessage:
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The DB cluster identifier of the DB cluster associated with
              the endpoint. This parameter is stored as a lowercase string.
        DBClusterEndpointIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier to use for the new endpoint. This parameter
              is stored as a lowercase string.
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>,\
              \ <code>ANY</code>."
        StaticMembers:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: List of DB instance identifiers that are part of the custom
              endpoint group.
        ExcludedMembers:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: List of DB instance identifiers that aren't part of the custom
              endpoint group. All other eligible instances are reachable through the
              custom endpoint. Only relevant if the list of static members is empty.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the Amazon Neptune resource.
      required:
      - DBClusterEndpointIdentifier
      - DBClusterIdentifier
      - EndpointType
      title: CreateDBClusterEndpointMessage
      type: object
    VpcSecurityGroupIdList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: VpcSecurityGroupId
      type: array
    ServerlessV2ScalingConfiguration:
      description: "<p>Contains the scaling configuration of a Neptune Serverless\
        \ DB cluster.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/neptune-serverless-using.html\"\
        >Using Amazon Neptune Serverless</a> in the <i>Amazon Neptune User Guide</i>.</p>"
      properties:
        MinCapacity:
          allOf:
          - $ref: '#/components/schemas/DoubleOptional'
          - description: "The minimum number of Neptune capacity units (NCUs) for\
              \ a DB instance in a Neptune Serverless cluster. You can specify NCU\
              \ values in half-step increments, such as 8, 8.5, 9, and so on."
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/DoubleOptional'
          - description: "The maximum number of Neptune capacity units (NCUs) for\
              \ a DB instance in a Neptune Serverless cluster. You can specify NCU\
              \ values in half-step increments, such as 40, 40.5, 41, and so on."
      type: object
    GlobalClusterIdentifier:
      maxLength: 255
      minLength: 1
      pattern: "[A-Za-z][0-9A-Za-z-:._]*"
      type: string
    CreateDBClusterMessage:
      properties:
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZones'
          - description: A list of EC2 Availability Zones that instances in the DB
              cluster can be created in.
        BackupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of days for which automated backups are retained.\
              \ You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p>\
              \ <ul> <li> <p>Must be a value from 1 to 35</p> </li> </ul>"
        CharacterSetName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' <i>(Not supported by Neptune)</i> '
        CopyTagsToSnapshot:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: " <i>If set to <code>true</code>, tags are copied to any\
              \ snapshot of the DB cluster that is created.</i> "
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name for your database of up to 64 alpha-numeric characters.\
              \ If you do not provide a name, Amazon Neptune will not create a database\
              \ in the DB cluster you are creating."
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The DB cluster identifier. This parameter is stored as\
              \ a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain\
              \ from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First\
              \ character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen\
              \ or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code>\
              \ </p>"
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p> The name of the DB cluster parameter group to associate\
              \ with this DB cluster. If this argument is omitted, the default is\
              \ used.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match\
              \ the name of an existing DBClusterParameterGroup.</p> </li> </ul>"
        VpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/VpcSecurityGroupIdList'
          - description: A list of EC2 VPC security groups to associate with this
              DB cluster.
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>A DB subnet group to associate with this DB cluster.</p>\
              \ <p>Constraints: Must match the name of an existing DBSubnetGroup.\
              \ Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the database engine to be used for this DB\
              \ cluster.</p> <p>Valid Values: <code>neptune</code> </p>"
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The version number of the database engine to use for\
              \ the new DB cluster.</p> <p>Example: <code>1.0.2.1</code> </p>"
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The port number on which the instances in the DB cluster\
              \ accept connections.</p> <p> Default: <code>8182</code> </p>"
        MasterUsername:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
        MasterUserPassword:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
        OptionGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' <i>(Not supported by Neptune)</i> '
        PreferredBackupWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The daily time range during which automated backups are\
              \ created if automated backups are enabled using the <code>BackupRetentionPeriod</code>\
              \ parameter.</p> <p>The default is a 30-minute window selected at random\
              \ from an 8-hour block of time for each Amazon Region. To see the time\
              \ blocks available, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html\"\
              > Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Neptune\
              \ User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the\
              \ format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in\
              \ Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict\
              \ with the preferred maintenance window.</p> </li> <li> <p>Must be at\
              \ least 30 minutes.</p> </li> </ul>"
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The weekly time range during which system maintenance\
              \ can occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>\
              \ </p> <p>The default is a 30-minute window selected at random from\
              \ an 8-hour block of time for each Amazon Region, occurring on a random\
              \ day of the week. To see the time blocks available, see <a href=\"\
              https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html\"\
              > Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Neptune\
              \ User Guide.</i> </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat,\
              \ Sun.</p> <p>Constraints: Minimum 30-minute window.</p>"
        ReplicationSourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the source DB instance
              or DB cluster if this DB cluster is created as a Read Replica.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to assign to the new DB cluster.
        StorageEncrypted:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: Specifies whether the DB cluster is encrypted.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The Amazon KMS key identifier for an encrypted DB cluster.</p>\
              \ <p>The KMS key identifier is the Amazon Resource Name (ARN) for the\
              \ KMS encryption key. If you are creating a DB cluster with the same\
              \ Amazon account that owns the KMS encryption key used to encrypt the\
              \ new DB cluster, then you can use the KMS key alias instead of the\
              \ ARN for the KMS encryption key.</p> <p>If an encryption key is not\
              \ specified in <code>KmsKeyId</code>:</p> <ul> <li> <p>If <code>ReplicationSourceIdentifier</code>\
              \ identifies an encrypted source, then Amazon Neptune will use the encryption\
              \ key used to encrypt the source. Otherwise, Amazon Neptune will use\
              \ your default encryption key.</p> </li> <li> <p>If the <code>StorageEncrypted</code>\
              \ parameter is true and <code>ReplicationSourceIdentifier</code> is\
              \ not specified, then Amazon Neptune will use your default encryption\
              \ key.</p> </li> </ul> <p>Amazon KMS creates the default encryption\
              \ key for your Amazon account. Your Amazon account has a different default\
              \ encryption key for each Amazon Region.</p> <p>If you create a Read\
              \ Replica of an encrypted DB cluster in another Amazon Region, you must\
              \ set <code>KmsKeyId</code> to a KMS key ID that is valid in the destination\
              \ Amazon Region. This key is used to encrypt the Read Replica in that\
              \ Amazon Region.</p>"
        PreSignedUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: This parameter is not currently supported.
        EnableIAMDatabaseAuthentication:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>If set to <code>true</code>, enables Amazon Identity\
              \ and Access Management (IAM) authentication for the entire DB cluster\
              \ (this cannot be set at an instance level).</p> <p>Default: <code>false</code>.</p>"
        EnableCloudwatchLogsExports:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: The list of log types that need to be enabled for exporting
              to CloudWatch Logs.
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "A value that indicates whether the DB cluster has deletion\
              \ protection enabled. The database can't be deleted when deletion protection\
              \ is enabled. By default, deletion protection is enabled."
        ServerlessV2ScalingConfiguration:
          $ref: '#/components/schemas/ServerlessV2ScalingConfiguration'
        GlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: The ID of the Neptune global database to which this new DB
              cluster should be added.
      required:
      - DBClusterIdentifier
      - Engine
      title: CreateDBClusterMessage
      type: object
    CreateDBClusterParameterGroupMessage:
      properties:
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The name of the DB cluster parameter group.</p> <p>Constraints:</p>
              <ul> <li> <p>Must match the name of an existing DBClusterParameterGroup.</p>
              </li> </ul> <note> <p>This value is stored as a lowercase string.</p>
              </note>
        DBParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The DB cluster parameter group family name. A DB cluster\
              \ parameter group can be associated with one and only one DB cluster\
              \ parameter group family, and can be applied only to a DB cluster running\
              \ a database engine and engine version compatible with that DB cluster\
              \ parameter group family."
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description for the DB cluster parameter group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the new DB cluster parameter group.
      required:
      - DBClusterParameterGroupName
      - DBParameterGroupFamily
      - Description
      title: CreateDBClusterParameterGroupMessage
      type: object
    DBCluster:
      description: <p>Contains the details of an Amazon Neptune DB cluster.</p> <p>This
        data type is used as a response element in the <a>DescribeDBClusters</a> action.</p>
      properties:
        AllocatedStorage:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: " <code>AllocatedStorage</code> always returns 1, because\
              \ Neptune DB cluster storage size is not fixed, but instead automatically\
              \ adjusts as needed."
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZones'
          - description: Provides the list of EC2 Availability Zones that instances
              in the DB cluster can be created in.
        BackupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: Specifies the number of days for which automatic DB snapshots
              are retained.
        CharacterSetName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Contains the name of the initial database of this DB cluster\
              \ that was provided at create time, if one was specified when the DB\
              \ cluster was created. This same name is returned for the life of the\
              \ DB cluster."
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Contains a user-supplied DB cluster identifier. This identifier
              is the unique key that identifies a DB cluster.
        DBClusterParameterGroup:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the DB cluster parameter group for
              the DB cluster.
        DBSubnetGroup:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Specifies information on the subnet group associated with\
              \ the DB cluster, including the name, description, and subnets in the\
              \ subnet group."
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the current state of this DB cluster.
        PercentProgress:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the progress of the operation as a percentage.
        EarliestRestorableTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: Specifies the earliest time to which a database can be restored
              with point-in-time restore.
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the connection endpoint for the primary instance
              of the DB cluster.
        ReaderEndpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The reader endpoint for the DB cluster. The reader endpoint\
              \ for a DB cluster load-balances connections across the Read Replicas\
              \ that are available in a DB cluster. As clients request new connections\
              \ to the reader endpoint, Neptune distributes the connection requests\
              \ among the Read Replicas in the DB cluster. This functionality can\
              \ help balance your read workload across multiple Read Replicas in your\
              \ DB cluster.</p> <p>If a failover occurs, and the Read Replica that\
              \ you are connected to is promoted to be the primary instance, your\
              \ connection is dropped. To continue sending your read workload to other\
              \ Read Replicas in the cluster, you can then reconnect to the reader\
              \ endpoint.</p>"
        MultiAZ:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the DB cluster has instances in multiple
              Availability Zones.
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the name of the database engine to be used for this
              DB cluster.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Indicates the database engine version.
        LatestRestorableTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: Specifies the latest time to which a database can be restored
              with point-in-time restore.
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: Specifies the port that the database engine is listening
              on.
        MasterUsername:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
        DBClusterOptionGroupMemberships:
          allOf:
          - $ref: '#/components/schemas/DBClusterOptionGroupMemberships'
          - description: Not supported by Neptune.
        PreferredBackupWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Specifies the daily time range during which automated backups\
              \ are created if automated backups are enabled, as determined by the\
              \ <code>BackupRetentionPeriod</code>."
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Specifies the weekly time range during which system maintenance\
              \ can occur, in Universal Coordinated Time (UTC)."
        ReplicationSourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
        ReadReplicaIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ReadReplicaIdentifierList'
          - description: Contains one or more identifiers of the Read Replicas associated
              with this DB cluster.
        DBClusterMembers:
          allOf:
          - $ref: '#/components/schemas/DBClusterMemberList'
          - description: Provides the list of instances that make up the DB cluster.
        VpcSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/VpcSecurityGroupMembershipList'
          - description: Provides a list of VPC security groups that the DB cluster
              belongs to.
        HostedZoneId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the ID that Amazon Route 53 assigns when you create
              a hosted zone.
        StorageEncrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the DB cluster is encrypted.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If <code>StorageEncrypted</code> is true, the Amazon KMS\
              \ key identifier for the encrypted DB cluster."
        DbClusterResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The Amazon Region-unique, immutable identifier for the DB\
              \ cluster. This identifier is found in Amazon CloudTrail log entries\
              \ whenever the Amazon KMS key for the DB cluster is accessed."
        DBClusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the DB cluster.
        AssociatedRoles:
          allOf:
          - $ref: '#/components/schemas/DBClusterRoles'
          - description: Provides a list of the Amazon Identity and Access Management
              (IAM) roles that are associated with the DB cluster. IAM roles that
              are associated with a DB cluster grant permission for the DB cluster
              to access other Amazon services on your behalf.
        IAMDatabaseAuthenticationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "True if mapping of Amazon Identity and Access Management\
              \ (IAM) accounts to database accounts is enabled, and otherwise false."
        CloneGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Identifies the clone group to which the DB cluster is associated.
        ClusterCreateTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "Specifies the time when the DB cluster was created, in Universal\
              \ Coordinated Time (UTC)."
        CopyTagsToSnapshot:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: " <i>If set to <code>true</code>, tags are copied to any\
              \ snapshot of the DB cluster that is created.</i> "
        EnabledCloudwatchLogsExports:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: A list of log types that this DB cluster is configured to
              export to CloudWatch Logs.
        PendingModifiedValues:
          $ref: '#/components/schemas/DBCluster_PendingModifiedValues'
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: Indicates whether or not the DB cluster has deletion protection
              enabled. The database can't be deleted when deletion protection is enabled.
        CrossAccountClone:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "If set to <code>true</code>, the DB cluster can be cloned\
              \ across accounts."
        AutomaticRestartTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: Time at which the DB cluster will be automatically restarted.
        ServerlessV2ScalingConfiguration:
          $ref: '#/components/schemas/ServerlessV2ScalingConfigurationInfo'
        GlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: Contains a user-supplied global database cluster identifier.
              This identifier is the unique key that identifies a global database.
      type: object
    CreateDBClusterSnapshotMessage:
      properties:
        DBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier of the DB cluster snapshot. This parameter\
              \ is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li>\
              \ <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li>\
              \ <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot\
              \ end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>\
              \ <p>Example: <code>my-cluster1-snapshot1</code> </p>"
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier of the DB cluster to create a snapshot\
              \ for. This parameter is not case-sensitive.</p> <p>Constraints:</p>\
              \ <ul> <li> <p>Must match the identifier of an existing DBCluster.</p>\
              \ </li> </ul> <p>Example: <code>my-cluster1</code> </p>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the DB cluster snapshot.
      required:
      - DBClusterIdentifier
      - DBClusterSnapshotIdentifier
      title: CreateDBClusterSnapshotMessage
      type: object
    DBSecurityGroupNameList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: DBSecurityGroupName
      type: array
    CreateDBInstanceMessage:
      properties:
        DBName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported.
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The DB instance identifier. This parameter is stored\
              \ as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain\
              \ from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First\
              \ character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen\
              \ or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code>\
              \ </p>"
        AllocatedStorage:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: Not supported by Neptune.
        DBInstanceClass:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The compute and memory capacity of the DB instance, for\
              \ example, <code>db.m4.large</code>. Not all DB instance classes are\
              \ available in all Amazon Regions."
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the database engine to be used for this instance.</p>\
              \ <p>Valid Values: <code>neptune</code> </p>"
        MasterUsername:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
        MasterUserPassword:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
        DBSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/DBSecurityGroupNameList'
          - description: "<p>A list of DB security groups to associate with this DB\
              \ instance.</p> <p>Default: The default DB security group for the database\
              \ engine.</p>"
        VpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/VpcSecurityGroupIdList'
          - description: "<p>A list of EC2 VPC security groups to associate with this\
              \ DB instance.</p> <p>Not applicable. The associated list of EC2 VPC\
              \ security groups is managed by the DB cluster. For more information,\
              \ see <a>CreateDBCluster</a>.</p> <p>Default: The default EC2 VPC security\
              \ group for the DB subnet group's VPC.</p>"
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p> The EC2 Availability Zone that the DB instance is created\
              \ in</p> <p>Default: A random, system-chosen Availability Zone in the\
              \ endpoint's Amazon Region.</p> <p> Example: <code>us-east-1d</code>\
              \ </p> <p> Constraint: The AvailabilityZone parameter can't be specified\
              \ if the MultiAZ parameter is set to <code>true</code>. The specified\
              \ Availability Zone must be in the same Amazon Region as the current\
              \ endpoint.</p>"
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>A DB subnet group to associate with this DB instance.</p>\
              \ <p>If there is no DB subnet group, then it is a non-VPC DB instance.</p>"
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The time range each week during which system maintenance\
              \ can occur, in Universal Coordinated Time (UTC).</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>\
              \ </p> <p>The default is a 30-minute window selected at random from\
              \ an 8-hour block of time for each Amazon Region, occurring on a random\
              \ day of the week.</p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat,\
              \ Sun.</p> <p>Constraints: Minimum 30-minute window.</p>"
        DBParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the DB parameter group to associate with\
              \ this DB instance. If this argument is omitted, the default DBParameterGroup\
              \ for the specified engine is used.</p> <p>Constraints:</p> <ul> <li>\
              \ <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First\
              \ character must be a letter</p> </li> <li> <p>Cannot end with a hyphen\
              \ or contain two consecutive hyphens</p> </li> </ul>"
        BackupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of days for which automated backups are retained.</p>\
              \ <p>Not applicable. The retention period for automated backups is managed\
              \ by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p>\
              \ <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value\
              \ from 0 to 35</p> </li> <li> <p>Cannot be set to 0 if the DB instance\
              \ is a source to Read Replicas</p> </li> </ul>"
        PreferredBackupWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p> The daily time range during which automated backups\
              \ are created.</p> <p>Not applicable. The daily time range for creating\
              \ automated backups is managed by the DB cluster. For more information,\
              \ see <a>CreateDBCluster</a>.</p>"
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The port number on which the database accepts connections.</p>\
              \ <p>Not applicable. The port is managed by the DB cluster. For more\
              \ information, see <a>CreateDBCluster</a>.</p> <p> Default: <code>8182</code>\
              \ </p> <p>Type: Integer</p>"
        MultiAZ:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: Specifies if the DB instance is a Multi-AZ deployment. You
              can't set the AvailabilityZone parameter if the MultiAZ parameter is
              set to true.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The version number of the database engine to use. Currently,\
              \ setting this parameter has no effect."
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>Indicates that minor engine upgrades are applied automatically\
              \ to the DB instance during the maintenance window.</p> <p>Default:\
              \ <code>true</code> </p>"
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>License model information for this DB instance.</p> <p>\
              \ Valid values: <code>license-included</code> | <code>bring-your-own-license</code>\
              \ | <code>general-public-license</code> </p>"
        Iops:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The amount of Provisioned IOPS (input/output operations per
              second) to be initially allocated for the DB instance.
        OptionGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' <i>(Not supported by Neptune)</i> '
        CharacterSetName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' <i>(Not supported by Neptune)</i> '
        PubliclyAccessible:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - deprecated: true
            description: This flag should no longer be used.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to assign to the new instance.
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier of the DB cluster that the instance will\
              \ belong to.</p> <p>For information on creating a DB cluster, see <a>CreateDBCluster</a>.</p>\
              \ <p>Type: String</p>"
        StorageType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>Specifies the storage type to be associated with the DB
              instance.</p> <p>Not applicable. Storage is managed by the DB Cluster.</p>
        TdeCredentialArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN from the key store with which to associate the instance
              for TDE encryption.
        TdeCredentialPassword:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The password for the given ARN from the key store in order
              to access the device.
        StorageEncrypted:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>Specifies whether the DB instance is encrypted.</p> <p>Not\
              \ applicable. The encryption for DB instances is managed by the DB cluster.\
              \ For more information, see <a>CreateDBCluster</a>.</p> <p>Default:\
              \ false</p>"
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The Amazon KMS key identifier for an encrypted DB instance.</p>\
              \ <p>The KMS key identifier is the Amazon Resource Name (ARN) for the\
              \ KMS encryption key. If you are creating a DB instance with the same\
              \ Amazon account that owns the KMS encryption key used to encrypt the\
              \ new DB instance, then you can use the KMS key alias instead of the\
              \ ARN for the KM encryption key.</p> <p>Not applicable. The KMS key\
              \ identifier is managed by the DB cluster. For more information, see\
              \ <a>CreateDBCluster</a>.</p> <p>If the <code>StorageEncrypted</code>\
              \ parameter is true, and you do not specify a value for the <code>KmsKeyId</code>\
              \ parameter, then Amazon Neptune will use your default encryption key.\
              \ Amazon KMS creates the default encryption key for your Amazon account.\
              \ Your Amazon account has a different default encryption key for each\
              \ Amazon Region.</p>"
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specify the Active Directory Domain to create the instance
              in.
        CopyTagsToSnapshot:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "True to copy all tags from the DB instance to snapshots\
              \ of the DB instance, and otherwise false. The default is false."
        MonitoringInterval:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The interval, in seconds, between points when Enhanced\
              \ Monitoring metrics are collected for the DB instance. To disable collecting\
              \ Enhanced Monitoring metrics, specify 0. The default is 0.</p> <p>If\
              \ <code>MonitoringRoleArn</code> is specified, then you must also set\
              \ <code>MonitoringInterval</code> to a value other than 0.</p> <p>Valid\
              \ Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p>"
        MonitoringRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The ARN for the IAM role that permits Neptune to send\
              \ enhanced monitoring metrics to Amazon CloudWatch Logs. For example,\
              \ <code>arn:aws:iam:123456789012:role/emaccess</code>.</p> <p>If <code>MonitoringInterval</code>\
              \ is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code>\
              \ value.</p>"
        DomainIAMRoleName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specify the name of the IAM role to be used when making API
              calls to the Directory Service.
        PromotionTier:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>A value that specifies the order in which an Read Replica\
              \ is promoted to the primary instance after a failure of the existing\
              \ primary instance. </p> <p>Default: 1</p> <p>Valid Values: 0 - 15</p>"
        Timezone:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The time zone of the DB instance.
        EnableIAMDatabaseAuthentication:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: Not supported by Neptune (ignored).
        EnablePerformanceInsights:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: ' <i>(Not supported by Neptune)</i> '
        PerformanceInsightsKMSKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' <i>(Not supported by Neptune)</i> '
        EnableCloudwatchLogsExports:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: The list of log types that need to be enabled for exporting
              to CloudWatch Logs.
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>A value that indicates whether the DB instance has deletion\
              \ protection enabled. The database can't be deleted when deletion protection\
              \ is enabled. By default, deletion protection is disabled. See <a href=\"\
              https://docs.aws.amazon.com/neptune/latest/userguide/manage-console-instances-delete.html\"\
              >Deleting a DB Instance</a>.</p> <p>DB instances in a DB cluster can\
              \ be deleted even when deletion protection is enabled in their parent\
              \ DB cluster.</p>"
      required:
      - DBClusterIdentifier
      - DBInstanceClass
      - DBInstanceIdentifier
      - Engine
      title: CreateDBInstanceMessage
      type: object
    DBInstance:
      description: <p>Contains the details of an Amazon Neptune DB instance.</p> <p>This
        data type is used as a response element in the <a>DescribeDBInstances</a>
        action.</p>
      properties:
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Contains a user-supplied database identifier. This identifier
              is the unique key that identifies a DB instance.
        DBInstanceClass:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Contains the name of the compute and memory capacity class
              of the DB instance.
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the name of the database engine to be used for this
              DB instance.
        DBInstanceStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the current state of this database.
        MasterUsername:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
        DBName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The database name.
        Endpoint:
          $ref: '#/components/schemas/DBInstance_Endpoint'
        AllocatedStorage:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Not supported by Neptune.
        InstanceCreateTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: Provides the date and time the DB instance was created.
        PreferredBackupWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " Specifies the daily time range during which automated backups\
              \ are created if automated backups are enabled, as determined by the\
              \ <code>BackupRetentionPeriod</code>."
        BackupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Specifies the number of days for which automatic DB snapshots
              are retained.
        DBSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/DBSecurityGroupMembershipList'
          - description: ' Provides List of DB security group elements containing
              only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code>
              subelements.'
        VpcSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/VpcSecurityGroupMembershipList'
          - description: Provides a list of VPC security group elements that the DB
              instance belongs to.
        DBParameterGroups:
          allOf:
          - $ref: '#/components/schemas/DBParameterGroupStatusList'
          - description: Provides the list of DB parameter groups applied to this
              DB instance.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the Availability Zone the DB instance
              is located in.
        DBSubnetGroup:
          $ref: '#/components/schemas/DBInstance_DBSubnetGroup'
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Specifies the weekly time range during which system maintenance\
              \ can occur, in Universal Coordinated Time (UTC)."
        PendingModifiedValues:
          $ref: '#/components/schemas/DBInstance_PendingModifiedValues'
        LatestRestorableTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: Specifies the latest time to which a database can be restored
              with point-in-time restore.
        MultiAZ:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies if the DB instance is a Multi-AZ deployment.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Indicates the database engine version.
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates that minor version patches are applied automatically.
        ReadReplicaSourceDBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Contains the identifier of the source DB instance if this
              DB instance is a Read Replica.
        ReadReplicaDBInstanceIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ReadReplicaDBInstanceIdentifierList'
          - description: Contains one or more identifiers of the Read Replicas associated
              with this DB instance.
        ReadReplicaDBClusterIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ReadReplicaDBClusterIdentifierList'
          - description: Contains one or more identifiers of DB clusters that are
              Read Replicas of this DB instance.
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: License model information for this DB instance.
        Iops:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: Specifies the Provisioned IOPS (I/O operations per second)
              value.
        OptionGroupMemberships:
          allOf:
          - $ref: '#/components/schemas/OptionGroupMembershipList'
          - description: ' <i>(Not supported by Neptune)</i> '
        CharacterSetName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' <i>(Not supported by Neptune)</i> '
        SecondaryAvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If present, specifies the name of the secondary Availability\
              \ Zone for a DB instance with multi-AZ support."
        PubliclyAccessible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - deprecated: true
            description: This flag should no longer be used.
        StatusInfos:
          allOf:
          - $ref: '#/components/schemas/DBInstanceStatusInfoList'
          - description: "The status of a Read Replica. If the instance is not a Read\
              \ Replica, this is blank."
        StorageType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the storage type associated with DB instance.
        TdeCredentialArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN from the key store with which the instance is associated
              for TDE encryption.
        DbInstancePort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "Specifies the port that the DB instance listens on. If the\
              \ DB instance is part of a DB cluster, this can be a different port\
              \ than the DB cluster port."
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If the DB instance is a member of a DB cluster, contains\
              \ the name of the DB cluster that the DB instance is a member of."
        StorageEncrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Not supported: The encryption for DB instances is managed\
              \ by the DB cluster."
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " Not supported: The encryption for DB instances is managed\
              \ by the DB cluster."
        DbiResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The Amazon Region-unique, immutable identifier for the DB\
              \ instance. This identifier is found in Amazon CloudTrail log entries\
              \ whenever the Amazon KMS key for the DB instance is accessed."
        CACertificateIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the CA certificate for this DB instance.
        DomainMemberships:
          allOf:
          - $ref: '#/components/schemas/DomainMembershipList'
          - description: Not supported
        CopyTagsToSnapshot:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether tags are copied from the DB instance to
              snapshots of the DB instance.
        MonitoringInterval:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The interval, in seconds, between points when Enhanced Monitoring\
              \ metrics are collected for the DB instance."
        EnhancedMonitoringResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs
              log stream that receives the Enhanced Monitoring metrics data for the
              DB instance.
        MonitoringRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN for the IAM role that permits Neptune to send Enhanced
              Monitoring metrics to Amazon CloudWatch Logs.
        PromotionTier:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: 'A value that specifies the order in which a Read Replica
              is promoted to the primary instance after a failure of the existing
              primary instance. '
        DBInstanceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the DB instance.
        Timezone:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported.
        IAMDatabaseAuthenticationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "True if Amazon Identity and Access Management (IAM) authentication\
              \ is enabled, and otherwise false."
        PerformanceInsightsEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: ' <i>(Not supported by Neptune)</i> '
        PerformanceInsightsKMSKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' <i>(Not supported by Neptune)</i> '
        EnabledCloudwatchLogsExports:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: A list of log types that this DB instance is configured to
              export to CloudWatch Logs.
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: Indicates whether or not the DB instance has deletion protection
              enabled. The instance can't be deleted when deletion protection is enabled.
              See <a href="https://docs.aws.amazon.com/neptune/latest/userguide/manage-console-instances-delete.html">Deleting
              a DB Instance</a>.
      type: object
    CreateDBParameterGroupMessage:
      properties:
        DBParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the DB parameter group.</p> <p>Constraints:</p>\
              \ <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li>\
              \ <li> <p>First character must be a letter</p> </li> <li> <p>Cannot\
              \ end with a hyphen or contain two consecutive hyphens</p> </li> </ul>\
              \ <note> <p>This value is stored as a lowercase string.</p> </note>"
        DBParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The DB parameter group family name. A DB parameter group\
              \ can be associated with one and only one DB parameter group family,\
              \ and can be applied only to a DB instance running a database engine\
              \ and engine version compatible with that DB parameter group family."
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description for the DB parameter group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the new DB parameter group.
      required:
      - DBParameterGroupFamily
      - DBParameterGroupName
      - Description
      title: CreateDBParameterGroupMessage
      type: object
    SubnetIdentifierList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: SubnetIdentifier
      type: array
    CreateDBSubnetGroupMessage:
      properties:
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name for the DB subnet group. This value is stored\
              \ as a lowercase string.</p> <p>Constraints: Must contain no more than\
              \ 255 letters, numbers, periods, underscores, spaces, or hyphens. Must\
              \ not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        DBSubnetGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description for the DB subnet group.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdentifierList'
          - description: The EC2 Subnet IDs for the DB subnet group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the new DB subnet group.
      required:
      - DBSubnetGroupDescription
      - DBSubnetGroupName
      - SubnetIds
      title: CreateDBSubnetGroupMessage
      type: object
    DBSubnetGroup:
      description: <p>Contains the details of an Amazon Neptune DB subnet group.</p>
        <p>This data type is used as a response element in the <a>DescribeDBSubnetGroups</a>
        action.</p>
      properties:
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the DB subnet group.
        DBSubnetGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the description of the DB subnet group.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the VpcId of the DB subnet group.
        SubnetGroupStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the status of the DB subnet group.
        Subnets:
          allOf:
          - $ref: '#/components/schemas/SubnetList'
          - description: ' Contains a list of <a>Subnet</a> elements.'
        DBSubnetGroupArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the DB subnet group.
      type: object
    EventCategoriesList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: EventCategory
      type: array
    SourceIdsList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: SourceId
      type: array
    CreateEventSubscriptionMessage:
      properties:
        SubscriptionName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the subscription.</p> <p>Constraints: The\
              \ name must be less than 255 characters.</p>"
        SnsTopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the SNS topic created for
              event notification. The ARN is created by Amazon SNS when you create
              a topic and subscribe to it.
        SourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The type of source that is generating the events. For\
              \ example, if you want to be notified of events generated by a DB instance,\
              \ you would set this parameter to db-instance. if this value is not\
              \ specified, all events are returned.</p> <p>Valid values: <code>db-instance</code>\
              \ | <code>db-cluster</code> | <code>db-parameter-group</code> | <code>db-security-group</code>\
              \ | <code>db-snapshot</code> | <code>db-cluster-snapshot</code> </p>"
        EventCategories:
          allOf:
          - $ref: '#/components/schemas/EventCategoriesList'
          - description: ' A list of event categories for a SourceType that you want
              to subscribe to. You can see a list of the categories for a given SourceType
              by using the <b>DescribeEventCategories</b> action.'
        SourceIds:
          allOf:
          - $ref: '#/components/schemas/SourceIdsList'
          - description: "<p>The list of identifiers of the event sources for which\
              \ events are returned. If not specified, then all sources are included\
              \ in the response. An identifier must begin with a letter and must contain\
              \ only ASCII letters, digits, and hyphens; it can't end with a hyphen\
              \ or contain two consecutive hyphens.</p> <p>Constraints:</p> <ul> <li>\
              \ <p>If SourceIds are supplied, SourceType must also be provided.</p>\
              \ </li> <li> <p>If the source type is a DB instance, then a <code>DBInstanceIdentifier</code>\
              \ must be supplied.</p> </li> <li> <p>If the source type is a DB security\
              \ group, a <code>DBSecurityGroupName</code> must be supplied.</p> </li>\
              \ <li> <p>If the source type is a DB parameter group, a <code>DBParameterGroupName</code>\
              \ must be supplied.</p> </li> <li> <p>If the source type is a DB snapshot,\
              \ a <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> </ul>"
        Enabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: " A Boolean value; set to <b>true</b> to activate the subscription,\
              \ set to <b>false</b> to create the subscription but not active it."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be applied to the new event subscription.
      required:
      - SnsTopicArn
      - SubscriptionName
      title: CreateEventSubscriptionMessage
      type: object
    CreateGlobalClusterMessage:
      properties:
        GlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: The cluster identifier of the new global database cluster.
        SourceDBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: (<i>Optional</i>) The Amazon Resource Name (ARN) of an existing
              Neptune DB cluster to use as the primary cluster of the new global database.
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the database engine to be used in the global\
              \ database.</p> <p>Valid values: <code>neptune</code> </p>"
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The Neptune engine version to be used by the global database.</p>\
              \ <p>Valid values: <code>1.2.0.0</code> or above.</p>"
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: The deletion protection setting for the new global database.
              The global database can't be deleted when deletion protection is enabled.
        StorageEncrypted:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: The storage encryption setting for the new global database
              cluster.
      required:
      - GlobalClusterIdentifier
      title: CreateGlobalClusterMessage
      type: object
    GlobalCluster:
      description: "<p>Contains the details of an Amazon Neptune global database.</p>\
        \ <p>This data type is used as a response element for the <a>CreateGlobalCluster</a>,\
        \ <a>DescribeGlobalClusters</a>, <a>ModifyGlobalCluster</a>, <a>DeleteGlobalCluster</a>,\
        \ <a>FailoverGlobalCluster</a>, and <a>RemoveFromGlobalCluster</a> actions.</p>"
      properties:
        GlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: Contains a user-supplied global database cluster identifier.
              This identifier is the unique key that identifies a global database.
        GlobalClusterResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An immutable identifier for the global database that is unique
              within in all regions. This identifier is found in CloudTrail log entries
              whenever the KMS key for the DB cluster is accessed.
        GlobalClusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the global database.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the current state of this global database.
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Neptune database engine used by the global database (<code>"neptune"</code>).
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Neptune engine version used by the global database.
        StorageEncrypted:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: The storage encryption setting for the global database.
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: The deletion protection setting for the global database.
        GlobalClusterMembers:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterMemberList'
          - description: A list of cluster ARNs and instance ARNs for all the DB clusters
              that are part of the global database.
      type: object
    TStamp:
      format: date-time
      type: string
    DBClusterOptionGroupMemberships:
      items:
        $ref: '#/components/schemas/DBClusterOptionGroupMemberships_inner'
      type: array
    ReadReplicaIdentifierList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: ReadReplicaIdentifier
      type: array
    DBClusterMemberList:
      items:
        $ref: '#/components/schemas/DBClusterMemberList_inner'
      type: array
    VpcSecurityGroupMembershipList:
      items:
        $ref: '#/components/schemas/VpcSecurityGroupMembershipList_inner'
      type: array
    DBClusterRoles:
      items:
        $ref: '#/components/schemas/DBClusterRoles_inner'
      type: array
    ServerlessV2ScalingConfigurationInfo:
      description: "<p>Shows the scaling configuration for a Neptune Serverless DB\
        \ cluster.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/neptune-serverless-using.html\"\
        >Using Amazon Neptune Serverless</a> in the <i>Amazon Neptune User Guide</i>.</p>"
      properties:
        MinCapacity:
          allOf:
          - $ref: '#/components/schemas/DoubleOptional'
          - description: "The minimum number of Neptune capacity units (NCUs) for\
              \ a DB instance in a Neptune Serverless cluster. You can specify NCU\
              \ values in half-step increments, such as 8, 8.5, 9, and so on."
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/DoubleOptional'
          - description: "The maximum number of Neptune capacity units (NCUs) for\
              \ a DB instance in a Neptune Serverless cluster. You can specify NCU\
              \ values in half-step increments, such as 40, 40.5, 41, and so on."
      type: object
    DBClusterEndpoint:
      description: "<p>This data type represents the information you need to connect\
        \ to an Amazon Neptune DB cluster. This data type is used as a response element\
        \ in the following actions:</p> <ul> <li> <p> <code>CreateDBClusterEndpoint</code>\
        \ </p> </li> <li> <p> <code>DescribeDBClusterEndpoints</code> </p> </li> <li>\
        \ <p> <code>ModifyDBClusterEndpoint</code> </p> </li> <li> <p> <code>DeleteDBClusterEndpoint</code>\
        \ </p> </li> </ul> <p>For the data structure that represents Amazon Neptune\
        \ DB instance endpoints, see <code>Endpoint</code>.</p>"
      properties:
        DBClusterEndpointIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier associated with the endpoint. This parameter
              is stored as a lowercase string.
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The DB cluster identifier of the DB cluster associated with
              the endpoint. This parameter is stored as a lowercase string.
        DBClusterEndpointResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A unique system-generated identifier for an endpoint. It
              remains the same for the whole life of the endpoint.
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The DNS address of the endpoint.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The current status of the endpoint. One of: <code>creating</code>,\
              \ <code>available</code>, <code>deleting</code>, <code>inactive</code>,\
              \ <code>modifying</code>. The <code>inactive</code> state applies to\
              \ an endpoint that cannot be used for a certain kind of cluster, such\
              \ as a <code>writer</code> endpoint for a read-only secondary cluster\
              \ in a global database."
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>,\
              \ <code>CUSTOM</code>."
        CustomEndpointType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The type associated with a custom endpoint. One of: <code>READER</code>,\
              \ <code>WRITER</code>, <code>ANY</code>."
        StaticMembers:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: List of DB instance identifiers that are part of the custom
              endpoint group.
        ExcludedMembers:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: List of DB instance identifiers that aren't part of the custom
              endpoint group. All other eligible instances are reachable through the
              custom endpoint. Only relevant if the list of static members is empty.
        DBClusterEndpointArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the endpoint.
      type: object
    DBClusterEndpointList:
      items:
        $ref: '#/components/schemas/DBClusterEndpointList_inner'
      type: array
    DBClusterList:
      items:
        $ref: '#/components/schemas/DBClusterList_inner'
      type: array
    DBClusterMember:
      description: Contains information about an instance that is part of a DB cluster.
      properties:
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the instance identifier for this member of the
              DB cluster.
        IsClusterWriter:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Value that is <code>true</code> if the cluster member is
              the primary instance for the DB cluster and <code>false</code> otherwise.
        DBClusterParameterGroupStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the status of the DB cluster parameter group for
              this member of the DB cluster.
        PromotionTier:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: A value that specifies the order in which a Read Replica
              is promoted to the primary instance after a failure of the existing
              primary instance.
      type: object
    DBClusterOptionGroupStatus:
      description: Not supported by Neptune.
      properties:
        DBClusterOptionGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
      type: object
    ParametersList:
      items:
        $ref: '#/components/schemas/GET_ModifyDBClusterParameterGroup_Parameters_parameter_inner'
      type: array
    DBClusterParameterGroupList:
      items:
        $ref: '#/components/schemas/DBClusterParameterGroupList_inner'
      type: array
    DBClusterRole:
      description: Describes an Amazon Identity and Access Management (IAM) role that
        is associated with a DB cluster.
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the IAM role that is associated
              with the DB cluster.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Describes the state of association between the IAM role\
              \ and the DB cluster. The Status property returns one of the following\
              \ values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is\
              \ associated with the DB cluster and can be used to access other Amazon\
              \ services on your behalf.</p> </li> <li> <p> <code>PENDING</code> -\
              \ the IAM role ARN is being associated with the DB cluster.</p> </li>\
              \ <li> <p> <code>INVALID</code> - the IAM role ARN is associated with\
              \ the DB cluster, but the DB cluster is unable to assume the IAM role\
              \ in order to access other Amazon services on your behalf.</p> </li>\
              \ </ul>"
        FeatureName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of the feature associated with the Amazon Identity\
              \ and Access Management (IAM) role. For the list of supported feature\
              \ names, see <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/api-other-apis.html#DescribeDBEngineVersions\"\
              >DescribeDBEngineVersions</a>. "
      type: object
    Integer:
      type: integer
    DBClusterSnapshotAttribute:
      description: "<p>Contains the name and values of a manual DB cluster snapshot\
        \ attribute.</p> <p>Manual DB cluster snapshot attributes are used to authorize\
        \ other Amazon accounts to restore a manual DB cluster snapshot. For more\
        \ information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>"
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the manual DB cluster snapshot attribute.</p>\
              \ <p>The attribute named <code>restore</code> refers to the list of\
              \ Amazon accounts that have permission to copy or restore the manual\
              \ DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a>\
              \ API action.</p>"
        AttributeValues:
          allOf:
          - $ref: '#/components/schemas/AttributeValueList'
          - description: "<p>The value(s) for the manual DB cluster snapshot attribute.</p>\
              \ <p>If the <code>AttributeName</code> field is set to <code>restore</code>,\
              \ then this element returns a list of IDs of the Amazon accounts that\
              \ are authorized to copy or restore the manual DB cluster snapshot.\
              \ If a value of <code>all</code> is in the list, then the manual DB\
              \ cluster snapshot is public and available for any Amazon account to\
              \ copy or restore.</p>"
      type: object
    DBClusterSnapshotAttributeList:
      items:
        $ref: '#/components/schemas/DBClusterSnapshotAttributeList_inner'
      type: array
    DBClusterSnapshotAttributesResult:
      description: "<p>Contains the results of a successful call to the <a>DescribeDBClusterSnapshotAttributes</a>\
        \ API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize\
        \ other Amazon accounts to copy or restore a manual DB cluster snapshot. For\
        \ more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>"
      properties:
        DBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the manual DB cluster snapshot that the
              attributes apply to.
        DBClusterSnapshotAttributes:
          allOf:
          - $ref: '#/components/schemas/DBClusterSnapshotAttributeList'
          - description: The list of attributes and values for the manual DB cluster
              snapshot.
      type: object
    DBClusterSnapshotList:
      items:
        $ref: '#/components/schemas/DBClusterSnapshotList_inner'
      type: array
    SupportedCharacterSetsList:
      items:
        $ref: '#/components/schemas/SupportedCharacterSetsList_inner'
      type: array
    ValidUpgradeTargetList:
      items:
        $ref: '#/components/schemas/ValidUpgradeTargetList_inner'
      type: array
    SupportedTimezonesList:
      items:
        $ref: '#/components/schemas/SupportedTimezonesList_inner'
      type: array
    DBEngineVersion:
      description: ' This data type is used as a response element in the action <a>DescribeDBEngineVersions</a>.'
      properties:
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the database engine.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version number of the database engine.
        DBParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the DB parameter group family for the database
              engine.
        DBEngineDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description of the database engine.
        DBEngineVersionDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description of the database engine version.
        DefaultCharacterSet:
          $ref: '#/components/schemas/DBEngineVersion_DefaultCharacterSet'
        SupportedCharacterSets:
          allOf:
          - $ref: '#/components/schemas/SupportedCharacterSetsList'
          - description: ' <i>(Not supported by Neptune)</i> '
        ValidUpgradeTarget:
          allOf:
          - $ref: '#/components/schemas/ValidUpgradeTargetList'
          - description: A list of engine versions that this database engine version
              can be upgraded to.
        SupportedTimezones:
          allOf:
          - $ref: '#/components/schemas/SupportedTimezonesList'
          - description: A list of the time zones supported by this engine for the
              <code>Timezone</code> parameter of the <code>CreateDBInstance</code>
              action.
        ExportableLogTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: The types of logs that the database engine has available
              for export to CloudWatch Logs.
        SupportsLogExportsToCloudwatchLogs:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A value that indicates whether the engine version supports
              exporting the log types specified by ExportableLogTypes to CloudWatch
              Logs.
        SupportsReadReplica:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether the database engine version supports read
              replicas.
        SupportsGlobalDatabases:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A value that indicates whether you can use Aurora global
              databases with a specific DB engine version.
      type: object
    DBEngineVersionList:
      items:
        $ref: '#/components/schemas/DBEngineVersionList_inner'
      type: array
    Endpoint:
      description: "<p>Specifies a connection endpoint.</p> <p>For the data structure\
        \ that represents Amazon Neptune DB cluster endpoints, see <code>DBClusterEndpoint</code>.</p>"
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the DNS address of the DB instance.
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Specifies the port that the database engine is listening
              on.
        HostedZoneId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the ID that Amazon Route 53 assigns when you create
              a hosted zone.
      type: object
    DBSecurityGroupMembershipList:
      items:
        $ref: '#/components/schemas/DBSecurityGroupMembershipList_inner'
      type: array
    DBParameterGroupStatusList:
      items:
        $ref: '#/components/schemas/DBParameterGroupStatusList_inner'
      type: array
    PendingModifiedValues:
      description: ' This data type is used as a response element in the <a>ModifyDBInstance</a>
        action.'
      properties:
        DBInstanceClass:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' Contains the new <code>DBInstanceClass</code> for the DB
              instance that will be applied or is currently being applied.'
        AllocatedStorage:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: ' Contains the new <code>AllocatedStorage</code> size for
              the DB instance that will be applied or is currently being applied.'
        MasterUserPassword:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: Specifies the pending port for the DB instance.
        BackupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: Specifies the pending number of days for which automated
              backups are retained.
        MultiAZ:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: Indicates that the Single-AZ DB instance is to change to
              a Multi-AZ deployment.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Indicates the database engine version.
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
        Iops:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: Specifies the new Provisioned IOPS value for the DB instance
              that will be applied or is currently being applied.
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' Contains the new <code>DBInstanceIdentifier</code> for
              the DB instance that will be applied or is currently being applied.'
        StorageType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the storage type to be associated with the DB instance.
        CACertificateIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the identifier of the CA certificate for the DB
              instance.
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The new DB subnet group for the DB instance.
        PendingCloudwatchLogsExports:
          $ref: '#/components/schemas/ClusterPendingModifiedValues_PendingCloudwatchLogsExports'
      type: object
    ReadReplicaDBInstanceIdentifierList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: ReadReplicaDBInstanceIdentifier
      type: array
    ReadReplicaDBClusterIdentifierList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: ReadReplicaDBClusterIdentifier
      type: array
    OptionGroupMembershipList:
      items:
        $ref: '#/components/schemas/OptionGroupMembershipList_inner'
      type: array
    DBInstanceStatusInfoList:
      items:
        $ref: '#/components/schemas/DBInstanceStatusInfoList_inner'
      type: array
    DomainMembershipList:
      items:
        $ref: '#/components/schemas/DomainMembershipList_inner'
      type: array
    DBInstanceList:
      items:
        $ref: '#/components/schemas/DBInstanceList_inner'
      type: array
    DBInstanceStatusInfo:
      description: Provides a list of status information for a DB instance.
      properties:
        StatusType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: This value is currently "read replication."
        Normal:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Boolean value that is true if the instance is operating\
              \ normally, or false if the instance is in an error state."
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Status of the DB instance. For a StatusType of read replica,\
              \ the values can be replicating, error, stopped, or terminated."
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Details of the error if there is an error for the instance.\
              \ If the instance is not in an error state, this value is blank."
      type: object
    DBParameterGroupList:
      items:
        $ref: '#/components/schemas/DBParameterGroupList_inner'
      type: array
    DBParameterGroupStatus:
      description: <p>The status of the DB parameter group.</p> <p>This data type
        is used as a response element in the following actions:</p> <ul> <li> <p>
        <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li>
        <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a>
        </p> </li> </ul>
      properties:
        DBParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the DP parameter group.
        ParameterApplyStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status of parameter updates.
      type: object
    DBSecurityGroupMembership:
      description: Specifies membership in a designated DB security group.
      properties:
        DBSecurityGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the DB security group.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status of the DB security group.
      type: object
    SubnetList:
      items:
        $ref: '#/components/schemas/SubnetList_inner'
      type: array
    DBSubnetGroups:
      items:
        $ref: '#/components/schemas/DBSubnetGroups_inner'
      type: array
    DeleteDBClusterEndpointMessage:
      properties:
        DBClusterEndpointIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier associated with the custom endpoint. This
              parameter is stored as a lowercase string.
      required:
      - DBClusterEndpointIdentifier
      title: DeleteDBClusterEndpointMessage
      type: object
    DeleteDBClusterMessage:
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The DB cluster identifier for the DB cluster to be deleted.
              This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li>
              <p>Must match an existing DBClusterIdentifier.</p> </li> </ul>
        SkipFinalSnapshot:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p> Determines whether a final DB cluster snapshot is created\
              \ before the DB cluster is deleted. If <code>true</code> is specified,\
              \ no DB cluster snapshot is created. If <code>false</code> is specified,\
              \ a DB cluster snapshot is created before the DB cluster is deleted.</p>\
              \ <note> <p>You must specify a <code>FinalDBSnapshotIdentifier</code>\
              \ parameter if <code>SkipFinalSnapshot</code> is <code>false</code>.</p>\
              \ </note> <p>Default: <code>false</code> </p>"
        FinalDBSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p> The DB cluster snapshot identifier of the new DB cluster\
              \ snapshot created when <code>SkipFinalSnapshot</code> is set to <code>false</code>.</p>\
              \ <note> <p> Specifying this parameter and also setting the <code>SkipFinalShapshot</code>\
              \ parameter to true results in an error.</p> </note> <p>Constraints:</p>\
              \ <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li>\
              \ <li> <p>First character must be a letter</p> </li> <li> <p>Cannot\
              \ end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
      required:
      - DBClusterIdentifier
      title: DeleteDBClusterMessage
      type: object
    DeleteDBClusterParameterGroupMessage:
      properties:
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The name of the DB cluster parameter group.</p> <p>Constraints:</p>
              <ul> <li> <p>Must be the name of an existing DB cluster parameter group.</p>
              </li> <li> <p>You can't delete a default DB cluster parameter group.</p>
              </li> <li> <p>Cannot be associated with any DB clusters.</p> </li> </ul>
      required:
      - DBClusterParameterGroupName
      title: DeleteDBClusterParameterGroupMessage
      type: object
    DeleteDBClusterSnapshotMessage:
      properties:
        DBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier of the DB cluster snapshot to delete.</p>\
              \ <p>Constraints: Must be the name of an existing DB cluster snapshot\
              \ in the <code>available</code> state.</p>"
      required:
      - DBClusterSnapshotIdentifier
      title: DeleteDBClusterSnapshotMessage
      type: object
    DeleteDBInstanceMessage:
      properties:
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The DB instance identifier for the DB instance to be deleted.
              This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li>
              <p>Must match the name of an existing DB instance.</p> </li> </ul>
        SkipFinalSnapshot:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p> Determines whether a final DB snapshot is created before\
              \ the DB instance is deleted. If <code>true</code> is specified, no\
              \ DBSnapshot is created. If <code>false</code> is specified, a DB snapshot\
              \ is created before the DB instance is deleted.</p> <p>Note that when\
              \ a DB instance is in a failure state and has a status of 'failed',\
              \ 'incompatible-restore', or 'incompatible-network', it can only be\
              \ deleted when the SkipFinalSnapshot parameter is set to \"true\".</p>\
              \ <p>Specify <code>true</code> when deleting a Read Replica.</p> <note>\
              \ <p>The FinalDBSnapshotIdentifier parameter must be specified if SkipFinalSnapshot\
              \ is <code>false</code>.</p> </note> <p>Default: <code>false</code>\
              \ </p>"
        FinalDBSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p> The DBSnapshotIdentifier of the new DBSnapshot created
              when SkipFinalSnapshot is set to <code>false</code>.</p> <note> <p>Specifying
              this parameter and also setting the SkipFinalShapshot parameter to true
              results in an error.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must
              be 1 to 255 letters or numbers.</p> </li> <li> <p>First character must
              be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two
              consecutive hyphens</p> </li> <li> <p>Cannot be specified when deleting
              a Read Replica.</p> </li> </ul>
      required:
      - DBInstanceIdentifier
      title: DeleteDBInstanceMessage
      type: object
    DeleteDBParameterGroupMessage:
      properties:
        DBParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The name of the DB parameter group.</p> <p>Constraints:</p>
              <ul> <li> <p>Must be the name of an existing DB parameter group</p>
              </li> <li> <p>You can't delete a default DB parameter group</p> </li>
              <li> <p>Cannot be associated with any DB instances</p> </li> </ul>
      required:
      - DBParameterGroupName
      title: DeleteDBParameterGroupMessage
      type: object
    DeleteDBSubnetGroupMessage:
      properties:
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the database subnet group to delete.</p>\
              \ <note> <p>You can't delete the default subnet group.</p> </note> <p>Constraints:</p>\
              \ <p>Constraints: Must match the name of an existing DBSubnetGroup.\
              \ Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
      required:
      - DBSubnetGroupName
      title: DeleteDBSubnetGroupMessage
      type: object
    DeleteEventSubscriptionMessage:
      properties:
        SubscriptionName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the event notification subscription you want
              to delete.
      required:
      - SubscriptionName
      title: DeleteEventSubscriptionMessage
      type: object
    DeleteGlobalClusterMessage:
      properties:
        GlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: The cluster identifier of the global database cluster being
              deleted.
      required:
      - GlobalClusterIdentifier
      title: DeleteGlobalClusterMessage
      type: object
    FilterList:
      items:
        $ref: '#/components/schemas/GET_DescribeDBClusterEndpoints_Filters_parameter_inner'
      type: array
    DescribeDBClusterEndpointsMessage:
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The DB cluster identifier of the DB cluster associated with
              the endpoint. This parameter is stored as a lowercase string.
        DBClusterEndpointIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the endpoint to describe. This parameter
              is stored as a lowercase string.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: "A set of name-value pairs that define which endpoints to\
              \ include in the output. The filters are specified as name-value pairs,\
              \ in the format <code>Name=<i>endpoint_type</i>,Values=<i>endpoint_type1</i>,<i>endpoint_type2</i>,...</code>.\
              \ <code>Name</code> can be one of: <code>db-cluster-endpoint-type</code>,\
              \ <code>db-cluster-endpoint-custom-type</code>, <code>db-cluster-endpoint-id</code>,\
              \ <code>db-cluster-endpoint-status</code>. <code>Values</code> for the\
              \ <code> db-cluster-endpoint-type</code> filter can be one or more of:\
              \ <code>reader</code>, <code>writer</code>, <code>custom</code>. <code>Values</code>\
              \ for the <code>db-cluster-endpoint-custom-type</code> filter can be\
              \ one or more of: <code>reader</code>, <code>any</code>. <code>Values</code>\
              \ for the <code>db-cluster-endpoint-status</code> filter can be one\
              \ or more of: <code>available</code>, <code>creating</code>, <code>deleting</code>,\
              \ <code>inactive</code>, <code>modifying</code>. "
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token called a marker is included in the response so\
              \ you can retrieve the remaining results. </p> <p>Default: 100</p> <p>Constraints:\
              \ Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous <code>DescribeDBClusterEndpoints</code>\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
      title: DescribeDBClusterEndpointsMessage
      type: object
    DescribeDBClusterParameterGroupsMessage:
      properties:
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of a specific DB cluster parameter group to\
              \ return details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied,\
              \ must match the name of an existing DBClusterParameterGroup.</p> </li>\
              \ </ul>"
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token called a marker is included in the response so\
              \ that the remaining results can be retrieved.</p> <p>Default: 100</p>\
              \ <p>Constraints: Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous <code>DescribeDBClusterParameterGroups</code>\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>."
      title: DescribeDBClusterParameterGroupsMessage
      type: object
    DescribeDBClusterParametersMessage:
      properties:
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of a specific DB cluster parameter group to\
              \ return parameter details for.</p> <p>Constraints:</p> <ul> <li> <p>If\
              \ supplied, must match the name of an existing DBClusterParameterGroup.</p>\
              \ </li> </ul>"
        Source:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " A value that indicates to return only parameters for a\
              \ specific source. Parameter sources can be <code>engine</code>, <code>service</code>,\
              \ or <code>customer</code>."
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token called a marker is included in the response so\
              \ that the remaining results can be retrieved.</p> <p>Default: 100</p>\
              \ <p>Constraints: Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous <code>DescribeDBClusterParameters</code>\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
      required:
      - DBClusterParameterGroupName
      title: DescribeDBClusterParametersMessage
      type: object
    DescribeDBClusterSnapshotAttributesMessage:
      properties:
        DBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier for the DB cluster snapshot to describe the
              attributes for.
      required:
      - DBClusterSnapshotIdentifier
      title: DescribeDBClusterSnapshotAttributesMessage
      type: object
    DescribeDBClusterSnapshotsMessage:
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The ID of the DB cluster to retrieve the list of DB cluster\
              \ snapshots for. This parameter can't be used in conjunction with the\
              \ <code>DBClusterSnapshotIdentifier</code> parameter. This parameter\
              \ is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If supplied,\
              \ must match the identifier of an existing DBCluster.</p> </li> </ul>"
        DBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>A specific DB cluster snapshot identifier to describe.\
              \ This parameter can't be used in conjunction with the <code>DBClusterIdentifier</code>\
              \ parameter. This value is stored as a lowercase string.</p> <p>Constraints:</p>\
              \ <ul> <li> <p>If supplied, must match the identifier of an existing\
              \ DBClusterSnapshot.</p> </li> <li> <p>If this identifier is for an\
              \ automated snapshot, the <code>SnapshotType</code> parameter must also\
              \ be specified.</p> </li> </ul>"
        SnapshotType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The type of DB cluster snapshots to be returned. You\
              \ can specify one of the following values:</p> <ul> <li> <p> <code>automated</code>\
              \ - Return all DB cluster snapshots that have been automatically taken\
              \ by Amazon Neptune for my Amazon account.</p> </li> <li> <p> <code>manual</code>\
              \ - Return all DB cluster snapshots that have been taken by my Amazon\
              \ account.</p> </li> <li> <p> <code>shared</code> - Return all manual\
              \ DB cluster snapshots that have been shared to my Amazon account.</p>\
              \ </li> <li> <p> <code>public</code> - Return all DB cluster snapshots\
              \ that have been marked as public.</p> </li> </ul> <p>If you don't specify\
              \ a <code>SnapshotType</code> value, then both automated and manual\
              \ DB cluster snapshots are returned. You can include shared DB cluster\
              \ snapshots with these results by setting the <code>IncludeShared</code>\
              \ parameter to <code>true</code>. You can include public DB cluster\
              \ snapshots with these results by setting the <code>IncludePublic</code>\
              \ parameter to <code>true</code>.</p> <p>The <code>IncludeShared</code>\
              \ and <code>IncludePublic</code> parameters don't apply for <code>SnapshotType</code>\
              \ values of <code>manual</code> or <code>automated</code>. The <code>IncludePublic</code>\
              \ parameter doesn't apply when <code>SnapshotType</code> is set to <code>shared</code>.\
              \ The <code>IncludeShared</code> parameter doesn't apply when <code>SnapshotType</code>\
              \ is set to <code>public</code>.</p>"
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token called a marker is included in the response so\
              \ that the remaining results can be retrieved.</p> <p>Default: 100</p>\
              \ <p>Constraints: Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous <code>DescribeDBClusterSnapshots</code>\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        IncludeShared:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>True to include shared manual DB cluster snapshots from\
              \ other Amazon accounts that this Amazon account has been given permission\
              \ to copy or restore, and otherwise false. The default is <code>false</code>.</p>\
              \ <p>You can give an Amazon account permission to restore a manual DB\
              \ cluster snapshot from another Amazon account by the <a>ModifyDBClusterSnapshotAttribute</a>\
              \ API action.</p>"
        IncludePublic:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>True to include manual DB cluster snapshots that are\
              \ public and can be copied or restored by any Amazon account, and otherwise\
              \ false. The default is <code>false</code>. The default is false.</p>\
              \ <p>You can share a manual DB cluster snapshot as public by using the\
              \ <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>"
      title: DescribeDBClusterSnapshotsMessage
      type: object
    DescribeDBClustersMessage:
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The user-supplied DB cluster identifier. If this parameter\
              \ is specified, information from only the specific DB cluster is returned.\
              \ This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul>\
              \ <li> <p>If supplied, must match an existing DBClusterIdentifier.</p>\
              \ </li> </ul>"
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: "<p>A filter that specifies one or more DB clusters to describe.</p>\
              \ <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code>\
              \ - Accepts DB cluster identifiers and DB cluster Amazon Resource Names\
              \ (ARNs). The results list will only include information about the DB\
              \ clusters identified by these ARNs.</p> </li> <li> <p> <code>engine</code>\
              \ - Accepts an engine name (such as <code>neptune</code>), and restricts\
              \ the results list to DB clusters created by that engine.</p> </li>\
              \ </ul> <p>For example, to invoke this API from the Amazon CLI and filter\
              \ so that only Neptune DB clusters are returned, you could use the following\
              \ command:</p>"
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token called a marker is included in the response so\
              \ that the remaining results can be retrieved.</p> <p>Default: 100</p>\
              \ <p>Constraints: Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous <a>DescribeDBClusters</a>\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>."
      title: DescribeDBClustersMessage
      type: object
    DescribeDBEngineVersionsMessage:
      properties:
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The database engine to return.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The database engine version to return.</p> <p>Example:\
              \ <code>5.1.49</code> </p>"
        DBParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of a specific DB parameter group family to return\
              \ details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must\
              \ match an existing DBParameterGroupFamily.</p> </li> </ul>"
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: Not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more than the <code>MaxRecords</code> value is available, a pagination\
              \ token called a marker is included in the response so that the following\
              \ results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
              \ Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        DefaultOnly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates that only the default version of the specified
              engine or engine and major version combination is returned.
        ListSupportedCharacterSets:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "If this parameter is specified and the requested engine\
              \ supports the <code>CharacterSetName</code> parameter for <code>CreateDBInstance</code>,\
              \ the response includes a list of supported character sets for each\
              \ engine version."
        ListSupportedTimezones:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "If this parameter is specified and the requested engine\
              \ supports the <code>TimeZone</code> parameter for <code>CreateDBInstance</code>,\
              \ the response includes a list of supported time zones for each engine\
              \ version."
      title: DescribeDBEngineVersionsMessage
      type: object
    DescribeDBInstancesMessage:
      properties:
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The user-supplied instance identifier. If this parameter\
              \ is specified, information from only the specific DB instance is returned.\
              \ This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul>\
              \ <li> <p>If supplied, must match the identifier of an existing DBInstance.</p>\
              \ </li> </ul>"
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: "<p>A filter that specifies one or more DB instances to describe.</p>\
              \ <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code>\
              \ - Accepts DB cluster identifiers and DB cluster Amazon Resource Names\
              \ (ARNs). The results list will only include information about the DB\
              \ instances associated with the DB clusters identified by these ARNs.</p>\
              \ </li> <li> <p> <code>engine</code> - Accepts an engine name (such\
              \ as <code>neptune</code>), and restricts the results list to DB instances\
              \ created by that engine.</p> </li> </ul> <p>For example, to invoke\
              \ this API from the Amazon CLI and filter so that only Neptune DB instances\
              \ are returned, you could use the following command:</p>"
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token called a marker is included in the response so\
              \ that the remaining results can be retrieved.</p> <p>Default: 100</p>\
              \ <p>Constraints: Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous <code>DescribeDBInstances</code>\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>."
      title: DescribeDBInstancesMessage
      type: object
    DescribeDBParameterGroupsMessage:
      properties:
        DBParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of a specific DB parameter group to return details\
              \ for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match\
              \ the name of an existing DBClusterParameterGroup.</p> </li> </ul>"
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token called a marker is included in the response so\
              \ that the remaining results can be retrieved.</p> <p>Default: 100</p>\
              \ <p>Constraints: Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous <code>DescribeDBParameterGroups</code>\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>."
      title: DescribeDBParameterGroupsMessage
      type: object
    DescribeDBParametersMessage:
      properties:
        DBParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of a specific DB parameter group to return details\
              \ for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match\
              \ the name of an existing DBParameterGroup.</p> </li> </ul>"
        Source:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The parameter types to return.</p> <p>Default: All parameter\
              \ types returned</p> <p>Valid Values: <code>user | system | engine-default</code>\
              \ </p>"
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token called a marker is included in the response so\
              \ that the remaining results can be retrieved.</p> <p>Default: 100</p>\
              \ <p>Constraints: Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous <code>DescribeDBParameters</code>\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>."
      required:
      - DBParameterGroupName
      title: DescribeDBParametersMessage
      type: object
    DescribeDBSubnetGroupsMessage:
      properties:
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the DB subnet group to return details for.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token called a marker is included in the response so\
              \ that the remaining results can be retrieved.</p> <p>Default: 100</p>\
              \ <p>Constraints: Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous DescribeDBSubnetGroups\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>."
      title: DescribeDBSubnetGroupsMessage
      type: object
    DescribeEngineDefaultClusterParametersMessage:
      properties:
        DBParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the DB cluster parameter group family to return
              engine parameter information for.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token called a marker is included in the response so\
              \ that the remaining results can be retrieved.</p> <p>Default: 100</p>\
              \ <p>Constraints: Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous <code>DescribeEngineDefaultClusterParameters</code>\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>."
      required:
      - DBParameterGroupFamily
      title: DescribeEngineDefaultClusterParametersMessage
      type: object
    EngineDefaults:
      description: ' Contains the result of a successful invocation of the <a>DescribeEngineDefaultParameters</a>
        action.'
      properties:
        DBParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the DB parameter group family that
              the engine default parameters apply to.
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous EngineDefaults\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>\
              \ ."
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersList'
          - description: Contains a list of engine default parameters.
      type: object
    DescribeEngineDefaultParametersMessage:
      properties:
        DBParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the DB parameter group family.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: Not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token called a marker is included in the response so\
              \ that the remaining results can be retrieved.</p> <p>Default: 100</p>\
              \ <p>Constraints: Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous <code>DescribeEngineDefaultParameters</code>\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>."
      required:
      - DBParameterGroupFamily
      title: DescribeEngineDefaultParametersMessage
      type: object
    DescribeEventCategoriesMessage:
      properties:
        SourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The type of source that is generating the events.</p>\
              \ <p>Valid values: db-instance | db-parameter-group | db-security-group\
              \ | db-snapshot</p>"
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
      title: DescribeEventCategoriesMessage
      type: object
    DescribeEventSubscriptionsMessage:
      properties:
        SubscriptionName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the event notification subscription you want
              to describe.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token called a marker is included in the response so\
              \ that the remaining results can be retrieved.</p> <p>Default: 100</p>\
              \ <p>Constraints: Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>\
              \ ."
      title: DescribeEventSubscriptionsMessage
      type: object
    SourceType:
      enum:
      - db-instance
      - db-parameter-group
      - db-security-group
      - db-snapshot
      - db-cluster
      - db-cluster-snapshot
      type: string
    DescribeEventsMessage:
      properties:
        SourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier of the event source for which events are\
              \ returned. If not specified, then all sources are included in the response.</p>\
              \ <p>Constraints:</p> <ul> <li> <p>If SourceIdentifier is supplied,\
              \ SourceType must also be provided.</p> </li> <li> <p>If the source\
              \ type is <code>DBInstance</code>, then a <code>DBInstanceIdentifier</code>\
              \ must be supplied.</p> </li> <li> <p>If the source type is <code>DBSecurityGroup</code>,\
              \ a <code>DBSecurityGroupName</code> must be supplied.</p> </li> <li>\
              \ <p>If the source type is <code>DBParameterGroup</code>, a <code>DBParameterGroupName</code>\
              \ must be supplied.</p> </li> <li> <p>If the source type is <code>DBSnapshot</code>,\
              \ a <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> <li>\
              \ <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>\
              \ </li> </ul>"
        SourceType:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          - description: "The event source to retrieve events for. If no value is\
              \ specified, all events are returned."
        StartTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "<p> The beginning of the time interval to retrieve events\
              \ for, specified in ISO 8601 format. For more information about ISO\
              \ 8601, go to the <a href=\"http://en.wikipedia.org/wiki/ISO_8601\"\
              >ISO8601 Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>"
        EndTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "<p> The end of the time interval for which to retrieve events,\
              \ specified in ISO 8601 format. For more information about ISO 8601,\
              \ go to the <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO8601\
              \ Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>"
        Duration:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of minutes to retrieve events for.</p> <p>Default:\
              \ 60</p>"
        EventCategories:
          allOf:
          - $ref: '#/components/schemas/EventCategoriesList'
          - description: A list of event categories that trigger notifications for
              a event notification subscription.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token called a marker is included in the response so\
              \ that the remaining results can be retrieved.</p> <p>Default: 100</p>\
              \ <p>Constraints: Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous DescribeEvents\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>."
      title: DescribeEventsMessage
      type: object
    DescribeGlobalClustersMessage:
      properties:
        GlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: "<p>The user-supplied DB cluster identifier. If this parameter\
              \ is specified, only information about the specified DB cluster is returned.\
              \ This parameter is not case-sensitive.</p> <p>Constraints: If supplied,\
              \ must match an existing DB cluster identifier.</p>"
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination marker token is included in the response that you can\
              \ use to retrieve the remaining results.</p> <p>Default: <code>100</code>\
              \ </p> <p>Constraints: Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "(<i>Optional</i>) A pagination token returned by a previous\
              \ call to <code>DescribeGlobalClusters</code>. If this parameter is\
              \ specified, the response will only include records beyond the marker,\
              \ up to the number specified by <code>MaxRecords</code>."
      title: DescribeGlobalClustersMessage
      type: object
    DescribeOrderableDBInstanceOptionsMessage:
      properties:
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the engine to retrieve DB instance options for.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The engine version filter value. Specify this parameter to
              show only the available offerings matching the specified engine version.
        DBInstanceClass:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The DB instance class filter value. Specify this parameter
              to show only the available offerings matching the specified DB instance
              class.
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The license model filter value. Specify this parameter to
              show only the available offerings matching the specified license model.
        Vpc:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: The VPC filter value. Specify this parameter to show only
              the available VPC or non-VPC offerings.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token called a marker is included in the response so\
              \ that the remaining results can be retrieved.</p> <p>Default: 100</p>\
              \ <p>Constraints: Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>\
              \ ."
      required:
      - Engine
      title: DescribeOrderableDBInstanceOptionsMessage
      type: object
    DescribePendingMaintenanceActionsMessage:
      properties:
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of a resource to return pending maintenance actions
              for.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: <p>A filter that specifies one or more resources to return
              pending maintenance actions for.</p> <p>Supported filters:</p> <ul>
              <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers
              and DB cluster Amazon Resource Names (ARNs). The results list will only
              include pending maintenance actions for the DB clusters identified by
              these ARNs.</p> </li> <li> <p> <code>db-instance-id</code> - Accepts
              DB instance identifiers and DB instance ARNs. The results list will
              only include pending maintenance actions for the DB instances identified
              by these ARNs.</p> </li> </ul>
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " An optional pagination token provided by a previous <code>DescribePendingMaintenanceActions</code>\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to a number of records specified by\
              \ <code>MaxRecords</code>."
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token called a marker is included in the response so\
              \ that the remaining results can be retrieved.</p> <p>Default: 100</p>\
              \ <p>Constraints: Minimum 20, maximum 100.</p>"
      title: DescribePendingMaintenanceActionsMessage
      type: object
    DescribeValidDBInstanceModificationsMessage:
      properties:
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The customer identifier or the ARN of your DB instance.
      required:
      - DBInstanceIdentifier
      title: DescribeValidDBInstanceModificationsMessage
      type: object
    ValidDBInstanceModificationsMessage:
      description: 'Information about valid modifications that you can make to your
        DB instance. Contains the result of a successful call to the <a>DescribeValidDBInstanceModifications</a>
        action. You can use this information when you call <a>ModifyDBInstance</a>. '
      properties:
        Storage:
          allOf:
          - $ref: '#/components/schemas/ValidStorageOptionsList'
          - description: Valid storage options for your DB instance.
      type: object
    DomainMembership:
      description: An Active Directory Domain membership record associated with a
        DB instance.
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the Active Directory Domain.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The status of the DB instance's Active Directory Domain\
              \ membership, such as joined, pending-join, failed etc)."
        FQDN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The fully qualified domain name of the Active Directory Domain.
        IAMRoleName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the IAM role to be used when making API calls
              to the Directory Service.
      type: object
    Double:
      format: double
      type: number
    DoubleRange:
      description: A range of double values.
      properties:
        From:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The minimum value in the range.
        To:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The maximum value in the range.
      type: object
    DoubleRangeList:
      items:
        $ref: '#/components/schemas/DoubleRangeList_inner'
      type: array
    Event:
      description: ' This data type is used as a response element in the <a>DescribeEvents</a>
        action.'
      properties:
        SourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the identifier for the source of the event.
        SourceType:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          - description: Specifies the source type for this event.
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the text of this event.
        EventCategories:
          allOf:
          - $ref: '#/components/schemas/EventCategoriesList'
          - description: Specifies the category for the event.
        Date:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: Specifies the date and time of the event.
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the event.
      type: object
    EventCategoriesMap:
      description: Contains the results of a successful invocation of the <a>DescribeEventCategories</a>
        action.
      properties:
        SourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The source type that the returned categories belong to
        EventCategories:
          allOf:
          - $ref: '#/components/schemas/EventCategoriesList'
          - description: The event categories for the specified source type
      type: object
    EventCategoriesMapList:
      items:
        $ref: '#/components/schemas/EventCategoriesMapList_inner'
      type: array
    EventList:
      items:
        $ref: '#/components/schemas/EventList_inner'
      type: array
    EventSubscriptionsList:
      items:
        $ref: '#/components/schemas/EventSubscriptionsList_inner'
      type: array
    FailoverDBClusterMessage:
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>A DB cluster identifier to force a failover for. This
              parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must
              match the identifier of an existing DBCluster.</p> </li> </ul>
        TargetDBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the instance to promote to the primary instance.</p>\
              \ <p>You must specify the instance identifier for an Read Replica in\
              \ the DB cluster. For example, <code>mydbcluster-replica1</code>.</p>"
      title: FailoverDBClusterMessage
      type: object
    FailoverGlobalClusterMessage:
      properties:
        GlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: "<p>Identifier of the Neptune global database that should\
              \ be failed over. The identifier is the unique key assigned by the user\
              \ when the Neptune global database was created. In other words, it's\
              \ the name of the global database that you want to fail over.</p> <p>Constraints:\
              \ Must match the identifier of an existing Neptune global database.</p>"
        TargetDbClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the secondary Neptune DB
              cluster that you want to promote to primary for the global database.
      required:
      - GlobalClusterIdentifier
      - TargetDbClusterIdentifier
      title: FailoverGlobalClusterMessage
      type: object
    FilterValueList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: Value
      type: array
    GlobalClusterMemberList:
      items:
        $ref: '#/components/schemas/GlobalClusterMemberList_inner'
      type: array
    GlobalClusterList:
      items:
        $ref: '#/components/schemas/GlobalClusterList_inner'
      type: array
    ReadersArnList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    GlobalClusterMember:
      description: ' A data structure with information about any primary and secondary
        clusters associated with an Neptune global database. '
      properties:
        DBClusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The Amazon Resource Name (ARN) for each Neptune cluster. '
        Readers:
          allOf:
          - $ref: '#/components/schemas/ReadersArnList'
          - description: ' The Amazon Resource Name (ARN) for each read-only secondary
              cluster associated with the Neptune global database. '
        IsWriter:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: " Specifies whether the Neptune cluster is the primary cluster\
              \ (that is, has read-write capability) for the Neptune global database\
              \ with which it is associated. "
      type: object
    KeyList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    ListTagsForResourceMessage:
      properties:
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The Amazon Neptune resource with tags to be listed. This\
              \ value is an Amazon Resource Name (ARN). For information about creating\
              \ an ARN, see <a href=\"https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"\
              > Constructing an Amazon Resource Name (ARN)</a>."
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
      required:
      - ResourceName
      title: ListTagsForResourceMessage
      type: object
    ModifyDBClusterEndpointMessage:
      properties:
        DBClusterEndpointIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the endpoint to modify. This parameter
              is stored as a lowercase string.
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>,\
              \ <code>ANY</code>."
        StaticMembers:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: List of DB instance identifiers that are part of the custom
              endpoint group.
        ExcludedMembers:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: List of DB instance identifiers that aren't part of the custom
              endpoint group. All other eligible instances are reachable through the
              custom endpoint. Only relevant if the list of static members is empty.
      required:
      - DBClusterEndpointIdentifier
      title: ModifyDBClusterEndpointMessage
      type: object
    ModifyDBClusterMessage:
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The DB cluster identifier for the cluster being modified.
              This parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li>
              <p>Must match the identifier of an existing DBCluster.</p> </li> </ul>
        NewDBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The new DB cluster identifier for the DB cluster when\
              \ renaming a DB cluster. This value is stored as a lowercase string.</p>\
              \ <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters,\
              \ numbers, or hyphens</p> </li> <li> <p>The first character must be\
              \ a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two\
              \ consecutive hyphens</p> </li> </ul> <p>Example: <code>my-cluster2</code>\
              \ </p>"
        ApplyImmediately:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>A value that specifies whether the modifications in this\
              \ request and any pending modifications are asynchronously applied as\
              \ soon as possible, regardless of the <code>PreferredMaintenanceWindow</code>\
              \ setting for the DB cluster. If this parameter is set to <code>false</code>,\
              \ changes to the DB cluster are applied during the next maintenance\
              \ window.</p> <p>The <code>ApplyImmediately</code> parameter only affects\
              \ <code>NewDBClusterIdentifier</code> values. If you set the <code>ApplyImmediately</code>\
              \ parameter value to false, then changes to <code>NewDBClusterIdentifier</code>\
              \ values are applied during the next maintenance window. All other changes\
              \ are applied immediately, regardless of the value of the <code>ApplyImmediately</code>\
              \ parameter.</p> <p>Default: <code>false</code> </p>"
        BackupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of days for which automated backups are retained.\
              \ You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p>\
              \ <ul> <li> <p>Must be a value from 1 to 35</p> </li> </ul>"
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the DB cluster parameter group to use for the
              DB cluster.
        VpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/VpcSecurityGroupIdList'
          - description: A list of VPC security groups that the DB cluster will belong
              to.
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The port number on which the DB cluster accepts connections.</p>\
              \ <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default:\
              \ The same port as the original DB cluster.</p>"
        MasterUserPassword:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
        OptionGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' <i>Not supported by Neptune.</i> '
        PreferredBackupWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The daily time range during which automated backups are\
              \ created if automated backups are enabled, using the <code>BackupRetentionPeriod</code>\
              \ parameter.</p> <p>The default is a 30-minute window selected at random\
              \ from an 8-hour block of time for each Amazon Region.</p> <p>Constraints:</p>\
              \ <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p>\
              \ </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li>\
              \ <li> <p>Must not conflict with the preferred maintenance window.</p>\
              \ </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>"
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The weekly time range during which system maintenance\
              \ can occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>\
              \ </p> <p>The default is a 30-minute window selected at random from\
              \ an 8-hour block of time for each Amazon Region, occurring on a random\
              \ day of the week.</p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat,\
              \ Sun.</p> <p>Constraints: Minimum 30-minute window.</p>"
        EnableIAMDatabaseAuthentication:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>True to enable mapping of Amazon Identity and Access\
              \ Management (IAM) accounts to database accounts, and otherwise false.</p>\
              \ <p>Default: <code>false</code> </p>"
        CloudwatchLogsExportConfiguration:
          $ref: '#/components/schemas/ModifyDBClusterMessage_CloudwatchLogsExportConfiguration'
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The version number of the database engine to which you\
              \ want to upgrade. Changing this parameter results in an outage. The\
              \ change is applied during the next maintenance window unless the <code>ApplyImmediately</code>\
              \ parameter is set to true.</p> <p>For a list of valid engine versions,\
              \ see <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/engine-releases.html\"\
              >Engine Releases for Amazon Neptune</a>, or call <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/api-other-apis.html#DescribeDBEngineVersions\"\
              >DescribeDBEngineVersions</a>.</p>"
        AllowMajorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>A value that indicates whether upgrades between different\
              \ major versions are allowed.</p> <p>Constraints: You must set the allow-major-version-upgrade\
              \ flag when providing an <code>EngineVersion</code> parameter that uses\
              \ a different major version than the DB cluster's current version.</p>"
        DBInstanceParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the DB parameter group to apply to all instances\
              \ of the DB cluster. </p> <note> <p>When you apply a parameter group\
              \ using <code>DBInstanceParameterGroupName</code>, parameter changes\
              \ aren't applied during the next maintenance window but instead are\
              \ applied immediately.</p> </note> <p>Default: The existing name setting</p>\
              \ <p>Constraints:</p> <ul> <li> <p>The DB parameter group must be in\
              \ the same DB parameter group family as the target DB cluster version.</p>\
              \ </li> <li> <p>The <code>DBInstanceParameterGroupName</code> parameter\
              \ is only valid in combination with the <code>AllowMajorVersionUpgrade</code>\
              \ parameter.</p> </li> </ul>"
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "A value that indicates whether the DB cluster has deletion\
              \ protection enabled. The database can't be deleted when deletion protection\
              \ is enabled. By default, deletion protection is disabled."
        CopyTagsToSnapshot:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: " <i>If set to <code>true</code>, tags are copied to any\
              \ snapshot of the DB cluster that is created.</i> "
        ServerlessV2ScalingConfiguration:
          $ref: '#/components/schemas/ServerlessV2ScalingConfiguration'
      required:
      - DBClusterIdentifier
      title: ModifyDBClusterMessage
      type: object
    ModifyDBClusterParameterGroupMessage:
      properties:
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the DB cluster parameter group to modify.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersList'
          - description: A list of parameters in the DB cluster parameter group to
              modify.
      required:
      - DBClusterParameterGroupName
      - Parameters
      title: ModifyDBClusterParameterGroupMessage
      type: object
    ModifyDBClusterSnapshotAttributeMessage:
      properties:
        DBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier for the DB cluster snapshot to modify the
              attributes for.
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the DB cluster snapshot attribute to modify.</p>\
              \ <p>To manage authorization for other Amazon accounts to copy or restore\
              \ a manual DB cluster snapshot, set this value to <code>restore</code>.</p>"
        ValuesToAdd:
          allOf:
          - $ref: '#/components/schemas/AttributeValueList'
          - description: "<p>A list of DB cluster snapshot attributes to add to the\
              \ attribute specified by <code>AttributeName</code>.</p> <p>To authorize\
              \ other Amazon accounts to copy or restore a manual DB cluster snapshot,\
              \ set this list to include one or more Amazon account IDs, or <code>all</code>\
              \ to make the manual DB cluster snapshot restorable by any Amazon account.\
              \ Do not add the <code>all</code> value for any manual DB cluster snapshots\
              \ that contain private information that you don't want available to\
              \ all Amazon accounts.</p>"
        ValuesToRemove:
          allOf:
          - $ref: '#/components/schemas/AttributeValueList'
          - description: "<p>A list of DB cluster snapshot attributes to remove from\
              \ the attribute specified by <code>AttributeName</code>.</p> <p>To remove\
              \ authorization for other Amazon accounts to copy or restore a manual\
              \ DB cluster snapshot, set this list to include one or more Amazon account\
              \ identifiers, or <code>all</code> to remove authorization for any Amazon\
              \ account to copy or restore the DB cluster snapshot. If you specify\
              \ <code>all</code>, an Amazon account whose account ID is explicitly\
              \ added to the <code>restore</code> attribute can still copy or restore\
              \ a manual DB cluster snapshot.</p>"
      required:
      - AttributeName
      - DBClusterSnapshotIdentifier
      title: ModifyDBClusterSnapshotAttributeMessage
      type: object
    ModifyDBInstanceMessage:
      properties:
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The DB instance identifier. This value is stored as a
              lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the
              identifier of an existing DBInstance.</p> </li> </ul>
        AllocatedStorage:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: Not supported by Neptune.
        DBInstanceClass:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The new compute and memory capacity of the DB instance,\
              \ for example, <code>db.m4.large</code>. Not all DB instance classes\
              \ are available in all Amazon Regions.</p> <p>If you modify the DB instance\
              \ class, an outage occurs during the change. The change is applied during\
              \ the next maintenance window, unless <code>ApplyImmediately</code>\
              \ is specified as <code>true</code> for this request.</p> <p>Default:\
              \ Uses existing setting</p>"
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The new DB subnet group for the DB instance. You can\
              \ use this parameter to move your DB instance to a different VPC.</p>\
              \ <p>Changing the subnet group causes an outage during the change. The\
              \ change is applied during the next maintenance window, unless you specify\
              \ <code>true</code> for the <code>ApplyImmediately</code> parameter.</p>\
              \ <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p>\
              \ <p>Example: <code>mySubnetGroup</code> </p>"
        DBSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/DBSecurityGroupNameList'
          - description: "<p>A list of DB security groups to authorize on this DB\
              \ instance. Changing this setting doesn't result in an outage and the\
              \ change is asynchronously applied as soon as possible.</p> <p>Constraints:</p>\
              \ <ul> <li> <p>If supplied, must match existing DBSecurityGroups.</p>\
              \ </li> </ul>"
        VpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/VpcSecurityGroupIdList'
          - description: "<p>A list of EC2 VPC security groups to authorize on this\
              \ DB instance. This change is asynchronously applied as soon as possible.</p>\
              \ <p>Not applicable. The associated list of EC2 VPC security groups\
              \ is managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p>\
              \ <p>Constraints:</p> <ul> <li> <p>If supplied, must match existing\
              \ VpcSecurityGroupIds.</p> </li> </ul>"
        ApplyImmediately:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Specifies whether the modifications in this request and\
              \ any pending modifications are asynchronously applied as soon as possible,\
              \ regardless of the <code>PreferredMaintenanceWindow</code> setting\
              \ for the DB instance.</p> <p> If this parameter is set to <code>false</code>,\
              \ changes to the DB instance are applied during the next maintenance\
              \ window. Some parameter changes can cause an outage and are applied\
              \ on the next call to <a>RebootDBInstance</a>, or the next failure reboot.</p>\
              \ <p>Default: <code>false</code> </p>"
        MasterUserPassword:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
        DBParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the DB parameter group to apply to the DB\
              \ instance. Changing this setting doesn't result in an outage. The parameter\
              \ group name itself is changed immediately, but the actual parameter\
              \ changes are not applied until you reboot the instance without failover.\
              \ The db instance will NOT be rebooted automatically and the parameter\
              \ changes will NOT be applied during the next maintenance window.</p>\
              \ <p>Default: Uses existing setting</p> <p>Constraints: The DB parameter\
              \ group must be in the same DB parameter group family as this DB instance.</p>"
        BackupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>Not applicable. The retention period for automated backups\
              \ is managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p>\
              \ <p>Default: Uses existing setting</p>"
        PreferredBackupWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p> The daily time range during which automated backups\
              \ are created if automated backups are enabled.</p> <p>Not applicable.\
              \ The daily time range for creating automated backups is managed by\
              \ the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p>\
              \ <p>Constraints:</p> <ul> <li> <p>Must be in the format hh24:mi-hh24:mi</p>\
              \ </li> <li> <p>Must be in Universal Time Coordinated (UTC)</p> </li>\
              \ <li> <p>Must not conflict with the preferred maintenance window</p>\
              \ </li> <li> <p>Must be at least 30 minutes</p> </li> </ul>"
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The weekly time range (in UTC) during which system maintenance\
              \ can occur, which might result in an outage. Changing this parameter\
              \ doesn't result in an outage, except in the following situation, and\
              \ the change is asynchronously applied as soon as possible. If there\
              \ are pending actions that cause a reboot, and the maintenance window\
              \ is changed to include the current time, then changing this parameter\
              \ will cause a reboot of the DB instance. If moving this window to the\
              \ current time, there must be at least 30 minutes between the current\
              \ time and end of the window to ensure pending changes are applied.</p>\
              \ <p>Default: Uses existing setting</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi</p>\
              \ <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints:\
              \ Must be at least 30 minutes</p>"
        MultiAZ:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: Specifies if the DB instance is a Multi-AZ deployment. Changing
              this parameter doesn't result in an outage and the change is applied
              during the next maintenance window unless the <code>ApplyImmediately</code>
              parameter is set to <code>true</code> for this request.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The version number of the database engine to upgrade to.\
              \ Currently, setting this parameter has no effect. To upgrade your database\
              \ engine to the most recent release, use the <a>ApplyPendingMaintenanceAction</a>\
              \ API."
        AllowMajorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates that major version upgrades are allowed. Changing
              this parameter doesn't result in an outage and the change is asynchronously
              applied as soon as possible.
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: " Indicates that minor version upgrades are applied automatically\
              \ to the DB instance during the maintenance window. Changing this parameter\
              \ doesn't result in an outage except in the following case and the change\
              \ is asynchronously applied as soon as possible. An outage will result\
              \ if this parameter is set to <code>true</code> during the maintenance\
              \ window, and a newer minor version is available, and Neptune has enabled\
              \ auto patching for that engine version."
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
        Iops:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The new Provisioned IOPS (I/O operations per second)\
              \ value for the instance.</p> <p>Changing this setting doesn't result\
              \ in an outage and the change is applied during the next maintenance\
              \ window unless the <code>ApplyImmediately</code> parameter is set to\
              \ <code>true</code> for this request.</p> <p>Default: Uses existing\
              \ setting</p>"
        OptionGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' <i>(Not supported by Neptune)</i> '
        NewDBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p> The new DB instance identifier for the DB instance when\
              \ renaming a DB instance. When you change the DB instance identifier,\
              \ an instance reboot will occur immediately if you set <code>Apply Immediately</code>\
              \ to true, or will occur during the next maintenance window if <code>Apply\
              \ Immediately</code> to false. This value is stored as a lowercase string.</p>\
              \ <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters,\
              \ numbers, or hyphens.</p> </li> <li> <p>The first character must be\
              \ a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two\
              \ consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code>\
              \ </p>"
        StorageType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported.
        TdeCredentialArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN from the key store with which to associate the instance
              for TDE encryption.
        TdeCredentialPassword:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The password for the given ARN from the key store in order
              to access the device.
        CACertificateIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Indicates the certificate that needs to be associated with
              the instance.
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported.
        CopyTagsToSnapshot:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "True to copy all tags from the DB instance to snapshots\
              \ of the DB instance, and otherwise false. The default is false."
        MonitoringInterval:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The interval, in seconds, between points when Enhanced\
              \ Monitoring metrics are collected for the DB instance. To disable collecting\
              \ Enhanced Monitoring metrics, specify 0. The default is 0.</p> <p>If\
              \ <code>MonitoringRoleArn</code> is specified, then you must also set\
              \ <code>MonitoringInterval</code> to a value other than 0.</p> <p>Valid\
              \ Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p>"
        DBPortNumber:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The port number on which the database accepts connections.</p>\
              \ <p>The value of the <code>DBPortNumber</code> parameter must not match\
              \ any of the port values specified for options in the option group for\
              \ the DB instance.</p> <p>Your database will restart when you change\
              \ the <code>DBPortNumber</code> value regardless of the value of the\
              \ <code>ApplyImmediately</code> parameter.</p> <p> Default: <code>8182</code>\
              \ </p>"
        PubliclyAccessible:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - deprecated: true
            description: This flag should no longer be used.
        MonitoringRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The ARN for the IAM role that permits Neptune to send\
              \ enhanced monitoring metrics to Amazon CloudWatch Logs. For example,\
              \ <code>arn:aws:iam:123456789012:role/emaccess</code>.</p> <p>If <code>MonitoringInterval</code>\
              \ is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code>\
              \ value.</p>"
        DomainIAMRoleName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported
        PromotionTier:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>A value that specifies the order in which a Read Replica\
              \ is promoted to the primary instance after a failure of the existing\
              \ primary instance.</p> <p>Default: 1</p> <p>Valid Values: 0 - 15</p>"
        EnableIAMDatabaseAuthentication:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>True to enable mapping of Amazon Identity and Access\
              \ Management (IAM) accounts to database accounts, and otherwise false.</p>\
              \ <p>You can enable IAM database authentication for the following database\
              \ engines</p> <p>Not applicable. Mapping Amazon IAM accounts to database\
              \ accounts is managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p>\
              \ <p>Default: <code>false</code> </p>"
        EnablePerformanceInsights:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: ' <i>(Not supported by Neptune)</i> '
        PerformanceInsightsKMSKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' <i>(Not supported by Neptune)</i> '
        CloudwatchLogsExportConfiguration:
          $ref: '#/components/schemas/ModifyDBInstanceMessage_CloudwatchLogsExportConfiguration'
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "A value that indicates whether the DB instance has deletion\
              \ protection enabled. The database can't be deleted when deletion protection\
              \ is enabled. By default, deletion protection is disabled. See <a href=\"\
              https://docs.aws.amazon.com/neptune/latest/userguide/manage-console-instances-delete.html\"\
              >Deleting a DB Instance</a>."
      required:
      - DBInstanceIdentifier
      title: ModifyDBInstanceMessage
      type: object
    ModifyDBParameterGroupMessage:
      properties:
        DBParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the DB parameter group.</p> <p>Constraints:</p>\
              \ <ul> <li> <p>If supplied, must match the name of an existing DBParameterGroup.</p>\
              \ </li> </ul>"
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersList'
          - description: "<p>An array of parameter names, values, and the apply method\
              \ for the parameter update. At least one parameter name, value, and\
              \ apply method must be supplied; subsequent arguments are optional.\
              \ A maximum of 20 parameters can be modified in a single request.</p>\
              \ <p>Valid Values (for the application method): <code>immediate | pending-reboot</code>\
              \ </p> <note> <p>You can use the immediate value with dynamic parameters\
              \ only. You can use the pending-reboot value for both dynamic and static\
              \ parameters, and changes are applied when you reboot the DB instance\
              \ without failover.</p> </note>"
      required:
      - DBParameterGroupName
      - Parameters
      title: ModifyDBParameterGroupMessage
      type: object
    ModifyDBSubnetGroupMessage:
      properties:
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name for the DB subnet group. This value is stored\
              \ as a lowercase string. You can't modify the default subnet group.</p>\
              \ <p>Constraints: Must match the name of an existing DBSubnetGroup.\
              \ Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        DBSubnetGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description for the DB subnet group.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdentifierList'
          - description: The EC2 subnet IDs for the DB subnet group.
      required:
      - DBSubnetGroupName
      - SubnetIds
      title: ModifyDBSubnetGroupMessage
      type: object
    ModifyEventSubscriptionMessage:
      properties:
        SubscriptionName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the event notification subscription.
        SnsTopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the SNS topic created for
              event notification. The ARN is created by Amazon SNS when you create
              a topic and subscribe to it.
        SourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The type of source that is generating the events. For\
              \ example, if you want to be notified of events generated by a DB instance,\
              \ you would set this parameter to db-instance. if this value is not\
              \ specified, all events are returned.</p> <p>Valid values: db-instance\
              \ | db-parameter-group | db-security-group | db-snapshot</p>"
        EventCategories:
          allOf:
          - $ref: '#/components/schemas/EventCategoriesList'
          - description: ' A list of event categories for a SourceType that you want
              to subscribe to. You can see a list of the categories for a given SourceType
              by using the <b>DescribeEventCategories</b> action.'
        Enabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: ' A Boolean value; set to <b>true</b> to activate the subscription.'
      required:
      - SubscriptionName
      title: ModifyEventSubscriptionMessage
      type: object
    ModifyGlobalClusterMessage:
      properties:
        GlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: "<p>The DB cluster identifier for the global cluster being\
              \ modified. This parameter is not case-sensitive.</p> <p>Constraints:\
              \ Must match the identifier of an existing global database cluster.</p>"
        NewGlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: "<p>A new cluster identifier to assign to the global database.\
              \ This value is stored as a lowercase string.</p> <p>Constraints:</p>\
              \ <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p>\
              \ </li> <li> <p>The first character must be a letter.</p> </li> <li>\
              \ <p>Can't end with a hyphen or contain two consecutive hyphens</p>\
              \ </li> </ul> <p>Example: <code>my-cluster2</code> </p>"
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: Indicates whether the global database has deletion protection
              enabled. The global database cannot be deleted when deletion protection
              is enabled.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The version number of the database engine to which you\
              \ want to upgrade. Changing this parameter will result in an outage.\
              \ The change is applied during the next maintenance window unless <code>ApplyImmediately</code>\
              \ is enabled.</p> <p>To list all of the available Neptune engine versions,\
              \ use the following command:</p>"
        AllowMajorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>A value that indicates whether major version upgrades\
              \ are allowed.</p> <p>Constraints: You must allow major version upgrades\
              \ if you specify a value for the <code>EngineVersion</code> parameter\
              \ that is a different major version than the DB cluster's current version.</p>\
              \ <p>If you upgrade the major version of a global database, the cluster\
              \ and DB instance parameter groups are set to the default parameter\
              \ groups for the new version, so you will need to apply any custom parameter\
              \ groups after completing the upgrade.</p>"
      required:
      - GlobalClusterIdentifier
      title: ModifyGlobalClusterMessage
      type: object
    OptionGroupMembership:
      description: Not supported by Neptune.
      properties:
        OptionGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported by Neptune.
      type: object
    OrderableDBInstanceOption:
      description: <p>Contains a list of available options for a DB instance.</p>
        <p> This data type is used as a response element in the <a>DescribeOrderableDBInstanceOptions</a>
        action.</p>
      properties:
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The engine type of a DB instance.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The engine version of a DB instance.
        DBInstanceClass:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The DB instance class for a DB instance.
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The license model for a DB instance.
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneList'
          - description: A list of Availability Zones for a DB instance.
        MultiAZCapable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether a DB instance is Multi-AZ capable.
        ReadReplicaCapable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether a DB instance can have a Read Replica.
        Vpc:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether a DB instance is in a VPC.
        SupportsStorageEncryption:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether a DB instance supports encrypted storage.
        StorageType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Indicates the storage type for a DB instance.
        SupportsIops:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether a DB instance supports provisioned IOPS.
        SupportsEnhancedMonitoring:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether a DB instance supports Enhanced Monitoring
              at intervals from 1 to 60 seconds.
        SupportsIAMDatabaseAuthentication:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether a DB instance supports IAM database authentication.
        SupportsPerformanceInsights:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' <i>(Not supported by Neptune)</i> '
        MinStorageSize:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: Minimum storage size for a DB instance.
        MaxStorageSize:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: Maximum storage size for a DB instance.
        MinIopsPerDbInstance:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: Minimum total provisioned IOPS for a DB instance.
        MaxIopsPerDbInstance:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: Maximum total provisioned IOPS for a DB instance.
        MinIopsPerGib:
          allOf:
          - $ref: '#/components/schemas/DoubleOptional'
          - description: Minimum provisioned IOPS per GiB for a DB instance.
        MaxIopsPerGib:
          allOf:
          - $ref: '#/components/schemas/DoubleOptional'
          - description: Maximum provisioned IOPS per GiB for a DB instance.
        SupportsGlobalDatabases:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A value that indicates whether you can use Neptune global
              databases with a specific combination of other DB engine attributes.
      type: object
    OrderableDBInstanceOptionsList:
      items:
        $ref: '#/components/schemas/OrderableDBInstanceOptionsList_inner'
      type: array
    PendingMaintenanceAction:
      description: Provides information about a pending maintenance action for a resource.
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The type of pending maintenance action that is available
              for the resource.
        AutoAppliedAfterDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "The date of the maintenance window when the action is applied.\
              \ The maintenance action is applied to the resource during its first\
              \ maintenance window after this date. If this date is specified, any\
              \ <code>next-maintenance</code> opt-in requests are ignored."
        ForcedApplyDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "The date when the maintenance action is automatically applied.\
              \ The maintenance action is applied to the resource on this date regardless\
              \ of the maintenance window for the resource. If this date is specified,\
              \ any <code>immediate</code> opt-in requests are ignored."
        OptInStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Indicates the type of opt-in request that has been received
              for the resource.
        CurrentApplyDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "The effective date when the pending maintenance action is\
              \ applied to the resource. This date takes into account opt-in requests\
              \ received from the <a>ApplyPendingMaintenanceAction</a> API, the <code>AutoAppliedAfterDate</code>,\
              \ and the <code>ForcedApplyDate</code>. This value is blank if an opt-in\
              \ request has not been received and nothing has been specified as <code>AutoAppliedAfterDate</code>\
              \ or <code>ForcedApplyDate</code>."
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description providing more detail about the maintenance
              action.
      type: object
    PendingMaintenanceActionDetails:
      items:
        $ref: '#/components/schemas/PendingMaintenanceActionDetails_inner'
      type: array
    PendingMaintenanceActions:
      items:
        $ref: '#/components/schemas/PendingMaintenanceActions_inner'
      type: array
    PromoteReadReplicaDBClusterMessage:
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported.
      required:
      - DBClusterIdentifier
      title: PromoteReadReplicaDBClusterMessage
      type: object
    Range:
      description: A range of integer values.
      properties:
        From:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The minimum value in the range.
        To:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum value in the range.
        Step:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The step value for the range. For example, if you have a\
              \ range of 5,000 to 10,000, with a step value of 1,000, the valid values\
              \ start at 5,000 and step up by 1,000. Even though 7,500 is within the\
              \ range, it isn't a valid value for the range. The valid values are\
              \ 5,000, 6,000, 7,000, 8,000..."
      type: object
    RangeList:
      items:
        $ref: '#/components/schemas/RangeList_inner'
      type: array
    RebootDBInstanceMessage:
      properties:
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The DB instance identifier. This parameter is stored as
              a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match
              the identifier of an existing DBInstance.</p> </li> </ul>
        ForceFailover:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p> When <code>true</code>, the reboot is conducted through\
              \ a MultiAZ failover.</p> <p>Constraint: You can't specify <code>true</code>\
              \ if the instance is not configured for MultiAZ.</p>"
      required:
      - DBInstanceIdentifier
      title: RebootDBInstanceMessage
      type: object
    RemoveFromGlobalClusterMessage:
      properties:
        GlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: The identifier of the Neptune global database from which
              to detach the specified Neptune DB cluster.
        DbClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) identifying the cluster to
              be detached from the Neptune global database cluster.
      required:
      - DbClusterIdentifier
      - GlobalClusterIdentifier
      title: RemoveFromGlobalClusterMessage
      type: object
    RemoveRoleFromDBClusterMessage:
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the DB cluster to disassociate the IAM role from.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The Amazon Resource Name (ARN) of the IAM role to disassociate\
              \ from the DB cluster, for example <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>."
        FeatureName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of the feature for the DB cluster that the IAM\
              \ role is to be disassociated from. For the list of supported feature\
              \ names, see <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/api-other-apis.html#DescribeDBEngineVersions\"\
              >DescribeDBEngineVersions</a>."
      required:
      - DBClusterIdentifier
      - RoleArn
      title: RemoveRoleFromDBClusterMessage
      type: object
    RemoveSourceIdentifierFromSubscriptionMessage:
      properties:
        SubscriptionName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the event notification subscription you want
              to remove a source identifier from.
        SourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " The source identifier to be removed from the subscription,\
              \ such as the <b>DB instance identifier</b> for a DB instance or the\
              \ name of a security group."
      required:
      - SourceIdentifier
      - SubscriptionName
      title: RemoveSourceIdentifierFromSubscriptionMessage
      type: object
    RemoveTagsFromResourceMessage:
      properties:
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The Amazon Neptune resource that the tags are removed from.\
              \ This value is an Amazon Resource Name (ARN). For information about\
              \ creating an ARN, see <a href=\"https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing\"\
              > Constructing an Amazon Resource Name (ARN)</a>."
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/KeyList'
          - description: The tag key (name) of the tag to be removed.
      required:
      - ResourceName
      - TagKeys
      title: RemoveTagsFromResourceMessage
      type: object
    ResetDBClusterParameterGroupMessage:
      properties:
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the DB cluster parameter group to reset.
        ResetAllParameters:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "A value that is set to <code>true</code> to reset all parameters\
              \ in the DB cluster parameter group to their default values, and <code>false</code>\
              \ otherwise. You can't use this parameter if there is a list of parameter\
              \ names specified for the <code>Parameters</code> parameter."
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersList'
          - description: A list of parameter names in the DB cluster parameter group
              to reset to the default values. You can't use this parameter if the
              <code>ResetAllParameters</code> parameter is set to <code>true</code>.
      required:
      - DBClusterParameterGroupName
      title: ResetDBClusterParameterGroupMessage
      type: object
    ResetDBParameterGroupMessage:
      properties:
        DBParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The name of the DB parameter group.</p> <p>Constraints:</p>
              <ul> <li> <p>Must match the name of an existing DBParameterGroup.</p>
              </li> </ul>
        ResetAllParameters:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Specifies whether (<code>true</code>) or not (<code>false</code>)\
              \ to reset all parameters in the DB parameter group to default values.</p>\
              \ <p>Default: <code>true</code> </p>"
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersList'
          - description: "<p>To reset the entire DB parameter group, specify the <code>DBParameterGroup</code>\
              \ name and <code>ResetAllParameters</code> parameters. To reset specific\
              \ parameters, provide a list of the following: <code>ParameterName</code>\
              \ and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified\
              \ in a single request.</p> <p>Valid Values (for Apply method): <code>pending-reboot</code>\
              \ </p>"
      required:
      - DBParameterGroupName
      title: ResetDBParameterGroupMessage
      type: object
    RestoreDBClusterFromSnapshotMessage:
      properties:
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZones'
          - description: Provides the list of EC2 Availability Zones that instances
              in the restored DB cluster can be created in.
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the DB cluster to create from the DB snapshot\
              \ or DB cluster snapshot. This parameter isn't case-sensitive.</p> <p>Constraints:</p>\
              \ <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p>\
              \ </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot\
              \ end with a hyphen or contain two consecutive hyphens</p> </li> </ul>\
              \ <p>Example: <code>my-snapshot-id</code> </p>"
        SnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier for the DB snapshot or DB cluster snapshot\
              \ to restore from.</p> <p>You can use either the name or the Amazon\
              \ Resource Name (ARN) to specify a DB cluster snapshot. However, you\
              \ can use only the ARN to specify a DB snapshot.</p> <p>Constraints:</p>\
              \ <ul> <li> <p>Must match the identifier of an existing Snapshot.</p>\
              \ </li> </ul>"
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The database engine to use for the new DB cluster.</p>\
              \ <p>Default: The same as source</p> <p>Constraint: Must be compatible\
              \ with the engine of the source</p>"
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version of the database engine to use for the new DB
              cluster.
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The port number on which the new DB cluster accepts connections.</p>\
              \ <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default:\
              \ The same port as the original DB cluster.</p>"
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the DB subnet group to use for the new DB\
              \ cluster.</p> <p>Constraints: If supplied, must match the name of an\
              \ existing DBSubnetGroup.</p> <p>Example: <code>mySubnetgroup</code>\
              \ </p>"
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Not supported.
        OptionGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' <i>(Not supported by Neptune)</i> '
        VpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/VpcSecurityGroupIdList'
          - description: A list of VPC security groups that the new DB cluster will
              belong to.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the restored DB cluster.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The Amazon KMS key identifier to use when restoring an\
              \ encrypted DB cluster from a DB snapshot or DB cluster snapshot.</p>\
              \ <p>The KMS key identifier is the Amazon Resource Name (ARN) for the\
              \ KMS encryption key. If you are restoring a DB cluster with the same\
              \ Amazon account that owns the KMS encryption key used to encrypt the\
              \ new DB cluster, then you can use the KMS key alias instead of the\
              \ ARN for the KMS encryption key.</p> <p>If you do not specify a value\
              \ for the <code>KmsKeyId</code> parameter, then the following will occur:</p>\
              \ <ul> <li> <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code>\
              \ is encrypted, then the restored DB cluster is encrypted using the\
              \ KMS key that was used to encrypt the DB snapshot or DB cluster snapshot.</p>\
              \ </li> <li> <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code>\
              \ is not encrypted, then the restored DB cluster is not encrypted.</p>\
              \ </li> </ul>"
        EnableIAMDatabaseAuthentication:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>True to enable mapping of Amazon Identity and Access\
              \ Management (IAM) accounts to database accounts, and otherwise false.</p>\
              \ <p>Default: <code>false</code> </p>"
        EnableCloudwatchLogsExports:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: The list of logs that the restored DB cluster is to export
              to Amazon CloudWatch Logs.
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the DB cluster parameter group to associate\
              \ with the new DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>If supplied,\
              \ must match the name of an existing DBClusterParameterGroup.</p> </li>\
              \ </ul>"
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "A value that indicates whether the DB cluster has deletion\
              \ protection enabled. The database can't be deleted when deletion protection\
              \ is enabled. By default, deletion protection is disabled. "
        CopyTagsToSnapshot:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: " <i>If set to <code>true</code>, tags are copied to any\
              \ snapshot of the restored DB cluster that is created.</i> "
        ServerlessV2ScalingConfiguration:
          $ref: '#/components/schemas/ServerlessV2ScalingConfiguration'
      required:
      - DBClusterIdentifier
      - Engine
      - SnapshotIdentifier
      title: RestoreDBClusterFromSnapshotMessage
      type: object
    RestoreDBClusterToPointInTimeMessage:
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the new DB cluster to be created.</p> <p>Constraints:</p>\
              \ <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p>\
              \ </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot\
              \ end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        RestoreType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The type of restore to be performed. You can specify\
              \ one of the following values:</p> <ul> <li> <p> <code>full-copy</code>\
              \ - The new DB cluster is restored as a full copy of the source DB cluster.</p>\
              \ </li> <li> <p> <code>copy-on-write</code> - The new DB cluster is\
              \ restored as a clone of the source DB cluster.</p> </li> </ul> <p>If\
              \ you don't specify a <code>RestoreType</code> value, then the new DB\
              \ cluster is restored as a full copy of the source DB cluster.</p>"
        SourceDBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The identifier of the source DB cluster from which to
              restore.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier
              of an existing DBCluster.</p> </li> </ul>
        RestoreToTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "<p>The date and time to restore the DB cluster to.</p> <p>Valid\
              \ Values: Value must be a time in Universal Coordinated Time (UTC) format</p>\
              \ <p>Constraints:</p> <ul> <li> <p>Must be before the latest restorable\
              \ time for the DB instance</p> </li> <li> <p>Must be specified if <code>UseLatestRestorableTime</code>\
              \ parameter is not provided</p> </li> <li> <p>Cannot be specified if\
              \ <code>UseLatestRestorableTime</code> parameter is true</p> </li> <li>\
              \ <p>Cannot be specified if <code>RestoreType</code> parameter is <code>copy-on-write</code>\
              \ </p> </li> </ul> <p>Example: <code>2015-03-07T23:45:00Z</code> </p>"
        UseLatestRestorableTime:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>A value that is set to <code>true</code> to restore the\
              \ DB cluster to the latest restorable backup time, and <code>false</code>\
              \ otherwise.</p> <p>Default: <code>false</code> </p> <p>Constraints:\
              \ Cannot be specified if <code>RestoreToTime</code> parameter is provided.</p>"
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The port number on which the new DB cluster accepts connections.</p>\
              \ <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default:\
              \ The same port as the original DB cluster.</p>"
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The DB subnet group name to use for the new DB cluster.</p>\
              \ <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p>\
              \ <p>Example: <code>mySubnetgroup</code> </p>"
        OptionGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' <i>(Not supported by Neptune)</i> '
        VpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/VpcSecurityGroupIdList'
          - description: A list of VPC security groups that the new DB cluster belongs
              to.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be applied to the restored DB cluster.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The Amazon KMS key identifier to use when restoring an\
              \ encrypted DB cluster from an encrypted DB cluster.</p> <p>The KMS\
              \ key identifier is the Amazon Resource Name (ARN) for the KMS encryption\
              \ key. If you are restoring a DB cluster with the same Amazon account\
              \ that owns the KMS encryption key used to encrypt the new DB cluster,\
              \ then you can use the KMS key alias instead of the ARN for the KMS\
              \ encryption key.</p> <p>You can restore to a new DB cluster and encrypt\
              \ the new DB cluster with a KMS key that is different than the KMS key\
              \ used to encrypt the source DB cluster. The new DB cluster is encrypted\
              \ with the KMS key identified by the <code>KmsKeyId</code> parameter.</p>\
              \ <p>If you do not specify a value for the <code>KmsKeyId</code> parameter,\
              \ then the following will occur:</p> <ul> <li> <p>If the DB cluster\
              \ is encrypted, then the restored DB cluster is encrypted using the\
              \ KMS key that was used to encrypt the source DB cluster.</p> </li>\
              \ <li> <p>If the DB cluster is not encrypted, then the restored DB cluster\
              \ is not encrypted.</p> </li> </ul> <p>If <code>DBClusterIdentifier</code>\
              \ refers to a DB cluster that is not encrypted, then the restore request\
              \ is rejected.</p>"
        EnableIAMDatabaseAuthentication:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>True to enable mapping of Amazon Identity and Access\
              \ Management (IAM) accounts to database accounts, and otherwise false.</p>\
              \ <p>Default: <code>false</code> </p>"
        EnableCloudwatchLogsExports:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: The list of logs that the restored DB cluster is to export
              to CloudWatch Logs.
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the DB cluster parameter group to associate\
              \ with the new DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>If supplied,\
              \ must match the name of an existing DBClusterParameterGroup.</p> </li>\
              \ </ul>"
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "A value that indicates whether the DB cluster has deletion\
              \ protection enabled. The database can't be deleted when deletion protection\
              \ is enabled. By default, deletion protection is disabled. "
        ServerlessV2ScalingConfiguration:
          $ref: '#/components/schemas/ServerlessV2ScalingConfiguration'
      required:
      - DBClusterIdentifier
      - SourceDBClusterIdentifier
      title: RestoreDBClusterToPointInTimeMessage
      type: object
    StartDBClusterMessage:
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The DB cluster identifier of the Neptune DB cluster to be
              started. This parameter is stored as a lowercase string.
      required:
      - DBClusterIdentifier
      title: StartDBClusterMessage
      type: object
    StopDBClusterMessage:
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The DB cluster identifier of the Neptune DB cluster to be
              stopped. This parameter is stored as a lowercase string.
      required:
      - DBClusterIdentifier
      title: StopDBClusterMessage
      type: object
    Subnet:
      description: <p>Specifies a subnet.</p> <p> This data type is used as a response
        element in the <a>DescribeDBSubnetGroups</a> action.</p>
      properties:
        SubnetIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the identifier of the subnet.
        SubnetAvailabilityZone:
          $ref: '#/components/schemas/Subnet_SubnetAvailabilityZone'
        SubnetStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the status of the subnet.
      type: object
    Timezone:
      description: A time zone associated with a <a>DBInstance</a>.
      properties:
        TimezoneName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the time zone.
      type: object
    UpgradeTarget:
      description: The version of the database engine that a DB instance can be upgraded
        to.
      properties:
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the upgrade target database engine.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version number of the upgrade target database engine.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version of the database engine that a DB instance can
              be upgraded to.
        AutoUpgrade:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A value that indicates whether the target version is applied
              to any source DB instances that have AutoMinorVersionUpgrade set to
              true.
        IsMajorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A value that indicates whether a database engine is upgraded
              to a major version.
        SupportsGlobalDatabases:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: A value that indicates whether you can use Neptune global
              databases with the target engine version.
      type: object
    ValidStorageOptionsList:
      items:
        $ref: '#/components/schemas/ValidStorageOptionsList_inner'
      type: array
    ValidStorageOptions:
      description: <p>Information about valid modifications that you can make to your
        DB instance.</p> <p>Contains the result of a successful call to the <a>DescribeValidDBInstanceModifications</a>
        action.</p>
      properties:
        StorageType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The valid storage types for your DB instance. For example,\
              \ gp2, io1."
        StorageSize:
          allOf:
          - $ref: '#/components/schemas/RangeList'
          - description: "The valid range of storage in gibibytes. For example, 100\
              \ to 16384."
        ProvisionedIops:
          allOf:
          - $ref: '#/components/schemas/RangeList'
          - description: "The valid range of provisioned IOPS. For example, 1000-20000."
        IopsToStorageRatio:
          allOf:
          - $ref: '#/components/schemas/DoubleRangeList'
          - description: "The valid range of Provisioned IOPS to gibibytes of storage\
              \ multiplier. For example, 3-10, which means that provisioned IOPS can\
              \ be between 3 and 10 times storage."
      type: object
    VpcSecurityGroupMembership:
      description: This data type is used as a response element for queries on VPC
        security group membership.
      properties:
        VpcSecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the VPC security group.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status of the VPC security group.
      type: object
    GET_AddTagsToResource_Tags_parameter_inner:
      allOf:
      - $ref: '#/components/schemas/Tag'
      - xml:
          name: Tag
    GET_CreateDBCluster_ServerlessV2ScalingConfiguration_parameter:
      description: "<p>Contains the scaling configuration of a Neptune Serverless\
        \ DB cluster.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/neptune-serverless-using.html\"\
        >Using Amazon Neptune Serverless</a> in the <i>Amazon Neptune User Guide</i>.</p>"
      properties:
        MinCapacity:
          allOf:
          - $ref: '#/components/schemas/DoubleOptional'
          - description: "The minimum number of Neptune capacity units (NCUs) for\
              \ a DB instance in a Neptune Serverless cluster. You can specify NCU\
              \ values in half-step increments, such as 8, 8.5, 9, and so on."
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/DoubleOptional'
          - description: "The maximum number of Neptune capacity units (NCUs) for\
              \ a DB instance in a Neptune Serverless cluster. You can specify NCU\
              \ values in half-step increments, such as 40, 40.5, 41, and so on."
      type: object
    GET_DescribeDBClusterEndpoints_Filters_parameter_inner:
      allOf:
      - $ref: '#/components/schemas/Filter'
      - xml:
          name: Filter
    GET_ModifyDBCluster_CloudwatchLogsExportConfiguration_parameter:
      description: <p>The configuration setting for the log types to be enabled for
        export to CloudWatch Logs for a specific DB instance or DB cluster.</p> <p>The
        <code>EnableLogTypes</code> and <code>DisableLogTypes</code> arrays determine
        which logs will be exported (or not exported) to CloudWatch Logs.</p>
      properties:
        EnableLogTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: The list of log types to enable.
        DisableLogTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: The list of log types to disable.
      type: object
    GET_ModifyDBClusterParameterGroup_Parameters_parameter_inner:
      allOf:
      - $ref: '#/components/schemas/Parameter'
      - xml:
          name: Parameter
    AvailabilityZoneList_inner:
      allOf:
      - $ref: '#/components/schemas/AvailabilityZone'
      - xml:
          name: AvailabilityZone
    ClusterPendingModifiedValues_PendingCloudwatchLogsExports:
      allOf:
      - $ref: '#/components/schemas/PendingCloudwatchLogsExports'
      - description: This <code>PendingCloudwatchLogsExports</code> structure specifies
          pending changes to which CloudWatch logs are enabled and which are disabled.
    DBCluster_PendingModifiedValues:
      allOf:
      - $ref: '#/components/schemas/ClusterPendingModifiedValues'
      - description: This data type is used as a response element in the <code>ModifyDBCluster</code>
          operation and contains changes that will be applied during the next maintenance
          window.
    DBInstance_Endpoint:
      allOf:
      - $ref: '#/components/schemas/Endpoint'
      - description: Specifies the connection endpoint.
    DBInstance_DBSubnetGroup:
      allOf:
      - $ref: '#/components/schemas/DBSubnetGroup'
      - description: "Specifies information on the subnet group associated with the\
          \ DB instance, including the name, description, and subnets in the subnet\
          \ group."
    DBInstance_PendingModifiedValues:
      allOf:
      - $ref: '#/components/schemas/PendingModifiedValues'
      - description: Specifies that changes to the DB instance are pending. This element
          is only included when changes are pending. Specific changes are identified
          by subelements.
    DBClusterOptionGroupMemberships_inner:
      allOf:
      - $ref: '#/components/schemas/DBClusterOptionGroupStatus'
      - xml:
          name: DBClusterOptionGroup
    DBClusterMemberList_inner:
      allOf:
      - $ref: '#/components/schemas/DBClusterMember'
      - xml:
          name: DBClusterMember
    VpcSecurityGroupMembershipList_inner:
      allOf:
      - $ref: '#/components/schemas/VpcSecurityGroupMembership'
      - xml:
          name: VpcSecurityGroupMembership
    DBClusterRoles_inner:
      allOf:
      - $ref: '#/components/schemas/DBClusterRole'
      - xml:
          name: DBClusterRole
    DBClusterEndpointList_inner:
      allOf:
      - $ref: '#/components/schemas/DBClusterEndpoint'
      - xml:
          name: DBClusterEndpointList
    DBClusterList_inner:
      allOf:
      - $ref: '#/components/schemas/DBCluster'
      - xml:
          name: DBCluster
    DBClusterParameterGroupList_inner:
      allOf:
      - $ref: '#/components/schemas/DBClusterParameterGroup'
      - xml:
          name: DBClusterParameterGroup
    DBClusterSnapshotAttributeList_inner:
      allOf:
      - $ref: '#/components/schemas/DBClusterSnapshotAttribute'
      - xml:
          name: DBClusterSnapshotAttribute
    DBClusterSnapshotList_inner:
      allOf:
      - $ref: '#/components/schemas/DBClusterSnapshot'
      - xml:
          name: DBClusterSnapshot
    SupportedCharacterSetsList_inner:
      allOf:
      - $ref: '#/components/schemas/CharacterSet'
      - xml:
          name: CharacterSet
    ValidUpgradeTargetList_inner:
      allOf:
      - $ref: '#/components/schemas/UpgradeTarget'
      - xml:
          name: UpgradeTarget
    SupportedTimezonesList_inner:
      allOf:
      - $ref: '#/components/schemas/Timezone'
      - xml:
          name: Timezone
    DBEngineVersion_DefaultCharacterSet:
      allOf:
      - $ref: '#/components/schemas/CharacterSet'
      - description: ' <i>(Not supported by Neptune)</i> '
    DBEngineVersionList_inner:
      allOf:
      - $ref: '#/components/schemas/DBEngineVersion'
      - xml:
          name: DBEngineVersion
    DBSecurityGroupMembershipList_inner:
      allOf:
      - $ref: '#/components/schemas/DBSecurityGroupMembership'
      - xml:
          name: DBSecurityGroup
    DBParameterGroupStatusList_inner:
      allOf:
      - $ref: '#/components/schemas/DBParameterGroupStatus'
      - xml:
          name: DBParameterGroup
    OptionGroupMembershipList_inner:
      allOf:
      - $ref: '#/components/schemas/OptionGroupMembership'
      - xml:
          name: OptionGroupMembership
    DBInstanceStatusInfoList_inner:
      allOf:
      - $ref: '#/components/schemas/DBInstanceStatusInfo'
      - xml:
          name: DBInstanceStatusInfo
    DomainMembershipList_inner:
      allOf:
      - $ref: '#/components/schemas/DomainMembership'
      - xml:
          name: DomainMembership
    DBInstanceList_inner:
      allOf:
      - $ref: '#/components/schemas/DBInstance'
      - xml:
          name: DBInstance
    DBParameterGroupList_inner:
      allOf:
      - $ref: '#/components/schemas/DBParameterGroup'
      - xml:
          name: DBParameterGroup
    SubnetList_inner:
      allOf:
      - $ref: '#/components/schemas/Subnet'
      - xml:
          name: Subnet
    DBSubnetGroups_inner:
      allOf:
      - $ref: '#/components/schemas/DBSubnetGroup'
      - xml:
          name: DBSubnetGroup
    DoubleRangeList_inner:
      allOf:
      - $ref: '#/components/schemas/DoubleRange'
      - xml:
          name: DoubleRange
    EventCategoriesMapList_inner:
      allOf:
      - $ref: '#/components/schemas/EventCategoriesMap'
      - xml:
          name: EventCategoriesMap
    EventList_inner:
      allOf:
      - $ref: '#/components/schemas/Event'
      - xml:
          name: Event
    EventSubscriptionsList_inner:
      allOf:
      - $ref: '#/components/schemas/EventSubscription'
      - xml:
          name: EventSubscription
    GlobalClusterMemberList_inner:
      allOf:
      - $ref: '#/components/schemas/GlobalClusterMember'
      - xml:
          name: GlobalClusterMember
    GlobalClusterList_inner:
      allOf:
      - $ref: '#/components/schemas/GlobalCluster'
      - xml:
          name: GlobalClusterMember
    ModifyDBClusterMessage_CloudwatchLogsExportConfiguration:
      allOf:
      - $ref: '#/components/schemas/CloudwatchLogsExportConfiguration'
      - description: The configuration setting for the log types to be enabled for
          export to CloudWatch Logs for a specific DB cluster.
    ModifyDBInstanceMessage_CloudwatchLogsExportConfiguration:
      allOf:
      - $ref: '#/components/schemas/CloudwatchLogsExportConfiguration'
      - description: The configuration setting for the log types to be enabled for
          export to CloudWatch Logs for a specific DB instance or DB cluster.
    OrderableDBInstanceOptionsList_inner:
      allOf:
      - $ref: '#/components/schemas/OrderableDBInstanceOption'
      - xml:
          name: OrderableDBInstanceOption
    PendingMaintenanceActionDetails_inner:
      allOf:
      - $ref: '#/components/schemas/PendingMaintenanceAction'
      - xml:
          name: PendingMaintenanceAction
    PendingMaintenanceActions_inner:
      allOf:
      - $ref: '#/components/schemas/ResourcePendingMaintenanceActions'
      - xml:
          name: ResourcePendingMaintenanceActions
    RangeList_inner:
      allOf:
      - $ref: '#/components/schemas/Range'
      - xml:
          name: Range
    Subnet_SubnetAvailabilityZone:
      allOf:
      - $ref: '#/components/schemas/AvailabilityZone'
      - description: Specifies the EC2 Availability Zone that the subnet is in.
    ValidStorageOptionsList_inner:
      allOf:
      - $ref: '#/components/schemas/ValidStorageOptions'
      - xml:
          name: ValidStorageOptions
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

