/*
 * Amazon Neptune
 * <fullname>Amazon Neptune</fullname> <p>Amazon Neptune is a fast, reliable, fully-managed graph database service that makes it easy to build and run applications that work with highly connected datasets. The core of Amazon Neptune is a purpose-built, high-performance graph database engine optimized for storing billions of relationships and querying the graph with milliseconds latency. Amazon Neptune supports popular graph models Property Graph and W3C's RDF, and their respective query languages Apache TinkerPop Gremlin and SPARQL, allowing you to easily build queries that efficiently navigate highly connected datasets. Neptune powers graph use cases such as recommendation engines, fraud detection, knowledge graphs, drug discovery, and network security.</p> <p>This interface reference for Amazon Neptune contains documentation for a programming or command line interface you can use to manage Amazon Neptune. Note that Amazon Neptune is asynchronous, which means that some interfaces might require techniques such as polling or callback functions to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a command is applied immediately, on the next instance reboot, or during the maintenance window. The reference structure is as follows, and we list following some related topics from the user guide.</p>
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ModifyDBInstanceMessageCloudwatchLogsExportConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ModifyDBInstanceMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:52.008602-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ModifyDBInstanceMessage {
  public static final String SERIALIZED_NAME_DB_INSTANCE_IDENTIFIER = "DBInstanceIdentifier";
  @SerializedName(SERIALIZED_NAME_DB_INSTANCE_IDENTIFIER)
  private String dbInstanceIdentifier;

  public static final String SERIALIZED_NAME_ALLOCATED_STORAGE = "AllocatedStorage";
  @SerializedName(SERIALIZED_NAME_ALLOCATED_STORAGE)
  private Integer allocatedStorage;

  public static final String SERIALIZED_NAME_DB_INSTANCE_CLASS = "DBInstanceClass";
  @SerializedName(SERIALIZED_NAME_DB_INSTANCE_CLASS)
  private String dbInstanceClass;

  public static final String SERIALIZED_NAME_DB_SUBNET_GROUP_NAME = "DBSubnetGroupName";
  @SerializedName(SERIALIZED_NAME_DB_SUBNET_GROUP_NAME)
  private String dbSubnetGroupName;

  public static final String SERIALIZED_NAME_DB_SECURITY_GROUPS = "DBSecurityGroups";
  @SerializedName(SERIALIZED_NAME_DB_SECURITY_GROUPS)
  private List dbSecurityGroups;

  public static final String SERIALIZED_NAME_VPC_SECURITY_GROUP_IDS = "VpcSecurityGroupIds";
  @SerializedName(SERIALIZED_NAME_VPC_SECURITY_GROUP_IDS)
  private List vpcSecurityGroupIds;

  public static final String SERIALIZED_NAME_APPLY_IMMEDIATELY = "ApplyImmediately";
  @SerializedName(SERIALIZED_NAME_APPLY_IMMEDIATELY)
  private Boolean applyImmediately;

  public static final String SERIALIZED_NAME_MASTER_USER_PASSWORD = "MasterUserPassword";
  @SerializedName(SERIALIZED_NAME_MASTER_USER_PASSWORD)
  private String masterUserPassword;

  public static final String SERIALIZED_NAME_DB_PARAMETER_GROUP_NAME = "DBParameterGroupName";
  @SerializedName(SERIALIZED_NAME_DB_PARAMETER_GROUP_NAME)
  private String dbParameterGroupName;

  public static final String SERIALIZED_NAME_BACKUP_RETENTION_PERIOD = "BackupRetentionPeriod";
  @SerializedName(SERIALIZED_NAME_BACKUP_RETENTION_PERIOD)
  private Integer backupRetentionPeriod;

  public static final String SERIALIZED_NAME_PREFERRED_BACKUP_WINDOW = "PreferredBackupWindow";
  @SerializedName(SERIALIZED_NAME_PREFERRED_BACKUP_WINDOW)
  private String preferredBackupWindow;

  public static final String SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW = "PreferredMaintenanceWindow";
  @SerializedName(SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW)
  private String preferredMaintenanceWindow;

  public static final String SERIALIZED_NAME_MULTI_A_Z = "MultiAZ";
  @SerializedName(SERIALIZED_NAME_MULTI_A_Z)
  private Boolean multiAZ;

  public static final String SERIALIZED_NAME_ENGINE_VERSION = "EngineVersion";
  @SerializedName(SERIALIZED_NAME_ENGINE_VERSION)
  private String engineVersion;

  public static final String SERIALIZED_NAME_ALLOW_MAJOR_VERSION_UPGRADE = "AllowMajorVersionUpgrade";
  @SerializedName(SERIALIZED_NAME_ALLOW_MAJOR_VERSION_UPGRADE)
  private Boolean allowMajorVersionUpgrade;

  public static final String SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE = "AutoMinorVersionUpgrade";
  @SerializedName(SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE)
  private Boolean autoMinorVersionUpgrade;

  public static final String SERIALIZED_NAME_LICENSE_MODEL = "LicenseModel";
  @SerializedName(SERIALIZED_NAME_LICENSE_MODEL)
  private String licenseModel;

  public static final String SERIALIZED_NAME_IOPS = "Iops";
  @SerializedName(SERIALIZED_NAME_IOPS)
  private Integer iops;

  public static final String SERIALIZED_NAME_OPTION_GROUP_NAME = "OptionGroupName";
  @SerializedName(SERIALIZED_NAME_OPTION_GROUP_NAME)
  private String optionGroupName;

  public static final String SERIALIZED_NAME_NEW_D_B_INSTANCE_IDENTIFIER = "NewDBInstanceIdentifier";
  @SerializedName(SERIALIZED_NAME_NEW_D_B_INSTANCE_IDENTIFIER)
  private String newDBInstanceIdentifier;

  public static final String SERIALIZED_NAME_STORAGE_TYPE = "StorageType";
  @SerializedName(SERIALIZED_NAME_STORAGE_TYPE)
  private String storageType;

  public static final String SERIALIZED_NAME_TDE_CREDENTIAL_ARN = "TdeCredentialArn";
  @SerializedName(SERIALIZED_NAME_TDE_CREDENTIAL_ARN)
  private String tdeCredentialArn;

  public static final String SERIALIZED_NAME_TDE_CREDENTIAL_PASSWORD = "TdeCredentialPassword";
  @SerializedName(SERIALIZED_NAME_TDE_CREDENTIAL_PASSWORD)
  private String tdeCredentialPassword;

  public static final String SERIALIZED_NAME_CA_CERTIFICATE_IDENTIFIER = "CACertificateIdentifier";
  @SerializedName(SERIALIZED_NAME_CA_CERTIFICATE_IDENTIFIER)
  private String caCertificateIdentifier;

  public static final String SERIALIZED_NAME_DOMAIN = "Domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  public static final String SERIALIZED_NAME_COPY_TAGS_TO_SNAPSHOT = "CopyTagsToSnapshot";
  @SerializedName(SERIALIZED_NAME_COPY_TAGS_TO_SNAPSHOT)
  private Boolean copyTagsToSnapshot;

  public static final String SERIALIZED_NAME_MONITORING_INTERVAL = "MonitoringInterval";
  @SerializedName(SERIALIZED_NAME_MONITORING_INTERVAL)
  private Integer monitoringInterval;

  public static final String SERIALIZED_NAME_DB_PORT_NUMBER = "DBPortNumber";
  @SerializedName(SERIALIZED_NAME_DB_PORT_NUMBER)
  private Integer dbPortNumber;

  public static final String SERIALIZED_NAME_PUBLICLY_ACCESSIBLE = "PubliclyAccessible";
  @SerializedName(SERIALIZED_NAME_PUBLICLY_ACCESSIBLE)
  private Boolean publiclyAccessible;

  public static final String SERIALIZED_NAME_MONITORING_ROLE_ARN = "MonitoringRoleArn";
  @SerializedName(SERIALIZED_NAME_MONITORING_ROLE_ARN)
  private String monitoringRoleArn;

  public static final String SERIALIZED_NAME_DOMAIN_I_A_M_ROLE_NAME = "DomainIAMRoleName";
  @SerializedName(SERIALIZED_NAME_DOMAIN_I_A_M_ROLE_NAME)
  private String domainIAMRoleName;

  public static final String SERIALIZED_NAME_PROMOTION_TIER = "PromotionTier";
  @SerializedName(SERIALIZED_NAME_PROMOTION_TIER)
  private Integer promotionTier;

  public static final String SERIALIZED_NAME_ENABLE_I_A_M_DATABASE_AUTHENTICATION = "EnableIAMDatabaseAuthentication";
  @SerializedName(SERIALIZED_NAME_ENABLE_I_A_M_DATABASE_AUTHENTICATION)
  private Boolean enableIAMDatabaseAuthentication;

  public static final String SERIALIZED_NAME_ENABLE_PERFORMANCE_INSIGHTS = "EnablePerformanceInsights";
  @SerializedName(SERIALIZED_NAME_ENABLE_PERFORMANCE_INSIGHTS)
  private Boolean enablePerformanceInsights;

  public static final String SERIALIZED_NAME_PERFORMANCE_INSIGHTS_K_M_S_KEY_ID = "PerformanceInsightsKMSKeyId";
  @SerializedName(SERIALIZED_NAME_PERFORMANCE_INSIGHTS_K_M_S_KEY_ID)
  private String performanceInsightsKMSKeyId;

  public static final String SERIALIZED_NAME_CLOUDWATCH_LOGS_EXPORT_CONFIGURATION = "CloudwatchLogsExportConfiguration";
  @SerializedName(SERIALIZED_NAME_CLOUDWATCH_LOGS_EXPORT_CONFIGURATION)
  private ModifyDBInstanceMessageCloudwatchLogsExportConfiguration cloudwatchLogsExportConfiguration;

  public static final String SERIALIZED_NAME_DELETION_PROTECTION = "DeletionProtection";
  @SerializedName(SERIALIZED_NAME_DELETION_PROTECTION)
  private Boolean deletionProtection;

  public ModifyDBInstanceMessage() {
  }

  public ModifyDBInstanceMessage dbInstanceIdentifier(String dbInstanceIdentifier) {
    this.dbInstanceIdentifier = dbInstanceIdentifier;
    return this;
  }

  /**
   * Get dbInstanceIdentifier
   * @return dbInstanceIdentifier
   */
  @javax.annotation.Nonnull
  public String getDbInstanceIdentifier() {
    return dbInstanceIdentifier;
  }

  public void setDbInstanceIdentifier(String dbInstanceIdentifier) {
    this.dbInstanceIdentifier = dbInstanceIdentifier;
  }


  public ModifyDBInstanceMessage allocatedStorage(Integer allocatedStorage) {
    this.allocatedStorage = allocatedStorage;
    return this;
  }

  /**
   * Get allocatedStorage
   * @return allocatedStorage
   */
  @javax.annotation.Nullable
  public Integer getAllocatedStorage() {
    return allocatedStorage;
  }

  public void setAllocatedStorage(Integer allocatedStorage) {
    this.allocatedStorage = allocatedStorage;
  }


  public ModifyDBInstanceMessage dbInstanceClass(String dbInstanceClass) {
    this.dbInstanceClass = dbInstanceClass;
    return this;
  }

  /**
   * Get dbInstanceClass
   * @return dbInstanceClass
   */
  @javax.annotation.Nullable
  public String getDbInstanceClass() {
    return dbInstanceClass;
  }

  public void setDbInstanceClass(String dbInstanceClass) {
    this.dbInstanceClass = dbInstanceClass;
  }


  public ModifyDBInstanceMessage dbSubnetGroupName(String dbSubnetGroupName) {
    this.dbSubnetGroupName = dbSubnetGroupName;
    return this;
  }

  /**
   * Get dbSubnetGroupName
   * @return dbSubnetGroupName
   */
  @javax.annotation.Nullable
  public String getDbSubnetGroupName() {
    return dbSubnetGroupName;
  }

  public void setDbSubnetGroupName(String dbSubnetGroupName) {
    this.dbSubnetGroupName = dbSubnetGroupName;
  }


  public ModifyDBInstanceMessage dbSecurityGroups(List dbSecurityGroups) {
    this.dbSecurityGroups = dbSecurityGroups;
    return this;
  }

  /**
   * Get dbSecurityGroups
   * @return dbSecurityGroups
   */
  @javax.annotation.Nullable
  public List getDbSecurityGroups() {
    return dbSecurityGroups;
  }

  public void setDbSecurityGroups(List dbSecurityGroups) {
    this.dbSecurityGroups = dbSecurityGroups;
  }


  public ModifyDBInstanceMessage vpcSecurityGroupIds(List vpcSecurityGroupIds) {
    this.vpcSecurityGroupIds = vpcSecurityGroupIds;
    return this;
  }

  /**
   * Get vpcSecurityGroupIds
   * @return vpcSecurityGroupIds
   */
  @javax.annotation.Nullable
  public List getVpcSecurityGroupIds() {
    return vpcSecurityGroupIds;
  }

  public void setVpcSecurityGroupIds(List vpcSecurityGroupIds) {
    this.vpcSecurityGroupIds = vpcSecurityGroupIds;
  }


  public ModifyDBInstanceMessage applyImmediately(Boolean applyImmediately) {
    this.applyImmediately = applyImmediately;
    return this;
  }

  /**
   * Get applyImmediately
   * @return applyImmediately
   */
  @javax.annotation.Nullable
  public Boolean getApplyImmediately() {
    return applyImmediately;
  }

  public void setApplyImmediately(Boolean applyImmediately) {
    this.applyImmediately = applyImmediately;
  }


  public ModifyDBInstanceMessage masterUserPassword(String masterUserPassword) {
    this.masterUserPassword = masterUserPassword;
    return this;
  }

  /**
   * Get masterUserPassword
   * @return masterUserPassword
   */
  @javax.annotation.Nullable
  public String getMasterUserPassword() {
    return masterUserPassword;
  }

  public void setMasterUserPassword(String masterUserPassword) {
    this.masterUserPassword = masterUserPassword;
  }


  public ModifyDBInstanceMessage dbParameterGroupName(String dbParameterGroupName) {
    this.dbParameterGroupName = dbParameterGroupName;
    return this;
  }

  /**
   * Get dbParameterGroupName
   * @return dbParameterGroupName
   */
  @javax.annotation.Nullable
  public String getDbParameterGroupName() {
    return dbParameterGroupName;
  }

  public void setDbParameterGroupName(String dbParameterGroupName) {
    this.dbParameterGroupName = dbParameterGroupName;
  }


  public ModifyDBInstanceMessage backupRetentionPeriod(Integer backupRetentionPeriod) {
    this.backupRetentionPeriod = backupRetentionPeriod;
    return this;
  }

  /**
   * Get backupRetentionPeriod
   * @return backupRetentionPeriod
   */
  @javax.annotation.Nullable
  public Integer getBackupRetentionPeriod() {
    return backupRetentionPeriod;
  }

  public void setBackupRetentionPeriod(Integer backupRetentionPeriod) {
    this.backupRetentionPeriod = backupRetentionPeriod;
  }


  public ModifyDBInstanceMessage preferredBackupWindow(String preferredBackupWindow) {
    this.preferredBackupWindow = preferredBackupWindow;
    return this;
  }

  /**
   * Get preferredBackupWindow
   * @return preferredBackupWindow
   */
  @javax.annotation.Nullable
  public String getPreferredBackupWindow() {
    return preferredBackupWindow;
  }

  public void setPreferredBackupWindow(String preferredBackupWindow) {
    this.preferredBackupWindow = preferredBackupWindow;
  }


  public ModifyDBInstanceMessage preferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
    return this;
  }

  /**
   * Get preferredMaintenanceWindow
   * @return preferredMaintenanceWindow
   */
  @javax.annotation.Nullable
  public String getPreferredMaintenanceWindow() {
    return preferredMaintenanceWindow;
  }

  public void setPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
  }


  public ModifyDBInstanceMessage multiAZ(Boolean multiAZ) {
    this.multiAZ = multiAZ;
    return this;
  }

  /**
   * Get multiAZ
   * @return multiAZ
   */
  @javax.annotation.Nullable
  public Boolean getMultiAZ() {
    return multiAZ;
  }

  public void setMultiAZ(Boolean multiAZ) {
    this.multiAZ = multiAZ;
  }


  public ModifyDBInstanceMessage engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

  /**
   * Get engineVersion
   * @return engineVersion
   */
  @javax.annotation.Nullable
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }


  public ModifyDBInstanceMessage allowMajorVersionUpgrade(Boolean allowMajorVersionUpgrade) {
    this.allowMajorVersionUpgrade = allowMajorVersionUpgrade;
    return this;
  }

  /**
   * Get allowMajorVersionUpgrade
   * @return allowMajorVersionUpgrade
   */
  @javax.annotation.Nullable
  public Boolean getAllowMajorVersionUpgrade() {
    return allowMajorVersionUpgrade;
  }

  public void setAllowMajorVersionUpgrade(Boolean allowMajorVersionUpgrade) {
    this.allowMajorVersionUpgrade = allowMajorVersionUpgrade;
  }


  public ModifyDBInstanceMessage autoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
    return this;
  }

  /**
   * Get autoMinorVersionUpgrade
   * @return autoMinorVersionUpgrade
   */
  @javax.annotation.Nullable
  public Boolean getAutoMinorVersionUpgrade() {
    return autoMinorVersionUpgrade;
  }

  public void setAutoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
  }


  public ModifyDBInstanceMessage licenseModel(String licenseModel) {
    this.licenseModel = licenseModel;
    return this;
  }

  /**
   * Get licenseModel
   * @return licenseModel
   */
  @javax.annotation.Nullable
  public String getLicenseModel() {
    return licenseModel;
  }

  public void setLicenseModel(String licenseModel) {
    this.licenseModel = licenseModel;
  }


  public ModifyDBInstanceMessage iops(Integer iops) {
    this.iops = iops;
    return this;
  }

  /**
   * Get iops
   * @return iops
   */
  @javax.annotation.Nullable
  public Integer getIops() {
    return iops;
  }

  public void setIops(Integer iops) {
    this.iops = iops;
  }


  public ModifyDBInstanceMessage optionGroupName(String optionGroupName) {
    this.optionGroupName = optionGroupName;
    return this;
  }

  /**
   * Get optionGroupName
   * @return optionGroupName
   */
  @javax.annotation.Nullable
  public String getOptionGroupName() {
    return optionGroupName;
  }

  public void setOptionGroupName(String optionGroupName) {
    this.optionGroupName = optionGroupName;
  }


  public ModifyDBInstanceMessage newDBInstanceIdentifier(String newDBInstanceIdentifier) {
    this.newDBInstanceIdentifier = newDBInstanceIdentifier;
    return this;
  }

  /**
   * Get newDBInstanceIdentifier
   * @return newDBInstanceIdentifier
   */
  @javax.annotation.Nullable
  public String getNewDBInstanceIdentifier() {
    return newDBInstanceIdentifier;
  }

  public void setNewDBInstanceIdentifier(String newDBInstanceIdentifier) {
    this.newDBInstanceIdentifier = newDBInstanceIdentifier;
  }


  public ModifyDBInstanceMessage storageType(String storageType) {
    this.storageType = storageType;
    return this;
  }

  /**
   * Get storageType
   * @return storageType
   */
  @javax.annotation.Nullable
  public String getStorageType() {
    return storageType;
  }

  public void setStorageType(String storageType) {
    this.storageType = storageType;
  }


  public ModifyDBInstanceMessage tdeCredentialArn(String tdeCredentialArn) {
    this.tdeCredentialArn = tdeCredentialArn;
    return this;
  }

  /**
   * Get tdeCredentialArn
   * @return tdeCredentialArn
   */
  @javax.annotation.Nullable
  public String getTdeCredentialArn() {
    return tdeCredentialArn;
  }

  public void setTdeCredentialArn(String tdeCredentialArn) {
    this.tdeCredentialArn = tdeCredentialArn;
  }


  public ModifyDBInstanceMessage tdeCredentialPassword(String tdeCredentialPassword) {
    this.tdeCredentialPassword = tdeCredentialPassword;
    return this;
  }

  /**
   * Get tdeCredentialPassword
   * @return tdeCredentialPassword
   */
  @javax.annotation.Nullable
  public String getTdeCredentialPassword() {
    return tdeCredentialPassword;
  }

  public void setTdeCredentialPassword(String tdeCredentialPassword) {
    this.tdeCredentialPassword = tdeCredentialPassword;
  }


  public ModifyDBInstanceMessage caCertificateIdentifier(String caCertificateIdentifier) {
    this.caCertificateIdentifier = caCertificateIdentifier;
    return this;
  }

  /**
   * Get caCertificateIdentifier
   * @return caCertificateIdentifier
   */
  @javax.annotation.Nullable
  public String getCaCertificateIdentifier() {
    return caCertificateIdentifier;
  }

  public void setCaCertificateIdentifier(String caCertificateIdentifier) {
    this.caCertificateIdentifier = caCertificateIdentifier;
  }


  public ModifyDBInstanceMessage domain(String domain) {
    this.domain = domain;
    return this;
  }

  /**
   * Get domain
   * @return domain
   */
  @javax.annotation.Nullable
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }


  public ModifyDBInstanceMessage copyTagsToSnapshot(Boolean copyTagsToSnapshot) {
    this.copyTagsToSnapshot = copyTagsToSnapshot;
    return this;
  }

  /**
   * Get copyTagsToSnapshot
   * @return copyTagsToSnapshot
   */
  @javax.annotation.Nullable
  public Boolean getCopyTagsToSnapshot() {
    return copyTagsToSnapshot;
  }

  public void setCopyTagsToSnapshot(Boolean copyTagsToSnapshot) {
    this.copyTagsToSnapshot = copyTagsToSnapshot;
  }


  public ModifyDBInstanceMessage monitoringInterval(Integer monitoringInterval) {
    this.monitoringInterval = monitoringInterval;
    return this;
  }

  /**
   * Get monitoringInterval
   * @return monitoringInterval
   */
  @javax.annotation.Nullable
  public Integer getMonitoringInterval() {
    return monitoringInterval;
  }

  public void setMonitoringInterval(Integer monitoringInterval) {
    this.monitoringInterval = monitoringInterval;
  }


  public ModifyDBInstanceMessage dbPortNumber(Integer dbPortNumber) {
    this.dbPortNumber = dbPortNumber;
    return this;
  }

  /**
   * Get dbPortNumber
   * @return dbPortNumber
   */
  @javax.annotation.Nullable
  public Integer getDbPortNumber() {
    return dbPortNumber;
  }

  public void setDbPortNumber(Integer dbPortNumber) {
    this.dbPortNumber = dbPortNumber;
  }


  public ModifyDBInstanceMessage publiclyAccessible(Boolean publiclyAccessible) {
    this.publiclyAccessible = publiclyAccessible;
    return this;
  }

  /**
   * Get publiclyAccessible
   * @return publiclyAccessible
   */
  @javax.annotation.Nullable
  public Boolean getPubliclyAccessible() {
    return publiclyAccessible;
  }

  public void setPubliclyAccessible(Boolean publiclyAccessible) {
    this.publiclyAccessible = publiclyAccessible;
  }


  public ModifyDBInstanceMessage monitoringRoleArn(String monitoringRoleArn) {
    this.monitoringRoleArn = monitoringRoleArn;
    return this;
  }

  /**
   * Get monitoringRoleArn
   * @return monitoringRoleArn
   */
  @javax.annotation.Nullable
  public String getMonitoringRoleArn() {
    return monitoringRoleArn;
  }

  public void setMonitoringRoleArn(String monitoringRoleArn) {
    this.monitoringRoleArn = monitoringRoleArn;
  }


  public ModifyDBInstanceMessage domainIAMRoleName(String domainIAMRoleName) {
    this.domainIAMRoleName = domainIAMRoleName;
    return this;
  }

  /**
   * Get domainIAMRoleName
   * @return domainIAMRoleName
   */
  @javax.annotation.Nullable
  public String getDomainIAMRoleName() {
    return domainIAMRoleName;
  }

  public void setDomainIAMRoleName(String domainIAMRoleName) {
    this.domainIAMRoleName = domainIAMRoleName;
  }


  public ModifyDBInstanceMessage promotionTier(Integer promotionTier) {
    this.promotionTier = promotionTier;
    return this;
  }

  /**
   * Get promotionTier
   * @return promotionTier
   */
  @javax.annotation.Nullable
  public Integer getPromotionTier() {
    return promotionTier;
  }

  public void setPromotionTier(Integer promotionTier) {
    this.promotionTier = promotionTier;
  }


  public ModifyDBInstanceMessage enableIAMDatabaseAuthentication(Boolean enableIAMDatabaseAuthentication) {
    this.enableIAMDatabaseAuthentication = enableIAMDatabaseAuthentication;
    return this;
  }

  /**
   * Get enableIAMDatabaseAuthentication
   * @return enableIAMDatabaseAuthentication
   */
  @javax.annotation.Nullable
  public Boolean getEnableIAMDatabaseAuthentication() {
    return enableIAMDatabaseAuthentication;
  }

  public void setEnableIAMDatabaseAuthentication(Boolean enableIAMDatabaseAuthentication) {
    this.enableIAMDatabaseAuthentication = enableIAMDatabaseAuthentication;
  }


  public ModifyDBInstanceMessage enablePerformanceInsights(Boolean enablePerformanceInsights) {
    this.enablePerformanceInsights = enablePerformanceInsights;
    return this;
  }

  /**
   * Get enablePerformanceInsights
   * @return enablePerformanceInsights
   */
  @javax.annotation.Nullable
  public Boolean getEnablePerformanceInsights() {
    return enablePerformanceInsights;
  }

  public void setEnablePerformanceInsights(Boolean enablePerformanceInsights) {
    this.enablePerformanceInsights = enablePerformanceInsights;
  }


  public ModifyDBInstanceMessage performanceInsightsKMSKeyId(String performanceInsightsKMSKeyId) {
    this.performanceInsightsKMSKeyId = performanceInsightsKMSKeyId;
    return this;
  }

  /**
   * Get performanceInsightsKMSKeyId
   * @return performanceInsightsKMSKeyId
   */
  @javax.annotation.Nullable
  public String getPerformanceInsightsKMSKeyId() {
    return performanceInsightsKMSKeyId;
  }

  public void setPerformanceInsightsKMSKeyId(String performanceInsightsKMSKeyId) {
    this.performanceInsightsKMSKeyId = performanceInsightsKMSKeyId;
  }


  public ModifyDBInstanceMessage cloudwatchLogsExportConfiguration(ModifyDBInstanceMessageCloudwatchLogsExportConfiguration cloudwatchLogsExportConfiguration) {
    this.cloudwatchLogsExportConfiguration = cloudwatchLogsExportConfiguration;
    return this;
  }

  /**
   * Get cloudwatchLogsExportConfiguration
   * @return cloudwatchLogsExportConfiguration
   */
  @javax.annotation.Nullable
  public ModifyDBInstanceMessageCloudwatchLogsExportConfiguration getCloudwatchLogsExportConfiguration() {
    return cloudwatchLogsExportConfiguration;
  }

  public void setCloudwatchLogsExportConfiguration(ModifyDBInstanceMessageCloudwatchLogsExportConfiguration cloudwatchLogsExportConfiguration) {
    this.cloudwatchLogsExportConfiguration = cloudwatchLogsExportConfiguration;
  }


  public ModifyDBInstanceMessage deletionProtection(Boolean deletionProtection) {
    this.deletionProtection = deletionProtection;
    return this;
  }

  /**
   * Get deletionProtection
   * @return deletionProtection
   */
  @javax.annotation.Nullable
  public Boolean getDeletionProtection() {
    return deletionProtection;
  }

  public void setDeletionProtection(Boolean deletionProtection) {
    this.deletionProtection = deletionProtection;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyDBInstanceMessage modifyDBInstanceMessage = (ModifyDBInstanceMessage) o;
    return Objects.equals(this.dbInstanceIdentifier, modifyDBInstanceMessage.dbInstanceIdentifier) &&
        Objects.equals(this.allocatedStorage, modifyDBInstanceMessage.allocatedStorage) &&
        Objects.equals(this.dbInstanceClass, modifyDBInstanceMessage.dbInstanceClass) &&
        Objects.equals(this.dbSubnetGroupName, modifyDBInstanceMessage.dbSubnetGroupName) &&
        Objects.equals(this.dbSecurityGroups, modifyDBInstanceMessage.dbSecurityGroups) &&
        Objects.equals(this.vpcSecurityGroupIds, modifyDBInstanceMessage.vpcSecurityGroupIds) &&
        Objects.equals(this.applyImmediately, modifyDBInstanceMessage.applyImmediately) &&
        Objects.equals(this.masterUserPassword, modifyDBInstanceMessage.masterUserPassword) &&
        Objects.equals(this.dbParameterGroupName, modifyDBInstanceMessage.dbParameterGroupName) &&
        Objects.equals(this.backupRetentionPeriod, modifyDBInstanceMessage.backupRetentionPeriod) &&
        Objects.equals(this.preferredBackupWindow, modifyDBInstanceMessage.preferredBackupWindow) &&
        Objects.equals(this.preferredMaintenanceWindow, modifyDBInstanceMessage.preferredMaintenanceWindow) &&
        Objects.equals(this.multiAZ, modifyDBInstanceMessage.multiAZ) &&
        Objects.equals(this.engineVersion, modifyDBInstanceMessage.engineVersion) &&
        Objects.equals(this.allowMajorVersionUpgrade, modifyDBInstanceMessage.allowMajorVersionUpgrade) &&
        Objects.equals(this.autoMinorVersionUpgrade, modifyDBInstanceMessage.autoMinorVersionUpgrade) &&
        Objects.equals(this.licenseModel, modifyDBInstanceMessage.licenseModel) &&
        Objects.equals(this.iops, modifyDBInstanceMessage.iops) &&
        Objects.equals(this.optionGroupName, modifyDBInstanceMessage.optionGroupName) &&
        Objects.equals(this.newDBInstanceIdentifier, modifyDBInstanceMessage.newDBInstanceIdentifier) &&
        Objects.equals(this.storageType, modifyDBInstanceMessage.storageType) &&
        Objects.equals(this.tdeCredentialArn, modifyDBInstanceMessage.tdeCredentialArn) &&
        Objects.equals(this.tdeCredentialPassword, modifyDBInstanceMessage.tdeCredentialPassword) &&
        Objects.equals(this.caCertificateIdentifier, modifyDBInstanceMessage.caCertificateIdentifier) &&
        Objects.equals(this.domain, modifyDBInstanceMessage.domain) &&
        Objects.equals(this.copyTagsToSnapshot, modifyDBInstanceMessage.copyTagsToSnapshot) &&
        Objects.equals(this.monitoringInterval, modifyDBInstanceMessage.monitoringInterval) &&
        Objects.equals(this.dbPortNumber, modifyDBInstanceMessage.dbPortNumber) &&
        Objects.equals(this.publiclyAccessible, modifyDBInstanceMessage.publiclyAccessible) &&
        Objects.equals(this.monitoringRoleArn, modifyDBInstanceMessage.monitoringRoleArn) &&
        Objects.equals(this.domainIAMRoleName, modifyDBInstanceMessage.domainIAMRoleName) &&
        Objects.equals(this.promotionTier, modifyDBInstanceMessage.promotionTier) &&
        Objects.equals(this.enableIAMDatabaseAuthentication, modifyDBInstanceMessage.enableIAMDatabaseAuthentication) &&
        Objects.equals(this.enablePerformanceInsights, modifyDBInstanceMessage.enablePerformanceInsights) &&
        Objects.equals(this.performanceInsightsKMSKeyId, modifyDBInstanceMessage.performanceInsightsKMSKeyId) &&
        Objects.equals(this.cloudwatchLogsExportConfiguration, modifyDBInstanceMessage.cloudwatchLogsExportConfiguration) &&
        Objects.equals(this.deletionProtection, modifyDBInstanceMessage.deletionProtection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dbInstanceIdentifier, allocatedStorage, dbInstanceClass, dbSubnetGroupName, dbSecurityGroups, vpcSecurityGroupIds, applyImmediately, masterUserPassword, dbParameterGroupName, backupRetentionPeriod, preferredBackupWindow, preferredMaintenanceWindow, multiAZ, engineVersion, allowMajorVersionUpgrade, autoMinorVersionUpgrade, licenseModel, iops, optionGroupName, newDBInstanceIdentifier, storageType, tdeCredentialArn, tdeCredentialPassword, caCertificateIdentifier, domain, copyTagsToSnapshot, monitoringInterval, dbPortNumber, publiclyAccessible, monitoringRoleArn, domainIAMRoleName, promotionTier, enableIAMDatabaseAuthentication, enablePerformanceInsights, performanceInsightsKMSKeyId, cloudwatchLogsExportConfiguration, deletionProtection);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyDBInstanceMessage {\n");
    sb.append("    dbInstanceIdentifier: ").append(toIndentedString(dbInstanceIdentifier)).append("\n");
    sb.append("    allocatedStorage: ").append(toIndentedString(allocatedStorage)).append("\n");
    sb.append("    dbInstanceClass: ").append(toIndentedString(dbInstanceClass)).append("\n");
    sb.append("    dbSubnetGroupName: ").append(toIndentedString(dbSubnetGroupName)).append("\n");
    sb.append("    dbSecurityGroups: ").append(toIndentedString(dbSecurityGroups)).append("\n");
    sb.append("    vpcSecurityGroupIds: ").append(toIndentedString(vpcSecurityGroupIds)).append("\n");
    sb.append("    applyImmediately: ").append(toIndentedString(applyImmediately)).append("\n");
    sb.append("    masterUserPassword: ").append(toIndentedString(masterUserPassword)).append("\n");
    sb.append("    dbParameterGroupName: ").append(toIndentedString(dbParameterGroupName)).append("\n");
    sb.append("    backupRetentionPeriod: ").append(toIndentedString(backupRetentionPeriod)).append("\n");
    sb.append("    preferredBackupWindow: ").append(toIndentedString(preferredBackupWindow)).append("\n");
    sb.append("    preferredMaintenanceWindow: ").append(toIndentedString(preferredMaintenanceWindow)).append("\n");
    sb.append("    multiAZ: ").append(toIndentedString(multiAZ)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    allowMajorVersionUpgrade: ").append(toIndentedString(allowMajorVersionUpgrade)).append("\n");
    sb.append("    autoMinorVersionUpgrade: ").append(toIndentedString(autoMinorVersionUpgrade)).append("\n");
    sb.append("    licenseModel: ").append(toIndentedString(licenseModel)).append("\n");
    sb.append("    iops: ").append(toIndentedString(iops)).append("\n");
    sb.append("    optionGroupName: ").append(toIndentedString(optionGroupName)).append("\n");
    sb.append("    newDBInstanceIdentifier: ").append(toIndentedString(newDBInstanceIdentifier)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    tdeCredentialArn: ").append(toIndentedString(tdeCredentialArn)).append("\n");
    sb.append("    tdeCredentialPassword: ").append(toIndentedString(tdeCredentialPassword)).append("\n");
    sb.append("    caCertificateIdentifier: ").append(toIndentedString(caCertificateIdentifier)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    copyTagsToSnapshot: ").append(toIndentedString(copyTagsToSnapshot)).append("\n");
    sb.append("    monitoringInterval: ").append(toIndentedString(monitoringInterval)).append("\n");
    sb.append("    dbPortNumber: ").append(toIndentedString(dbPortNumber)).append("\n");
    sb.append("    publiclyAccessible: ").append(toIndentedString(publiclyAccessible)).append("\n");
    sb.append("    monitoringRoleArn: ").append(toIndentedString(monitoringRoleArn)).append("\n");
    sb.append("    domainIAMRoleName: ").append(toIndentedString(domainIAMRoleName)).append("\n");
    sb.append("    promotionTier: ").append(toIndentedString(promotionTier)).append("\n");
    sb.append("    enableIAMDatabaseAuthentication: ").append(toIndentedString(enableIAMDatabaseAuthentication)).append("\n");
    sb.append("    enablePerformanceInsights: ").append(toIndentedString(enablePerformanceInsights)).append("\n");
    sb.append("    performanceInsightsKMSKeyId: ").append(toIndentedString(performanceInsightsKMSKeyId)).append("\n");
    sb.append("    cloudwatchLogsExportConfiguration: ").append(toIndentedString(cloudwatchLogsExportConfiguration)).append("\n");
    sb.append("    deletionProtection: ").append(toIndentedString(deletionProtection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DBInstanceIdentifier");
    openapiFields.add("AllocatedStorage");
    openapiFields.add("DBInstanceClass");
    openapiFields.add("DBSubnetGroupName");
    openapiFields.add("DBSecurityGroups");
    openapiFields.add("VpcSecurityGroupIds");
    openapiFields.add("ApplyImmediately");
    openapiFields.add("MasterUserPassword");
    openapiFields.add("DBParameterGroupName");
    openapiFields.add("BackupRetentionPeriod");
    openapiFields.add("PreferredBackupWindow");
    openapiFields.add("PreferredMaintenanceWindow");
    openapiFields.add("MultiAZ");
    openapiFields.add("EngineVersion");
    openapiFields.add("AllowMajorVersionUpgrade");
    openapiFields.add("AutoMinorVersionUpgrade");
    openapiFields.add("LicenseModel");
    openapiFields.add("Iops");
    openapiFields.add("OptionGroupName");
    openapiFields.add("NewDBInstanceIdentifier");
    openapiFields.add("StorageType");
    openapiFields.add("TdeCredentialArn");
    openapiFields.add("TdeCredentialPassword");
    openapiFields.add("CACertificateIdentifier");
    openapiFields.add("Domain");
    openapiFields.add("CopyTagsToSnapshot");
    openapiFields.add("MonitoringInterval");
    openapiFields.add("DBPortNumber");
    openapiFields.add("PubliclyAccessible");
    openapiFields.add("MonitoringRoleArn");
    openapiFields.add("DomainIAMRoleName");
    openapiFields.add("PromotionTier");
    openapiFields.add("EnableIAMDatabaseAuthentication");
    openapiFields.add("EnablePerformanceInsights");
    openapiFields.add("PerformanceInsightsKMSKeyId");
    openapiFields.add("CloudwatchLogsExportConfiguration");
    openapiFields.add("DeletionProtection");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("DBInstanceIdentifier");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModifyDBInstanceMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModifyDBInstanceMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModifyDBInstanceMessage is not found in the empty JSON string", ModifyDBInstanceMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModifyDBInstanceMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModifyDBInstanceMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ModifyDBInstanceMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `DBInstanceIdentifier`
      String.validateJsonElement(jsonObj.get("DBInstanceIdentifier"));
      // validate the optional field `AllocatedStorage`
      if (jsonObj.get("AllocatedStorage") != null && !jsonObj.get("AllocatedStorage").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AllocatedStorage"));
      }
      // validate the optional field `DBInstanceClass`
      if (jsonObj.get("DBInstanceClass") != null && !jsonObj.get("DBInstanceClass").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DBInstanceClass"));
      }
      // validate the optional field `DBSubnetGroupName`
      if (jsonObj.get("DBSubnetGroupName") != null && !jsonObj.get("DBSubnetGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DBSubnetGroupName"));
      }
      // validate the optional field `DBSecurityGroups`
      if (jsonObj.get("DBSecurityGroups") != null && !jsonObj.get("DBSecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DBSecurityGroups"));
      }
      // validate the optional field `VpcSecurityGroupIds`
      if (jsonObj.get("VpcSecurityGroupIds") != null && !jsonObj.get("VpcSecurityGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("VpcSecurityGroupIds"));
      }
      // validate the optional field `ApplyImmediately`
      if (jsonObj.get("ApplyImmediately") != null && !jsonObj.get("ApplyImmediately").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("ApplyImmediately"));
      }
      // validate the optional field `MasterUserPassword`
      if (jsonObj.get("MasterUserPassword") != null && !jsonObj.get("MasterUserPassword").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MasterUserPassword"));
      }
      // validate the optional field `DBParameterGroupName`
      if (jsonObj.get("DBParameterGroupName") != null && !jsonObj.get("DBParameterGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DBParameterGroupName"));
      }
      // validate the optional field `BackupRetentionPeriod`
      if (jsonObj.get("BackupRetentionPeriod") != null && !jsonObj.get("BackupRetentionPeriod").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("BackupRetentionPeriod"));
      }
      // validate the optional field `PreferredBackupWindow`
      if (jsonObj.get("PreferredBackupWindow") != null && !jsonObj.get("PreferredBackupWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredBackupWindow"));
      }
      // validate the optional field `PreferredMaintenanceWindow`
      if (jsonObj.get("PreferredMaintenanceWindow") != null && !jsonObj.get("PreferredMaintenanceWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredMaintenanceWindow"));
      }
      // validate the optional field `MultiAZ`
      if (jsonObj.get("MultiAZ") != null && !jsonObj.get("MultiAZ").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("MultiAZ"));
      }
      // validate the optional field `EngineVersion`
      if (jsonObj.get("EngineVersion") != null && !jsonObj.get("EngineVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineVersion"));
      }
      // validate the optional field `AllowMajorVersionUpgrade`
      if (jsonObj.get("AllowMajorVersionUpgrade") != null && !jsonObj.get("AllowMajorVersionUpgrade").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AllowMajorVersionUpgrade"));
      }
      // validate the optional field `AutoMinorVersionUpgrade`
      if (jsonObj.get("AutoMinorVersionUpgrade") != null && !jsonObj.get("AutoMinorVersionUpgrade").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AutoMinorVersionUpgrade"));
      }
      // validate the optional field `LicenseModel`
      if (jsonObj.get("LicenseModel") != null && !jsonObj.get("LicenseModel").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LicenseModel"));
      }
      // validate the optional field `Iops`
      if (jsonObj.get("Iops") != null && !jsonObj.get("Iops").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Iops"));
      }
      // validate the optional field `OptionGroupName`
      if (jsonObj.get("OptionGroupName") != null && !jsonObj.get("OptionGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OptionGroupName"));
      }
      // validate the optional field `NewDBInstanceIdentifier`
      if (jsonObj.get("NewDBInstanceIdentifier") != null && !jsonObj.get("NewDBInstanceIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NewDBInstanceIdentifier"));
      }
      // validate the optional field `StorageType`
      if (jsonObj.get("StorageType") != null && !jsonObj.get("StorageType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StorageType"));
      }
      // validate the optional field `TdeCredentialArn`
      if (jsonObj.get("TdeCredentialArn") != null && !jsonObj.get("TdeCredentialArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TdeCredentialArn"));
      }
      // validate the optional field `TdeCredentialPassword`
      if (jsonObj.get("TdeCredentialPassword") != null && !jsonObj.get("TdeCredentialPassword").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TdeCredentialPassword"));
      }
      // validate the optional field `CACertificateIdentifier`
      if (jsonObj.get("CACertificateIdentifier") != null && !jsonObj.get("CACertificateIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CACertificateIdentifier"));
      }
      // validate the optional field `Domain`
      if (jsonObj.get("Domain") != null && !jsonObj.get("Domain").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Domain"));
      }
      // validate the optional field `CopyTagsToSnapshot`
      if (jsonObj.get("CopyTagsToSnapshot") != null && !jsonObj.get("CopyTagsToSnapshot").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CopyTagsToSnapshot"));
      }
      // validate the optional field `MonitoringInterval`
      if (jsonObj.get("MonitoringInterval") != null && !jsonObj.get("MonitoringInterval").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MonitoringInterval"));
      }
      // validate the optional field `DBPortNumber`
      if (jsonObj.get("DBPortNumber") != null && !jsonObj.get("DBPortNumber").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("DBPortNumber"));
      }
      // validate the optional field `PubliclyAccessible`
      if (jsonObj.get("PubliclyAccessible") != null && !jsonObj.get("PubliclyAccessible").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("PubliclyAccessible"));
      }
      // validate the optional field `MonitoringRoleArn`
      if (jsonObj.get("MonitoringRoleArn") != null && !jsonObj.get("MonitoringRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MonitoringRoleArn"));
      }
      // validate the optional field `DomainIAMRoleName`
      if (jsonObj.get("DomainIAMRoleName") != null && !jsonObj.get("DomainIAMRoleName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DomainIAMRoleName"));
      }
      // validate the optional field `PromotionTier`
      if (jsonObj.get("PromotionTier") != null && !jsonObj.get("PromotionTier").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PromotionTier"));
      }
      // validate the optional field `EnableIAMDatabaseAuthentication`
      if (jsonObj.get("EnableIAMDatabaseAuthentication") != null && !jsonObj.get("EnableIAMDatabaseAuthentication").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnableIAMDatabaseAuthentication"));
      }
      // validate the optional field `EnablePerformanceInsights`
      if (jsonObj.get("EnablePerformanceInsights") != null && !jsonObj.get("EnablePerformanceInsights").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnablePerformanceInsights"));
      }
      // validate the optional field `PerformanceInsightsKMSKeyId`
      if (jsonObj.get("PerformanceInsightsKMSKeyId") != null && !jsonObj.get("PerformanceInsightsKMSKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PerformanceInsightsKMSKeyId"));
      }
      // validate the optional field `CloudwatchLogsExportConfiguration`
      if (jsonObj.get("CloudwatchLogsExportConfiguration") != null && !jsonObj.get("CloudwatchLogsExportConfiguration").isJsonNull()) {
        ModifyDBInstanceMessageCloudwatchLogsExportConfiguration.validateJsonElement(jsonObj.get("CloudwatchLogsExportConfiguration"));
      }
      // validate the optional field `DeletionProtection`
      if (jsonObj.get("DeletionProtection") != null && !jsonObj.get("DeletionProtection").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DeletionProtection"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModifyDBInstanceMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModifyDBInstanceMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModifyDBInstanceMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModifyDBInstanceMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<ModifyDBInstanceMessage>() {
           @Override
           public void write(JsonWriter out, ModifyDBInstanceMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModifyDBInstanceMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModifyDBInstanceMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModifyDBInstanceMessage
   * @throws IOException if the JSON string is invalid with respect to ModifyDBInstanceMessage
   */
  public static ModifyDBInstanceMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModifyDBInstanceMessage.class);
  }

  /**
   * Convert an instance of ModifyDBInstanceMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

