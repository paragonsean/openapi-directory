/*
 * Amazon Neptune
 * <fullname>Amazon Neptune</fullname> <p>Amazon Neptune is a fast, reliable, fully-managed graph database service that makes it easy to build and run applications that work with highly connected datasets. The core of Amazon Neptune is a purpose-built, high-performance graph database engine optimized for storing billions of relationships and querying the graph with milliseconds latency. Amazon Neptune supports popular graph models Property Graph and W3C's RDF, and their respective query languages Apache TinkerPop Gremlin and SPARQL, allowing you to easily build queries that efficiently navigate highly connected datasets. Neptune powers graph use cases such as recommendation engines, fraud detection, knowledge graphs, drug discovery, and network security.</p> <p>This interface reference for Amazon Neptune contains documentation for a programming or command line interface you can use to manage Amazon Neptune. Note that Amazon Neptune is asynchronous, which means that some interfaces might require techniques such as polling or callback functions to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a command is applied immediately, on the next instance reboot, or during the maintenance window. The reference structure is as follows, and we list following some related topics from the user guide.</p>
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ServerlessV2ScalingConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RestoreDBClusterToPointInTimeMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:52.008602-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RestoreDBClusterToPointInTimeMessage {
  public static final String SERIALIZED_NAME_DB_CLUSTER_IDENTIFIER = "DBClusterIdentifier";
  @SerializedName(SERIALIZED_NAME_DB_CLUSTER_IDENTIFIER)
  private String dbClusterIdentifier;

  public static final String SERIALIZED_NAME_RESTORE_TYPE = "RestoreType";
  @SerializedName(SERIALIZED_NAME_RESTORE_TYPE)
  private String restoreType;

  public static final String SERIALIZED_NAME_SOURCE_D_B_CLUSTER_IDENTIFIER = "SourceDBClusterIdentifier";
  @SerializedName(SERIALIZED_NAME_SOURCE_D_B_CLUSTER_IDENTIFIER)
  private String sourceDBClusterIdentifier;

  public static final String SERIALIZED_NAME_RESTORE_TO_TIME = "RestoreToTime";
  @SerializedName(SERIALIZED_NAME_RESTORE_TO_TIME)
  private OffsetDateTime restoreToTime;

  public static final String SERIALIZED_NAME_USE_LATEST_RESTORABLE_TIME = "UseLatestRestorableTime";
  @SerializedName(SERIALIZED_NAME_USE_LATEST_RESTORABLE_TIME)
  private Boolean useLatestRestorableTime;

  public static final String SERIALIZED_NAME_PORT = "Port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private Integer port;

  public static final String SERIALIZED_NAME_DB_SUBNET_GROUP_NAME = "DBSubnetGroupName";
  @SerializedName(SERIALIZED_NAME_DB_SUBNET_GROUP_NAME)
  private String dbSubnetGroupName;

  public static final String SERIALIZED_NAME_OPTION_GROUP_NAME = "OptionGroupName";
  @SerializedName(SERIALIZED_NAME_OPTION_GROUP_NAME)
  private String optionGroupName;

  public static final String SERIALIZED_NAME_VPC_SECURITY_GROUP_IDS = "VpcSecurityGroupIds";
  @SerializedName(SERIALIZED_NAME_VPC_SECURITY_GROUP_IDS)
  private List vpcSecurityGroupIds;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_ENABLE_I_A_M_DATABASE_AUTHENTICATION = "EnableIAMDatabaseAuthentication";
  @SerializedName(SERIALIZED_NAME_ENABLE_I_A_M_DATABASE_AUTHENTICATION)
  private Boolean enableIAMDatabaseAuthentication;

  public static final String SERIALIZED_NAME_ENABLE_CLOUDWATCH_LOGS_EXPORTS = "EnableCloudwatchLogsExports";
  @SerializedName(SERIALIZED_NAME_ENABLE_CLOUDWATCH_LOGS_EXPORTS)
  private List enableCloudwatchLogsExports;

  public static final String SERIALIZED_NAME_DB_CLUSTER_PARAMETER_GROUP_NAME = "DBClusterParameterGroupName";
  @SerializedName(SERIALIZED_NAME_DB_CLUSTER_PARAMETER_GROUP_NAME)
  private String dbClusterParameterGroupName;

  public static final String SERIALIZED_NAME_DELETION_PROTECTION = "DeletionProtection";
  @SerializedName(SERIALIZED_NAME_DELETION_PROTECTION)
  private Boolean deletionProtection;

  public static final String SERIALIZED_NAME_SERVERLESS_V2_SCALING_CONFIGURATION = "ServerlessV2ScalingConfiguration";
  @SerializedName(SERIALIZED_NAME_SERVERLESS_V2_SCALING_CONFIGURATION)
  private ServerlessV2ScalingConfiguration serverlessV2ScalingConfiguration;

  public RestoreDBClusterToPointInTimeMessage() {
  }

  public RestoreDBClusterToPointInTimeMessage dbClusterIdentifier(String dbClusterIdentifier) {
    this.dbClusterIdentifier = dbClusterIdentifier;
    return this;
  }

  /**
   * Get dbClusterIdentifier
   * @return dbClusterIdentifier
   */
  @javax.annotation.Nonnull
  public String getDbClusterIdentifier() {
    return dbClusterIdentifier;
  }

  public void setDbClusterIdentifier(String dbClusterIdentifier) {
    this.dbClusterIdentifier = dbClusterIdentifier;
  }


  public RestoreDBClusterToPointInTimeMessage restoreType(String restoreType) {
    this.restoreType = restoreType;
    return this;
  }

  /**
   * Get restoreType
   * @return restoreType
   */
  @javax.annotation.Nullable
  public String getRestoreType() {
    return restoreType;
  }

  public void setRestoreType(String restoreType) {
    this.restoreType = restoreType;
  }


  public RestoreDBClusterToPointInTimeMessage sourceDBClusterIdentifier(String sourceDBClusterIdentifier) {
    this.sourceDBClusterIdentifier = sourceDBClusterIdentifier;
    return this;
  }

  /**
   * Get sourceDBClusterIdentifier
   * @return sourceDBClusterIdentifier
   */
  @javax.annotation.Nonnull
  public String getSourceDBClusterIdentifier() {
    return sourceDBClusterIdentifier;
  }

  public void setSourceDBClusterIdentifier(String sourceDBClusterIdentifier) {
    this.sourceDBClusterIdentifier = sourceDBClusterIdentifier;
  }


  public RestoreDBClusterToPointInTimeMessage restoreToTime(OffsetDateTime restoreToTime) {
    this.restoreToTime = restoreToTime;
    return this;
  }

  /**
   * Get restoreToTime
   * @return restoreToTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getRestoreToTime() {
    return restoreToTime;
  }

  public void setRestoreToTime(OffsetDateTime restoreToTime) {
    this.restoreToTime = restoreToTime;
  }


  public RestoreDBClusterToPointInTimeMessage useLatestRestorableTime(Boolean useLatestRestorableTime) {
    this.useLatestRestorableTime = useLatestRestorableTime;
    return this;
  }

  /**
   * Get useLatestRestorableTime
   * @return useLatestRestorableTime
   */
  @javax.annotation.Nullable
  public Boolean getUseLatestRestorableTime() {
    return useLatestRestorableTime;
  }

  public void setUseLatestRestorableTime(Boolean useLatestRestorableTime) {
    this.useLatestRestorableTime = useLatestRestorableTime;
  }


  public RestoreDBClusterToPointInTimeMessage port(Integer port) {
    this.port = port;
    return this;
  }

  /**
   * Get port
   * @return port
   */
  @javax.annotation.Nullable
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }


  public RestoreDBClusterToPointInTimeMessage dbSubnetGroupName(String dbSubnetGroupName) {
    this.dbSubnetGroupName = dbSubnetGroupName;
    return this;
  }

  /**
   * Get dbSubnetGroupName
   * @return dbSubnetGroupName
   */
  @javax.annotation.Nullable
  public String getDbSubnetGroupName() {
    return dbSubnetGroupName;
  }

  public void setDbSubnetGroupName(String dbSubnetGroupName) {
    this.dbSubnetGroupName = dbSubnetGroupName;
  }


  public RestoreDBClusterToPointInTimeMessage optionGroupName(String optionGroupName) {
    this.optionGroupName = optionGroupName;
    return this;
  }

  /**
   * Get optionGroupName
   * @return optionGroupName
   */
  @javax.annotation.Nullable
  public String getOptionGroupName() {
    return optionGroupName;
  }

  public void setOptionGroupName(String optionGroupName) {
    this.optionGroupName = optionGroupName;
  }


  public RestoreDBClusterToPointInTimeMessage vpcSecurityGroupIds(List vpcSecurityGroupIds) {
    this.vpcSecurityGroupIds = vpcSecurityGroupIds;
    return this;
  }

  /**
   * Get vpcSecurityGroupIds
   * @return vpcSecurityGroupIds
   */
  @javax.annotation.Nullable
  public List getVpcSecurityGroupIds() {
    return vpcSecurityGroupIds;
  }

  public void setVpcSecurityGroupIds(List vpcSecurityGroupIds) {
    this.vpcSecurityGroupIds = vpcSecurityGroupIds;
  }


  public RestoreDBClusterToPointInTimeMessage tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public RestoreDBClusterToPointInTimeMessage kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public RestoreDBClusterToPointInTimeMessage enableIAMDatabaseAuthentication(Boolean enableIAMDatabaseAuthentication) {
    this.enableIAMDatabaseAuthentication = enableIAMDatabaseAuthentication;
    return this;
  }

  /**
   * Get enableIAMDatabaseAuthentication
   * @return enableIAMDatabaseAuthentication
   */
  @javax.annotation.Nullable
  public Boolean getEnableIAMDatabaseAuthentication() {
    return enableIAMDatabaseAuthentication;
  }

  public void setEnableIAMDatabaseAuthentication(Boolean enableIAMDatabaseAuthentication) {
    this.enableIAMDatabaseAuthentication = enableIAMDatabaseAuthentication;
  }


  public RestoreDBClusterToPointInTimeMessage enableCloudwatchLogsExports(List enableCloudwatchLogsExports) {
    this.enableCloudwatchLogsExports = enableCloudwatchLogsExports;
    return this;
  }

  /**
   * Get enableCloudwatchLogsExports
   * @return enableCloudwatchLogsExports
   */
  @javax.annotation.Nullable
  public List getEnableCloudwatchLogsExports() {
    return enableCloudwatchLogsExports;
  }

  public void setEnableCloudwatchLogsExports(List enableCloudwatchLogsExports) {
    this.enableCloudwatchLogsExports = enableCloudwatchLogsExports;
  }


  public RestoreDBClusterToPointInTimeMessage dbClusterParameterGroupName(String dbClusterParameterGroupName) {
    this.dbClusterParameterGroupName = dbClusterParameterGroupName;
    return this;
  }

  /**
   * Get dbClusterParameterGroupName
   * @return dbClusterParameterGroupName
   */
  @javax.annotation.Nullable
  public String getDbClusterParameterGroupName() {
    return dbClusterParameterGroupName;
  }

  public void setDbClusterParameterGroupName(String dbClusterParameterGroupName) {
    this.dbClusterParameterGroupName = dbClusterParameterGroupName;
  }


  public RestoreDBClusterToPointInTimeMessage deletionProtection(Boolean deletionProtection) {
    this.deletionProtection = deletionProtection;
    return this;
  }

  /**
   * Get deletionProtection
   * @return deletionProtection
   */
  @javax.annotation.Nullable
  public Boolean getDeletionProtection() {
    return deletionProtection;
  }

  public void setDeletionProtection(Boolean deletionProtection) {
    this.deletionProtection = deletionProtection;
  }


  public RestoreDBClusterToPointInTimeMessage serverlessV2ScalingConfiguration(ServerlessV2ScalingConfiguration serverlessV2ScalingConfiguration) {
    this.serverlessV2ScalingConfiguration = serverlessV2ScalingConfiguration;
    return this;
  }

  /**
   * Get serverlessV2ScalingConfiguration
   * @return serverlessV2ScalingConfiguration
   */
  @javax.annotation.Nullable
  public ServerlessV2ScalingConfiguration getServerlessV2ScalingConfiguration() {
    return serverlessV2ScalingConfiguration;
  }

  public void setServerlessV2ScalingConfiguration(ServerlessV2ScalingConfiguration serverlessV2ScalingConfiguration) {
    this.serverlessV2ScalingConfiguration = serverlessV2ScalingConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestoreDBClusterToPointInTimeMessage restoreDBClusterToPointInTimeMessage = (RestoreDBClusterToPointInTimeMessage) o;
    return Objects.equals(this.dbClusterIdentifier, restoreDBClusterToPointInTimeMessage.dbClusterIdentifier) &&
        Objects.equals(this.restoreType, restoreDBClusterToPointInTimeMessage.restoreType) &&
        Objects.equals(this.sourceDBClusterIdentifier, restoreDBClusterToPointInTimeMessage.sourceDBClusterIdentifier) &&
        Objects.equals(this.restoreToTime, restoreDBClusterToPointInTimeMessage.restoreToTime) &&
        Objects.equals(this.useLatestRestorableTime, restoreDBClusterToPointInTimeMessage.useLatestRestorableTime) &&
        Objects.equals(this.port, restoreDBClusterToPointInTimeMessage.port) &&
        Objects.equals(this.dbSubnetGroupName, restoreDBClusterToPointInTimeMessage.dbSubnetGroupName) &&
        Objects.equals(this.optionGroupName, restoreDBClusterToPointInTimeMessage.optionGroupName) &&
        Objects.equals(this.vpcSecurityGroupIds, restoreDBClusterToPointInTimeMessage.vpcSecurityGroupIds) &&
        Objects.equals(this.tags, restoreDBClusterToPointInTimeMessage.tags) &&
        Objects.equals(this.kmsKeyId, restoreDBClusterToPointInTimeMessage.kmsKeyId) &&
        Objects.equals(this.enableIAMDatabaseAuthentication, restoreDBClusterToPointInTimeMessage.enableIAMDatabaseAuthentication) &&
        Objects.equals(this.enableCloudwatchLogsExports, restoreDBClusterToPointInTimeMessage.enableCloudwatchLogsExports) &&
        Objects.equals(this.dbClusterParameterGroupName, restoreDBClusterToPointInTimeMessage.dbClusterParameterGroupName) &&
        Objects.equals(this.deletionProtection, restoreDBClusterToPointInTimeMessage.deletionProtection) &&
        Objects.equals(this.serverlessV2ScalingConfiguration, restoreDBClusterToPointInTimeMessage.serverlessV2ScalingConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dbClusterIdentifier, restoreType, sourceDBClusterIdentifier, restoreToTime, useLatestRestorableTime, port, dbSubnetGroupName, optionGroupName, vpcSecurityGroupIds, tags, kmsKeyId, enableIAMDatabaseAuthentication, enableCloudwatchLogsExports, dbClusterParameterGroupName, deletionProtection, serverlessV2ScalingConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestoreDBClusterToPointInTimeMessage {\n");
    sb.append("    dbClusterIdentifier: ").append(toIndentedString(dbClusterIdentifier)).append("\n");
    sb.append("    restoreType: ").append(toIndentedString(restoreType)).append("\n");
    sb.append("    sourceDBClusterIdentifier: ").append(toIndentedString(sourceDBClusterIdentifier)).append("\n");
    sb.append("    restoreToTime: ").append(toIndentedString(restoreToTime)).append("\n");
    sb.append("    useLatestRestorableTime: ").append(toIndentedString(useLatestRestorableTime)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    dbSubnetGroupName: ").append(toIndentedString(dbSubnetGroupName)).append("\n");
    sb.append("    optionGroupName: ").append(toIndentedString(optionGroupName)).append("\n");
    sb.append("    vpcSecurityGroupIds: ").append(toIndentedString(vpcSecurityGroupIds)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    enableIAMDatabaseAuthentication: ").append(toIndentedString(enableIAMDatabaseAuthentication)).append("\n");
    sb.append("    enableCloudwatchLogsExports: ").append(toIndentedString(enableCloudwatchLogsExports)).append("\n");
    sb.append("    dbClusterParameterGroupName: ").append(toIndentedString(dbClusterParameterGroupName)).append("\n");
    sb.append("    deletionProtection: ").append(toIndentedString(deletionProtection)).append("\n");
    sb.append("    serverlessV2ScalingConfiguration: ").append(toIndentedString(serverlessV2ScalingConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DBClusterIdentifier");
    openapiFields.add("RestoreType");
    openapiFields.add("SourceDBClusterIdentifier");
    openapiFields.add("RestoreToTime");
    openapiFields.add("UseLatestRestorableTime");
    openapiFields.add("Port");
    openapiFields.add("DBSubnetGroupName");
    openapiFields.add("OptionGroupName");
    openapiFields.add("VpcSecurityGroupIds");
    openapiFields.add("Tags");
    openapiFields.add("KmsKeyId");
    openapiFields.add("EnableIAMDatabaseAuthentication");
    openapiFields.add("EnableCloudwatchLogsExports");
    openapiFields.add("DBClusterParameterGroupName");
    openapiFields.add("DeletionProtection");
    openapiFields.add("ServerlessV2ScalingConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("DBClusterIdentifier");
    openapiRequiredFields.add("SourceDBClusterIdentifier");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RestoreDBClusterToPointInTimeMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RestoreDBClusterToPointInTimeMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RestoreDBClusterToPointInTimeMessage is not found in the empty JSON string", RestoreDBClusterToPointInTimeMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RestoreDBClusterToPointInTimeMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RestoreDBClusterToPointInTimeMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RestoreDBClusterToPointInTimeMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `DBClusterIdentifier`
      String.validateJsonElement(jsonObj.get("DBClusterIdentifier"));
      // validate the optional field `RestoreType`
      if (jsonObj.get("RestoreType") != null && !jsonObj.get("RestoreType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RestoreType"));
      }
      // validate the required field `SourceDBClusterIdentifier`
      String.validateJsonElement(jsonObj.get("SourceDBClusterIdentifier"));
      // validate the optional field `RestoreToTime`
      if (jsonObj.get("RestoreToTime") != null && !jsonObj.get("RestoreToTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("RestoreToTime"));
      }
      // validate the optional field `UseLatestRestorableTime`
      if (jsonObj.get("UseLatestRestorableTime") != null && !jsonObj.get("UseLatestRestorableTime").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("UseLatestRestorableTime"));
      }
      // validate the optional field `Port`
      if (jsonObj.get("Port") != null && !jsonObj.get("Port").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Port"));
      }
      // validate the optional field `DBSubnetGroupName`
      if (jsonObj.get("DBSubnetGroupName") != null && !jsonObj.get("DBSubnetGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DBSubnetGroupName"));
      }
      // validate the optional field `OptionGroupName`
      if (jsonObj.get("OptionGroupName") != null && !jsonObj.get("OptionGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OptionGroupName"));
      }
      // validate the optional field `VpcSecurityGroupIds`
      if (jsonObj.get("VpcSecurityGroupIds") != null && !jsonObj.get("VpcSecurityGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("VpcSecurityGroupIds"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `KmsKeyId`
      if (jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyId"));
      }
      // validate the optional field `EnableIAMDatabaseAuthentication`
      if (jsonObj.get("EnableIAMDatabaseAuthentication") != null && !jsonObj.get("EnableIAMDatabaseAuthentication").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnableIAMDatabaseAuthentication"));
      }
      // validate the optional field `EnableCloudwatchLogsExports`
      if (jsonObj.get("EnableCloudwatchLogsExports") != null && !jsonObj.get("EnableCloudwatchLogsExports").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("EnableCloudwatchLogsExports"));
      }
      // validate the optional field `DBClusterParameterGroupName`
      if (jsonObj.get("DBClusterParameterGroupName") != null && !jsonObj.get("DBClusterParameterGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DBClusterParameterGroupName"));
      }
      // validate the optional field `DeletionProtection`
      if (jsonObj.get("DeletionProtection") != null && !jsonObj.get("DeletionProtection").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DeletionProtection"));
      }
      // validate the optional field `ServerlessV2ScalingConfiguration`
      if (jsonObj.get("ServerlessV2ScalingConfiguration") != null && !jsonObj.get("ServerlessV2ScalingConfiguration").isJsonNull()) {
        ServerlessV2ScalingConfiguration.validateJsonElement(jsonObj.get("ServerlessV2ScalingConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RestoreDBClusterToPointInTimeMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RestoreDBClusterToPointInTimeMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RestoreDBClusterToPointInTimeMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RestoreDBClusterToPointInTimeMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<RestoreDBClusterToPointInTimeMessage>() {
           @Override
           public void write(JsonWriter out, RestoreDBClusterToPointInTimeMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RestoreDBClusterToPointInTimeMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RestoreDBClusterToPointInTimeMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RestoreDBClusterToPointInTimeMessage
   * @throws IOException if the JSON string is invalid with respect to RestoreDBClusterToPointInTimeMessage
   */
  public static RestoreDBClusterToPointInTimeMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RestoreDBClusterToPointInTimeMessage.class);
  }

  /**
   * Convert an instance of RestoreDBClusterToPointInTimeMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

