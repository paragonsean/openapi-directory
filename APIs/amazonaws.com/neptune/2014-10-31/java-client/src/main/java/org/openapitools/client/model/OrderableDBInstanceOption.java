/*
 * Amazon Neptune
 * <fullname>Amazon Neptune</fullname> <p>Amazon Neptune is a fast, reliable, fully-managed graph database service that makes it easy to build and run applications that work with highly connected datasets. The core of Amazon Neptune is a purpose-built, high-performance graph database engine optimized for storing billions of relationships and querying the graph with milliseconds latency. Amazon Neptune supports popular graph models Property Graph and W3C's RDF, and their respective query languages Apache TinkerPop Gremlin and SPARQL, allowing you to easily build queries that efficiently navigate highly connected datasets. Neptune powers graph use cases such as recommendation engines, fraud detection, knowledge graphs, drug discovery, and network security.</p> <p>This interface reference for Amazon Neptune contains documentation for a programming or command line interface you can use to manage Amazon Neptune. Note that Amazon Neptune is asynchronous, which means that some interfaces might require techniques such as polling or callback functions to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a command is applied immediately, on the next instance reboot, or during the maintenance window. The reference structure is as follows, and we list following some related topics from the user guide.</p>
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Contains a list of available options for a DB instance.&lt;/p&gt; &lt;p&gt; This data type is used as a response element in the &lt;a&gt;DescribeOrderableDBInstanceOptions&lt;/a&gt; action.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:52.008602-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderableDBInstanceOption {
  public static final String SERIALIZED_NAME_ENGINE = "Engine";
  @SerializedName(SERIALIZED_NAME_ENGINE)
  private String engine;

  public static final String SERIALIZED_NAME_ENGINE_VERSION = "EngineVersion";
  @SerializedName(SERIALIZED_NAME_ENGINE_VERSION)
  private String engineVersion;

  public static final String SERIALIZED_NAME_DB_INSTANCE_CLASS = "DBInstanceClass";
  @SerializedName(SERIALIZED_NAME_DB_INSTANCE_CLASS)
  private String dbInstanceClass;

  public static final String SERIALIZED_NAME_LICENSE_MODEL = "LicenseModel";
  @SerializedName(SERIALIZED_NAME_LICENSE_MODEL)
  private String licenseModel;

  public static final String SERIALIZED_NAME_AVAILABILITY_ZONES = "AvailabilityZones";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONES)
  private List availabilityZones;

  public static final String SERIALIZED_NAME_MULTI_A_Z_CAPABLE = "MultiAZCapable";
  @SerializedName(SERIALIZED_NAME_MULTI_A_Z_CAPABLE)
  private Boolean multiAZCapable;

  public static final String SERIALIZED_NAME_READ_REPLICA_CAPABLE = "ReadReplicaCapable";
  @SerializedName(SERIALIZED_NAME_READ_REPLICA_CAPABLE)
  private Boolean readReplicaCapable;

  public static final String SERIALIZED_NAME_VPC = "Vpc";
  @SerializedName(SERIALIZED_NAME_VPC)
  private Boolean vpc;

  public static final String SERIALIZED_NAME_SUPPORTS_STORAGE_ENCRYPTION = "SupportsStorageEncryption";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_STORAGE_ENCRYPTION)
  private Boolean supportsStorageEncryption;

  public static final String SERIALIZED_NAME_STORAGE_TYPE = "StorageType";
  @SerializedName(SERIALIZED_NAME_STORAGE_TYPE)
  private String storageType;

  public static final String SERIALIZED_NAME_SUPPORTS_IOPS = "SupportsIops";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_IOPS)
  private Boolean supportsIops;

  public static final String SERIALIZED_NAME_SUPPORTS_ENHANCED_MONITORING = "SupportsEnhancedMonitoring";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_ENHANCED_MONITORING)
  private Boolean supportsEnhancedMonitoring;

  public static final String SERIALIZED_NAME_SUPPORTS_I_A_M_DATABASE_AUTHENTICATION = "SupportsIAMDatabaseAuthentication";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_I_A_M_DATABASE_AUTHENTICATION)
  private Boolean supportsIAMDatabaseAuthentication;

  public static final String SERIALIZED_NAME_SUPPORTS_PERFORMANCE_INSIGHTS = "SupportsPerformanceInsights";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_PERFORMANCE_INSIGHTS)
  private Boolean supportsPerformanceInsights;

  public static final String SERIALIZED_NAME_MIN_STORAGE_SIZE = "MinStorageSize";
  @SerializedName(SERIALIZED_NAME_MIN_STORAGE_SIZE)
  private Integer minStorageSize;

  public static final String SERIALIZED_NAME_MAX_STORAGE_SIZE = "MaxStorageSize";
  @SerializedName(SERIALIZED_NAME_MAX_STORAGE_SIZE)
  private Integer maxStorageSize;

  public static final String SERIALIZED_NAME_MIN_IOPS_PER_DB_INSTANCE = "MinIopsPerDbInstance";
  @SerializedName(SERIALIZED_NAME_MIN_IOPS_PER_DB_INSTANCE)
  private Integer minIopsPerDbInstance;

  public static final String SERIALIZED_NAME_MAX_IOPS_PER_DB_INSTANCE = "MaxIopsPerDbInstance";
  @SerializedName(SERIALIZED_NAME_MAX_IOPS_PER_DB_INSTANCE)
  private Integer maxIopsPerDbInstance;

  public static final String SERIALIZED_NAME_MIN_IOPS_PER_GIB = "MinIopsPerGib";
  @SerializedName(SERIALIZED_NAME_MIN_IOPS_PER_GIB)
  private Double minIopsPerGib;

  public static final String SERIALIZED_NAME_MAX_IOPS_PER_GIB = "MaxIopsPerGib";
  @SerializedName(SERIALIZED_NAME_MAX_IOPS_PER_GIB)
  private Double maxIopsPerGib;

  public static final String SERIALIZED_NAME_SUPPORTS_GLOBAL_DATABASES = "SupportsGlobalDatabases";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_GLOBAL_DATABASES)
  private Boolean supportsGlobalDatabases;

  public OrderableDBInstanceOption() {
  }

  public OrderableDBInstanceOption engine(String engine) {
    this.engine = engine;
    return this;
  }

  /**
   * Get engine
   * @return engine
   */
  @javax.annotation.Nullable
  public String getEngine() {
    return engine;
  }

  public void setEngine(String engine) {
    this.engine = engine;
  }


  public OrderableDBInstanceOption engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

  /**
   * Get engineVersion
   * @return engineVersion
   */
  @javax.annotation.Nullable
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }


  public OrderableDBInstanceOption dbInstanceClass(String dbInstanceClass) {
    this.dbInstanceClass = dbInstanceClass;
    return this;
  }

  /**
   * Get dbInstanceClass
   * @return dbInstanceClass
   */
  @javax.annotation.Nullable
  public String getDbInstanceClass() {
    return dbInstanceClass;
  }

  public void setDbInstanceClass(String dbInstanceClass) {
    this.dbInstanceClass = dbInstanceClass;
  }


  public OrderableDBInstanceOption licenseModel(String licenseModel) {
    this.licenseModel = licenseModel;
    return this;
  }

  /**
   * Get licenseModel
   * @return licenseModel
   */
  @javax.annotation.Nullable
  public String getLicenseModel() {
    return licenseModel;
  }

  public void setLicenseModel(String licenseModel) {
    this.licenseModel = licenseModel;
  }


  public OrderableDBInstanceOption availabilityZones(List availabilityZones) {
    this.availabilityZones = availabilityZones;
    return this;
  }

  /**
   * Get availabilityZones
   * @return availabilityZones
   */
  @javax.annotation.Nullable
  public List getAvailabilityZones() {
    return availabilityZones;
  }

  public void setAvailabilityZones(List availabilityZones) {
    this.availabilityZones = availabilityZones;
  }


  public OrderableDBInstanceOption multiAZCapable(Boolean multiAZCapable) {
    this.multiAZCapable = multiAZCapable;
    return this;
  }

  /**
   * Get multiAZCapable
   * @return multiAZCapable
   */
  @javax.annotation.Nullable
  public Boolean getMultiAZCapable() {
    return multiAZCapable;
  }

  public void setMultiAZCapable(Boolean multiAZCapable) {
    this.multiAZCapable = multiAZCapable;
  }


  public OrderableDBInstanceOption readReplicaCapable(Boolean readReplicaCapable) {
    this.readReplicaCapable = readReplicaCapable;
    return this;
  }

  /**
   * Get readReplicaCapable
   * @return readReplicaCapable
   */
  @javax.annotation.Nullable
  public Boolean getReadReplicaCapable() {
    return readReplicaCapable;
  }

  public void setReadReplicaCapable(Boolean readReplicaCapable) {
    this.readReplicaCapable = readReplicaCapable;
  }


  public OrderableDBInstanceOption vpc(Boolean vpc) {
    this.vpc = vpc;
    return this;
  }

  /**
   * Get vpc
   * @return vpc
   */
  @javax.annotation.Nullable
  public Boolean getVpc() {
    return vpc;
  }

  public void setVpc(Boolean vpc) {
    this.vpc = vpc;
  }


  public OrderableDBInstanceOption supportsStorageEncryption(Boolean supportsStorageEncryption) {
    this.supportsStorageEncryption = supportsStorageEncryption;
    return this;
  }

  /**
   * Get supportsStorageEncryption
   * @return supportsStorageEncryption
   */
  @javax.annotation.Nullable
  public Boolean getSupportsStorageEncryption() {
    return supportsStorageEncryption;
  }

  public void setSupportsStorageEncryption(Boolean supportsStorageEncryption) {
    this.supportsStorageEncryption = supportsStorageEncryption;
  }


  public OrderableDBInstanceOption storageType(String storageType) {
    this.storageType = storageType;
    return this;
  }

  /**
   * Get storageType
   * @return storageType
   */
  @javax.annotation.Nullable
  public String getStorageType() {
    return storageType;
  }

  public void setStorageType(String storageType) {
    this.storageType = storageType;
  }


  public OrderableDBInstanceOption supportsIops(Boolean supportsIops) {
    this.supportsIops = supportsIops;
    return this;
  }

  /**
   * Get supportsIops
   * @return supportsIops
   */
  @javax.annotation.Nullable
  public Boolean getSupportsIops() {
    return supportsIops;
  }

  public void setSupportsIops(Boolean supportsIops) {
    this.supportsIops = supportsIops;
  }


  public OrderableDBInstanceOption supportsEnhancedMonitoring(Boolean supportsEnhancedMonitoring) {
    this.supportsEnhancedMonitoring = supportsEnhancedMonitoring;
    return this;
  }

  /**
   * Get supportsEnhancedMonitoring
   * @return supportsEnhancedMonitoring
   */
  @javax.annotation.Nullable
  public Boolean getSupportsEnhancedMonitoring() {
    return supportsEnhancedMonitoring;
  }

  public void setSupportsEnhancedMonitoring(Boolean supportsEnhancedMonitoring) {
    this.supportsEnhancedMonitoring = supportsEnhancedMonitoring;
  }


  public OrderableDBInstanceOption supportsIAMDatabaseAuthentication(Boolean supportsIAMDatabaseAuthentication) {
    this.supportsIAMDatabaseAuthentication = supportsIAMDatabaseAuthentication;
    return this;
  }

  /**
   * Get supportsIAMDatabaseAuthentication
   * @return supportsIAMDatabaseAuthentication
   */
  @javax.annotation.Nullable
  public Boolean getSupportsIAMDatabaseAuthentication() {
    return supportsIAMDatabaseAuthentication;
  }

  public void setSupportsIAMDatabaseAuthentication(Boolean supportsIAMDatabaseAuthentication) {
    this.supportsIAMDatabaseAuthentication = supportsIAMDatabaseAuthentication;
  }


  public OrderableDBInstanceOption supportsPerformanceInsights(Boolean supportsPerformanceInsights) {
    this.supportsPerformanceInsights = supportsPerformanceInsights;
    return this;
  }

  /**
   * Get supportsPerformanceInsights
   * @return supportsPerformanceInsights
   */
  @javax.annotation.Nullable
  public Boolean getSupportsPerformanceInsights() {
    return supportsPerformanceInsights;
  }

  public void setSupportsPerformanceInsights(Boolean supportsPerformanceInsights) {
    this.supportsPerformanceInsights = supportsPerformanceInsights;
  }


  public OrderableDBInstanceOption minStorageSize(Integer minStorageSize) {
    this.minStorageSize = minStorageSize;
    return this;
  }

  /**
   * Get minStorageSize
   * @return minStorageSize
   */
  @javax.annotation.Nullable
  public Integer getMinStorageSize() {
    return minStorageSize;
  }

  public void setMinStorageSize(Integer minStorageSize) {
    this.minStorageSize = minStorageSize;
  }


  public OrderableDBInstanceOption maxStorageSize(Integer maxStorageSize) {
    this.maxStorageSize = maxStorageSize;
    return this;
  }

  /**
   * Get maxStorageSize
   * @return maxStorageSize
   */
  @javax.annotation.Nullable
  public Integer getMaxStorageSize() {
    return maxStorageSize;
  }

  public void setMaxStorageSize(Integer maxStorageSize) {
    this.maxStorageSize = maxStorageSize;
  }


  public OrderableDBInstanceOption minIopsPerDbInstance(Integer minIopsPerDbInstance) {
    this.minIopsPerDbInstance = minIopsPerDbInstance;
    return this;
  }

  /**
   * Get minIopsPerDbInstance
   * @return minIopsPerDbInstance
   */
  @javax.annotation.Nullable
  public Integer getMinIopsPerDbInstance() {
    return minIopsPerDbInstance;
  }

  public void setMinIopsPerDbInstance(Integer minIopsPerDbInstance) {
    this.minIopsPerDbInstance = minIopsPerDbInstance;
  }


  public OrderableDBInstanceOption maxIopsPerDbInstance(Integer maxIopsPerDbInstance) {
    this.maxIopsPerDbInstance = maxIopsPerDbInstance;
    return this;
  }

  /**
   * Get maxIopsPerDbInstance
   * @return maxIopsPerDbInstance
   */
  @javax.annotation.Nullable
  public Integer getMaxIopsPerDbInstance() {
    return maxIopsPerDbInstance;
  }

  public void setMaxIopsPerDbInstance(Integer maxIopsPerDbInstance) {
    this.maxIopsPerDbInstance = maxIopsPerDbInstance;
  }


  public OrderableDBInstanceOption minIopsPerGib(Double minIopsPerGib) {
    this.minIopsPerGib = minIopsPerGib;
    return this;
  }

  /**
   * Get minIopsPerGib
   * @return minIopsPerGib
   */
  @javax.annotation.Nullable
  public Double getMinIopsPerGib() {
    return minIopsPerGib;
  }

  public void setMinIopsPerGib(Double minIopsPerGib) {
    this.minIopsPerGib = minIopsPerGib;
  }


  public OrderableDBInstanceOption maxIopsPerGib(Double maxIopsPerGib) {
    this.maxIopsPerGib = maxIopsPerGib;
    return this;
  }

  /**
   * Get maxIopsPerGib
   * @return maxIopsPerGib
   */
  @javax.annotation.Nullable
  public Double getMaxIopsPerGib() {
    return maxIopsPerGib;
  }

  public void setMaxIopsPerGib(Double maxIopsPerGib) {
    this.maxIopsPerGib = maxIopsPerGib;
  }


  public OrderableDBInstanceOption supportsGlobalDatabases(Boolean supportsGlobalDatabases) {
    this.supportsGlobalDatabases = supportsGlobalDatabases;
    return this;
  }

  /**
   * Get supportsGlobalDatabases
   * @return supportsGlobalDatabases
   */
  @javax.annotation.Nullable
  public Boolean getSupportsGlobalDatabases() {
    return supportsGlobalDatabases;
  }

  public void setSupportsGlobalDatabases(Boolean supportsGlobalDatabases) {
    this.supportsGlobalDatabases = supportsGlobalDatabases;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderableDBInstanceOption orderableDBInstanceOption = (OrderableDBInstanceOption) o;
    return Objects.equals(this.engine, orderableDBInstanceOption.engine) &&
        Objects.equals(this.engineVersion, orderableDBInstanceOption.engineVersion) &&
        Objects.equals(this.dbInstanceClass, orderableDBInstanceOption.dbInstanceClass) &&
        Objects.equals(this.licenseModel, orderableDBInstanceOption.licenseModel) &&
        Objects.equals(this.availabilityZones, orderableDBInstanceOption.availabilityZones) &&
        Objects.equals(this.multiAZCapable, orderableDBInstanceOption.multiAZCapable) &&
        Objects.equals(this.readReplicaCapable, orderableDBInstanceOption.readReplicaCapable) &&
        Objects.equals(this.vpc, orderableDBInstanceOption.vpc) &&
        Objects.equals(this.supportsStorageEncryption, orderableDBInstanceOption.supportsStorageEncryption) &&
        Objects.equals(this.storageType, orderableDBInstanceOption.storageType) &&
        Objects.equals(this.supportsIops, orderableDBInstanceOption.supportsIops) &&
        Objects.equals(this.supportsEnhancedMonitoring, orderableDBInstanceOption.supportsEnhancedMonitoring) &&
        Objects.equals(this.supportsIAMDatabaseAuthentication, orderableDBInstanceOption.supportsIAMDatabaseAuthentication) &&
        Objects.equals(this.supportsPerformanceInsights, orderableDBInstanceOption.supportsPerformanceInsights) &&
        Objects.equals(this.minStorageSize, orderableDBInstanceOption.minStorageSize) &&
        Objects.equals(this.maxStorageSize, orderableDBInstanceOption.maxStorageSize) &&
        Objects.equals(this.minIopsPerDbInstance, orderableDBInstanceOption.minIopsPerDbInstance) &&
        Objects.equals(this.maxIopsPerDbInstance, orderableDBInstanceOption.maxIopsPerDbInstance) &&
        Objects.equals(this.minIopsPerGib, orderableDBInstanceOption.minIopsPerGib) &&
        Objects.equals(this.maxIopsPerGib, orderableDBInstanceOption.maxIopsPerGib) &&
        Objects.equals(this.supportsGlobalDatabases, orderableDBInstanceOption.supportsGlobalDatabases);
  }

  @Override
  public int hashCode() {
    return Objects.hash(engine, engineVersion, dbInstanceClass, licenseModel, availabilityZones, multiAZCapable, readReplicaCapable, vpc, supportsStorageEncryption, storageType, supportsIops, supportsEnhancedMonitoring, supportsIAMDatabaseAuthentication, supportsPerformanceInsights, minStorageSize, maxStorageSize, minIopsPerDbInstance, maxIopsPerDbInstance, minIopsPerGib, maxIopsPerGib, supportsGlobalDatabases);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderableDBInstanceOption {\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    dbInstanceClass: ").append(toIndentedString(dbInstanceClass)).append("\n");
    sb.append("    licenseModel: ").append(toIndentedString(licenseModel)).append("\n");
    sb.append("    availabilityZones: ").append(toIndentedString(availabilityZones)).append("\n");
    sb.append("    multiAZCapable: ").append(toIndentedString(multiAZCapable)).append("\n");
    sb.append("    readReplicaCapable: ").append(toIndentedString(readReplicaCapable)).append("\n");
    sb.append("    vpc: ").append(toIndentedString(vpc)).append("\n");
    sb.append("    supportsStorageEncryption: ").append(toIndentedString(supportsStorageEncryption)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    supportsIops: ").append(toIndentedString(supportsIops)).append("\n");
    sb.append("    supportsEnhancedMonitoring: ").append(toIndentedString(supportsEnhancedMonitoring)).append("\n");
    sb.append("    supportsIAMDatabaseAuthentication: ").append(toIndentedString(supportsIAMDatabaseAuthentication)).append("\n");
    sb.append("    supportsPerformanceInsights: ").append(toIndentedString(supportsPerformanceInsights)).append("\n");
    sb.append("    minStorageSize: ").append(toIndentedString(minStorageSize)).append("\n");
    sb.append("    maxStorageSize: ").append(toIndentedString(maxStorageSize)).append("\n");
    sb.append("    minIopsPerDbInstance: ").append(toIndentedString(minIopsPerDbInstance)).append("\n");
    sb.append("    maxIopsPerDbInstance: ").append(toIndentedString(maxIopsPerDbInstance)).append("\n");
    sb.append("    minIopsPerGib: ").append(toIndentedString(minIopsPerGib)).append("\n");
    sb.append("    maxIopsPerGib: ").append(toIndentedString(maxIopsPerGib)).append("\n");
    sb.append("    supportsGlobalDatabases: ").append(toIndentedString(supportsGlobalDatabases)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Engine");
    openapiFields.add("EngineVersion");
    openapiFields.add("DBInstanceClass");
    openapiFields.add("LicenseModel");
    openapiFields.add("AvailabilityZones");
    openapiFields.add("MultiAZCapable");
    openapiFields.add("ReadReplicaCapable");
    openapiFields.add("Vpc");
    openapiFields.add("SupportsStorageEncryption");
    openapiFields.add("StorageType");
    openapiFields.add("SupportsIops");
    openapiFields.add("SupportsEnhancedMonitoring");
    openapiFields.add("SupportsIAMDatabaseAuthentication");
    openapiFields.add("SupportsPerformanceInsights");
    openapiFields.add("MinStorageSize");
    openapiFields.add("MaxStorageSize");
    openapiFields.add("MinIopsPerDbInstance");
    openapiFields.add("MaxIopsPerDbInstance");
    openapiFields.add("MinIopsPerGib");
    openapiFields.add("MaxIopsPerGib");
    openapiFields.add("SupportsGlobalDatabases");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderableDBInstanceOption
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderableDBInstanceOption.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderableDBInstanceOption is not found in the empty JSON string", OrderableDBInstanceOption.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderableDBInstanceOption.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderableDBInstanceOption` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Engine`
      if (jsonObj.get("Engine") != null && !jsonObj.get("Engine").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Engine"));
      }
      // validate the optional field `EngineVersion`
      if (jsonObj.get("EngineVersion") != null && !jsonObj.get("EngineVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineVersion"));
      }
      // validate the optional field `DBInstanceClass`
      if (jsonObj.get("DBInstanceClass") != null && !jsonObj.get("DBInstanceClass").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DBInstanceClass"));
      }
      // validate the optional field `LicenseModel`
      if (jsonObj.get("LicenseModel") != null && !jsonObj.get("LicenseModel").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LicenseModel"));
      }
      // validate the optional field `AvailabilityZones`
      if (jsonObj.get("AvailabilityZones") != null && !jsonObj.get("AvailabilityZones").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AvailabilityZones"));
      }
      // validate the optional field `MultiAZCapable`
      if (jsonObj.get("MultiAZCapable") != null && !jsonObj.get("MultiAZCapable").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("MultiAZCapable"));
      }
      // validate the optional field `ReadReplicaCapable`
      if (jsonObj.get("ReadReplicaCapable") != null && !jsonObj.get("ReadReplicaCapable").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("ReadReplicaCapable"));
      }
      // validate the optional field `Vpc`
      if (jsonObj.get("Vpc") != null && !jsonObj.get("Vpc").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("Vpc"));
      }
      // validate the optional field `SupportsStorageEncryption`
      if (jsonObj.get("SupportsStorageEncryption") != null && !jsonObj.get("SupportsStorageEncryption").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("SupportsStorageEncryption"));
      }
      // validate the optional field `StorageType`
      if (jsonObj.get("StorageType") != null && !jsonObj.get("StorageType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StorageType"));
      }
      // validate the optional field `SupportsIops`
      if (jsonObj.get("SupportsIops") != null && !jsonObj.get("SupportsIops").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("SupportsIops"));
      }
      // validate the optional field `SupportsEnhancedMonitoring`
      if (jsonObj.get("SupportsEnhancedMonitoring") != null && !jsonObj.get("SupportsEnhancedMonitoring").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("SupportsEnhancedMonitoring"));
      }
      // validate the optional field `SupportsIAMDatabaseAuthentication`
      if (jsonObj.get("SupportsIAMDatabaseAuthentication") != null && !jsonObj.get("SupportsIAMDatabaseAuthentication").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("SupportsIAMDatabaseAuthentication"));
      }
      // validate the optional field `SupportsPerformanceInsights`
      if (jsonObj.get("SupportsPerformanceInsights") != null && !jsonObj.get("SupportsPerformanceInsights").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("SupportsPerformanceInsights"));
      }
      // validate the optional field `MinStorageSize`
      if (jsonObj.get("MinStorageSize") != null && !jsonObj.get("MinStorageSize").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MinStorageSize"));
      }
      // validate the optional field `MaxStorageSize`
      if (jsonObj.get("MaxStorageSize") != null && !jsonObj.get("MaxStorageSize").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxStorageSize"));
      }
      // validate the optional field `MinIopsPerDbInstance`
      if (jsonObj.get("MinIopsPerDbInstance") != null && !jsonObj.get("MinIopsPerDbInstance").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MinIopsPerDbInstance"));
      }
      // validate the optional field `MaxIopsPerDbInstance`
      if (jsonObj.get("MaxIopsPerDbInstance") != null && !jsonObj.get("MaxIopsPerDbInstance").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxIopsPerDbInstance"));
      }
      // validate the optional field `MinIopsPerGib`
      if (jsonObj.get("MinIopsPerGib") != null && !jsonObj.get("MinIopsPerGib").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("MinIopsPerGib"));
      }
      // validate the optional field `MaxIopsPerGib`
      if (jsonObj.get("MaxIopsPerGib") != null && !jsonObj.get("MaxIopsPerGib").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("MaxIopsPerGib"));
      }
      // validate the optional field `SupportsGlobalDatabases`
      if (jsonObj.get("SupportsGlobalDatabases") != null && !jsonObj.get("SupportsGlobalDatabases").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("SupportsGlobalDatabases"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderableDBInstanceOption.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderableDBInstanceOption' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderableDBInstanceOption> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderableDBInstanceOption.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderableDBInstanceOption>() {
           @Override
           public void write(JsonWriter out, OrderableDBInstanceOption value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderableDBInstanceOption read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderableDBInstanceOption given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderableDBInstanceOption
   * @throws IOException if the JSON string is invalid with respect to OrderableDBInstanceOption
   */
  public static OrderableDBInstanceOption fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderableDBInstanceOption.class);
  }

  /**
   * Convert an instance of OrderableDBInstanceOption to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

