/*
 * Amazon Neptune
 * <fullname>Amazon Neptune</fullname> <p>Amazon Neptune is a fast, reliable, fully-managed graph database service that makes it easy to build and run applications that work with highly connected datasets. The core of Amazon Neptune is a purpose-built, high-performance graph database engine optimized for storing billions of relationships and querying the graph with milliseconds latency. Amazon Neptune supports popular graph models Property Graph and W3C's RDF, and their respective query languages Apache TinkerPop Gremlin and SPARQL, allowing you to easily build queries that efficiently navigate highly connected datasets. Neptune powers graph use cases such as recommendation engines, fraud detection, knowledge graphs, drug discovery, and network security.</p> <p>This interface reference for Amazon Neptune contains documentation for a programming or command line interface you can use to manage Amazon Neptune. Note that Amazon Neptune is asynchronous, which means that some interfaces might require techniques such as polling or callback functions to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a command is applied immediately, on the next instance reboot, or during the maintenance window. The reference structure is as follows, and we list following some related topics from the user guide.</p>
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DBInstanceDBSubnetGroup;
import org.openapitools.client.model.DBInstanceEndpoint;
import org.openapitools.client.model.DBInstancePendingModifiedValues;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DBInstanceListInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:52.008602-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DBInstanceListInner {
  public static final String SERIALIZED_NAME_DB_INSTANCE_IDENTIFIER = "DBInstanceIdentifier";
  @SerializedName(SERIALIZED_NAME_DB_INSTANCE_IDENTIFIER)
  private String dbInstanceIdentifier;

  public static final String SERIALIZED_NAME_DB_INSTANCE_CLASS = "DBInstanceClass";
  @SerializedName(SERIALIZED_NAME_DB_INSTANCE_CLASS)
  private String dbInstanceClass;

  public static final String SERIALIZED_NAME_ENGINE = "Engine";
  @SerializedName(SERIALIZED_NAME_ENGINE)
  private String engine;

  public static final String SERIALIZED_NAME_DB_INSTANCE_STATUS = "DBInstanceStatus";
  @SerializedName(SERIALIZED_NAME_DB_INSTANCE_STATUS)
  private String dbInstanceStatus;

  public static final String SERIALIZED_NAME_MASTER_USERNAME = "MasterUsername";
  @SerializedName(SERIALIZED_NAME_MASTER_USERNAME)
  private String masterUsername;

  public static final String SERIALIZED_NAME_DB_NAME = "DBName";
  @SerializedName(SERIALIZED_NAME_DB_NAME)
  private String dbName;

  public static final String SERIALIZED_NAME_ENDPOINT = "Endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private DBInstanceEndpoint endpoint;

  public static final String SERIALIZED_NAME_ALLOCATED_STORAGE = "AllocatedStorage";
  @SerializedName(SERIALIZED_NAME_ALLOCATED_STORAGE)
  private Integer allocatedStorage;

  public static final String SERIALIZED_NAME_INSTANCE_CREATE_TIME = "InstanceCreateTime";
  @SerializedName(SERIALIZED_NAME_INSTANCE_CREATE_TIME)
  private OffsetDateTime instanceCreateTime;

  public static final String SERIALIZED_NAME_PREFERRED_BACKUP_WINDOW = "PreferredBackupWindow";
  @SerializedName(SERIALIZED_NAME_PREFERRED_BACKUP_WINDOW)
  private String preferredBackupWindow;

  public static final String SERIALIZED_NAME_BACKUP_RETENTION_PERIOD = "BackupRetentionPeriod";
  @SerializedName(SERIALIZED_NAME_BACKUP_RETENTION_PERIOD)
  private Integer backupRetentionPeriod;

  public static final String SERIALIZED_NAME_DB_SECURITY_GROUPS = "DBSecurityGroups";
  @SerializedName(SERIALIZED_NAME_DB_SECURITY_GROUPS)
  private List dbSecurityGroups;

  public static final String SERIALIZED_NAME_VPC_SECURITY_GROUPS = "VpcSecurityGroups";
  @SerializedName(SERIALIZED_NAME_VPC_SECURITY_GROUPS)
  private List vpcSecurityGroups;

  public static final String SERIALIZED_NAME_DB_PARAMETER_GROUPS = "DBParameterGroups";
  @SerializedName(SERIALIZED_NAME_DB_PARAMETER_GROUPS)
  private List dbParameterGroups;

  public static final String SERIALIZED_NAME_AVAILABILITY_ZONE = "AvailabilityZone";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONE)
  private String availabilityZone;

  public static final String SERIALIZED_NAME_DB_SUBNET_GROUP = "DBSubnetGroup";
  @SerializedName(SERIALIZED_NAME_DB_SUBNET_GROUP)
  private DBInstanceDBSubnetGroup dbSubnetGroup;

  public static final String SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW = "PreferredMaintenanceWindow";
  @SerializedName(SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW)
  private String preferredMaintenanceWindow;

  public static final String SERIALIZED_NAME_PENDING_MODIFIED_VALUES = "PendingModifiedValues";
  @SerializedName(SERIALIZED_NAME_PENDING_MODIFIED_VALUES)
  private DBInstancePendingModifiedValues pendingModifiedValues;

  public static final String SERIALIZED_NAME_LATEST_RESTORABLE_TIME = "LatestRestorableTime";
  @SerializedName(SERIALIZED_NAME_LATEST_RESTORABLE_TIME)
  private OffsetDateTime latestRestorableTime;

  public static final String SERIALIZED_NAME_MULTI_A_Z = "MultiAZ";
  @SerializedName(SERIALIZED_NAME_MULTI_A_Z)
  private Boolean multiAZ;

  public static final String SERIALIZED_NAME_ENGINE_VERSION = "EngineVersion";
  @SerializedName(SERIALIZED_NAME_ENGINE_VERSION)
  private String engineVersion;

  public static final String SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE = "AutoMinorVersionUpgrade";
  @SerializedName(SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE)
  private Boolean autoMinorVersionUpgrade;

  public static final String SERIALIZED_NAME_READ_REPLICA_SOURCE_D_B_INSTANCE_IDENTIFIER = "ReadReplicaSourceDBInstanceIdentifier";
  @SerializedName(SERIALIZED_NAME_READ_REPLICA_SOURCE_D_B_INSTANCE_IDENTIFIER)
  private String readReplicaSourceDBInstanceIdentifier;

  public static final String SERIALIZED_NAME_READ_REPLICA_D_B_INSTANCE_IDENTIFIERS = "ReadReplicaDBInstanceIdentifiers";
  @SerializedName(SERIALIZED_NAME_READ_REPLICA_D_B_INSTANCE_IDENTIFIERS)
  private List readReplicaDBInstanceIdentifiers;

  public static final String SERIALIZED_NAME_READ_REPLICA_D_B_CLUSTER_IDENTIFIERS = "ReadReplicaDBClusterIdentifiers";
  @SerializedName(SERIALIZED_NAME_READ_REPLICA_D_B_CLUSTER_IDENTIFIERS)
  private List readReplicaDBClusterIdentifiers;

  public static final String SERIALIZED_NAME_LICENSE_MODEL = "LicenseModel";
  @SerializedName(SERIALIZED_NAME_LICENSE_MODEL)
  private String licenseModel;

  public static final String SERIALIZED_NAME_IOPS = "Iops";
  @SerializedName(SERIALIZED_NAME_IOPS)
  private Integer iops;

  public static final String SERIALIZED_NAME_OPTION_GROUP_MEMBERSHIPS = "OptionGroupMemberships";
  @SerializedName(SERIALIZED_NAME_OPTION_GROUP_MEMBERSHIPS)
  private List optionGroupMemberships;

  public static final String SERIALIZED_NAME_CHARACTER_SET_NAME = "CharacterSetName";
  @SerializedName(SERIALIZED_NAME_CHARACTER_SET_NAME)
  private String characterSetName;

  public static final String SERIALIZED_NAME_SECONDARY_AVAILABILITY_ZONE = "SecondaryAvailabilityZone";
  @SerializedName(SERIALIZED_NAME_SECONDARY_AVAILABILITY_ZONE)
  private String secondaryAvailabilityZone;

  public static final String SERIALIZED_NAME_PUBLICLY_ACCESSIBLE = "PubliclyAccessible";
  @SerializedName(SERIALIZED_NAME_PUBLICLY_ACCESSIBLE)
  private Boolean publiclyAccessible;

  public static final String SERIALIZED_NAME_STATUS_INFOS = "StatusInfos";
  @SerializedName(SERIALIZED_NAME_STATUS_INFOS)
  private List statusInfos;

  public static final String SERIALIZED_NAME_STORAGE_TYPE = "StorageType";
  @SerializedName(SERIALIZED_NAME_STORAGE_TYPE)
  private String storageType;

  public static final String SERIALIZED_NAME_TDE_CREDENTIAL_ARN = "TdeCredentialArn";
  @SerializedName(SERIALIZED_NAME_TDE_CREDENTIAL_ARN)
  private String tdeCredentialArn;

  public static final String SERIALIZED_NAME_DB_INSTANCE_PORT = "DbInstancePort";
  @SerializedName(SERIALIZED_NAME_DB_INSTANCE_PORT)
  private Integer dbInstancePort;

  public static final String SERIALIZED_NAME_DB_CLUSTER_IDENTIFIER = "DBClusterIdentifier";
  @SerializedName(SERIALIZED_NAME_DB_CLUSTER_IDENTIFIER)
  private String dbClusterIdentifier;

  public static final String SERIALIZED_NAME_STORAGE_ENCRYPTED = "StorageEncrypted";
  @SerializedName(SERIALIZED_NAME_STORAGE_ENCRYPTED)
  private Boolean storageEncrypted;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_DBI_RESOURCE_ID = "DbiResourceId";
  @SerializedName(SERIALIZED_NAME_DBI_RESOURCE_ID)
  private String dbiResourceId;

  public static final String SERIALIZED_NAME_CA_CERTIFICATE_IDENTIFIER = "CACertificateIdentifier";
  @SerializedName(SERIALIZED_NAME_CA_CERTIFICATE_IDENTIFIER)
  private String caCertificateIdentifier;

  public static final String SERIALIZED_NAME_DOMAIN_MEMBERSHIPS = "DomainMemberships";
  @SerializedName(SERIALIZED_NAME_DOMAIN_MEMBERSHIPS)
  private List domainMemberships;

  public static final String SERIALIZED_NAME_COPY_TAGS_TO_SNAPSHOT = "CopyTagsToSnapshot";
  @SerializedName(SERIALIZED_NAME_COPY_TAGS_TO_SNAPSHOT)
  private Boolean copyTagsToSnapshot;

  public static final String SERIALIZED_NAME_MONITORING_INTERVAL = "MonitoringInterval";
  @SerializedName(SERIALIZED_NAME_MONITORING_INTERVAL)
  private Integer monitoringInterval;

  public static final String SERIALIZED_NAME_ENHANCED_MONITORING_RESOURCE_ARN = "EnhancedMonitoringResourceArn";
  @SerializedName(SERIALIZED_NAME_ENHANCED_MONITORING_RESOURCE_ARN)
  private String enhancedMonitoringResourceArn;

  public static final String SERIALIZED_NAME_MONITORING_ROLE_ARN = "MonitoringRoleArn";
  @SerializedName(SERIALIZED_NAME_MONITORING_ROLE_ARN)
  private String monitoringRoleArn;

  public static final String SERIALIZED_NAME_PROMOTION_TIER = "PromotionTier";
  @SerializedName(SERIALIZED_NAME_PROMOTION_TIER)
  private Integer promotionTier;

  public static final String SERIALIZED_NAME_DB_INSTANCE_ARN = "DBInstanceArn";
  @SerializedName(SERIALIZED_NAME_DB_INSTANCE_ARN)
  private String dbInstanceArn;

  public static final String SERIALIZED_NAME_TIMEZONE = "Timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private String timezone;

  public static final String SERIALIZED_NAME_IA_M_DATABASE_AUTHENTICATION_ENABLED = "IAMDatabaseAuthenticationEnabled";
  @SerializedName(SERIALIZED_NAME_IA_M_DATABASE_AUTHENTICATION_ENABLED)
  private Boolean iaMDatabaseAuthenticationEnabled;

  public static final String SERIALIZED_NAME_PERFORMANCE_INSIGHTS_ENABLED = "PerformanceInsightsEnabled";
  @SerializedName(SERIALIZED_NAME_PERFORMANCE_INSIGHTS_ENABLED)
  private Boolean performanceInsightsEnabled;

  public static final String SERIALIZED_NAME_PERFORMANCE_INSIGHTS_K_M_S_KEY_ID = "PerformanceInsightsKMSKeyId";
  @SerializedName(SERIALIZED_NAME_PERFORMANCE_INSIGHTS_K_M_S_KEY_ID)
  private String performanceInsightsKMSKeyId;

  public static final String SERIALIZED_NAME_ENABLED_CLOUDWATCH_LOGS_EXPORTS = "EnabledCloudwatchLogsExports";
  @SerializedName(SERIALIZED_NAME_ENABLED_CLOUDWATCH_LOGS_EXPORTS)
  private List enabledCloudwatchLogsExports;

  public static final String SERIALIZED_NAME_DELETION_PROTECTION = "DeletionProtection";
  @SerializedName(SERIALIZED_NAME_DELETION_PROTECTION)
  private Boolean deletionProtection;

  public DBInstanceListInner() {
  }

  public DBInstanceListInner dbInstanceIdentifier(String dbInstanceIdentifier) {
    this.dbInstanceIdentifier = dbInstanceIdentifier;
    return this;
  }

  /**
   * Get dbInstanceIdentifier
   * @return dbInstanceIdentifier
   */
  @javax.annotation.Nullable
  public String getDbInstanceIdentifier() {
    return dbInstanceIdentifier;
  }

  public void setDbInstanceIdentifier(String dbInstanceIdentifier) {
    this.dbInstanceIdentifier = dbInstanceIdentifier;
  }


  public DBInstanceListInner dbInstanceClass(String dbInstanceClass) {
    this.dbInstanceClass = dbInstanceClass;
    return this;
  }

  /**
   * Get dbInstanceClass
   * @return dbInstanceClass
   */
  @javax.annotation.Nullable
  public String getDbInstanceClass() {
    return dbInstanceClass;
  }

  public void setDbInstanceClass(String dbInstanceClass) {
    this.dbInstanceClass = dbInstanceClass;
  }


  public DBInstanceListInner engine(String engine) {
    this.engine = engine;
    return this;
  }

  /**
   * Get engine
   * @return engine
   */
  @javax.annotation.Nullable
  public String getEngine() {
    return engine;
  }

  public void setEngine(String engine) {
    this.engine = engine;
  }


  public DBInstanceListInner dbInstanceStatus(String dbInstanceStatus) {
    this.dbInstanceStatus = dbInstanceStatus;
    return this;
  }

  /**
   * Get dbInstanceStatus
   * @return dbInstanceStatus
   */
  @javax.annotation.Nullable
  public String getDbInstanceStatus() {
    return dbInstanceStatus;
  }

  public void setDbInstanceStatus(String dbInstanceStatus) {
    this.dbInstanceStatus = dbInstanceStatus;
  }


  public DBInstanceListInner masterUsername(String masterUsername) {
    this.masterUsername = masterUsername;
    return this;
  }

  /**
   * Get masterUsername
   * @return masterUsername
   */
  @javax.annotation.Nullable
  public String getMasterUsername() {
    return masterUsername;
  }

  public void setMasterUsername(String masterUsername) {
    this.masterUsername = masterUsername;
  }


  public DBInstanceListInner dbName(String dbName) {
    this.dbName = dbName;
    return this;
  }

  /**
   * Get dbName
   * @return dbName
   */
  @javax.annotation.Nullable
  public String getDbName() {
    return dbName;
  }

  public void setDbName(String dbName) {
    this.dbName = dbName;
  }


  public DBInstanceListInner endpoint(DBInstanceEndpoint endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  /**
   * Get endpoint
   * @return endpoint
   */
  @javax.annotation.Nullable
  public DBInstanceEndpoint getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(DBInstanceEndpoint endpoint) {
    this.endpoint = endpoint;
  }


  public DBInstanceListInner allocatedStorage(Integer allocatedStorage) {
    this.allocatedStorage = allocatedStorage;
    return this;
  }

  /**
   * Get allocatedStorage
   * @return allocatedStorage
   */
  @javax.annotation.Nullable
  public Integer getAllocatedStorage() {
    return allocatedStorage;
  }

  public void setAllocatedStorage(Integer allocatedStorage) {
    this.allocatedStorage = allocatedStorage;
  }


  public DBInstanceListInner instanceCreateTime(OffsetDateTime instanceCreateTime) {
    this.instanceCreateTime = instanceCreateTime;
    return this;
  }

  /**
   * Get instanceCreateTime
   * @return instanceCreateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getInstanceCreateTime() {
    return instanceCreateTime;
  }

  public void setInstanceCreateTime(OffsetDateTime instanceCreateTime) {
    this.instanceCreateTime = instanceCreateTime;
  }


  public DBInstanceListInner preferredBackupWindow(String preferredBackupWindow) {
    this.preferredBackupWindow = preferredBackupWindow;
    return this;
  }

  /**
   * Get preferredBackupWindow
   * @return preferredBackupWindow
   */
  @javax.annotation.Nullable
  public String getPreferredBackupWindow() {
    return preferredBackupWindow;
  }

  public void setPreferredBackupWindow(String preferredBackupWindow) {
    this.preferredBackupWindow = preferredBackupWindow;
  }


  public DBInstanceListInner backupRetentionPeriod(Integer backupRetentionPeriod) {
    this.backupRetentionPeriod = backupRetentionPeriod;
    return this;
  }

  /**
   * Get backupRetentionPeriod
   * @return backupRetentionPeriod
   */
  @javax.annotation.Nullable
  public Integer getBackupRetentionPeriod() {
    return backupRetentionPeriod;
  }

  public void setBackupRetentionPeriod(Integer backupRetentionPeriod) {
    this.backupRetentionPeriod = backupRetentionPeriod;
  }


  public DBInstanceListInner dbSecurityGroups(List dbSecurityGroups) {
    this.dbSecurityGroups = dbSecurityGroups;
    return this;
  }

  /**
   * Get dbSecurityGroups
   * @return dbSecurityGroups
   */
  @javax.annotation.Nullable
  public List getDbSecurityGroups() {
    return dbSecurityGroups;
  }

  public void setDbSecurityGroups(List dbSecurityGroups) {
    this.dbSecurityGroups = dbSecurityGroups;
  }


  public DBInstanceListInner vpcSecurityGroups(List vpcSecurityGroups) {
    this.vpcSecurityGroups = vpcSecurityGroups;
    return this;
  }

  /**
   * Get vpcSecurityGroups
   * @return vpcSecurityGroups
   */
  @javax.annotation.Nullable
  public List getVpcSecurityGroups() {
    return vpcSecurityGroups;
  }

  public void setVpcSecurityGroups(List vpcSecurityGroups) {
    this.vpcSecurityGroups = vpcSecurityGroups;
  }


  public DBInstanceListInner dbParameterGroups(List dbParameterGroups) {
    this.dbParameterGroups = dbParameterGroups;
    return this;
  }

  /**
   * Get dbParameterGroups
   * @return dbParameterGroups
   */
  @javax.annotation.Nullable
  public List getDbParameterGroups() {
    return dbParameterGroups;
  }

  public void setDbParameterGroups(List dbParameterGroups) {
    this.dbParameterGroups = dbParameterGroups;
  }


  public DBInstanceListInner availabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
    return this;
  }

  /**
   * Get availabilityZone
   * @return availabilityZone
   */
  @javax.annotation.Nullable
  public String getAvailabilityZone() {
    return availabilityZone;
  }

  public void setAvailabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
  }


  public DBInstanceListInner dbSubnetGroup(DBInstanceDBSubnetGroup dbSubnetGroup) {
    this.dbSubnetGroup = dbSubnetGroup;
    return this;
  }

  /**
   * Get dbSubnetGroup
   * @return dbSubnetGroup
   */
  @javax.annotation.Nullable
  public DBInstanceDBSubnetGroup getDbSubnetGroup() {
    return dbSubnetGroup;
  }

  public void setDbSubnetGroup(DBInstanceDBSubnetGroup dbSubnetGroup) {
    this.dbSubnetGroup = dbSubnetGroup;
  }


  public DBInstanceListInner preferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
    return this;
  }

  /**
   * Get preferredMaintenanceWindow
   * @return preferredMaintenanceWindow
   */
  @javax.annotation.Nullable
  public String getPreferredMaintenanceWindow() {
    return preferredMaintenanceWindow;
  }

  public void setPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
  }


  public DBInstanceListInner pendingModifiedValues(DBInstancePendingModifiedValues pendingModifiedValues) {
    this.pendingModifiedValues = pendingModifiedValues;
    return this;
  }

  /**
   * Get pendingModifiedValues
   * @return pendingModifiedValues
   */
  @javax.annotation.Nullable
  public DBInstancePendingModifiedValues getPendingModifiedValues() {
    return pendingModifiedValues;
  }

  public void setPendingModifiedValues(DBInstancePendingModifiedValues pendingModifiedValues) {
    this.pendingModifiedValues = pendingModifiedValues;
  }


  public DBInstanceListInner latestRestorableTime(OffsetDateTime latestRestorableTime) {
    this.latestRestorableTime = latestRestorableTime;
    return this;
  }

  /**
   * Get latestRestorableTime
   * @return latestRestorableTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLatestRestorableTime() {
    return latestRestorableTime;
  }

  public void setLatestRestorableTime(OffsetDateTime latestRestorableTime) {
    this.latestRestorableTime = latestRestorableTime;
  }


  public DBInstanceListInner multiAZ(Boolean multiAZ) {
    this.multiAZ = multiAZ;
    return this;
  }

  /**
   * Get multiAZ
   * @return multiAZ
   */
  @javax.annotation.Nullable
  public Boolean getMultiAZ() {
    return multiAZ;
  }

  public void setMultiAZ(Boolean multiAZ) {
    this.multiAZ = multiAZ;
  }


  public DBInstanceListInner engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

  /**
   * Get engineVersion
   * @return engineVersion
   */
  @javax.annotation.Nullable
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }


  public DBInstanceListInner autoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
    return this;
  }

  /**
   * Get autoMinorVersionUpgrade
   * @return autoMinorVersionUpgrade
   */
  @javax.annotation.Nullable
  public Boolean getAutoMinorVersionUpgrade() {
    return autoMinorVersionUpgrade;
  }

  public void setAutoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
  }


  public DBInstanceListInner readReplicaSourceDBInstanceIdentifier(String readReplicaSourceDBInstanceIdentifier) {
    this.readReplicaSourceDBInstanceIdentifier = readReplicaSourceDBInstanceIdentifier;
    return this;
  }

  /**
   * Get readReplicaSourceDBInstanceIdentifier
   * @return readReplicaSourceDBInstanceIdentifier
   */
  @javax.annotation.Nullable
  public String getReadReplicaSourceDBInstanceIdentifier() {
    return readReplicaSourceDBInstanceIdentifier;
  }

  public void setReadReplicaSourceDBInstanceIdentifier(String readReplicaSourceDBInstanceIdentifier) {
    this.readReplicaSourceDBInstanceIdentifier = readReplicaSourceDBInstanceIdentifier;
  }


  public DBInstanceListInner readReplicaDBInstanceIdentifiers(List readReplicaDBInstanceIdentifiers) {
    this.readReplicaDBInstanceIdentifiers = readReplicaDBInstanceIdentifiers;
    return this;
  }

  /**
   * Get readReplicaDBInstanceIdentifiers
   * @return readReplicaDBInstanceIdentifiers
   */
  @javax.annotation.Nullable
  public List getReadReplicaDBInstanceIdentifiers() {
    return readReplicaDBInstanceIdentifiers;
  }

  public void setReadReplicaDBInstanceIdentifiers(List readReplicaDBInstanceIdentifiers) {
    this.readReplicaDBInstanceIdentifiers = readReplicaDBInstanceIdentifiers;
  }


  public DBInstanceListInner readReplicaDBClusterIdentifiers(List readReplicaDBClusterIdentifiers) {
    this.readReplicaDBClusterIdentifiers = readReplicaDBClusterIdentifiers;
    return this;
  }

  /**
   * Get readReplicaDBClusterIdentifiers
   * @return readReplicaDBClusterIdentifiers
   */
  @javax.annotation.Nullable
  public List getReadReplicaDBClusterIdentifiers() {
    return readReplicaDBClusterIdentifiers;
  }

  public void setReadReplicaDBClusterIdentifiers(List readReplicaDBClusterIdentifiers) {
    this.readReplicaDBClusterIdentifiers = readReplicaDBClusterIdentifiers;
  }


  public DBInstanceListInner licenseModel(String licenseModel) {
    this.licenseModel = licenseModel;
    return this;
  }

  /**
   * Get licenseModel
   * @return licenseModel
   */
  @javax.annotation.Nullable
  public String getLicenseModel() {
    return licenseModel;
  }

  public void setLicenseModel(String licenseModel) {
    this.licenseModel = licenseModel;
  }


  public DBInstanceListInner iops(Integer iops) {
    this.iops = iops;
    return this;
  }

  /**
   * Get iops
   * @return iops
   */
  @javax.annotation.Nullable
  public Integer getIops() {
    return iops;
  }

  public void setIops(Integer iops) {
    this.iops = iops;
  }


  public DBInstanceListInner optionGroupMemberships(List optionGroupMemberships) {
    this.optionGroupMemberships = optionGroupMemberships;
    return this;
  }

  /**
   * Get optionGroupMemberships
   * @return optionGroupMemberships
   */
  @javax.annotation.Nullable
  public List getOptionGroupMemberships() {
    return optionGroupMemberships;
  }

  public void setOptionGroupMemberships(List optionGroupMemberships) {
    this.optionGroupMemberships = optionGroupMemberships;
  }


  public DBInstanceListInner characterSetName(String characterSetName) {
    this.characterSetName = characterSetName;
    return this;
  }

  /**
   * Get characterSetName
   * @return characterSetName
   */
  @javax.annotation.Nullable
  public String getCharacterSetName() {
    return characterSetName;
  }

  public void setCharacterSetName(String characterSetName) {
    this.characterSetName = characterSetName;
  }


  public DBInstanceListInner secondaryAvailabilityZone(String secondaryAvailabilityZone) {
    this.secondaryAvailabilityZone = secondaryAvailabilityZone;
    return this;
  }

  /**
   * Get secondaryAvailabilityZone
   * @return secondaryAvailabilityZone
   */
  @javax.annotation.Nullable
  public String getSecondaryAvailabilityZone() {
    return secondaryAvailabilityZone;
  }

  public void setSecondaryAvailabilityZone(String secondaryAvailabilityZone) {
    this.secondaryAvailabilityZone = secondaryAvailabilityZone;
  }


  public DBInstanceListInner publiclyAccessible(Boolean publiclyAccessible) {
    this.publiclyAccessible = publiclyAccessible;
    return this;
  }

  /**
   * Get publiclyAccessible
   * @return publiclyAccessible
   */
  @javax.annotation.Nullable
  public Boolean getPubliclyAccessible() {
    return publiclyAccessible;
  }

  public void setPubliclyAccessible(Boolean publiclyAccessible) {
    this.publiclyAccessible = publiclyAccessible;
  }


  public DBInstanceListInner statusInfos(List statusInfos) {
    this.statusInfos = statusInfos;
    return this;
  }

  /**
   * Get statusInfos
   * @return statusInfos
   */
  @javax.annotation.Nullable
  public List getStatusInfos() {
    return statusInfos;
  }

  public void setStatusInfos(List statusInfos) {
    this.statusInfos = statusInfos;
  }


  public DBInstanceListInner storageType(String storageType) {
    this.storageType = storageType;
    return this;
  }

  /**
   * Get storageType
   * @return storageType
   */
  @javax.annotation.Nullable
  public String getStorageType() {
    return storageType;
  }

  public void setStorageType(String storageType) {
    this.storageType = storageType;
  }


  public DBInstanceListInner tdeCredentialArn(String tdeCredentialArn) {
    this.tdeCredentialArn = tdeCredentialArn;
    return this;
  }

  /**
   * Get tdeCredentialArn
   * @return tdeCredentialArn
   */
  @javax.annotation.Nullable
  public String getTdeCredentialArn() {
    return tdeCredentialArn;
  }

  public void setTdeCredentialArn(String tdeCredentialArn) {
    this.tdeCredentialArn = tdeCredentialArn;
  }


  public DBInstanceListInner dbInstancePort(Integer dbInstancePort) {
    this.dbInstancePort = dbInstancePort;
    return this;
  }

  /**
   * Get dbInstancePort
   * @return dbInstancePort
   */
  @javax.annotation.Nullable
  public Integer getDbInstancePort() {
    return dbInstancePort;
  }

  public void setDbInstancePort(Integer dbInstancePort) {
    this.dbInstancePort = dbInstancePort;
  }


  public DBInstanceListInner dbClusterIdentifier(String dbClusterIdentifier) {
    this.dbClusterIdentifier = dbClusterIdentifier;
    return this;
  }

  /**
   * Get dbClusterIdentifier
   * @return dbClusterIdentifier
   */
  @javax.annotation.Nullable
  public String getDbClusterIdentifier() {
    return dbClusterIdentifier;
  }

  public void setDbClusterIdentifier(String dbClusterIdentifier) {
    this.dbClusterIdentifier = dbClusterIdentifier;
  }


  public DBInstanceListInner storageEncrypted(Boolean storageEncrypted) {
    this.storageEncrypted = storageEncrypted;
    return this;
  }

  /**
   * Get storageEncrypted
   * @return storageEncrypted
   */
  @javax.annotation.Nullable
  public Boolean getStorageEncrypted() {
    return storageEncrypted;
  }

  public void setStorageEncrypted(Boolean storageEncrypted) {
    this.storageEncrypted = storageEncrypted;
  }


  public DBInstanceListInner kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public DBInstanceListInner dbiResourceId(String dbiResourceId) {
    this.dbiResourceId = dbiResourceId;
    return this;
  }

  /**
   * Get dbiResourceId
   * @return dbiResourceId
   */
  @javax.annotation.Nullable
  public String getDbiResourceId() {
    return dbiResourceId;
  }

  public void setDbiResourceId(String dbiResourceId) {
    this.dbiResourceId = dbiResourceId;
  }


  public DBInstanceListInner caCertificateIdentifier(String caCertificateIdentifier) {
    this.caCertificateIdentifier = caCertificateIdentifier;
    return this;
  }

  /**
   * Get caCertificateIdentifier
   * @return caCertificateIdentifier
   */
  @javax.annotation.Nullable
  public String getCaCertificateIdentifier() {
    return caCertificateIdentifier;
  }

  public void setCaCertificateIdentifier(String caCertificateIdentifier) {
    this.caCertificateIdentifier = caCertificateIdentifier;
  }


  public DBInstanceListInner domainMemberships(List domainMemberships) {
    this.domainMemberships = domainMemberships;
    return this;
  }

  /**
   * Get domainMemberships
   * @return domainMemberships
   */
  @javax.annotation.Nullable
  public List getDomainMemberships() {
    return domainMemberships;
  }

  public void setDomainMemberships(List domainMemberships) {
    this.domainMemberships = domainMemberships;
  }


  public DBInstanceListInner copyTagsToSnapshot(Boolean copyTagsToSnapshot) {
    this.copyTagsToSnapshot = copyTagsToSnapshot;
    return this;
  }

  /**
   * Get copyTagsToSnapshot
   * @return copyTagsToSnapshot
   */
  @javax.annotation.Nullable
  public Boolean getCopyTagsToSnapshot() {
    return copyTagsToSnapshot;
  }

  public void setCopyTagsToSnapshot(Boolean copyTagsToSnapshot) {
    this.copyTagsToSnapshot = copyTagsToSnapshot;
  }


  public DBInstanceListInner monitoringInterval(Integer monitoringInterval) {
    this.monitoringInterval = monitoringInterval;
    return this;
  }

  /**
   * Get monitoringInterval
   * @return monitoringInterval
   */
  @javax.annotation.Nullable
  public Integer getMonitoringInterval() {
    return monitoringInterval;
  }

  public void setMonitoringInterval(Integer monitoringInterval) {
    this.monitoringInterval = monitoringInterval;
  }


  public DBInstanceListInner enhancedMonitoringResourceArn(String enhancedMonitoringResourceArn) {
    this.enhancedMonitoringResourceArn = enhancedMonitoringResourceArn;
    return this;
  }

  /**
   * Get enhancedMonitoringResourceArn
   * @return enhancedMonitoringResourceArn
   */
  @javax.annotation.Nullable
  public String getEnhancedMonitoringResourceArn() {
    return enhancedMonitoringResourceArn;
  }

  public void setEnhancedMonitoringResourceArn(String enhancedMonitoringResourceArn) {
    this.enhancedMonitoringResourceArn = enhancedMonitoringResourceArn;
  }


  public DBInstanceListInner monitoringRoleArn(String monitoringRoleArn) {
    this.monitoringRoleArn = monitoringRoleArn;
    return this;
  }

  /**
   * Get monitoringRoleArn
   * @return monitoringRoleArn
   */
  @javax.annotation.Nullable
  public String getMonitoringRoleArn() {
    return monitoringRoleArn;
  }

  public void setMonitoringRoleArn(String monitoringRoleArn) {
    this.monitoringRoleArn = monitoringRoleArn;
  }


  public DBInstanceListInner promotionTier(Integer promotionTier) {
    this.promotionTier = promotionTier;
    return this;
  }

  /**
   * Get promotionTier
   * @return promotionTier
   */
  @javax.annotation.Nullable
  public Integer getPromotionTier() {
    return promotionTier;
  }

  public void setPromotionTier(Integer promotionTier) {
    this.promotionTier = promotionTier;
  }


  public DBInstanceListInner dbInstanceArn(String dbInstanceArn) {
    this.dbInstanceArn = dbInstanceArn;
    return this;
  }

  /**
   * Get dbInstanceArn
   * @return dbInstanceArn
   */
  @javax.annotation.Nullable
  public String getDbInstanceArn() {
    return dbInstanceArn;
  }

  public void setDbInstanceArn(String dbInstanceArn) {
    this.dbInstanceArn = dbInstanceArn;
  }


  public DBInstanceListInner timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

  /**
   * Get timezone
   * @return timezone
   */
  @javax.annotation.Nullable
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }


  public DBInstanceListInner iaMDatabaseAuthenticationEnabled(Boolean iaMDatabaseAuthenticationEnabled) {
    this.iaMDatabaseAuthenticationEnabled = iaMDatabaseAuthenticationEnabled;
    return this;
  }

  /**
   * Get iaMDatabaseAuthenticationEnabled
   * @return iaMDatabaseAuthenticationEnabled
   */
  @javax.annotation.Nullable
  public Boolean getIaMDatabaseAuthenticationEnabled() {
    return iaMDatabaseAuthenticationEnabled;
  }

  public void setIaMDatabaseAuthenticationEnabled(Boolean iaMDatabaseAuthenticationEnabled) {
    this.iaMDatabaseAuthenticationEnabled = iaMDatabaseAuthenticationEnabled;
  }


  public DBInstanceListInner performanceInsightsEnabled(Boolean performanceInsightsEnabled) {
    this.performanceInsightsEnabled = performanceInsightsEnabled;
    return this;
  }

  /**
   * Get performanceInsightsEnabled
   * @return performanceInsightsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getPerformanceInsightsEnabled() {
    return performanceInsightsEnabled;
  }

  public void setPerformanceInsightsEnabled(Boolean performanceInsightsEnabled) {
    this.performanceInsightsEnabled = performanceInsightsEnabled;
  }


  public DBInstanceListInner performanceInsightsKMSKeyId(String performanceInsightsKMSKeyId) {
    this.performanceInsightsKMSKeyId = performanceInsightsKMSKeyId;
    return this;
  }

  /**
   * Get performanceInsightsKMSKeyId
   * @return performanceInsightsKMSKeyId
   */
  @javax.annotation.Nullable
  public String getPerformanceInsightsKMSKeyId() {
    return performanceInsightsKMSKeyId;
  }

  public void setPerformanceInsightsKMSKeyId(String performanceInsightsKMSKeyId) {
    this.performanceInsightsKMSKeyId = performanceInsightsKMSKeyId;
  }


  public DBInstanceListInner enabledCloudwatchLogsExports(List enabledCloudwatchLogsExports) {
    this.enabledCloudwatchLogsExports = enabledCloudwatchLogsExports;
    return this;
  }

  /**
   * Get enabledCloudwatchLogsExports
   * @return enabledCloudwatchLogsExports
   */
  @javax.annotation.Nullable
  public List getEnabledCloudwatchLogsExports() {
    return enabledCloudwatchLogsExports;
  }

  public void setEnabledCloudwatchLogsExports(List enabledCloudwatchLogsExports) {
    this.enabledCloudwatchLogsExports = enabledCloudwatchLogsExports;
  }


  public DBInstanceListInner deletionProtection(Boolean deletionProtection) {
    this.deletionProtection = deletionProtection;
    return this;
  }

  /**
   * Get deletionProtection
   * @return deletionProtection
   */
  @javax.annotation.Nullable
  public Boolean getDeletionProtection() {
    return deletionProtection;
  }

  public void setDeletionProtection(Boolean deletionProtection) {
    this.deletionProtection = deletionProtection;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DBInstanceListInner dbInstanceListInner = (DBInstanceListInner) o;
    return Objects.equals(this.dbInstanceIdentifier, dbInstanceListInner.dbInstanceIdentifier) &&
        Objects.equals(this.dbInstanceClass, dbInstanceListInner.dbInstanceClass) &&
        Objects.equals(this.engine, dbInstanceListInner.engine) &&
        Objects.equals(this.dbInstanceStatus, dbInstanceListInner.dbInstanceStatus) &&
        Objects.equals(this.masterUsername, dbInstanceListInner.masterUsername) &&
        Objects.equals(this.dbName, dbInstanceListInner.dbName) &&
        Objects.equals(this.endpoint, dbInstanceListInner.endpoint) &&
        Objects.equals(this.allocatedStorage, dbInstanceListInner.allocatedStorage) &&
        Objects.equals(this.instanceCreateTime, dbInstanceListInner.instanceCreateTime) &&
        Objects.equals(this.preferredBackupWindow, dbInstanceListInner.preferredBackupWindow) &&
        Objects.equals(this.backupRetentionPeriod, dbInstanceListInner.backupRetentionPeriod) &&
        Objects.equals(this.dbSecurityGroups, dbInstanceListInner.dbSecurityGroups) &&
        Objects.equals(this.vpcSecurityGroups, dbInstanceListInner.vpcSecurityGroups) &&
        Objects.equals(this.dbParameterGroups, dbInstanceListInner.dbParameterGroups) &&
        Objects.equals(this.availabilityZone, dbInstanceListInner.availabilityZone) &&
        Objects.equals(this.dbSubnetGroup, dbInstanceListInner.dbSubnetGroup) &&
        Objects.equals(this.preferredMaintenanceWindow, dbInstanceListInner.preferredMaintenanceWindow) &&
        Objects.equals(this.pendingModifiedValues, dbInstanceListInner.pendingModifiedValues) &&
        Objects.equals(this.latestRestorableTime, dbInstanceListInner.latestRestorableTime) &&
        Objects.equals(this.multiAZ, dbInstanceListInner.multiAZ) &&
        Objects.equals(this.engineVersion, dbInstanceListInner.engineVersion) &&
        Objects.equals(this.autoMinorVersionUpgrade, dbInstanceListInner.autoMinorVersionUpgrade) &&
        Objects.equals(this.readReplicaSourceDBInstanceIdentifier, dbInstanceListInner.readReplicaSourceDBInstanceIdentifier) &&
        Objects.equals(this.readReplicaDBInstanceIdentifiers, dbInstanceListInner.readReplicaDBInstanceIdentifiers) &&
        Objects.equals(this.readReplicaDBClusterIdentifiers, dbInstanceListInner.readReplicaDBClusterIdentifiers) &&
        Objects.equals(this.licenseModel, dbInstanceListInner.licenseModel) &&
        Objects.equals(this.iops, dbInstanceListInner.iops) &&
        Objects.equals(this.optionGroupMemberships, dbInstanceListInner.optionGroupMemberships) &&
        Objects.equals(this.characterSetName, dbInstanceListInner.characterSetName) &&
        Objects.equals(this.secondaryAvailabilityZone, dbInstanceListInner.secondaryAvailabilityZone) &&
        Objects.equals(this.publiclyAccessible, dbInstanceListInner.publiclyAccessible) &&
        Objects.equals(this.statusInfos, dbInstanceListInner.statusInfos) &&
        Objects.equals(this.storageType, dbInstanceListInner.storageType) &&
        Objects.equals(this.tdeCredentialArn, dbInstanceListInner.tdeCredentialArn) &&
        Objects.equals(this.dbInstancePort, dbInstanceListInner.dbInstancePort) &&
        Objects.equals(this.dbClusterIdentifier, dbInstanceListInner.dbClusterIdentifier) &&
        Objects.equals(this.storageEncrypted, dbInstanceListInner.storageEncrypted) &&
        Objects.equals(this.kmsKeyId, dbInstanceListInner.kmsKeyId) &&
        Objects.equals(this.dbiResourceId, dbInstanceListInner.dbiResourceId) &&
        Objects.equals(this.caCertificateIdentifier, dbInstanceListInner.caCertificateIdentifier) &&
        Objects.equals(this.domainMemberships, dbInstanceListInner.domainMemberships) &&
        Objects.equals(this.copyTagsToSnapshot, dbInstanceListInner.copyTagsToSnapshot) &&
        Objects.equals(this.monitoringInterval, dbInstanceListInner.monitoringInterval) &&
        Objects.equals(this.enhancedMonitoringResourceArn, dbInstanceListInner.enhancedMonitoringResourceArn) &&
        Objects.equals(this.monitoringRoleArn, dbInstanceListInner.monitoringRoleArn) &&
        Objects.equals(this.promotionTier, dbInstanceListInner.promotionTier) &&
        Objects.equals(this.dbInstanceArn, dbInstanceListInner.dbInstanceArn) &&
        Objects.equals(this.timezone, dbInstanceListInner.timezone) &&
        Objects.equals(this.iaMDatabaseAuthenticationEnabled, dbInstanceListInner.iaMDatabaseAuthenticationEnabled) &&
        Objects.equals(this.performanceInsightsEnabled, dbInstanceListInner.performanceInsightsEnabled) &&
        Objects.equals(this.performanceInsightsKMSKeyId, dbInstanceListInner.performanceInsightsKMSKeyId) &&
        Objects.equals(this.enabledCloudwatchLogsExports, dbInstanceListInner.enabledCloudwatchLogsExports) &&
        Objects.equals(this.deletionProtection, dbInstanceListInner.deletionProtection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dbInstanceIdentifier, dbInstanceClass, engine, dbInstanceStatus, masterUsername, dbName, endpoint, allocatedStorage, instanceCreateTime, preferredBackupWindow, backupRetentionPeriod, dbSecurityGroups, vpcSecurityGroups, dbParameterGroups, availabilityZone, dbSubnetGroup, preferredMaintenanceWindow, pendingModifiedValues, latestRestorableTime, multiAZ, engineVersion, autoMinorVersionUpgrade, readReplicaSourceDBInstanceIdentifier, readReplicaDBInstanceIdentifiers, readReplicaDBClusterIdentifiers, licenseModel, iops, optionGroupMemberships, characterSetName, secondaryAvailabilityZone, publiclyAccessible, statusInfos, storageType, tdeCredentialArn, dbInstancePort, dbClusterIdentifier, storageEncrypted, kmsKeyId, dbiResourceId, caCertificateIdentifier, domainMemberships, copyTagsToSnapshot, monitoringInterval, enhancedMonitoringResourceArn, monitoringRoleArn, promotionTier, dbInstanceArn, timezone, iaMDatabaseAuthenticationEnabled, performanceInsightsEnabled, performanceInsightsKMSKeyId, enabledCloudwatchLogsExports, deletionProtection);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DBInstanceListInner {\n");
    sb.append("    dbInstanceIdentifier: ").append(toIndentedString(dbInstanceIdentifier)).append("\n");
    sb.append("    dbInstanceClass: ").append(toIndentedString(dbInstanceClass)).append("\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("    dbInstanceStatus: ").append(toIndentedString(dbInstanceStatus)).append("\n");
    sb.append("    masterUsername: ").append(toIndentedString(masterUsername)).append("\n");
    sb.append("    dbName: ").append(toIndentedString(dbName)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    allocatedStorage: ").append(toIndentedString(allocatedStorage)).append("\n");
    sb.append("    instanceCreateTime: ").append(toIndentedString(instanceCreateTime)).append("\n");
    sb.append("    preferredBackupWindow: ").append(toIndentedString(preferredBackupWindow)).append("\n");
    sb.append("    backupRetentionPeriod: ").append(toIndentedString(backupRetentionPeriod)).append("\n");
    sb.append("    dbSecurityGroups: ").append(toIndentedString(dbSecurityGroups)).append("\n");
    sb.append("    vpcSecurityGroups: ").append(toIndentedString(vpcSecurityGroups)).append("\n");
    sb.append("    dbParameterGroups: ").append(toIndentedString(dbParameterGroups)).append("\n");
    sb.append("    availabilityZone: ").append(toIndentedString(availabilityZone)).append("\n");
    sb.append("    dbSubnetGroup: ").append(toIndentedString(dbSubnetGroup)).append("\n");
    sb.append("    preferredMaintenanceWindow: ").append(toIndentedString(preferredMaintenanceWindow)).append("\n");
    sb.append("    pendingModifiedValues: ").append(toIndentedString(pendingModifiedValues)).append("\n");
    sb.append("    latestRestorableTime: ").append(toIndentedString(latestRestorableTime)).append("\n");
    sb.append("    multiAZ: ").append(toIndentedString(multiAZ)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    autoMinorVersionUpgrade: ").append(toIndentedString(autoMinorVersionUpgrade)).append("\n");
    sb.append("    readReplicaSourceDBInstanceIdentifier: ").append(toIndentedString(readReplicaSourceDBInstanceIdentifier)).append("\n");
    sb.append("    readReplicaDBInstanceIdentifiers: ").append(toIndentedString(readReplicaDBInstanceIdentifiers)).append("\n");
    sb.append("    readReplicaDBClusterIdentifiers: ").append(toIndentedString(readReplicaDBClusterIdentifiers)).append("\n");
    sb.append("    licenseModel: ").append(toIndentedString(licenseModel)).append("\n");
    sb.append("    iops: ").append(toIndentedString(iops)).append("\n");
    sb.append("    optionGroupMemberships: ").append(toIndentedString(optionGroupMemberships)).append("\n");
    sb.append("    characterSetName: ").append(toIndentedString(characterSetName)).append("\n");
    sb.append("    secondaryAvailabilityZone: ").append(toIndentedString(secondaryAvailabilityZone)).append("\n");
    sb.append("    publiclyAccessible: ").append(toIndentedString(publiclyAccessible)).append("\n");
    sb.append("    statusInfos: ").append(toIndentedString(statusInfos)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    tdeCredentialArn: ").append(toIndentedString(tdeCredentialArn)).append("\n");
    sb.append("    dbInstancePort: ").append(toIndentedString(dbInstancePort)).append("\n");
    sb.append("    dbClusterIdentifier: ").append(toIndentedString(dbClusterIdentifier)).append("\n");
    sb.append("    storageEncrypted: ").append(toIndentedString(storageEncrypted)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    dbiResourceId: ").append(toIndentedString(dbiResourceId)).append("\n");
    sb.append("    caCertificateIdentifier: ").append(toIndentedString(caCertificateIdentifier)).append("\n");
    sb.append("    domainMemberships: ").append(toIndentedString(domainMemberships)).append("\n");
    sb.append("    copyTagsToSnapshot: ").append(toIndentedString(copyTagsToSnapshot)).append("\n");
    sb.append("    monitoringInterval: ").append(toIndentedString(monitoringInterval)).append("\n");
    sb.append("    enhancedMonitoringResourceArn: ").append(toIndentedString(enhancedMonitoringResourceArn)).append("\n");
    sb.append("    monitoringRoleArn: ").append(toIndentedString(monitoringRoleArn)).append("\n");
    sb.append("    promotionTier: ").append(toIndentedString(promotionTier)).append("\n");
    sb.append("    dbInstanceArn: ").append(toIndentedString(dbInstanceArn)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    iaMDatabaseAuthenticationEnabled: ").append(toIndentedString(iaMDatabaseAuthenticationEnabled)).append("\n");
    sb.append("    performanceInsightsEnabled: ").append(toIndentedString(performanceInsightsEnabled)).append("\n");
    sb.append("    performanceInsightsKMSKeyId: ").append(toIndentedString(performanceInsightsKMSKeyId)).append("\n");
    sb.append("    enabledCloudwatchLogsExports: ").append(toIndentedString(enabledCloudwatchLogsExports)).append("\n");
    sb.append("    deletionProtection: ").append(toIndentedString(deletionProtection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DBInstanceIdentifier");
    openapiFields.add("DBInstanceClass");
    openapiFields.add("Engine");
    openapiFields.add("DBInstanceStatus");
    openapiFields.add("MasterUsername");
    openapiFields.add("DBName");
    openapiFields.add("Endpoint");
    openapiFields.add("AllocatedStorage");
    openapiFields.add("InstanceCreateTime");
    openapiFields.add("PreferredBackupWindow");
    openapiFields.add("BackupRetentionPeriod");
    openapiFields.add("DBSecurityGroups");
    openapiFields.add("VpcSecurityGroups");
    openapiFields.add("DBParameterGroups");
    openapiFields.add("AvailabilityZone");
    openapiFields.add("DBSubnetGroup");
    openapiFields.add("PreferredMaintenanceWindow");
    openapiFields.add("PendingModifiedValues");
    openapiFields.add("LatestRestorableTime");
    openapiFields.add("MultiAZ");
    openapiFields.add("EngineVersion");
    openapiFields.add("AutoMinorVersionUpgrade");
    openapiFields.add("ReadReplicaSourceDBInstanceIdentifier");
    openapiFields.add("ReadReplicaDBInstanceIdentifiers");
    openapiFields.add("ReadReplicaDBClusterIdentifiers");
    openapiFields.add("LicenseModel");
    openapiFields.add("Iops");
    openapiFields.add("OptionGroupMemberships");
    openapiFields.add("CharacterSetName");
    openapiFields.add("SecondaryAvailabilityZone");
    openapiFields.add("PubliclyAccessible");
    openapiFields.add("StatusInfos");
    openapiFields.add("StorageType");
    openapiFields.add("TdeCredentialArn");
    openapiFields.add("DbInstancePort");
    openapiFields.add("DBClusterIdentifier");
    openapiFields.add("StorageEncrypted");
    openapiFields.add("KmsKeyId");
    openapiFields.add("DbiResourceId");
    openapiFields.add("CACertificateIdentifier");
    openapiFields.add("DomainMemberships");
    openapiFields.add("CopyTagsToSnapshot");
    openapiFields.add("MonitoringInterval");
    openapiFields.add("EnhancedMonitoringResourceArn");
    openapiFields.add("MonitoringRoleArn");
    openapiFields.add("PromotionTier");
    openapiFields.add("DBInstanceArn");
    openapiFields.add("Timezone");
    openapiFields.add("IAMDatabaseAuthenticationEnabled");
    openapiFields.add("PerformanceInsightsEnabled");
    openapiFields.add("PerformanceInsightsKMSKeyId");
    openapiFields.add("EnabledCloudwatchLogsExports");
    openapiFields.add("DeletionProtection");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DBInstanceListInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DBInstanceListInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DBInstanceListInner is not found in the empty JSON string", DBInstanceListInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DBInstanceListInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DBInstanceListInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `DBInstanceIdentifier`
      if (jsonObj.get("DBInstanceIdentifier") != null && !jsonObj.get("DBInstanceIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DBInstanceIdentifier"));
      }
      // validate the optional field `DBInstanceClass`
      if (jsonObj.get("DBInstanceClass") != null && !jsonObj.get("DBInstanceClass").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DBInstanceClass"));
      }
      // validate the optional field `Engine`
      if (jsonObj.get("Engine") != null && !jsonObj.get("Engine").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Engine"));
      }
      // validate the optional field `DBInstanceStatus`
      if (jsonObj.get("DBInstanceStatus") != null && !jsonObj.get("DBInstanceStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DBInstanceStatus"));
      }
      // validate the optional field `MasterUsername`
      if (jsonObj.get("MasterUsername") != null && !jsonObj.get("MasterUsername").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MasterUsername"));
      }
      // validate the optional field `DBName`
      if (jsonObj.get("DBName") != null && !jsonObj.get("DBName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DBName"));
      }
      // validate the optional field `Endpoint`
      if (jsonObj.get("Endpoint") != null && !jsonObj.get("Endpoint").isJsonNull()) {
        DBInstanceEndpoint.validateJsonElement(jsonObj.get("Endpoint"));
      }
      // validate the optional field `AllocatedStorage`
      if (jsonObj.get("AllocatedStorage") != null && !jsonObj.get("AllocatedStorage").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AllocatedStorage"));
      }
      // validate the optional field `InstanceCreateTime`
      if (jsonObj.get("InstanceCreateTime") != null && !jsonObj.get("InstanceCreateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("InstanceCreateTime"));
      }
      // validate the optional field `PreferredBackupWindow`
      if (jsonObj.get("PreferredBackupWindow") != null && !jsonObj.get("PreferredBackupWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredBackupWindow"));
      }
      // validate the optional field `BackupRetentionPeriod`
      if (jsonObj.get("BackupRetentionPeriod") != null && !jsonObj.get("BackupRetentionPeriod").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("BackupRetentionPeriod"));
      }
      // validate the optional field `DBSecurityGroups`
      if (jsonObj.get("DBSecurityGroups") != null && !jsonObj.get("DBSecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DBSecurityGroups"));
      }
      // validate the optional field `VpcSecurityGroups`
      if (jsonObj.get("VpcSecurityGroups") != null && !jsonObj.get("VpcSecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("VpcSecurityGroups"));
      }
      // validate the optional field `DBParameterGroups`
      if (jsonObj.get("DBParameterGroups") != null && !jsonObj.get("DBParameterGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DBParameterGroups"));
      }
      // validate the optional field `AvailabilityZone`
      if (jsonObj.get("AvailabilityZone") != null && !jsonObj.get("AvailabilityZone").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AvailabilityZone"));
      }
      // validate the optional field `DBSubnetGroup`
      if (jsonObj.get("DBSubnetGroup") != null && !jsonObj.get("DBSubnetGroup").isJsonNull()) {
        DBInstanceDBSubnetGroup.validateJsonElement(jsonObj.get("DBSubnetGroup"));
      }
      // validate the optional field `PreferredMaintenanceWindow`
      if (jsonObj.get("PreferredMaintenanceWindow") != null && !jsonObj.get("PreferredMaintenanceWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredMaintenanceWindow"));
      }
      // validate the optional field `PendingModifiedValues`
      if (jsonObj.get("PendingModifiedValues") != null && !jsonObj.get("PendingModifiedValues").isJsonNull()) {
        DBInstancePendingModifiedValues.validateJsonElement(jsonObj.get("PendingModifiedValues"));
      }
      // validate the optional field `LatestRestorableTime`
      if (jsonObj.get("LatestRestorableTime") != null && !jsonObj.get("LatestRestorableTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LatestRestorableTime"));
      }
      // validate the optional field `MultiAZ`
      if (jsonObj.get("MultiAZ") != null && !jsonObj.get("MultiAZ").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("MultiAZ"));
      }
      // validate the optional field `EngineVersion`
      if (jsonObj.get("EngineVersion") != null && !jsonObj.get("EngineVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineVersion"));
      }
      // validate the optional field `AutoMinorVersionUpgrade`
      if (jsonObj.get("AutoMinorVersionUpgrade") != null && !jsonObj.get("AutoMinorVersionUpgrade").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AutoMinorVersionUpgrade"));
      }
      // validate the optional field `ReadReplicaSourceDBInstanceIdentifier`
      if (jsonObj.get("ReadReplicaSourceDBInstanceIdentifier") != null && !jsonObj.get("ReadReplicaSourceDBInstanceIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ReadReplicaSourceDBInstanceIdentifier"));
      }
      // validate the optional field `ReadReplicaDBInstanceIdentifiers`
      if (jsonObj.get("ReadReplicaDBInstanceIdentifiers") != null && !jsonObj.get("ReadReplicaDBInstanceIdentifiers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ReadReplicaDBInstanceIdentifiers"));
      }
      // validate the optional field `ReadReplicaDBClusterIdentifiers`
      if (jsonObj.get("ReadReplicaDBClusterIdentifiers") != null && !jsonObj.get("ReadReplicaDBClusterIdentifiers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ReadReplicaDBClusterIdentifiers"));
      }
      // validate the optional field `LicenseModel`
      if (jsonObj.get("LicenseModel") != null && !jsonObj.get("LicenseModel").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LicenseModel"));
      }
      // validate the optional field `Iops`
      if (jsonObj.get("Iops") != null && !jsonObj.get("Iops").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Iops"));
      }
      // validate the optional field `OptionGroupMemberships`
      if (jsonObj.get("OptionGroupMemberships") != null && !jsonObj.get("OptionGroupMemberships").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("OptionGroupMemberships"));
      }
      // validate the optional field `CharacterSetName`
      if (jsonObj.get("CharacterSetName") != null && !jsonObj.get("CharacterSetName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CharacterSetName"));
      }
      // validate the optional field `SecondaryAvailabilityZone`
      if (jsonObj.get("SecondaryAvailabilityZone") != null && !jsonObj.get("SecondaryAvailabilityZone").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SecondaryAvailabilityZone"));
      }
      // validate the optional field `PubliclyAccessible`
      if (jsonObj.get("PubliclyAccessible") != null && !jsonObj.get("PubliclyAccessible").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("PubliclyAccessible"));
      }
      // validate the optional field `StatusInfos`
      if (jsonObj.get("StatusInfos") != null && !jsonObj.get("StatusInfos").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("StatusInfos"));
      }
      // validate the optional field `StorageType`
      if (jsonObj.get("StorageType") != null && !jsonObj.get("StorageType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StorageType"));
      }
      // validate the optional field `TdeCredentialArn`
      if (jsonObj.get("TdeCredentialArn") != null && !jsonObj.get("TdeCredentialArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TdeCredentialArn"));
      }
      // validate the optional field `DbInstancePort`
      if (jsonObj.get("DbInstancePort") != null && !jsonObj.get("DbInstancePort").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("DbInstancePort"));
      }
      // validate the optional field `DBClusterIdentifier`
      if (jsonObj.get("DBClusterIdentifier") != null && !jsonObj.get("DBClusterIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DBClusterIdentifier"));
      }
      // validate the optional field `StorageEncrypted`
      if (jsonObj.get("StorageEncrypted") != null && !jsonObj.get("StorageEncrypted").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("StorageEncrypted"));
      }
      // validate the optional field `KmsKeyId`
      if (jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyId"));
      }
      // validate the optional field `DbiResourceId`
      if (jsonObj.get("DbiResourceId") != null && !jsonObj.get("DbiResourceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DbiResourceId"));
      }
      // validate the optional field `CACertificateIdentifier`
      if (jsonObj.get("CACertificateIdentifier") != null && !jsonObj.get("CACertificateIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CACertificateIdentifier"));
      }
      // validate the optional field `DomainMemberships`
      if (jsonObj.get("DomainMemberships") != null && !jsonObj.get("DomainMemberships").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DomainMemberships"));
      }
      // validate the optional field `CopyTagsToSnapshot`
      if (jsonObj.get("CopyTagsToSnapshot") != null && !jsonObj.get("CopyTagsToSnapshot").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CopyTagsToSnapshot"));
      }
      // validate the optional field `MonitoringInterval`
      if (jsonObj.get("MonitoringInterval") != null && !jsonObj.get("MonitoringInterval").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MonitoringInterval"));
      }
      // validate the optional field `EnhancedMonitoringResourceArn`
      if (jsonObj.get("EnhancedMonitoringResourceArn") != null && !jsonObj.get("EnhancedMonitoringResourceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EnhancedMonitoringResourceArn"));
      }
      // validate the optional field `MonitoringRoleArn`
      if (jsonObj.get("MonitoringRoleArn") != null && !jsonObj.get("MonitoringRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MonitoringRoleArn"));
      }
      // validate the optional field `PromotionTier`
      if (jsonObj.get("PromotionTier") != null && !jsonObj.get("PromotionTier").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PromotionTier"));
      }
      // validate the optional field `DBInstanceArn`
      if (jsonObj.get("DBInstanceArn") != null && !jsonObj.get("DBInstanceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DBInstanceArn"));
      }
      // validate the optional field `Timezone`
      if (jsonObj.get("Timezone") != null && !jsonObj.get("Timezone").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Timezone"));
      }
      // validate the optional field `IAMDatabaseAuthenticationEnabled`
      if (jsonObj.get("IAMDatabaseAuthenticationEnabled") != null && !jsonObj.get("IAMDatabaseAuthenticationEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IAMDatabaseAuthenticationEnabled"));
      }
      // validate the optional field `PerformanceInsightsEnabled`
      if (jsonObj.get("PerformanceInsightsEnabled") != null && !jsonObj.get("PerformanceInsightsEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("PerformanceInsightsEnabled"));
      }
      // validate the optional field `PerformanceInsightsKMSKeyId`
      if (jsonObj.get("PerformanceInsightsKMSKeyId") != null && !jsonObj.get("PerformanceInsightsKMSKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PerformanceInsightsKMSKeyId"));
      }
      // validate the optional field `EnabledCloudwatchLogsExports`
      if (jsonObj.get("EnabledCloudwatchLogsExports") != null && !jsonObj.get("EnabledCloudwatchLogsExports").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("EnabledCloudwatchLogsExports"));
      }
      // validate the optional field `DeletionProtection`
      if (jsonObj.get("DeletionProtection") != null && !jsonObj.get("DeletionProtection").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DeletionProtection"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DBInstanceListInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DBInstanceListInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DBInstanceListInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DBInstanceListInner.class));

       return (TypeAdapter<T>) new TypeAdapter<DBInstanceListInner>() {
           @Override
           public void write(JsonWriter out, DBInstanceListInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DBInstanceListInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DBInstanceListInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DBInstanceListInner
   * @throws IOException if the JSON string is invalid with respect to DBInstanceListInner
   */
  public static DBInstanceListInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DBInstanceListInner.class);
  }

  /**
   * Convert an instance of DBInstanceListInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

