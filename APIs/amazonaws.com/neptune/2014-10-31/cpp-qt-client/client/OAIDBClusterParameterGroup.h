/**
 * Amazon Neptune
 * <fullname>Amazon Neptune</fullname> <p>Amazon Neptune is a fast, reliable, fully-managed graph database service that makes it easy to build and run applications that work with highly connected datasets. The core of Amazon Neptune is a purpose-built, high-performance graph database engine optimized for storing billions of relationships and querying the graph with milliseconds latency. Amazon Neptune supports popular graph models Property Graph and W3C's RDF, and their respective query languages Apache TinkerPop Gremlin and SPARQL, allowing you to easily build queries that efficiently navigate highly connected datasets. Neptune powers graph use cases such as recommendation engines, fraud detection, knowledge graphs, drug discovery, and network security.</p> <p>This interface reference for Amazon Neptune contains documentation for a programming or command line interface you can use to manage Amazon Neptune. Note that Amazon Neptune is asynchronous, which means that some interfaces might require techniques such as polling or callback functions to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a command is applied immediately, on the next instance reboot, or during the maintenance window. The reference structure is as follows, and we list following some related topics from the user guide.</p>
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDBClusterParameterGroup.h
 *
 * &lt;p&gt;Contains the details of an Amazon Neptune DB cluster parameter group.&lt;/p&gt; &lt;p&gt;This data type is used as a response element in the &lt;a&gt;DescribeDBClusterParameterGroups&lt;/a&gt; action.&lt;/p&gt;
 */

#ifndef OAIDBClusterParameterGroup_H
#define OAIDBClusterParameterGroup_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDBClusterParameterGroup : public OAIObject {
public:
    OAIDBClusterParameterGroup();
    OAIDBClusterParameterGroup(QString json);
    ~OAIDBClusterParameterGroup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDbClusterParameterGroupName() const;
    void setDbClusterParameterGroupName(const QString &db_cluster_parameter_group_name);
    bool is_db_cluster_parameter_group_name_Set() const;
    bool is_db_cluster_parameter_group_name_Valid() const;

    QString getDbParameterGroupFamily() const;
    void setDbParameterGroupFamily(const QString &db_parameter_group_family);
    bool is_db_parameter_group_family_Set() const;
    bool is_db_parameter_group_family_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDbClusterParameterGroupArn() const;
    void setDbClusterParameterGroupArn(const QString &db_cluster_parameter_group_arn);
    bool is_db_cluster_parameter_group_arn_Set() const;
    bool is_db_cluster_parameter_group_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_db_cluster_parameter_group_name;
    bool m_db_cluster_parameter_group_name_isSet;
    bool m_db_cluster_parameter_group_name_isValid;

    QString m_db_parameter_group_family;
    bool m_db_parameter_group_family_isSet;
    bool m_db_parameter_group_family_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_db_cluster_parameter_group_arn;
    bool m_db_cluster_parameter_group_arn_isSet;
    bool m_db_cluster_parameter_group_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDBClusterParameterGroup)

#endif // OAIDBClusterParameterGroup_H
