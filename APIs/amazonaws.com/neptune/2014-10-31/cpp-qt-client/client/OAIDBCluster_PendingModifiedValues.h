/**
 * Amazon Neptune
 * <fullname>Amazon Neptune</fullname> <p>Amazon Neptune is a fast, reliable, fully-managed graph database service that makes it easy to build and run applications that work with highly connected datasets. The core of Amazon Neptune is a purpose-built, high-performance graph database engine optimized for storing billions of relationships and querying the graph with milliseconds latency. Amazon Neptune supports popular graph models Property Graph and W3C's RDF, and their respective query languages Apache TinkerPop Gremlin and SPARQL, allowing you to easily build queries that efficiently navigate highly connected datasets. Neptune powers graph use cases such as recommendation engines, fraud detection, knowledge graphs, drug discovery, and network security.</p> <p>This interface reference for Amazon Neptune contains documentation for a programming or command line interface you can use to manage Amazon Neptune. Note that Amazon Neptune is asynchronous, which means that some interfaces might require techniques such as polling or callback functions to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a command is applied immediately, on the next instance reboot, or during the maintenance window. The reference structure is as follows, and we list following some related topics from the user guide.</p>
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDBCluster_PendingModifiedValues.h
 *
 * 
 */

#ifndef OAIDBCluster_PendingModifiedValues_H
#define OAIDBCluster_PendingModifiedValues_H

#include <QJsonObject>

#include "OAIClusterPendingModifiedValues_PendingCloudwatchLogsExports.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClusterPendingModifiedValues_PendingCloudwatchLogsExports;

class OAIDBCluster_PendingModifiedValues : public OAIObject {
public:
    OAIDBCluster_PendingModifiedValues();
    OAIDBCluster_PendingModifiedValues(QString json);
    ~OAIDBCluster_PendingModifiedValues() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIClusterPendingModifiedValues_PendingCloudwatchLogsExports getPendingCloudwatchLogsExports() const;
    void setPendingCloudwatchLogsExports(const OAIClusterPendingModifiedValues_PendingCloudwatchLogsExports &pending_cloudwatch_logs_exports);
    bool is_pending_cloudwatch_logs_exports_Set() const;
    bool is_pending_cloudwatch_logs_exports_Valid() const;

    QString getDbClusterIdentifier() const;
    void setDbClusterIdentifier(const QString &db_cluster_identifier);
    bool is_db_cluster_identifier_Set() const;
    bool is_db_cluster_identifier_Valid() const;

    bool getIamDatabaseAuthenticationEnabled() const;
    void setIamDatabaseAuthenticationEnabled(const bool &iam_database_authentication_enabled);
    bool is_iam_database_authentication_enabled_Set() const;
    bool is_iam_database_authentication_enabled_Valid() const;

    QString getEngineVersion() const;
    void setEngineVersion(const QString &engine_version);
    bool is_engine_version_Set() const;
    bool is_engine_version_Valid() const;

    qint32 getBackupRetentionPeriod() const;
    void setBackupRetentionPeriod(const qint32 &backup_retention_period);
    bool is_backup_retention_period_Set() const;
    bool is_backup_retention_period_Valid() const;

    qint32 getAllocatedStorage() const;
    void setAllocatedStorage(const qint32 &allocated_storage);
    bool is_allocated_storage_Set() const;
    bool is_allocated_storage_Valid() const;

    qint32 getIops() const;
    void setIops(const qint32 &iops);
    bool is_iops_Set() const;
    bool is_iops_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIClusterPendingModifiedValues_PendingCloudwatchLogsExports m_pending_cloudwatch_logs_exports;
    bool m_pending_cloudwatch_logs_exports_isSet;
    bool m_pending_cloudwatch_logs_exports_isValid;

    QString m_db_cluster_identifier;
    bool m_db_cluster_identifier_isSet;
    bool m_db_cluster_identifier_isValid;

    bool m_iam_database_authentication_enabled;
    bool m_iam_database_authentication_enabled_isSet;
    bool m_iam_database_authentication_enabled_isValid;

    QString m_engine_version;
    bool m_engine_version_isSet;
    bool m_engine_version_isValid;

    qint32 m_backup_retention_period;
    bool m_backup_retention_period_isSet;
    bool m_backup_retention_period_isValid;

    qint32 m_allocated_storage;
    bool m_allocated_storage_isSet;
    bool m_allocated_storage_isValid;

    qint32 m_iops;
    bool m_iops_isSet;
    bool m_iops_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDBCluster_PendingModifiedValues)

#endif // OAIDBCluster_PendingModifiedValues_H
