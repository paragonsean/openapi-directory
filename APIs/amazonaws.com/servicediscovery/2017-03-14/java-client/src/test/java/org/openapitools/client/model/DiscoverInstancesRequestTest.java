/*
 * AWS Cloud Map
 * <fullname>Cloud Map</fullname> <p>With Cloud Map, you can configure public DNS, private DNS, or HTTP namespaces that your microservice applications run in. When an instance becomes available, you can call the Cloud Map API to register the instance with Cloud Map. For public or private DNS namespaces, Cloud Map automatically creates DNS records and an optional health check. Clients that submit public or private DNS queries, or HTTP requests, for the service receive an answer that contains up to eight healthy records. </p>
 *
 * The version of the OpenAPI document: 2017-03-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.HealthStatusFilter;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DiscoverInstancesRequest
 */
public class DiscoverInstancesRequestTest {
    private final DiscoverInstancesRequest model = new DiscoverInstancesRequest();

    /**
     * Model tests for DiscoverInstancesRequest
     */
    @Test
    public void testDiscoverInstancesRequest() {
        // TODO: test DiscoverInstancesRequest
    }

    /**
     * Test the property 'namespaceName'
     */
    @Test
    public void namespaceNameTest() {
        // TODO: test namespaceName
    }

    /**
     * Test the property 'serviceName'
     */
    @Test
    public void serviceNameTest() {
        // TODO: test serviceName
    }

    /**
     * Test the property 'maxResults'
     */
    @Test
    public void maxResultsTest() {
        // TODO: test maxResults
    }

    /**
     * Test the property 'queryParameters'
     */
    @Test
    public void queryParametersTest() {
        // TODO: test queryParameters
    }

    /**
     * Test the property 'optionalParameters'
     */
    @Test
    public void optionalParametersTest() {
        // TODO: test optionalParameters
    }

    /**
     * Test the property 'healthStatus'
     */
    @Test
    public void healthStatusTest() {
        // TODO: test healthStatus
    }

}
