openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>Cloud Map</fullname> <p>With Cloud Map, you can configure\
    \ public DNS, private DNS, or HTTP namespaces that your microservice applications\
    \ run in. When an instance becomes available, you can call the Cloud Map API to\
    \ register the instance with Cloud Map. For public or private DNS namespaces,\
    \ Cloud Map automatically creates DNS records and an optional health check. Clients\
    \ that submit public or private DNS queries, or HTTP requests, for the service\
    \ receive an answer that contains up to eight healthy records. </p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Cloud Map
  version: 2017-03-14
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: servicediscovery
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/servicediscovery-2017-03-14.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/servicediscovery/
servers:
- description: The ServiceDiscovery multi-region endpoint
  url: "http://servicediscovery.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The ServiceDiscovery multi-region endpoint
  url: "https://servicediscovery.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The ServiceDiscovery endpoint for China (Beijing) and China (Ningxia)
  url: "http://servicediscovery.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The ServiceDiscovery endpoint for China (Beijing) and China (Ningxia)
  url: "https://servicediscovery.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=Route53AutoNaming_v20170314.CreateHttpNamespace:
    post:
      description: "<p>Creates an HTTP namespace. Service instances registered using\
        \ an HTTP namespace can be discovered using a <code>DiscoverInstances</code>\
        \ request but can't be discovered using DNS.</p> <p>For the current quota\
        \ on the number of namespaces that you can create using the same Amazon Web\
        \ Services account, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\"\
        >Cloud Map quotas</a> in the <i>Cloud Map Developer Guide</i>.</p>"
      operationId: CreateHttpNamespace
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.CreateHttpNamespace
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHttpNamespaceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHttpNamespaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceAlreadyExists'
          description: NamespaceAlreadyExists
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
          description: ResourceLimitExceeded
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRequest'
          description: DuplicateRequest
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.CreatePrivateDnsNamespace:
    post:
      description: "Creates a private namespace based on DNS, which is visible only\
        \ inside a specified Amazon VPC. The namespace defines your service naming\
        \ scheme. For example, if you name your namespace <code>example.com</code>\
        \ and name your service <code>backend</code>, the resulting DNS name for the\
        \ service is <code>backend.example.com</code>. Service instances that are\
        \ registered using a private DNS namespace can be discovered using either\
        \ a <code>DiscoverInstances</code> request or using DNS. For the current quota\
        \ on the number of namespaces that you can create using the same Amazon Web\
        \ Services account, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\"\
        >Cloud Map quotas</a> in the <i>Cloud Map Developer Guide</i>."
      operationId: CreatePrivateDnsNamespace
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.CreatePrivateDnsNamespace
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePrivateDnsNamespaceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePrivateDnsNamespaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceAlreadyExists'
          description: NamespaceAlreadyExists
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
          description: ResourceLimitExceeded
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRequest'
          description: DuplicateRequest
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.CreatePublicDnsNamespace:
    post:
      description: "<p>Creates a public namespace based on DNS, which is visible on\
        \ the internet. The namespace defines your service naming scheme. For example,\
        \ if you name your namespace <code>example.com</code> and name your service\
        \ <code>backend</code>, the resulting DNS name for the service is <code>backend.example.com</code>.\
        \ You can discover instances that were registered with a public DNS namespace\
        \ by using either a <code>DiscoverInstances</code> request or using DNS. For\
        \ the current quota on the number of namespaces that you can create using\
        \ the same Amazon Web Services account, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\"\
        >Cloud Map quotas</a> in the <i>Cloud Map Developer Guide</i>.</p> <important>\
        \ <p>The <code>CreatePublicDnsNamespace</code> API operation is not supported\
        \ in the Amazon Web Services GovCloud (US) Regions.</p> </important>"
      operationId: CreatePublicDnsNamespace
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.CreatePublicDnsNamespace
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePublicDnsNamespaceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePublicDnsNamespaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceAlreadyExists'
          description: NamespaceAlreadyExists
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
          description: ResourceLimitExceeded
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRequest'
          description: DuplicateRequest
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.CreateService:
    post:
      description: "<p>Creates a service. This action defines the configuration for\
        \ the following entities:</p> <ul> <li> <p>For public and private DNS namespaces,\
        \ one of the following combinations of DNS records in Amazon Route\_53:</p>\
        \ <ul> <li> <p> <code>A</code> </p> </li> <li> <p> <code>AAAA</code> </p>\
        \ </li> <li> <p> <code>A</code> and <code>AAAA</code> </p> </li> <li> <p>\
        \ <code>SRV</code> </p> </li> <li> <p> <code>CNAME</code> </p> </li> </ul>\
        \ </li> <li> <p>Optionally, a health check</p> </li> </ul> <p>After you create\
        \ the service, you can submit a <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html\"\
        >RegisterInstance</a> request, and Cloud Map uses the values in the configuration\
        \ to create the specified entities.</p> <p>For the current quota on the number\
        \ of instances that you can register using the same namespace and using the\
        \ same service, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\"\
        >Cloud Map quotas</a> in the <i>Cloud Map Developer Guide</i>.</p>"
      operationId: CreateService
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.CreateService
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
          description: ResourceLimitExceeded
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNotFound'
          description: NamespaceNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAlreadyExists'
          description: ServiceAlreadyExists
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.DeleteNamespace:
    post:
      description: "Deletes a namespace from the current account. If the namespace\
        \ still contains one or more services, the request fails."
      operationId: DeleteNamespace
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.DeleteNamespace
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteNamespaceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteNamespaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNotFound'
          description: NamespaceNotFound
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
          description: ResourceInUse
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRequest'
          description: DuplicateRequest
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.DeleteService:
    post:
      description: "Deletes a specified service. If the service still contains one\
        \ or more registered instances, the request fails."
      operationId: DeleteService
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.DeleteService
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteServiceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNotFound'
          description: ServiceNotFound
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
          description: ResourceInUse
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.DeregisterInstance:
    post:
      description: "Deletes the Amazon Route\_53 DNS records and health check, if\
        \ any, that Cloud Map created for the specified instance."
      operationId: DeregisterInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.DeregisterInstance
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterInstanceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterInstanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRequest'
          description: DuplicateRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceNotFound'
          description: InstanceNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
          description: ResourceInUse
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNotFound'
          description: ServiceNotFound
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.DiscoverInstances:
    post:
      description: "Discovers registered instances for a specified namespace and service.\
        \ You can use <code>DiscoverInstances</code> to discover instances for any\
        \ type of namespace. For public and private DNS namespaces, you can also use\
        \ DNS queries to discover instances."
      operationId: DiscoverInstances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.DiscoverInstances
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoverInstancesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverInstancesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNotFound'
          description: ServiceNotFound
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNotFound'
          description: NamespaceNotFound
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLimitExceeded'
          description: RequestLimitExceeded
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.GetInstance:
    post:
      description: Gets information about a specified instance.
      operationId: GetInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.GetInstance
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstanceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceNotFound'
          description: InstanceNotFound
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNotFound'
          description: ServiceNotFound
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.GetInstancesHealthStatus:
    post:
      description: "<p>Gets the current health status (<code>Healthy</code>, <code>Unhealthy</code>,\
        \ or <code>Unknown</code>) of one or more instances that are associated with\
        \ a specified service.</p> <note> <p>There's a brief delay between when you\
        \ register an instance and when the health status for the instance is available.\
        \ </p> </note>"
      operationId: GetInstancesHealthStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.GetInstancesHealthStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstancesHealthStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstancesHealthStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceNotFound'
          description: InstanceNotFound
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNotFound'
          description: ServiceNotFound
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.GetNamespace:
    post:
      description: Gets information about a namespace.
      operationId: GetNamespace
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.GetNamespace
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetNamespaceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNamespaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNotFound'
          description: NamespaceNotFound
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.GetOperation:
    post:
      description: "<p>Gets information about any operation that returns an operation\
        \ ID in the response, such as a <code>CreateService</code> request.</p> <note>\
        \ <p>To get a list of operations that match specified criteria, see <a href=\"\
        https://docs.aws.amazon.com/cloud-map/latest/api/API_ListOperations.html\"\
        >ListOperations</a>.</p> </note>"
      operationId: GetOperation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.GetOperation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOperationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOperationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotFound'
          description: OperationNotFound
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.GetService:
    post:
      description: Gets the settings for a specified service.
      operationId: GetService
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.GetService
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNotFound'
          description: ServiceNotFound
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.ListInstances:
    post:
      description: Lists summary information about the instances that you registered
        by using a specified service.
      operationId: ListInstances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.ListInstances
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInstancesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNotFound'
          description: ServiceNotFound
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.ListNamespaces:
    post:
      description: Lists summary information about the namespaces that were created
        by the current Amazon Web Services account.
      operationId: ListNamespaces
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.ListNamespaces
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListNamespacesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNamespacesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.ListOperations:
    post:
      description: Lists operations that match the criteria that you specify.
      operationId: ListOperations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.ListOperations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOperationsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.ListServices:
    post:
      description: Lists summary information for all the services that are associated
        with one or more specified namespaces.
      operationId: ListServices
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.ListServices
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServicesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServicesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.ListTagsForResource:
    post:
      description: Lists tags for the specified resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.RegisterInstance:
    post:
      description: "<p>Creates or updates one or more records and, optionally, creates\
        \ a health check based on the settings in a specified service. When you submit\
        \ a <code>RegisterInstance</code> request, the following occurs:</p> <ul>\
        \ <li> <p>For each DNS record that you define in the service that's specified\
        \ by <code>ServiceId</code>, a record is created or updated in the hosted\
        \ zone that's associated with the corresponding namespace.</p> </li> <li>\
        \ <p>If the service includes <code>HealthCheckConfig</code>, a health check\
        \ is created based on the settings in the health check configuration.</p>\
        \ </li> <li> <p>The health check, if any, is associated with each of the new\
        \ or updated records.</p> </li> </ul> <important> <p>One <code>RegisterInstance</code>\
        \ request must complete before you can submit another request and specify\
        \ the same service ID and instance ID.</p> </important> <p>For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html\"\
        >CreateService</a>.</p> <p>When Cloud Map receives a DNS query for the specified\
        \ DNS name, it returns the applicable value:</p> <ul> <li> <p> <b>If the health\
        \ check is healthy</b>: returns all the records</p> </li> <li> <p> <b>If the\
        \ health check is unhealthy</b>: returns the applicable value for the last\
        \ healthy instance</p> </li> <li> <p> <b>If you didn't specify a health check\
        \ configuration</b>: returns all the records</p> </li> </ul> <p>For the current\
        \ quota on the number of instances that you can register using the same namespace\
        \ and using the same service, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\"\
        >Cloud Map quotas</a> in the <i>Cloud Map Developer Guide</i>.</p>"
      operationId: RegisterInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.RegisterInstance
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterInstanceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterInstanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRequest'
          description: DuplicateRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
          description: ResourceInUse
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
          description: ResourceLimitExceeded
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNotFound'
          description: ServiceNotFound
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.TagResource:
    post:
      description: Adds one or more tags to the specified resource.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.UntagResource:
    post:
      description: Removes one or more tags from the specified resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.UpdateHttpNamespace:
    post:
      description: Updates an HTTP namespace.
      operationId: UpdateHttpNamespace
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.UpdateHttpNamespace
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHttpNamespaceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateHttpNamespaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNotFound'
          description: NamespaceNotFound
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
          description: ResourceInUse
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRequest'
          description: DuplicateRequest
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.UpdateInstanceCustomHealthStatus:
    post:
      description: "<p>Submits a request to change the health status of a custom health\
        \ check to healthy or unhealthy.</p> <p>You can use <code>UpdateInstanceCustomHealthStatus</code>\
        \ to change the status only for custom health checks, which you define using\
        \ <code>HealthCheckCustomConfig</code> when you create a service. You can't\
        \ use it to change the status for Route\_53 health checks, which you define\
        \ using <code>HealthCheckConfig</code>.</p> <p>For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_HealthCheckCustomConfig.html\"\
        >HealthCheckCustomConfig</a>.</p>"
      operationId: UpdateInstanceCustomHealthStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.UpdateInstanceCustomHealthStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstanceCustomHealthStatusRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceNotFound'
          description: InstanceNotFound
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNotFound'
          description: ServiceNotFound
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomHealthNotFound'
          description: CustomHealthNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.UpdatePrivateDnsNamespace:
    post:
      description: Updates a private DNS namespace.
      operationId: UpdatePrivateDnsNamespace
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.UpdatePrivateDnsNamespace
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePrivateDnsNamespaceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePrivateDnsNamespaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNotFound'
          description: NamespaceNotFound
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
          description: ResourceInUse
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRequest'
          description: DuplicateRequest
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.UpdatePublicDnsNamespace:
    post:
      description: Updates a public DNS namespace.
      operationId: UpdatePublicDnsNamespace
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.UpdatePublicDnsNamespace
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePublicDnsNamespaceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePublicDnsNamespaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNotFound'
          description: NamespaceNotFound
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
          description: ResourceInUse
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRequest'
          description: DuplicateRequest
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=Route53AutoNaming_v20170314.UpdateService:
    post:
      description: "<p>Submits a request to perform the following operations:</p>\
        \ <ul> <li> <p>Update the TTL setting for existing <code>DnsRecords</code>\
        \ configurations</p> </li> <li> <p>Add, update, or delete <code>HealthCheckConfig</code>\
        \ for a specified service</p> <note> <p>You can't add, update, or delete a\
        \ <code>HealthCheckCustomConfig</code> configuration.</p> </note> </li> </ul>\
        \ <p>For public and private DNS namespaces, note the following:</p> <ul> <li>\
        \ <p>If you omit any existing <code>DnsRecords</code> or <code>HealthCheckConfig</code>\
        \ configurations from an <code>UpdateService</code> request, the configurations\
        \ are deleted from the service.</p> </li> <li> <p>If you omit an existing\
        \ <code>HealthCheckCustomConfig</code> configuration from an <code>UpdateService</code>\
        \ request, the configuration isn't deleted from the service.</p> </li> </ul>\
        \ <p>When you update settings for a service, Cloud Map also updates the corresponding\
        \ settings in all the records and health checks that were created by using\
        \ the specified service.</p>"
      operationId: UpdateService
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53AutoNaming_v20170314.UpdateService
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRequest'
          description: DuplicateRequest
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInput'
          description: InvalidInput
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNotFound'
          description: ServiceNotFound
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateHttpNamespaceResponse:
      example:
        OperationId: httpvoqozuhfet5kzxoxg-a-response-example
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          - description: "A value that you can use to determine whether the request\
              \ completed successfully. To get the status of the operation, see <a\
              \ href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\"\
              >GetOperation</a>."
      type: object
    CreateHttpNamespaceRequest:
      example:
        Description: ""
        CreatorRequestId: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NamespaceNameHttp'
          - description: The name that you want to assign to this namespace.
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: "A unique string that identifies the request and that allows\
              \ failed <code>CreateHttpNamespace</code> requests to be retried without\
              \ the risk of running the operation twice. <code>CreatorRequestId</code>\
              \ can be any unique string (for example, a date/time stamp)."
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: A description for the namespace.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "The tags to add to the namespace. Each tag consists of a\
              \ key and an optional value that you define. Tags keys can be up to\
              \ 128 characters in length, and tag values can be up to 256 characters\
              \ in length."
      required:
      - Name
      title: CreateHttpNamespaceRequest
      type: object
    InvalidInput: {}
    NamespaceAlreadyExists: {}
    ResourceLimitExceeded: {}
    DuplicateRequest: {}
    TooManyTagsException: {}
    CreatePrivateDnsNamespaceResponse:
      example:
        OperationId: gv4g5meo7ndmeh4fqskygvk23d2fijwa-k9302yzd
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          - description: "A value that you can use to determine whether the request\
              \ completed successfully. To get the status of the operation, see <a\
              \ href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\"\
              >GetOperation</a>."
      type: object
    CreatePrivateDnsNamespaceRequest:
      example:
        Description: ""
        Vpc: ""
        Properties:
          DnsProperties:
            SOA:
              TTL: ""
        CreatorRequestId: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NamespaceNamePrivate'
          - description: "The name that you want to assign to this namespace. When\
              \ you create a private DNS namespace, Cloud Map automatically creates\
              \ an Amazon Route\_53 private hosted zone that has the same name as\
              \ the namespace."
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: "A unique string that identifies the request and that allows\
              \ failed <code>CreatePrivateDnsNamespace</code> requests to be retried\
              \ without the risk of running the operation twice. <code>CreatorRequestId</code>\
              \ can be any unique string (for example, a date/timestamp)."
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: A description for the namespace.
        Vpc:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Amazon VPC that you want to associate the namespace
              with.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "The tags to add to the namespace. Each tag consists of a\
              \ key and an optional value that you define. Tags keys can be up to\
              \ 128 characters in length, and tag values can be up to 256 characters\
              \ in length."
        Properties:
          $ref: '#/components/schemas/CreatePrivateDnsNamespaceRequest_Properties'
      required:
      - Name
      - Vpc
      title: CreatePrivateDnsNamespaceRequest
      type: object
    CreatePublicDnsNamespaceResponse:
      example:
        OperationId: dns2voqozuhfet5kzxoxg-a-response-example
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          - description: "A value that you can use to determine whether the request\
              \ completed successfully. To get the status of the operation, see <a\
              \ href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\"\
              >GetOperation</a>."
      type: object
    CreatePublicDnsNamespaceRequest:
      example:
        Description: ""
        Properties:
          DnsProperties:
            SOA:
              TTL: ""
        CreatorRequestId: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NamespaceNamePublic'
          - description: <p>The name that you want to assign to this namespace.</p>
              <note> <p>Do not include sensitive information in the name. The name
              is publicly available using DNS queries.</p> </note>
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: "A unique string that identifies the request and that allows\
              \ failed <code>CreatePublicDnsNamespace</code> requests to be retried\
              \ without the risk of running the operation twice. <code>CreatorRequestId</code>\
              \ can be any unique string (for example, a date/timestamp)."
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: A description for the namespace.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "The tags to add to the namespace. Each tag consists of a\
              \ key and an optional value that you define. Tags keys can be up to\
              \ 128 characters in length, and tag values can be up to 256 characters\
              \ in length."
        Properties:
          $ref: '#/components/schemas/CreatePublicDnsNamespaceRequest_Properties'
      required:
      - Name
      title: CreatePublicDnsNamespaceRequest
      type: object
    CreateServiceResponse:
      example:
        Service:
          Arn: arn:aws:servicediscovery:us-west-2:123456789012:service/srv-p5zdwlg5uvvzjita
          CreateDate: 1.587081768334E9
          CreatorRequestId: 567c1193-6b00-4308-bd57-ad38a8822d25
          DnsConfig:
            DnsRecords:
            - TTL: 60
              Type: A
            NamespaceId: ns-ylexjili4cdxy3xm
            RoutingPolicy: MULTIVALUE
          Id: srv-p5zdwlg5uvvzjita
          Name: myservice
          NamespaceId: ns-ylexjili4cdxy3xm
      properties:
        Service:
          $ref: '#/components/schemas/CreateServiceResponse_Service'
      type: object
    CreateServiceRequest:
      example:
        Type: ""
        Description: ""
        HealthCheckCustomConfig:
          FailureThreshold: ""
        DnsConfig:
          DnsRecords: ""
          RoutingPolicy: ""
          NamespaceId: ""
        NamespaceId: ""
        HealthCheckConfig:
          Type: ""
          ResourcePath: ""
          FailureThreshold: ""
        CreatorRequestId: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: "<p>The name that you want to assign to the service.</p>\
              \ <note> <p>Do not include sensitive information in the name if the\
              \ namespace is discoverable by public DNS queries.</p> </note> <p>If\
              \ you want Cloud Map to create an <code>SRV</code> record when you register\
              \ an instance and you're using a system that requires a specific <code>SRV</code>\
              \ format, such as <a href=\"http://www.haproxy.org/\">HAProxy</a>, specify\
              \ the following for <code>Name</code>:</p> <ul> <li> <p>Start the name\
              \ with an underscore (_), such as <code>_exampleservice</code>.</p>\
              \ </li> <li> <p>End the name with <i>._protocol</i>, such as <code>._tcp</code>.</p>\
              \ </li> </ul> <p>When you register an instance, Cloud Map creates an\
              \ <code>SRV</code> record and assigns a name to the record by concatenating\
              \ the service name and the namespace name (for example,</p> <p> <code>_exampleservice._tcp.example.com</code>).</p>\
              \ <note> <p>For services that are accessible by DNS queries, you can't\
              \ create multiple services with names that differ only by case (such\
              \ as EXAMPLE and example). Otherwise, these services have the same DNS\
              \ name and can't be distinguished. However, if you use a namespace that's\
              \ only accessible by API calls, then you can create services that with\
              \ names that differ only by case.</p> </note>"
        NamespaceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: "The ID of the namespace that you want to use to create the\
              \ service. The namespace ID must be specified, but it can be specified\
              \ either here or in the <code>DnsConfig</code> object."
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: "A unique string that identifies the request and that allows\
              \ failed <code>CreateService</code> requests to be retried without the\
              \ risk of running the operation twice. <code>CreatorRequestId</code>\
              \ can be any unique string (for example, a date/timestamp)."
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: A description for the service.
        DnsConfig:
          $ref: '#/components/schemas/CreateServiceRequest_DnsConfig'
        HealthCheckConfig:
          $ref: '#/components/schemas/CreateServiceRequest_HealthCheckConfig'
        HealthCheckCustomConfig:
          $ref: '#/components/schemas/CreateServiceRequest_HealthCheckCustomConfig'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "The tags to add to the service. Each tag consists of a key\
              \ and an optional value that you define. Tags keys can be up to 128\
              \ characters in length, and tag values can be up to 256 characters in\
              \ length."
        Type:
          allOf:
          - $ref: '#/components/schemas/ServiceTypeOption'
          - description: "If present, specifies that the service instances are only\
              \ discoverable using the <code>DiscoverInstances</code> API operation.\
              \ No DNS records is registered for the service instances. The only valid\
              \ value is <code>HTTP</code>."
      required:
      - Name
      title: CreateServiceRequest
      type: object
    NamespaceNotFound: {}
    ServiceAlreadyExists: {}
    DeleteNamespaceResponse:
      example:
        OperationId: gv4g5meo7ndmeh4fqskygvk23d2fijwa-k98y6drk
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          - description: "A value that you can use to determine whether the request\
              \ completed successfully. To get the status of the operation, see <a\
              \ href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\"\
              >GetOperation</a>."
      type: object
    DeleteNamespaceRequest:
      example:
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the namespace that you want to delete.
      required:
      - Id
      title: DeleteNamespaceRequest
      type: object
    ResourceInUse: {}
    DeleteServiceResponse:
      example: {}
      properties: {}
      type: object
    DeleteServiceRequest:
      example:
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the service that you want to delete.
      required:
      - Id
      title: DeleteServiceRequest
      type: object
    ServiceNotFound: {}
    DeregisterInstanceResponse:
      example:
        OperationId: 4yejorelbukcjzpnr6tlmrghsjwpngf4-k98rnaiq
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          - description: "A value that you can use to determine whether the request\
              \ completed successfully. To get the status of the operation, see <a\
              \ href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\"\
              >GetOperation</a>."
      type: object
    DeregisterInstanceRequest:
      example:
        InstanceId: ""
        ServiceId: ""
      properties:
        ServiceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the service that the instance is associated with.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The value that you specified for <code>Id</code> in the <a
              href="https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html">RegisterInstance</a>
              request.
      required:
      - InstanceId
      - ServiceId
      title: DeregisterInstanceRequest
      type: object
    InstanceNotFound: {}
    DiscoverInstancesResponse:
      example:
        Instances:
        - Attributes:
            AWS_INSTANCE_IPV4: 172.2.1.3
            AWS_INSTANCE_PORT: "808"
          HealthStatus: UNKNOWN
          InstanceId: myservice-53
          NamespaceName: example.com
          ServiceName: myservice
      properties:
        Instances:
          allOf:
          - $ref: '#/components/schemas/HttpInstanceSummaryList'
          - description: A complex type that contains one <code>HttpInstanceSummary</code>
              for each registered instance.
      type: object
    DiscoverInstancesRequest:
      example:
        NamespaceName: ""
        OptionalParameters: ""
        ServiceName: ""
        MaxResults: ""
        HealthStatus: ""
        QueryParameters: ""
      properties:
        NamespaceName:
          allOf:
          - $ref: '#/components/schemas/NamespaceName'
          - description: The <code>HttpName</code> name of the namespace. It's found
              in the <code>HttpProperties</code> member of the <code>Properties</code>
              member of the namespace.
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the service that you specified when you registered
              the instance.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/DiscoverMaxResults'
          - description: "The maximum number of instances that you want Cloud Map\
              \ to return in the response to a <code>DiscoverInstances</code> request.\
              \ If you don't specify a value for <code>MaxResults</code>, Cloud Map\
              \ returns up to 100 instances."
        QueryParameters:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: "Filters to scope the results based on custom attributes\
              \ for the instance (for example, <code>{version=v1, az=1a}</code>).\
              \ Only instances that match all the specified key-value pairs are returned."
        OptionalParameters:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: "Opportunistic filters to scope the results based on custom\
              \ attributes. If there are instances that match both the filters specified\
              \ in both the <code>QueryParameters</code> parameter and this parameter,\
              \ all of these instances are returned. Otherwise, the filters are ignored,\
              \ and only instances that match the filters that are specified in the\
              \ <code>QueryParameters</code> parameter are returned."
        HealthStatus:
          allOf:
          - $ref: '#/components/schemas/HealthStatusFilter'
          - description: "<p>The health status of the instances that you want to discover.\
              \ This parameter is ignored for services that don't have a health check\
              \ configured, and all instances are returned.</p> <dl> <dt>HEALTHY</dt>\
              \ <dd> <p>Returns healthy instances.</p> </dd> <dt>UNHEALTHY</dt> <dd>\
              \ <p>Returns unhealthy instances.</p> </dd> <dt>ALL</dt> <dd> <p>Returns\
              \ all instances.</p> </dd> <dt>HEALTHY_OR_ELSE_ALL</dt> <dd> <p>Returns\
              \ healthy instances, unless none are reporting a healthy state. In that\
              \ case, return all instances. This is also called failing open.</p>\
              \ </dd> </dl>"
      required:
      - NamespaceName
      - ServiceName
      title: DiscoverInstancesRequest
      type: object
    RequestLimitExceeded: {}
    GetInstanceResponse:
      example:
        Instance:
          Attributes:
            AWS_INSTANCE_IPV4: 192.0.2.44
            AWS_INSTANCE_PORT: "80"
            color: green
            region: us-west-2
            stage: beta
          Id: i-abcd1234
      properties:
        Instance:
          $ref: '#/components/schemas/GetInstanceResponse_Instance'
      type: object
    GetInstanceRequest:
      example:
        InstanceId: ""
        ServiceId: ""
      properties:
        ServiceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the service that the instance is associated with.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the instance that you want to get information about.
      required:
      - InstanceId
      - ServiceId
      title: GetInstanceRequest
      type: object
    GetInstancesHealthStatusResponse:
      example:
        Status:
          i-abcd1234: HEALTHY
          i-abcd1235: UNHEALTHY
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/InstanceHealthStatusMap'
          - description: A complex type that contains the IDs and the health status
              of the instances that you specified in the <code>GetInstancesHealthStatus</code>
              request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If more than <code>MaxResults</code> instances match the\
              \ specified criteria, you can submit another <code>GetInstancesHealthStatus</code>\
              \ request to get the next group of results. Specify the value of <code>NextToken</code>\
              \ from the previous response in the next request."
      type: object
    GetInstancesHealthStatusRequest:
      example:
        Instances: ""
        NextToken: ""
        MaxResults: ""
        ServiceId: ""
      properties:
        ServiceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the service that the instance is associated with.
        Instances:
          allOf:
          - $ref: '#/components/schemas/InstanceIdList'
          - description: "<p>An array that contains the IDs of all the instances that\
              \ you want to get the health status for.</p> <p>If you omit <code>Instances</code>,\
              \ Cloud Map returns the health status for all the instances that are\
              \ associated with the specified service.</p> <note> <p>To get the IDs\
              \ for the instances that you've registered by using a specified service,\
              \ submit a <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_ListInstances.html\"\
              >ListInstances</a> request.</p> </note>"
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of instances that you want Cloud Map\
              \ to return in the response to a <code>GetInstancesHealthStatus</code>\
              \ request. If you don't specify a value for <code>MaxResults</code>,\
              \ Cloud Map returns up to 100 instances."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first <code>GetInstancesHealthStatus</code> request,\
              \ omit this value.</p> <p>If more than <code>MaxResults</code> instances\
              \ match the specified criteria, you can submit another <code>GetInstancesHealthStatus</code>\
              \ request to get the next group of results. Specify the value of <code>NextToken</code>\
              \ from the previous response in the next request.</p>"
      required:
      - ServiceId
      title: GetInstancesHealthStatusRequest
      type: object
    GetNamespaceResponse:
      example:
        Namespace:
          Arn: arn:aws:servicediscovery:us-west-2:123456789012:namespace/ns-e1tpmexample0001
          CreateDate: 20181118T211712Z
          CreatorRequestId: example-creator-request-id-0001
          Description: Example.com AWS Cloud Map HTTP Namespace
          Id: ns-e1tpmexample0001
          Name: example-http.com
          Properties:
            DnsProperties: {}
            HttpProperties:
              HttpName: example-http.com
          Type: HTTP
      properties:
        Namespace:
          $ref: '#/components/schemas/GetNamespaceResponse_Namespace'
      type: object
    GetNamespaceRequest:
      example:
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the namespace that you want to get information
              about.
      required:
      - Id
      title: GetNamespaceRequest
      type: object
    GetOperationResponse:
      example:
        Operation:
          CreateDate: 1.587055860121E9
          Id: gv4g5meo7ndmeh4fqskygvk23d2fijwa-k9302yzd
          Status: SUCCESS
          Targets:
            NAMESPACE: ns-ylexjili4cdxy3xm
          Type: CREATE_NAMESPACE
          UpdateDate: 1.587055900469E9
      properties:
        Operation:
          $ref: '#/components/schemas/GetOperationResponse_Operation'
      type: object
    GetOperationRequest:
      example:
        OperationId: ""
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the operation that you want to get more information
              about.
      required:
      - OperationId
      title: GetOperationRequest
      type: object
    OperationNotFound: {}
    GetServiceResponse:
      example:
        Service:
          Arn: arn:aws:servicediscovery:us-west-2:123456789012:service/srv-e4anhexample0004
          CreateDate: 20181118T211707Z
          CreatorRequestId: example-creator-request-id-0004
          Description: Example.com AWS Cloud Map HTTP Service
          HealthCheckConfig:
            FailureThreshold: 3
            ResourcePath: /
            Type: HTTPS
          Id: srv-e4anhexample0004
          Name: example-http-service
          NamespaceId: ns-e4anhexample0004
      properties:
        Service:
          $ref: '#/components/schemas/GetServiceResponse_Service'
      type: object
    GetServiceRequest:
      example:
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the service that you want to get settings for.
      required:
      - Id
      title: GetServiceRequest
      type: object
    ListInstancesResponse:
      example:
        Instances:
        - Attributes:
            AWS_INSTANCE_IPV4: 172.2.1.3
            AWS_INSTANCE_PORT: "808"
          Id: i-06bdabbae60f65a4e
      properties:
        Instances:
          allOf:
          - $ref: '#/components/schemas/InstanceSummaryList'
          - description: Summary information about the instances that are associated
              with the specified service.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If more than <code>MaxResults</code> instances match the\
              \ specified criteria, you can submit another <code>ListInstances</code>\
              \ request to get the next group of results. Specify the value of <code>NextToken</code>\
              \ from the previous response in the next request."
      type: object
    ListInstancesRequest:
      example:
        NextToken: ""
        MaxResults: ""
        ServiceId: ""
      properties:
        ServiceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the service that you want to list instances for.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first <code>ListInstances</code> request, omit\
              \ this value.</p> <p>If more than <code>MaxResults</code> instances\
              \ match the specified criteria, you can submit another <code>ListInstances</code>\
              \ request to get the next group of results. Specify the value of <code>NextToken</code>\
              \ from the previous response in the next request.</p>"
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of instances that you want Cloud Map\
              \ to return in the response to a <code>ListInstances</code> request.\
              \ If you don't specify a value for <code>MaxResults</code>, Cloud Map\
              \ returns up to 100 instances."
      required:
      - ServiceId
      title: ListInstancesRequest
      type: object
    ListNamespacesResponse:
      example:
        Namespaces:
        - Arn: arn:aws:servicediscovery:us-west-2:123456789012:namespace/ns-a3ccy2e7e3a7rile
          CreateDate: 1.585354387357E9
          Id: ns-a3ccy2e7e3a7rile
          Name: local
          Properties:
            DnsProperties:
              HostedZoneId: Z06752353VBUDTC32S84S
            HttpProperties:
              HttpName: local
          Type: DNS_PRIVATE
        - Arn: arn:aws:servicediscovery:us-west-2:123456789012:namespace/ns-pocfyjtrsmwtvcxx
          CreateDate: 1.586468974698E9
          Description: My second namespace
          Id: ns-pocfyjtrsmwtvcxx
          Name: My-second-namespace
          Properties:
            DnsProperties: {}
            HttpProperties:
              HttpName: My-second-namespace
          Type: HTTP
        - Arn: arn:aws:servicediscovery:us-west-2:123456789012:namespace/ns-ylexjili4cdxy3xm
          CreateDate: 1.587055896798E9
          Id: ns-ylexjili4cdxy3xm
          Name: example.com
          Properties:
            DnsProperties:
              HostedZoneId: Z09983722P0QME1B3KC8I
            HttpProperties:
              HttpName: example.com
          Type: DNS_PRIVATE
      properties:
        Namespaces:
          allOf:
          - $ref: '#/components/schemas/NamespaceSummariesList'
          - description: An array that contains one <code>NamespaceSummary</code>
              object for each namespace that matches the specified filter criteria.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>If the response contains <code>NextToken</code>, submit\
              \ another <code>ListNamespaces</code> request to get the next group\
              \ of results. Specify the value of <code>NextToken</code> from the previous\
              \ response in the next request.</p> <note> <p>Cloud Map gets <code>MaxResults</code>\
              \ namespaces and then filters them based on the specified criteria.\
              \ It's possible that no namespaces in the first <code>MaxResults</code>\
              \ namespaces matched the specified criteria but that subsequent groups\
              \ of <code>MaxResults</code> namespaces do contain namespaces that match\
              \ the criteria.</p> </note>"
      type: object
    ListNamespacesRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first <code>ListNamespaces</code> request, omit\
              \ this value.</p> <p>If the response contains <code>NextToken</code>,\
              \ submit another <code>ListNamespaces</code> request to get the next\
              \ group of results. Specify the value of <code>NextToken</code> from\
              \ the previous response in the next request.</p> <note> <p>Cloud Map\
              \ gets <code>MaxResults</code> namespaces and then filters them based\
              \ on the specified criteria. It's possible that no namespaces in the\
              \ first <code>MaxResults</code> namespaces matched the specified criteria\
              \ but that subsequent groups of <code>MaxResults</code> namespaces do\
              \ contain namespaces that match the criteria.</p> </note>"
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of namespaces that you want Cloud Map\
              \ to return in the response to a <code>ListNamespaces</code> request.\
              \ If you don't specify a value for <code>MaxResults</code>, Cloud Map\
              \ returns up to 100 namespaces."
        Filters:
          allOf:
          - $ref: '#/components/schemas/NamespaceFilters'
          - description: "<p>A complex type that contains specifications for the namespaces\
              \ that you want to list.</p> <p>If you specify more than one filter,\
              \ a namespace must match all filters to be returned by <code>ListNamespaces</code>.</p>"
      title: ListNamespacesRequest
      type: object
    ListOperationsResponse:
      example:
        Operations:
        - Id: 76yy8ovhpdz0plmjzbsnqgnrqvpv2qdt-kexample
          Status: SUCCESS
        - Id: prysnyzpji3u2ciy45nke83x2zanl7yk-dexample
          Status: SUCCESS
        - Id: ko4ekftir7kzlbechsh7xvcdgcpk66gh-7example
          Status: PENDING
      properties:
        Operations:
          allOf:
          - $ref: '#/components/schemas/OperationSummaryList'
          - description: Summary information about the operations that match the specified
              criteria.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>If the response contains <code>NextToken</code>, submit\
              \ another <code>ListOperations</code> request to get the next group\
              \ of results. Specify the value of <code>NextToken</code> from the previous\
              \ response in the next request.</p> <note> <p>Cloud Map gets <code>MaxResults</code>\
              \ operations and then filters them based on the specified criteria.\
              \ It's possible that no operations in the first <code>MaxResults</code>\
              \ operations matched the specified criteria but that subsequent groups\
              \ of <code>MaxResults</code> operations do contain operations that match\
              \ the criteria.</p> </note>"
      type: object
    ListOperationsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first <code>ListOperations</code> request, omit\
              \ this value.</p> <p>If the response contains <code>NextToken</code>,\
              \ submit another <code>ListOperations</code> request to get the next\
              \ group of results. Specify the value of <code>NextToken</code> from\
              \ the previous response in the next request.</p> <note> <p>Cloud Map\
              \ gets <code>MaxResults</code> operations and then filters them based\
              \ on the specified criteria. It's possible that no operations in the\
              \ first <code>MaxResults</code> operations matched the specified criteria\
              \ but that subsequent groups of <code>MaxResults</code> operations do\
              \ contain operations that match the criteria.</p> </note>"
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of items that you want Cloud Map to return\
              \ in the response to a <code>ListOperations</code> request. If you don't\
              \ specify a value for <code>MaxResults</code>, Cloud Map returns up\
              \ to 100 operations."
        Filters:
          allOf:
          - $ref: '#/components/schemas/OperationFilters'
          - description: "<p>A complex type that contains specifications for the operations\
              \ that you want to list, for example, operations that you started between\
              \ a specified start date and end date.</p> <p>If you specify more than\
              \ one filter, an operation must match all filters to be returned by\
              \ <code>ListOperations</code>.</p>"
      title: ListOperationsRequest
      type: object
    ListServicesResponse:
      example:
        Services:
        - Arn: arn:aws:servicediscovery:us-west-2:123456789012:service/srv-p5zdwlg5uvvzjita
          CreateDate: 1.587081768334E9
          DnsConfig:
            DnsRecords:
            - TTL: 60
              Type: A
            RoutingPolicy: MULTIVALUE
          Id: srv-p5zdwlg5uvvzjita
          Name: myservice
      properties:
        Services:
          allOf:
          - $ref: '#/components/schemas/ServiceSummariesList'
          - description: An array that contains one <code>ServiceSummary</code> object
              for each service that matches the specified filter criteria.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>If the response contains <code>NextToken</code>, submit\
              \ another <code>ListServices</code> request to get the next group of\
              \ results. Specify the value of <code>NextToken</code> from the previous\
              \ response in the next request.</p> <note> <p>Cloud Map gets <code>MaxResults</code>\
              \ services and then filters them based on the specified criteria. It's\
              \ possible that no services in the first <code>MaxResults</code> services\
              \ matched the specified criteria but that subsequent groups of <code>MaxResults</code>\
              \ services do contain services that match the criteria.</p> </note>"
      type: object
    ListServicesRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first <code>ListServices</code> request, omit\
              \ this value.</p> <p>If the response contains <code>NextToken</code>,\
              \ submit another <code>ListServices</code> request to get the next group\
              \ of results. Specify the value of <code>NextToken</code> from the previous\
              \ response in the next request.</p> <note> <p>Cloud Map gets <code>MaxResults</code>\
              \ services and then filters them based on the specified criteria. It's\
              \ possible that no services in the first <code>MaxResults</code> services\
              \ matched the specified criteria but that subsequent groups of <code>MaxResults</code>\
              \ services do contain services that match the criteria.</p> </note>"
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of services that you want Cloud Map to\
              \ return in the response to a <code>ListServices</code> request. If\
              \ you don't specify a value for <code>MaxResults</code>, Cloud Map returns\
              \ up to 100 services."
        Filters:
          allOf:
          - $ref: '#/components/schemas/ServiceFilters'
          - description: "<p>A complex type that contains specifications for the namespaces\
              \ that you want to list services for. </p> <p>If you specify more than\
              \ one filter, an operation must match all filters to be returned by\
              \ <code>ListServices</code>.</p>"
      title: ListServicesRequest
      type: object
    ListTagsForResourceResponse:
      example:
        Tags:
        - Key: Project
          Value: Zeta
        - Key: Department
          Value: Engineering
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags that are assigned to the resource.
      type: object
    ListTagsForResourceRequest:
      example:
        ResourceARN: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the resource that you want
              to retrieve tags for.
      required:
      - ResourceARN
      title: ListTagsForResourceRequest
      type: object
    ResourceNotFoundException: {}
    RegisterInstanceResponse:
      example:
        OperationId: 4yejorelbukcjzpnr6tlmrghsjwpngf4-k95yg2u7
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          - description: "A value that you can use to determine whether the request\
              \ completed successfully. To get the status of the operation, see <a\
              \ href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\"\
              >GetOperation</a>."
      type: object
    RegisterInstanceRequest:
      example:
        InstanceId: ""
        Attributes: ""
        CreatorRequestId: ""
        ServiceId: ""
      properties:
        ServiceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the service that you want to use for settings for
              the instance.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: "<p>An identifier that you want to associate with the instance.\
              \ Note the following:</p> <ul> <li> <p>If the service that's specified\
              \ by <code>ServiceId</code> includes settings for an <code>SRV</code>\
              \ record, the value of <code>InstanceId</code> is automatically included\
              \ as part of the value for the <code>SRV</code> record. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_DnsRecord.html#cloudmap-Type-DnsRecord-Type\"\
              >DnsRecord &gt; Type</a>.</p> </li> <li> <p>You can use this value to\
              \ update an existing instance.</p> </li> <li> <p>To register a new instance,\
              \ you must specify a value that's unique among instances that you register\
              \ by using the same service. </p> </li> <li> <p>If you specify an existing\
              \ <code>InstanceId</code> and <code>ServiceId</code>, Cloud Map updates\
              \ the existing DNS records, if any. If there's also an existing health\
              \ check, Cloud Map deletes the old health check and creates a new one.\
              \ </p> <note> <p>The health check isn't deleted immediately, so it will\
              \ still appear for a while if you submit a <code>ListHealthChecks</code>\
              \ request, for example.</p> </note> </li> </ul> <note> <p>Do not include\
              \ sensitive information in <code>InstanceId</code> if the namespace\
              \ is discoverable by public DNS queries and any <code>Type</code> member\
              \ of <code>DnsRecord</code> for the service contains <code>SRV</code>\
              \ because the <code>InstanceId</code> is discoverable by public DNS\
              \ queries.</p> </note>"
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: "A unique string that identifies the request and that allows\
              \ failed <code>RegisterInstance</code> requests to be retried without\
              \ the risk of executing the operation twice. You must use a unique <code>CreatorRequestId</code>\
              \ string every time you submit a <code>RegisterInstance</code> request\
              \ if you're registering additional instances for the same namespace\
              \ and service. <code>CreatorRequestId</code> can be any unique string\
              \ (for example, a date/time stamp)."
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: "<p>A string map that contains the following information\
              \ for the service that you specify in <code>ServiceId</code>:</p> <ul>\
              \ <li> <p>The attributes that apply to the records that are defined\
              \ in the service. </p> </li> <li> <p>For each attribute, the applicable\
              \ value.</p> </li> </ul> <note> <p>Do not include sensitive information\
              \ in the attributes if the namespace is discoverable by public DNS queries.</p>\
              \ </note> <p>Supported attribute keys include the following:</p> <dl>\
              \ <dt>AWS_ALIAS_DNS_NAME</dt> <dd> <p>If you want Cloud Map to create\
              \ an Amazon Route\_53 alias record that routes traffic to an Elastic\
              \ Load Balancing load balancer, specify the DNS name that's associated\
              \ with the load balancer. For information about how to get the DNS name,\
              \ see \"DNSName\" in the topic <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html\"\
              >AliasTarget</a> in the <i>Route\_53 API Reference</i>.</p> <p>Note\
              \ the following:</p> <ul> <li> <p>The configuration for the service\
              \ that's specified by <code>ServiceId</code> must include settings for\
              \ an <code>A</code> record, an <code>AAAA</code> record, or both.</p>\
              \ </li> <li> <p>In the service that's specified by <code>ServiceId</code>,\
              \ the value of <code>RoutingPolicy</code> must be <code>WEIGHTED</code>.</p>\
              \ </li> <li> <p>If the service that's specified by <code>ServiceId</code>\
              \ includes <code>HealthCheckConfig</code> settings, Cloud Map will create\
              \ the Route\_53 health check, but it doesn't associate the health check\
              \ with the alias record.</p> </li> <li> <p>Auto naming currently doesn't\
              \ support creating alias records that route traffic to Amazon Web Services\
              \ resources other than Elastic Load Balancing load balancers.</p> </li>\
              \ <li> <p>If you specify a value for <code>AWS_ALIAS_DNS_NAME</code>,\
              \ don't specify values for any of the <code>AWS_INSTANCE</code> attributes.</p>\
              \ </li> </ul> </dd> <dt>AWS_EC2_INSTANCE_ID</dt> <dd> <p> <i>HTTP namespaces\
              \ only.</i> The Amazon EC2 instance ID for the instance. If the <code>AWS_EC2_INSTANCE_ID</code>\
              \ attribute is specified, then the only other attribute that can be\
              \ specified is <code>AWS_INIT_HEALTH_STATUS</code>. When the <code>AWS_EC2_INSTANCE_ID</code>\
              \ attribute is specified, then the <code>AWS_INSTANCE_IPV4</code> attribute\
              \ will be filled out with the primary private IPv4 address.</p> </dd>\
              \ <dt>AWS_INIT_HEALTH_STATUS</dt> <dd> <p>If the service configuration\
              \ includes <code>HealthCheckCustomConfig</code>, you can optionally\
              \ use <code>AWS_INIT_HEALTH_STATUS</code> to specify the initial status\
              \ of the custom health check, <code>HEALTHY</code> or <code>UNHEALTHY</code>.\
              \ If you don't specify a value for <code>AWS_INIT_HEALTH_STATUS</code>,\
              \ the initial status is <code>HEALTHY</code>.</p> </dd> <dt>AWS_INSTANCE_CNAME</dt>\
              \ <dd> <p>If the service configuration includes a <code>CNAME</code>\
              \ record, the domain name that you want Route\_53 to return in response\
              \ to DNS queries (for example, <code>example.com</code>).</p> <p>This\
              \ value is required if the service specified by <code>ServiceId</code>\
              \ includes settings for an <code>CNAME</code> record.</p> </dd> <dt>AWS_INSTANCE_IPV4</dt>\
              \ <dd> <p>If the service configuration includes an <code>A</code> record,\
              \ the IPv4 address that you want Route\_53 to return in response to\
              \ DNS queries (for example, <code>192.0.2.44</code>).</p> <p>This value\
              \ is required if the service specified by <code>ServiceId</code> includes\
              \ settings for an <code>A</code> record. If the service includes settings\
              \ for an <code>SRV</code> record, you must specify a value for <code>AWS_INSTANCE_IPV4</code>,\
              \ <code>AWS_INSTANCE_IPV6</code>, or both.</p> </dd> <dt>AWS_INSTANCE_IPV6</dt>\
              \ <dd> <p>If the service configuration includes an <code>AAAA</code>\
              \ record, the IPv6 address that you want Route\_53 to return in response\
              \ to DNS queries (for example, <code>2001:0db8:85a3:0000:0000:abcd:0001:2345</code>).</p>\
              \ <p>This value is required if the service specified by <code>ServiceId</code>\
              \ includes settings for an <code>AAAA</code> record. If the service\
              \ includes settings for an <code>SRV</code> record, you must specify\
              \ a value for <code>AWS_INSTANCE_IPV4</code>, <code>AWS_INSTANCE_IPV6</code>,\
              \ or both.</p> </dd> <dt>AWS_INSTANCE_PORT</dt> <dd> <p>If the service\
              \ includes an <code>SRV</code> record, the value that you want Route\_\
              53 to return for the port.</p> <p>If the service includes <code>HealthCheckConfig</code>,\
              \ the port on the endpoint that you want Route\_53 to send requests\
              \ to. </p> <p>This value is required if you specified settings for an\
              \ <code>SRV</code> record or a Route\_53 health check when you created\
              \ the service.</p> </dd> <dt>Custom attributes</dt> <dd> <p>You can\
              \ add up to 30 custom attributes. For each key-value pair, the maximum\
              \ length of the attribute name is 255 characters, and the maximum length\
              \ of the attribute value is 1,024 characters. The total size of all\
              \ provided attributes (sum of all keys and values) must not exceed 5,000\
              \ characters.</p> </dd> </dl>"
      required:
      - Attributes
      - InstanceId
      - ServiceId
      title: RegisterInstanceRequest
      type: object
    TagResourceResponse:
      example: {}
      properties: {}
      type: object
    TagResourceRequest:
      example:
        ResourceARN: ""
        Tags: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the resource that you want
              to retrieve tags for.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "The tags to add to the specified resource. Specifying the\
              \ tag key is required. You can set the value of a tag to an empty string,\
              \ but you can't set the value of a tag to null."
      required:
      - ResourceARN
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceResponse:
      example: {}
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        ResourceARN: ""
        TagKeys: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the resource that you want
              to retrieve tags for.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: The tag keys to remove from the specified resource.
      required:
      - ResourceARN
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateHttpNamespaceResponse:
      example:
        OperationId: ""
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          - description: "A value that you can use to determine whether the request\
              \ completed successfully. To get the status of the operation, see <a\
              \ href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\"\
              >GetOperation</a>."
      type: object
    UpdateHttpNamespaceRequest:
      example:
        UpdaterRequestId: ""
        Id: ""
        Namespace:
          Description: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the namespace that you want to update.
        UpdaterRequestId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: "A unique string that identifies the request and that allows\
              \ failed <code>UpdateHttpNamespace</code> requests to be retried without\
              \ the risk of running the operation twice. <code>UpdaterRequestId</code>\
              \ can be any unique string (for example, a date/timestamp)."
        Namespace:
          $ref: '#/components/schemas/UpdateHttpNamespaceRequest_Namespace'
      required:
      - Id
      - Namespace
      title: UpdateHttpNamespaceRequest
      type: object
    UpdateInstanceCustomHealthStatusRequest:
      example:
        Status: ""
        InstanceId: ""
        ServiceId: ""
      properties:
        ServiceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the service that includes the configuration for
              the custom health check that you want to change the status for.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the instance that you want to change the health
              status for.
        Status:
          allOf:
          - $ref: '#/components/schemas/CustomHealthStatus'
          - description: "The new status of the instance, <code>HEALTHY</code> or\
              \ <code>UNHEALTHY</code>."
      required:
      - InstanceId
      - ServiceId
      - Status
      title: UpdateInstanceCustomHealthStatusRequest
      type: object
    CustomHealthNotFound: {}
    UpdatePrivateDnsNamespaceResponse:
      example:
        OperationId: ""
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          - description: "A value that you can use to determine whether the request\
              \ completed successfully. To get the status of the operation, see <a\
              \ href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\"\
              >GetOperation</a>."
      type: object
    UpdatePrivateDnsNamespaceRequest:
      example:
        UpdaterRequestId: ""
        Id: ""
        Namespace:
          Description: ""
          Properties:
            DnsProperties:
              SOA:
                TTL: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the namespace that you want to update.
        UpdaterRequestId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: "A unique string that identifies the request and that allows\
              \ failed <code>UpdatePrivateDnsNamespace</code> requests to be retried\
              \ without the risk of running the operation twice. <code>UpdaterRequestId</code>\
              \ can be any unique string (for example, a date/timestamp)."
        Namespace:
          $ref: '#/components/schemas/UpdatePrivateDnsNamespaceRequest_Namespace'
      required:
      - Id
      - Namespace
      title: UpdatePrivateDnsNamespaceRequest
      type: object
    UpdatePublicDnsNamespaceResponse:
      example:
        OperationId: ""
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          - description: "A value that you can use to determine whether the request\
              \ completed successfully. To get the status of the operation, see <a\
              \ href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\"\
              >GetOperation</a>."
      type: object
    UpdatePublicDnsNamespaceRequest:
      example:
        UpdaterRequestId: ""
        Id: ""
        Namespace:
          Description: ""
          Properties:
            DnsProperties:
              SOA:
                TTL: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the namespace being updated.
        UpdaterRequestId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: "A unique string that identifies the request and that allows\
              \ failed <code>UpdatePublicDnsNamespace</code> requests to be retried\
              \ without the risk of running the operation twice. <code>UpdaterRequestId</code>\
              \ can be any unique string (for example, a date/timestamp)."
        Namespace:
          $ref: '#/components/schemas/UpdatePublicDnsNamespaceRequest_Namespace'
      required:
      - Id
      - Namespace
      title: UpdatePublicDnsNamespaceRequest
      type: object
    UpdateServiceResponse:
      example:
        OperationId: m35hsdrkxwjffm3xef4bxyy6vc3ewakx-jdn3y5g5
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          - description: "A value that you can use to determine whether the request\
              \ completed successfully. To get the status of the operation, see <a\
              \ href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\"\
              >GetOperation</a>."
      type: object
    UpdateServiceRequest:
      example:
        Service:
          Description: ""
          DnsConfig:
            DnsRecords: ""
          HealthCheckConfig:
            Type: ""
            ResourcePath: ""
            FailureThreshold: ""
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the service that you want to update.
        Service:
          $ref: '#/components/schemas/UpdateServiceRequest_Service'
      required:
      - Id
      - Service
      title: UpdateServiceRequest
      type: object
    AmazonResourceName:
      maxLength: 1011
      minLength: 1
      type: string
    Arn:
      maxLength: 255
      type: string
    AttrKey:
      maxLength: 255
      pattern: "^[a-zA-Z0-9!-~]+$"
      type: string
    AttrValue:
      maxLength: 1024
      pattern: "^([a-zA-Z0-9!-~][ \\ta-zA-Z0-9!-~]*){0,1}[a-zA-Z0-9!-~]{0,1}$"
      type: string
    Attributes:
      additionalProperties:
        $ref: '#/components/schemas/AttrValue'
      type: object
    Code:
      type: string
    NamespaceNameHttp:
      maxLength: 1024
      pattern: "^[!-~]{1,1024}$"
      type: string
    ResourceId:
      maxLength: 64
      type: string
    ResourceDescription:
      maxLength: 1024
      type: string
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 200
      minItems: 0
      type: array
    OperationId:
      maxLength: 255
      type: string
    NamespaceNamePrivate:
      maxLength: 253
      pattern: "^[!-~]{1,253}$"
      type: string
    PrivateDnsNamespaceProperties:
      description: DNS properties for the private DNS namespace.
      properties:
        DnsProperties:
          $ref: '#/components/schemas/PrivateDnsNamespaceProperties_DnsProperties'
      required:
      - DnsProperties
      type: object
    NamespaceNamePublic:
      maxLength: 253
      pattern: "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z0-9]([a-zA-Z0-9\\\
        -]{0,61}[a-zA-Z0-9])?$"
      type: string
    PublicDnsNamespaceProperties:
      description: DNS properties for the public DNS namespace.
      properties:
        DnsProperties:
          $ref: '#/components/schemas/PublicDnsNamespaceProperties_DnsProperties'
      required:
      - DnsProperties
      type: object
    ServiceName:
      pattern: "((?=^.{1,127}$)^([a-zA-Z0-9_][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9_]|[a-zA-Z0-9])(\\\
        .([a-zA-Z0-9_][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9_]|[a-zA-Z0-9]))*$)|(^\\.$)"
      type: string
    DnsConfig:
      description: <p>A complex type that contains information about the Amazon Route 53
        DNS records that you want Cloud Map to create when you register an instance.</p>
        <important> <p>The record types of a service can only be changed by deleting
        the service and recreating it with a new <code>Dnsconfig</code>.</p> </important>
      properties:
        NamespaceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - deprecated: true
            description: <p> <i>Use NamespaceId in <a href="https://docs.aws.amazon.com/cloud-map/latest/api/API_Service.html">Service</a>
              instead.</i> </p> <p>The ID of the namespace to use for DNS configuration.</p>Top
              level attribute in request should be used to reference namespace-id
        RoutingPolicy:
          allOf:
          - $ref: '#/components/schemas/RoutingPolicy'
          - description: "<p>The routing policy that you want to apply to all Route\_\
              53 DNS records that Cloud Map creates when you register an instance\
              \ and specify this service.</p> <note> <p>If you want to use this service\
              \ to register instances that create alias records, specify <code>WEIGHTED</code>\
              \ for the routing policy.</p> </note> <p>You can specify the following\
              \ values:</p> <dl> <dt>MULTIVALUE</dt> <dd> <p>If you define a health\
              \ check for the service and the health check is healthy, Route\_53 returns\
              \ the applicable value for up to eight instances.</p> <p>For example,\
              \ suppose that the service includes configurations for one <code>A</code>\
              \ record and a health check. You use the service to register 10 instances.\
              \ Route\_53 responds to DNS queries with IP addresses for up to eight\
              \ healthy instances. If fewer than eight instances are healthy, Route\_\
              53 responds to every DNS query with the IP addresses for all of the\
              \ healthy instances.</p> <p>If you don't define a health check for the\
              \ service, Route\_53 assumes that all instances are healthy and returns\
              \ the values for up to eight instances.</p> <p>For more information\
              \ about the multivalue routing policy, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-multivalue\"\
              >Multivalue Answer Routing</a> in the <i>Route\_53 Developer Guide</i>.</p>\
              \ </dd> <dt>WEIGHTED</dt> <dd> <p>Route\_53 returns the applicable value\
              \ from one randomly selected instance from among the instances that\
              \ you registered using the same service. Currently, all records have\
              \ the same weight, so you can't route more or less traffic to any instances.</p>\
              \ <p>For example, suppose that the service includes configurations for\
              \ one <code>A</code> record and a health check. You use the service\
              \ to register 10 instances. Route\_53 responds to DNS queries with the\
              \ IP address for one randomly selected instance from among the healthy\
              \ instances. If no instances are healthy, Route\_53 responds to DNS\
              \ queries as if all of the instances were healthy.</p> <p>If you don't\
              \ define a health check for the service, Route\_53 assumes that all\
              \ instances are healthy and returns the applicable value for one randomly\
              \ selected instance.</p> <p>For more information about the weighted\
              \ routing policy, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-weighted\"\
              >Weighted Routing</a> in the <i>Route\_53 Developer Guide</i>.</p> </dd>\
              \ </dl>"
        DnsRecords:
          allOf:
          - $ref: '#/components/schemas/DnsRecordList'
          - description: An array that contains one <code>DnsRecord</code> object
              for each Route 53 DNS record that you want Cloud Map to create when
              you register an instance.
      required:
      - DnsRecords
      type: object
    HealthCheckConfig:
      description: "<p> <i>Public DNS and HTTP namespaces only.</i> A complex type\
        \ that contains settings for an optional health check. If you specify settings\
        \ for a health check, Cloud Map associates the health check with the records\
        \ that you specify in <code>DnsConfig</code>.</p> <important> <p>If you specify\
        \ a health check configuration, you can specify either <code>HealthCheckCustomConfig</code>\
        \ or <code>HealthCheckConfig</code> but not both.</p> </important> <p>Health\
        \ checks are basic Route\_53 health checks that monitor an Amazon Web Services\
        \ endpoint. For information about pricing for health checks, see <a href=\"\
        http://aws.amazon.com/route53/pricing/\">Amazon Route\_53 Pricing</a>.</p>\
        \ <p>Note the following about configuring health checks.</p> <dl> <dt>A and\
        \ AAAA records</dt> <dd> <p>If <code>DnsConfig</code> includes configurations\
        \ for both <code>A</code> and <code>AAAA</code> records, Cloud Map creates\
        \ a health check that uses the IPv4 address to check the health of the resource.\
        \ If the endpoint tthat's specified by the IPv4 address is unhealthy, Route\_\
        53 considers both the <code>A</code> and <code>AAAA</code> records to be unhealthy.\
        \ </p> </dd> <dt>CNAME records</dt> <dd> <p>You can't specify settings for\
        \ <code>HealthCheckConfig</code> when the <code>DNSConfig</code> includes\
        \ <code>CNAME</code> for the value of <code>Type</code>. If you do, the <code>CreateService</code>\
        \ request will fail with an <code>InvalidInput</code> error.</p> </dd> <dt>Request\
        \ interval</dt> <dd> <p>A Route\_53 health checker in each health-checking\
        \ Amazon Web Services Region sends a health check request to an endpoint every\
        \ 30 seconds. On average, your endpoint receives a health check request about\
        \ every two seconds. However, health checkers don't coordinate with one another.\
        \ Therefore, you might sometimes see several requests in one second that's\
        \ followed by a few seconds with no health checks at all.</p> </dd> <dt>Health\
        \ checking regions</dt> <dd> <p>Health checkers perform checks from all Route\_\
        53 health-checking Regions. For a list of the current Regions, see <a href=\"\
        https://docs.aws.amazon.com/Route53/latest/APIReference/API_HealthCheckConfig.html#Route53-Type-HealthCheckConfig-Regions\"\
        >Regions</a>.</p> </dd> <dt>Alias records</dt> <dd> <p>When you register an\
        \ instance, if you include the <code>AWS_ALIAS_DNS_NAME</code> attribute,\
        \ Cloud Map creates a Route\_53 alias record. Note the following:</p> <ul>\
        \ <li> <p>Route\_53 automatically sets <code>EvaluateTargetHealth</code> to\
        \ true for alias records. When <code>EvaluateTargetHealth</code> is true,\
        \ the alias record inherits the health of the referenced Amazon Web Services\
        \ resource. such as an ELB load balancer. For more information, see <a href=\"\
        https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html#Route53-Type-AliasTarget-EvaluateTargetHealth\"\
        >EvaluateTargetHealth</a>.</p> </li> <li> <p>If you include <code>HealthCheckConfig</code>\
        \ and then use the service to register an instance that creates an alias record,\
        \ Route\_53 doesn't create the health check.</p> </li> </ul> </dd> <dt>Charges\
        \ for health checks</dt> <dd> <p>Health checks are basic Route\_53 health\
        \ checks that monitor an Amazon Web Services endpoint. For information about\
        \ pricing for health checks, see <a href=\"http://aws.amazon.com/route53/pricing/\"\
        >Amazon Route\_53 Pricing</a>.</p> </dd> </dl>"
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/HealthCheckType'
          - description: "<p>The type of health check that you want to create, which\
              \ indicates how Route\_53 determines whether an endpoint is healthy.</p>\
              \ <important> <p>You can't change the value of <code>Type</code> after\
              \ you create a health check.</p> </important> <p>You can create the\
              \ following types of health checks:</p> <ul> <li> <p> <b>HTTP</b>: Route\_\
              53 tries to establish a TCP connection. If successful, Route\_53 submits\
              \ an HTTP request and waits for an HTTP status code of 200 or greater\
              \ and less than 400.</p> </li> <li> <p> <b>HTTPS</b>: Route\_53 tries\
              \ to establish a TCP connection. If successful, Route\_53 submits an\
              \ HTTPS request and waits for an HTTP status code of 200 or greater\
              \ and less than 400.</p> <important> <p>If you specify HTTPS for the\
              \ value of <code>Type</code>, the endpoint must support TLS v1.0 or\
              \ later.</p> </important> </li> <li> <p> <b>TCP</b>: Route\_53 tries\
              \ to establish a TCP connection.</p> <p>If you specify <code>TCP</code>\
              \ for <code>Type</code>, don't specify a value for <code>ResourcePath</code>.</p>\
              \ </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html\"\
              >How Route\_53 Determines Whether an Endpoint Is Healthy</a> in the\
              \ <i>Route\_53 Developer Guide</i>.</p>"
        ResourcePath:
          allOf:
          - $ref: '#/components/schemas/ResourcePath'
          - description: "<p>The path that you want Route\_53 to request when performing\
              \ health checks. The path can be any value that your endpoint returns\
              \ an HTTP status code of a 2xx or 3xx format for when the endpoint is\
              \ healthy. An example file is <code>/docs/route53-health-check.html</code>.\
              \ Route\_53 automatically adds the DNS name for the service. If you\
              \ don't specify a value for <code>ResourcePath</code>, the default value\
              \ is <code>/</code>.</p> <p>If you specify <code>TCP</code> for <code>Type</code>,\
              \ you must <i>not</i> specify a value for <code>ResourcePath</code>.</p>"
        FailureThreshold:
          allOf:
          - $ref: '#/components/schemas/FailureThreshold'
          - description: "The number of consecutive health checks that an endpoint\
              \ must pass or fail for Route\_53 to change the current status of the\
              \ endpoint from unhealthy to healthy or the other way around. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html\"\
              >How Route\_53 Determines Whether an Endpoint Is Healthy</a> in the\
              \ <i>Route\_53 Developer Guide</i>."
      required:
      - Type
      type: object
    HealthCheckCustomConfig:
      description: "<p>A complex type that contains information about an optional\
        \ custom health check. A custom health check, which requires that you use\
        \ a third-party health checker to evaluate the health of your resources, is\
        \ useful in the following circumstances:</p> <ul> <li> <p>You can't use a\
        \ health check that's defined by <code>HealthCheckConfig</code> because the\
        \ resource isn't available over the internet. For example, you can use a custom\
        \ health check when the instance is in an Amazon VPC. (To check the health\
        \ of resources in a VPC, the health checker must also be in the VPC.)</p>\
        \ </li> <li> <p>You want to use a third-party health checker regardless of\
        \ where your resources are located.</p> </li> </ul> <important> <p>If you\
        \ specify a health check configuration, you can specify either <code>HealthCheckCustomConfig</code>\
        \ or <code>HealthCheckConfig</code> but not both.</p> </important> <p>To change\
        \ the status of a custom health check, submit an <code>UpdateInstanceCustomHealthStatus</code>\
        \ request. Cloud Map doesn't monitor the status of the resource, it just keeps\
        \ a record of the status specified in the most recent <code>UpdateInstanceCustomHealthStatus</code>\
        \ request.</p> <p>Here's how custom health checks work:</p> <ol> <li> <p>You\
        \ create a service.</p> </li> <li> <p>You register an instance.</p> </li>\
        \ <li> <p>You configure a third-party health checker to monitor the resource\
        \ that's associated with the new instance. </p> <note> <p>Cloud Map doesn't\
        \ check the health of the resource directly. </p> </note> </li> <li> <p>The\
        \ third-party health-checker determines that the resource is unhealthy and\
        \ notifies your application.</p> </li> <li> <p>Your application submits an\
        \ <code>UpdateInstanceCustomHealthStatus</code> request.</p> </li> <li> <p>Cloud\
        \ Map waits for 30 seconds.</p> </li> <li> <p>If another <code>UpdateInstanceCustomHealthStatus</code>\
        \ request doesn't arrive during that time to change the status back to healthy,\
        \ Cloud Map stops routing traffic to the resource.</p> </li> </ol>"
      properties:
        FailureThreshold:
          allOf:
          - $ref: '#/components/schemas/FailureThreshold'
          - deprecated: true
            description: <important> <p>This parameter is no longer supported and
              is always set to 1. Cloud Map waits for approximately 30 seconds after
              receiving an <code>UpdateInstanceCustomHealthStatus</code> request before
              changing the status of the service instance.</p> </important> <p>The
              number of 30-second intervals that you want Cloud Map to wait after
              receiving an <code>UpdateInstanceCustomHealthStatus</code> request before
              it changes the health status of a service instance.</p> <p>Sending a
              second or subsequent <code>UpdateInstanceCustomHealthStatus</code> request
              with the same value before 30 seconds has passed doesn't accelerate
              the change. Cloud Map still waits <code>30</code> seconds after the
              first request to make the change.</p>Configurable FailureThreshold of
              HealthCheckCustomConfig is deprecated.  It will always have value 1.
      type: object
    ServiceTypeOption:
      enum:
      - HTTP
      type: string
    Service:
      description: A complex type that contains information about the specified service.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID that Cloud Map assigned to the service when you created
              it.
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) that Cloud Map assigns to
              the service when you create it.
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the service.
        NamespaceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the namespace that was used to create the service.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: The description of the service.
        InstanceCount:
          allOf:
          - $ref: '#/components/schemas/ResourceCount'
          - description: The number of instances that are currently associated with
              the service. Instances that were previously associated with the service
              but that are deleted aren't included in the count. The count might not
              reflect pending registrations and deregistrations.
        DnsConfig:
          $ref: '#/components/schemas/Service_DnsConfig'
        Type:
          allOf:
          - $ref: '#/components/schemas/ServiceType'
          - description: <p>Describes the systems that can be used to discover the
              service instances.</p> <dl> <dt>DNS_HTTP</dt> <dd> <p>The service instances
              can be discovered using either DNS queries or the <code>DiscoverInstances</code>
              API operation.</p> </dd> <dt>HTTP</dt> <dd> <p>The service instances
              can only be discovered using the <code>DiscoverInstances</code> API
              operation.</p> </dd> <dt>DNS</dt> <dd> <p>Reserved.</p> </dd> </dl>
        HealthCheckConfig:
          $ref: '#/components/schemas/Service_HealthCheckConfig'
        HealthCheckCustomConfig:
          $ref: '#/components/schemas/Service_HealthCheckCustomConfig'
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the service was created, in Unix\
              \ format and Coordinated Universal Time (UTC). The value of <code>CreateDate</code>\
              \ is accurate to milliseconds. For example, the value <code>1516925490.087</code>\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: "A unique string that identifies the request and that allows\
              \ failed requests to be retried without the risk of running the operation\
              \ twice. <code>CreatorRequestId</code> can be any unique string (for\
              \ example, a date/timestamp)."
      type: object
    CustomHealthStatus:
      enum:
      - HEALTHY
      - UNHEALTHY
      type: string
    NamespaceName:
      maxLength: 1024
      type: string
    DiscoverMaxResults:
      maximum: 1000
      minimum: 1
      type: integer
    HealthStatusFilter:
      enum:
      - HEALTHY
      - UNHEALTHY
      - ALL
      - HEALTHY_OR_ELSE_ALL
      type: string
    HttpInstanceSummaryList:
      items:
        $ref: '#/components/schemas/HttpInstanceSummary'
      type: array
    RoutingPolicy:
      enum:
      - MULTIVALUE
      - WEIGHTED
      type: string
    DnsRecordList:
      items:
        $ref: '#/components/schemas/DnsRecord'
      type: array
    DnsConfigChange:
      description: A complex type that contains information about changes to the Route 53
        DNS records that Cloud Map creates when you register an instance.
      properties:
        DnsRecords:
          allOf:
          - $ref: '#/components/schemas/DnsRecordList'
          - description: An array that contains one <code>DnsRecord</code> object
              for each Route 53 record that you want Cloud Map to create when you
              register an instance.
      required:
      - DnsRecords
      type: object
    SOA:
      description: Start of Authority (SOA) properties for a public or private DNS
        namespace.
      properties:
        TTL:
          allOf:
          - $ref: '#/components/schemas/RecordTTL'
          - description: The time to live (TTL) for purposes of negative caching.
      required:
      - TTL
      type: object
    DnsProperties:
      description: A complex type that contains the ID for the Route 53 hosted zone
        that Cloud Map creates when you create a namespace.
      properties:
        HostedZoneId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID for the Route 53 hosted zone that Cloud Map creates
              when you create a namespace.
        SOA:
          $ref: '#/components/schemas/DnsProperties_SOA'
      type: object
    RecordType:
      enum:
      - SRV
      - A
      - AAAA
      - CNAME
      type: string
    RecordTTL:
      maximum: 2147483647
      minimum: 0
      type: integer
    DnsRecord:
      description: A complex type that contains information about the Route 53 DNS
        records that you want Cloud Map to create when you register an instance.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/RecordType'
          - description: "<p>The type of the resource, which indicates the type of\
              \ value that Route\_53 returns in response to DNS queries. You can specify\
              \ values for <code>Type</code> in the following combinations:</p> <ul>\
              \ <li> <p> <b> <code>A</code> </b> </p> </li> <li> <p> <b> <code>AAAA</code>\
              \ </b> </p> </li> <li> <p> <b> <code>A</code> </b> and <b> <code>AAAA</code>\
              \ </b> </p> </li> <li> <p> <b> <code>SRV</code> </b> </p> </li> <li>\
              \ <p> <b> <code>CNAME</code> </b> </p> </li> </ul> <p>If you want Cloud\
              \ Map to create a Route\_53 alias record when you register an instance,\
              \ specify <code>A</code> or <code>AAAA</code> for <code>Type</code>.</p>\
              \ <p>You specify other settings, such as the IP address for <code>A</code>\
              \ and <code>AAAA</code> records, when you register an instance. For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html\"\
              >RegisterInstance</a>.</p> <p>The following values are supported:</p>\
              \ <dl> <dt>A</dt> <dd> <p>Route\_53 returns the IP address of the resource\
              \ in IPv4 format, such as 192.0.2.44.</p> </dd> <dt>AAAA</dt> <dd> <p>Route\_\
              53 returns the IP address of the resource in IPv6 format, such as 2001:0db8:85a3:0000:0000:abcd:0001:2345.</p>\
              \ </dd> <dt>CNAME</dt> <dd> <p>Route\_53 returns the domain name of\
              \ the resource, such as www.example.com. Note the following:</p> <ul>\
              \ <li> <p>You specify the domain name that you want to route traffic\
              \ to when you register an instance. For more information, see <a href=\"\
              https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html#cloudmap-RegisterInstance-request-Attributes\"\
              >Attributes</a> in the topic <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html\"\
              >RegisterInstance</a>.</p> </li> <li> <p>You must specify <code>WEIGHTED</code>\
              \ for the value of <code>RoutingPolicy</code>.</p> </li> <li> <p>You\
              \ can't specify both <code>CNAME</code> for <code>Type</code> and settings\
              \ for <code>HealthCheckConfig</code>. If you do, the request will fail\
              \ with an <code>InvalidInput</code> error.</p> </li> </ul> </dd> <dt>SRV</dt>\
              \ <dd> <p>Route\_53 returns the value for an <code>SRV</code> record.\
              \ The value for an <code>SRV</code> record uses the following values:</p>\
              \ <p> <code>priority weight port service-hostname</code> </p> <p>Note\
              \ the following about the values:</p> <ul> <li> <p>The values of <code>priority</code>\
              \ and <code>weight</code> are both set to <code>1</code> and can't be\
              \ changed. </p> </li> <li> <p>The value of <code>port</code> comes from\
              \ the value that you specify for the <code>AWS_INSTANCE_PORT</code>\
              \ attribute when you submit a <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html\"\
              >RegisterInstance</a> request.</p> </li> <li> <p>The value of <code>service-hostname</code>\
              \ is a concatenation of the following values:</p> <ul> <li> <p>The value\
              \ that you specify for <code>InstanceId</code> when you register an\
              \ instance.</p> </li> <li> <p>The name of the service.</p> </li> <li>\
              \ <p>The name of the namespace. </p> </li> </ul> <p>For example, if\
              \ the value of <code>InstanceId</code> is <code>test</code>, the name\
              \ of the service is <code>backend</code>, and the name of the namespace\
              \ is <code>example.com</code>, the value of <code>service-hostname</code>\
              \ is the following:</p> <p> <code>test.backend.example.com</code> </p>\
              \ </li> </ul> <p>If you specify settings for an <code>SRV</code> record,\
              \ note the following:</p> <ul> <li> <p>If you specify values for <code>AWS_INSTANCE_IPV4</code>,\
              \ <code>AWS_INSTANCE_IPV6</code>, or both in the <code>RegisterInstance</code>\
              \ request, Cloud Map automatically creates <code>A</code> and/or <code>AAAA</code>\
              \ records that have the same name as the value of <code>service-hostname</code>\
              \ in the <code>SRV</code> record. You can ignore these records.</p>\
              \ </li> <li> <p>If you're using a system that requires a specific <code>SRV</code>\
              \ format, such as HAProxy, see the <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html#cloudmap-CreateService-request-Name\"\
              >Name</a> element in the documentation about <code>CreateService</code>\
              \ for information about how to specify the correct name format.</p>\
              \ </li> </ul> </dd> </dl>"
        TTL:
          allOf:
          - $ref: '#/components/schemas/RecordTTL'
          - description: "<p>The amount of time, in seconds, that you want DNS resolvers\
              \ to cache the settings for this record.</p> <note> <p>Alias records\
              \ don't include a TTL because Route\_53 uses the TTL for the Amazon\
              \ Web Services resource that an alias record routes traffic to. If you\
              \ include the <code>AWS_ALIAS_DNS_NAME</code> attribute when you submit\
              \ a <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html\"\
              >RegisterInstance</a> request, the <code>TTL</code> value is ignored.\
              \ Always specify a TTL for the service; you can use a service to register\
              \ instances that create either alias or non-alias records.</p> </note>"
      required:
      - TTL
      - Type
      type: object
    FailureThreshold:
      maximum: 10
      minimum: 1
      type: integer
    FilterCondition:
      enum:
      - EQ
      - IN
      - BETWEEN
      - BEGINS_WITH
      type: string
    FilterValue:
      maxLength: 255
      minLength: 1
      type: string
    FilterValues:
      items:
        $ref: '#/components/schemas/FilterValue'
      type: array
    Instance:
      description: A complex type that contains information about an instance that
        Cloud Map creates when you submit a <code>RegisterInstance</code> request.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: "<p>An identifier that you want to associate with the instance.\
              \ Note the following:</p> <ul> <li> <p>If the service that's specified\
              \ by <code>ServiceId</code> includes settings for an <code>SRV</code>\
              \ record, the value of <code>InstanceId</code> is automatically included\
              \ as part of the value for the <code>SRV</code> record. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_DnsRecord.html#cloudmap-Type-DnsRecord-Type\"\
              >DnsRecord &gt; Type</a>.</p> </li> <li> <p>You can use this value to\
              \ update an existing instance.</p> </li> <li> <p>To register a new instance,\
              \ you must specify a value that's unique among instances that you register\
              \ by using the same service. </p> </li> <li> <p>If you specify an existing\
              \ <code>InstanceId</code> and <code>ServiceId</code>, Cloud Map updates\
              \ the existing DNS records. If there's also an existing health check,\
              \ Cloud Map deletes the old health check and creates a new one. </p>\
              \ <note> <p>The health check isn't deleted immediately, so it will still\
              \ appear for a while if you submit a <code>ListHealthChecks</code> request,\
              \ for example.</p> </note> </li> </ul>"
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: "A unique string that identifies the request and that allows\
              \ failed <code>RegisterInstance</code> requests to be retried without\
              \ the risk of executing the operation twice. You must use a unique <code>CreatorRequestId</code>\
              \ string every time you submit a <code>RegisterInstance</code> request\
              \ if you're registering additional instances for the same namespace\
              \ and service. <code>CreatorRequestId</code> can be any unique string\
              \ (for example, a date/time stamp)."
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: "<p>A string map that contains the following information\
              \ for the service that you specify in <code>ServiceId</code>:</p> <ul>\
              \ <li> <p>The attributes that apply to the records that are defined\
              \ in the service. </p> </li> <li> <p>For each attribute, the applicable\
              \ value.</p> </li> </ul> <note> <p>Do not include sensitive information\
              \ in the attributes if the namespace is discoverable by public DNS queries.</p>\
              \ </note> <p>Supported attribute keys include the following:</p> <dl>\
              \ <dt>AWS_ALIAS_DNS_NAME</dt> <dd> <p>If you want Cloud Map to create\
              \ a Route\_53 alias record that routes traffic to an Elastic Load Balancing\
              \ load balancer, specify the DNS name that's associated with the load\
              \ balancer. For information about how to get the DNS name, see <a href=\"\
              https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html#Route53-Type-AliasTarget-DNSName\"\
              >AliasTarget-&gt;DNSName</a> in the <i>Route\_53 API Reference</i>.</p>\
              \ <p>Note the following:</p> <ul> <li> <p>The configuration for the\
              \ service that's specified by <code>ServiceId</code> must include settings\
              \ for an <code>A</code> record, an <code>AAAA</code> record, or both.</p>\
              \ </li> <li> <p>In the service that's specified by <code>ServiceId</code>,\
              \ the value of <code>RoutingPolicy</code> must be <code>WEIGHTED</code>.</p>\
              \ </li> <li> <p>If the service that's specified by <code>ServiceId</code>\
              \ includes <code>HealthCheckConfig</code> settings, Cloud Map creates\
              \ the health check, but it won't associate the health check with the\
              \ alias record.</p> </li> <li> <p>Auto naming currently doesn't support\
              \ creating alias records that route traffic to Amazon Web Services resources\
              \ other than ELB load balancers.</p> </li> <li> <p>If you specify a\
              \ value for <code>AWS_ALIAS_DNS_NAME</code>, don't specify values for\
              \ any of the <code>AWS_INSTANCE</code> attributes.</p> </li> </ul> </dd>\
              \ <dt>AWS_EC2_INSTANCE_ID</dt> <dd> <p> <i>HTTP namespaces only.</i>\
              \ The Amazon EC2 instance ID for the instance. The <code>AWS_INSTANCE_IPV4</code>\
              \ attribute contains the primary private IPv4 address.</p> </dd> <dt>AWS_INIT_HEALTH_STATUS</dt>\
              \ <dd> <p>If the service configuration includes <code>HealthCheckCustomConfig</code>,\
              \ you can optionally use <code>AWS_INIT_HEALTH_STATUS</code> to specify\
              \ the initial status of the custom health check, <code>HEALTHY</code>\
              \ or <code>UNHEALTHY</code>. If you don't specify a value for <code>AWS_INIT_HEALTH_STATUS</code>,\
              \ the initial status is <code>HEALTHY</code>.</p> </dd> <dt>AWS_INSTANCE_CNAME</dt>\
              \ <dd> <p>If the service configuration includes a <code>CNAME</code>\
              \ record, the domain name that you want Route\_53 to return in response\
              \ to DNS queries (for example, <code>example.com</code>).</p> <p>This\
              \ value is required if the service specified by <code>ServiceId</code>\
              \ includes settings for an <code>CNAME</code> record.</p> </dd> <dt>AWS_INSTANCE_IPV4</dt>\
              \ <dd> <p>If the service configuration includes an <code>A</code> record,\
              \ the IPv4 address that you want Route\_53 to return in response to\
              \ DNS queries (for example, <code>192.0.2.44</code>).</p> <p>This value\
              \ is required if the service specified by <code>ServiceId</code> includes\
              \ settings for an <code>A</code> record. If the service includes settings\
              \ for an <code>SRV</code> record, you must specify a value for <code>AWS_INSTANCE_IPV4</code>,\
              \ <code>AWS_INSTANCE_IPV6</code>, or both.</p> </dd> <dt>AWS_INSTANCE_IPV6</dt>\
              \ <dd> <p>If the service configuration includes an <code>AAAA</code>\
              \ record, the IPv6 address that you want Route\_53 to return in response\
              \ to DNS queries (for example, <code>2001:0db8:85a3:0000:0000:abcd:0001:2345</code>).</p>\
              \ <p>This value is required if the service specified by <code>ServiceId</code>\
              \ includes settings for an <code>AAAA</code> record. If the service\
              \ includes settings for an <code>SRV</code> record, you must specify\
              \ a value for <code>AWS_INSTANCE_IPV4</code>, <code>AWS_INSTANCE_IPV6</code>,\
              \ or both.</p> </dd> <dt>AWS_INSTANCE_PORT</dt> <dd> <p>If the service\
              \ includes an <code>SRV</code> record, the value that you want Route\_\
              53 to return for the port.</p> <p>If the service includes <code>HealthCheckConfig</code>,\
              \ the port on the endpoint that you want Route\_53 to send requests\
              \ to. </p> <p>This value is required if you specified settings for an\
              \ <code>SRV</code> record or a Route\_53 health check when you created\
              \ the service.</p> </dd> </dl>"
      required:
      - Id
      type: object
    InstanceIdList:
      items:
        $ref: '#/components/schemas/ResourceId'
      minItems: 1
      type: array
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NextToken:
      maxLength: 4096
      type: string
    InstanceHealthStatusMap:
      additionalProperties:
        $ref: '#/components/schemas/HealthStatus'
      type: object
    Namespace:
      description: A complex type that contains information about a specified namespace.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of a namespace.
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) that Cloud Map assigns to
              the namespace when you create it.
        Name:
          allOf:
          - $ref: '#/components/schemas/NamespaceName'
          - description: "The name of the namespace, such as <code>example.com</code>."
        Type:
          allOf:
          - $ref: '#/components/schemas/NamespaceType'
          - description: "<p>The type of the namespace. The methods for discovering\
              \ instances depends on the value that you specify:</p> <dl> <dt>HTTP</dt>\
              \ <dd> <p>Instances can be discovered only programmatically, using the\
              \ Cloud Map <code>DiscoverInstances</code> API.</p> </dd> <dt>DNS_PUBLIC</dt>\
              \ <dd> <p>Instances can be discovered using public DNS queries and using\
              \ the <code>DiscoverInstances</code> API.</p> </dd> <dt>DNS_PRIVATE</dt>\
              \ <dd> <p>Instances can be discovered using DNS queries in VPCs and\
              \ using the <code>DiscoverInstances</code> API.</p> </dd> </dl>"
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: The description that you specify for the namespace when you
              create it.
        ServiceCount:
          allOf:
          - $ref: '#/components/schemas/ResourceCount'
          - description: The number of services that are associated with the namespace.
        Properties:
          $ref: '#/components/schemas/Namespace_Properties'
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date that the namespace was created, in Unix date/time\
              \ format and Coordinated Universal Time (UTC). The value of <code>CreateDate</code>\
              \ is accurate to milliseconds. For example, the value <code>1516925490.087</code>\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'A unique string that identifies the request and that allows
              failed requests to be retried without the risk of running an operation
              twice. '
      type: object
    Operation:
      description: A complex type that contains information about a specified operation.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          - description: The ID of the operation that you want to get information
              about.
        Type:
          allOf:
          - $ref: '#/components/schemas/OperationType'
          - description: The name of the operation that's associated with the specified
              ID.
        Status:
          allOf:
          - $ref: '#/components/schemas/OperationStatus'
          - description: "<p>The status of the operation. Values include the following:</p>\
              \ <dl> <dt>SUBMITTED</dt> <dd> <p>This is the initial state that occurs\
              \ immediately after you submit a request.</p> </dd> <dt>PENDING</dt>\
              \ <dd> <p>Cloud Map is performing the operation.</p> </dd> <dt>SUCCESS</dt>\
              \ <dd> <p>The operation succeeded.</p> </dd> <dt>FAIL</dt> <dd> <p>The\
              \ operation failed. For the failure reason, see <code>ErrorMessage</code>.</p>\
              \ </dd> </dl>"
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: "If the value of <code>Status</code> is <code>FAIL</code>,\
              \ the reason that the operation failed."
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/Code'
          - description: <p>The code associated with <code>ErrorMessage</code>. Values
              for <code>ErrorCode</code> include the following:</p> <ul> <li> <p>
              <code>ACCESS_DENIED</code> </p> </li> <li> <p> <code>CANNOT_CREATE_HOSTED_ZONE</code>
              </p> </li> <li> <p> <code>EXPIRED_TOKEN</code> </p> </li> <li> <p> <code>HOSTED_ZONE_NOT_FOUND</code>
              </p> </li> <li> <p> <code>INTERNAL_FAILURE</code> </p> </li> <li> <p>
              <code>INVALID_CHANGE_BATCH</code> </p> </li> <li> <p> <code>THROTTLED_REQUEST</code>
              </p> </li> </ul>
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the request was submitted, in Unix\
              \ date/time format and Coordinated Universal Time (UTC). The value of\
              \ <code>CreateDate</code> is accurate to milliseconds. For example,\
              \ the value <code>1516925490.087</code> represents Friday, January 26,\
              \ 2018 12:11:30.087 AM."
        UpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the value of <code>Status</code>\
              \ changed to the current value, in Unix date/time format and Coordinated\
              \ Universal Time (UTC). The value of <code>UpdateDate</code> is accurate\
              \ to milliseconds. For example, the value <code>1516925490.087</code>\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        Targets:
          allOf:
          - $ref: '#/components/schemas/OperationTargetsMap'
          - description: <p>The name of the target entity that's associated with the
              operation:</p> <dl> <dt>NAMESPACE</dt> <dd> <p>The namespace ID is returned
              in the <code>ResourceId</code> property.</p> </dd> <dt>SERVICE</dt>
              <dd> <p>The service ID is returned in the <code>ResourceId</code> property.</p>
              </dd> <dt>INSTANCE</dt> <dd> <p>The instance ID is returned in the <code>ResourceId</code>
              property.</p> </dd> </dl>
      type: object
    HealthCheckType:
      enum:
      - HTTP
      - HTTPS
      - TCP
      type: string
    ResourcePath:
      maxLength: 255
      type: string
    HealthStatus:
      enum:
      - HEALTHY
      - UNHEALTHY
      - UNKNOWN
      type: string
    HttpInstanceSummary:
      description: "In a response to a <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_DiscoverInstances.html\"\
        >DiscoverInstances</a> request, <code>HttpInstanceSummary</code> contains\
        \ information about one instance that matches the values that you specified\
        \ in the request."
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of an instance that matches the values that you specified
              in the request.
        NamespaceName:
          allOf:
          - $ref: '#/components/schemas/NamespaceNameHttp'
          - description: <p> <code/> <code/> <code/> </p> <p>The <code>HttpName</code>
              name of the namespace. It's found in the <code>HttpProperties</code>
              member of the <code>Properties</code> member of the namespace.</p>
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the service that you specified when you registered
              the instance.
        HealthStatus:
          allOf:
          - $ref: '#/components/schemas/HealthStatus'
          - description: "If you configured health checking in the service, the current\
              \ health status of the service instance."
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: "If you included any attributes when you registered the instance,\
              \ the values of those attributes."
      type: object
    HttpNamespaceChange:
      description: Updated properties for the HTTP namespace.
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: An updated description for the HTTP namespace.
      required:
      - Description
      type: object
    HttpProperties:
      description: A complex type that contains the name of an HTTP namespace.
      properties:
        HttpName:
          allOf:
          - $ref: '#/components/schemas/NamespaceName'
          - description: The name of an HTTP namespace.
      type: object
    InstanceId:
      maxLength: 64
      pattern: "^[0-9a-zA-Z_/:.@-]+$"
      type: string
    InstanceSummary:
      description: A complex type that contains information about the instances that
        you registered by using a specified service.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID for an instance that you created by using a specified
              service.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: "<p>A string map that contains the following information:</p>\
              \ <ul> <li> <p>The attributes that are associated with the instance.\
              \ </p> </li> <li> <p>For each attribute, the applicable value.</p> </li>\
              \ </ul> <p>Supported attribute keys include the following:</p> <dl>\
              \ <dt>AWS_ALIAS_DNS_NAME</dt> <dd> <p>For an alias record that routes\
              \ traffic to an Elastic Load Balancing load balancer, the DNS name that's\
              \ associated with the load balancer. </p> </dd> <dt>AWS_EC2_INSTANCE_ID\
              \ (HTTP namespaces only)</dt> <dd> <p>The Amazon EC2 instance ID for\
              \ the instance. When the <code>AWS_EC2_INSTANCE_ID</code> attribute\
              \ is specified, then the <code>AWS_INSTANCE_IPV4</code> attribute contains\
              \ the primary private IPv4 address.</p> </dd> <dt>AWS_INIT_HEALTH_STATUS</dt>\
              \ <dd> <p>If the service configuration includes <code>HealthCheckCustomConfig</code>,\
              \ you can optionally use <code>AWS_INIT_HEALTH_STATUS</code> to specify\
              \ the initial status of the custom health check, <code>HEALTHY</code>\
              \ or <code>UNHEALTHY</code>. If you don't specify a value for <code>AWS_INIT_HEALTH_STATUS</code>,\
              \ the initial status is <code>HEALTHY</code>.</p> </dd> <dt>AWS_INSTANCE_CNAME</dt>\
              \ <dd> <p>For a <code>CNAME</code> record, the domain name that Route\_\
              53 returns in response to DNS queries (for example, <code>example.com</code>).</p>\
              \ </dd> <dt>AWS_INSTANCE_IPV4</dt> <dd> <p>For an <code>A</code> record,\
              \ the IPv4 address that Route\_53 returns in response to DNS queries\
              \ (for example, <code>192.0.2.44</code>).</p> </dd> <dt>AWS_INSTANCE_IPV6</dt>\
              \ <dd> <p>For an <code>AAAA</code> record, the IPv6 address that Route\_\
              53 returns in response to DNS queries (for example, <code>2001:0db8:85a3:0000:0000:abcd:0001:2345</code>).</p>\
              \ </dd> <dt>AWS_INSTANCE_PORT</dt> <dd> <p>For an <code>SRV</code> record,\
              \ the value that Route\_53 returns for the port. In addition, if the\
              \ service includes <code>HealthCheckConfig</code>, the port on the endpoint\
              \ that Route\_53 sends requests to.</p> </dd> </dl>"
      type: object
    InstanceSummaryList:
      items:
        $ref: '#/components/schemas/InstanceSummary'
      type: array
    NamespaceFilters:
      items:
        $ref: '#/components/schemas/NamespaceFilter'
      type: array
    NamespaceSummariesList:
      items:
        $ref: '#/components/schemas/NamespaceSummary'
      type: array
    OperationFilters:
      items:
        $ref: '#/components/schemas/OperationFilter'
      type: array
    OperationSummaryList:
      items:
        $ref: '#/components/schemas/OperationSummary'
      type: array
    ServiceFilters:
      items:
        $ref: '#/components/schemas/ServiceFilter'
      type: array
    ServiceSummariesList:
      items:
        $ref: '#/components/schemas/ServiceSummary'
      type: array
    Message:
      type: string
    NamespaceType:
      enum:
      - DNS_PUBLIC
      - DNS_PRIVATE
      - HTTP
      type: string
    ResourceCount:
      type: integer
    NamespaceProperties:
      description: A complex type that contains information that's specific to the
        namespace type.
      properties:
        DnsProperties:
          $ref: '#/components/schemas/NamespaceProperties_DnsProperties'
        HttpProperties:
          $ref: '#/components/schemas/NamespaceProperties_HttpProperties'
      type: object
    Timestamp:
      format: date-time
      type: string
    NamespaceFilterName:
      enum:
      - TYPE
      - NAME
      - HTTP_NAME
      type: string
    NamespaceFilter:
      description: A complex type that identifies the namespaces that you want to
        list. You can choose to list public or private namespaces.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NamespaceFilterName'
          - description: "<p>Specify the namespaces that you want to get using one\
              \ of the following.</p> <ul> <li> <p> <code>TYPE</code>: Gets the namespaces\
              \ of the specified type.</p> </li> <li> <p> <code>NAME</code>: Gets\
              \ the namespaces with the specified name.</p> </li> <li> <p> <code>HTTP_NAME</code>:\
              \ Gets the namespaces with the specified HTTP name.</p> </li> </ul>"
        Values:
          allOf:
          - $ref: '#/components/schemas/FilterValues'
          - description: "<p>Specify the values that are applicable to the value that\
              \ you specify for <code>Name</code>.</p> <ul> <li> <p> <code>TYPE</code>:\
              \ Specify <code>HTTP</code>, <code>DNS_PUBLIC</code>, or <code>DNS_PRIVATE</code>.</p>\
              \ </li> <li> <p> <code>NAME</code>: Specify the name of the namespace,\
              \ which is found in <code>Namespace.Name</code>.</p> </li> <li> <p>\
              \ <code>HTTP_NAME</code>: Specify the HTTP name of the namespace, which\
              \ is found in <code>Namespace.Properties.HttpProperties.HttpName</code>.</p>\
              \ </li> </ul>"
        Condition:
          allOf:
          - $ref: '#/components/schemas/FilterCondition'
          - description: "<p>Specify the operator that you want to use to determine\
              \ whether a namespace matches the specified value. Valid values for\
              \ <code>Condition</code> are one of the following.</p> <ul> <li> <p>\
              \ <code>EQ</code>: When you specify <code>EQ</code> for <code>Condition</code>,\
              \ you can specify only one value. <code>EQ</code> is supported for <code>TYPE</code>,\
              \ <code>NAME</code>, and <code>HTTP_NAME</code>. <code>EQ</code> is\
              \ the default condition and can be omitted.</p> </li> <li> <p> <code>BEGINS_WITH</code>:\
              \ When you specify <code>BEGINS_WITH</code> for <code>Condition</code>,\
              \ you can specify only one value. <code>BEGINS_WITH</code> is supported\
              \ for <code>TYPE</code>, <code>NAME</code>, and <code>HTTP_NAME</code>.</p>\
              \ </li> </ul>"
      required:
      - Name
      - Values
      type: object
    NamespaceSummary:
      description: A complex type that contains information about a namespace.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the namespace.
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) that Cloud Map assigns to
              the namespace when you create it.
        Name:
          allOf:
          - $ref: '#/components/schemas/NamespaceName'
          - description: "The name of the namespace. When you create a namespace,\
              \ Cloud Map automatically creates a Route\_53 hosted zone that has the\
              \ same name as the namespace."
        Type:
          allOf:
          - $ref: '#/components/schemas/NamespaceType'
          - description: "The type of the namespace, either public or private."
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: A description for the namespace.
        ServiceCount:
          allOf:
          - $ref: '#/components/schemas/ResourceCount'
          - description: The number of services that were created using the namespace.
        Properties:
          $ref: '#/components/schemas/NamespaceSummary_Properties'
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the namespace was created.
      type: object
    OperationType:
      enum:
      - CREATE_NAMESPACE
      - DELETE_NAMESPACE
      - UPDATE_NAMESPACE
      - UPDATE_SERVICE
      - REGISTER_INSTANCE
      - DEREGISTER_INSTANCE
      type: string
    OperationStatus:
      enum:
      - SUBMITTED
      - PENDING
      - SUCCESS
      - FAIL
      type: string
    OperationTargetsMap:
      additionalProperties:
        $ref: '#/components/schemas/ResourceId'
      type: object
    OperationFilterName:
      enum:
      - NAMESPACE_ID
      - SERVICE_ID
      - STATUS
      - TYPE
      - UPDATE_DATE
      type: string
    OperationFilter:
      description: A complex type that lets you select the operations that you want
        to list.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/OperationFilterName'
          - description: "<p>Specify the operations that you want to get:</p> <ul>\
              \ <li> <p> <b>NAMESPACE_ID</b>: Gets operations related to specified\
              \ namespaces.</p> </li> <li> <p> <b>SERVICE_ID</b>: Gets operations\
              \ related to specified services.</p> </li> <li> <p> <b>STATUS</b>: Gets\
              \ operations based on the status of the operations: <code>SUBMITTED</code>,\
              \ <code>PENDING</code>, <code>SUCCEED</code>, or <code>FAIL</code>.</p>\
              \ </li> <li> <p> <b>TYPE</b>: Gets specified types of operation.</p>\
              \ </li> <li> <p> <b>UPDATE_DATE</b>: Gets operations that changed status\
              \ during a specified date/time range. </p> </li> </ul>"
        Values:
          allOf:
          - $ref: '#/components/schemas/FilterValues'
          - description: "<p>Specify values that are applicable to the value that\
              \ you specify for <code>Name</code>: </p> <ul> <li> <p> <b>NAMESPACE_ID</b>:\
              \ Specify one namespace ID.</p> </li> <li> <p> <b>SERVICE_ID</b>: Specify\
              \ one service ID.</p> </li> <li> <p> <b>STATUS</b>: Specify one or more\
              \ statuses: <code>SUBMITTED</code>, <code>PENDING</code>, <code>SUCCEED</code>,\
              \ or <code>FAIL</code>.</p> </li> <li> <p> <b>TYPE</b>: Specify one\
              \ or more of the following types: <code>CREATE_NAMESPACE</code>, <code>DELETE_NAMESPACE</code>,\
              \ <code>UPDATE_SERVICE</code>, <code>REGISTER_INSTANCE</code>, or <code>DEREGISTER_INSTANCE</code>.</p>\
              \ </li> <li> <p> <b>UPDATE_DATE</b>: Specify a start date and an end\
              \ date in Unix date/time format and Coordinated Universal Time (UTC).\
              \ The start date must be the first value.</p> </li> </ul>"
        Condition:
          allOf:
          - $ref: '#/components/schemas/FilterCondition'
          - description: "<p>The operator that you want to use to determine whether\
              \ an operation matches the specified value. Valid values for condition\
              \ include:</p> <ul> <li> <p> <code>EQ</code>: When you specify <code>EQ</code>\
              \ for the condition, you can specify only one value. <code>EQ</code>\
              \ is supported for <code>NAMESPACE_ID</code>, <code>SERVICE_ID</code>,\
              \ <code>STATUS</code>, and <code>TYPE</code>. <code>EQ</code> is the\
              \ default condition and can be omitted.</p> </li> <li> <p> <code>IN</code>:\
              \ When you specify <code>IN</code> for the condition, you can specify\
              \ a list of one or more values. <code>IN</code> is supported for <code>STATUS</code>\
              \ and <code>TYPE</code>. An operation must match one of the specified\
              \ values to be returned in the response.</p> </li> <li> <p> <code>BETWEEN</code>:\
              \ Specify a start date and an end date in Unix date/time format and\
              \ Coordinated Universal Time (UTC). The start date must be the first\
              \ value. <code>BETWEEN</code> is supported for <code>UPDATE_DATE</code>.\
              \ </p> </li> </ul>"
      required:
      - Name
      - Values
      type: object
    OperationSummary:
      description: A complex type that contains information about an operation that
        matches the criteria that you specified in a <a href="https://docs.aws.amazon.com/cloud-map/latest/api/API_ListOperations.html">ListOperations</a>
        request.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          - description: The ID for an operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/OperationStatus'
          - description: "<p>The status of the operation. Values include the following:</p>\
              \ <ul> <li> <p> <b>SUBMITTED</b>: This is the initial state immediately\
              \ after you submit a request.</p> </li> <li> <p> <b>PENDING</b>: Cloud\
              \ Map is performing the operation.</p> </li> <li> <p> <b>SUCCESS</b>:\
              \ The operation succeeded.</p> </li> <li> <p> <b>FAIL</b>: The operation\
              \ failed. For the failure reason, see <code>ErrorMessage</code>.</p>\
              \ </li> </ul>"
      type: object
    OperationTargetType:
      enum:
      - NAMESPACE
      - SERVICE
      - INSTANCE
      type: string
    PrivateDnsNamespacePropertiesChange:
      description: Updated properties for the private DNS namespace.
      properties:
        DnsProperties:
          $ref: '#/components/schemas/PrivateDnsNamespacePropertiesChange_DnsProperties'
      required:
      - DnsProperties
      type: object
    PrivateDnsNamespaceChange:
      description: Updated properties for the private DNS namespace.
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: An updated description for the private DNS namespace.
        Properties:
          $ref: '#/components/schemas/PrivateDnsNamespaceChange_Properties'
      type: object
    PrivateDnsPropertiesMutable:
      description: DNS properties for the private DNS namespace.
      properties:
        SOA:
          $ref: '#/components/schemas/PrivateDnsPropertiesMutable_SOA'
      required:
      - SOA
      type: object
    PrivateDnsPropertiesMutableChange:
      description: Updated DNS properties for the private DNS namespace.
      properties:
        SOA:
          $ref: '#/components/schemas/PrivateDnsPropertiesMutableChange_SOA'
      required:
      - SOA
      type: object
    SOAChange:
      description: Updated Start of Authority (SOA) properties for a public or private
        DNS namespace.
      properties:
        TTL:
          allOf:
          - $ref: '#/components/schemas/RecordTTL'
          - description: The updated time to live (TTL) for purposes of negative caching.
      required:
      - TTL
      type: object
    PublicDnsNamespacePropertiesChange:
      description: Updated properties for the public DNS namespace.
      properties:
        DnsProperties:
          $ref: '#/components/schemas/PublicDnsNamespacePropertiesChange_DnsProperties'
      required:
      - DnsProperties
      type: object
    PublicDnsNamespaceChange:
      description: Updated properties for the public DNS namespace.
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: An updated description for the public DNS namespace.
        Properties:
          $ref: '#/components/schemas/PublicDnsNamespaceChange_Properties'
      type: object
    PublicDnsPropertiesMutable:
      description: DNS properties for the public DNS namespace.
      properties:
        SOA:
          $ref: '#/components/schemas/PublicDnsPropertiesMutable_SOA'
      required:
      - SOA
      type: object
    PublicDnsPropertiesMutableChange:
      description: Updated DNS properties for the public DNS namespace.
      properties:
        SOA:
          $ref: '#/components/schemas/PublicDnsPropertiesMutableChange_SOA'
      required:
      - SOA
      type: object
    ServiceType:
      enum:
      - HTTP
      - DNS_HTTP
      - DNS
      type: string
    ServiceChange:
      description: A complex type that contains changes to an existing service.
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: A description for the service.
        DnsConfig:
          $ref: '#/components/schemas/ServiceChange_DnsConfig'
        HealthCheckConfig:
          $ref: '#/components/schemas/ServiceChange_HealthCheckConfig'
      type: object
    ServiceFilterName:
      enum:
      - NAMESPACE_ID
      type: string
    ServiceFilter:
      description: A complex type that lets you specify the namespaces that you want
        to list services for.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceFilterName'
          - description: Specify <code>NAMESPACE_ID</code>.
        Values:
          allOf:
          - $ref: '#/components/schemas/FilterValues'
          - description: The values that are applicable to the value that you specify
              for <code>Condition</code> to filter the list of services.
        Condition:
          allOf:
          - $ref: '#/components/schemas/FilterCondition'
          - description: "<p>The operator that you want to use to determine whether\
              \ a service is returned by <code>ListServices</code>. Valid values for\
              \ <code>Condition</code> include the following:</p> <ul> <li> <p> <code>EQ</code>:\
              \ When you specify <code>EQ</code>, specify one namespace ID for <code>Values</code>.\
              \ <code>EQ</code> is the default condition and can be omitted.</p> </li>\
              \ </ul>"
      required:
      - Name
      - Values
      type: object
    ServiceSummary:
      description: A complex type that contains information about a specified service.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID that Cloud Map assigned to the service when you created
              it.
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) that Cloud Map assigns to
              the service when you create it.
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the service.
        Type:
          allOf:
          - $ref: '#/components/schemas/ServiceType'
          - description: <p>Describes the systems that can be used to discover the
              service instances.</p> <dl> <dt>DNS_HTTP</dt> <dd> <p>The service instances
              can be discovered using either DNS queries or the <code>DiscoverInstances</code>
              API operation.</p> </dd> <dt>HTTP</dt> <dd> <p>The service instances
              can only be discovered using the <code>DiscoverInstances</code> API
              operation.</p> </dd> <dt>DNS</dt> <dd> <p>Reserved.</p> </dd> </dl>
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: The description that you specify when you create the service.
        InstanceCount:
          allOf:
          - $ref: '#/components/schemas/ResourceCount'
          - description: The number of instances that are currently associated with
              the service. Instances that were previously associated with the service
              but that are deleted aren't included in the count. The count might not
              reflect pending registrations and deregistrations.
        DnsConfig:
          $ref: '#/components/schemas/ServiceSummary_DnsConfig'
        HealthCheckConfig:
          $ref: '#/components/schemas/ServiceChange_HealthCheckConfig'
        HealthCheckCustomConfig:
          $ref: '#/components/schemas/ServiceSummary_HealthCheckCustomConfig'
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the service was created.
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    Tag:
      description: A custom key-value pair that's associated with a resource.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: "The key identifier, or name, of the tag."
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: "The string value that's associated with the key of the tag.\
              \ You can set the value of a tag to an empty string, but you can't set\
              \ the value of a tag to null."
      required:
      - Key
      - Value
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    CreatePrivateDnsNamespaceRequest_Properties:
      allOf:
      - $ref: '#/components/schemas/PrivateDnsNamespaceProperties'
      - description: Properties for the private DNS namespace.
      example:
        DnsProperties:
          SOA:
            TTL: ""
    CreatePublicDnsNamespaceRequest_Properties:
      allOf:
      - $ref: '#/components/schemas/PublicDnsNamespaceProperties'
      - description: Properties for the public DNS namespace.
      example:
        DnsProperties:
          SOA:
            TTL: ""
    CreateServiceResponse_Service:
      allOf:
      - $ref: '#/components/schemas/Service'
      - description: A complex type that contains information about the new service.
    CreateServiceRequest_DnsConfig:
      allOf:
      - $ref: '#/components/schemas/DnsConfig'
      - description: 'A complex type that contains information about the Amazon Route 53
          records that you want Cloud Map to create when you register an instance. '
      example:
        DnsRecords: ""
        RoutingPolicy: ""
        NamespaceId: ""
    CreateServiceRequest_HealthCheckConfig:
      allOf:
      - $ref: '#/components/schemas/HealthCheckConfig'
      - description: "<p> <i>Public DNS and HTTP namespaces only.</i> A complex type\
          \ that contains settings for an optional Route\_53 health check. If you\
          \ specify settings for a health check, Cloud Map associates the health check\
          \ with all the Route\_53 DNS records that you specify in <code>DnsConfig</code>.</p>\
          \ <important> <p>If you specify a health check configuration, you can specify\
          \ either <code>HealthCheckCustomConfig</code> or <code>HealthCheckConfig</code>\
          \ but not both.</p> </important> <p>For information about the charges for\
          \ health checks, see <a href=\"http://aws.amazon.com/cloud-map/pricing/\"\
          >Cloud Map Pricing</a>.</p>"
      example:
        Type: ""
        ResourcePath: ""
        FailureThreshold: ""
    CreateServiceRequest_HealthCheckCustomConfig:
      allOf:
      - $ref: '#/components/schemas/HealthCheckCustomConfig'
      - description: "<p>A complex type that contains information about an optional\
          \ custom health check.</p> <important> <p>If you specify a health check\
          \ configuration, you can specify either <code>HealthCheckCustomConfig</code>\
          \ or <code>HealthCheckConfig</code> but not both.</p> </important> <p>You\
          \ can't add, update, or delete a <code>HealthCheckCustomConfig</code> configuration\
          \ from an existing service.</p>"
      example:
        FailureThreshold: ""
    GetInstanceResponse_Instance:
      allOf:
      - $ref: '#/components/schemas/Instance'
      - description: A complex type that contains information about a specified instance.
    GetNamespaceResponse_Namespace:
      allOf:
      - $ref: '#/components/schemas/Namespace'
      - description: A complex type that contains information about the specified
          namespace.
    GetOperationResponse_Operation:
      allOf:
      - $ref: '#/components/schemas/Operation'
      - description: A complex type that contains information about the operation.
    GetServiceResponse_Service:
      allOf:
      - $ref: '#/components/schemas/Service'
      - description: A complex type that contains information about the service.
    UpdateHttpNamespaceRequest_Namespace:
      allOf:
      - $ref: '#/components/schemas/HttpNamespaceChange'
      - description: Updated properties for the the HTTP namespace.
      example:
        Description: ""
    UpdatePrivateDnsNamespaceRequest_Namespace:
      allOf:
      - $ref: '#/components/schemas/PrivateDnsNamespaceChange'
      - description: Updated properties for the private DNS namespace.
      example:
        Description: ""
        Properties:
          DnsProperties:
            SOA:
              TTL: ""
    UpdatePublicDnsNamespaceRequest_Namespace:
      allOf:
      - $ref: '#/components/schemas/PublicDnsNamespaceChange'
      - description: Updated properties for the public DNS namespace.
      example:
        Description: ""
        Properties:
          DnsProperties:
            SOA:
              TTL: ""
    UpdateServiceRequest_Service:
      allOf:
      - $ref: '#/components/schemas/ServiceChange'
      - description: A complex type that contains the new settings for the service.
      example:
        Description: ""
        DnsConfig:
          DnsRecords: ""
        HealthCheckConfig:
          Type: ""
          ResourcePath: ""
          FailureThreshold: ""
    PrivateDnsNamespaceProperties_DnsProperties:
      allOf:
      - $ref: '#/components/schemas/PrivateDnsPropertiesMutable'
      - description: DNS properties for the private DNS namespace.
      example:
        SOA:
          TTL: ""
    PublicDnsNamespaceProperties_DnsProperties:
      allOf:
      - $ref: '#/components/schemas/PublicDnsPropertiesMutable'
      - description: DNS properties for the public DNS namespace.
      example:
        SOA:
          TTL: ""
    Service_DnsConfig:
      allOf:
      - $ref: '#/components/schemas/DnsConfig'
      - description: <p>A complex type that contains information about the Route 53
          DNS records that you want Cloud Map to create when you register an instance.</p>
          <important> <p>The record types of a service can only be changed by deleting
          the service and recreating it with a new <code>Dnsconfig</code>.</p> </important>
    Service_HealthCheckConfig:
      allOf:
      - $ref: '#/components/schemas/HealthCheckConfig'
      - description: "<p> <i>Public DNS and HTTP namespaces only.</i> A complex type\
          \ that contains settings for an optional health check. If you specify settings\
          \ for a health check, Cloud Map associates the health check with the records\
          \ that you specify in <code>DnsConfig</code>.</p> <p>For information about\
          \ the charges for health checks, see <a href=\"http://aws.amazon.com/route53/pricing/\"\
          >Amazon Route\_53 Pricing</a>.</p>"
    Service_HealthCheckCustomConfig:
      allOf:
      - $ref: '#/components/schemas/HealthCheckCustomConfig'
      - description: "<p>A complex type that contains information about an optional\
          \ custom health check.</p> <important> <p>If you specify a health check\
          \ configuration, you can specify either <code>HealthCheckCustomConfig</code>\
          \ or <code>HealthCheckConfig</code> but not both.</p> </important>"
    DnsProperties_SOA:
      allOf:
      - $ref: '#/components/schemas/SOA'
      - description: Start of Authority (SOA) record for the hosted zone.
    Namespace_Properties:
      allOf:
      - $ref: '#/components/schemas/NamespaceProperties'
      - description: A complex type that contains information that's specific to the
          type of the namespace.
    NamespaceProperties_DnsProperties:
      allOf:
      - $ref: '#/components/schemas/DnsProperties'
      - description: A complex type that contains the ID for the Route 53 hosted zone
          that Cloud Map creates when you create a namespace.
    NamespaceProperties_HttpProperties:
      allOf:
      - $ref: '#/components/schemas/HttpProperties'
      - description: A complex type that contains the name of an HTTP namespace.
    NamespaceSummary_Properties:
      allOf:
      - $ref: '#/components/schemas/NamespaceProperties'
      - description: The properties of the namespace.
    PrivateDnsNamespacePropertiesChange_DnsProperties:
      allOf:
      - $ref: '#/components/schemas/PrivateDnsPropertiesMutableChange'
      - description: Updated DNS properties for the private DNS namespace.
      example:
        SOA:
          TTL: ""
    PrivateDnsNamespaceChange_Properties:
      allOf:
      - $ref: '#/components/schemas/PrivateDnsNamespacePropertiesChange'
      - description: Properties to be updated in the private DNS namespace.
      example:
        DnsProperties:
          SOA:
            TTL: ""
    PrivateDnsPropertiesMutable_SOA:
      allOf:
      - $ref: '#/components/schemas/SOA'
      - description: Fields for the Start of Authority (SOA) record for the hosted
          zone for the private DNS namespace.
      example:
        TTL: ""
    PrivateDnsPropertiesMutableChange_SOA:
      allOf:
      - $ref: '#/components/schemas/SOAChange'
      - description: Updated fields for the Start of Authority (SOA) record for the
          hosted zone for the private DNS namespace.
      example:
        TTL: ""
    PublicDnsNamespacePropertiesChange_DnsProperties:
      allOf:
      - $ref: '#/components/schemas/PublicDnsPropertiesMutableChange'
      - description: Updated DNS properties for the hosted zone for the public DNS
          namespace.
      example:
        SOA:
          TTL: ""
    PublicDnsNamespaceChange_Properties:
      allOf:
      - $ref: '#/components/schemas/PublicDnsNamespacePropertiesChange'
      - description: Properties to be updated in the public DNS namespace.
      example:
        DnsProperties:
          SOA:
            TTL: ""
    PublicDnsPropertiesMutable_SOA:
      allOf:
      - $ref: '#/components/schemas/SOA'
      - description: Start of Authority (SOA) record for the hosted zone for the public
          DNS namespace.
      example:
        TTL: ""
    PublicDnsPropertiesMutableChange_SOA:
      allOf:
      - $ref: '#/components/schemas/SOAChange'
      - description: Updated fields for the Start of Authority (SOA) record for the
          hosted zone for the public DNS namespace.
      example:
        TTL: ""
    ServiceChange_DnsConfig:
      allOf:
      - $ref: '#/components/schemas/DnsConfigChange'
      - description: Information about the Route 53 DNS records that you want Cloud
          Map to create when you register an instance.
      example:
        DnsRecords: ""
    ServiceChange_HealthCheckConfig:
      allOf:
      - $ref: '#/components/schemas/HealthCheckConfig'
      - description: " <i>Public DNS and HTTP namespaces only.</i> Settings for an\
          \ optional health check. If you specify settings for a health check, Cloud\
          \ Map associates the health check with the records that you specify in <code>DnsConfig</code>."
      example:
        Type: ""
        ResourcePath: ""
        FailureThreshold: ""
    ServiceSummary_DnsConfig:
      allOf:
      - $ref: '#/components/schemas/DnsConfig'
      - description: Information about the Route 53 DNS records that you want Cloud
          Map to create when you register an instance.
    ServiceSummary_HealthCheckCustomConfig:
      allOf:
      - $ref: '#/components/schemas/HealthCheckCustomConfig'
      - description: "<p>Information about an optional custom health check. A custom\
          \ health check, which requires that you use a third-party health checker\
          \ to evaluate the health of your resources, is useful in the following circumstances:</p>\
          \ <ul> <li> <p>You can't use a health check that's defined by <code>HealthCheckConfig</code>\
          \ because the resource isn't available over the internet. For example, you\
          \ can use a custom health check when the instance is in an Amazon VPC. (To\
          \ check the health of resources in a VPC, the health checker must also be\
          \ in the VPC.)</p> </li> <li> <p>You want to use a third-party health checker\
          \ regardless of where your resources are located.</p> </li> </ul> <important>\
          \ <p>If you specify a health check configuration, you can specify either\
          \ <code>HealthCheckCustomConfig</code> or <code>HealthCheckConfig</code>\
          \ but not both.</p> </important>"
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

