/**
 * AWS Cloud Map
 * <fullname>Cloud Map</fullname> <p>With Cloud Map, you can configure public DNS, private DNS, or HTTP namespaces that your microservice applications run in. When an instance becomes available, you can call the Cloud Map API to register the instance with Cloud Map. For public or private DNS namespaces, Cloud Map automatically creates DNS records and an optional health check. Clients that submit public or private DNS queries, or HTTP requests, for the service receive an answer that contains up to eight healthy records. </p>
 *
 * The version of the OpenAPI document: 2017-03-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomHealthStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomHealthStatus::OAICustomHealthStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomHealthStatus::OAICustomHealthStatus() {
    this->initializeModel();
}

OAICustomHealthStatus::~OAICustomHealthStatus() {}

void OAICustomHealthStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICustomHealthStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICustomHealthStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("HEALTHY", Qt::CaseInsensitive) == 0) {
        m_value = eOAICustomHealthStatus::HEALTHY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNHEALTHY", Qt::CaseInsensitive) == 0) {
        m_value = eOAICustomHealthStatus::UNHEALTHY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICustomHealthStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICustomHealthStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICustomHealthStatus::HEALTHY:
            val = "HEALTHY";
            break;
        case eOAICustomHealthStatus::UNHEALTHY:
            val = "UNHEALTHY";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICustomHealthStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICustomHealthStatus::eOAICustomHealthStatus OAICustomHealthStatus::getValue() const {
    return m_value;
}

void OAICustomHealthStatus::setValue(const OAICustomHealthStatus::eOAICustomHealthStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICustomHealthStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAICustomHealthStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
