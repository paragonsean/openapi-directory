/**
 * AWS Cloud Map
 * <fullname>Cloud Map</fullname> <p>With Cloud Map, you can configure public DNS, private DNS, or HTTP namespaces that your microservice applications run in. When an instance becomes available, you can call the Cloud Map API to register the instance with Cloud Map. For public or private DNS namespaces, Cloud Map automatically creates DNS records and an optional health check. Clients that submit public or private DNS queries, or HTTP requests, for the service receive an answer that contains up to eight healthy records. </p>
 *
 * The version of the OpenAPI document: 2017-03-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIService.h
 *
 * A complex type that contains information about the specified service.
 */

#ifndef OAIService_H
#define OAIService_H

#include <QJsonObject>

#include "OAIServiceType.h"
#include "OAIService_DnsConfig.h"
#include "OAIService_HealthCheckConfig.h"
#include "OAIService_HealthCheckCustomConfig.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIService_DnsConfig;
class OAIService_HealthCheckConfig;
class OAIService_HealthCheckCustomConfig;

class OAIService : public OAIObject {
public:
    OAIService();
    OAIService(QString json);
    ~OAIService() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNamespaceId() const;
    void setNamespaceId(const QString &namespace_id);
    bool is_namespace_id_Set() const;
    bool is_namespace_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getInstanceCount() const;
    void setInstanceCount(const qint32 &instance_count);
    bool is_instance_count_Set() const;
    bool is_instance_count_Valid() const;

    OAIService_DnsConfig getDnsConfig() const;
    void setDnsConfig(const OAIService_DnsConfig &dns_config);
    bool is_dns_config_Set() const;
    bool is_dns_config_Valid() const;

    OAIServiceType getType() const;
    void setType(const OAIServiceType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIService_HealthCheckConfig getHealthCheckConfig() const;
    void setHealthCheckConfig(const OAIService_HealthCheckConfig &health_check_config);
    bool is_health_check_config_Set() const;
    bool is_health_check_config_Valid() const;

    OAIService_HealthCheckCustomConfig getHealthCheckCustomConfig() const;
    void setHealthCheckCustomConfig(const OAIService_HealthCheckCustomConfig &health_check_custom_config);
    bool is_health_check_custom_config_Set() const;
    bool is_health_check_custom_config_Valid() const;

    QDateTime getCreateDate() const;
    void setCreateDate(const QDateTime &create_date);
    bool is_create_date_Set() const;
    bool is_create_date_Valid() const;

    QString getCreatorRequestId() const;
    void setCreatorRequestId(const QString &creator_request_id);
    bool is_creator_request_id_Set() const;
    bool is_creator_request_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_namespace_id;
    bool m_namespace_id_isSet;
    bool m_namespace_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_instance_count;
    bool m_instance_count_isSet;
    bool m_instance_count_isValid;

    OAIService_DnsConfig m_dns_config;
    bool m_dns_config_isSet;
    bool m_dns_config_isValid;

    OAIServiceType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIService_HealthCheckConfig m_health_check_config;
    bool m_health_check_config_isSet;
    bool m_health_check_config_isValid;

    OAIService_HealthCheckCustomConfig m_health_check_custom_config;
    bool m_health_check_custom_config_isSet;
    bool m_health_check_custom_config_isValid;

    QDateTime m_create_date;
    bool m_create_date_isSet;
    bool m_create_date_isValid;

    QString m_creator_request_id;
    bool m_creator_request_id_isSet;
    bool m_creator_request_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIService)

#endif // OAIService_H
