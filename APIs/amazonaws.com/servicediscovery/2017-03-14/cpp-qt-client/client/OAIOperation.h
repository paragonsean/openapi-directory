/**
 * AWS Cloud Map
 * <fullname>Cloud Map</fullname> <p>With Cloud Map, you can configure public DNS, private DNS, or HTTP namespaces that your microservice applications run in. When an instance becomes available, you can call the Cloud Map API to register the instance with Cloud Map. For public or private DNS namespaces, Cloud Map automatically creates DNS records and an optional health check. Clients that submit public or private DNS queries, or HTTP requests, for the service receive an answer that contains up to eight healthy records. </p>
 *
 * The version of the OpenAPI document: 2017-03-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOperation.h
 *
 * A complex type that contains information about a specified operation.
 */

#ifndef OAIOperation_H
#define OAIOperation_H

#include <QJsonObject>

#include "OAIOperationStatus.h"
#include "OAIOperationType.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOperation : public OAIObject {
public:
    OAIOperation();
    OAIOperation(QString json);
    ~OAIOperation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIOperationType getType() const;
    void setType(const OAIOperationType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIOperationStatus getStatus() const;
    void setStatus(const OAIOperationStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    QString getErrorCode() const;
    void setErrorCode(const QString &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QDateTime getCreateDate() const;
    void setCreateDate(const QDateTime &create_date);
    bool is_create_date_Set() const;
    bool is_create_date_Valid() const;

    QDateTime getUpdateDate() const;
    void setUpdateDate(const QDateTime &update_date);
    bool is_update_date_Set() const;
    bool is_update_date_Valid() const;

    QMap getTargets() const;
    void setTargets(const QMap &targets);
    bool is_targets_Set() const;
    bool is_targets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIOperationType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIOperationStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    QString m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QDateTime m_create_date;
    bool m_create_date_isSet;
    bool m_create_date_isValid;

    QDateTime m_update_date;
    bool m_update_date_isSet;
    bool m_update_date_isValid;

    QMap m_targets;
    bool m_targets_isSet;
    bool m_targets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOperation)

#endif // OAIOperation_H
