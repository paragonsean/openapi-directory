/**
 * AWS Cloud Map
 * <fullname>Cloud Map</fullname> <p>With Cloud Map, you can configure public DNS, private DNS, or HTTP namespaces that your microservice applications run in. When an instance becomes available, you can call the Cloud Map API to register the instance with Cloud Map. For public or private DNS namespaces, Cloud Map automatically creates DNS records and an optional health check. Clients that submit public or private DNS queries, or HTTP requests, for the service receive an answer that contains up to eight healthy records. </p>
 *
 * The version of the OpenAPI document: 2017-03-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetInstanceResponse.h
 *
 * 
 */

#ifndef OAIGetInstanceResponse_H
#define OAIGetInstanceResponse_H

#include <QJsonObject>

#include "OAIGetInstanceResponse_Instance.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetInstanceResponse_Instance;

class OAIGetInstanceResponse : public OAIObject {
public:
    OAIGetInstanceResponse();
    OAIGetInstanceResponse(QString json);
    ~OAIGetInstanceResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetInstanceResponse_Instance getInstance() const;
    void setInstance(const OAIGetInstanceResponse_Instance &instance);
    bool is_instance_Set() const;
    bool is_instance_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetInstanceResponse_Instance m_instance;
    bool m_instance_isSet;
    bool m_instance_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetInstanceResponse)

#endif // OAIGetInstanceResponse_H
