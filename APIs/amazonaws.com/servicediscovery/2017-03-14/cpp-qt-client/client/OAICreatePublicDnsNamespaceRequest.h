/**
 * AWS Cloud Map
 * <fullname>Cloud Map</fullname> <p>With Cloud Map, you can configure public DNS, private DNS, or HTTP namespaces that your microservice applications run in. When an instance becomes available, you can call the Cloud Map API to register the instance with Cloud Map. For public or private DNS namespaces, Cloud Map automatically creates DNS records and an optional health check. Clients that submit public or private DNS queries, or HTTP requests, for the service receive an answer that contains up to eight healthy records. </p>
 *
 * The version of the OpenAPI document: 2017-03-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreatePublicDnsNamespaceRequest.h
 *
 * 
 */

#ifndef OAICreatePublicDnsNamespaceRequest_H
#define OAICreatePublicDnsNamespaceRequest_H

#include <QJsonObject>

#include "OAICreatePublicDnsNamespaceRequest_Properties.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreatePublicDnsNamespaceRequest_Properties;

class OAICreatePublicDnsNamespaceRequest : public OAIObject {
public:
    OAICreatePublicDnsNamespaceRequest();
    OAICreatePublicDnsNamespaceRequest(QString json);
    ~OAICreatePublicDnsNamespaceRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getCreatorRequestId() const;
    void setCreatorRequestId(const QString &creator_request_id);
    bool is_creator_request_id_Set() const;
    bool is_creator_request_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAICreatePublicDnsNamespaceRequest_Properties getProperties() const;
    void setProperties(const OAICreatePublicDnsNamespaceRequest_Properties &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_creator_request_id;
    bool m_creator_request_id_isSet;
    bool m_creator_request_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAICreatePublicDnsNamespaceRequest_Properties m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreatePublicDnsNamespaceRequest)

#endif // OAICreatePublicDnsNamespaceRequest_H
