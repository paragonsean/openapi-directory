/**
 * AWS Cloud Map
 * <fullname>Cloud Map</fullname> <p>With Cloud Map, you can configure public DNS, private DNS, or HTTP namespaces that your microservice applications run in. When an instance becomes available, you can call the Cloud Map API to register the instance with Cloud Map. For public or private DNS namespaces, Cloud Map automatically creates DNS records and an optional health check. Clients that submit public or private DNS queries, or HTTP requests, for the service receive an answer that contains up to eight healthy records. </p>
 *
 * The version of the OpenAPI document: 2017-03-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateServiceRequest_HealthCheckConfig.h
 *
 * 
 */

#ifndef OAICreateServiceRequest_HealthCheckConfig_H
#define OAICreateServiceRequest_HealthCheckConfig_H

#include <QJsonObject>

#include "OAIHealthCheckType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateServiceRequest_HealthCheckConfig : public OAIObject {
public:
    OAICreateServiceRequest_HealthCheckConfig();
    OAICreateServiceRequest_HealthCheckConfig(QString json);
    ~OAICreateServiceRequest_HealthCheckConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHealthCheckType getType() const;
    void setType(const OAIHealthCheckType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getResourcePath() const;
    void setResourcePath(const QString &resource_path);
    bool is_resource_path_Set() const;
    bool is_resource_path_Valid() const;

    qint32 getFailureThreshold() const;
    void setFailureThreshold(const qint32 &failure_threshold);
    bool is_failure_threshold_Set() const;
    bool is_failure_threshold_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHealthCheckType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_resource_path;
    bool m_resource_path_isSet;
    bool m_resource_path_isValid;

    qint32 m_failure_threshold;
    bool m_failure_threshold_isSet;
    bool m_failure_threshold_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateServiceRequest_HealthCheckConfig)

#endif // OAICreateServiceRequest_HealthCheckConfig_H
