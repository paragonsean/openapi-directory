/**
 * AWS Cloud Map
 * <fullname>Cloud Map</fullname> <p>With Cloud Map, you can configure public DNS, private DNS, or HTTP namespaces that your microservice applications run in. When an instance becomes available, you can call the Cloud Map API to register the instance with Cloud Map. For public or private DNS namespaces, Cloud Map automatically creates DNS records and an optional health check. Clients that submit public or private DNS queries, or HTTP requests, for the service receive an answer that contains up to eight healthy records. </p>
 *
 * The version of the OpenAPI document: 2017-03-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceType::OAIServiceType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceType::OAIServiceType() {
    this->initializeModel();
}

OAIServiceType::~OAIServiceType() {}

void OAIServiceType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIServiceType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIServiceType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("HTTP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceType::HTTP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DNS_HTTP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceType::DNS_HTTP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DNS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceType::DNS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIServiceType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIServiceType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIServiceType::HTTP:
            val = "HTTP";
            break;
        case eOAIServiceType::DNS_HTTP:
            val = "DNS_HTTP";
            break;
        case eOAIServiceType::DNS:
            val = "DNS";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIServiceType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIServiceType::eOAIServiceType OAIServiceType::getValue() const {
    return m_value;
}

void OAIServiceType::setValue(const OAIServiceType::eOAIServiceType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIServiceType::isSet() const {
    
    return m_value_isSet;
}

bool OAIServiceType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
