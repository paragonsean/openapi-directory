/**
 * AWS Cloud Map
 * <fullname>Cloud Map</fullname> <p>With Cloud Map, you can configure public DNS, private DNS, or HTTP namespaces that your microservice applications run in. When an instance becomes available, you can call the Cloud Map API to register the instance with Cloud Map. For public or private DNS namespaces, Cloud Map automatically creates DNS records and an optional health check. Clients that submit public or private DNS queries, or HTTP requests, for the service receive an answer that contains up to eight healthy records. </p>
 *
 * The version of the OpenAPI document: 2017-03-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHttpInstanceSummary.h
 *
 * In a response to a &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cloud-map/latest/api/API_DiscoverInstances.html\&quot;&gt;DiscoverInstances&lt;/a&gt; request, &lt;code&gt;HttpInstanceSummary&lt;/code&gt; contains information about one instance that matches the values that you specified in the request.
 */

#ifndef OAIHttpInstanceSummary_H
#define OAIHttpInstanceSummary_H

#include <QJsonObject>

#include "OAIHealthStatus.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHttpInstanceSummary : public OAIObject {
public:
    OAIHttpInstanceSummary();
    OAIHttpInstanceSummary(QString json);
    ~OAIHttpInstanceSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInstanceId() const;
    void setInstanceId(const QString &instance_id);
    bool is_instance_id_Set() const;
    bool is_instance_id_Valid() const;

    QString getNamespaceName() const;
    void setNamespaceName(const QString &namespace_name);
    bool is_namespace_name_Set() const;
    bool is_namespace_name_Valid() const;

    QString getServiceName() const;
    void setServiceName(const QString &service_name);
    bool is_service_name_Set() const;
    bool is_service_name_Valid() const;

    OAIHealthStatus getHealthStatus() const;
    void setHealthStatus(const OAIHealthStatus &health_status);
    bool is_health_status_Set() const;
    bool is_health_status_Valid() const;

    QMap getAttributes() const;
    void setAttributes(const QMap &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_instance_id;
    bool m_instance_id_isSet;
    bool m_instance_id_isValid;

    QString m_namespace_name;
    bool m_namespace_name_isSet;
    bool m_namespace_name_isValid;

    QString m_service_name;
    bool m_service_name_isSet;
    bool m_service_name_isValid;

    OAIHealthStatus m_health_status;
    bool m_health_status_isSet;
    bool m_health_status_isValid;

    QMap m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHttpInstanceSummary)

#endif // OAIHttpInstanceSummary_H
