/**
 * AWS Cloud Map
 * <fullname>Cloud Map</fullname> <p>With Cloud Map, you can configure public DNS, private DNS, or HTTP namespaces that your microservice applications run in. When an instance becomes available, you can call the Cloud Map API to register the instance with Cloud Map. For public or private DNS namespaces, Cloud Map automatically creates DNS records and an optional health check. Clients that submit public or private DNS queries, or HTTP requests, for the service receive an answer that contains up to eight healthy records. </p>
 *
 * The version of the OpenAPI document: 2017-03-14
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HealthCheckCustomConfig model module.
 * @module model/HealthCheckCustomConfig
 * @version 2017-03-14
 */
class HealthCheckCustomConfig {
    /**
     * Constructs a new <code>HealthCheckCustomConfig</code>.
     * &lt;p&gt;A complex type that contains information about an optional custom health check. A custom health check, which requires that you use a third-party health checker to evaluate the health of your resources, is useful in the following circumstances:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You can&#39;t use a health check that&#39;s defined by &lt;code&gt;HealthCheckConfig&lt;/code&gt; because the resource isn&#39;t available over the internet. For example, you can use a custom health check when the instance is in an Amazon VPC. (To check the health of resources in a VPC, the health checker must also be in the VPC.)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;You want to use a third-party health checker regardless of where your resources are located.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;important&gt; &lt;p&gt;If you specify a health check configuration, you can specify either &lt;code&gt;HealthCheckCustomConfig&lt;/code&gt; or &lt;code&gt;HealthCheckConfig&lt;/code&gt; but not both.&lt;/p&gt; &lt;/important&gt; &lt;p&gt;To change the status of a custom health check, submit an &lt;code&gt;UpdateInstanceCustomHealthStatus&lt;/code&gt; request. Cloud Map doesn&#39;t monitor the status of the resource, it just keeps a record of the status specified in the most recent &lt;code&gt;UpdateInstanceCustomHealthStatus&lt;/code&gt; request.&lt;/p&gt; &lt;p&gt;Here&#39;s how custom health checks work:&lt;/p&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;You create a service.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;You register an instance.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;You configure a third-party health checker to monitor the resource that&#39;s associated with the new instance. &lt;/p&gt; &lt;note&gt; &lt;p&gt;Cloud Map doesn&#39;t check the health of the resource directly. &lt;/p&gt; &lt;/note&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The third-party health-checker determines that the resource is unhealthy and notifies your application.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Your application submits an &lt;code&gt;UpdateInstanceCustomHealthStatus&lt;/code&gt; request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cloud Map waits for 30 seconds.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If another &lt;code&gt;UpdateInstanceCustomHealthStatus&lt;/code&gt; request doesn&#39;t arrive during that time to change the status back to healthy, Cloud Map stops routing traffic to the resource.&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt;
     * @alias module:model/HealthCheckCustomConfig
     */
    constructor() { 
        
        HealthCheckCustomConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HealthCheckCustomConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HealthCheckCustomConfig} obj Optional instance to populate.
     * @return {module:model/HealthCheckCustomConfig} The populated <code>HealthCheckCustomConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HealthCheckCustomConfig();

            if (data.hasOwnProperty('FailureThreshold')) {
                obj['FailureThreshold'] = ApiClient.convertToType(data['FailureThreshold'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HealthCheckCustomConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HealthCheckCustomConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `FailureThreshold`
        if (data['FailureThreshold']) { // data not null
          Number.validateJSON(data['FailureThreshold']);
        }

        return true;
    }


}



/**
 * @member {Number} FailureThreshold
 */
HealthCheckCustomConfig.prototype['FailureThreshold'] = undefined;






export default HealthCheckCustomConfig;

