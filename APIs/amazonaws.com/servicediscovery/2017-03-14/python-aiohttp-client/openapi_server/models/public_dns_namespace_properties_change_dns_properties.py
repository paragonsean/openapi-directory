# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.public_dns_properties_mutable_change_soa import PublicDnsPropertiesMutableChangeSOA
from openapi_server import util


class PublicDnsNamespacePropertiesChangeDnsProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, soa: PublicDnsPropertiesMutableChangeSOA=None):
        """PublicDnsNamespacePropertiesChangeDnsProperties - a model defined in OpenAPI

        :param soa: The soa of this PublicDnsNamespacePropertiesChangeDnsProperties.
        """
        self.openapi_types = {
            'soa': PublicDnsPropertiesMutableChangeSOA
        }

        self.attribute_map = {
            'soa': 'SOA'
        }

        self._soa = soa

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublicDnsNamespacePropertiesChangeDnsProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublicDnsNamespacePropertiesChange_DnsProperties of this PublicDnsNamespacePropertiesChangeDnsProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def soa(self):
        """Gets the soa of this PublicDnsNamespacePropertiesChangeDnsProperties.


        :return: The soa of this PublicDnsNamespacePropertiesChangeDnsProperties.
        :rtype: PublicDnsPropertiesMutableChangeSOA
        """
        return self._soa

    @soa.setter
    def soa(self, soa):
        """Sets the soa of this PublicDnsNamespacePropertiesChangeDnsProperties.


        :param soa: The soa of this PublicDnsNamespacePropertiesChangeDnsProperties.
        :type soa: PublicDnsPropertiesMutableChangeSOA
        """
        if soa is None:
            raise ValueError("Invalid value for `soa`, must not be `None`")

        self._soa = soa
