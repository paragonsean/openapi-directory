# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_service_request_dns_config import CreateServiceRequestDnsConfig
from openapi_server.models.create_service_request_health_check_config import CreateServiceRequestHealthCheckConfig
from openapi_server.models.create_service_request_health_check_custom_config import CreateServiceRequestHealthCheckCustomConfig
from openapi_server.models.service_type_option import ServiceTypeOption
from openapi_server import util


class CreateServiceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, namespace_id: str=None, creator_request_id: str=None, description: str=None, dns_config: CreateServiceRequestDnsConfig=None, health_check_config: CreateServiceRequestHealthCheckConfig=None, health_check_custom_config: CreateServiceRequestHealthCheckCustomConfig=None, tags: List=None, type: ServiceTypeOption=None):
        """CreateServiceRequest - a model defined in OpenAPI

        :param name: The name of this CreateServiceRequest.
        :param namespace_id: The namespace_id of this CreateServiceRequest.
        :param creator_request_id: The creator_request_id of this CreateServiceRequest.
        :param description: The description of this CreateServiceRequest.
        :param dns_config: The dns_config of this CreateServiceRequest.
        :param health_check_config: The health_check_config of this CreateServiceRequest.
        :param health_check_custom_config: The health_check_custom_config of this CreateServiceRequest.
        :param tags: The tags of this CreateServiceRequest.
        :param type: The type of this CreateServiceRequest.
        """
        self.openapi_types = {
            'name': str,
            'namespace_id': str,
            'creator_request_id': str,
            'description': str,
            'dns_config': CreateServiceRequestDnsConfig,
            'health_check_config': CreateServiceRequestHealthCheckConfig,
            'health_check_custom_config': CreateServiceRequestHealthCheckCustomConfig,
            'tags': List,
            'type': ServiceTypeOption
        }

        self.attribute_map = {
            'name': 'Name',
            'namespace_id': 'NamespaceId',
            'creator_request_id': 'CreatorRequestId',
            'description': 'Description',
            'dns_config': 'DnsConfig',
            'health_check_config': 'HealthCheckConfig',
            'health_check_custom_config': 'HealthCheckCustomConfig',
            'tags': 'Tags',
            'type': 'Type'
        }

        self._name = name
        self._namespace_id = namespace_id
        self._creator_request_id = creator_request_id
        self._description = description
        self._dns_config = dns_config
        self._health_check_config = health_check_config
        self._health_check_custom_config = health_check_custom_config
        self._tags = tags
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateServiceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateServiceRequest of this CreateServiceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CreateServiceRequest.


        :return: The name of this CreateServiceRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateServiceRequest.


        :param name: The name of this CreateServiceRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def namespace_id(self):
        """Gets the namespace_id of this CreateServiceRequest.


        :return: The namespace_id of this CreateServiceRequest.
        :rtype: str
        """
        return self._namespace_id

    @namespace_id.setter
    def namespace_id(self, namespace_id):
        """Sets the namespace_id of this CreateServiceRequest.


        :param namespace_id: The namespace_id of this CreateServiceRequest.
        :type namespace_id: str
        """

        self._namespace_id = namespace_id

    @property
    def creator_request_id(self):
        """Gets the creator_request_id of this CreateServiceRequest.


        :return: The creator_request_id of this CreateServiceRequest.
        :rtype: str
        """
        return self._creator_request_id

    @creator_request_id.setter
    def creator_request_id(self, creator_request_id):
        """Sets the creator_request_id of this CreateServiceRequest.


        :param creator_request_id: The creator_request_id of this CreateServiceRequest.
        :type creator_request_id: str
        """

        self._creator_request_id = creator_request_id

    @property
    def description(self):
        """Gets the description of this CreateServiceRequest.


        :return: The description of this CreateServiceRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateServiceRequest.


        :param description: The description of this CreateServiceRequest.
        :type description: str
        """

        self._description = description

    @property
    def dns_config(self):
        """Gets the dns_config of this CreateServiceRequest.


        :return: The dns_config of this CreateServiceRequest.
        :rtype: CreateServiceRequestDnsConfig
        """
        return self._dns_config

    @dns_config.setter
    def dns_config(self, dns_config):
        """Sets the dns_config of this CreateServiceRequest.


        :param dns_config: The dns_config of this CreateServiceRequest.
        :type dns_config: CreateServiceRequestDnsConfig
        """

        self._dns_config = dns_config

    @property
    def health_check_config(self):
        """Gets the health_check_config of this CreateServiceRequest.


        :return: The health_check_config of this CreateServiceRequest.
        :rtype: CreateServiceRequestHealthCheckConfig
        """
        return self._health_check_config

    @health_check_config.setter
    def health_check_config(self, health_check_config):
        """Sets the health_check_config of this CreateServiceRequest.


        :param health_check_config: The health_check_config of this CreateServiceRequest.
        :type health_check_config: CreateServiceRequestHealthCheckConfig
        """

        self._health_check_config = health_check_config

    @property
    def health_check_custom_config(self):
        """Gets the health_check_custom_config of this CreateServiceRequest.


        :return: The health_check_custom_config of this CreateServiceRequest.
        :rtype: CreateServiceRequestHealthCheckCustomConfig
        """
        return self._health_check_custom_config

    @health_check_custom_config.setter
    def health_check_custom_config(self, health_check_custom_config):
        """Sets the health_check_custom_config of this CreateServiceRequest.


        :param health_check_custom_config: The health_check_custom_config of this CreateServiceRequest.
        :type health_check_custom_config: CreateServiceRequestHealthCheckCustomConfig
        """

        self._health_check_custom_config = health_check_custom_config

    @property
    def tags(self):
        """Gets the tags of this CreateServiceRequest.


        :return: The tags of this CreateServiceRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateServiceRequest.


        :param tags: The tags of this CreateServiceRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def type(self):
        """Gets the type of this CreateServiceRequest.


        :return: The type of this CreateServiceRequest.
        :rtype: ServiceTypeOption
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CreateServiceRequest.


        :param type: The type of this CreateServiceRequest.
        :type type: ServiceTypeOption
        """

        self._type = type
