# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.private_dns_properties_mutable_change_soa import PrivateDnsPropertiesMutableChangeSOA
from openapi_server import util


class PrivateDnsPropertiesMutableChange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, soa: PrivateDnsPropertiesMutableChangeSOA=None):
        """PrivateDnsPropertiesMutableChange - a model defined in OpenAPI

        :param soa: The soa of this PrivateDnsPropertiesMutableChange.
        """
        self.openapi_types = {
            'soa': PrivateDnsPropertiesMutableChangeSOA
        }

        self.attribute_map = {
            'soa': 'SOA'
        }

        self._soa = soa

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrivateDnsPropertiesMutableChange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrivateDnsPropertiesMutableChange of this PrivateDnsPropertiesMutableChange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def soa(self):
        """Gets the soa of this PrivateDnsPropertiesMutableChange.


        :return: The soa of this PrivateDnsPropertiesMutableChange.
        :rtype: PrivateDnsPropertiesMutableChangeSOA
        """
        return self._soa

    @soa.setter
    def soa(self, soa):
        """Sets the soa of this PrivateDnsPropertiesMutableChange.


        :param soa: The soa of this PrivateDnsPropertiesMutableChange.
        :type soa: PrivateDnsPropertiesMutableChangeSOA
        """
        if soa is None:
            raise ValueError("Invalid value for `soa`, must not be `None`")

        self._soa = soa
