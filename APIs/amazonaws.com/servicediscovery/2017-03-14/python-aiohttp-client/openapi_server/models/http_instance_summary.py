# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.health_status import HealthStatus
from openapi_server import util


class HttpInstanceSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_id: str=None, namespace_name: str=None, service_name: str=None, health_status: HealthStatus=None, attributes: Dict=None):
        """HttpInstanceSummary - a model defined in OpenAPI

        :param instance_id: The instance_id of this HttpInstanceSummary.
        :param namespace_name: The namespace_name of this HttpInstanceSummary.
        :param service_name: The service_name of this HttpInstanceSummary.
        :param health_status: The health_status of this HttpInstanceSummary.
        :param attributes: The attributes of this HttpInstanceSummary.
        """
        self.openapi_types = {
            'instance_id': str,
            'namespace_name': str,
            'service_name': str,
            'health_status': HealthStatus,
            'attributes': Dict
        }

        self.attribute_map = {
            'instance_id': 'InstanceId',
            'namespace_name': 'NamespaceName',
            'service_name': 'ServiceName',
            'health_status': 'HealthStatus',
            'attributes': 'Attributes'
        }

        self._instance_id = instance_id
        self._namespace_name = namespace_name
        self._service_name = service_name
        self._health_status = health_status
        self._attributes = attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HttpInstanceSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HttpInstanceSummary of this HttpInstanceSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_id(self):
        """Gets the instance_id of this HttpInstanceSummary.


        :return: The instance_id of this HttpInstanceSummary.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this HttpInstanceSummary.


        :param instance_id: The instance_id of this HttpInstanceSummary.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def namespace_name(self):
        """Gets the namespace_name of this HttpInstanceSummary.


        :return: The namespace_name of this HttpInstanceSummary.
        :rtype: str
        """
        return self._namespace_name

    @namespace_name.setter
    def namespace_name(self, namespace_name):
        """Sets the namespace_name of this HttpInstanceSummary.


        :param namespace_name: The namespace_name of this HttpInstanceSummary.
        :type namespace_name: str
        """

        self._namespace_name = namespace_name

    @property
    def service_name(self):
        """Gets the service_name of this HttpInstanceSummary.


        :return: The service_name of this HttpInstanceSummary.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this HttpInstanceSummary.


        :param service_name: The service_name of this HttpInstanceSummary.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def health_status(self):
        """Gets the health_status of this HttpInstanceSummary.


        :return: The health_status of this HttpInstanceSummary.
        :rtype: HealthStatus
        """
        return self._health_status

    @health_status.setter
    def health_status(self, health_status):
        """Sets the health_status of this HttpInstanceSummary.


        :param health_status: The health_status of this HttpInstanceSummary.
        :type health_status: HealthStatus
        """

        self._health_status = health_status

    @property
    def attributes(self):
        """Gets the attributes of this HttpInstanceSummary.


        :return: The attributes of this HttpInstanceSummary.
        :rtype: Dict
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this HttpInstanceSummary.


        :param attributes: The attributes of this HttpInstanceSummary.
        :type attributes: Dict
        """

        self._attributes = attributes
