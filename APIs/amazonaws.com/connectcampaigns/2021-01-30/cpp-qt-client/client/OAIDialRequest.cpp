/**
 * AmazonConnectCampaignService
 * Provide APIs to create and manage Amazon Connect Campaigns.
 *
 * The version of the OpenAPI document: 2021-01-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDialRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDialRequest::OAIDialRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDialRequest::OAIDialRequest() {
    this->initializeModel();
}

OAIDialRequest::~OAIDialRequest() {}

void OAIDialRequest::initializeModel() {

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_client_token_isSet = false;
    m_client_token_isValid = false;

    m_expiration_time_isSet = false;
    m_expiration_time_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;
}

void OAIDialRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDialRequest::fromJsonObject(QJsonObject json) {

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("attributes")]);
    m_attributes_isSet = !json[QString("attributes")].isNull() && m_attributes_isValid;

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("clientToken")]);
    m_client_token_isSet = !json[QString("clientToken")].isNull() && m_client_token_isValid;

    m_expiration_time_isValid = ::OpenAPI::fromJsonValue(m_expiration_time, json[QString("expirationTime")]);
    m_expiration_time_isSet = !json[QString("expirationTime")].isNull() && m_expiration_time_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phoneNumber")]);
    m_phone_number_isSet = !json[QString("phoneNumber")].isNull() && m_phone_number_isValid;
}

QString OAIDialRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDialRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_attributes.size() > 0) {
        obj.insert(QString("attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_client_token_isSet) {
        obj.insert(QString("clientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    if (m_expiration_time_isSet) {
        obj.insert(QString("expirationTime"), ::OpenAPI::toJsonValue(m_expiration_time));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    return obj;
}

QMap<QString, QString> OAIDialRequest::getAttributes() const {
    return m_attributes;
}
void OAIDialRequest::setAttributes(const QMap<QString, QString> &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIDialRequest::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIDialRequest::is_attributes_Valid() const{
    return m_attributes_isValid;
}

QString OAIDialRequest::getClientToken() const {
    return m_client_token;
}
void OAIDialRequest::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAIDialRequest::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAIDialRequest::is_client_token_Valid() const{
    return m_client_token_isValid;
}

QDateTime OAIDialRequest::getExpirationTime() const {
    return m_expiration_time;
}
void OAIDialRequest::setExpirationTime(const QDateTime &expiration_time) {
    m_expiration_time = expiration_time;
    m_expiration_time_isSet = true;
}

bool OAIDialRequest::is_expiration_time_Set() const{
    return m_expiration_time_isSet;
}

bool OAIDialRequest::is_expiration_time_Valid() const{
    return m_expiration_time_isValid;
}

QString OAIDialRequest::getPhoneNumber() const {
    return m_phone_number;
}
void OAIDialRequest::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIDialRequest::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIDialRequest::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

bool OAIDialRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDialRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_attributes_isValid && m_client_token_isValid && m_expiration_time_isValid && m_phone_number_isValid && true;
}

} // namespace OpenAPI
