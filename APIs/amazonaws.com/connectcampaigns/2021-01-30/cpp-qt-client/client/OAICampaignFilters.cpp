/**
 * AmazonConnectCampaignService
 * Provide APIs to create and manage Amazon Connect Campaigns.
 *
 * The version of the OpenAPI document: 2021-01-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICampaignFilters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICampaignFilters::OAICampaignFilters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICampaignFilters::OAICampaignFilters() {
    this->initializeModel();
}

OAICampaignFilters::~OAICampaignFilters() {}

void OAICampaignFilters::initializeModel() {

    m_instance_id_filter_isSet = false;
    m_instance_id_filter_isValid = false;
}

void OAICampaignFilters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICampaignFilters::fromJsonObject(QJsonObject json) {

    m_instance_id_filter_isValid = ::OpenAPI::fromJsonValue(m_instance_id_filter, json[QString("instanceIdFilter")]);
    m_instance_id_filter_isSet = !json[QString("instanceIdFilter")].isNull() && m_instance_id_filter_isValid;
}

QString OAICampaignFilters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICampaignFilters::asJsonObject() const {
    QJsonObject obj;
    if (m_instance_id_filter.isSet()) {
        obj.insert(QString("instanceIdFilter"), ::OpenAPI::toJsonValue(m_instance_id_filter));
    }
    return obj;
}

OAIInstanceIdFilter OAICampaignFilters::getInstanceIdFilter() const {
    return m_instance_id_filter;
}
void OAICampaignFilters::setInstanceIdFilter(const OAIInstanceIdFilter &instance_id_filter) {
    m_instance_id_filter = instance_id_filter;
    m_instance_id_filter_isSet = true;
}

bool OAICampaignFilters::is_instance_id_filter_Set() const{
    return m_instance_id_filter_isSet;
}

bool OAICampaignFilters::is_instance_id_filter_Valid() const{
    return m_instance_id_filter_isValid;
}

bool OAICampaignFilters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance_id_filter.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICampaignFilters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
