/**
 * AmazonConnectCampaignService
 * Provide APIs to create and manage Amazon Connect Campaigns.
 *
 * The version of the OpenAPI document: 2021-01-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstanceOnboardingJobFailureCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstanceOnboardingJobFailureCode::OAIInstanceOnboardingJobFailureCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstanceOnboardingJobFailureCode::OAIInstanceOnboardingJobFailureCode() {
    this->initializeModel();
}

OAIInstanceOnboardingJobFailureCode::~OAIInstanceOnboardingJobFailureCode() {}

void OAIInstanceOnboardingJobFailureCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIInstanceOnboardingJobFailureCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIInstanceOnboardingJobFailureCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("EVENT_BRIDGE_ACCESS_DENIED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInstanceOnboardingJobFailureCode::EVENT_BRIDGE_ACCESS_DENIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EVENT_BRIDGE_MANAGED_RULE_LIMIT_EXCEEDED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInstanceOnboardingJobFailureCode::EVENT_BRIDGE_MANAGED_RULE_LIMIT_EXCEEDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IAM_ACCESS_DENIED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInstanceOnboardingJobFailureCode::IAM_ACCESS_DENIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KMS_ACCESS_DENIED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInstanceOnboardingJobFailureCode::KMS_ACCESS_DENIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KMS_KEY_NOT_FOUND", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInstanceOnboardingJobFailureCode::KMS_KEY_NOT_FOUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INTERNAL_FAILURE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInstanceOnboardingJobFailureCode::INTERNAL_FAILURE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIInstanceOnboardingJobFailureCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIInstanceOnboardingJobFailureCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIInstanceOnboardingJobFailureCode::EVENT_BRIDGE_ACCESS_DENIED:
            val = "EVENT_BRIDGE_ACCESS_DENIED";
            break;
        case eOAIInstanceOnboardingJobFailureCode::EVENT_BRIDGE_MANAGED_RULE_LIMIT_EXCEEDED:
            val = "EVENT_BRIDGE_MANAGED_RULE_LIMIT_EXCEEDED";
            break;
        case eOAIInstanceOnboardingJobFailureCode::IAM_ACCESS_DENIED:
            val = "IAM_ACCESS_DENIED";
            break;
        case eOAIInstanceOnboardingJobFailureCode::KMS_ACCESS_DENIED:
            val = "KMS_ACCESS_DENIED";
            break;
        case eOAIInstanceOnboardingJobFailureCode::KMS_KEY_NOT_FOUND:
            val = "KMS_KEY_NOT_FOUND";
            break;
        case eOAIInstanceOnboardingJobFailureCode::INTERNAL_FAILURE:
            val = "INTERNAL_FAILURE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIInstanceOnboardingJobFailureCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIInstanceOnboardingJobFailureCode::eOAIInstanceOnboardingJobFailureCode OAIInstanceOnboardingJobFailureCode::getValue() const {
    return m_value;
}

void OAIInstanceOnboardingJobFailureCode::setValue(const OAIInstanceOnboardingJobFailureCode::eOAIInstanceOnboardingJobFailureCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIInstanceOnboardingJobFailureCode::isSet() const {
    
    return m_value_isSet;
}

bool OAIInstanceOnboardingJobFailureCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
