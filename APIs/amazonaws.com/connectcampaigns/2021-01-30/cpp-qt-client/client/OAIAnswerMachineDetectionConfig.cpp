/**
 * AmazonConnectCampaignService
 * Provide APIs to create and manage Amazon Connect Campaigns.
 *
 * The version of the OpenAPI document: 2021-01-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAnswerMachineDetectionConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAnswerMachineDetectionConfig::OAIAnswerMachineDetectionConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAnswerMachineDetectionConfig::OAIAnswerMachineDetectionConfig() {
    this->initializeModel();
}

OAIAnswerMachineDetectionConfig::~OAIAnswerMachineDetectionConfig() {}

void OAIAnswerMachineDetectionConfig::initializeModel() {

    m_enable_answer_machine_detection_isSet = false;
    m_enable_answer_machine_detection_isValid = false;
}

void OAIAnswerMachineDetectionConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAnswerMachineDetectionConfig::fromJsonObject(QJsonObject json) {

    m_enable_answer_machine_detection_isValid = ::OpenAPI::fromJsonValue(m_enable_answer_machine_detection, json[QString("enableAnswerMachineDetection")]);
    m_enable_answer_machine_detection_isSet = !json[QString("enableAnswerMachineDetection")].isNull() && m_enable_answer_machine_detection_isValid;
}

QString OAIAnswerMachineDetectionConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAnswerMachineDetectionConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_enable_answer_machine_detection_isSet) {
        obj.insert(QString("enableAnswerMachineDetection"), ::OpenAPI::toJsonValue(m_enable_answer_machine_detection));
    }
    return obj;
}

bool OAIAnswerMachineDetectionConfig::getEnableAnswerMachineDetection() const {
    return m_enable_answer_machine_detection;
}
void OAIAnswerMachineDetectionConfig::setEnableAnswerMachineDetection(const bool &enable_answer_machine_detection) {
    m_enable_answer_machine_detection = enable_answer_machine_detection;
    m_enable_answer_machine_detection_isSet = true;
}

bool OAIAnswerMachineDetectionConfig::is_enable_answer_machine_detection_Set() const{
    return m_enable_answer_machine_detection_isSet;
}

bool OAIAnswerMachineDetectionConfig::is_enable_answer_machine_detection_Valid() const{
    return m_enable_answer_machine_detection_isValid;
}

bool OAIAnswerMachineDetectionConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enable_answer_machine_detection_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAnswerMachineDetectionConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_enable_answer_machine_detection_isValid && true;
}

} // namespace OpenAPI
