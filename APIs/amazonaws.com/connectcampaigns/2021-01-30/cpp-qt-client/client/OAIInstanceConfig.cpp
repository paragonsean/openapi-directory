/**
 * AmazonConnectCampaignService
 * Provide APIs to create and manage Amazon Connect Campaigns.
 *
 * The version of the OpenAPI document: 2021-01-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstanceConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstanceConfig::OAIInstanceConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstanceConfig::OAIInstanceConfig() {
    this->initializeModel();
}

OAIInstanceConfig::~OAIInstanceConfig() {}

void OAIInstanceConfig::initializeModel() {

    m_connect_instance_id_isSet = false;
    m_connect_instance_id_isValid = false;

    m_encryption_config_isSet = false;
    m_encryption_config_isValid = false;

    m_service_linked_role_arn_isSet = false;
    m_service_linked_role_arn_isValid = false;
}

void OAIInstanceConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInstanceConfig::fromJsonObject(QJsonObject json) {

    m_connect_instance_id_isValid = ::OpenAPI::fromJsonValue(m_connect_instance_id, json[QString("connectInstanceId")]);
    m_connect_instance_id_isSet = !json[QString("connectInstanceId")].isNull() && m_connect_instance_id_isValid;

    m_encryption_config_isValid = ::OpenAPI::fromJsonValue(m_encryption_config, json[QString("encryptionConfig")]);
    m_encryption_config_isSet = !json[QString("encryptionConfig")].isNull() && m_encryption_config_isValid;

    m_service_linked_role_arn_isValid = ::OpenAPI::fromJsonValue(m_service_linked_role_arn, json[QString("serviceLinkedRoleArn")]);
    m_service_linked_role_arn_isSet = !json[QString("serviceLinkedRoleArn")].isNull() && m_service_linked_role_arn_isValid;
}

QString OAIInstanceConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInstanceConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_connect_instance_id_isSet) {
        obj.insert(QString("connectInstanceId"), ::OpenAPI::toJsonValue(m_connect_instance_id));
    }
    if (m_encryption_config.isSet()) {
        obj.insert(QString("encryptionConfig"), ::OpenAPI::toJsonValue(m_encryption_config));
    }
    if (m_service_linked_role_arn_isSet) {
        obj.insert(QString("serviceLinkedRoleArn"), ::OpenAPI::toJsonValue(m_service_linked_role_arn));
    }
    return obj;
}

QString OAIInstanceConfig::getConnectInstanceId() const {
    return m_connect_instance_id;
}
void OAIInstanceConfig::setConnectInstanceId(const QString &connect_instance_id) {
    m_connect_instance_id = connect_instance_id;
    m_connect_instance_id_isSet = true;
}

bool OAIInstanceConfig::is_connect_instance_id_Set() const{
    return m_connect_instance_id_isSet;
}

bool OAIInstanceConfig::is_connect_instance_id_Valid() const{
    return m_connect_instance_id_isValid;
}

OAIEncryptionConfig OAIInstanceConfig::getEncryptionConfig() const {
    return m_encryption_config;
}
void OAIInstanceConfig::setEncryptionConfig(const OAIEncryptionConfig &encryption_config) {
    m_encryption_config = encryption_config;
    m_encryption_config_isSet = true;
}

bool OAIInstanceConfig::is_encryption_config_Set() const{
    return m_encryption_config_isSet;
}

bool OAIInstanceConfig::is_encryption_config_Valid() const{
    return m_encryption_config_isValid;
}

QString OAIInstanceConfig::getServiceLinkedRoleArn() const {
    return m_service_linked_role_arn;
}
void OAIInstanceConfig::setServiceLinkedRoleArn(const QString &service_linked_role_arn) {
    m_service_linked_role_arn = service_linked_role_arn;
    m_service_linked_role_arn_isSet = true;
}

bool OAIInstanceConfig::is_service_linked_role_arn_Set() const{
    return m_service_linked_role_arn_isSet;
}

bool OAIInstanceConfig::is_service_linked_role_arn_Valid() const{
    return m_service_linked_role_arn_isValid;
}

bool OAIInstanceConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_connect_instance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_encryption_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_linked_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInstanceConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_connect_instance_id_isValid && m_encryption_config_isValid && m_service_linked_role_arn_isValid && true;
}

} // namespace OpenAPI
