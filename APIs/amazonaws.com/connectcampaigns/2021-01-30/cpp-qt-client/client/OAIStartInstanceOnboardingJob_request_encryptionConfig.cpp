/**
 * AmazonConnectCampaignService
 * Provide APIs to create and manage Amazon Connect Campaigns.
 *
 * The version of the OpenAPI document: 2021-01-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartInstanceOnboardingJob_request_encryptionConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartInstanceOnboardingJob_request_encryptionConfig::OAIStartInstanceOnboardingJob_request_encryptionConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartInstanceOnboardingJob_request_encryptionConfig::OAIStartInstanceOnboardingJob_request_encryptionConfig() {
    this->initializeModel();
}

OAIStartInstanceOnboardingJob_request_encryptionConfig::~OAIStartInstanceOnboardingJob_request_encryptionConfig() {}

void OAIStartInstanceOnboardingJob_request_encryptionConfig::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_encryption_type_isSet = false;
    m_encryption_type_isValid = false;

    m_key_arn_isSet = false;
    m_key_arn_isValid = false;
}

void OAIStartInstanceOnboardingJob_request_encryptionConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartInstanceOnboardingJob_request_encryptionConfig::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_encryption_type_isValid = ::OpenAPI::fromJsonValue(m_encryption_type, json[QString("encryptionType")]);
    m_encryption_type_isSet = !json[QString("encryptionType")].isNull() && m_encryption_type_isValid;

    m_key_arn_isValid = ::OpenAPI::fromJsonValue(m_key_arn, json[QString("keyArn")]);
    m_key_arn_isSet = !json[QString("keyArn")].isNull() && m_key_arn_isValid;
}

QString OAIStartInstanceOnboardingJob_request_encryptionConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartInstanceOnboardingJob_request_encryptionConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_encryption_type.isSet()) {
        obj.insert(QString("encryptionType"), ::OpenAPI::toJsonValue(m_encryption_type));
    }
    if (m_key_arn_isSet) {
        obj.insert(QString("keyArn"), ::OpenAPI::toJsonValue(m_key_arn));
    }
    return obj;
}

bool OAIStartInstanceOnboardingJob_request_encryptionConfig::isEnabled() const {
    return m_enabled;
}
void OAIStartInstanceOnboardingJob_request_encryptionConfig::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIStartInstanceOnboardingJob_request_encryptionConfig::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIStartInstanceOnboardingJob_request_encryptionConfig::is_enabled_Valid() const{
    return m_enabled_isValid;
}

OAIEncryptionType OAIStartInstanceOnboardingJob_request_encryptionConfig::getEncryptionType() const {
    return m_encryption_type;
}
void OAIStartInstanceOnboardingJob_request_encryptionConfig::setEncryptionType(const OAIEncryptionType &encryption_type) {
    m_encryption_type = encryption_type;
    m_encryption_type_isSet = true;
}

bool OAIStartInstanceOnboardingJob_request_encryptionConfig::is_encryption_type_Set() const{
    return m_encryption_type_isSet;
}

bool OAIStartInstanceOnboardingJob_request_encryptionConfig::is_encryption_type_Valid() const{
    return m_encryption_type_isValid;
}

QString OAIStartInstanceOnboardingJob_request_encryptionConfig::getKeyArn() const {
    return m_key_arn;
}
void OAIStartInstanceOnboardingJob_request_encryptionConfig::setKeyArn(const QString &key_arn) {
    m_key_arn = key_arn;
    m_key_arn_isSet = true;
}

bool OAIStartInstanceOnboardingJob_request_encryptionConfig::is_key_arn_Set() const{
    return m_key_arn_isSet;
}

bool OAIStartInstanceOnboardingJob_request_encryptionConfig::is_key_arn_Valid() const{
    return m_key_arn_isValid;
}

bool OAIStartInstanceOnboardingJob_request_encryptionConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_encryption_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartInstanceOnboardingJob_request_encryptionConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
