/**
 * AmazonConnectCampaignService
 * Provide APIs to create and manage Amazon Connect Campaigns.
 *
 * The version of the OpenAPI document: 2021-01-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFailureCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFailureCode::OAIFailureCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFailureCode::OAIFailureCode() {
    this->initializeModel();
}

OAIFailureCode::~OAIFailureCode() {}

void OAIFailureCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFailureCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFailureCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("InvalidInput", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFailureCode::INVALIDINPUT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RequestThrottled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFailureCode::REQUESTTHROTTLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UnknownError", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFailureCode::UNKNOWNERROR;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFailureCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFailureCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFailureCode::INVALIDINPUT:
            val = "InvalidInput";
            break;
        case eOAIFailureCode::REQUESTTHROTTLED:
            val = "RequestThrottled";
            break;
        case eOAIFailureCode::UNKNOWNERROR:
            val = "UnknownError";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFailureCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFailureCode::eOAIFailureCode OAIFailureCode::getValue() const {
    return m_value;
}

void OAIFailureCode::setValue(const OAIFailureCode::eOAIFailureCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFailureCode::isSet() const {
    
    return m_value_isSet;
}

bool OAIFailureCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
