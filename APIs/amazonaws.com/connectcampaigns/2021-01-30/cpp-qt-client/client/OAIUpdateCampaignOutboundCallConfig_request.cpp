/**
 * AmazonConnectCampaignService
 * Provide APIs to create and manage Amazon Connect Campaigns.
 *
 * The version of the OpenAPI document: 2021-01-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateCampaignOutboundCallConfig_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateCampaignOutboundCallConfig_request::OAIUpdateCampaignOutboundCallConfig_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateCampaignOutboundCallConfig_request::OAIUpdateCampaignOutboundCallConfig_request() {
    this->initializeModel();
}

OAIUpdateCampaignOutboundCallConfig_request::~OAIUpdateCampaignOutboundCallConfig_request() {}

void OAIUpdateCampaignOutboundCallConfig_request::initializeModel() {

    m_answer_machine_detection_config_isSet = false;
    m_answer_machine_detection_config_isValid = false;

    m_connect_contact_flow_id_isSet = false;
    m_connect_contact_flow_id_isValid = false;

    m_connect_source_phone_number_isSet = false;
    m_connect_source_phone_number_isValid = false;
}

void OAIUpdateCampaignOutboundCallConfig_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateCampaignOutboundCallConfig_request::fromJsonObject(QJsonObject json) {

    m_answer_machine_detection_config_isValid = ::OpenAPI::fromJsonValue(m_answer_machine_detection_config, json[QString("answerMachineDetectionConfig")]);
    m_answer_machine_detection_config_isSet = !json[QString("answerMachineDetectionConfig")].isNull() && m_answer_machine_detection_config_isValid;

    m_connect_contact_flow_id_isValid = ::OpenAPI::fromJsonValue(m_connect_contact_flow_id, json[QString("connectContactFlowId")]);
    m_connect_contact_flow_id_isSet = !json[QString("connectContactFlowId")].isNull() && m_connect_contact_flow_id_isValid;

    m_connect_source_phone_number_isValid = ::OpenAPI::fromJsonValue(m_connect_source_phone_number, json[QString("connectSourcePhoneNumber")]);
    m_connect_source_phone_number_isSet = !json[QString("connectSourcePhoneNumber")].isNull() && m_connect_source_phone_number_isValid;
}

QString OAIUpdateCampaignOutboundCallConfig_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateCampaignOutboundCallConfig_request::asJsonObject() const {
    QJsonObject obj;
    if (m_answer_machine_detection_config.isSet()) {
        obj.insert(QString("answerMachineDetectionConfig"), ::OpenAPI::toJsonValue(m_answer_machine_detection_config));
    }
    if (m_connect_contact_flow_id_isSet) {
        obj.insert(QString("connectContactFlowId"), ::OpenAPI::toJsonValue(m_connect_contact_flow_id));
    }
    if (m_connect_source_phone_number_isSet) {
        obj.insert(QString("connectSourcePhoneNumber"), ::OpenAPI::toJsonValue(m_connect_source_phone_number));
    }
    return obj;
}

OAIUpdateCampaignOutboundCallConfig_request_answerMachineDetectionConfig OAIUpdateCampaignOutboundCallConfig_request::getAnswerMachineDetectionConfig() const {
    return m_answer_machine_detection_config;
}
void OAIUpdateCampaignOutboundCallConfig_request::setAnswerMachineDetectionConfig(const OAIUpdateCampaignOutboundCallConfig_request_answerMachineDetectionConfig &answer_machine_detection_config) {
    m_answer_machine_detection_config = answer_machine_detection_config;
    m_answer_machine_detection_config_isSet = true;
}

bool OAIUpdateCampaignOutboundCallConfig_request::is_answer_machine_detection_config_Set() const{
    return m_answer_machine_detection_config_isSet;
}

bool OAIUpdateCampaignOutboundCallConfig_request::is_answer_machine_detection_config_Valid() const{
    return m_answer_machine_detection_config_isValid;
}

QString OAIUpdateCampaignOutboundCallConfig_request::getConnectContactFlowId() const {
    return m_connect_contact_flow_id;
}
void OAIUpdateCampaignOutboundCallConfig_request::setConnectContactFlowId(const QString &connect_contact_flow_id) {
    m_connect_contact_flow_id = connect_contact_flow_id;
    m_connect_contact_flow_id_isSet = true;
}

bool OAIUpdateCampaignOutboundCallConfig_request::is_connect_contact_flow_id_Set() const{
    return m_connect_contact_flow_id_isSet;
}

bool OAIUpdateCampaignOutboundCallConfig_request::is_connect_contact_flow_id_Valid() const{
    return m_connect_contact_flow_id_isValid;
}

QString OAIUpdateCampaignOutboundCallConfig_request::getConnectSourcePhoneNumber() const {
    return m_connect_source_phone_number;
}
void OAIUpdateCampaignOutboundCallConfig_request::setConnectSourcePhoneNumber(const QString &connect_source_phone_number) {
    m_connect_source_phone_number = connect_source_phone_number;
    m_connect_source_phone_number_isSet = true;
}

bool OAIUpdateCampaignOutboundCallConfig_request::is_connect_source_phone_number_Set() const{
    return m_connect_source_phone_number_isSet;
}

bool OAIUpdateCampaignOutboundCallConfig_request::is_connect_source_phone_number_Valid() const{
    return m_connect_source_phone_number_isValid;
}

bool OAIUpdateCampaignOutboundCallConfig_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_answer_machine_detection_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_connect_contact_flow_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_connect_source_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateCampaignOutboundCallConfig_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
