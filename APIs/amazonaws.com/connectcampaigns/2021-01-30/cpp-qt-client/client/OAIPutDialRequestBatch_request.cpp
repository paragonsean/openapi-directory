/**
 * AmazonConnectCampaignService
 * Provide APIs to create and manage Amazon Connect Campaigns.
 *
 * The version of the OpenAPI document: 2021-01-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutDialRequestBatch_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutDialRequestBatch_request::OAIPutDialRequestBatch_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutDialRequestBatch_request::OAIPutDialRequestBatch_request() {
    this->initializeModel();
}

OAIPutDialRequestBatch_request::~OAIPutDialRequestBatch_request() {}

void OAIPutDialRequestBatch_request::initializeModel() {

    m_dial_requests_isSet = false;
    m_dial_requests_isValid = false;
}

void OAIPutDialRequestBatch_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutDialRequestBatch_request::fromJsonObject(QJsonObject json) {

    m_dial_requests_isValid = ::OpenAPI::fromJsonValue(m_dial_requests, json[QString("dialRequests")]);
    m_dial_requests_isSet = !json[QString("dialRequests")].isNull() && m_dial_requests_isValid;
}

QString OAIPutDialRequestBatch_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutDialRequestBatch_request::asJsonObject() const {
    QJsonObject obj;
    if (m_dial_requests.size() > 0) {
        obj.insert(QString("dialRequests"), ::OpenAPI::toJsonValue(m_dial_requests));
    }
    return obj;
}

QList<OAIDialRequest> OAIPutDialRequestBatch_request::getDialRequests() const {
    return m_dial_requests;
}
void OAIPutDialRequestBatch_request::setDialRequests(const QList<OAIDialRequest> &dial_requests) {
    m_dial_requests = dial_requests;
    m_dial_requests_isSet = true;
}

bool OAIPutDialRequestBatch_request::is_dial_requests_Set() const{
    return m_dial_requests_isSet;
}

bool OAIPutDialRequestBatch_request::is_dial_requests_Valid() const{
    return m_dial_requests_isValid;
}

bool OAIPutDialRequestBatch_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dial_requests.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutDialRequestBatch_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_dial_requests_isValid && true;
}

} // namespace OpenAPI
