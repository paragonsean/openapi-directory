/**
 * AmazonConnectCampaignService
 * Provide APIs to create and manage Amazon Connect Campaigns.
 *
 * The version of the OpenAPI document: 2021-01-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICampaign.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICampaign::OAICampaign(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICampaign::OAICampaign() {
    this->initializeModel();
}

OAICampaign::~OAICampaign() {}

void OAICampaign::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_connect_instance_id_isSet = false;
    m_connect_instance_id_isValid = false;

    m_dialer_config_isSet = false;
    m_dialer_config_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_outbound_call_config_isSet = false;
    m_outbound_call_config_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICampaign::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICampaign::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_connect_instance_id_isValid = ::OpenAPI::fromJsonValue(m_connect_instance_id, json[QString("connectInstanceId")]);
    m_connect_instance_id_isSet = !json[QString("connectInstanceId")].isNull() && m_connect_instance_id_isValid;

    m_dialer_config_isValid = ::OpenAPI::fromJsonValue(m_dialer_config, json[QString("dialerConfig")]);
    m_dialer_config_isSet = !json[QString("dialerConfig")].isNull() && m_dialer_config_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_outbound_call_config_isValid = ::OpenAPI::fromJsonValue(m_outbound_call_config, json[QString("outboundCallConfig")]);
    m_outbound_call_config_isSet = !json[QString("outboundCallConfig")].isNull() && m_outbound_call_config_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAICampaign::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICampaign::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_connect_instance_id_isSet) {
        obj.insert(QString("connectInstanceId"), ::OpenAPI::toJsonValue(m_connect_instance_id));
    }
    if (m_dialer_config.isSet()) {
        obj.insert(QString("dialerConfig"), ::OpenAPI::toJsonValue(m_dialer_config));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_outbound_call_config.isSet()) {
        obj.insert(QString("outboundCallConfig"), ::OpenAPI::toJsonValue(m_outbound_call_config));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAICampaign::getArn() const {
    return m_arn;
}
void OAICampaign::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAICampaign::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAICampaign::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAICampaign::getConnectInstanceId() const {
    return m_connect_instance_id;
}
void OAICampaign::setConnectInstanceId(const QString &connect_instance_id) {
    m_connect_instance_id = connect_instance_id;
    m_connect_instance_id_isSet = true;
}

bool OAICampaign::is_connect_instance_id_Set() const{
    return m_connect_instance_id_isSet;
}

bool OAICampaign::is_connect_instance_id_Valid() const{
    return m_connect_instance_id_isValid;
}

OAIDialerConfig OAICampaign::getDialerConfig() const {
    return m_dialer_config;
}
void OAICampaign::setDialerConfig(const OAIDialerConfig &dialer_config) {
    m_dialer_config = dialer_config;
    m_dialer_config_isSet = true;
}

bool OAICampaign::is_dialer_config_Set() const{
    return m_dialer_config_isSet;
}

bool OAICampaign::is_dialer_config_Valid() const{
    return m_dialer_config_isValid;
}

QString OAICampaign::getId() const {
    return m_id;
}
void OAICampaign::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICampaign::is_id_Set() const{
    return m_id_isSet;
}

bool OAICampaign::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICampaign::getName() const {
    return m_name;
}
void OAICampaign::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICampaign::is_name_Set() const{
    return m_name_isSet;
}

bool OAICampaign::is_name_Valid() const{
    return m_name_isValid;
}

OAIOutboundCallConfig OAICampaign::getOutboundCallConfig() const {
    return m_outbound_call_config;
}
void OAICampaign::setOutboundCallConfig(const OAIOutboundCallConfig &outbound_call_config) {
    m_outbound_call_config = outbound_call_config;
    m_outbound_call_config_isSet = true;
}

bool OAICampaign::is_outbound_call_config_Set() const{
    return m_outbound_call_config_isSet;
}

bool OAICampaign::is_outbound_call_config_Valid() const{
    return m_outbound_call_config_isValid;
}

QMap<QString, QString> OAICampaign::getTags() const {
    return m_tags;
}
void OAICampaign::setTags(const QMap<QString, QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICampaign::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICampaign::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICampaign::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_connect_instance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dialer_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_outbound_call_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICampaign::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_arn_isValid && m_connect_instance_id_isValid && m_dialer_config_isValid && m_id_isValid && m_name_isValid && m_outbound_call_config_isValid && true;
}

} // namespace OpenAPI
