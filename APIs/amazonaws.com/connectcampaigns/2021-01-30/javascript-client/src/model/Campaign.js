/**
 * AmazonConnectCampaignService
 * Provide APIs to create and manage Amazon Connect Campaigns.
 *
 * The version of the OpenAPI document: 2021-01-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DialerConfig from './DialerConfig';
import OutboundCallConfig from './OutboundCallConfig';

/**
 * The Campaign model module.
 * @module model/Campaign
 * @version 2021-01-30
 */
class Campaign {
    /**
     * Constructs a new <code>Campaign</code>.
     * An Amazon Connect campaign.
     * @alias module:model/Campaign
     * @param arn {String} The resource name of an Amazon Connect campaign.
     * @param connectInstanceId {String} Amazon Connect Instance Id
     * @param dialerConfig {module:model/DialerConfig} 
     * @param id {String} Identifier representing a Campaign
     * @param name {String} The name of an Amazon Connect Campaign name.
     * @param outboundCallConfig {module:model/OutboundCallConfig} 
     */
    constructor(arn, connectInstanceId, dialerConfig, id, name, outboundCallConfig) { 
        
        Campaign.initialize(this, arn, connectInstanceId, dialerConfig, id, name, outboundCallConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, arn, connectInstanceId, dialerConfig, id, name, outboundCallConfig) { 
        obj['arn'] = arn;
        obj['connectInstanceId'] = connectInstanceId;
        obj['dialerConfig'] = dialerConfig;
        obj['id'] = id;
        obj['name'] = name;
        obj['outboundCallConfig'] = outboundCallConfig;
    }

    /**
     * Constructs a <code>Campaign</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Campaign} obj Optional instance to populate.
     * @return {module:model/Campaign} The populated <code>Campaign</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Campaign();

            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('connectInstanceId')) {
                obj['connectInstanceId'] = ApiClient.convertToType(data['connectInstanceId'], 'String');
            }
            if (data.hasOwnProperty('dialerConfig')) {
                obj['dialerConfig'] = DialerConfig.constructFromObject(data['dialerConfig']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('outboundCallConfig')) {
                obj['outboundCallConfig'] = OutboundCallConfig.constructFromObject(data['outboundCallConfig']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Campaign</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Campaign</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Campaign.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['arn'] && !(typeof data['arn'] === 'string' || data['arn'] instanceof String)) {
            throw new Error("Expected the field `arn` to be a primitive type in the JSON string but got " + data['arn']);
        }
        // ensure the json data is a string
        if (data['connectInstanceId'] && !(typeof data['connectInstanceId'] === 'string' || data['connectInstanceId'] instanceof String)) {
            throw new Error("Expected the field `connectInstanceId` to be a primitive type in the JSON string but got " + data['connectInstanceId']);
        }
        // validate the optional field `dialerConfig`
        if (data['dialerConfig']) { // data not null
          DialerConfig.validateJSON(data['dialerConfig']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `outboundCallConfig`
        if (data['outboundCallConfig']) { // data not null
          OutboundCallConfig.validateJSON(data['outboundCallConfig']);
        }

        return true;
    }


}

Campaign.RequiredProperties = ["arn", "connectInstanceId", "dialerConfig", "id", "name", "outboundCallConfig"];

/**
 * The resource name of an Amazon Connect campaign.
 * @member {String} arn
 */
Campaign.prototype['arn'] = undefined;

/**
 * Amazon Connect Instance Id
 * @member {String} connectInstanceId
 */
Campaign.prototype['connectInstanceId'] = undefined;

/**
 * @member {module:model/DialerConfig} dialerConfig
 */
Campaign.prototype['dialerConfig'] = undefined;

/**
 * Identifier representing a Campaign
 * @member {String} id
 */
Campaign.prototype['id'] = undefined;

/**
 * The name of an Amazon Connect Campaign name.
 * @member {String} name
 */
Campaign.prototype['name'] = undefined;

/**
 * @member {module:model/OutboundCallConfig} outboundCallConfig
 */
Campaign.prototype['outboundCallConfig'] = undefined;

/**
 * Tag map with key and value.
 * @member {Object.<String, String>} tags
 */
Campaign.prototype['tags'] = undefined;






export default Campaign;

