/**
 * AmazonConnectCampaignService
 * Provide APIs to create and manage Amazon Connect Campaigns.
 *
 * The version of the OpenAPI document: 2021-01-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnswerMachineDetectionConfig from './AnswerMachineDetectionConfig';

/**
 * The OutboundCallConfig model module.
 * @module model/OutboundCallConfig
 * @version 2021-01-30
 */
class OutboundCallConfig {
    /**
     * Constructs a new <code>OutboundCallConfig</code>.
     * The configuration used for outbound calls.
     * @alias module:model/OutboundCallConfig
     * @param connectContactFlowId {String} The identifier of the contact flow for the outbound call.
     * @param connectQueueId {String} The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the contact flow is used. If you do not specify a queue, you must specify a source phone number.
     */
    constructor(connectContactFlowId, connectQueueId) { 
        
        OutboundCallConfig.initialize(this, connectContactFlowId, connectQueueId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, connectContactFlowId, connectQueueId) { 
        obj['connectContactFlowId'] = connectContactFlowId;
        obj['connectQueueId'] = connectQueueId;
    }

    /**
     * Constructs a <code>OutboundCallConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OutboundCallConfig} obj Optional instance to populate.
     * @return {module:model/OutboundCallConfig} The populated <code>OutboundCallConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OutboundCallConfig();

            if (data.hasOwnProperty('answerMachineDetectionConfig')) {
                obj['answerMachineDetectionConfig'] = AnswerMachineDetectionConfig.constructFromObject(data['answerMachineDetectionConfig']);
            }
            if (data.hasOwnProperty('connectContactFlowId')) {
                obj['connectContactFlowId'] = ApiClient.convertToType(data['connectContactFlowId'], 'String');
            }
            if (data.hasOwnProperty('connectQueueId')) {
                obj['connectQueueId'] = ApiClient.convertToType(data['connectQueueId'], 'String');
            }
            if (data.hasOwnProperty('connectSourcePhoneNumber')) {
                obj['connectSourcePhoneNumber'] = ApiClient.convertToType(data['connectSourcePhoneNumber'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OutboundCallConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OutboundCallConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OutboundCallConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `answerMachineDetectionConfig`
        if (data['answerMachineDetectionConfig']) { // data not null
          AnswerMachineDetectionConfig.validateJSON(data['answerMachineDetectionConfig']);
        }
        // ensure the json data is a string
        if (data['connectContactFlowId'] && !(typeof data['connectContactFlowId'] === 'string' || data['connectContactFlowId'] instanceof String)) {
            throw new Error("Expected the field `connectContactFlowId` to be a primitive type in the JSON string but got " + data['connectContactFlowId']);
        }
        // ensure the json data is a string
        if (data['connectQueueId'] && !(typeof data['connectQueueId'] === 'string' || data['connectQueueId'] instanceof String)) {
            throw new Error("Expected the field `connectQueueId` to be a primitive type in the JSON string but got " + data['connectQueueId']);
        }
        // ensure the json data is a string
        if (data['connectSourcePhoneNumber'] && !(typeof data['connectSourcePhoneNumber'] === 'string' || data['connectSourcePhoneNumber'] instanceof String)) {
            throw new Error("Expected the field `connectSourcePhoneNumber` to be a primitive type in the JSON string but got " + data['connectSourcePhoneNumber']);
        }

        return true;
    }


}

OutboundCallConfig.RequiredProperties = ["connectContactFlowId", "connectQueueId"];

/**
 * @member {module:model/AnswerMachineDetectionConfig} answerMachineDetectionConfig
 */
OutboundCallConfig.prototype['answerMachineDetectionConfig'] = undefined;

/**
 * The identifier of the contact flow for the outbound call.
 * @member {String} connectContactFlowId
 */
OutboundCallConfig.prototype['connectContactFlowId'] = undefined;

/**
 * The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the contact flow is used. If you do not specify a queue, you must specify a source phone number.
 * @member {String} connectQueueId
 */
OutboundCallConfig.prototype['connectQueueId'] = undefined;

/**
 * The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
 * @member {String} connectSourcePhoneNumber
 */
OutboundCallConfig.prototype['connectSourcePhoneNumber'] = undefined;






export default OutboundCallConfig;

