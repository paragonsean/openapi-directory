/**
 * AmazonConnectCampaignService
 * Provide APIs to create and manage Amazon Connect Campaigns.
 *
 * The version of the OpenAPI document: 2021-01-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CampaignSummary from './CampaignSummary';

/**
 * The ListCampaignsResponse model module.
 * @module model/ListCampaignsResponse
 * @version 2021-01-30
 */
class ListCampaignsResponse {
    /**
     * Constructs a new <code>ListCampaignsResponse</code>.
     * ListCampaignsResponse
     * @alias module:model/ListCampaignsResponse
     */
    constructor() { 
        
        ListCampaignsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListCampaignsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListCampaignsResponse} obj Optional instance to populate.
     * @return {module:model/ListCampaignsResponse} The populated <code>ListCampaignsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListCampaignsResponse();

            if (data.hasOwnProperty('campaignSummaryList')) {
                obj['campaignSummaryList'] = ApiClient.convertToType(data['campaignSummaryList'], [CampaignSummary]);
            }
            if (data.hasOwnProperty('nextToken')) {
                obj['nextToken'] = ApiClient.convertToType(data['nextToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListCampaignsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListCampaignsResponse</code>.
     */
    static validateJSON(data) {
        if (data['campaignSummaryList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['campaignSummaryList'])) {
                throw new Error("Expected the field `campaignSummaryList` to be an array in the JSON data but got " + data['campaignSummaryList']);
            }
            // validate the optional field `campaignSummaryList` (array)
            for (const item of data['campaignSummaryList']) {
                CampaignSummary.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['nextToken'] && !(typeof data['nextToken'] === 'string' || data['nextToken'] instanceof String)) {
            throw new Error("Expected the field `nextToken` to be a primitive type in the JSON string but got " + data['nextToken']);
        }

        return true;
    }


}



/**
 * A list of Amazon Connect campaigns.
 * @member {Array.<module:model/CampaignSummary>} campaignSummaryList
 */
ListCampaignsResponse.prototype['campaignSummaryList'] = undefined;

/**
 * The token for the next set of results.
 * @member {String} nextToken
 */
ListCampaignsResponse.prototype['nextToken'] = undefined;






export default ListCampaignsResponse;

