/**
 * AmazonConnectCampaignService
 * Provide APIs to create and manage Amazon Connect Campaigns.
 *
 * The version of the OpenAPI document: 2021-01-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EncryptionType from './EncryptionType';

/**
 * The EncryptionConfig model module.
 * @module model/EncryptionConfig
 * @version 2021-01-30
 */
class EncryptionConfig {
    /**
     * Constructs a new <code>EncryptionConfig</code>.
     * Encryption config for Connect Instance. Note that sensitive data will always be encrypted. If disabled, service will perform encryption with its own key. If enabled, a KMS key id needs to be provided and KMS charges will apply. KMS is only type supported
     * @alias module:model/EncryptionConfig
     * @param enabled {Boolean} Boolean to indicate if custom encryption has been enabled.
     */
    constructor(enabled) { 
        
        EncryptionConfig.initialize(this, enabled);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, enabled) { 
        obj['enabled'] = enabled;
    }

    /**
     * Constructs a <code>EncryptionConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EncryptionConfig} obj Optional instance to populate.
     * @return {module:model/EncryptionConfig} The populated <code>EncryptionConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EncryptionConfig();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('encryptionType')) {
                obj['encryptionType'] = EncryptionType.constructFromObject(data['encryptionType']);
            }
            if (data.hasOwnProperty('keyArn')) {
                obj['keyArn'] = ApiClient.convertToType(data['keyArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EncryptionConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EncryptionConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EncryptionConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['keyArn'] && !(typeof data['keyArn'] === 'string' || data['keyArn'] instanceof String)) {
            throw new Error("Expected the field `keyArn` to be a primitive type in the JSON string but got " + data['keyArn']);
        }

        return true;
    }


}

EncryptionConfig.RequiredProperties = ["enabled"];

/**
 * Boolean to indicate if custom encryption has been enabled.
 * @member {Boolean} enabled
 */
EncryptionConfig.prototype['enabled'] = undefined;

/**
 * @member {module:model/EncryptionType} encryptionType
 */
EncryptionConfig.prototype['encryptionType'] = undefined;

/**
 * KMS key id/arn for encryption config.
 * @member {String} keyArn
 */
EncryptionConfig.prototype['keyArn'] = undefined;






export default EncryptionConfig;

