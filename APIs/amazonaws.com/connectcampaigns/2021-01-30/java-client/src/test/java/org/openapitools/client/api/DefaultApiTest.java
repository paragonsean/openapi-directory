/*
 * AmazonConnectCampaignService
 * Provide APIs to create and manage Amazon Connect Campaigns.
 *
 * The version of the OpenAPI document: 2021-01-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateCampaignRequest;
import org.openapitools.client.model.CreateCampaignResponse;
import org.openapitools.client.model.DescribeCampaignResponse;
import org.openapitools.client.model.GetCampaignStateBatchRequest;
import org.openapitools.client.model.GetCampaignStateBatchResponse;
import org.openapitools.client.model.GetCampaignStateResponse;
import org.openapitools.client.model.GetConnectInstanceConfigResponse;
import org.openapitools.client.model.GetInstanceOnboardingJobStatusResponse;
import org.openapitools.client.model.ListCampaignsRequest;
import org.openapitools.client.model.ListCampaignsResponse;
import org.openapitools.client.model.ListTagsForResourceResponse;
import org.openapitools.client.model.PutDialRequestBatchRequest;
import org.openapitools.client.model.PutDialRequestBatchResponse;
import org.openapitools.client.model.StartInstanceOnboardingJobRequest;
import org.openapitools.client.model.StartInstanceOnboardingJobResponse;
import org.openapitools.client.model.TagResourceRequest;
import org.openapitools.client.model.UpdateCampaignDialerConfigRequest;
import org.openapitools.client.model.UpdateCampaignNameRequest;
import org.openapitools.client.model.UpdateCampaignOutboundCallConfigRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Creates a campaign for the specified Amazon Connect account. This API is idempotent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCampaignTest() throws ApiException {
        CreateCampaignRequest createCampaignRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateCampaignResponse response = api.createCampaign(createCampaignRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a campaign from the specified Amazon Connect account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCampaignTest() throws ApiException {
        String id = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteCampaign(id, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a connect instance config from the specified AWS account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteConnectInstanceConfigTest() throws ApiException {
        String connectInstanceId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteConnectInstanceConfig(connectInstanceId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Delete the Connect Campaigns onboarding job for the specified Amazon Connect instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteInstanceOnboardingJobTest() throws ApiException {
        String connectInstanceId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteInstanceOnboardingJob(connectInstanceId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes the specific campaign.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeCampaignTest() throws ApiException {
        String id = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeCampaignResponse response = api.describeCampaign(id, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Get state of a campaign for the specified Amazon Connect account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCampaignStateTest() throws ApiException {
        String id = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetCampaignStateResponse response = api.getCampaignState(id, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Get state of campaigns for the specified Amazon Connect account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCampaignStateBatchTest() throws ApiException {
        GetCampaignStateBatchRequest getCampaignStateBatchRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetCampaignStateBatchResponse response = api.getCampaignStateBatch(getCampaignStateBatchRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Get the specific Connect instance config.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConnectInstanceConfigTest() throws ApiException {
        String connectInstanceId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetConnectInstanceConfigResponse response = api.getConnectInstanceConfig(connectInstanceId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Get the specific instance onboarding job status.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInstanceOnboardingJobStatusTest() throws ApiException {
        String connectInstanceId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetInstanceOnboardingJobStatusResponse response = api.getInstanceOnboardingJobStatus(connectInstanceId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Provides summary information about the campaigns under the specified Amazon Connect account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCampaignsTest() throws ApiException {
        ListCampaignsRequest listCampaignsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListCampaignsResponse response = api.listCampaigns(listCampaignsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * List tags for a resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForResourceTest() throws ApiException {
        String arn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourceResponse response = api.listTagsForResource(arn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Pauses a campaign for the specified Amazon Connect account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pauseCampaignTest() throws ApiException {
        String id = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.pauseCampaign(id, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates dials requests for the specified campaign Amazon Connect account. This API is idempotent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putDialRequestBatchTest() throws ApiException {
        String id = null;
        PutDialRequestBatchRequest putDialRequestBatchRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        PutDialRequestBatchResponse response = api.putDialRequestBatch(id, putDialRequestBatchRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Stops a campaign for the specified Amazon Connect account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resumeCampaignTest() throws ApiException {
        String id = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.resumeCampaign(id, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Starts a campaign for the specified Amazon Connect account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startCampaignTest() throws ApiException {
        String id = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.startCampaign(id, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Onboard the specific Amazon Connect instance to Connect Campaigns.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startInstanceOnboardingJobTest() throws ApiException {
        String connectInstanceId = null;
        StartInstanceOnboardingJobRequest startInstanceOnboardingJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StartInstanceOnboardingJobResponse response = api.startInstanceOnboardingJob(connectInstanceId, startInstanceOnboardingJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Stops a campaign for the specified Amazon Connect account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void stopCampaignTest() throws ApiException {
        String id = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.stopCampaign(id, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Tag a resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagResourceTest() throws ApiException {
        String arn = null;
        TagResourceRequest tagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.tagResource(arn, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Untag a resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagResourceTest() throws ApiException {
        String arn = null;
        List<String> tagKeys = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.untagResource(arn, tagKeys, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates the dialer config of a campaign. This API is idempotent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCampaignDialerConfigTest() throws ApiException {
        String id = null;
        UpdateCampaignDialerConfigRequest updateCampaignDialerConfigRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.updateCampaignDialerConfig(id, updateCampaignDialerConfigRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates the name of a campaign. This API is idempotent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCampaignNameTest() throws ApiException {
        String id = null;
        UpdateCampaignNameRequest updateCampaignNameRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.updateCampaignName(id, updateCampaignNameRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates the outbound call config of a campaign. This API is idempotent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCampaignOutboundCallConfigTest() throws ApiException {
        String id = null;
        UpdateCampaignOutboundCallConfigRequest updateCampaignOutboundCallConfigRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.updateCampaignOutboundCallConfig(id, updateCampaignOutboundCallConfigRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
