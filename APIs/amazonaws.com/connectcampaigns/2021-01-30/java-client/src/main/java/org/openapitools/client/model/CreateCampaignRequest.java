/*
 * AmazonConnectCampaignService
 * Provide APIs to create and manage Amazon Connect Campaigns.
 *
 * The version of the OpenAPI document: 2021-01-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.CreateCampaignRequestDialerConfig;
import org.openapitools.client.model.CreateCampaignRequestOutboundCallConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateCampaignRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:32.416342-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateCampaignRequest {
  public static final String SERIALIZED_NAME_CONNECT_INSTANCE_ID = "connectInstanceId";
  @SerializedName(SERIALIZED_NAME_CONNECT_INSTANCE_ID)
  private String connectInstanceId;

  public static final String SERIALIZED_NAME_DIALER_CONFIG = "dialerConfig";
  @SerializedName(SERIALIZED_NAME_DIALER_CONFIG)
  private CreateCampaignRequestDialerConfig dialerConfig;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OUTBOUND_CALL_CONFIG = "outboundCallConfig";
  @SerializedName(SERIALIZED_NAME_OUTBOUND_CALL_CONFIG)
  private CreateCampaignRequestOutboundCallConfig outboundCallConfig;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = new HashMap<>();

  public CreateCampaignRequest() {
  }

  public CreateCampaignRequest connectInstanceId(String connectInstanceId) {
    this.connectInstanceId = connectInstanceId;
    return this;
  }

  /**
   * Amazon Connect Instance Id
   * @return connectInstanceId
   */
  @javax.annotation.Nonnull
  public String getConnectInstanceId() {
    return connectInstanceId;
  }

  public void setConnectInstanceId(String connectInstanceId) {
    this.connectInstanceId = connectInstanceId;
  }


  public CreateCampaignRequest dialerConfig(CreateCampaignRequestDialerConfig dialerConfig) {
    this.dialerConfig = dialerConfig;
    return this;
  }

  /**
   * Get dialerConfig
   * @return dialerConfig
   */
  @javax.annotation.Nonnull
  public CreateCampaignRequestDialerConfig getDialerConfig() {
    return dialerConfig;
  }

  public void setDialerConfig(CreateCampaignRequestDialerConfig dialerConfig) {
    this.dialerConfig = dialerConfig;
  }


  public CreateCampaignRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of an Amazon Connect Campaign name.
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateCampaignRequest outboundCallConfig(CreateCampaignRequestOutboundCallConfig outboundCallConfig) {
    this.outboundCallConfig = outboundCallConfig;
    return this;
  }

  /**
   * Get outboundCallConfig
   * @return outboundCallConfig
   */
  @javax.annotation.Nonnull
  public CreateCampaignRequestOutboundCallConfig getOutboundCallConfig() {
    return outboundCallConfig;
  }

  public void setOutboundCallConfig(CreateCampaignRequestOutboundCallConfig outboundCallConfig) {
    this.outboundCallConfig = outboundCallConfig;
  }


  public CreateCampaignRequest tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public CreateCampaignRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * Tag map with key and value.
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCampaignRequest createCampaignRequest = (CreateCampaignRequest) o;
    return Objects.equals(this.connectInstanceId, createCampaignRequest.connectInstanceId) &&
        Objects.equals(this.dialerConfig, createCampaignRequest.dialerConfig) &&
        Objects.equals(this.name, createCampaignRequest.name) &&
        Objects.equals(this.outboundCallConfig, createCampaignRequest.outboundCallConfig) &&
        Objects.equals(this.tags, createCampaignRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectInstanceId, dialerConfig, name, outboundCallConfig, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCampaignRequest {\n");
    sb.append("    connectInstanceId: ").append(toIndentedString(connectInstanceId)).append("\n");
    sb.append("    dialerConfig: ").append(toIndentedString(dialerConfig)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    outboundCallConfig: ").append(toIndentedString(outboundCallConfig)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("connectInstanceId");
    openapiFields.add("dialerConfig");
    openapiFields.add("name");
    openapiFields.add("outboundCallConfig");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("connectInstanceId");
    openapiRequiredFields.add("dialerConfig");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("outboundCallConfig");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateCampaignRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateCampaignRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateCampaignRequest is not found in the empty JSON string", CreateCampaignRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateCampaignRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateCampaignRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateCampaignRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("connectInstanceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connectInstanceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connectInstanceId").toString()));
      }
      // validate the required field `dialerConfig`
      CreateCampaignRequestDialerConfig.validateJsonElement(jsonObj.get("dialerConfig"));
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the required field `outboundCallConfig`
      CreateCampaignRequestOutboundCallConfig.validateJsonElement(jsonObj.get("outboundCallConfig"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateCampaignRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateCampaignRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateCampaignRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateCampaignRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateCampaignRequest>() {
           @Override
           public void write(JsonWriter out, CreateCampaignRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateCampaignRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateCampaignRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateCampaignRequest
   * @throws IOException if the JSON string is invalid with respect to CreateCampaignRequest
   */
  public static CreateCampaignRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateCampaignRequest.class);
  }

  /**
   * Convert an instance of CreateCampaignRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

