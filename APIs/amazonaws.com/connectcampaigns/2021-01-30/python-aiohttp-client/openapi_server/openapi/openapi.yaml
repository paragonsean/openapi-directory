openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: Provide APIs to create and manage Amazon Connect Campaigns.
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AmazonConnectCampaignService
  version: 2021-01-30
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: connectcampaigns
  x-aws-signingName: connect-campaigns
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/connectcampaigns-2021-01-30.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/connect-campaigns/
servers:
- description: The AmazonConnectCampaignService multi-region endpoint
  url: "http://connect-campaigns.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AmazonConnectCampaignService multi-region endpoint
  url: "https://connect-campaigns.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AmazonConnectCampaignService endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://connect-campaigns.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AmazonConnectCampaignService endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://connect-campaigns.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /campaigns:
    put:
      description: Creates a campaign for the specified Amazon Connect account. This
        API is idempotent.
      operationId: create_campaign
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCampaign_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCampaignResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /campaigns-state:
    post:
      description: Get state of campaigns for the specified Amazon Connect account.
      operationId: get_campaign_state_batch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCampaignStateBatch_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignStateBatchResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /campaigns-summary:
    post:
      description: Provides summary information about the campaigns under the specified
        Amazon Connect account.
      operationId: list_campaigns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCampaigns_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCampaignsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /campaigns/{id}:
    delete:
      description: Deletes a campaign from the specified Amazon Connect account.
      operationId: delete_campaign
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Identifier representing a Campaign
          maxLength: 256
          minLength: 0
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Describes the specific campaign.
      operationId: describe_campaign
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Identifier representing a Campaign
          maxLength: 256
          minLength: 0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCampaignResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /campaigns/{id}/dial-requests:
    put:
      description: Creates dials requests for the specified campaign Amazon Connect
        account. This API is idempotent.
      operationId: put_dial_request_batch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Identifier representing a Campaign
          maxLength: 256
          minLength: 0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDialRequestBatch_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDialRequestBatchResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
          description: InvalidCampaignStateException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /campaigns/{id}/dialer-config:
    post:
      description: Updates the dialer config of a campaign. This API is idempotent.
      operationId: update_campaign_dialer_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Identifier representing a Campaign
          maxLength: 256
          minLength: 0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCampaignDialerConfig_request'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /campaigns/{id}/name:
    post:
      description: Updates the name of a campaign. This API is idempotent.
      operationId: update_campaign_name
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Identifier representing a Campaign
          maxLength: 256
          minLength: 0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCampaignName_request'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /campaigns/{id}/outbound-call-config:
    post:
      description: Updates the outbound call config of a campaign. This API is idempotent.
      operationId: update_campaign_outbound_call_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Identifier representing a Campaign
          maxLength: 256
          minLength: 0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCampaignOutboundCallConfig_request'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /campaigns/{id}/pause:
    post:
      description: Pauses a campaign for the specified Amazon Connect account.
      operationId: pause_campaign
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Identifier representing a Campaign
          maxLength: 256
          minLength: 0
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
          description: InvalidCampaignStateException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /campaigns/{id}/resume:
    post:
      description: Stops a campaign for the specified Amazon Connect account.
      operationId: resume_campaign
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Identifier representing a Campaign
          maxLength: 256
          minLength: 0
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
          description: InvalidCampaignStateException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /campaigns/{id}/start:
    post:
      description: Starts a campaign for the specified Amazon Connect account.
      operationId: start_campaign
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Identifier representing a Campaign
          maxLength: 256
          minLength: 0
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
          description: InvalidCampaignStateException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /campaigns/{id}/state:
    get:
      description: Get state of a campaign for the specified Amazon Connect account.
      operationId: get_campaign_state
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Identifier representing a Campaign
          maxLength: 256
          minLength: 0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignStateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /campaigns/{id}/stop:
    post:
      description: Stops a campaign for the specified Amazon Connect account.
      operationId: stop_campaign
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: Identifier representing a Campaign
          maxLength: 256
          minLength: 0
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
          description: InvalidCampaignStateException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /connect-instance/{connectInstanceId}/config:
    delete:
      description: Deletes a connect instance config from the specified AWS account.
      operationId: delete_connect_instance_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: connectInstanceId
        required: true
        schema:
          description: Amazon Connect Instance Id
          maxLength: 256
          minLength: 0
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Get the specific Connect instance config.
      operationId: get_connect_instance_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: connectInstanceId
        required: true
        schema:
          description: Amazon Connect Instance Id
          maxLength: 256
          minLength: 0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectInstanceConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /connect-instance/{connectInstanceId}/onboarding:
    delete:
      description: Delete the Connect Campaigns onboarding job for the specified Amazon
        Connect instance.
      operationId: delete_instance_onboarding_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: connectInstanceId
        required: true
        schema:
          description: Amazon Connect Instance Id
          maxLength: 256
          minLength: 0
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Get the specific instance onboarding job status.
      operationId: get_instance_onboarding_job_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: connectInstanceId
        required: true
        schema:
          description: Amazon Connect Instance Id
          maxLength: 256
          minLength: 0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstanceOnboardingJobStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Onboard the specific Amazon Connect instance to Connect Campaigns.
      operationId: start_instance_onboarding_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: connectInstanceId
        required: true
        schema:
          description: Amazon Connect Instance Id
          maxLength: 256
          minLength: 0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartInstanceOnboardingJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartInstanceOnboardingJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{arn}:
    get:
      description: List tags for a resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: arn
        required: true
        schema:
          description: Arn
          maxLength: 500
          minLength: 20
          pattern: ^arn:.*
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Tag a resource.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: arn
        required: true
        schema:
          description: Arn
          maxLength: 500
          minLength: 20
          pattern: ^arn:.*
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{arn}#tagKeys:
    delete:
      description: Untag a resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: arn
        required: true
        schema:
          description: Arn
          maxLength: 500
          minLength: 20
          pattern: ^arn:.*
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          description: List of tag keys.
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 0
          type: array
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateCampaignResponse:
      description: The response for Create Campaign API
      example:
        id: id
        arn: arn
        tags:
          key: null
      properties:
        arn:
          description: The resource name of an Amazon Connect campaign.
          maxLength: 500
          minLength: 20
          title: CampaignArn
          type: string
        id:
          description: Identifier representing a Campaign
          maxLength: 256
          minLength: 0
          title: CampaignId
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Tag map with key and value.
          title: TagMap
          type: object
      title: CreateCampaignResponse
      type: object
    PredictiveDialerConfig:
      description: Predictive Dialer config
      example:
        bandwidthAllocation: 0.08008281904610115
      properties:
        bandwidthAllocation:
          description: The bandwidth allocation of a queue resource.
          format: double
          maximum: 1
          minimum: 0
          title: bandwidthAllocation
          type: number
      required:
      - bandwidthAllocation
      title: PredictiveDialerConfig
      type: object
    ProgressiveDialerConfig:
      description: Progressive Dialer config
      example:
        bandwidthAllocation: 0.6027456183070403
      properties:
        bandwidthAllocation:
          description: The bandwidth allocation of a queue resource.
          format: double
          maximum: 1
          minimum: 0
          title: bandwidthAllocation
          type: number
      required:
      - bandwidthAllocation
      title: ProgressiveDialerConfig
      type: object
    AnswerMachineDetectionConfig:
      description: Answering Machine Detection config
      example:
        enableAnswerMachineDetection: ""
      properties:
        enableAnswerMachineDetection:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Enable or disable answering machine detection
          title: enableAnswerMachineDetection
      required:
      - enableAnswerMachineDetection
      title: AnswerMachineDetectionConfig
      type: object
    ContactFlowId:
      description: The identifier of the contact flow for the outbound call.
      maxLength: 500
      minLength: 0
      title: ContactFlowId
      type: string
    QueueId:
      description: "The queue for the call. If you specify a queue, the phone displayed\
        \ for caller ID is the phone number specified in the queue. If you do not\
        \ specify a queue, the queue defined in the contact flow is used. If you do\
        \ not specify a queue, you must specify a source phone number."
      maxLength: 500
      minLength: 0
      title: QueueId
      type: string
    SourcePhoneNumber:
      description: "The phone number associated with the Amazon Connect instance,\
        \ in E.164 format. If you do not specify a source phone number, you must specify\
        \ a queue."
      maxLength: 100
      minLength: 0
      title: SourcePhoneNumber
      type: string
    TagValue:
      description: Tag value.
      maxLength: 256
      minLength: 0
      title: TagValue
      type: string
    InternalServerException: {}
    ResourceNotFoundException: {}
    ValidationException: {}
    ConflictException: {}
    AccessDeniedException: {}
    ServiceQuotaExceededException: {}
    ThrottlingException: {}
    InvalidStateException: {}
    DescribeCampaignResponse:
      description: DescribeCampaignResponse
      example:
        campaign:
          connectInstanceId: connectInstanceId
          name: name
          dialerConfig:
            progressiveDialerConfig:
              bandwidthAllocation: 0.6027456183070403
            predictiveDialerConfig:
              bandwidthAllocation: 0.08008281904610115
          id: id
          arn: arn
          outboundCallConfig:
            connectSourcePhoneNumber: connectSourcePhoneNumber
            answerMachineDetectionConfig:
              enableAnswerMachineDetection: ""
            connectContactFlowId: connectContactFlowId
            connectQueueId: connectQueueId
          tags:
            key: null
      properties:
        campaign:
          $ref: '#/components/schemas/Campaign'
      title: DescribeCampaignResponse
      type: object
    GetCampaignStateResponse:
      description: GetCampaignStateResponse
      example:
        state: Initialized
      properties:
        state:
          $ref: '#/components/schemas/CampaignState'
      title: GetCampaignStateResponse
      type: object
    GetCampaignStateBatchResponse:
      description: GetCampaignStateBatchResponse
      example:
        failedRequests:
        - failureCode: ResourceNotFound
          campaignId: campaignId
        - failureCode: ResourceNotFound
          campaignId: campaignId
        - failureCode: ResourceNotFound
          campaignId: campaignId
        - failureCode: ResourceNotFound
          campaignId: campaignId
        - failureCode: ResourceNotFound
          campaignId: campaignId
        successfulRequests:
        - campaignId: campaignId
          state: Initialized
        - campaignId: campaignId
          state: Initialized
        - campaignId: campaignId
          state: Initialized
        - campaignId: campaignId
          state: Initialized
        - campaignId: campaignId
          state: Initialized
      properties:
        failedRequests:
          description: List of failed requests of campaign state
          items:
            $ref: '#/components/schemas/FailedCampaignStateResponse'
          maxItems: 25
          minItems: 0
          title: failedRequests
          type: array
        successfulRequests:
          description: List of successful response of campaign state
          items:
            $ref: '#/components/schemas/SuccessfulCampaignStateResponse'
          maxItems: 25
          minItems: 0
          title: successfulRequests
          type: array
      title: GetCampaignStateBatchResponse
      type: object
    CampaignId:
      description: Identifier representing a Campaign
      maxLength: 256
      minLength: 0
      title: CampaignId
      type: string
    GetConnectInstanceConfigResponse:
      description: GetConnectInstanceConfigResponse
      example:
        connectInstanceConfig:
          encryptionConfig:
            keyArn: keyArn
            encryptionType: KMS
            enabled: true
          connectInstanceId: connectInstanceId
          serviceLinkedRoleArn: serviceLinkedRoleArn
      properties:
        connectInstanceConfig:
          $ref: '#/components/schemas/InstanceConfig'
      title: GetConnectInstanceConfigResponse
      type: object
    GetInstanceOnboardingJobStatusResponse:
      description: GetInstanceOnboardingJobStatusResponse
      example:
        connectInstanceOnboardingJobStatus:
          failureCode: EVENT_BRIDGE_ACCESS_DENIED
          connectInstanceId: connectInstanceId
          status: IN_PROGRESS
      properties:
        connectInstanceOnboardingJobStatus:
          $ref: '#/components/schemas/InstanceOnboardingJobStatus'
      title: GetInstanceOnboardingJobStatusResponse
      type: object
    ListCampaignsResponse:
      description: ListCampaignsResponse
      example:
        campaignSummaryList:
        - connectInstanceId: connectInstanceId
          name: name
          id: id
          arn: arn
        - connectInstanceId: connectInstanceId
          name: name
          id: id
          arn: arn
        nextToken: nextToken
      properties:
        campaignSummaryList:
          description: A list of Amazon Connect campaigns.
          items:
            $ref: '#/components/schemas/CampaignSummary'
          title: campaignSummaryList
          type: array
        nextToken:
          description: The token for the next set of results.
          maxLength: 1000
          minLength: 0
          title: nextToken
          type: string
      title: ListCampaignsResponse
      type: object
    InstanceIdFilter:
      description: Connect instance identifier filter
      example:
        value: value
        operator: Eq
      properties:
        operator:
          $ref: '#/components/schemas/InstanceIdFilterOperator'
        value:
          description: Amazon Connect Instance Id
          maxLength: 256
          minLength: 0
          title: InstanceId
          type: string
      required:
      - operator
      - value
      title: InstanceIdFilter
      type: object
    ListTagsForResourceResponse:
      description: ListTagsForResponse
      example:
        tags:
          key: null
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Tag map with key and value.
          title: TagMap
          type: object
      title: ListTagsForResourceResponse
      type: object
    InvalidCampaignStateException: {}
    PutDialRequestBatchResponse:
      description: PutDialRequestBatchResponse
      example:
        failedRequests:
        - failureCode: InvalidInput
          clientToken: clientToken
          id: id
        - failureCode: InvalidInput
          clientToken: clientToken
          id: id
        - failureCode: InvalidInput
          clientToken: clientToken
          id: id
        - failureCode: InvalidInput
          clientToken: clientToken
          id: id
        - failureCode: InvalidInput
          clientToken: clientToken
          id: id
        successfulRequests:
        - clientToken: clientToken
          id: id
        - clientToken: clientToken
          id: id
        - clientToken: clientToken
          id: id
        - clientToken: clientToken
          id: id
        - clientToken: clientToken
          id: id
      properties:
        failedRequests:
          description: A list of failed requests.
          items:
            $ref: '#/components/schemas/FailedRequest'
          maxItems: 25
          minItems: 0
          title: failedRequests
          type: array
        successfulRequests:
          description: A list of successful requests identified by the unique client
            token.
          items:
            $ref: '#/components/schemas/SuccessfulRequest'
          maxItems: 25
          minItems: 0
          title: successfulRequests
          type: array
      title: PutDialRequestBatchResponse
      type: object
    DialRequest:
      description: A dial request for a campaign.
      example:
        phoneNumber: phoneNumber
        clientToken: clientToken
        expirationTime: 2000-01-23T04:56:07.000+00:00
        attributes:
          key: null
      properties:
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/AttributeValue'
          description: "A custom key-value pair using an attribute map. The attributes\
            \ are standard Amazon Connect attributes, and can be accessed in contact\
            \ flows just like any other contact attributes."
          title: attributes
          type: object
        clientToken:
          description: Client provided parameter used for idempotency. Its value must
            be unique for each request.
          maxLength: 64
          minLength: 0
          title: ClientToken
          type: string
        expirationTime:
          description: Timestamp with no UTC offset or timezone
          format: date-time
          title: expirationTime
          type: string
        phoneNumber:
          description: "The phone number of the customer, in E.164 format."
          format: password
          maxLength: 20
          minLength: 0
          title: phoneNumber
          type: string
      required:
      - attributes
      - clientToken
      - expirationTime
      - phoneNumber
      title: DialRequest
      type: object
    StartInstanceOnboardingJobResponse:
      description: The response for StartInstanceOnboardingJob API.
      example:
        connectInstanceOnboardingJobStatus:
          failureCode: EVENT_BRIDGE_ACCESS_DENIED
          connectInstanceId: connectInstanceId
          status: IN_PROGRESS
      properties:
        connectInstanceOnboardingJobStatus:
          $ref: '#/components/schemas/InstanceOnboardingJobStatus'
      title: StartInstanceOnboardingJobResponse
      type: object
    Enabled:
      description: Boolean to indicate if custom encryption has been enabled.
      title: Enabled
      type: boolean
    EncryptionType:
      description: Server-side encryption type.
      enum:
      - KMS
      title: EncryptionType
      type: string
    EncryptionKey:
      description: KMS key id/arn for encryption config.
      maxLength: 500
      minLength: 0
      title: EncryptionKey
      type: string
    TagKey:
      description: Tag key.
      maxLength: 128
      minLength: 1
      pattern: "^(?!aws:)[a-zA-Z+-=._:/]+$"
      title: TagKey
      type: string
    Boolean:
      type: boolean
    Arn:
      description: Arn
      maxLength: 500
      minLength: 20
      pattern: ^arn:.*
      type: string
    AttributeName:
      description: "The key of the attribute. Attribute keys can include only alphanumeric,\
        \ dash, and underscore characters."
      maxLength: 32767
      minLength: 0
      pattern: "^[a-zA-Z0-9\\-_]+$"
      type: string
    AttributeValue:
      description: The value of the attribute.
      maxLength: 32767
      minLength: 0
      title: AttributeValue
      type: string
    Attributes:
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
      description: "A custom key-value pair using an attribute map. The attributes\
        \ are standard Amazon Connect attributes, and can be accessed in contact flows\
        \ just like any other contact attributes."
      title: attributes
      type: object
    BandwidthAllocation:
      description: The bandwidth allocation of a queue resource.
      format: double
      maximum: 1
      minimum: 0
      title: bandwidthAllocation
      type: number
    CampaignArn:
      description: The resource name of an Amazon Connect campaign.
      maxLength: 500
      minLength: 20
      title: CampaignArn
      type: string
    InstanceId:
      description: Amazon Connect Instance Id
      maxLength: 256
      minLength: 0
      title: InstanceId
      type: string
    DialerConfig:
      description: The possible types of dialer config parameters
      example:
        progressiveDialerConfig:
          bandwidthAllocation: 0.6027456183070403
        predictiveDialerConfig:
          bandwidthAllocation: 0.08008281904610115
      properties:
        predictiveDialerConfig:
          $ref: '#/components/schemas/PredictiveDialerConfig'
        progressiveDialerConfig:
          $ref: '#/components/schemas/ProgressiveDialerConfig'
      title: DialerConfig
      type: object
    CampaignName:
      description: The name of an Amazon Connect Campaign name.
      maxLength: 127
      minLength: 1
      title: CampaignName
      type: string
    OutboundCallConfig:
      description: The configuration used for outbound calls.
      example:
        connectSourcePhoneNumber: connectSourcePhoneNumber
        answerMachineDetectionConfig:
          enableAnswerMachineDetection: ""
        connectContactFlowId: connectContactFlowId
        connectQueueId: connectQueueId
      properties:
        answerMachineDetectionConfig:
          $ref: '#/components/schemas/AnswerMachineDetectionConfig'
        connectContactFlowId:
          description: The identifier of the contact flow for the outbound call.
          maxLength: 500
          minLength: 0
          title: ContactFlowId
          type: string
        connectQueueId:
          description: "The queue for the call. If you specify a queue, the phone\
            \ displayed for caller ID is the phone number specified in the queue.\
            \ If you do not specify a queue, the queue defined in the contact flow\
            \ is used. If you do not specify a queue, you must specify a source phone\
            \ number."
          maxLength: 500
          minLength: 0
          title: QueueId
          type: string
        connectSourcePhoneNumber:
          description: "The phone number associated with the Amazon Connect instance,\
            \ in E.164 format. If you do not specify a source phone number, you must\
            \ specify a queue."
          maxLength: 100
          minLength: 0
          title: SourcePhoneNumber
          type: string
      required:
      - connectContactFlowId
      - connectQueueId
      title: OutboundCallConfig
      type: object
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      description: Tag map with key and value.
      title: TagMap
      type: object
    Campaign:
      description: An Amazon Connect campaign.
      example:
        connectInstanceId: connectInstanceId
        name: name
        dialerConfig:
          progressiveDialerConfig:
            bandwidthAllocation: 0.6027456183070403
          predictiveDialerConfig:
            bandwidthAllocation: 0.08008281904610115
        id: id
        arn: arn
        outboundCallConfig:
          connectSourcePhoneNumber: connectSourcePhoneNumber
          answerMachineDetectionConfig:
            enableAnswerMachineDetection: ""
          connectContactFlowId: connectContactFlowId
          connectQueueId: connectQueueId
        tags:
          key: null
      properties:
        arn:
          description: The resource name of an Amazon Connect campaign.
          maxLength: 500
          minLength: 20
          title: CampaignArn
          type: string
        connectInstanceId:
          description: Amazon Connect Instance Id
          maxLength: 256
          minLength: 0
          title: InstanceId
          type: string
        dialerConfig:
          $ref: '#/components/schemas/DialerConfig'
        id:
          description: Identifier representing a Campaign
          maxLength: 256
          minLength: 0
          title: CampaignId
          type: string
        name:
          description: The name of an Amazon Connect Campaign name.
          maxLength: 127
          minLength: 1
          title: CampaignName
          type: string
        outboundCallConfig:
          $ref: '#/components/schemas/OutboundCallConfig'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Tag map with key and value.
          title: TagMap
          type: object
      required:
      - arn
      - connectInstanceId
      - dialerConfig
      - id
      - name
      - outboundCallConfig
      title: Campaign
      type: object
    CampaignFilters:
      description: Filter model by type
      example:
        instanceIdFilter:
          value: value
          operator: Eq
      properties:
        instanceIdFilter:
          $ref: '#/components/schemas/InstanceIdFilter'
      title: CampaignFilters
      type: object
    CampaignState:
      description: State of a campaign
      enum:
      - Initialized
      - Running
      - Paused
      - Stopped
      - Failed
      title: CampaignState
      type: string
    CampaignSummary:
      description: An Amazon Connect campaign summary.
      example:
        connectInstanceId: connectInstanceId
        name: name
        id: id
        arn: arn
      properties:
        arn:
          description: The resource name of an Amazon Connect campaign.
          maxLength: 500
          minLength: 20
          title: CampaignArn
          type: string
        connectInstanceId:
          description: Amazon Connect Instance Id
          maxLength: 256
          minLength: 0
          title: InstanceId
          type: string
        id:
          description: Identifier representing a Campaign
          maxLength: 256
          minLength: 0
          title: CampaignId
          type: string
        name:
          description: The name of an Amazon Connect Campaign name.
          maxLength: 127
          minLength: 1
          title: CampaignName
          type: string
      required:
      - arn
      - connectInstanceId
      - id
      - name
      title: CampaignSummary
      type: object
    CampaignSummaryList:
      description: A list of Amazon Connect campaigns.
      items:
        $ref: '#/components/schemas/CampaignSummary'
      title: campaignSummaryList
      type: array
    ClientToken:
      description: Client provided parameter used for idempotency. Its value must
        be unique for each request.
      maxLength: 64
      minLength: 0
      title: ClientToken
      type: string
    CreateCampaignRequest:
      description: The request for Create Campaign API.
      example:
        connectInstanceId: connectInstanceId
        name: name
        dialerConfig:
          progressiveDialerConfig:
            bandwidthAllocation: 0.6027456183070403
          predictiveDialerConfig:
            bandwidthAllocation: 0.08008281904610115
        outboundCallConfig:
          connectSourcePhoneNumber: connectSourcePhoneNumber
          answerMachineDetectionConfig:
            enableAnswerMachineDetection: ""
          connectContactFlowId: connectContactFlowId
          connectQueueId: connectQueueId
        tags:
          key: null
      properties:
        connectInstanceId:
          description: Amazon Connect Instance Id
          maxLength: 256
          minLength: 0
          title: InstanceId
          type: string
        dialerConfig:
          $ref: '#/components/schemas/DialerConfig'
        name:
          description: The name of an Amazon Connect Campaign name.
          maxLength: 127
          minLength: 1
          title: CampaignName
          type: string
        outboundCallConfig:
          $ref: '#/components/schemas/OutboundCallConfig'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Tag map with key and value.
          title: TagMap
          type: object
      required:
      - connectInstanceId
      - dialerConfig
      - name
      - outboundCallConfig
      title: CreateCampaignRequest
      type: object
    DeleteCampaignRequest:
      description: DeleteCampaignRequest
      properties: {}
      title: DeleteCampaignRequest
      type: object
    DeleteConnectInstanceConfigRequest:
      description: DeleteCampaignRequest
      properties: {}
      title: DeleteConnectInstanceConfigRequest
      type: object
    DeleteInstanceOnboardingJobRequest:
      description: The request for DeleteInstanceOnboardingJob API.
      properties: {}
      title: DeleteInstanceOnboardingJobRequest
      type: object
    DescribeCampaignRequest:
      description: DescribeCampaignRequests
      properties: {}
      title: DescribeCampaignRequest
      type: object
    DestinationPhoneNumber:
      description: "The phone number of the customer, in E.164 format."
      format: password
      maxLength: 20
      minLength: 0
      title: phoneNumber
      type: string
    TimeStamp:
      description: Timestamp with no UTC offset or timezone
      format: date-time
      title: expirationTime
      type: string
    DialRequestId:
      description: Identifier representing a Dial request
      title: DialRequestId
      type: string
    DialRequestList:
      description: A list of dial requests.
      items:
        $ref: '#/components/schemas/DialRequest'
      maxItems: 25
      minItems: 1
      type: array
    EncryptionConfig:
      description: "Encryption config for Connect Instance. Note that sensitive data\
        \ will always be encrypted. If disabled, service will perform encryption with\
        \ its own key. If enabled, a KMS key id needs to be provided and KMS charges\
        \ will apply. KMS is only type supported"
      example:
        keyArn: keyArn
        encryptionType: KMS
        enabled: true
      properties:
        enabled:
          description: Boolean to indicate if custom encryption has been enabled.
          title: Enabled
          type: boolean
        encryptionType:
          $ref: '#/components/schemas/EncryptionType'
        keyArn:
          description: KMS key id/arn for encryption config.
          maxLength: 500
          minLength: 0
          title: EncryptionKey
          type: string
      required:
      - enabled
      title: EncryptionConfig
      type: object
    GetCampaignStateBatchFailureCode:
      description: A predefined code indicating the error that caused the failure
        in getting state of campaigns
      enum:
      - ResourceNotFound
      - UnknownError
      title: GetCampaignStateBatchFailureCode
      type: string
    FailedCampaignStateResponse:
      description: Failed response of campaign state
      example:
        failureCode: ResourceNotFound
        campaignId: campaignId
      properties:
        campaignId:
          description: Identifier representing a Campaign
          maxLength: 256
          minLength: 0
          title: CampaignId
          type: string
        failureCode:
          $ref: '#/components/schemas/GetCampaignStateBatchFailureCode'
      title: FailedCampaignStateResponse
      type: object
    FailedCampaignStateResponseList:
      description: List of failed requests of campaign state
      items:
        $ref: '#/components/schemas/FailedCampaignStateResponse'
      maxItems: 25
      minItems: 0
      title: failedRequests
      type: array
    FailureCode:
      description: A predefined code indicating the error that caused the failure.
      enum:
      - InvalidInput
      - RequestThrottled
      - UnknownError
      title: FailureCode
      type: string
    FailedRequest:
      description: A failed request identified by the unique client token.
      example:
        failureCode: InvalidInput
        clientToken: clientToken
        id: id
      properties:
        clientToken:
          description: Client provided parameter used for idempotency. Its value must
            be unique for each request.
          maxLength: 64
          minLength: 0
          title: ClientToken
          type: string
        failureCode:
          $ref: '#/components/schemas/FailureCode'
        id:
          description: Identifier representing a Dial request
          title: DialRequestId
          type: string
      title: FailedRequest
      type: object
    FailedRequestList:
      description: A list of failed requests.
      items:
        $ref: '#/components/schemas/FailedRequest'
      maxItems: 25
      minItems: 0
      title: failedRequests
      type: array
    GetCampaignStateBatchRequestCampaignIdsList:
      description: List of CampaignId
      items:
        $ref: '#/components/schemas/CampaignId'
      maxItems: 25
      minItems: 1
      type: array
    GetCampaignStateBatchRequest:
      description: GetCampaignStateBatchRequest
      example:
        campaignIds:
        - null
        - null
        - null
        - null
        - null
      properties:
        campaignIds:
          description: List of CampaignId
          items:
            $ref: '#/components/schemas/CampaignId'
          maxItems: 25
          minItems: 1
          type: array
      required:
      - campaignIds
      title: GetCampaignStateBatchRequest
      type: object
    SuccessfulCampaignStateResponseList:
      description: List of successful response of campaign state
      items:
        $ref: '#/components/schemas/SuccessfulCampaignStateResponse'
      maxItems: 25
      minItems: 0
      title: successfulRequests
      type: array
    GetCampaignStateRequest:
      description: GetCampaignStateRequest
      properties: {}
      title: GetCampaignStateRequest
      type: object
    GetConnectInstanceConfigRequest:
      description: GetConnectInstanceConfigRequest
      properties: {}
      title: GetConnectInstanceConfigRequest
      type: object
    InstanceConfig:
      description: Instance config object
      example:
        encryptionConfig:
          keyArn: keyArn
          encryptionType: KMS
          enabled: true
        connectInstanceId: connectInstanceId
        serviceLinkedRoleArn: serviceLinkedRoleArn
      properties:
        connectInstanceId:
          description: Amazon Connect Instance Id
          maxLength: 256
          minLength: 0
          title: InstanceId
          type: string
        encryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
        serviceLinkedRoleArn:
          description: Service linked role arn
          maxLength: 256
          minLength: 0
          title: ServiceLinkedRoleArn
          type: string
      required:
      - connectInstanceId
      - encryptionConfig
      - serviceLinkedRoleArn
      title: InstanceConfig
      type: object
    GetInstanceOnboardingJobStatusRequest:
      description: GetInstanceOnboardingJobStatusRequest
      properties: {}
      title: GetInstanceOnboardingJobStatusRequest
      type: object
    InstanceOnboardingJobStatus:
      description: Instance onboarding job status object
      example:
        failureCode: EVENT_BRIDGE_ACCESS_DENIED
        connectInstanceId: connectInstanceId
        status: IN_PROGRESS
      properties:
        connectInstanceId:
          description: Amazon Connect Instance Id
          maxLength: 256
          minLength: 0
          title: InstanceId
          type: string
        failureCode:
          $ref: '#/components/schemas/InstanceOnboardingJobFailureCode'
        status:
          $ref: '#/components/schemas/InstanceOnboardingJobStatusCode'
      required:
      - connectInstanceId
      - status
      title: InstanceOnboardingJobStatus
      type: object
    ServiceLinkedRoleArn:
      description: Service linked role arn
      maxLength: 256
      minLength: 0
      title: ServiceLinkedRoleArn
      type: string
    InstanceIdFilterOperator:
      description: Operators for Connect instance identifier filter
      enum:
      - Eq
      title: InstanceIdFilterOperator
      type: string
    InstanceOnboardingJobFailureCode:
      description: Enumeration of the possible failure codes for instance onboarding
        job
      enum:
      - EVENT_BRIDGE_ACCESS_DENIED
      - EVENT_BRIDGE_MANAGED_RULE_LIMIT_EXCEEDED
      - IAM_ACCESS_DENIED
      - KMS_ACCESS_DENIED
      - KMS_KEY_NOT_FOUND
      - INTERNAL_FAILURE
      title: InstanceOnboardingJobFailureCode
      type: string
    InstanceOnboardingJobStatusCode:
      description: Enumeration of the possible states for instance onboarding job
      enum:
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      title: InstanceOnboardingJobStatusCode
      type: string
    MaxResults:
      description: The maximum number of results to return per page.
      maximum: 50
      minimum: 1
      type: integer
    NextToken:
      description: The token for the next set of results.
      maxLength: 1000
      minLength: 0
      title: nextToken
      type: string
    ListCampaignsRequest:
      description: ListCampaignsRequest
      example:
        maxResults: 4
        nextToken: nextToken
        filters:
          instanceIdFilter:
            value: value
            operator: Eq
      properties:
        filters:
          $ref: '#/components/schemas/CampaignFilters'
        maxResults:
          description: The maximum number of results to return per page.
          maximum: 50
          minimum: 1
          type: integer
        nextToken:
          description: The token for the next set of results.
          maxLength: 1000
          minLength: 0
          title: nextToken
          type: string
      title: ListCampaignsRequest
      type: object
    ListTagsForResourceRequest:
      description: ListTagsForResource
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    PauseCampaignRequest:
      description: PauseCampaignRequest
      properties: {}
      title: PauseCampaignRequest
      type: object
    PutDialRequestBatchRequest:
      description: PutDialRequestBatchRequest
      example:
        dialRequests:
        - phoneNumber: phoneNumber
          clientToken: clientToken
          expirationTime: 2000-01-23T04:56:07.000+00:00
          attributes:
            key: null
        - phoneNumber: phoneNumber
          clientToken: clientToken
          expirationTime: 2000-01-23T04:56:07.000+00:00
          attributes:
            key: null
        - phoneNumber: phoneNumber
          clientToken: clientToken
          expirationTime: 2000-01-23T04:56:07.000+00:00
          attributes:
            key: null
        - phoneNumber: phoneNumber
          clientToken: clientToken
          expirationTime: 2000-01-23T04:56:07.000+00:00
          attributes:
            key: null
        - phoneNumber: phoneNumber
          clientToken: clientToken
          expirationTime: 2000-01-23T04:56:07.000+00:00
          attributes:
            key: null
      properties:
        dialRequests:
          description: A list of dial requests.
          items:
            $ref: '#/components/schemas/DialRequest'
          maxItems: 25
          minItems: 1
          type: array
      required:
      - dialRequests
      title: PutDialRequestBatchRequest
      type: object
    SuccessfulRequestList:
      description: A list of successful requests identified by the unique client token.
      items:
        $ref: '#/components/schemas/SuccessfulRequest'
      maxItems: 25
      minItems: 0
      title: successfulRequests
      type: array
    ResumeCampaignRequest:
      description: ResumeCampaignRequest
      properties: {}
      title: ResumeCampaignRequest
      type: object
    StartCampaignRequest:
      description: StartCampaignRequest
      properties: {}
      title: StartCampaignRequest
      type: object
    StartInstanceOnboardingJobRequest:
      description: The request for StartInstanceOnboardingJob API.
      example:
        encryptionConfig:
          keyArn: keyArn
          encryptionType: KMS
          enabled: true
      properties:
        encryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
      required:
      - encryptionConfig
      title: StartInstanceOnboardingJobRequest
      type: object
    StopCampaignRequest:
      description: StopCampaignRequest
      properties: {}
      title: StopCampaignRequest
      type: object
    SuccessfulCampaignStateResponse:
      description: Successful response of campaign state
      example:
        campaignId: campaignId
        state: Initialized
      properties:
        campaignId:
          description: Identifier representing a Campaign
          maxLength: 256
          minLength: 0
          title: CampaignId
          type: string
        state:
          $ref: '#/components/schemas/CampaignState'
      title: SuccessfulCampaignStateResponse
      type: object
    SuccessfulRequest:
      description: A successful request identified by the unique client token.
      example:
        clientToken: clientToken
        id: id
      properties:
        clientToken:
          description: Client provided parameter used for idempotency. Its value must
            be unique for each request.
          maxLength: 64
          minLength: 0
          title: ClientToken
          type: string
        id:
          description: Identifier representing a Dial request
          title: DialRequestId
          type: string
      title: SuccessfulRequest
      type: object
    TagKeyList:
      description: List of tag keys.
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 0
      type: array
    TagResourceRequest:
      description: TagResourceRequest
      example:
        tags:
          key: null
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Tag map with key and value.
          title: TagMap
          type: object
      required:
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      description: UntagResourceRequest
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateCampaignDialerConfigRequest:
      description: UpdateCampaignDialerConfigRequest
      example:
        dialerConfig:
          progressiveDialerConfig:
            bandwidthAllocation: 0.6027456183070403
          predictiveDialerConfig:
            bandwidthAllocation: 0.08008281904610115
      properties:
        dialerConfig:
          $ref: '#/components/schemas/DialerConfig'
      required:
      - dialerConfig
      title: UpdateCampaignDialerConfigRequest
      type: object
    UpdateCampaignNameRequest:
      description: UpdateCampaignNameRequest
      example:
        name: name
      properties:
        name:
          description: The name of an Amazon Connect Campaign name.
          maxLength: 127
          minLength: 1
          title: CampaignName
          type: string
      required:
      - name
      title: UpdateCampaignNameRequest
      type: object
    UpdateCampaignOutboundCallConfigRequest:
      description: UpdateCampaignOutboundCallConfigRequest
      example:
        connectSourcePhoneNumber: connectSourcePhoneNumber
        answerMachineDetectionConfig:
          enableAnswerMachineDetection: ""
        connectContactFlowId: connectContactFlowId
      properties:
        answerMachineDetectionConfig:
          $ref: '#/components/schemas/AnswerMachineDetectionConfig'
        connectContactFlowId:
          description: The identifier of the contact flow for the outbound call.
          maxLength: 500
          minLength: 0
          title: ContactFlowId
          type: string
        connectSourcePhoneNumber:
          description: "The phone number associated with the Amazon Connect instance,\
            \ in E.164 format. If you do not specify a source phone number, you must\
            \ specify a queue."
          maxLength: 100
          minLength: 0
          title: SourcePhoneNumber
          type: string
      title: UpdateCampaignOutboundCallConfigRequest
      type: object
    CreateCampaign_request_dialerConfig:
      description: The possible types of dialer config parameters
      properties:
        predictiveDialerConfig:
          $ref: '#/components/schemas/PredictiveDialerConfig'
        progressiveDialerConfig:
          $ref: '#/components/schemas/ProgressiveDialerConfig'
      title: CreateCampaign_request_dialerConfig
      type: object
    CreateCampaign_request_outboundCallConfig:
      description: The configuration used for outbound calls.
      properties:
        answerMachineDetectionConfig:
          $ref: '#/components/schemas/AnswerMachineDetectionConfig'
        connectContactFlowId:
          description: The identifier of the contact flow for the outbound call.
          maxLength: 500
          minLength: 0
          title: ContactFlowId
          type: string
        connectQueueId:
          description: "The queue for the call. If you specify a queue, the phone\
            \ displayed for caller ID is the phone number specified in the queue.\
            \ If you do not specify a queue, the queue defined in the contact flow\
            \ is used. If you do not specify a queue, you must specify a source phone\
            \ number."
          maxLength: 500
          minLength: 0
          title: QueueId
          type: string
        connectSourcePhoneNumber:
          description: "The phone number associated with the Amazon Connect instance,\
            \ in E.164 format. If you do not specify a source phone number, you must\
            \ specify a queue."
          maxLength: 100
          minLength: 0
          title: SourcePhoneNumber
          type: string
      title: CreateCampaign_request_outboundCallConfig
      type: object
    CreateCampaign_request:
      properties:
        connectInstanceId:
          description: Amazon Connect Instance Id
          maxLength: 256
          minLength: 0
          title: connectInstanceId
          type: string
        dialerConfig:
          $ref: '#/components/schemas/CreateCampaign_request_dialerConfig'
        name:
          description: The name of an Amazon Connect Campaign name.
          maxLength: 127
          minLength: 1
          title: name
          type: string
        outboundCallConfig:
          $ref: '#/components/schemas/CreateCampaign_request_outboundCallConfig'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Tag map with key and value.
          title: tags
          type: object
      required:
      - connectInstanceId
      - dialerConfig
      - name
      - outboundCallConfig
      title: CreateCampaign_request
      type: object
    StartInstanceOnboardingJob_request_encryptionConfig:
      description: "Encryption config for Connect Instance. Note that sensitive data\
        \ will always be encrypted. If disabled, service will perform encryption with\
        \ its own key. If enabled, a KMS key id needs to be provided and KMS charges\
        \ will apply. KMS is only type supported"
      properties:
        enabled:
          description: Boolean to indicate if custom encryption has been enabled.
          title: Enabled
          type: boolean
        encryptionType:
          $ref: '#/components/schemas/EncryptionType'
        keyArn:
          description: KMS key id/arn for encryption config.
          maxLength: 500
          minLength: 0
          title: EncryptionKey
          type: string
      title: StartInstanceOnboardingJob_request_encryptionConfig
      type: object
    StartInstanceOnboardingJob_request:
      properties:
        encryptionConfig:
          $ref: '#/components/schemas/StartInstanceOnboardingJob_request_encryptionConfig'
      required:
      - encryptionConfig
      title: StartInstanceOnboardingJob_request
      type: object
    GetCampaignStateBatch_request:
      properties:
        campaignIds:
          description: List of CampaignId
          items:
            $ref: '#/components/schemas/CampaignId'
          maxItems: 25
          minItems: 1
          title: campaignIds
          type: array
      required:
      - campaignIds
      title: GetCampaignStateBatch_request
      type: object
    ListCampaigns_request_filters:
      description: Filter model by type
      properties:
        instanceIdFilter:
          $ref: '#/components/schemas/InstanceIdFilter'
      title: ListCampaigns_request_filters
      type: object
    ListCampaigns_request:
      properties:
        filters:
          $ref: '#/components/schemas/ListCampaigns_request_filters'
        maxResults:
          description: The maximum number of results to return per page.
          maximum: 50
          minimum: 1
          title: maxResults
          type: integer
        nextToken:
          description: The token for the next set of results.
          maxLength: 1000
          minLength: 0
          title: nextToken
          type: string
      title: ListCampaigns_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Tag map with key and value.
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    PutDialRequestBatch_request:
      properties:
        dialRequests:
          description: A list of dial requests.
          items:
            $ref: '#/components/schemas/DialRequest'
          maxItems: 25
          minItems: 1
          title: dialRequests
          type: array
      required:
      - dialRequests
      title: PutDialRequestBatch_request
      type: object
    UpdateCampaignDialerConfig_request:
      properties:
        dialerConfig:
          $ref: '#/components/schemas/CreateCampaign_request_dialerConfig'
      required:
      - dialerConfig
      title: UpdateCampaignDialerConfig_request
      type: object
    UpdateCampaignName_request:
      properties:
        name:
          description: The name of an Amazon Connect Campaign name.
          maxLength: 127
          minLength: 1
          title: name
          type: string
      required:
      - name
      title: UpdateCampaignName_request
      type: object
    UpdateCampaignOutboundCallConfig_request_answerMachineDetectionConfig:
      description: Answering Machine Detection config
      properties:
        enableAnswerMachineDetection:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Enable or disable answering machine detection
          title: enableAnswerMachineDetection
      title: UpdateCampaignOutboundCallConfig_request_answerMachineDetectionConfig
      type: object
    UpdateCampaignOutboundCallConfig_request:
      properties:
        answerMachineDetectionConfig:
          $ref: '#/components/schemas/UpdateCampaignOutboundCallConfig_request_answerMachineDetectionConfig'
        connectContactFlowId:
          description: The identifier of the contact flow for the outbound call.
          maxLength: 500
          minLength: 0
          title: connectContactFlowId
          type: string
        connectSourcePhoneNumber:
          description: "The phone number associated with the Amazon Connect instance,\
            \ in E.164 format. If you do not specify a source phone number, you must\
            \ specify a queue."
          maxLength: 100
          minLength: 0
          title: connectSourcePhoneNumber
          type: string
      title: UpdateCampaignOutboundCallConfig_request
      type: object
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
