# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnswerMachineDetectionConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_answer_machine_detection: bool=None):
        """AnswerMachineDetectionConfig - a model defined in OpenAPI

        :param enable_answer_machine_detection: The enable_answer_machine_detection of this AnswerMachineDetectionConfig.
        """
        self.openapi_types = {
            'enable_answer_machine_detection': bool
        }

        self.attribute_map = {
            'enable_answer_machine_detection': 'enableAnswerMachineDetection'
        }

        self._enable_answer_machine_detection = enable_answer_machine_detection

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnswerMachineDetectionConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnswerMachineDetectionConfig of this AnswerMachineDetectionConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_answer_machine_detection(self):
        """Gets the enable_answer_machine_detection of this AnswerMachineDetectionConfig.


        :return: The enable_answer_machine_detection of this AnswerMachineDetectionConfig.
        :rtype: bool
        """
        return self._enable_answer_machine_detection

    @enable_answer_machine_detection.setter
    def enable_answer_machine_detection(self, enable_answer_machine_detection):
        """Sets the enable_answer_machine_detection of this AnswerMachineDetectionConfig.


        :param enable_answer_machine_detection: The enable_answer_machine_detection of this AnswerMachineDetectionConfig.
        :type enable_answer_machine_detection: bool
        """
        if enable_answer_machine_detection is None:
            raise ValueError("Invalid value for `enable_answer_machine_detection`, must not be `None`")

        self._enable_answer_machine_detection = enable_answer_machine_detection
