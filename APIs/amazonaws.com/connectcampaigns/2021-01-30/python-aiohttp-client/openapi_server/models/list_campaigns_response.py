# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.campaign_summary import CampaignSummary
from openapi_server import util


class ListCampaignsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, campaign_summary_list: List[CampaignSummary]=None, next_token: str=None):
        """ListCampaignsResponse - a model defined in OpenAPI

        :param campaign_summary_list: The campaign_summary_list of this ListCampaignsResponse.
        :param next_token: The next_token of this ListCampaignsResponse.
        """
        self.openapi_types = {
            'campaign_summary_list': List[CampaignSummary],
            'next_token': str
        }

        self.attribute_map = {
            'campaign_summary_list': 'campaignSummaryList',
            'next_token': 'nextToken'
        }

        self._campaign_summary_list = campaign_summary_list
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListCampaignsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListCampaignsResponse of this ListCampaignsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def campaign_summary_list(self):
        """Gets the campaign_summary_list of this ListCampaignsResponse.

        A list of Amazon Connect campaigns.

        :return: The campaign_summary_list of this ListCampaignsResponse.
        :rtype: List[CampaignSummary]
        """
        return self._campaign_summary_list

    @campaign_summary_list.setter
    def campaign_summary_list(self, campaign_summary_list):
        """Sets the campaign_summary_list of this ListCampaignsResponse.

        A list of Amazon Connect campaigns.

        :param campaign_summary_list: The campaign_summary_list of this ListCampaignsResponse.
        :type campaign_summary_list: List[CampaignSummary]
        """

        self._campaign_summary_list = campaign_summary_list

    @property
    def next_token(self):
        """Gets the next_token of this ListCampaignsResponse.

        The token for the next set of results.

        :return: The next_token of this ListCampaignsResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListCampaignsResponse.

        The token for the next set of results.

        :param next_token: The next_token of this ListCampaignsResponse.
        :type next_token: str
        """
        if next_token is not None and len(next_token) > 1000:
            raise ValueError("Invalid value for `next_token`, length must be less than or equal to `1000`")
        if next_token is not None and len(next_token) < 0:
            raise ValueError("Invalid value for `next_token`, length must be greater than or equal to `0`")

        self._next_token = next_token
