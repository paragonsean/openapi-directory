# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetCampaignStateBatchRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, campaign_ids: List[str]=None):
        """GetCampaignStateBatchRequest - a model defined in OpenAPI

        :param campaign_ids: The campaign_ids of this GetCampaignStateBatchRequest.
        """
        self.openapi_types = {
            'campaign_ids': List[str]
        }

        self.attribute_map = {
            'campaign_ids': 'campaignIds'
        }

        self._campaign_ids = campaign_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCampaignStateBatchRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetCampaignStateBatch_request of this GetCampaignStateBatchRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def campaign_ids(self):
        """Gets the campaign_ids of this GetCampaignStateBatchRequest.

        List of CampaignId

        :return: The campaign_ids of this GetCampaignStateBatchRequest.
        :rtype: List[str]
        """
        return self._campaign_ids

    @campaign_ids.setter
    def campaign_ids(self, campaign_ids):
        """Sets the campaign_ids of this GetCampaignStateBatchRequest.

        List of CampaignId

        :param campaign_ids: The campaign_ids of this GetCampaignStateBatchRequest.
        :type campaign_ids: List[str]
        """
        if campaign_ids is None:
            raise ValueError("Invalid value for `campaign_ids`, must not be `None`")
        if campaign_ids is not None and len(campaign_ids) > 25:
            raise ValueError("Invalid value for `campaign_ids`, number of items must be less than or equal to `25`")
        if campaign_ids is not None and len(campaign_ids) < 1:
            raise ValueError("Invalid value for `campaign_ids`, number of items must be greater than or equal to `1`")

        self._campaign_ids = campaign_ids
