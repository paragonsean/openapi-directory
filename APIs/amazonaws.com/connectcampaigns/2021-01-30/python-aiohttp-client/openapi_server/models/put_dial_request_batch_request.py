# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dial_request import DialRequest
from openapi_server import util


class PutDialRequestBatchRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dial_requests: List[DialRequest]=None):
        """PutDialRequestBatchRequest - a model defined in OpenAPI

        :param dial_requests: The dial_requests of this PutDialRequestBatchRequest.
        """
        self.openapi_types = {
            'dial_requests': List[DialRequest]
        }

        self.attribute_map = {
            'dial_requests': 'dialRequests'
        }

        self._dial_requests = dial_requests

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutDialRequestBatchRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutDialRequestBatch_request of this PutDialRequestBatchRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dial_requests(self):
        """Gets the dial_requests of this PutDialRequestBatchRequest.

        A list of dial requests.

        :return: The dial_requests of this PutDialRequestBatchRequest.
        :rtype: List[DialRequest]
        """
        return self._dial_requests

    @dial_requests.setter
    def dial_requests(self, dial_requests):
        """Sets the dial_requests of this PutDialRequestBatchRequest.

        A list of dial requests.

        :param dial_requests: The dial_requests of this PutDialRequestBatchRequest.
        :type dial_requests: List[DialRequest]
        """
        if dial_requests is None:
            raise ValueError("Invalid value for `dial_requests`, must not be `None`")
        if dial_requests is not None and len(dial_requests) > 25:
            raise ValueError("Invalid value for `dial_requests`, number of items must be less than or equal to `25`")
        if dial_requests is not None and len(dial_requests) < 1:
            raise ValueError("Invalid value for `dial_requests`, number of items must be greater than or equal to `1`")

        self._dial_requests = dial_requests
