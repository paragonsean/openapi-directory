/*
 * AWS Migration Hub Refactor Spaces
 * <p><fullname>Amazon Web Services Migration Hub Refactor Spaces</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Amazon Web Services Migration Hub Refactor Spaces (Refactor Spaces). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>To share Refactor Spaces environments with other Amazon Web Services accounts or with Organizations and their OUs, use Resource Access Manager's <code>CreateResourceShare</code> API. See <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> in the <i>Amazon Web Services RAM API Reference</i>.</p></p>
 *
 * The version of the OpenAPI document: 2021-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.CreateServiceResponseLambdaEndpoint;
import org.openapitools.client.model.CreateServiceResponseUrlEndpoint;
import org.openapitools.client.model.ServiceEndpointType;
import org.openapitools.client.model.ServiceState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateServiceResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:02.463365-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateServiceResponse {
  public static final String SERIALIZED_NAME_APPLICATION_ID = "ApplicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private String applicationId;

  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_CREATED_BY_ACCOUNT_ID = "CreatedByAccountId";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_ACCOUNT_ID)
  private String createdByAccountId;

  public static final String SERIALIZED_NAME_CREATED_TIME = "CreatedTime";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private OffsetDateTime createdTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENDPOINT_TYPE = "EndpointType";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_TYPE)
  private ServiceEndpointType endpointType;

  public static final String SERIALIZED_NAME_ENVIRONMENT_ID = "EnvironmentId";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_ID)
  private String environmentId;

  public static final String SERIALIZED_NAME_LAMBDA_ENDPOINT = "LambdaEndpoint";
  @SerializedName(SERIALIZED_NAME_LAMBDA_ENDPOINT)
  private CreateServiceResponseLambdaEndpoint lambdaEndpoint;

  public static final String SERIALIZED_NAME_LAST_UPDATED_TIME = "LastUpdatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_TIME)
  private OffsetDateTime lastUpdatedTime;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OWNER_ACCOUNT_ID = "OwnerAccountId";
  @SerializedName(SERIALIZED_NAME_OWNER_ACCOUNT_ID)
  private String ownerAccountId;

  public static final String SERIALIZED_NAME_SERVICE_ID = "ServiceId";
  @SerializedName(SERIALIZED_NAME_SERVICE_ID)
  private String serviceId;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private ServiceState state;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_URL_ENDPOINT = "UrlEndpoint";
  @SerializedName(SERIALIZED_NAME_URL_ENDPOINT)
  private CreateServiceResponseUrlEndpoint urlEndpoint;

  public static final String SERIALIZED_NAME_VPC_ID = "VpcId";
  @SerializedName(SERIALIZED_NAME_VPC_ID)
  private String vpcId;

  public CreateServiceResponse() {
  }

  public CreateServiceResponse applicationId(String applicationId) {
    this.applicationId = applicationId;
    return this;
  }

  /**
   * Get applicationId
   * @return applicationId
   */
  @javax.annotation.Nullable
  public String getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }


  public CreateServiceResponse arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public CreateServiceResponse createdByAccountId(String createdByAccountId) {
    this.createdByAccountId = createdByAccountId;
    return this;
  }

  /**
   * Get createdByAccountId
   * @return createdByAccountId
   */
  @javax.annotation.Nullable
  public String getCreatedByAccountId() {
    return createdByAccountId;
  }

  public void setCreatedByAccountId(String createdByAccountId) {
    this.createdByAccountId = createdByAccountId;
  }


  public CreateServiceResponse createdTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * Get createdTime
   * @return createdTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
  }


  public CreateServiceResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateServiceResponse endpointType(ServiceEndpointType endpointType) {
    this.endpointType = endpointType;
    return this;
  }

  /**
   * Get endpointType
   * @return endpointType
   */
  @javax.annotation.Nullable
  public ServiceEndpointType getEndpointType() {
    return endpointType;
  }

  public void setEndpointType(ServiceEndpointType endpointType) {
    this.endpointType = endpointType;
  }


  public CreateServiceResponse environmentId(String environmentId) {
    this.environmentId = environmentId;
    return this;
  }

  /**
   * Get environmentId
   * @return environmentId
   */
  @javax.annotation.Nullable
  public String getEnvironmentId() {
    return environmentId;
  }

  public void setEnvironmentId(String environmentId) {
    this.environmentId = environmentId;
  }


  public CreateServiceResponse lambdaEndpoint(CreateServiceResponseLambdaEndpoint lambdaEndpoint) {
    this.lambdaEndpoint = lambdaEndpoint;
    return this;
  }

  /**
   * Get lambdaEndpoint
   * @return lambdaEndpoint
   */
  @javax.annotation.Nullable
  public CreateServiceResponseLambdaEndpoint getLambdaEndpoint() {
    return lambdaEndpoint;
  }

  public void setLambdaEndpoint(CreateServiceResponseLambdaEndpoint lambdaEndpoint) {
    this.lambdaEndpoint = lambdaEndpoint;
  }


  public CreateServiceResponse lastUpdatedTime(OffsetDateTime lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
    return this;
  }

  /**
   * Get lastUpdatedTime
   * @return lastUpdatedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedTime() {
    return lastUpdatedTime;
  }

  public void setLastUpdatedTime(OffsetDateTime lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
  }


  public CreateServiceResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateServiceResponse ownerAccountId(String ownerAccountId) {
    this.ownerAccountId = ownerAccountId;
    return this;
  }

  /**
   * Get ownerAccountId
   * @return ownerAccountId
   */
  @javax.annotation.Nullable
  public String getOwnerAccountId() {
    return ownerAccountId;
  }

  public void setOwnerAccountId(String ownerAccountId) {
    this.ownerAccountId = ownerAccountId;
  }


  public CreateServiceResponse serviceId(String serviceId) {
    this.serviceId = serviceId;
    return this;
  }

  /**
   * Get serviceId
   * @return serviceId
   */
  @javax.annotation.Nullable
  public String getServiceId() {
    return serviceId;
  }

  public void setServiceId(String serviceId) {
    this.serviceId = serviceId;
  }


  public CreateServiceResponse state(ServiceState state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public ServiceState getState() {
    return state;
  }

  public void setState(ServiceState state) {
    this.state = state;
  }


  public CreateServiceResponse tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public CreateServiceResponse urlEndpoint(CreateServiceResponseUrlEndpoint urlEndpoint) {
    this.urlEndpoint = urlEndpoint;
    return this;
  }

  /**
   * Get urlEndpoint
   * @return urlEndpoint
   */
  @javax.annotation.Nullable
  public CreateServiceResponseUrlEndpoint getUrlEndpoint() {
    return urlEndpoint;
  }

  public void setUrlEndpoint(CreateServiceResponseUrlEndpoint urlEndpoint) {
    this.urlEndpoint = urlEndpoint;
  }


  public CreateServiceResponse vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

  /**
   * Get vpcId
   * @return vpcId
   */
  @javax.annotation.Nullable
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateServiceResponse createServiceResponse = (CreateServiceResponse) o;
    return Objects.equals(this.applicationId, createServiceResponse.applicationId) &&
        Objects.equals(this.arn, createServiceResponse.arn) &&
        Objects.equals(this.createdByAccountId, createServiceResponse.createdByAccountId) &&
        Objects.equals(this.createdTime, createServiceResponse.createdTime) &&
        Objects.equals(this.description, createServiceResponse.description) &&
        Objects.equals(this.endpointType, createServiceResponse.endpointType) &&
        Objects.equals(this.environmentId, createServiceResponse.environmentId) &&
        Objects.equals(this.lambdaEndpoint, createServiceResponse.lambdaEndpoint) &&
        Objects.equals(this.lastUpdatedTime, createServiceResponse.lastUpdatedTime) &&
        Objects.equals(this.name, createServiceResponse.name) &&
        Objects.equals(this.ownerAccountId, createServiceResponse.ownerAccountId) &&
        Objects.equals(this.serviceId, createServiceResponse.serviceId) &&
        Objects.equals(this.state, createServiceResponse.state) &&
        Objects.equals(this.tags, createServiceResponse.tags) &&
        Objects.equals(this.urlEndpoint, createServiceResponse.urlEndpoint) &&
        Objects.equals(this.vpcId, createServiceResponse.vpcId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationId, arn, createdByAccountId, createdTime, description, endpointType, environmentId, lambdaEndpoint, lastUpdatedTime, name, ownerAccountId, serviceId, state, tags, urlEndpoint, vpcId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateServiceResponse {\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    createdByAccountId: ").append(toIndentedString(createdByAccountId)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    endpointType: ").append(toIndentedString(endpointType)).append("\n");
    sb.append("    environmentId: ").append(toIndentedString(environmentId)).append("\n");
    sb.append("    lambdaEndpoint: ").append(toIndentedString(lambdaEndpoint)).append("\n");
    sb.append("    lastUpdatedTime: ").append(toIndentedString(lastUpdatedTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ownerAccountId: ").append(toIndentedString(ownerAccountId)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    urlEndpoint: ").append(toIndentedString(urlEndpoint)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ApplicationId");
    openapiFields.add("Arn");
    openapiFields.add("CreatedByAccountId");
    openapiFields.add("CreatedTime");
    openapiFields.add("Description");
    openapiFields.add("EndpointType");
    openapiFields.add("EnvironmentId");
    openapiFields.add("LambdaEndpoint");
    openapiFields.add("LastUpdatedTime");
    openapiFields.add("Name");
    openapiFields.add("OwnerAccountId");
    openapiFields.add("ServiceId");
    openapiFields.add("State");
    openapiFields.add("Tags");
    openapiFields.add("UrlEndpoint");
    openapiFields.add("VpcId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateServiceResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateServiceResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateServiceResponse is not found in the empty JSON string", CreateServiceResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateServiceResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateServiceResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ApplicationId`
      if (jsonObj.get("ApplicationId") != null && !jsonObj.get("ApplicationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ApplicationId"));
      }
      // validate the optional field `Arn`
      if (jsonObj.get("Arn") != null && !jsonObj.get("Arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Arn"));
      }
      // validate the optional field `CreatedByAccountId`
      if (jsonObj.get("CreatedByAccountId") != null && !jsonObj.get("CreatedByAccountId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CreatedByAccountId"));
      }
      // validate the optional field `CreatedTime`
      if (jsonObj.get("CreatedTime") != null && !jsonObj.get("CreatedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedTime"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `EndpointType`
      if (jsonObj.get("EndpointType") != null && !jsonObj.get("EndpointType").isJsonNull()) {
        ServiceEndpointType.validateJsonElement(jsonObj.get("EndpointType"));
      }
      // validate the optional field `EnvironmentId`
      if (jsonObj.get("EnvironmentId") != null && !jsonObj.get("EnvironmentId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EnvironmentId"));
      }
      // validate the optional field `LambdaEndpoint`
      if (jsonObj.get("LambdaEndpoint") != null && !jsonObj.get("LambdaEndpoint").isJsonNull()) {
        CreateServiceResponseLambdaEndpoint.validateJsonElement(jsonObj.get("LambdaEndpoint"));
      }
      // validate the optional field `LastUpdatedTime`
      if (jsonObj.get("LastUpdatedTime") != null && !jsonObj.get("LastUpdatedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdatedTime"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `OwnerAccountId`
      if (jsonObj.get("OwnerAccountId") != null && !jsonObj.get("OwnerAccountId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OwnerAccountId"));
      }
      // validate the optional field `ServiceId`
      if (jsonObj.get("ServiceId") != null && !jsonObj.get("ServiceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServiceId"));
      }
      // validate the optional field `State`
      if (jsonObj.get("State") != null && !jsonObj.get("State").isJsonNull()) {
        ServiceState.validateJsonElement(jsonObj.get("State"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `UrlEndpoint`
      if (jsonObj.get("UrlEndpoint") != null && !jsonObj.get("UrlEndpoint").isJsonNull()) {
        CreateServiceResponseUrlEndpoint.validateJsonElement(jsonObj.get("UrlEndpoint"));
      }
      // validate the optional field `VpcId`
      if (jsonObj.get("VpcId") != null && !jsonObj.get("VpcId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VpcId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateServiceResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateServiceResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateServiceResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateServiceResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateServiceResponse>() {
           @Override
           public void write(JsonWriter out, CreateServiceResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateServiceResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateServiceResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateServiceResponse
   * @throws IOException if the JSON string is invalid with respect to CreateServiceResponse
   */
  public static CreateServiceResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateServiceResponse.class);
  }

  /**
   * Convert an instance of CreateServiceResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

