/*
 * AWS Migration Hub Refactor Spaces
 * <p><fullname>Amazon Web Services Migration Hub Refactor Spaces</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Amazon Web Services Migration Hub Refactor Spaces (Refactor Spaces). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>To share Refactor Spaces environments with other Amazon Web Services accounts or with Organizations and their OUs, use Resource Access Manager's <code>CreateResourceShare</code> API. See <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> in the <i>Amazon Web Services RAM API Reference</i>.</p></p>
 *
 * The version of the OpenAPI document: 2021-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ApiGatewayEndpointType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A wrapper object holding the Amazon API Gateway proxy configuration. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:02.463365-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiGatewayProxyConfig {
  public static final String SERIALIZED_NAME_API_GATEWAY_ID = "ApiGatewayId";
  @SerializedName(SERIALIZED_NAME_API_GATEWAY_ID)
  private String apiGatewayId;

  public static final String SERIALIZED_NAME_ENDPOINT_TYPE = "EndpointType";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_TYPE)
  private ApiGatewayEndpointType endpointType;

  public static final String SERIALIZED_NAME_NLB_ARN = "NlbArn";
  @SerializedName(SERIALIZED_NAME_NLB_ARN)
  private String nlbArn;

  public static final String SERIALIZED_NAME_NLB_NAME = "NlbName";
  @SerializedName(SERIALIZED_NAME_NLB_NAME)
  private String nlbName;

  public static final String SERIALIZED_NAME_PROXY_URL = "ProxyUrl";
  @SerializedName(SERIALIZED_NAME_PROXY_URL)
  private String proxyUrl;

  public static final String SERIALIZED_NAME_STAGE_NAME = "StageName";
  @SerializedName(SERIALIZED_NAME_STAGE_NAME)
  private String stageName;

  public static final String SERIALIZED_NAME_VPC_LINK_ID = "VpcLinkId";
  @SerializedName(SERIALIZED_NAME_VPC_LINK_ID)
  private String vpcLinkId;

  public ApiGatewayProxyConfig() {
  }

  public ApiGatewayProxyConfig apiGatewayId(String apiGatewayId) {
    this.apiGatewayId = apiGatewayId;
    return this;
  }

  /**
   * Get apiGatewayId
   * @return apiGatewayId
   */
  @javax.annotation.Nullable
  public String getApiGatewayId() {
    return apiGatewayId;
  }

  public void setApiGatewayId(String apiGatewayId) {
    this.apiGatewayId = apiGatewayId;
  }


  public ApiGatewayProxyConfig endpointType(ApiGatewayEndpointType endpointType) {
    this.endpointType = endpointType;
    return this;
  }

  /**
   * Get endpointType
   * @return endpointType
   */
  @javax.annotation.Nullable
  public ApiGatewayEndpointType getEndpointType() {
    return endpointType;
  }

  public void setEndpointType(ApiGatewayEndpointType endpointType) {
    this.endpointType = endpointType;
  }


  public ApiGatewayProxyConfig nlbArn(String nlbArn) {
    this.nlbArn = nlbArn;
    return this;
  }

  /**
   * Get nlbArn
   * @return nlbArn
   */
  @javax.annotation.Nullable
  public String getNlbArn() {
    return nlbArn;
  }

  public void setNlbArn(String nlbArn) {
    this.nlbArn = nlbArn;
  }


  public ApiGatewayProxyConfig nlbName(String nlbName) {
    this.nlbName = nlbName;
    return this;
  }

  /**
   * Get nlbName
   * @return nlbName
   */
  @javax.annotation.Nullable
  public String getNlbName() {
    return nlbName;
  }

  public void setNlbName(String nlbName) {
    this.nlbName = nlbName;
  }


  public ApiGatewayProxyConfig proxyUrl(String proxyUrl) {
    this.proxyUrl = proxyUrl;
    return this;
  }

  /**
   * Get proxyUrl
   * @return proxyUrl
   */
  @javax.annotation.Nullable
  public String getProxyUrl() {
    return proxyUrl;
  }

  public void setProxyUrl(String proxyUrl) {
    this.proxyUrl = proxyUrl;
  }


  public ApiGatewayProxyConfig stageName(String stageName) {
    this.stageName = stageName;
    return this;
  }

  /**
   * Get stageName
   * @return stageName
   */
  @javax.annotation.Nullable
  public String getStageName() {
    return stageName;
  }

  public void setStageName(String stageName) {
    this.stageName = stageName;
  }


  public ApiGatewayProxyConfig vpcLinkId(String vpcLinkId) {
    this.vpcLinkId = vpcLinkId;
    return this;
  }

  /**
   * Get vpcLinkId
   * @return vpcLinkId
   */
  @javax.annotation.Nullable
  public String getVpcLinkId() {
    return vpcLinkId;
  }

  public void setVpcLinkId(String vpcLinkId) {
    this.vpcLinkId = vpcLinkId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiGatewayProxyConfig apiGatewayProxyConfig = (ApiGatewayProxyConfig) o;
    return Objects.equals(this.apiGatewayId, apiGatewayProxyConfig.apiGatewayId) &&
        Objects.equals(this.endpointType, apiGatewayProxyConfig.endpointType) &&
        Objects.equals(this.nlbArn, apiGatewayProxyConfig.nlbArn) &&
        Objects.equals(this.nlbName, apiGatewayProxyConfig.nlbName) &&
        Objects.equals(this.proxyUrl, apiGatewayProxyConfig.proxyUrl) &&
        Objects.equals(this.stageName, apiGatewayProxyConfig.stageName) &&
        Objects.equals(this.vpcLinkId, apiGatewayProxyConfig.vpcLinkId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiGatewayId, endpointType, nlbArn, nlbName, proxyUrl, stageName, vpcLinkId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiGatewayProxyConfig {\n");
    sb.append("    apiGatewayId: ").append(toIndentedString(apiGatewayId)).append("\n");
    sb.append("    endpointType: ").append(toIndentedString(endpointType)).append("\n");
    sb.append("    nlbArn: ").append(toIndentedString(nlbArn)).append("\n");
    sb.append("    nlbName: ").append(toIndentedString(nlbName)).append("\n");
    sb.append("    proxyUrl: ").append(toIndentedString(proxyUrl)).append("\n");
    sb.append("    stageName: ").append(toIndentedString(stageName)).append("\n");
    sb.append("    vpcLinkId: ").append(toIndentedString(vpcLinkId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ApiGatewayId");
    openapiFields.add("EndpointType");
    openapiFields.add("NlbArn");
    openapiFields.add("NlbName");
    openapiFields.add("ProxyUrl");
    openapiFields.add("StageName");
    openapiFields.add("VpcLinkId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiGatewayProxyConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiGatewayProxyConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiGatewayProxyConfig is not found in the empty JSON string", ApiGatewayProxyConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiGatewayProxyConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiGatewayProxyConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ApiGatewayId`
      if (jsonObj.get("ApiGatewayId") != null && !jsonObj.get("ApiGatewayId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ApiGatewayId"));
      }
      // validate the optional field `EndpointType`
      if (jsonObj.get("EndpointType") != null && !jsonObj.get("EndpointType").isJsonNull()) {
        ApiGatewayEndpointType.validateJsonElement(jsonObj.get("EndpointType"));
      }
      // validate the optional field `NlbArn`
      if (jsonObj.get("NlbArn") != null && !jsonObj.get("NlbArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NlbArn"));
      }
      // validate the optional field `NlbName`
      if (jsonObj.get("NlbName") != null && !jsonObj.get("NlbName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NlbName"));
      }
      // validate the optional field `ProxyUrl`
      if (jsonObj.get("ProxyUrl") != null && !jsonObj.get("ProxyUrl").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ProxyUrl"));
      }
      // validate the optional field `StageName`
      if (jsonObj.get("StageName") != null && !jsonObj.get("StageName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StageName"));
      }
      // validate the optional field `VpcLinkId`
      if (jsonObj.get("VpcLinkId") != null && !jsonObj.get("VpcLinkId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VpcLinkId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiGatewayProxyConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiGatewayProxyConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiGatewayProxyConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiGatewayProxyConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiGatewayProxyConfig>() {
           @Override
           public void write(JsonWriter out, ApiGatewayProxyConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiGatewayProxyConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiGatewayProxyConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiGatewayProxyConfig
   * @throws IOException if the JSON string is invalid with respect to ApiGatewayProxyConfig
   */
  public static ApiGatewayProxyConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiGatewayProxyConfig.class);
  }

  /**
   * Convert an instance of ApiGatewayProxyConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

