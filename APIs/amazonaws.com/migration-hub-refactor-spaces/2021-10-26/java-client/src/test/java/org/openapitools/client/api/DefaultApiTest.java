/*
 * AWS Migration Hub Refactor Spaces
 * <p><fullname>Amazon Web Services Migration Hub Refactor Spaces</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Amazon Web Services Migration Hub Refactor Spaces (Refactor Spaces). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>To share Refactor Spaces environments with other Amazon Web Services accounts or with Organizations and their OUs, use Resource Access Manager's <code>CreateResourceShare</code> API. See <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> in the <i>Amazon Web Services RAM API Reference</i>.</p></p>
 *
 * The version of the OpenAPI document: 2021-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateApplicationRequest;
import org.openapitools.client.model.CreateApplicationResponse;
import org.openapitools.client.model.CreateEnvironmentRequest;
import org.openapitools.client.model.CreateEnvironmentResponse;
import org.openapitools.client.model.CreateRouteRequest;
import org.openapitools.client.model.CreateRouteResponse;
import org.openapitools.client.model.CreateServiceRequest;
import org.openapitools.client.model.CreateServiceResponse;
import org.openapitools.client.model.DeleteApplicationResponse;
import org.openapitools.client.model.DeleteEnvironmentResponse;
import org.openapitools.client.model.DeleteRouteResponse;
import org.openapitools.client.model.DeleteServiceResponse;
import org.openapitools.client.model.GetApplicationResponse;
import org.openapitools.client.model.GetEnvironmentResponse;
import org.openapitools.client.model.GetResourcePolicyResponse;
import org.openapitools.client.model.GetRouteResponse;
import org.openapitools.client.model.GetServiceResponse;
import org.openapitools.client.model.ListApplicationsResponse;
import org.openapitools.client.model.ListEnvironmentVpcsResponse;
import org.openapitools.client.model.ListEnvironmentsResponse;
import org.openapitools.client.model.ListRoutesResponse;
import org.openapitools.client.model.ListServicesResponse;
import org.openapitools.client.model.ListTagsForResourceResponse;
import org.openapitools.client.model.PutResourcePolicyRequest;
import org.openapitools.client.model.TagResourceRequest;
import org.openapitools.client.model.UpdateRouteRequest;
import org.openapitools.client.model.UpdateRouteResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * &lt;p&gt;Creates an Amazon Web Services Migration Hub Refactor Spaces application. The account that owns the environment also owns the applications created inside the environment, regardless of the account that creates the application. Refactor Spaces provisions an Amazon API Gateway, API Gateway VPC link, and Network Load Balancer for the application proxy inside your account.&lt;/p&gt; &lt;p&gt;In environments created with a &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/APIReference/API_CreateEnvironment.html#migrationhubrefactorspaces-CreateEnvironment-request-NetworkFabricType\&quot;&gt;CreateEnvironment:NetworkFabricType&lt;/a&gt; of &lt;code&gt;NONE&lt;/code&gt; you need to configure &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/whitepapers/latest/aws-vpc-connectivity-options/amazon-vpc-to-amazon-vpc-connectivity-options.html\&quot;&gt; VPC to VPC connectivity&lt;/a&gt; between your service VPC and the application proxy VPC to route traffic through the application proxy to a service with a private URL endpoint. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/userguide/getting-started-create-application.html\&quot;&gt; Create an application&lt;/a&gt; in the &lt;i&gt;Refactor Spaces User Guide&lt;/i&gt;. &lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createApplicationTest() throws ApiException {
        String environmentIdentifier = null;
        CreateApplicationRequest createApplicationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateApplicationResponse response = api.createApplication(environmentIdentifier, createApplicationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates an Amazon Web Services Migration Hub Refactor Spaces environment. The caller owns the environment resource, and all Refactor Spaces applications, services, and routes created within the environment. They are referred to as the &lt;i&gt;environment owner&lt;/i&gt;. The environment owner has cross-account visibility and control of Refactor Spaces resources that are added to the environment by other accounts that the environment is shared with.&lt;/p&gt; &lt;p&gt;When creating an environment with a &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/APIReference/API_CreateEnvironment.html#migrationhubrefactorspaces-CreateEnvironment-request-NetworkFabricType\&quot;&gt;CreateEnvironment:NetworkFabricType&lt;/a&gt; of &lt;code&gt;TRANSIT_GATEWAY&lt;/code&gt;, Refactor Spaces provisions a transit gateway to enable services in VPCs to communicate directly across accounts. If &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/APIReference/API_CreateEnvironment.html#migrationhubrefactorspaces-CreateEnvironment-request-NetworkFabricType\&quot;&gt;CreateEnvironment:NetworkFabricType&lt;/a&gt; is &lt;code&gt;NONE&lt;/code&gt;, Refactor Spaces does not create a transit gateway and you must use your network infrastructure to route traffic to services with private URL endpoints.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createEnvironmentTest() throws ApiException {
        CreateEnvironmentRequest createEnvironmentRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateEnvironmentResponse response = api.createEnvironment(createEnvironmentRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates an Amazon Web Services Migration Hub Refactor Spaces route. The account owner of the service resource is always the environment owner, regardless of which account creates the route. Routes target a service in the application. If an application does not have any routes, then the first route must be created as a &lt;code&gt;DEFAULT&lt;/code&gt; &lt;code&gt;RouteType&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;When created, the default route defaults to an active state so state is not a required input. However, like all other state values the state of the default route can be updated after creation, but only when all other routes are also inactive. Conversely, no route can be active without the default route also being active.&lt;/p&gt; &lt;p&gt;When you create a route, Refactor Spaces configures the Amazon API Gateway to send traffic to the target service as follows:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;URL Endpoints&lt;/b&gt; &lt;/p&gt; &lt;p&gt;If the service has a URL endpoint, and the endpoint resolves to a private IP address, Refactor Spaces routes traffic using the API Gateway VPC link. If a service endpoint resolves to a public IP address, Refactor Spaces routes traffic over the public internet. Services can have HTTP or HTTPS URL endpoints. For HTTPS URLs, publicly-signed certificates are supported. Private Certificate Authorities (CAs) are permitted only if the CA&#39;s domain is also publicly resolvable. &lt;/p&gt; &lt;p&gt;Refactor Spaces automatically resolves the public Domain Name System (DNS) names that are set in &lt;code&gt;CreateService:UrlEndpoint &lt;/code&gt;when you create a service. The DNS names resolve when the DNS time-to-live (TTL) expires, or every 60 seconds for TTLs less than 60 seconds. This periodic DNS resolution ensures that the route configuration remains up-to-date. &lt;/p&gt; &lt;p/&gt; &lt;p&gt; &lt;b&gt;One-time health check&lt;/b&gt; &lt;/p&gt; &lt;p&gt;A one-time health check is performed on the service when either the route is updated from inactive to active, or when it is created with an active state. If the health check fails, the route transitions the route state to &lt;code&gt;FAILED&lt;/code&gt;, an error code of &lt;code&gt;SERVICE_ENDPOINT_HEALTH_CHECK_FAILURE&lt;/code&gt; is provided, and no traffic is sent to the service.&lt;/p&gt; &lt;p&gt;For private URLs, a target group is created on the Network Load Balancer and the load balancer target group runs default target health checks. By default, the health check is run against the service endpoint URL. Optionally, the health check can be performed against a different protocol, port, and/or path using the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/APIReference/API_CreateService.html#migrationhubrefactorspaces-CreateService-request-UrlEndpoint\&quot;&gt;CreateService:UrlEndpoint&lt;/a&gt; parameter. All other health check settings for the load balancer use the default values described in the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health-checks.html\&quot;&gt;Health checks for your target groups&lt;/a&gt; in the &lt;i&gt;Elastic Load Balancing guide&lt;/i&gt;. The health check is considered successful if at least one target within the target group transitions to a healthy state.&lt;/p&gt; &lt;p/&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Lambda function endpoints&lt;/b&gt; &lt;/p&gt; &lt;p&gt;If the service has an Lambda function endpoint, then Refactor Spaces configures the Lambda function&#39;s resource policy to allow the application&#39;s API Gateway to invoke the function.&lt;/p&gt; &lt;p&gt;The Lambda function state is checked. If the function is not active, the function configuration is updated so that Lambda resources are provisioned. If the Lambda state is &lt;code&gt;Failed&lt;/code&gt;, then the route creation fails. For more information, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/lambda/latest/dg/API_GetFunctionConfiguration.html#SSS-GetFunctionConfiguration-response-State\&quot;&gt;GetFunctionConfiguration&#39;s State response parameter&lt;/a&gt; in the &lt;i&gt;Lambda Developer Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;A check is performed to determine that a Lambda function with the specified ARN exists. If it does not exist, the health check fails. For public URLs, a connection is opened to the public endpoint. If the URL is not reachable, the health check fails. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; &lt;b&gt;Environments without a network bridge&lt;/b&gt; &lt;/p&gt; &lt;p&gt;When you create environments without a network bridge (&lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/APIReference/API_CreateEnvironment.html#migrationhubrefactorspaces-CreateEnvironment-request-NetworkFabricType\&quot;&gt;CreateEnvironment:NetworkFabricType&lt;/a&gt; is &lt;code&gt;NONE)&lt;/code&gt; and you use your own networking infrastructure, you need to configure &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/whitepapers/latest/aws-vpc-connectivity-options/amazon-vpc-to-amazon-vpc-connectivity-options.html\&quot;&gt;VPC to VPC connectivity&lt;/a&gt; between your network and the application proxy VPC. Route creation from the application proxy to service endpoints will fail if your network is not configured to connect to the application proxy VPC. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/userguide/getting-started-create-role.html\&quot;&gt; Create a route&lt;/a&gt; in the &lt;i&gt;Refactor Spaces User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p/&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRouteTest() throws ApiException {
        String applicationIdentifier = null;
        String environmentIdentifier = null;
        CreateRouteRequest createRouteRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateRouteResponse response = api.createRoute(applicationIdentifier, environmentIdentifier, createRouteRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates an Amazon Web Services Migration Hub Refactor Spaces service. The account owner of the service is always the environment owner, regardless of which account in the environment creates the service. Services have either a URL endpoint in a virtual private cloud (VPC), or a Lambda function endpoint.&lt;/p&gt; &lt;important&gt; &lt;p&gt;If an Amazon Web Services resource is launched in a service VPC, and you want it to be accessible to all of an environment’s services with VPCs and routes, apply the &lt;code&gt;RefactorSpacesSecurityGroup&lt;/code&gt; to the resource. Alternatively, to add more cross-account constraints, apply your own security group.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createServiceTest() throws ApiException {
        String applicationIdentifier = null;
        String environmentIdentifier = null;
        CreateServiceRequest createServiceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateServiceResponse response = api.createService(applicationIdentifier, environmentIdentifier, createServiceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an Amazon Web Services Migration Hub Refactor Spaces application. Before you can delete an application, you must first delete any services or routes within the application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteApplicationTest() throws ApiException {
        String applicationIdentifier = null;
        String environmentIdentifier = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteApplicationResponse response = api.deleteApplication(applicationIdentifier, environmentIdentifier, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an Amazon Web Services Migration Hub Refactor Spaces environment. Before you can delete an environment, you must first delete any applications and services within the environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteEnvironmentTest() throws ApiException {
        String environmentIdentifier = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteEnvironmentResponse response = api.deleteEnvironment(environmentIdentifier, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes the resource policy set for the environment. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteResourcePolicyTest() throws ApiException {
        String identifier = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteResourcePolicy(identifier, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an Amazon Web Services Migration Hub Refactor Spaces route.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRouteTest() throws ApiException {
        String applicationIdentifier = null;
        String environmentIdentifier = null;
        String routeIdentifier = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteRouteResponse response = api.deleteRoute(applicationIdentifier, environmentIdentifier, routeIdentifier, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an Amazon Web Services Migration Hub Refactor Spaces service. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteServiceTest() throws ApiException {
        String applicationIdentifier = null;
        String environmentIdentifier = null;
        String serviceIdentifier = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteServiceResponse response = api.deleteService(applicationIdentifier, environmentIdentifier, serviceIdentifier, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets an Amazon Web Services Migration Hub Refactor Spaces application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getApplicationTest() throws ApiException {
        String applicationIdentifier = null;
        String environmentIdentifier = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetApplicationResponse response = api.getApplication(applicationIdentifier, environmentIdentifier, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets an Amazon Web Services Migration Hub Refactor Spaces environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEnvironmentTest() throws ApiException {
        String environmentIdentifier = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetEnvironmentResponse response = api.getEnvironment(environmentIdentifier, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets the resource-based permission policy that is set for the given environment. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getResourcePolicyTest() throws ApiException {
        String identifier = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetResourcePolicyResponse response = api.getResourcePolicy(identifier, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets an Amazon Web Services Migration Hub Refactor Spaces route.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRouteTest() throws ApiException {
        String applicationIdentifier = null;
        String environmentIdentifier = null;
        String routeIdentifier = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetRouteResponse response = api.getRoute(applicationIdentifier, environmentIdentifier, routeIdentifier, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets an Amazon Web Services Migration Hub Refactor Spaces service. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getServiceTest() throws ApiException {
        String applicationIdentifier = null;
        String environmentIdentifier = null;
        String serviceIdentifier = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetServiceResponse response = api.getService(applicationIdentifier, environmentIdentifier, serviceIdentifier, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Lists all the Amazon Web Services Migration Hub Refactor Spaces applications within an environment. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listApplicationsTest() throws ApiException {
        String environmentIdentifier = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListApplicationsResponse response = api.listApplications(environmentIdentifier, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Lists all Amazon Web Services Migration Hub Refactor Spaces service virtual private clouds (VPCs) that are part of the environment. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listEnvironmentVpcsTest() throws ApiException {
        String environmentIdentifier = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListEnvironmentVpcsResponse response = api.listEnvironmentVpcs(environmentIdentifier, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Lists Amazon Web Services Migration Hub Refactor Spaces environments owned by a caller account or shared with the caller account. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listEnvironmentsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListEnvironmentsResponse response = api.listEnvironments(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Lists all the Amazon Web Services Migration Hub Refactor Spaces routes within an application. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRoutesTest() throws ApiException {
        String applicationIdentifier = null;
        String environmentIdentifier = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListRoutesResponse response = api.listRoutes(applicationIdentifier, environmentIdentifier, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Lists all the Amazon Web Services Migration Hub Refactor Spaces services within an application. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listServicesTest() throws ApiException {
        String applicationIdentifier = null;
        String environmentIdentifier = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListServicesResponse response = api.listServices(applicationIdentifier, environmentIdentifier, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Lists the tags of a resource. The caller account must be the same as the resource’s &lt;code&gt;OwnerAccountId&lt;/code&gt;. Listing tags in other accounts is not supported. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForResourceTest() throws ApiException {
        String resourceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourceResponse response = api.listTagsForResource(resourceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Attaches a resource-based permission policy to the Amazon Web Services Migration Hub Refactor Spaces environment. The policy must contain the same actions and condition statements as the &lt;code&gt;arn:aws:ram::aws:permission/AWSRAMDefaultPermissionRefactorSpacesEnvironment&lt;/code&gt; permission in Resource Access Manager. The policy must not contain new lines or blank lines. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putResourcePolicyTest() throws ApiException {
        PutResourcePolicyRequest putResourcePolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.putResourcePolicy(putResourcePolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Removes the tags of a given resource. Tags are metadata which can be used to manage a resource. To tag a resource, the caller account must be the same as the resource’s &lt;code&gt;OwnerAccountId&lt;/code&gt;. Tagging resources in other accounts is not supported.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Amazon Web Services Migration Hub Refactor Spaces does not propagate tags to orchestrated resources, such as an environment’s transit gateway.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagResourceTest() throws ApiException {
        String resourceArn = null;
        TagResourceRequest tagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.tagResource(resourceArn, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Adds to or modifies the tags of the given resource. Tags are metadata which can be used to manage a resource. To untag a resource, the caller account must be the same as the resource’s &lt;code&gt;OwnerAccountId&lt;/code&gt;. Untagging resources across accounts is not supported. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagResourceTest() throws ApiException {
        String resourceArn = null;
        List<String> tagKeys = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.untagResource(resourceArn, tagKeys, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Updates an Amazon Web Services Migration Hub Refactor Spaces route. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateRouteTest() throws ApiException {
        String applicationIdentifier = null;
        String environmentIdentifier = null;
        String routeIdentifier = null;
        UpdateRouteRequest updateRouteRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateRouteResponse response = api.updateRoute(applicationIdentifier, environmentIdentifier, routeIdentifier, updateRouteRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
