/**
 * AWS Migration Hub Refactor Spaces
 * <p><fullname>Amazon Web Services Migration Hub Refactor Spaces</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Amazon Web Services Migration Hub Refactor Spaces (Refactor Spaces). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>To share Refactor Spaces environments with other Amazon Web Services accounts or with Organizations and their OUs, use Resource Access Manager's <code>CreateResourceShare</code> API. See <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> in the <i>Amazon Web Services RAM API Reference</i>.</p></p>
 *
 * The version of the OpenAPI document: 2021-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsMigrationHubRefactorSpaces);
  }
}(this, function(expect, AwsMigrationHubRefactorSpaces) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsMigrationHubRefactorSpaces.CreateRouteResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateRouteResponse', function() {
    it('should create an instance of CreateRouteResponse', function() {
      // uncomment below and update the code to test CreateRouteResponse
      //var instance = new AwsMigrationHubRefactorSpaces.CreateRouteResponse();
      //expect(instance).to.be.a(AwsMigrationHubRefactorSpaces.CreateRouteResponse);
    });

    it('should have the property applicationId (base name: "ApplicationId")', function() {
      // uncomment below and update the code to test the property applicationId
      //var instance = new AwsMigrationHubRefactorSpaces.CreateRouteResponse();
      //expect(instance).to.be();
    });

    it('should have the property arn (base name: "Arn")', function() {
      // uncomment below and update the code to test the property arn
      //var instance = new AwsMigrationHubRefactorSpaces.CreateRouteResponse();
      //expect(instance).to.be();
    });

    it('should have the property createdByAccountId (base name: "CreatedByAccountId")', function() {
      // uncomment below and update the code to test the property createdByAccountId
      //var instance = new AwsMigrationHubRefactorSpaces.CreateRouteResponse();
      //expect(instance).to.be();
    });

    it('should have the property createdTime (base name: "CreatedTime")', function() {
      // uncomment below and update the code to test the property createdTime
      //var instance = new AwsMigrationHubRefactorSpaces.CreateRouteResponse();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdatedTime (base name: "LastUpdatedTime")', function() {
      // uncomment below and update the code to test the property lastUpdatedTime
      //var instance = new AwsMigrationHubRefactorSpaces.CreateRouteResponse();
      //expect(instance).to.be();
    });

    it('should have the property ownerAccountId (base name: "OwnerAccountId")', function() {
      // uncomment below and update the code to test the property ownerAccountId
      //var instance = new AwsMigrationHubRefactorSpaces.CreateRouteResponse();
      //expect(instance).to.be();
    });

    it('should have the property routeId (base name: "RouteId")', function() {
      // uncomment below and update the code to test the property routeId
      //var instance = new AwsMigrationHubRefactorSpaces.CreateRouteResponse();
      //expect(instance).to.be();
    });

    it('should have the property routeType (base name: "RouteType")', function() {
      // uncomment below and update the code to test the property routeType
      //var instance = new AwsMigrationHubRefactorSpaces.CreateRouteResponse();
      //expect(instance).to.be();
    });

    it('should have the property serviceId (base name: "ServiceId")', function() {
      // uncomment below and update the code to test the property serviceId
      //var instance = new AwsMigrationHubRefactorSpaces.CreateRouteResponse();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "State")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new AwsMigrationHubRefactorSpaces.CreateRouteResponse();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AwsMigrationHubRefactorSpaces.CreateRouteResponse();
      //expect(instance).to.be();
    });

    it('should have the property uriPathRoute (base name: "UriPathRoute")', function() {
      // uncomment below and update the code to test the property uriPathRoute
      //var instance = new AwsMigrationHubRefactorSpaces.CreateRouteResponse();
      //expect(instance).to.be();
    });

  });

}));
