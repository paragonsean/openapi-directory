/**
 * AWS Migration Hub Refactor Spaces
 * <p><fullname>Amazon Web Services Migration Hub Refactor Spaces</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Amazon Web Services Migration Hub Refactor Spaces (Refactor Spaces). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>To share Refactor Spaces environments with other Amazon Web Services accounts or with Organizations and their OUs, use Resource Access Manager's <code>CreateResourceShare</code> API. See <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> in the <i>Amazon Web Services RAM API Reference</i>.</p></p>
 *
 * The version of the OpenAPI document: 2021-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsMigrationHubRefactorSpaces);
  }
}(this, function(expect, AwsMigrationHubRefactorSpaces) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsMigrationHubRefactorSpaces.DeleteEnvironmentResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DeleteEnvironmentResponse', function() {
    it('should create an instance of DeleteEnvironmentResponse', function() {
      // uncomment below and update the code to test DeleteEnvironmentResponse
      //var instance = new AwsMigrationHubRefactorSpaces.DeleteEnvironmentResponse();
      //expect(instance).to.be.a(AwsMigrationHubRefactorSpaces.DeleteEnvironmentResponse);
    });

    it('should have the property arn (base name: "Arn")', function() {
      // uncomment below and update the code to test the property arn
      //var instance = new AwsMigrationHubRefactorSpaces.DeleteEnvironmentResponse();
      //expect(instance).to.be();
    });

    it('should have the property environmentId (base name: "EnvironmentId")', function() {
      // uncomment below and update the code to test the property environmentId
      //var instance = new AwsMigrationHubRefactorSpaces.DeleteEnvironmentResponse();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdatedTime (base name: "LastUpdatedTime")', function() {
      // uncomment below and update the code to test the property lastUpdatedTime
      //var instance = new AwsMigrationHubRefactorSpaces.DeleteEnvironmentResponse();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AwsMigrationHubRefactorSpaces.DeleteEnvironmentResponse();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "State")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new AwsMigrationHubRefactorSpaces.DeleteEnvironmentResponse();
      //expect(instance).to.be();
    });

  });

}));
