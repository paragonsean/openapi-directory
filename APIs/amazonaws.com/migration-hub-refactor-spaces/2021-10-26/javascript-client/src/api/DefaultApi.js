/**
 * AWS Migration Hub Refactor Spaces
 * <p><fullname>Amazon Web Services Migration Hub Refactor Spaces</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Amazon Web Services Migration Hub Refactor Spaces (Refactor Spaces). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>To share Refactor Spaces environments with other Amazon Web Services accounts or with Organizations and their OUs, use Resource Access Manager's <code>CreateResourceShare</code> API. See <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> in the <i>Amazon Web Services RAM API Reference</i>.</p></p>
 *
 * The version of the OpenAPI document: 2021-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateApplicationRequest from '../model/CreateApplicationRequest';
import CreateApplicationResponse from '../model/CreateApplicationResponse';
import CreateEnvironmentRequest from '../model/CreateEnvironmentRequest';
import CreateEnvironmentResponse from '../model/CreateEnvironmentResponse';
import CreateRouteRequest from '../model/CreateRouteRequest';
import CreateRouteResponse from '../model/CreateRouteResponse';
import CreateServiceRequest from '../model/CreateServiceRequest';
import CreateServiceResponse from '../model/CreateServiceResponse';
import DeleteApplicationResponse from '../model/DeleteApplicationResponse';
import DeleteEnvironmentResponse from '../model/DeleteEnvironmentResponse';
import DeleteRouteResponse from '../model/DeleteRouteResponse';
import DeleteServiceResponse from '../model/DeleteServiceResponse';
import GetApplicationResponse from '../model/GetApplicationResponse';
import GetEnvironmentResponse from '../model/GetEnvironmentResponse';
import GetResourcePolicyResponse from '../model/GetResourcePolicyResponse';
import GetRouteResponse from '../model/GetRouteResponse';
import GetServiceResponse from '../model/GetServiceResponse';
import ListApplicationsResponse from '../model/ListApplicationsResponse';
import ListEnvironmentVpcsResponse from '../model/ListEnvironmentVpcsResponse';
import ListEnvironmentsResponse from '../model/ListEnvironmentsResponse';
import ListRoutesResponse from '../model/ListRoutesResponse';
import ListServicesResponse from '../model/ListServicesResponse';
import ListTagsForResourceResponse from '../model/ListTagsForResourceResponse';
import PutResourcePolicyRequest from '../model/PutResourcePolicyRequest';
import TagResourceRequest from '../model/TagResourceRequest';
import UpdateRouteRequest from '../model/UpdateRouteRequest';
import UpdateRouteResponse from '../model/UpdateRouteResponse';

/**
* Default service.
* @module api/DefaultApi
* @version 2021-10-26
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createApplication operation.
     * @callback module:api/DefaultApi~createApplicationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateApplicationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates an Amazon Web Services Migration Hub Refactor Spaces application. The account that owns the environment also owns the applications created inside the environment, regardless of the account that creates the application. Refactor Spaces provisions an Amazon API Gateway, API Gateway VPC link, and Network Load Balancer for the application proxy inside your account.</p> <p>In environments created with a <a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/APIReference/API_CreateEnvironment.html#migrationhubrefactorspaces-CreateEnvironment-request-NetworkFabricType\">CreateEnvironment:NetworkFabricType</a> of <code>NONE</code> you need to configure <a href=\"https://docs.aws.amazon.com/whitepapers/latest/aws-vpc-connectivity-options/amazon-vpc-to-amazon-vpc-connectivity-options.html\"> VPC to VPC connectivity</a> between your service VPC and the application proxy VPC to route traffic through the application proxy to a service with a private URL endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/userguide/getting-started-create-application.html\"> Create an application</a> in the <i>Refactor Spaces User Guide</i>. </p>
     * @param {String} environmentIdentifier The unique identifier of the environment.
     * @param {module:model/CreateApplicationRequest} createApplicationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createApplicationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateApplicationResponse}
     */
    createApplication(environmentIdentifier, createApplicationRequest, opts, callback) {
      opts = opts || {};
      let postBody = createApplicationRequest;
      // verify the required parameter 'environmentIdentifier' is set
      if (environmentIdentifier === undefined || environmentIdentifier === null) {
        throw new Error("Missing the required parameter 'environmentIdentifier' when calling createApplication");
      }
      // verify the required parameter 'createApplicationRequest' is set
      if (createApplicationRequest === undefined || createApplicationRequest === null) {
        throw new Error("Missing the required parameter 'createApplicationRequest' when calling createApplication");
      }

      let pathParams = {
        'EnvironmentIdentifier': environmentIdentifier
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateApplicationResponse;
      return this.apiClient.callApi(
        '/environments/{EnvironmentIdentifier}/applications', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createEnvironment operation.
     * @callback module:api/DefaultApi~createEnvironmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateEnvironmentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates an Amazon Web Services Migration Hub Refactor Spaces environment. The caller owns the environment resource, and all Refactor Spaces applications, services, and routes created within the environment. They are referred to as the <i>environment owner</i>. The environment owner has cross-account visibility and control of Refactor Spaces resources that are added to the environment by other accounts that the environment is shared with.</p> <p>When creating an environment with a <a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/APIReference/API_CreateEnvironment.html#migrationhubrefactorspaces-CreateEnvironment-request-NetworkFabricType\">CreateEnvironment:NetworkFabricType</a> of <code>TRANSIT_GATEWAY</code>, Refactor Spaces provisions a transit gateway to enable services in VPCs to communicate directly across accounts. If <a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/APIReference/API_CreateEnvironment.html#migrationhubrefactorspaces-CreateEnvironment-request-NetworkFabricType\">CreateEnvironment:NetworkFabricType</a> is <code>NONE</code>, Refactor Spaces does not create a transit gateway and you must use your network infrastructure to route traffic to services with private URL endpoints.</p>
     * @param {module:model/CreateEnvironmentRequest} createEnvironmentRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createEnvironmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateEnvironmentResponse}
     */
    createEnvironment(createEnvironmentRequest, opts, callback) {
      opts = opts || {};
      let postBody = createEnvironmentRequest;
      // verify the required parameter 'createEnvironmentRequest' is set
      if (createEnvironmentRequest === undefined || createEnvironmentRequest === null) {
        throw new Error("Missing the required parameter 'createEnvironmentRequest' when calling createEnvironment");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateEnvironmentResponse;
      return this.apiClient.callApi(
        '/environments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createRoute operation.
     * @callback module:api/DefaultApi~createRouteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateRouteResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates an Amazon Web Services Migration Hub Refactor Spaces route. The account owner of the service resource is always the environment owner, regardless of which account creates the route. Routes target a service in the application. If an application does not have any routes, then the first route must be created as a <code>DEFAULT</code> <code>RouteType</code>.</p> <p>When created, the default route defaults to an active state so state is not a required input. However, like all other state values the state of the default route can be updated after creation, but only when all other routes are also inactive. Conversely, no route can be active without the default route also being active.</p> <p>When you create a route, Refactor Spaces configures the Amazon API Gateway to send traffic to the target service as follows:</p> <ul> <li> <p> <b>URL Endpoints</b> </p> <p>If the service has a URL endpoint, and the endpoint resolves to a private IP address, Refactor Spaces routes traffic using the API Gateway VPC link. If a service endpoint resolves to a public IP address, Refactor Spaces routes traffic over the public internet. Services can have HTTP or HTTPS URL endpoints. For HTTPS URLs, publicly-signed certificates are supported. Private Certificate Authorities (CAs) are permitted only if the CA's domain is also publicly resolvable. </p> <p>Refactor Spaces automatically resolves the public Domain Name System (DNS) names that are set in <code>CreateService:UrlEndpoint </code>when you create a service. The DNS names resolve when the DNS time-to-live (TTL) expires, or every 60 seconds for TTLs less than 60 seconds. This periodic DNS resolution ensures that the route configuration remains up-to-date. </p> <p/> <p> <b>One-time health check</b> </p> <p>A one-time health check is performed on the service when either the route is updated from inactive to active, or when it is created with an active state. If the health check fails, the route transitions the route state to <code>FAILED</code>, an error code of <code>SERVICE_ENDPOINT_HEALTH_CHECK_FAILURE</code> is provided, and no traffic is sent to the service.</p> <p>For private URLs, a target group is created on the Network Load Balancer and the load balancer target group runs default target health checks. By default, the health check is run against the service endpoint URL. Optionally, the health check can be performed against a different protocol, port, and/or path using the <a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/APIReference/API_CreateService.html#migrationhubrefactorspaces-CreateService-request-UrlEndpoint\">CreateService:UrlEndpoint</a> parameter. All other health check settings for the load balancer use the default values described in the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health-checks.html\">Health checks for your target groups</a> in the <i>Elastic Load Balancing guide</i>. The health check is considered successful if at least one target within the target group transitions to a healthy state.</p> <p/> </li> <li> <p> <b>Lambda function endpoints</b> </p> <p>If the service has an Lambda function endpoint, then Refactor Spaces configures the Lambda function's resource policy to allow the application's API Gateway to invoke the function.</p> <p>The Lambda function state is checked. If the function is not active, the function configuration is updated so that Lambda resources are provisioned. If the Lambda state is <code>Failed</code>, then the route creation fails. For more information, see the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/API_GetFunctionConfiguration.html#SSS-GetFunctionConfiguration-response-State\">GetFunctionConfiguration's State response parameter</a> in the <i>Lambda Developer Guide</i>.</p> <p>A check is performed to determine that a Lambda function with the specified ARN exists. If it does not exist, the health check fails. For public URLs, a connection is opened to the public endpoint. If the URL is not reachable, the health check fails. </p> </li> </ul> <p> <b>Environments without a network bridge</b> </p> <p>When you create environments without a network bridge (<a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/APIReference/API_CreateEnvironment.html#migrationhubrefactorspaces-CreateEnvironment-request-NetworkFabricType\">CreateEnvironment:NetworkFabricType</a> is <code>NONE)</code> and you use your own networking infrastructure, you need to configure <a href=\"https://docs.aws.amazon.com/whitepapers/latest/aws-vpc-connectivity-options/amazon-vpc-to-amazon-vpc-connectivity-options.html\">VPC to VPC connectivity</a> between your network and the application proxy VPC. Route creation from the application proxy to service endpoints will fail if your network is not configured to connect to the application proxy VPC. For more information, see <a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/userguide/getting-started-create-role.html\"> Create a route</a> in the <i>Refactor Spaces User Guide</i>.</p> <p/>
     * @param {String} applicationIdentifier The ID of the application within which the route is being created.
     * @param {String} environmentIdentifier The ID of the environment in which the route is created.
     * @param {module:model/CreateRouteRequest} createRouteRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createRouteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateRouteResponse}
     */
    createRoute(applicationIdentifier, environmentIdentifier, createRouteRequest, opts, callback) {
      opts = opts || {};
      let postBody = createRouteRequest;
      // verify the required parameter 'applicationIdentifier' is set
      if (applicationIdentifier === undefined || applicationIdentifier === null) {
        throw new Error("Missing the required parameter 'applicationIdentifier' when calling createRoute");
      }
      // verify the required parameter 'environmentIdentifier' is set
      if (environmentIdentifier === undefined || environmentIdentifier === null) {
        throw new Error("Missing the required parameter 'environmentIdentifier' when calling createRoute");
      }
      // verify the required parameter 'createRouteRequest' is set
      if (createRouteRequest === undefined || createRouteRequest === null) {
        throw new Error("Missing the required parameter 'createRouteRequest' when calling createRoute");
      }

      let pathParams = {
        'ApplicationIdentifier': applicationIdentifier,
        'EnvironmentIdentifier': environmentIdentifier
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateRouteResponse;
      return this.apiClient.callApi(
        '/environments/{EnvironmentIdentifier}/applications/{ApplicationIdentifier}/routes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createService operation.
     * @callback module:api/DefaultApi~createServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateServiceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates an Amazon Web Services Migration Hub Refactor Spaces service. The account owner of the service is always the environment owner, regardless of which account in the environment creates the service. Services have either a URL endpoint in a virtual private cloud (VPC), or a Lambda function endpoint.</p> <important> <p>If an Amazon Web Services resource is launched in a service VPC, and you want it to be accessible to all of an environment’s services with VPCs and routes, apply the <code>RefactorSpacesSecurityGroup</code> to the resource. Alternatively, to add more cross-account constraints, apply your own security group.</p> </important>
     * @param {String} applicationIdentifier The ID of the application which the service is created.
     * @param {String} environmentIdentifier The ID of the environment in which the service is created.
     * @param {module:model/CreateServiceRequest} createServiceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateServiceResponse}
     */
    createService(applicationIdentifier, environmentIdentifier, createServiceRequest, opts, callback) {
      opts = opts || {};
      let postBody = createServiceRequest;
      // verify the required parameter 'applicationIdentifier' is set
      if (applicationIdentifier === undefined || applicationIdentifier === null) {
        throw new Error("Missing the required parameter 'applicationIdentifier' when calling createService");
      }
      // verify the required parameter 'environmentIdentifier' is set
      if (environmentIdentifier === undefined || environmentIdentifier === null) {
        throw new Error("Missing the required parameter 'environmentIdentifier' when calling createService");
      }
      // verify the required parameter 'createServiceRequest' is set
      if (createServiceRequest === undefined || createServiceRequest === null) {
        throw new Error("Missing the required parameter 'createServiceRequest' when calling createService");
      }

      let pathParams = {
        'ApplicationIdentifier': applicationIdentifier,
        'EnvironmentIdentifier': environmentIdentifier
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateServiceResponse;
      return this.apiClient.callApi(
        '/environments/{EnvironmentIdentifier}/applications/{ApplicationIdentifier}/services', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteApplication operation.
     * @callback module:api/DefaultApi~deleteApplicationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteApplicationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an Amazon Web Services Migration Hub Refactor Spaces application. Before you can delete an application, you must first delete any services or routes within the application.
     * @param {String} applicationIdentifier The ID of the application.
     * @param {String} environmentIdentifier The ID of the environment. 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteApplicationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteApplicationResponse}
     */
    deleteApplication(applicationIdentifier, environmentIdentifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'applicationIdentifier' is set
      if (applicationIdentifier === undefined || applicationIdentifier === null) {
        throw new Error("Missing the required parameter 'applicationIdentifier' when calling deleteApplication");
      }
      // verify the required parameter 'environmentIdentifier' is set
      if (environmentIdentifier === undefined || environmentIdentifier === null) {
        throw new Error("Missing the required parameter 'environmentIdentifier' when calling deleteApplication");
      }

      let pathParams = {
        'ApplicationIdentifier': applicationIdentifier,
        'EnvironmentIdentifier': environmentIdentifier
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeleteApplicationResponse;
      return this.apiClient.callApi(
        '/environments/{EnvironmentIdentifier}/applications/{ApplicationIdentifier}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteEnvironment operation.
     * @callback module:api/DefaultApi~deleteEnvironmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteEnvironmentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an Amazon Web Services Migration Hub Refactor Spaces environment. Before you can delete an environment, you must first delete any applications and services within the environment.
     * @param {String} environmentIdentifier The ID of the environment. 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteEnvironmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteEnvironmentResponse}
     */
    deleteEnvironment(environmentIdentifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'environmentIdentifier' is set
      if (environmentIdentifier === undefined || environmentIdentifier === null) {
        throw new Error("Missing the required parameter 'environmentIdentifier' when calling deleteEnvironment");
      }

      let pathParams = {
        'EnvironmentIdentifier': environmentIdentifier
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeleteEnvironmentResponse;
      return this.apiClient.callApi(
        '/environments/{EnvironmentIdentifier}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteResourcePolicy operation.
     * @callback module:api/DefaultApi~deleteResourcePolicyCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the resource policy set for the environment. 
     * @param {String} identifier Amazon Resource Name (ARN) of the resource associated with the policy. 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteResourcePolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteResourcePolicy(identifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling deleteResourcePolicy");
      }

      let pathParams = {
        'Identifier': identifier
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/resourcepolicy/{Identifier}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteRoute operation.
     * @callback module:api/DefaultApi~deleteRouteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteRouteResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an Amazon Web Services Migration Hub Refactor Spaces route.
     * @param {String} applicationIdentifier The ID of the application to delete the route from.
     * @param {String} environmentIdentifier The ID of the environment to delete the route from.
     * @param {String} routeIdentifier The ID of the route to delete.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteRouteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteRouteResponse}
     */
    deleteRoute(applicationIdentifier, environmentIdentifier, routeIdentifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'applicationIdentifier' is set
      if (applicationIdentifier === undefined || applicationIdentifier === null) {
        throw new Error("Missing the required parameter 'applicationIdentifier' when calling deleteRoute");
      }
      // verify the required parameter 'environmentIdentifier' is set
      if (environmentIdentifier === undefined || environmentIdentifier === null) {
        throw new Error("Missing the required parameter 'environmentIdentifier' when calling deleteRoute");
      }
      // verify the required parameter 'routeIdentifier' is set
      if (routeIdentifier === undefined || routeIdentifier === null) {
        throw new Error("Missing the required parameter 'routeIdentifier' when calling deleteRoute");
      }

      let pathParams = {
        'ApplicationIdentifier': applicationIdentifier,
        'EnvironmentIdentifier': environmentIdentifier,
        'RouteIdentifier': routeIdentifier
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeleteRouteResponse;
      return this.apiClient.callApi(
        '/environments/{EnvironmentIdentifier}/applications/{ApplicationIdentifier}/routes/{RouteIdentifier}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteService operation.
     * @callback module:api/DefaultApi~deleteServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteServiceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an Amazon Web Services Migration Hub Refactor Spaces service. 
     * @param {String} applicationIdentifier <p>Deletes a Refactor Spaces service.</p> <note> <p>The <code>RefactorSpacesSecurityGroup</code> security group must be removed from all Amazon Web Services resources in the virtual private cloud (VPC) prior to deleting a service with a URL endpoint in a VPC.</p> </note>
     * @param {String} environmentIdentifier The ID of the environment that the service is in.
     * @param {String} serviceIdentifier The ID of the service to delete.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteServiceResponse}
     */
    deleteService(applicationIdentifier, environmentIdentifier, serviceIdentifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'applicationIdentifier' is set
      if (applicationIdentifier === undefined || applicationIdentifier === null) {
        throw new Error("Missing the required parameter 'applicationIdentifier' when calling deleteService");
      }
      // verify the required parameter 'environmentIdentifier' is set
      if (environmentIdentifier === undefined || environmentIdentifier === null) {
        throw new Error("Missing the required parameter 'environmentIdentifier' when calling deleteService");
      }
      // verify the required parameter 'serviceIdentifier' is set
      if (serviceIdentifier === undefined || serviceIdentifier === null) {
        throw new Error("Missing the required parameter 'serviceIdentifier' when calling deleteService");
      }

      let pathParams = {
        'ApplicationIdentifier': applicationIdentifier,
        'EnvironmentIdentifier': environmentIdentifier,
        'ServiceIdentifier': serviceIdentifier
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeleteServiceResponse;
      return this.apiClient.callApi(
        '/environments/{EnvironmentIdentifier}/applications/{ApplicationIdentifier}/services/{ServiceIdentifier}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getApplication operation.
     * @callback module:api/DefaultApi~getApplicationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetApplicationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets an Amazon Web Services Migration Hub Refactor Spaces application.
     * @param {String} applicationIdentifier The ID of the application.
     * @param {String} environmentIdentifier The ID of the environment. 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getApplicationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetApplicationResponse}
     */
    getApplication(applicationIdentifier, environmentIdentifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'applicationIdentifier' is set
      if (applicationIdentifier === undefined || applicationIdentifier === null) {
        throw new Error("Missing the required parameter 'applicationIdentifier' when calling getApplication");
      }
      // verify the required parameter 'environmentIdentifier' is set
      if (environmentIdentifier === undefined || environmentIdentifier === null) {
        throw new Error("Missing the required parameter 'environmentIdentifier' when calling getApplication");
      }

      let pathParams = {
        'ApplicationIdentifier': applicationIdentifier,
        'EnvironmentIdentifier': environmentIdentifier
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetApplicationResponse;
      return this.apiClient.callApi(
        '/environments/{EnvironmentIdentifier}/applications/{ApplicationIdentifier}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getEnvironment operation.
     * @callback module:api/DefaultApi~getEnvironmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetEnvironmentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets an Amazon Web Services Migration Hub Refactor Spaces environment.
     * @param {String} environmentIdentifier The ID of the environment.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getEnvironmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetEnvironmentResponse}
     */
    getEnvironment(environmentIdentifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'environmentIdentifier' is set
      if (environmentIdentifier === undefined || environmentIdentifier === null) {
        throw new Error("Missing the required parameter 'environmentIdentifier' when calling getEnvironment");
      }

      let pathParams = {
        'EnvironmentIdentifier': environmentIdentifier
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetEnvironmentResponse;
      return this.apiClient.callApi(
        '/environments/{EnvironmentIdentifier}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getResourcePolicy operation.
     * @callback module:api/DefaultApi~getResourcePolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetResourcePolicyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the resource-based permission policy that is set for the given environment. 
     * @param {String} identifier The Amazon Resource Name (ARN) of the resource associated with the policy. 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getResourcePolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetResourcePolicyResponse}
     */
    getResourcePolicy(identifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling getResourcePolicy");
      }

      let pathParams = {
        'Identifier': identifier
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetResourcePolicyResponse;
      return this.apiClient.callApi(
        '/resourcepolicy/{Identifier}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRoute operation.
     * @callback module:api/DefaultApi~getRouteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetRouteResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets an Amazon Web Services Migration Hub Refactor Spaces route.
     * @param {String} applicationIdentifier The ID of the application. 
     * @param {String} environmentIdentifier The ID of the environment.
     * @param {String} routeIdentifier The ID of the route.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getRouteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetRouteResponse}
     */
    getRoute(applicationIdentifier, environmentIdentifier, routeIdentifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'applicationIdentifier' is set
      if (applicationIdentifier === undefined || applicationIdentifier === null) {
        throw new Error("Missing the required parameter 'applicationIdentifier' when calling getRoute");
      }
      // verify the required parameter 'environmentIdentifier' is set
      if (environmentIdentifier === undefined || environmentIdentifier === null) {
        throw new Error("Missing the required parameter 'environmentIdentifier' when calling getRoute");
      }
      // verify the required parameter 'routeIdentifier' is set
      if (routeIdentifier === undefined || routeIdentifier === null) {
        throw new Error("Missing the required parameter 'routeIdentifier' when calling getRoute");
      }

      let pathParams = {
        'ApplicationIdentifier': applicationIdentifier,
        'EnvironmentIdentifier': environmentIdentifier,
        'RouteIdentifier': routeIdentifier
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetRouteResponse;
      return this.apiClient.callApi(
        '/environments/{EnvironmentIdentifier}/applications/{ApplicationIdentifier}/routes/{RouteIdentifier}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getService operation.
     * @callback module:api/DefaultApi~getServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetServiceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets an Amazon Web Services Migration Hub Refactor Spaces service. 
     * @param {String} applicationIdentifier The ID of the application.
     * @param {String} environmentIdentifier The ID of the environment.
     * @param {String} serviceIdentifier The ID of the service.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetServiceResponse}
     */
    getService(applicationIdentifier, environmentIdentifier, serviceIdentifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'applicationIdentifier' is set
      if (applicationIdentifier === undefined || applicationIdentifier === null) {
        throw new Error("Missing the required parameter 'applicationIdentifier' when calling getService");
      }
      // verify the required parameter 'environmentIdentifier' is set
      if (environmentIdentifier === undefined || environmentIdentifier === null) {
        throw new Error("Missing the required parameter 'environmentIdentifier' when calling getService");
      }
      // verify the required parameter 'serviceIdentifier' is set
      if (serviceIdentifier === undefined || serviceIdentifier === null) {
        throw new Error("Missing the required parameter 'serviceIdentifier' when calling getService");
      }

      let pathParams = {
        'ApplicationIdentifier': applicationIdentifier,
        'EnvironmentIdentifier': environmentIdentifier,
        'ServiceIdentifier': serviceIdentifier
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetServiceResponse;
      return this.apiClient.callApi(
        '/environments/{EnvironmentIdentifier}/applications/{ApplicationIdentifier}/services/{ServiceIdentifier}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listApplications operation.
     * @callback module:api/DefaultApi~listApplicationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListApplicationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the Amazon Web Services Migration Hub Refactor Spaces applications within an environment. 
     * @param {String} environmentIdentifier The ID of the environment. 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
     * @param {String} [nextToken] The token for the next page of results.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listApplicationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListApplicationsResponse}
     */
    listApplications(environmentIdentifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'environmentIdentifier' is set
      if (environmentIdentifier === undefined || environmentIdentifier === null) {
        throw new Error("Missing the required parameter 'environmentIdentifier' when calling listApplications");
      }

      let pathParams = {
        'EnvironmentIdentifier': environmentIdentifier
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListApplicationsResponse;
      return this.apiClient.callApi(
        '/environments/{EnvironmentIdentifier}/applications', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listEnvironmentVpcs operation.
     * @callback module:api/DefaultApi~listEnvironmentVpcsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListEnvironmentVpcsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all Amazon Web Services Migration Hub Refactor Spaces service virtual private clouds (VPCs) that are part of the environment. 
     * @param {String} environmentIdentifier The ID of the environment. 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
     * @param {String} [nextToken] The token for the next page of results.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listEnvironmentVpcsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListEnvironmentVpcsResponse}
     */
    listEnvironmentVpcs(environmentIdentifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'environmentIdentifier' is set
      if (environmentIdentifier === undefined || environmentIdentifier === null) {
        throw new Error("Missing the required parameter 'environmentIdentifier' when calling listEnvironmentVpcs");
      }

      let pathParams = {
        'EnvironmentIdentifier': environmentIdentifier
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListEnvironmentVpcsResponse;
      return this.apiClient.callApi(
        '/environments/{EnvironmentIdentifier}/vpcs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listEnvironments operation.
     * @callback module:api/DefaultApi~listEnvironmentsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListEnvironmentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Amazon Web Services Migration Hub Refactor Spaces environments owned by a caller account or shared with the caller account. 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
     * @param {String} [nextToken] The token for the next page of results.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listEnvironmentsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListEnvironmentsResponse}
     */
    listEnvironments(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListEnvironmentsResponse;
      return this.apiClient.callApi(
        '/environments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listRoutes operation.
     * @callback module:api/DefaultApi~listRoutesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListRoutesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the Amazon Web Services Migration Hub Refactor Spaces routes within an application. 
     * @param {String} applicationIdentifier The ID of the application. 
     * @param {String} environmentIdentifier The ID of the environment. 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
     * @param {String} [nextToken] The token for the next page of results.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listRoutesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListRoutesResponse}
     */
    listRoutes(applicationIdentifier, environmentIdentifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'applicationIdentifier' is set
      if (applicationIdentifier === undefined || applicationIdentifier === null) {
        throw new Error("Missing the required parameter 'applicationIdentifier' when calling listRoutes");
      }
      // verify the required parameter 'environmentIdentifier' is set
      if (environmentIdentifier === undefined || environmentIdentifier === null) {
        throw new Error("Missing the required parameter 'environmentIdentifier' when calling listRoutes");
      }

      let pathParams = {
        'ApplicationIdentifier': applicationIdentifier,
        'EnvironmentIdentifier': environmentIdentifier
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListRoutesResponse;
      return this.apiClient.callApi(
        '/environments/{EnvironmentIdentifier}/applications/{ApplicationIdentifier}/routes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listServices operation.
     * @callback module:api/DefaultApi~listServicesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListServicesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the Amazon Web Services Migration Hub Refactor Spaces services within an application. 
     * @param {String} applicationIdentifier The ID of the application. 
     * @param {String} environmentIdentifier The ID of the environment. 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
     * @param {String} [nextToken] The token for the next page of results.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listServicesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListServicesResponse}
     */
    listServices(applicationIdentifier, environmentIdentifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'applicationIdentifier' is set
      if (applicationIdentifier === undefined || applicationIdentifier === null) {
        throw new Error("Missing the required parameter 'applicationIdentifier' when calling listServices");
      }
      // verify the required parameter 'environmentIdentifier' is set
      if (environmentIdentifier === undefined || environmentIdentifier === null) {
        throw new Error("Missing the required parameter 'environmentIdentifier' when calling listServices");
      }

      let pathParams = {
        'ApplicationIdentifier': applicationIdentifier,
        'EnvironmentIdentifier': environmentIdentifier
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListServicesResponse;
      return this.apiClient.callApi(
        '/environments/{EnvironmentIdentifier}/applications/{ApplicationIdentifier}/services', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listTagsForResource operation.
     * @callback module:api/DefaultApi~listTagsForResourceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTagsForResourceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the tags of a resource. The caller account must be the same as the resource’s <code>OwnerAccountId</code>. Listing tags in other accounts is not supported. 
     * @param {String} resourceArn The Amazon Resource Name (ARN) of the resource. 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~listTagsForResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTagsForResourceResponse}
     */
    listTagsForResource(resourceArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceArn' is set
      if (resourceArn === undefined || resourceArn === null) {
        throw new Error("Missing the required parameter 'resourceArn' when calling listTagsForResource");
      }

      let pathParams = {
        'ResourceArn': resourceArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListTagsForResourceResponse;
      return this.apiClient.callApi(
        '/tags/{ResourceArn}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putResourcePolicy operation.
     * @callback module:api/DefaultApi~putResourcePolicyCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Attaches a resource-based permission policy to the Amazon Web Services Migration Hub Refactor Spaces environment. The policy must contain the same actions and condition statements as the <code>arn:aws:ram::aws:permission/AWSRAMDefaultPermissionRefactorSpacesEnvironment</code> permission in Resource Access Manager. The policy must not contain new lines or blank lines. 
     * @param {module:model/PutResourcePolicyRequest} putResourcePolicyRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putResourcePolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    putResourcePolicy(putResourcePolicyRequest, opts, callback) {
      opts = opts || {};
      let postBody = putResourcePolicyRequest;
      // verify the required parameter 'putResourcePolicyRequest' is set
      if (putResourcePolicyRequest === undefined || putResourcePolicyRequest === null) {
        throw new Error("Missing the required parameter 'putResourcePolicyRequest' when calling putResourcePolicy");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/resourcepolicy', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tagResource operation.
     * @callback module:api/DefaultApi~tagResourceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Removes the tags of a given resource. Tags are metadata which can be used to manage a resource. To tag a resource, the caller account must be the same as the resource’s <code>OwnerAccountId</code>. Tagging resources in other accounts is not supported.</p> <note> <p>Amazon Web Services Migration Hub Refactor Spaces does not propagate tags to orchestrated resources, such as an environment’s transit gateway.</p> </note>
     * @param {String} resourceArn The Amazon Resource Name (ARN) of the resource.
     * @param {module:model/TagResourceRequest} tagResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~tagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    tagResource(resourceArn, tagResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = tagResourceRequest;
      // verify the required parameter 'resourceArn' is set
      if (resourceArn === undefined || resourceArn === null) {
        throw new Error("Missing the required parameter 'resourceArn' when calling tagResource");
      }
      // verify the required parameter 'tagResourceRequest' is set
      if (tagResourceRequest === undefined || tagResourceRequest === null) {
        throw new Error("Missing the required parameter 'tagResourceRequest' when calling tagResource");
      }

      let pathParams = {
        'ResourceArn': resourceArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/tags/{ResourceArn}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the untagResource operation.
     * @callback module:api/DefaultApi~untagResourceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds to or modifies the tags of the given resource. Tags are metadata which can be used to manage a resource. To untag a resource, the caller account must be the same as the resource’s <code>OwnerAccountId</code>. Untagging resources across accounts is not supported. 
     * @param {String} resourceArn The Amazon Resource Name (ARN) of the resource. 
     * @param {Array.<String>} tagKeys The list of keys of the tags to be removed from the resource. 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~untagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    untagResource(resourceArn, tagKeys, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceArn' is set
      if (resourceArn === undefined || resourceArn === null) {
        throw new Error("Missing the required parameter 'resourceArn' when calling untagResource");
      }
      // verify the required parameter 'tagKeys' is set
      if (tagKeys === undefined || tagKeys === null) {
        throw new Error("Missing the required parameter 'tagKeys' when calling untagResource");
      }

      let pathParams = {
        'ResourceArn': resourceArn
      };
      let queryParams = {
        'tagKeys': this.apiClient.buildCollectionParam(tagKeys, 'multi')
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/tags/{ResourceArn}#tagKeys', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateRoute operation.
     * @callback module:api/DefaultApi~updateRouteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateRouteResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     *  Updates an Amazon Web Services Migration Hub Refactor Spaces route. 
     * @param {String} applicationIdentifier  The ID of the application within which the route is being updated. 
     * @param {String} environmentIdentifier  The ID of the environment in which the route is being updated. 
     * @param {String} routeIdentifier  The unique identifier of the route to update. 
     * @param {module:model/UpdateRouteRequest} updateRouteRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateRouteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateRouteResponse}
     */
    updateRoute(applicationIdentifier, environmentIdentifier, routeIdentifier, updateRouteRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateRouteRequest;
      // verify the required parameter 'applicationIdentifier' is set
      if (applicationIdentifier === undefined || applicationIdentifier === null) {
        throw new Error("Missing the required parameter 'applicationIdentifier' when calling updateRoute");
      }
      // verify the required parameter 'environmentIdentifier' is set
      if (environmentIdentifier === undefined || environmentIdentifier === null) {
        throw new Error("Missing the required parameter 'environmentIdentifier' when calling updateRoute");
      }
      // verify the required parameter 'routeIdentifier' is set
      if (routeIdentifier === undefined || routeIdentifier === null) {
        throw new Error("Missing the required parameter 'routeIdentifier' when calling updateRoute");
      }
      // verify the required parameter 'updateRouteRequest' is set
      if (updateRouteRequest === undefined || updateRouteRequest === null) {
        throw new Error("Missing the required parameter 'updateRouteRequest' when calling updateRoute");
      }

      let pathParams = {
        'ApplicationIdentifier': applicationIdentifier,
        'EnvironmentIdentifier': environmentIdentifier,
        'RouteIdentifier': routeIdentifier
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateRouteResponse;
      return this.apiClient.callApi(
        '/environments/{EnvironmentIdentifier}/applications/{ApplicationIdentifier}/routes/{RouteIdentifier}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
