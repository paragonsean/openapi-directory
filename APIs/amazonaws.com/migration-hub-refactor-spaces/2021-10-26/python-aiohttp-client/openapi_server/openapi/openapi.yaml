openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p><fullname>Amazon Web Services Migration Hub Refactor Spaces</fullname>\
    \ <p>This API reference provides descriptions, syntax, and other details about\
    \ each of the actions and data types for Amazon Web Services Migration Hub Refactor\
    \ Spaces (Refactor Spaces). The topic for each action shows the API request parameters\
    \ and the response. Alternatively, you can use one of the Amazon Web Services\
    \ SDKs to access an API that is tailored to the programming language or platform\
    \ that you're using. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\"\
    >Amazon Web Services SDKs</a>.</p> <p>To share Refactor Spaces environments with\
    \ other Amazon Web Services accounts or with Organizations and their OUs, use\
    \ Resource Access Manager's <code>CreateResourceShare</code> API. See <a href=\"\
    https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\"\
    >CreateResourceShare</a> in the <i>Amazon Web Services RAM API Reference</i>.</p></p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Migration Hub Refactor Spaces
  version: 2021-10-26
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: migration-hub-refactor-spaces
  x-aws-signingName: refactor-spaces
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/migration-hub-refactor-spaces-2021-10-26.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/refactor-spaces/
servers:
- description: The AWS Migration Hub Refactor Spaces multi-region endpoint
  url: "http://refactor-spaces.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Migration Hub Refactor Spaces multi-region endpoint
  url: "https://refactor-spaces.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Migration Hub Refactor Spaces endpoint for China (Beijing)
    and China (Ningxia)
  url: "http://refactor-spaces.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS Migration Hub Refactor Spaces endpoint for China (Beijing)
    and China (Ningxia)
  url: "https://refactor-spaces.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /environments:
    get:
      description: 'Lists Amazon Web Services Migration Hub Refactor Spaces environments
        owned by a caller account or shared with the caller account. '
      operationId: list_environments
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of results to return with a single call.\
          \ To retrieve the remaining results, make another call with the returned\
          \ <code>nextToken</code> value."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          pattern: "^[a-zA-Z0-9/\\+\\=]{0,2048}$"
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates an Amazon Web Services Migration Hub Refactor Spaces\
        \ environment. The caller owns the environment resource, and all Refactor\
        \ Spaces applications, services, and routes created within the environment.\
        \ They are referred to as the <i>environment owner</i>. The environment owner\
        \ has cross-account visibility and control of Refactor Spaces resources that\
        \ are added to the environment by other accounts that the environment is shared\
        \ with.</p> <p>When creating an environment with a <a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/APIReference/API_CreateEnvironment.html#migrationhubrefactorspaces-CreateEnvironment-request-NetworkFabricType\"\
        >CreateEnvironment:NetworkFabricType</a> of <code>TRANSIT_GATEWAY</code>,\
        \ Refactor Spaces provisions a transit gateway to enable services in VPCs\
        \ to communicate directly across accounts. If <a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/APIReference/API_CreateEnvironment.html#migrationhubrefactorspaces-CreateEnvironment-request-NetworkFabricType\"\
        >CreateEnvironment:NetworkFabricType</a> is <code>NONE</code>, Refactor Spaces\
        \ does not create a transit gateway and you must use your network infrastructure\
        \ to route traffic to services with private URL endpoints.</p>"
      operationId: create_environment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironment_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEnvironmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /environments/{EnvironmentIdentifier}:
    delete:
      description: "Deletes an Amazon Web Services Migration Hub Refactor Spaces environment.\
        \ Before you can delete an environment, you must first delete any applications\
        \ and services within the environment."
      operationId: delete_environment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The ID of the environment. '
        explode: false
        in: path
        name: EnvironmentIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^env-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEnvironmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Gets an Amazon Web Services Migration Hub Refactor Spaces environment.
      operationId: get_environment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the environment.
        explode: false
        in: path
        name: EnvironmentIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^env-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEnvironmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /environments/{EnvironmentIdentifier}/applications:
    get:
      description: 'Lists all the Amazon Web Services Migration Hub Refactor Spaces
        applications within an environment. '
      operationId: list_applications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The ID of the environment. '
        explode: false
        in: path
        name: EnvironmentIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^env-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: "The maximum number of results to return with a single call.\
          \ To retrieve the remaining results, make another call with the returned\
          \ <code>nextToken</code> value."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          pattern: "^[a-zA-Z0-9/\\+\\=]{0,2048}$"
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates an Amazon Web Services Migration Hub Refactor Spaces\
        \ application. The account that owns the environment also owns the applications\
        \ created inside the environment, regardless of the account that creates the\
        \ application. Refactor Spaces provisions an Amazon API Gateway, API Gateway\
        \ VPC link, and Network Load Balancer for the application proxy inside your\
        \ account.</p> <p>In environments created with a <a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/APIReference/API_CreateEnvironment.html#migrationhubrefactorspaces-CreateEnvironment-request-NetworkFabricType\"\
        >CreateEnvironment:NetworkFabricType</a> of <code>NONE</code> you need to\
        \ configure <a href=\"https://docs.aws.amazon.com/whitepapers/latest/aws-vpc-connectivity-options/amazon-vpc-to-amazon-vpc-connectivity-options.html\"\
        > VPC to VPC connectivity</a> between your service VPC and the application\
        \ proxy VPC to route traffic through the application proxy to a service with\
        \ a private URL endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/userguide/getting-started-create-application.html\"\
        > Create an application</a> in the <i>Refactor Spaces User Guide</i>. </p>"
      operationId: create_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the environment.
        explode: false
        in: path
        name: EnvironmentIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^env-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplication_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /environments/{EnvironmentIdentifier}/applications/{ApplicationIdentifier}:
    delete:
      description: "Deletes an Amazon Web Services Migration Hub Refactor Spaces application.\
        \ Before you can delete an application, you must first delete any services\
        \ or routes within the application."
      operationId: delete_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application.
        explode: false
        in: path
        name: ApplicationIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^app-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: 'The ID of the environment. '
        explode: false
        in: path
        name: EnvironmentIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^env-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Gets an Amazon Web Services Migration Hub Refactor Spaces application.
      operationId: get_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application.
        explode: false
        in: path
        name: ApplicationIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^app-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: 'The ID of the environment. '
        explode: false
        in: path
        name: EnvironmentIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^env-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /environments/{EnvironmentIdentifier}/applications/{ApplicationIdentifier}/routes:
    get:
      description: 'Lists all the Amazon Web Services Migration Hub Refactor Spaces
        routes within an application. '
      operationId: list_routes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The ID of the application. '
        explode: false
        in: path
        name: ApplicationIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^app-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: 'The ID of the environment. '
        explode: false
        in: path
        name: EnvironmentIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^env-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: "The maximum number of results to return with a single call.\
          \ To retrieve the remaining results, make another call with the returned\
          \ <code>nextToken</code> value."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          pattern: "^[a-zA-Z0-9/\\+\\=]{0,2048}$"
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates an Amazon Web Services Migration Hub Refactor Spaces\
        \ route. The account owner of the service resource is always the environment\
        \ owner, regardless of which account creates the route. Routes target a service\
        \ in the application. If an application does not have any routes, then the\
        \ first route must be created as a <code>DEFAULT</code> <code>RouteType</code>.</p>\
        \ <p>When created, the default route defaults to an active state so state\
        \ is not a required input. However, like all other state values the state\
        \ of the default route can be updated after creation, but only when all other\
        \ routes are also inactive. Conversely, no route can be active without the\
        \ default route also being active.</p> <p>When you create a route, Refactor\
        \ Spaces configures the Amazon API Gateway to send traffic to the target service\
        \ as follows:</p> <ul> <li> <p> <b>URL Endpoints</b> </p> <p>If the service\
        \ has a URL endpoint, and the endpoint resolves to a private IP address, Refactor\
        \ Spaces routes traffic using the API Gateway VPC link. If a service endpoint\
        \ resolves to a public IP address, Refactor Spaces routes traffic over the\
        \ public internet. Services can have HTTP or HTTPS URL endpoints. For HTTPS\
        \ URLs, publicly-signed certificates are supported. Private Certificate Authorities\
        \ (CAs) are permitted only if the CA's domain is also publicly resolvable.\
        \ </p> <p>Refactor Spaces automatically resolves the public Domain Name System\
        \ (DNS) names that are set in <code>CreateService:UrlEndpoint </code>when\
        \ you create a service. The DNS names resolve when the DNS time-to-live (TTL)\
        \ expires, or every 60 seconds for TTLs less than 60 seconds. This periodic\
        \ DNS resolution ensures that the route configuration remains up-to-date.\
        \ </p> <p/> <p> <b>One-time health check</b> </p> <p>A one-time health check\
        \ is performed on the service when either the route is updated from inactive\
        \ to active, or when it is created with an active state. If the health check\
        \ fails, the route transitions the route state to <code>FAILED</code>, an\
        \ error code of <code>SERVICE_ENDPOINT_HEALTH_CHECK_FAILURE</code> is provided,\
        \ and no traffic is sent to the service.</p> <p>For private URLs, a target\
        \ group is created on the Network Load Balancer and the load balancer target\
        \ group runs default target health checks. By default, the health check is\
        \ run against the service endpoint URL. Optionally, the health check can be\
        \ performed against a different protocol, port, and/or path using the <a href=\"\
        https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/APIReference/API_CreateService.html#migrationhubrefactorspaces-CreateService-request-UrlEndpoint\"\
        >CreateService:UrlEndpoint</a> parameter. All other health check settings\
        \ for the load balancer use the default values described in the <a href=\"\
        https://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health-checks.html\"\
        >Health checks for your target groups</a> in the <i>Elastic Load Balancing\
        \ guide</i>. The health check is considered successful if at least one target\
        \ within the target group transitions to a healthy state.</p> <p/> </li> <li>\
        \ <p> <b>Lambda function endpoints</b> </p> <p>If the service has an Lambda\
        \ function endpoint, then Refactor Spaces configures the Lambda function's\
        \ resource policy to allow the application's API Gateway to invoke the function.</p>\
        \ <p>The Lambda function state is checked. If the function is not active,\
        \ the function configuration is updated so that Lambda resources are provisioned.\
        \ If the Lambda state is <code>Failed</code>, then the route creation fails.\
        \ For more information, see the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/API_GetFunctionConfiguration.html#SSS-GetFunctionConfiguration-response-State\"\
        >GetFunctionConfiguration's State response parameter</a> in the <i>Lambda\
        \ Developer Guide</i>.</p> <p>A check is performed to determine that a Lambda\
        \ function with the specified ARN exists. If it does not exist, the health\
        \ check fails. For public URLs, a connection is opened to the public endpoint.\
        \ If the URL is not reachable, the health check fails. </p> </li> </ul> <p>\
        \ <b>Environments without a network bridge</b> </p> <p>When you create environments\
        \ without a network bridge (<a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/APIReference/API_CreateEnvironment.html#migrationhubrefactorspaces-CreateEnvironment-request-NetworkFabricType\"\
        >CreateEnvironment:NetworkFabricType</a> is <code>NONE)</code> and you use\
        \ your own networking infrastructure, you need to configure <a href=\"https://docs.aws.amazon.com/whitepapers/latest/aws-vpc-connectivity-options/amazon-vpc-to-amazon-vpc-connectivity-options.html\"\
        >VPC to VPC connectivity</a> between your network and the application proxy\
        \ VPC. Route creation from the application proxy to service endpoints will\
        \ fail if your network is not configured to connect to the application proxy\
        \ VPC. For more information, see <a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/userguide/getting-started-create-role.html\"\
        > Create a route</a> in the <i>Refactor Spaces User Guide</i>.</p> <p/>"
      operationId: create_route
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application within which the route is being created.
        explode: false
        in: path
        name: ApplicationIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^app-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: The ID of the environment in which the route is created.
        explode: false
        in: path
        name: EnvironmentIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^env-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoute_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRouteResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /environments/{EnvironmentIdentifier}/applications/{ApplicationIdentifier}/routes/{RouteIdentifier}:
    delete:
      description: Deletes an Amazon Web Services Migration Hub Refactor Spaces route.
      operationId: delete_route
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application to delete the route from.
        explode: false
        in: path
        name: ApplicationIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^app-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: The ID of the environment to delete the route from.
        explode: false
        in: path
        name: EnvironmentIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^env-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: The ID of the route to delete.
        explode: false
        in: path
        name: RouteIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^rte-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRouteResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Gets an Amazon Web Services Migration Hub Refactor Spaces route.
      operationId: get_route
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The ID of the application. '
        explode: false
        in: path
        name: ApplicationIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^app-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: The ID of the environment.
        explode: false
        in: path
        name: EnvironmentIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^env-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: The ID of the route.
        explode: false
        in: path
        name: RouteIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^rte-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRouteResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      description: ' Updates an Amazon Web Services Migration Hub Refactor Spaces
        route. '
      operationId: update_route
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The ID of the application within which the route is being updated. '
        explode: false
        in: path
        name: ApplicationIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^app-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: ' The ID of the environment in which the route is being updated. '
        explode: false
        in: path
        name: EnvironmentIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^env-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: ' The unique identifier of the route to update. '
        explode: false
        in: path
        name: RouteIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^rte-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoute_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRouteResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /environments/{EnvironmentIdentifier}/applications/{ApplicationIdentifier}/services:
    get:
      description: 'Lists all the Amazon Web Services Migration Hub Refactor Spaces
        services within an application. '
      operationId: list_services
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The ID of the application. '
        explode: false
        in: path
        name: ApplicationIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^app-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: 'The ID of the environment. '
        explode: false
        in: path
        name: EnvironmentIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^env-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: "The maximum number of results to return with a single call.\
          \ To retrieve the remaining results, make another call with the returned\
          \ <code>nextToken</code> value."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          pattern: "^[a-zA-Z0-9/\\+\\=]{0,2048}$"
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServicesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates an Amazon Web Services Migration Hub Refactor Spaces\
        \ service. The account owner of the service is always the environment owner,\
        \ regardless of which account in the environment creates the service. Services\
        \ have either a URL endpoint in a virtual private cloud (VPC), or a Lambda\
        \ function endpoint.</p> <important> <p>If an Amazon Web Services resource\
        \ is launched in a service VPC, and you want it to be accessible to all of\
        \ an environment’s services with VPCs and routes, apply the <code>RefactorSpacesSecurityGroup</code>\
        \ to the resource. Alternatively, to add more cross-account constraints, apply\
        \ your own security group.</p> </important>"
      operationId: create_service
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application which the service is created.
        explode: false
        in: path
        name: ApplicationIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^app-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: The ID of the environment in which the service is created.
        explode: false
        in: path
        name: EnvironmentIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^env-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateService_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /environments/{EnvironmentIdentifier}/applications/{ApplicationIdentifier}/services/{ServiceIdentifier}:
    delete:
      description: 'Deletes an Amazon Web Services Migration Hub Refactor Spaces service. '
      operationId: delete_service
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>Deletes a Refactor Spaces service.</p> <note> <p>The <code>RefactorSpacesSecurityGroup</code>
          security group must be removed from all Amazon Web Services resources in
          the virtual private cloud (VPC) prior to deleting a service with a URL endpoint
          in a VPC.</p> </note>
        explode: false
        in: path
        name: ApplicationIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^app-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: The ID of the environment that the service is in.
        explode: false
        in: path
        name: EnvironmentIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^env-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: The ID of the service to delete.
        explode: false
        in: path
        name: ServiceIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^svc-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: 'Gets an Amazon Web Services Migration Hub Refactor Spaces service. '
      operationId: get_service
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application.
        explode: false
        in: path
        name: ApplicationIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^app-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: The ID of the environment.
        explode: false
        in: path
        name: EnvironmentIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^env-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: The ID of the service.
        explode: false
        in: path
        name: ServiceIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^svc-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /environments/{EnvironmentIdentifier}/vpcs:
    get:
      description: 'Lists all Amazon Web Services Migration Hub Refactor Spaces service
        virtual private clouds (VPCs) that are part of the environment. '
      operationId: list_environment_vpcs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The ID of the environment. '
        explode: false
        in: path
        name: EnvironmentIdentifier
        required: true
        schema:
          maxLength: 14
          minLength: 14
          pattern: "^env-[0-9A-Za-z]{10}$"
          type: string
        style: simple
      - description: "The maximum number of results to return with a single call.\
          \ To retrieve the remaining results, make another call with the returned\
          \ <code>nextToken</code> value."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          pattern: "^[a-zA-Z0-9/\\+\\=]{0,2048}$"
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentVpcsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /resourcepolicy:
    put:
      description: 'Attaches a resource-based permission policy to the Amazon Web
        Services Migration Hub Refactor Spaces environment. The policy must contain
        the same actions and condition statements as the <code>arn:aws:ram::aws:permission/AWSRAMDefaultPermissionRefactorSpacesEnvironment</code>
        permission in Resource Access Manager. The policy must not contain new lines
        or blank lines. '
      operationId: put_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResourcePolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourcePolicyException'
          description: InvalidResourcePolicyException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /resourcepolicy/{Identifier}:
    delete:
      description: 'Deletes the resource policy set for the environment. '
      operationId: delete_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'Amazon Resource Name (ARN) of the resource associated with the
          policy. '
        explode: false
        in: path
        name: Identifier
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "^arn:aws:refactor-spaces:[a-zA-Z0-9\\-]+:\\w{12}:[a-zA-Z_0-9+=,.@\\\
            -_/]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: 'Gets the resource-based permission policy that is set for the
        given environment. '
      operationId: get_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The Amazon Resource Name (ARN) of the resource associated with
          the policy. '
        explode: false
        in: path
        name: Identifier
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "^arn:aws:refactor-spaces:[a-zA-Z0-9\\-]+:\\w{12}:[a-zA-Z_0-9+=,.@\\\
            -_/]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /tags/{ResourceArn}:
    get:
      description: 'Lists the tags of a resource. The caller account must be the same
        as the resource’s <code>OwnerAccountId</code>. Listing tags in other accounts
        is not supported. '
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The Amazon Resource Name (ARN) of the resource. '
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Removes the tags of a given resource. Tags are metadata which\
        \ can be used to manage a resource. To tag a resource, the caller account\
        \ must be the same as the resource’s <code>OwnerAccountId</code>. Tagging\
        \ resources in other accounts is not supported.</p> <note> <p>Amazon Web Services\
        \ Migration Hub Refactor Spaces does not propagate tags to orchestrated resources,\
        \ such as an environment’s transit gateway.</p> </note>"
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{ResourceArn}#tagKeys:
    delete:
      description: "Adds to or modifies the tags of the given resource. Tags are metadata\
        \ which can be used to manage a resource. To untag a resource, the caller\
        \ account must be the same as the resource’s <code>OwnerAccountId</code>.\
        \ Untagging resources across accounts is not supported. "
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The Amazon Resource Name (ARN) of the resource. '
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          type: string
        style: simple
      - description: 'The list of keys of the tags to be removed from the resource. '
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateApplicationResponse:
      example:
        CreatedTime: ""
        LastUpdatedTime: ""
        ApiGatewayProxy:
          StageName: ""
          EndpointType: ""
        Name: ""
        EnvironmentId: ""
        VpcId: ""
        State: ""
        CreatedByAccountId: ""
        ProxyType: ""
        ApplicationId: ""
        Arn: ""
        OwnerAccountId: ""
        Tags: ""
      properties:
        ApiGatewayProxy:
          $ref: '#/components/schemas/CreateApplicationResponse_ApiGatewayProxy'
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The unique identifier of the application.
          title: ApplicationId
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: "The Amazon Resource Name (ARN) of the application. The format\
              \ for this ARN is <code>arn:aws:refactor-spaces:<i>region</i>:<i>account-id</i>:<i>resource-type/resource-id</i>\
              \ </code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              > Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General\
              \ Reference</i>."
          title: Arn
        CreatedByAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of application creator.
          title: CreatedByAccountId
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp that indicates when the application is created.
          title: CreatedTime
        EnvironmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          - description: The ID of the environment in which the application is created.
          title: EnvironmentId
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the application was last
              updated. '
          title: LastUpdatedTime
        Name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          - description: The name of the application.
          title: Name
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the application owner
              (which is always the same as the environment owner account ID).
          title: OwnerAccountId
        ProxyType:
          allOf:
          - $ref: '#/components/schemas/ProxyType'
          - description: 'The proxy type of the proxy created within the application. '
          title: ProxyType
        State:
          allOf:
          - $ref: '#/components/schemas/ApplicationState'
          - description: 'The current state of the application. '
          title: State
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: 'The tags assigned to the application. A tag is a label that
              you assign to an Amazon Web Services resource. Each tag consists of
              a key-value pair. '
          title: Tags
        VpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: 'The ID of the Amazon VPC. '
          title: VpcId
      title: CreateApplicationResponse
      type: object
    ApiGatewayEndpointType:
      enum:
      - REGIONAL
      - PRIVATE
      title: ApiGatewayEndpointType
      type: string
    StageName:
      maxLength: 128
      minLength: 1
      pattern: "^[-a-zA-Z0-9_]*$"
      type: string
    TagMapValueString:
      maxLength: 256
      minLength: 0
      title: TagMapValueString
      type: string
    ResourceNotFoundException: {}
    InternalServerException: {}
    ConflictException: {}
    ServiceQuotaExceededException: {}
    ValidationException: {}
    ThrottlingException: {}
    AccessDeniedException: {}
    CreateEnvironmentResponse:
      example:
        EnvironmentId: ""
        CreatedTime: ""
        Description: ""
        NetworkFabricType: ""
        State: ""
        LastUpdatedTime: ""
        Arn: ""
        OwnerAccountId: ""
        Tags: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the environment.
          title: Arn
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp that indicates when the environment is created.
          title: CreatedTime
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the environment.
          title: Description
        EnvironmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          - description: The unique identifier of the environment.
          title: EnvironmentId
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp that indicates when the environment was last
              updated.
          title: LastUpdatedTime
        Name:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          - description: The name of the environment.
          title: Name
        NetworkFabricType:
          allOf:
          - $ref: '#/components/schemas/NetworkFabricType'
          - description: The network fabric type of the environment.
          title: NetworkFabricType
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of environment owner.
          title: OwnerAccountId
        State:
          allOf:
          - $ref: '#/components/schemas/EnvironmentState'
          - description: 'The current state of the environment. '
          title: State
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags assigned to the created environment. A tag is a
              label that you assign to an Amazon Web Services resource. Each tag consists
              of a key-value pair..
          title: Tags
      title: CreateEnvironmentResponse
      type: object
    CreateRouteResponse:
      example:
        UriPathRoute:
          SourcePath: ""
          AppendSourcePath: ""
          ActivationState: ""
          Methods: ""
          IncludeChildPaths: ""
        CreatedTime: ""
        RouteType: ""
        State: ""
        CreatedByAccountId: ""
        LastUpdatedTime: ""
        RouteId: ""
        ApplicationId: ""
        Arn: ""
        OwnerAccountId: ""
        Tags: ""
        ServiceId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application in which the route is created.
          title: ApplicationId
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: "The Amazon Resource Name (ARN) of the route. The format\
              \ for this ARN is <code>arn:aws:refactor-spaces:<i>region</i>:<i>account-id</i>:<i>resource-type/resource-id</i>\
              \ </code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              > Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General\
              \ Reference</i>."
          title: Arn
        CreatedByAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the route creator.
          title: CreatedByAccountId
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp that indicates when the route is created.
          title: CreatedTime
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the route was last updated. '
          title: LastUpdatedTime
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the route owner.
          title: OwnerAccountId
        RouteId:
          allOf:
          - $ref: '#/components/schemas/RouteId'
          - description: The unique identifier of the route.
          title: RouteId
        RouteType:
          allOf:
          - $ref: '#/components/schemas/RouteType'
          - description: The route type of the route.
          title: RouteType
        ServiceId:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: The ID of service in which the route is created. Traffic
              that matches this route is forwarded to this service.
          title: ServiceId
        State:
          allOf:
          - $ref: '#/components/schemas/RouteState'
          - description: The current state of the route. Activation state only allows
              <code>ACTIVE</code> or <code>INACTIVE</code> as user inputs. <code>FAILED</code>
              is a route state that is system generated.
          title: State
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: 'The tags assigned to the created route. A tag is a label
              that you assign to an Amazon Web Services resource. Each tag consists
              of a key-value pair. '
          title: Tags
        UriPathRoute:
          $ref: '#/components/schemas/CreateRouteResponse_UriPathRoute'
      title: CreateRouteResponse
      type: object
    RouteActivationState:
      enum:
      - ACTIVE
      - INACTIVE
      title: RouteActivationState
      type: string
    Boolean:
      type: boolean
    HttpMethods:
      items:
        $ref: '#/components/schemas/HttpMethod'
      type: array
    UriPath:
      maxLength: 2048
      minLength: 1
      pattern: "^(/([a-zA-Z0-9._:-]+|\\{[a-zA-Z0-9._:-]+\\}))+$"
      type: string
    CreateServiceResponse:
      example:
        UrlEndpoint:
          HealthUrl: ""
          Url: ""
        CreatedTime: ""
        Description: ""
        LastUpdatedTime: ""
        Name: ""
        ServiceId: ""
        LambdaEndpoint:
          Arn: ""
        EnvironmentId: ""
        VpcId: ""
        State: ""
        EndpointType: ""
        CreatedByAccountId: ""
        ApplicationId: ""
        Arn: ""
        OwnerAccountId: ""
        Tags: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: 'The ID of the application that the created service belongs
              to. '
          title: ApplicationId
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the service.
          title: Arn
        CreatedByAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the service creator.
          title: CreatedByAccountId
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp that indicates when the service is created.
          title: CreatedTime
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the created service.
          title: Description
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/ServiceEndpointType'
          - description: The endpoint type of the service.
          title: EndpointType
        EnvironmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          - description: The unique identifier of the environment.
          title: EnvironmentId
        LambdaEndpoint:
          $ref: '#/components/schemas/CreateServiceResponse_LambdaEndpoint'
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the service was last updated. '
          title: LastUpdatedTime
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the service.
          title: Name
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the service owner.
          title: OwnerAccountId
        ServiceId:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: The unique identifier of the service.
          title: ServiceId
        State:
          allOf:
          - $ref: '#/components/schemas/ServiceState'
          - description: 'The current state of the service. '
          title: State
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: 'The tags assigned to the created service. A tag is a label
              that you assign to an Amazon Web Services resource. Each tag consists
              of a key-value pair.. '
          title: Tags
        UrlEndpoint:
          $ref: '#/components/schemas/CreateServiceResponse_UrlEndpoint'
        VpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: 'The ID of the VPC. '
          title: VpcId
      title: CreateServiceResponse
      type: object
    LambdaArn:
      maxLength: 2048
      minLength: 1
      pattern: "^arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\\
        d{1}:\\d{12}:function:[a-zA-Z0-9-_]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?$"
      type: string
    Uri:
      maxLength: 2048
      minLength: 1
      pattern: "^https?://[-a-zA-Z0-9+\\x38@#/%?=~_|!:,.;]*[-a-zA-Z0-9+\\x38@#/%=~_|]$"
      type: string
    DeleteApplicationResponse:
      example:
        EnvironmentId: ""
        State: ""
        LastUpdatedTime: ""
        ApplicationId: ""
        Arn: ""
        Name: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
          title: ApplicationId
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the application.
          title: Arn
        EnvironmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          - description: The unique identifier of the application’s environment.
          title: EnvironmentId
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the environment was last
              updated. '
          title: LastUpdatedTime
        Name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          - description: The name of the application.
          title: Name
        State:
          allOf:
          - $ref: '#/components/schemas/ApplicationState'
          - description: 'The current state of the application. '
          title: State
      title: DeleteApplicationResponse
      type: object
    DeleteEnvironmentResponse:
      example:
        EnvironmentId: ""
        State: ""
        LastUpdatedTime: ""
        Arn: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the environment.
          title: Arn
        EnvironmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          - description: The unique identifier of the environment.
          title: EnvironmentId
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the environment was last
              updated. '
          title: LastUpdatedTime
        Name:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          - description: The name of the environment.
          title: Name
        State:
          allOf:
          - $ref: '#/components/schemas/EnvironmentState'
          - description: 'The current state of the environment. '
          title: State
      title: DeleteEnvironmentResponse
      type: object
    DeleteResourcePolicyResponse:
      properties: {}
      type: object
    DeleteRouteResponse:
      example:
        State: ""
        LastUpdatedTime: ""
        RouteId: ""
        ApplicationId: ""
        Arn: ""
        ServiceId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application that the route belongs to.
          title: ApplicationId
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the route.
          title: Arn
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the route was last updated. '
          title: LastUpdatedTime
        RouteId:
          allOf:
          - $ref: '#/components/schemas/RouteId'
          - description: The ID of the route to delete.
          title: RouteId
        ServiceId:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: The ID of the service that the route belongs to.
          title: ServiceId
        State:
          allOf:
          - $ref: '#/components/schemas/RouteState'
          - description: 'The current state of the route. '
          title: State
      title: DeleteRouteResponse
      type: object
    DeleteServiceResponse:
      example:
        EnvironmentId: ""
        State: ""
        LastUpdatedTime: ""
        ApplicationId: ""
        Arn: ""
        Name: ""
        ServiceId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application that the service is in.
          title: ApplicationId
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the service.
          title: Arn
        EnvironmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          - description: The unique identifier of the environment.
          title: EnvironmentId
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the service was last updated. '
          title: LastUpdatedTime
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the service.
          title: Name
        ServiceId:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: The unique identifier of the service.
          title: ServiceId
        State:
          allOf:
          - $ref: '#/components/schemas/ServiceState'
          - description: 'The current state of the service. '
          title: State
      title: DeleteServiceResponse
      type: object
    GetApplicationResponse:
      example:
        CreatedTime: ""
        Error:
          AdditionalDetails: ""
          ResourceIdentifier: ""
          AccountId: ""
          Message: ""
          ResourceType: ""
          Code: ""
        LastUpdatedTime: ""
        ApiGatewayProxy:
          NlbArn: ""
          ProxyUrl: ""
          NlbName: ""
          StageName: ""
          EndpointType: ""
          ApiGatewayId: ""
          VpcLinkId: ""
        Name: ""
        EnvironmentId: ""
        VpcId: ""
        State: ""
        CreatedByAccountId: ""
        ProxyType: ""
        ApplicationId: ""
        Arn: ""
        OwnerAccountId: ""
        Tags: ""
      properties:
        ApiGatewayProxy:
          $ref: '#/components/schemas/GetApplicationResponse_ApiGatewayProxy'
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The unique identifier of the application.
          title: ApplicationId
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the application.
          title: Arn
        CreatedByAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: 'The Amazon Web Services account ID of the application creator. '
          title: CreatedByAccountId
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the application is created. '
          title: CreatedTime
        EnvironmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          - description: The unique identifier of the environment.
          title: EnvironmentId
        Error:
          $ref: '#/components/schemas/GetApplicationResponse_Error'
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the application was last
              updated. '
          title: LastUpdatedTime
        Name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          - description: The name of the application.
          title: Name
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the application owner
              (which is always the same as the environment owner account ID).
          title: OwnerAccountId
        ProxyType:
          allOf:
          - $ref: '#/components/schemas/ProxyType'
          - description: 'The proxy type of the proxy created within the application. '
          title: ProxyType
        State:
          allOf:
          - $ref: '#/components/schemas/ApplicationState'
          - description: 'The current state of the application. '
          title: State
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: 'The tags assigned to the application. A tag is a label that
              you assign to an Amazon Web Services resource. Each tag consists of
              a key-value pair. '
          title: Tags
        VpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: 'The ID of the virtual private cloud (VPC). '
          title: VpcId
      title: GetApplicationResponse
      type: object
    GetEnvironmentResponse:
      example:
        EnvironmentId: ""
        TransitGatewayId: ""
        CreatedTime: ""
        Description: ""
        NetworkFabricType: ""
        State: ""
        Error:
          AdditionalDetails: ""
          ResourceIdentifier: ""
          AccountId: ""
          Message: ""
          ResourceType: ""
          Code: ""
        LastUpdatedTime: ""
        Arn: ""
        OwnerAccountId: ""
        Tags: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the environment.
          title: Arn
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the environment is created. '
          title: CreatedTime
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: 'The description of the environment. '
          title: Description
        EnvironmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          - description: 'The unique identifier of the environment. '
          title: EnvironmentId
        Error:
          $ref: '#/components/schemas/GetEnvironmentResponse_Error'
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the environment was last
              updated. '
          title: LastUpdatedTime
        Name:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          - description: The name of the environment.
          title: Name
        NetworkFabricType:
          allOf:
          - $ref: '#/components/schemas/NetworkFabricType'
          - description: 'The network fabric type of the environment. '
          title: NetworkFabricType
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the environment owner.
          title: OwnerAccountId
        State:
          allOf:
          - $ref: '#/components/schemas/EnvironmentState'
          - description: 'The current state of the environment. '
          title: State
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: 'The tags to assign to the environment. A tag is a label
              that you assign to an Amazon Web Services resource. Each tag consists
              of a key-value pair. '
          title: Tags
        TransitGatewayId:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayId'
          - description: "The ID of the Transit Gateway set up by the environment,\
              \ if applicable."
          title: TransitGatewayId
      title: GetEnvironmentResponse
      type: object
    GetResourcePolicyResponse:
      example:
        Policy: ""
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/PolicyString'
          - description: 'A JSON-formatted string for an Amazon Web Services resource-based
              policy. '
          title: Policy
      title: GetResourcePolicyResponse
      type: object
    GetRouteResponse:
      example:
        CreatedTime: ""
        AppendSourcePath: ""
        Error:
          AdditionalDetails: ""
          ResourceIdentifier: ""
          AccountId: ""
          Message: ""
          ResourceType: ""
          Code: ""
        LastUpdatedTime: ""
        RouteId: ""
        ServiceId: ""
        SourcePath: ""
        EnvironmentId: ""
        RouteType: ""
        State: ""
        CreatedByAccountId: ""
        ApplicationId: ""
        Arn: ""
        OwnerAccountId: ""
        PathResourceToId: ""
        Methods: ""
        Tags: ""
        IncludeChildPaths: ""
      properties:
        AppendSourcePath:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If set to <code>true</code>, this option appends the source\
              \ path to the service URL endpoint."
          title: AppendSourcePath
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: 'The ID of the application that the route belongs to. '
          title: ApplicationId
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the route.
          title: Arn
        CreatedByAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the route creator.
          title: CreatedByAccountId
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'The timestamp of when the route is created. '
          title: CreatedTime
        EnvironmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          - description: Unique identifier of the environment.
          title: EnvironmentId
        Error:
          $ref: '#/components/schemas/GetRouteResponse_Error'
        IncludeChildPaths:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates whether to match all subpaths of the given source\
              \ path. If this value is <code>false</code>, requests must match the\
              \ source path exactly before they are forwarded to this route's service. "
          title: IncludeChildPaths
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the route was last updated. '
          title: LastUpdatedTime
        Methods:
          allOf:
          - $ref: '#/components/schemas/HttpMethods'
          - description: "A list of HTTP methods to match. An empty list matches all\
              \ values. If a method is present, only HTTP requests using that method\
              \ are forwarded to this route’s service. "
          title: Methods
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the route owner.
          title: OwnerAccountId
        PathResourceToId:
          allOf:
          - $ref: '#/components/schemas/PathResourceToId'
          - description: 'A mapping of Amazon API Gateway path resources to resource
              IDs. '
          title: PathResourceToId
        RouteId:
          allOf:
          - $ref: '#/components/schemas/RouteId'
          - description: "<p>The unique identifier of the route.</p> <p> <b>DEFAULT</b>:\
              \ All traffic that does not match another route is forwarded to the\
              \ default route. Applications must have a default route before any other\
              \ routes can be created.</p> <p> <b>URI_PATH</b>: A route that is based\
              \ on a URI path.</p>"
          title: RouteId
        RouteType:
          allOf:
          - $ref: '#/components/schemas/RouteType'
          - description: The type of route.
          title: RouteType
        ServiceId:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: The unique identifier of the service.
          title: ServiceId
        SourcePath:
          allOf:
          - $ref: '#/components/schemas/UriPath'
          - description: "This is the path that Refactor Spaces uses to match traffic.\
              \ Paths must start with <code>/</code> and are relative to the base\
              \ of the application. To use path parameters in the source path, add\
              \ a variable in curly braces. For example, the resource path {user}\
              \ represents a path parameter called 'user'."
          title: SourcePath
        State:
          allOf:
          - $ref: '#/components/schemas/RouteState'
          - description: 'The current state of the route. '
          title: State
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: 'The tags assigned to the route. A tag is a label that you
              assign to an Amazon Web Services resource. Each tag consists of a key-value
              pair. '
          title: Tags
      title: GetRouteResponse
      type: object
    GetServiceResponse:
      example:
        UrlEndpoint:
          HealthUrl: ""
          Url: ""
        CreatedTime: ""
        Description: ""
        Error:
          AdditionalDetails: ""
          ResourceIdentifier: ""
          AccountId: ""
          Message: ""
          ResourceType: ""
          Code: ""
        LastUpdatedTime: ""
        Name: ""
        ServiceId: ""
        LambdaEndpoint:
          Arn: ""
        EnvironmentId: ""
        VpcId: ""
        State: ""
        EndpointType: ""
        CreatedByAccountId: ""
        ApplicationId: ""
        Arn: ""
        OwnerAccountId: ""
        Tags: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
          title: ApplicationId
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the service.
          title: Arn
        CreatedByAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the service creator.
          title: CreatedByAccountId
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the service is created.
          title: CreatedTime
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: 'The description of the service. '
          title: Description
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/ServiceEndpointType'
          - description: The endpoint type of the service.
          title: EndpointType
        EnvironmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          - description: The unique identifier of the environment.
          title: EnvironmentId
        Error:
          $ref: '#/components/schemas/GetServiceResponse_Error'
        LambdaEndpoint:
          $ref: '#/components/schemas/GetServiceResponse_LambdaEndpoint'
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the service was last updated. '
          title: LastUpdatedTime
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the service.
          title: Name
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the service owner.
          title: OwnerAccountId
        ServiceId:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: The unique identifier of the service.
          title: ServiceId
        State:
          allOf:
          - $ref: '#/components/schemas/ServiceState'
          - description: 'The current state of the service. '
          title: State
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: 'The tags assigned to the service. A tag is a label that
              you assign to an Amazon Web Services resource. Each tag consists of
              a key-value pair. '
          title: Tags
        UrlEndpoint:
          $ref: '#/components/schemas/GetServiceResponse_UrlEndpoint'
        VpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: 'The ID of the virtual private cloud (VPC). '
          title: VpcId
      title: GetServiceResponse
      type: object
    ListApplicationsResponse:
      example:
        NextToken: ""
        ApplicationSummaryList: ""
      properties:
        ApplicationSummaryList:
          allOf:
          - $ref: '#/components/schemas/ApplicationSummaries'
          - description: 'The list of <code>ApplicationSummary</code> objects. '
          title: ApplicationSummaryList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next page of results.
          title: NextToken
      title: ListApplicationsResponse
      type: object
    ListEnvironmentVpcsResponse:
      example:
        NextToken: ""
        EnvironmentVpcList: ""
      properties:
        EnvironmentVpcList:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVpcs'
          - description: 'The list of <code>EnvironmentVpc</code> objects. '
          title: EnvironmentVpcList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next page of results.
          title: NextToken
      title: ListEnvironmentVpcsResponse
      type: object
    ListEnvironmentsResponse:
      example:
        NextToken: ""
        EnvironmentSummaryList: ""
      properties:
        EnvironmentSummaryList:
          allOf:
          - $ref: '#/components/schemas/EnvironmentSummaries'
          - description: 'The list of <code>EnvironmentSummary</code> objects. '
          title: EnvironmentSummaryList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next page of results.
          title: NextToken
      title: ListEnvironmentsResponse
      type: object
    ListRoutesResponse:
      example:
        RouteSummaryList: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next page of results.
          title: NextToken
        RouteSummaryList:
          allOf:
          - $ref: '#/components/schemas/RouteSummaries'
          - description: 'The list of <code>RouteSummary</code> objects. '
          title: RouteSummaryList
      title: ListRoutesResponse
      type: object
    ListServicesResponse:
      example:
        ServiceSummaryList: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next page of results.
          title: NextToken
        ServiceSummaryList:
          allOf:
          - $ref: '#/components/schemas/ServiceSummaries'
          - description: ' The list of <code>ServiceSummary</code> objects. '
          title: ServiceSummaryList
      title: ListServicesResponse
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: 'The list of tags assigned to the resource. '
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    PutResourcePolicyResponse:
      properties: {}
      type: object
    InvalidResourcePolicyException: {}
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    String:
      title: String
      type: string
    UpdateRouteResponse:
      example:
        State: ""
        LastUpdatedTime: ""
        RouteId: ""
        ApplicationId: ""
        Arn: ""
        ServiceId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: ' The ID of the application in which the route is being updated. '
          title: ApplicationId
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: " The Amazon Resource Name (ARN) of the route. The format\
              \ for this ARN is <code>arn:aws:refactor-spaces:<i>region</i>:<i>account-id</i>:<i>resource-type/resource-id</i>\
              \ </code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              > Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General\
              \ Reference</i>. "
          title: Arn
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' A timestamp that indicates when the route was last updated. '
          title: LastUpdatedTime
        RouteId:
          allOf:
          - $ref: '#/components/schemas/RouteId'
          - description: ' The unique identifier of the route. '
          title: RouteId
        ServiceId:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: ' The ID of service in which the route was created. Traffic
              that matches this route is forwarded to this service. '
          title: ServiceId
        State:
          allOf:
          - $ref: '#/components/schemas/RouteState'
          - description: ' The current state of the route. '
          title: State
      title: UpdateRouteResponse
      type: object
    AccountId:
      maxLength: 12
      minLength: 12
      pattern: "^\\d{12}$"
      type: string
    AdditionalDetailsValue:
      maxLength: 2048
      minLength: 1
      title: AdditionalDetailsValue
      type: string
    AdditionalDetails:
      additionalProperties:
        $ref: '#/components/schemas/AdditionalDetailsValue'
      type: object
    AdditionalDetailsKey:
      maxLength: 50
      minLength: 1
      type: string
    ApiGatewayId:
      maxLength: 10
      minLength: 10
      pattern: "^[a-z0-9]{10}$"
      type: string
    NlbArn:
      maxLength: 2048
      minLength: 20
      pattern: "^arn:aws:elasticloadbalancing:[a-zA-Z0-9\\-]+:\\w{12}:[a-zA-Z_0-9+=,.@\\\
        -_/]+$"
      type: string
    NlbName:
      maxLength: 32
      minLength: 1
      pattern: "^(?!internal-)[a-zA-Z0-9]+[a-zA-Z0-9-_ ]+.*[^-]$"
      type: string
    VpcLinkId:
      maxLength: 10
      minLength: 10
      pattern: "^[a-z0-9]{10}$"
      type: string
    ApiGatewayProxyConfig:
      description: 'A wrapper object holding the Amazon API Gateway proxy configuration. '
      properties:
        ApiGatewayId:
          allOf:
          - $ref: '#/components/schemas/ApiGatewayId'
          - description: 'The resource ID of the API Gateway for the proxy. '
          title: ApiGatewayId
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/ApiGatewayEndpointType'
          - description: 'The type of API Gateway endpoint created. '
          title: EndpointType
        NlbArn:
          allOf:
          - $ref: '#/components/schemas/NlbArn'
          - description: 'The Amazon Resource Name (ARN) of the Network Load Balancer
              configured by the API Gateway proxy. '
          title: NlbArn
        NlbName:
          allOf:
          - $ref: '#/components/schemas/NlbName'
          - description: 'The name of the Network Load Balancer that is configured
              by the API Gateway proxy. '
          title: NlbName
        ProxyUrl:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: 'The endpoint URL of the API Gateway proxy. '
          title: ProxyUrl
        StageName:
          allOf:
          - $ref: '#/components/schemas/StageName'
          - description: 'The name of the API Gateway stage. The name defaults to
              <code>prod</code>. '
          title: StageName
        VpcLinkId:
          allOf:
          - $ref: '#/components/schemas/VpcLinkId'
          - description: 'The <code>VpcLink</code> ID of the API Gateway proxy. '
          title: VpcLinkId
      title: ApiGatewayProxyConfig
      type: object
    ApiGatewayProxyInput:
      description: 'A wrapper object holding the Amazon API Gateway endpoint input. '
      properties:
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/ApiGatewayEndpointType'
          - description: "<p>The type of endpoint to use for the API Gateway proxy.\
              \ If no value is specified in the request, the value is set to <code>REGIONAL</code>\
              \ by default.</p> <p>If the value is set to <code>PRIVATE</code> in\
              \ the request, this creates a private API endpoint that is isolated\
              \ from the public internet. The private endpoint can only be accessed\
              \ by using Amazon Virtual Private Cloud (Amazon VPC) interface endpoints\
              \ for the Amazon API Gateway that has been granted access. For more\
              \ information about creating a private connection with Refactor Spaces\
              \ and interface endpoint (Amazon Web Services PrivateLink) availability,\
              \ see <a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/userguide/vpc-interface-endpoints.html\"\
              >Access Refactor Spaces using an interface endpoint (Amazon Web Services\
              \ PrivateLink)</a>.</p>"
          title: EndpointType
        StageName:
          allOf:
          - $ref: '#/components/schemas/StageName'
          - description: 'The name of the API Gateway stage. The name defaults to
              <code>prod</code>. '
          title: StageName
      title: ApiGatewayProxyInput
      type: object
    ApiGatewayProxySummary:
      description: 'A wrapper object holding the Amazon API Gateway proxy summary. '
      properties:
        ApiGatewayId:
          allOf:
          - $ref: '#/components/schemas/ApiGatewayId'
          - description: 'The resource ID of the API Gateway for the proxy. '
          title: ApiGatewayId
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/ApiGatewayEndpointType'
          - description: 'The type of API Gateway endpoint created. '
          title: EndpointType
        NlbArn:
          allOf:
          - $ref: '#/components/schemas/NlbArn'
          - description: 'The Amazon Resource Name (ARN) of the Network Load Balancer
              configured by the API Gateway proxy. '
          title: NlbArn
        NlbName:
          allOf:
          - $ref: '#/components/schemas/NlbName'
          - description: 'The name of the Network Load Balancer that is configured
              by the API Gateway proxy. '
          title: NlbName
        ProxyUrl:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: 'The endpoint URL of the API Gateway proxy. '
          title: ProxyUrl
        StageName:
          allOf:
          - $ref: '#/components/schemas/StageName'
          - description: 'The name of the API Gateway stage. The name defaults to
              <code>prod</code>. '
          title: StageName
        VpcLinkId:
          allOf:
          - $ref: '#/components/schemas/VpcLinkId'
          - description: 'The <code>VpcLink</code> ID of the API Gateway proxy. '
          title: VpcLinkId
      title: ApiGatewayProxySummary
      type: object
    ApplicationId:
      maxLength: 14
      minLength: 14
      pattern: "^app-[0-9A-Za-z]{10}$"
      type: string
    ApplicationName:
      maxLength: 63
      minLength: 3
      pattern: "^(?!app-)[a-zA-Z0-9]+[a-zA-Z0-9-_ ]+$"
      type: string
    ApplicationState:
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - FAILED
      - UPDATING
      title: ApplicationState
      type: string
    ApplicationSummary:
      description: 'The list of <code>ApplicationSummary</code> objects. '
      properties:
        ApiGatewayProxy:
          $ref: '#/components/schemas/ApplicationSummary_ApiGatewayProxy'
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: 'The unique identifier of the application. '
          title: ApplicationId
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: 'The Amazon Resource Name (ARN) of the application. '
          title: Arn
        CreatedByAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: 'The Amazon Web Services account ID of the application creator. '
          title: CreatedByAccountId
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the application is created. '
          title: CreatedTime
        EnvironmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          - description: 'The unique identifier of the environment. '
          title: EnvironmentId
        Error:
          $ref: '#/components/schemas/GetApplicationResponse_Error'
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the application was last
              updated. '
          title: LastUpdatedTime
        Name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          - description: 'The name of the application. '
          title: Name
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the application owner
              (which is always the same as the environment owner account ID).
          title: OwnerAccountId
        ProxyType:
          allOf:
          - $ref: '#/components/schemas/ProxyType'
          - description: 'The proxy type of the proxy created within the application. '
          title: ProxyType
        State:
          allOf:
          - $ref: '#/components/schemas/ApplicationState'
          - description: 'The current state of the application. '
          title: State
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: 'The tags assigned to the application. '
          title: Tags
        VpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: 'The ID of the virtual private cloud (VPC). '
          title: VpcId
      title: ApplicationSummary
      type: object
    ApplicationSummaries:
      items:
        $ref: '#/components/schemas/ApplicationSummary'
      type: array
    ResourceArn:
      maxLength: 2048
      minLength: 20
      pattern: "^arn:aws:refactor-spaces:[a-zA-Z0-9\\-]+:\\w{12}:[a-zA-Z_0-9+=,.@\\\
        -_/]+$"
      type: string
    Timestamp:
      format: date-time
      type: string
    EnvironmentId:
      maxLength: 14
      minLength: 14
      pattern: "^env-[0-9A-Za-z]{10}$"
      type: string
    ErrorResponse:
      description: 'Error associated with a resource returned for a Get or List resource
        response. '
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: 'The Amazon Web Services account ID of the resource owner. '
          title: AccountId
        AdditionalDetails:
          allOf:
          - $ref: '#/components/schemas/AdditionalDetails'
          - description: 'Additional details about the error. '
          title: AdditionalDetails
        Code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          - description: 'The error code associated with the error. '
          title: Code
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: 'The message associated with the error. '
          title: Message
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          - description: 'The ID of the resource. '
          title: ResourceIdentifier
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ErrorResourceType'
          - description: 'The type of resource. '
          title: ResourceType
      title: ErrorResponse
      type: object
    ProxyType:
      enum:
      - API_GATEWAY
      title: ProxyType
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagMapValueString'
      description: A collection of up to 50 unique tags
      maxProperties: 50
      minProperties: 0
      type: object
    VpcId:
      maxLength: 21
      minLength: 12
      pattern: "^vpc-[-a-f0-9]{8}([-a-f0-9]{9})?$"
      type: string
    CidrBlock:
      title: CidrBlock
      type: string
    CidrBlocks:
      items:
        $ref: '#/components/schemas/CidrBlock'
      minItems: 1
      type: array
    ClientToken:
      maxLength: 64
      minLength: 1
      pattern: "^[\\x20-\\x7E]{1,64}$"
      type: string
    CreateApplicationRequest:
      example:
        VpcId: ""
        ApiGatewayProxy:
          StageName: ""
          EndpointType: ""
        ProxyType: ""
        ClientToken: ""
        Tags: ""
        Name: ""
      properties:
        ApiGatewayProxy:
          $ref: '#/components/schemas/CreateApplicationResponse_ApiGatewayProxy'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request."
        Name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          - description: 'The name to use for the application. '
        ProxyType:
          allOf:
          - $ref: '#/components/schemas/ProxyType'
          - description: 'The proxy type of the proxy created within the application. '
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags to assign to the application. A tag is a label that
              you assign to an Amazon Web Services resource. Each tag consists of
              a key-value pair.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: The ID of the virtual private cloud (VPC).
      required:
      - Name
      - ProxyType
      - VpcId
      title: CreateApplicationRequest
      type: object
    Description:
      maxLength: 256
      minLength: 1
      pattern: "^[a-zA-Z0-9-_\\s\\.\\!\\*\\#\\@\\']+$"
      type: string
    EnvironmentName:
      maxLength: 63
      minLength: 3
      pattern: "^(?!env-)[a-zA-Z0-9]+[a-zA-Z0-9-_ ]+$"
      type: string
    NetworkFabricType:
      enum:
      - TRANSIT_GATEWAY
      - NONE
      title: NetworkFabricType
      type: string
    CreateEnvironmentRequest:
      example:
        Description: ""
        NetworkFabricType: ""
        ClientToken: ""
        Tags: ""
        Name: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request."
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the environment.
        Name:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          - description: The name of the environment.
        NetworkFabricType:
          allOf:
          - $ref: '#/components/schemas/NetworkFabricType'
          - description: The network fabric type of the environment.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags to assign to the environment. A tag is a label that
              you assign to an Amazon Web Services resource. Each tag consists of
              a key-value pair.
      required:
      - Name
      - NetworkFabricType
      title: CreateEnvironmentRequest
      type: object
    EnvironmentState:
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - FAILED
      title: EnvironmentState
      type: string
    DefaultRouteInput:
      description: ' The configuration for the default route type. '
      properties:
        ActivationState:
          allOf:
          - $ref: '#/components/schemas/RouteActivationState'
          - description: "If set to <code>ACTIVE</code>, traffic is forwarded to this\
              \ route’s service after the route is created. "
          title: ActivationState
      title: DefaultRouteInput
      type: object
    RouteType:
      enum:
      - DEFAULT
      - URI_PATH
      title: RouteType
      type: string
    ServiceId:
      maxLength: 14
      minLength: 14
      pattern: "^svc-[0-9A-Za-z]{10}$"
      type: string
    UriPathRouteInput:
      description: 'The configuration for the URI path route type. '
      properties:
        ActivationState:
          allOf:
          - $ref: '#/components/schemas/RouteActivationState'
          - description: "If set to <code>ACTIVE</code>, traffic is forwarded to this\
              \ route’s service after the route is created. "
          title: ActivationState
        AppendSourcePath:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If set to <code>true</code>, this option appends the source\
              \ path to the service URL endpoint."
          title: AppendSourcePath
        IncludeChildPaths:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates whether to match all subpaths of the given source\
              \ path. If this value is <code>false</code>, requests must match the\
              \ source path exactly before they are forwarded to this route's service. "
          title: IncludeChildPaths
        Methods:
          allOf:
          - $ref: '#/components/schemas/HttpMethods'
          - description: "A list of HTTP methods to match. An empty list matches all\
              \ values. If a method is present, only HTTP requests using that method\
              \ are forwarded to this route’s service. "
          title: Methods
        SourcePath:
          allOf:
          - $ref: '#/components/schemas/UriPath'
          - description: "This is the path that Refactor Spaces uses to match traffic.\
              \ Paths must start with <code>/</code> and are relative to the base\
              \ of the application. To use path parameters in the source path, add\
              \ a variable in curly braces. For example, the resource path {user}\
              \ represents a path parameter called 'user'."
          title: SourcePath
      required:
      - ActivationState
      - SourcePath
      title: UriPathRouteInput
      type: object
    CreateRouteRequest:
      example:
        UriPathRoute:
          SourcePath: ""
          AppendSourcePath: ""
          ActivationState: ""
          Methods: ""
          IncludeChildPaths: ""
        RouteType: ""
        DefaultRoute:
          ActivationState: ""
        ServiceIdentifier: ""
        ClientToken: ""
        Tags: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request."
        DefaultRoute:
          $ref: '#/components/schemas/CreateRouteRequest_DefaultRoute'
        RouteType:
          allOf:
          - $ref: '#/components/schemas/RouteType'
          - description: The route type of the route. <code>DEFAULT</code> indicates
              that all traffic that does not match another route is forwarded to the
              default route. Applications must have a default route before any other
              routes can be created. <code>URI_PATH</code> indicates a route that
              is based on a URI path.
        ServiceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: The ID of the service in which the route is created. Traffic
              that matches this route is forwarded to this service.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: 'The tags to assign to the route. A tag is a label that you
              assign to an Amazon Web Services resource. Each tag consists of a key-value
              pair.. '
        UriPathRoute:
          $ref: '#/components/schemas/CreateRouteRequest_UriPathRoute'
      required:
      - RouteType
      - ServiceIdentifier
      title: CreateRouteRequest
      type: object
    RouteId:
      maxLength: 14
      minLength: 14
      pattern: "^rte-[0-9A-Za-z]{10}$"
      type: string
    RouteState:
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - FAILED
      - UPDATING
      - INACTIVE
      title: RouteState
      type: string
    ServiceEndpointType:
      enum:
      - LAMBDA
      - URL
      title: ServiceEndpointType
      type: string
    LambdaEndpointInput:
      description: 'The input for the Lambda endpoint type. '
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/LambdaArn'
          - description: The Amazon Resource Name (ARN) of the Lambda function or
              alias.
          title: Arn
      required:
      - Arn
      title: LambdaEndpointInput
      type: object
    ServiceName:
      maxLength: 63
      minLength: 3
      pattern: "^(?!svc-)[a-zA-Z0-9]+[a-zA-Z0-9-_ ]+$"
      type: string
    UrlEndpointInput:
      description: 'The configuration for the URL endpoint type. '
      properties:
        HealthUrl:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: "The health check URL of the URL endpoint type. If the URL\
              \ is a public endpoint, the <code>HealthUrl</code> must also be a public\
              \ endpoint. If the URL is a private endpoint inside a virtual private\
              \ cloud (VPC), the health URL must also be a private endpoint, and the\
              \ host must be the same as the URL. "
          title: HealthUrl
        Url:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: "The URL to route traffic to. The URL must be an <a href=\"\
              https://datatracker.ietf.org/doc/html/rfc3986\">rfc3986-formatted URL</a>.\
              \ If the host is a domain name, the name must be resolvable over the\
              \ public internet. If the scheme is <code>https</code>, the top level\
              \ domain of the host must be listed in the <a href=\"https://www.iana.org/domains/root/db\"\
              >IANA root zone database</a>. "
          title: Url
      required:
      - Url
      title: UrlEndpointInput
      type: object
    CreateServiceRequest:
      example:
        LambdaEndpoint:
          Arn: ""
        UrlEndpoint:
          HealthUrl: ""
          Url: ""
        Description: ""
        VpcId: ""
        EndpointType: ""
        ClientToken: ""
        Tags: ""
        Name: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request."
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the service.
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/ServiceEndpointType'
          - description: The type of endpoint to use for the service. The type can
              be a URL in a VPC or an Lambda function.
        LambdaEndpoint:
          $ref: '#/components/schemas/CreateServiceResponse_LambdaEndpoint'
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the service.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: 'The tags to assign to the service. A tag is a label that
              you assign to an Amazon Web Services resource. Each tag consists of
              a key-value pair.. '
        UrlEndpoint:
          $ref: '#/components/schemas/CreateServiceRequest_UrlEndpoint'
        VpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: The ID of the VPC.
      required:
      - EndpointType
      - Name
      title: CreateServiceRequest
      type: object
    ServiceState:
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - FAILED
      title: ServiceState
      type: string
    DeleteApplicationRequest:
      properties: {}
      title: DeleteApplicationRequest
      type: object
    DeleteEnvironmentRequest:
      properties: {}
      title: DeleteEnvironmentRequest
      type: object
    ResourcePolicyIdentifier:
      maxLength: 2048
      minLength: 20
      pattern: "^arn:aws:refactor-spaces:[a-zA-Z0-9\\-]+:\\w{12}:[a-zA-Z_0-9+=,.@\\\
        -_/]+$"
      type: string
    DeleteResourcePolicyRequest:
      properties: {}
      title: DeleteResourcePolicyRequest
      type: object
    DeleteRouteRequest:
      properties: {}
      title: DeleteRouteRequest
      type: object
    DeleteServiceRequest:
      properties: {}
      title: DeleteServiceRequest
      type: object
    Ec2TagValue:
      maxLength: 255
      minLength: 0
      pattern: ^.*$
      type: string
    EnvironmentSummary:
      description: 'The summary information for environments as a response to <code>ListEnvironments</code>. '
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: 'The Amazon Resource Name (ARN) of the environment. '
          title: Arn
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the environment is created. '
          title: CreatedTime
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: 'A description of the environment. '
          title: Description
        EnvironmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          - description: 'The unique identifier of the environment. '
          title: EnvironmentId
        Error:
          $ref: '#/components/schemas/GetEnvironmentResponse_Error'
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the environment was last
              updated. '
          title: LastUpdatedTime
        Name:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          - description: 'The name of the environment. '
          title: Name
        NetworkFabricType:
          allOf:
          - $ref: '#/components/schemas/NetworkFabricType'
          - description: 'The network fabric type of the environment. '
          title: NetworkFabricType
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the environment owner.
          title: OwnerAccountId
        State:
          allOf:
          - $ref: '#/components/schemas/EnvironmentState'
          - description: 'The current state of the environment. '
          title: State
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: 'The tags assigned to the environment. '
          title: Tags
        TransitGatewayId:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayId'
          - description: 'The ID of the Transit Gateway set up by the environment. '
          title: TransitGatewayId
      title: EnvironmentSummary
      type: object
    EnvironmentSummaries:
      items:
        $ref: '#/components/schemas/EnvironmentSummary'
      type: array
    TransitGatewayId:
      maxLength: 21
      minLength: 21
      pattern: "^tgw-[-a-f0-9]{17}$"
      type: string
    EnvironmentVpc:
      description: Provides summary information for the <code>EnvironmentVpc</code>
        resource as a response to <code>ListEnvironmentVpc</code>.
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: 'The Amazon Web Services account ID of the virtual private
              cloud (VPC) owner. '
          title: AccountId
        CidrBlocks:
          allOf:
          - $ref: '#/components/schemas/CidrBlocks'
          - description: 'The list of Amazon Virtual Private Cloud (Amazon VPC) CIDR
              blocks. '
          title: CidrBlocks
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the VPC is first added to
              the environment. '
          title: CreatedTime
        EnvironmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          - description: 'The unique identifier of the environment. '
          title: EnvironmentId
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the VPC was last updated
              by the environment. '
          title: LastUpdatedTime
        VpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: 'The ID of the VPC. '
          title: VpcId
        VpcName:
          allOf:
          - $ref: '#/components/schemas/Ec2TagValue'
          - description: 'The name of the VPC at the time it is added to the environment. '
          title: VpcName
      title: EnvironmentVpc
      type: object
    EnvironmentVpcs:
      items:
        $ref: '#/components/schemas/EnvironmentVpc'
      type: array
    ErrorCode:
      enum:
      - INVALID_RESOURCE_STATE
      - RESOURCE_LIMIT_EXCEEDED
      - RESOURCE_CREATION_FAILURE
      - RESOURCE_UPDATE_FAILURE
      - SERVICE_ENDPOINT_HEALTH_CHECK_FAILURE
      - RESOURCE_DELETION_FAILURE
      - RESOURCE_RETRIEVAL_FAILURE
      - RESOURCE_IN_USE
      - RESOURCE_NOT_FOUND
      - STATE_TRANSITION_FAILURE
      - REQUEST_LIMIT_EXCEEDED
      - NOT_AUTHORIZED
      title: ErrorCode
      type: string
    ErrorMessage:
      maxLength: 255
      minLength: 0
      pattern: "^[\\p{Alnum}\\p{Punct}\\p{Blank}]*$"
      type: string
    ErrorResourceType:
      enum:
      - ENVIRONMENT
      - APPLICATION
      - ROUTE
      - SERVICE
      - TRANSIT_GATEWAY
      - TRANSIT_GATEWAY_ATTACHMENT
      - API_GATEWAY
      - NLB
      - TARGET_GROUP
      - LOAD_BALANCER_LISTENER
      - VPC_LINK
      - LAMBDA
      - VPC
      - SUBNET
      - ROUTE_TABLE
      - SECURITY_GROUP
      - VPC_ENDPOINT_SERVICE_CONFIGURATION
      - RESOURCE_SHARE
      - IAM_ROLE
      title: ErrorResourceType
      type: string
    ResourceIdentifier:
      maxLength: 63
      minLength: 3
      pattern: "(^(env|svc|pxy|rte|app)-([0-9A-Za-z]{10}$))"
      type: string
    GetApplicationRequest:
      properties: {}
      title: GetApplicationRequest
      type: object
    GetEnvironmentRequest:
      properties: {}
      title: GetEnvironmentRequest
      type: object
    GetResourcePolicyRequest:
      properties: {}
      title: GetResourcePolicyRequest
      type: object
    PolicyString:
      maxLength: 300000
      minLength: 1
      pattern: ^.*\S.*$
      type: string
    GetRouteRequest:
      properties: {}
      title: GetRouteRequest
      type: object
    PathResourceToId:
      additionalProperties:
        $ref: '#/components/schemas/PathResourceToIdValue'
      type: object
    GetServiceRequest:
      properties: {}
      title: GetServiceRequest
      type: object
    LambdaEndpointConfig:
      description: 'The configuration for the Lambda endpoint type. '
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/LambdaArn'
          - description: 'The Amazon Resource Name (ARN) of the Lambda endpoint. '
          title: Arn
      title: LambdaEndpointConfig
      type: object
    UrlEndpointConfig:
      description: 'The configuration for the URL endpoint type. '
      properties:
        HealthUrl:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: 'The health check URL of the URL endpoint type. '
          title: HealthUrl
        Url:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: 'The HTTP URL endpoint. '
          title: Url
      title: UrlEndpointConfig
      type: object
    HttpMethod:
      enum:
      - DELETE
      - GET
      - HEAD
      - OPTIONS
      - PATCH
      - POST
      - PUT
      title: HttpMethod
      type: string
    LambdaEndpointSummary:
      description: 'The summary for the Lambda endpoint type. '
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/LambdaArn'
          - description: 'The Amazon Resource Name (ARN) of the Lambda endpoint. '
          title: Arn
      title: LambdaEndpointSummary
      type: object
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: "^[a-zA-Z0-9/\\+\\=]{0,2048}$"
      type: string
    ListApplicationsRequest:
      properties: {}
      title: ListApplicationsRequest
      type: object
    ListEnvironmentVpcsRequest:
      properties: {}
      title: ListEnvironmentVpcsRequest
      type: object
    ListEnvironmentsRequest:
      properties: {}
      title: ListEnvironmentsRequest
      type: object
    ListRoutesRequest:
      properties: {}
      title: ListRoutesRequest
      type: object
    RouteSummaries:
      items:
        $ref: '#/components/schemas/RouteSummary'
      type: array
    ListServicesRequest:
      properties: {}
      title: ListServicesRequest
      type: object
    ServiceSummaries:
      items:
        $ref: '#/components/schemas/ServiceSummary'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    PathResourceToIdValue:
      maxLength: 10
      minLength: 10
      pattern: "^[a-z0-9]{10}$"
      title: PathResourceToIdValue
      type: string
    PathResourceToIdKey:
      maxLength: 2048
      minLength: 1
      type: string
    PutResourcePolicyRequest:
      example:
        Policy: ""
        ResourceArn: ""
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/PolicyString'
          - description: 'A JSON-formatted string for an Amazon Web Services resource-based
              policy. '
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: 'The Amazon Resource Name (ARN) of the resource to which
              the policy is being attached. '
      required:
      - Policy
      - ResourceArn
      title: PutResourcePolicyRequest
      type: object
    RouteSummary:
      description: 'The summary information for the routes as a response to <code>ListRoutes</code>. '
      properties:
        AppendSourcePath:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If set to <code>true</code>, this option appends the source\
              \ path to the service URL endpoint."
          title: AppendSourcePath
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: 'The unique identifier of the application. '
          title: ApplicationId
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: 'The Amazon Resource Name (ARN) of the route. '
          title: Arn
        CreatedByAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: 'The Amazon Web Services account ID of the route creator. '
          title: CreatedByAccountId
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the route is created. '
          title: CreatedTime
        EnvironmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          - description: 'The unique identifier of the environment. '
          title: EnvironmentId
        Error:
          $ref: '#/components/schemas/GetRouteResponse_Error'
        IncludeChildPaths:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates whether to match all subpaths of the given source\
              \ path. If this value is <code>false</code>, requests must match the\
              \ source path exactly before they are forwarded to this route's service."
          title: IncludeChildPaths
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the route was last updated. '
          title: LastUpdatedTime
        Methods:
          allOf:
          - $ref: '#/components/schemas/HttpMethods'
          - description: "A list of HTTP methods to match. An empty list matches all\
              \ values. If a method is present, only HTTP requests using that method\
              \ are forwarded to this route’s service. "
          title: Methods
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the route owner.
          title: OwnerAccountId
        PathResourceToId:
          allOf:
          - $ref: '#/components/schemas/PathResourceToId'
          - description: 'A mapping of Amazon API Gateway path resources to resource
              IDs. '
          title: PathResourceToId
        RouteId:
          allOf:
          - $ref: '#/components/schemas/RouteId'
          - description: 'The unique identifier of the route. '
          title: RouteId
        RouteType:
          allOf:
          - $ref: '#/components/schemas/RouteType'
          - description: 'The route type of the route. '
          title: RouteType
        ServiceId:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: 'The unique identifier of the service. '
          title: ServiceId
        SourcePath:
          allOf:
          - $ref: '#/components/schemas/UriPath'
          - description: "This is the path that Refactor Spaces uses to match traffic.\
              \ Paths must start with <code>/</code> and are relative to the base\
              \ of the application. To use path parameters in the source path, add\
              \ a variable in curly braces. For example, the resource path {user}\
              \ represents a path parameter called 'user'."
          title: SourcePath
        State:
          allOf:
          - $ref: '#/components/schemas/RouteState'
          - description: 'The current state of the route. '
          title: State
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: 'The tags assigned to the route. '
          title: Tags
      title: RouteSummary
      type: object
    ServiceSummary:
      description: 'A summary for the service as a response to <code>ListServices</code>. '
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: 'The unique identifier of the application. '
          title: ApplicationId
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: 'The Amazon Resource Name (ARN) of the service. '
          title: Arn
        CreatedByAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: 'The Amazon Web Services account ID of the service creator. '
          title: CreatedByAccountId
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the service is created. '
          title: CreatedTime
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: 'A description of the service. '
          title: Description
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/ServiceEndpointType'
          - description: 'The endpoint type of the service. '
          title: EndpointType
        EnvironmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          - description: 'The unique identifier of the environment. '
          title: EnvironmentId
        Error:
          $ref: '#/components/schemas/GetServiceResponse_Error'
        LambdaEndpoint:
          $ref: '#/components/schemas/ServiceSummary_LambdaEndpoint'
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp that indicates when the service was last updated. '
          title: LastUpdatedTime
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: 'The name of the service. '
          title: Name
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the service owner.
          title: OwnerAccountId
        ServiceId:
          allOf:
          - $ref: '#/components/schemas/ServiceId'
          - description: 'The unique identifier of the service. '
          title: ServiceId
        State:
          allOf:
          - $ref: '#/components/schemas/ServiceState'
          - description: 'The current state of the service. '
          title: State
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: 'The tags assigned to the service. '
          title: Tags
        UrlEndpoint:
          $ref: '#/components/schemas/ServiceSummary_UrlEndpoint'
        VpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: 'The ID of the virtual private cloud (VPC). '
          title: VpcId
      title: ServiceSummary
      type: object
    UrlEndpointSummary:
      description: 'The summary of the configuration for the URL endpoint type. '
      properties:
        HealthUrl:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: "The health check URL of the URL endpoint type. If the URL\
              \ is a public endpoint, the <code>HealthUrl</code> must also be a public\
              \ endpoint. If the URL is a private endpoint inside a virtual private\
              \ cloud (VPC), the health URL must also be a private endpoint, and the\
              \ host must be the same as the URL."
          title: HealthUrl
        Url:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: " The URL to route traffic to. The URL must be an <a href=\"\
              https://datatracker.ietf.org/doc/html/rfc3986\">rfc3986-formatted URL</a>.\
              \ If the host is a domain name, the name must be resolvable over the\
              \ public internet. If the scheme is <code>https</code>, the top level\
              \ domain of the host must be listed in the <a href=\"https://www.iana.org/domains/root/db\"\
              >IANA root zone database</a>. "
          title: Url
      title: UrlEndpointSummary
      type: object
    TagKeys:
      items:
        $ref: '#/components/schemas/String'
      type: array
    TagMapKeyString:
      maxLength: 128
      minLength: 1
      pattern: ^(?!aws:).+
      type: string
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The new or modified tags for the resource.
      required:
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateRouteRequest:
      example:
        ActivationState: ""
      properties:
        ActivationState:
          allOf:
          - $ref: '#/components/schemas/RouteActivationState'
          - description: " If set to <code>ACTIVE</code>, traffic is forwarded to\
              \ this route’s service after the route is updated. "
      required:
      - ActivationState
      title: UpdateRouteRequest
      type: object
    CreateApplication_request_ApiGatewayProxy:
      description: 'A wrapper object holding the Amazon API Gateway endpoint input. '
      properties:
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/ApiGatewayEndpointType'
          - description: "<p>The type of endpoint to use for the API Gateway proxy.\
              \ If no value is specified in the request, the value is set to <code>REGIONAL</code>\
              \ by default.</p> <p>If the value is set to <code>PRIVATE</code> in\
              \ the request, this creates a private API endpoint that is isolated\
              \ from the public internet. The private endpoint can only be accessed\
              \ by using Amazon Virtual Private Cloud (Amazon VPC) interface endpoints\
              \ for the Amazon API Gateway that has been granted access. For more\
              \ information about creating a private connection with Refactor Spaces\
              \ and interface endpoint (Amazon Web Services PrivateLink) availability,\
              \ see <a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/userguide/vpc-interface-endpoints.html\"\
              >Access Refactor Spaces using an interface endpoint (Amazon Web Services\
              \ PrivateLink)</a>.</p>"
          title: EndpointType
        StageName:
          allOf:
          - $ref: '#/components/schemas/StageName'
          - description: 'The name of the API Gateway stage. The name defaults to
              <code>prod</code>. '
          title: StageName
      title: CreateApplication_request_ApiGatewayProxy
      type: object
    CreateApplication_request:
      properties:
        ApiGatewayProxy:
          $ref: '#/components/schemas/CreateApplication_request_ApiGatewayProxy'
        ClientToken:
          description: "A unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request."
          maxLength: 64
          minLength: 1
          pattern: "^[\\x20-\\x7E]{1,64}$"
          title: ClientToken
          type: string
        Name:
          description: 'The name to use for the application. '
          maxLength: 63
          minLength: 3
          pattern: "^(?!app-)[a-zA-Z0-9]+[a-zA-Z0-9-_ ]+$"
          title: Name
          type: string
        ProxyType:
          description: 'The proxy type of the proxy created within the application. '
          enum:
          - API_GATEWAY
          title: ProxyType
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagMapValueString'
          description: A collection of up to 50 unique tags
          maxProperties: 50
          minProperties: 0
          title: Tags
          type: object
        VpcId:
          description: The ID of the virtual private cloud (VPC).
          maxLength: 21
          minLength: 12
          pattern: "^vpc-[-a-f0-9]{8}([-a-f0-9]{9})?$"
          title: VpcId
          type: string
      required:
      - Name
      - ProxyType
      - VpcId
      title: CreateApplication_request
      type: object
    CreateEnvironment_request:
      properties:
        ClientToken:
          description: "A unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request."
          maxLength: 64
          minLength: 1
          pattern: "^[\\x20-\\x7E]{1,64}$"
          title: ClientToken
          type: string
        Description:
          description: The description of the environment.
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9-_\\s\\.\\!\\*\\#\\@\\']+$"
          title: Description
          type: string
        Name:
          description: The name of the environment.
          maxLength: 63
          minLength: 3
          pattern: "^(?!env-)[a-zA-Z0-9]+[a-zA-Z0-9-_ ]+$"
          title: Name
          type: string
        NetworkFabricType:
          description: The network fabric type of the environment.
          enum:
          - TRANSIT_GATEWAY
          - NONE
          title: NetworkFabricType
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagMapValueString'
          description: A collection of up to 50 unique tags
          maxProperties: 50
          minProperties: 0
          title: Tags
          type: object
      required:
      - Name
      - NetworkFabricType
      title: CreateEnvironment_request
      type: object
    CreateRoute_request_DefaultRoute:
      description: ' The configuration for the default route type. '
      properties:
        ActivationState:
          allOf:
          - $ref: '#/components/schemas/RouteActivationState'
          - description: "If set to <code>ACTIVE</code>, traffic is forwarded to this\
              \ route’s service after the route is created. "
          title: ActivationState
      title: CreateRoute_request_DefaultRoute
      type: object
    CreateRoute_request_UriPathRoute:
      description: 'The configuration for the URI path route type. '
      properties:
        ActivationState:
          allOf:
          - $ref: '#/components/schemas/RouteActivationState'
          - description: "If set to <code>ACTIVE</code>, traffic is forwarded to this\
              \ route’s service after the route is created. "
          title: ActivationState
        AppendSourcePath:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If set to <code>true</code>, this option appends the source\
              \ path to the service URL endpoint."
          title: AppendSourcePath
        IncludeChildPaths:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates whether to match all subpaths of the given source\
              \ path. If this value is <code>false</code>, requests must match the\
              \ source path exactly before they are forwarded to this route's service. "
          title: IncludeChildPaths
        Methods:
          allOf:
          - $ref: '#/components/schemas/HttpMethods'
          - description: "A list of HTTP methods to match. An empty list matches all\
              \ values. If a method is present, only HTTP requests using that method\
              \ are forwarded to this route’s service. "
          title: Methods
        SourcePath:
          allOf:
          - $ref: '#/components/schemas/UriPath'
          - description: "This is the path that Refactor Spaces uses to match traffic.\
              \ Paths must start with <code>/</code> and are relative to the base\
              \ of the application. To use path parameters in the source path, add\
              \ a variable in curly braces. For example, the resource path {user}\
              \ represents a path parameter called 'user'."
          title: SourcePath
      title: CreateRoute_request_UriPathRoute
      type: object
    CreateRoute_request:
      properties:
        ClientToken:
          description: "A unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request."
          maxLength: 64
          minLength: 1
          pattern: "^[\\x20-\\x7E]{1,64}$"
          title: ClientToken
          type: string
        DefaultRoute:
          $ref: '#/components/schemas/CreateRoute_request_DefaultRoute'
        RouteType:
          description: The route type of the route. <code>DEFAULT</code> indicates
            that all traffic that does not match another route is forwarded to the
            default route. Applications must have a default route before any other
            routes can be created. <code>URI_PATH</code> indicates a route that is
            based on a URI path.
          enum:
          - DEFAULT
          - URI_PATH
          title: RouteType
          type: string
        ServiceIdentifier:
          description: The ID of the service in which the route is created. Traffic
            that matches this route is forwarded to this service.
          maxLength: 14
          minLength: 14
          pattern: "^svc-[0-9A-Za-z]{10}$"
          title: ServiceIdentifier
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagMapValueString'
          description: A collection of up to 50 unique tags
          maxProperties: 50
          minProperties: 0
          title: Tags
          type: object
        UriPathRoute:
          $ref: '#/components/schemas/CreateRoute_request_UriPathRoute'
      required:
      - RouteType
      - ServiceIdentifier
      title: CreateRoute_request
      type: object
    CreateService_request_LambdaEndpoint:
      description: 'The input for the Lambda endpoint type. '
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/LambdaArn'
          - description: The Amazon Resource Name (ARN) of the Lambda function or
              alias.
          title: Arn
      title: CreateService_request_LambdaEndpoint
      type: object
    CreateService_request_UrlEndpoint:
      description: 'The configuration for the URL endpoint type. '
      properties:
        HealthUrl:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: "The health check URL of the URL endpoint type. If the URL\
              \ is a public endpoint, the <code>HealthUrl</code> must also be a public\
              \ endpoint. If the URL is a private endpoint inside a virtual private\
              \ cloud (VPC), the health URL must also be a private endpoint, and the\
              \ host must be the same as the URL. "
          title: HealthUrl
        Url:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: "The URL to route traffic to. The URL must be an <a href=\"\
              https://datatracker.ietf.org/doc/html/rfc3986\">rfc3986-formatted URL</a>.\
              \ If the host is a domain name, the name must be resolvable over the\
              \ public internet. If the scheme is <code>https</code>, the top level\
              \ domain of the host must be listed in the <a href=\"https://www.iana.org/domains/root/db\"\
              >IANA root zone database</a>. "
          title: Url
      title: CreateService_request_UrlEndpoint
      type: object
    CreateService_request:
      properties:
        ClientToken:
          description: "A unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request."
          maxLength: 64
          minLength: 1
          pattern: "^[\\x20-\\x7E]{1,64}$"
          title: ClientToken
          type: string
        Description:
          description: The description of the service.
          maxLength: 256
          minLength: 1
          pattern: "^[a-zA-Z0-9-_\\s\\.\\!\\*\\#\\@\\']+$"
          title: Description
          type: string
        EndpointType:
          description: The type of endpoint to use for the service. The type can be
            a URL in a VPC or an Lambda function.
          enum:
          - LAMBDA
          - URL
          title: EndpointType
          type: string
        LambdaEndpoint:
          $ref: '#/components/schemas/CreateService_request_LambdaEndpoint'
        Name:
          description: The name of the service.
          maxLength: 63
          minLength: 3
          pattern: "^(?!svc-)[a-zA-Z0-9]+[a-zA-Z0-9-_ ]+$"
          title: Name
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagMapValueString'
          description: A collection of up to 50 unique tags
          maxProperties: 50
          minProperties: 0
          title: Tags
          type: object
        UrlEndpoint:
          $ref: '#/components/schemas/CreateService_request_UrlEndpoint'
        VpcId:
          description: The ID of the VPC.
          maxLength: 21
          minLength: 12
          pattern: "^vpc-[-a-f0-9]{8}([-a-f0-9]{9})?$"
          title: VpcId
          type: string
      required:
      - EndpointType
      - Name
      title: CreateService_request
      type: object
    UpdateRoute_request:
      properties:
        ActivationState:
          description: " If set to <code>ACTIVE</code>, traffic is forwarded to this\
            \ route’s service after the route is updated. "
          enum:
          - ACTIVE
          - INACTIVE
          title: ActivationState
          type: string
      required:
      - ActivationState
      title: UpdateRoute_request
      type: object
    TagResource_request:
      properties:
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagMapValueString'
          description: A collection of up to 50 unique tags
          maxProperties: 50
          minProperties: 0
          title: Tags
          type: object
      required:
      - Tags
      title: TagResource_request
      type: object
    PutResourcePolicy_request:
      properties:
        Policy:
          description: 'A JSON-formatted string for an Amazon Web Services resource-based
            policy. '
          maxLength: 300000
          minLength: 1
          pattern: ^.*\S.*$
          title: Policy
          type: string
        ResourceArn:
          description: 'The Amazon Resource Name (ARN) of the resource to which the
            policy is being attached. '
          maxLength: 2048
          minLength: 20
          pattern: "^arn:aws:refactor-spaces:[a-zA-Z0-9\\-]+:\\w{12}:[a-zA-Z_0-9+=,.@\\\
            -_/]+$"
          title: ResourceArn
          type: string
      required:
      - Policy
      - ResourceArn
      title: PutResourcePolicy_request
      type: object
    CreateApplicationResponse_ApiGatewayProxy:
      allOf:
      - $ref: '#/components/schemas/ApiGatewayProxyInput'
      - description: 'A wrapper object holding the API Gateway endpoint type and stage
          name for the proxy. '
      example:
        StageName: ""
        EndpointType: ""
      title: CreateApplicationResponse_ApiGatewayProxy
    CreateRouteResponse_UriPathRoute:
      allOf:
      - $ref: '#/components/schemas/UriPathRouteInput'
      - description: 'Configuration for the URI path route type. '
      example:
        SourcePath: ""
        AppendSourcePath: ""
        ActivationState: ""
        Methods: ""
        IncludeChildPaths: ""
      title: CreateRouteResponse_UriPathRoute
    CreateServiceResponse_LambdaEndpoint:
      allOf:
      - $ref: '#/components/schemas/LambdaEndpointInput'
      - description: The configuration for the Lambda endpoint type.
      example:
        Arn: ""
      title: CreateServiceResponse_LambdaEndpoint
    CreateServiceResponse_UrlEndpoint:
      allOf:
      - $ref: '#/components/schemas/UrlEndpointInput'
      - description: 'The configuration for the URL endpoint type. '
      example:
        HealthUrl: ""
        Url: ""
      title: CreateServiceResponse_UrlEndpoint
    GetApplicationResponse_ApiGatewayProxy:
      allOf:
      - $ref: '#/components/schemas/ApiGatewayProxyConfig'
      - description: 'The endpoint URL of the API Gateway proxy. '
      example:
        NlbArn: ""
        ProxyUrl: ""
        NlbName: ""
        StageName: ""
        EndpointType: ""
        ApiGatewayId: ""
        VpcLinkId: ""
      title: GetApplicationResponse_ApiGatewayProxy
    GetApplicationResponse_Error:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - description: 'Any error associated with the application resource. '
      example:
        AdditionalDetails: ""
        ResourceIdentifier: ""
        AccountId: ""
        Message: ""
        ResourceType: ""
        Code: ""
      title: GetApplicationResponse_Error
    GetEnvironmentResponse_Error:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - description: 'Any error associated with the environment resource. '
      example:
        AdditionalDetails: ""
        ResourceIdentifier: ""
        AccountId: ""
        Message: ""
        ResourceType: ""
        Code: ""
      title: GetEnvironmentResponse_Error
    GetRouteResponse_Error:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - description: 'Any error associated with the route resource. '
      example:
        AdditionalDetails: ""
        ResourceIdentifier: ""
        AccountId: ""
        Message: ""
        ResourceType: ""
        Code: ""
      title: GetRouteResponse_Error
    GetServiceResponse_Error:
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - description: 'Any error associated with the service resource. '
      example:
        AdditionalDetails: ""
        ResourceIdentifier: ""
        AccountId: ""
        Message: ""
        ResourceType: ""
        Code: ""
      title: GetServiceResponse_Error
    GetServiceResponse_LambdaEndpoint:
      allOf:
      - $ref: '#/components/schemas/LambdaEndpointConfig'
      - description: <p>The configuration for the Lambda endpoint type.</p> <p>The
          <b>Arn</b> is the Amazon Resource Name (ARN) of the Lambda function associated
          with this service. </p>
      example:
        Arn: ""
      title: GetServiceResponse_LambdaEndpoint
    GetServiceResponse_UrlEndpoint:
      allOf:
      - $ref: '#/components/schemas/UrlEndpointConfig'
      - description: <p>The configuration for the URL endpoint type.</p> <p>The <b>Url</b>
          isthe URL of the endpoint type.</p> <p>The <b>HealthUrl</b> is the health
          check URL of the endpoint type. </p>
      example:
        HealthUrl: ""
        Url: ""
      title: GetServiceResponse_UrlEndpoint
    ApplicationSummary_ApiGatewayProxy:
      allOf:
      - $ref: '#/components/schemas/ApiGatewayProxySummary'
      - description: 'The endpoint URL of the Amazon API Gateway proxy. '
      title: ApplicationSummary_ApiGatewayProxy
    CreateRouteRequest_DefaultRoute:
      allOf:
      - $ref: '#/components/schemas/DefaultRouteInput'
      - description: ' Configuration for the default route type. '
      example:
        ActivationState: ""
      title: CreateRouteRequest_DefaultRoute
    CreateRouteRequest_UriPathRoute:
      allOf:
      - $ref: '#/components/schemas/UriPathRouteInput'
      - description: 'The configuration for the URI path route type. '
      example:
        SourcePath: ""
        AppendSourcePath: ""
        ActivationState: ""
        Methods: ""
        IncludeChildPaths: ""
      title: CreateRouteRequest_UriPathRoute
    CreateServiceRequest_UrlEndpoint:
      allOf:
      - $ref: '#/components/schemas/UrlEndpointInput'
      - description: "The configuration for the URL endpoint type. When creating a\
          \ route to a service, Refactor Spaces automatically resolves the address\
          \ in the <code>UrlEndpointInput</code> object URL when the Domain Name System\
          \ (DNS) time-to-live (TTL) expires, or every 60 seconds for TTLs less than\
          \ 60 seconds."
      example:
        HealthUrl: ""
        Url: ""
      title: CreateServiceRequest_UrlEndpoint
    ServiceSummary_LambdaEndpoint:
      allOf:
      - $ref: '#/components/schemas/LambdaEndpointSummary'
      - description: 'A summary of the configuration for the Lambda endpoint type. '
      title: ServiceSummary_LambdaEndpoint
    ServiceSummary_UrlEndpoint:
      allOf:
      - $ref: '#/components/schemas/UrlEndpointSummary'
      - description: 'The summary of the configuration for the URL endpoint type. '
      title: ServiceSummary_UrlEndpoint
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
