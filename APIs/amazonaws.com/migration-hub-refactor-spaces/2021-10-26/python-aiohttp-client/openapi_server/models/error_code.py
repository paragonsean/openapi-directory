# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ErrorCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    INVALID_RESOURCE_STATE = 'INVALID_RESOURCE_STATE'
    RESOURCE_LIMIT_EXCEEDED = 'RESOURCE_LIMIT_EXCEEDED'
    RESOURCE_CREATION_FAILURE = 'RESOURCE_CREATION_FAILURE'
    RESOURCE_UPDATE_FAILURE = 'RESOURCE_UPDATE_FAILURE'
    SERVICE_ENDPOINT_HEALTH_CHECK_FAILURE = 'SERVICE_ENDPOINT_HEALTH_CHECK_FAILURE'
    RESOURCE_DELETION_FAILURE = 'RESOURCE_DELETION_FAILURE'
    RESOURCE_RETRIEVAL_FAILURE = 'RESOURCE_RETRIEVAL_FAILURE'
    RESOURCE_IN_USE = 'RESOURCE_IN_USE'
    RESOURCE_NOT_FOUND = 'RESOURCE_NOT_FOUND'
    STATE_TRANSITION_FAILURE = 'STATE_TRANSITION_FAILURE'
    REQUEST_LIMIT_EXCEEDED = 'REQUEST_LIMIT_EXCEEDED'
    NOT_AUTHORIZED = 'NOT_AUTHORIZED'

    def __init__(self):
        """ErrorCode - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErrorCode of this ErrorCode.
        """
        return util.deserialize_model(dikt, cls)
