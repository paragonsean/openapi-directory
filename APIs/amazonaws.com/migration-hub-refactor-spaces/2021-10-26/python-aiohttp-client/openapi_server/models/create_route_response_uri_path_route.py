# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.route_activation_state import RouteActivationState
from openapi_server import util


class CreateRouteResponseUriPathRoute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activation_state: RouteActivationState=None, append_source_path: bool=None, include_child_paths: bool=None, methods: List=None, source_path: str=None):
        """CreateRouteResponseUriPathRoute - a model defined in OpenAPI

        :param activation_state: The activation_state of this CreateRouteResponseUriPathRoute.
        :param append_source_path: The append_source_path of this CreateRouteResponseUriPathRoute.
        :param include_child_paths: The include_child_paths of this CreateRouteResponseUriPathRoute.
        :param methods: The methods of this CreateRouteResponseUriPathRoute.
        :param source_path: The source_path of this CreateRouteResponseUriPathRoute.
        """
        self.openapi_types = {
            'activation_state': RouteActivationState,
            'append_source_path': bool,
            'include_child_paths': bool,
            'methods': List,
            'source_path': str
        }

        self.attribute_map = {
            'activation_state': 'ActivationState',
            'append_source_path': 'AppendSourcePath',
            'include_child_paths': 'IncludeChildPaths',
            'methods': 'Methods',
            'source_path': 'SourcePath'
        }

        self._activation_state = activation_state
        self._append_source_path = append_source_path
        self._include_child_paths = include_child_paths
        self._methods = methods
        self._source_path = source_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateRouteResponseUriPathRoute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateRouteResponse_UriPathRoute of this CreateRouteResponseUriPathRoute.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activation_state(self):
        """Gets the activation_state of this CreateRouteResponseUriPathRoute.


        :return: The activation_state of this CreateRouteResponseUriPathRoute.
        :rtype: RouteActivationState
        """
        return self._activation_state

    @activation_state.setter
    def activation_state(self, activation_state):
        """Sets the activation_state of this CreateRouteResponseUriPathRoute.


        :param activation_state: The activation_state of this CreateRouteResponseUriPathRoute.
        :type activation_state: RouteActivationState
        """
        if activation_state is None:
            raise ValueError("Invalid value for `activation_state`, must not be `None`")

        self._activation_state = activation_state

    @property
    def append_source_path(self):
        """Gets the append_source_path of this CreateRouteResponseUriPathRoute.


        :return: The append_source_path of this CreateRouteResponseUriPathRoute.
        :rtype: bool
        """
        return self._append_source_path

    @append_source_path.setter
    def append_source_path(self, append_source_path):
        """Sets the append_source_path of this CreateRouteResponseUriPathRoute.


        :param append_source_path: The append_source_path of this CreateRouteResponseUriPathRoute.
        :type append_source_path: bool
        """

        self._append_source_path = append_source_path

    @property
    def include_child_paths(self):
        """Gets the include_child_paths of this CreateRouteResponseUriPathRoute.


        :return: The include_child_paths of this CreateRouteResponseUriPathRoute.
        :rtype: bool
        """
        return self._include_child_paths

    @include_child_paths.setter
    def include_child_paths(self, include_child_paths):
        """Sets the include_child_paths of this CreateRouteResponseUriPathRoute.


        :param include_child_paths: The include_child_paths of this CreateRouteResponseUriPathRoute.
        :type include_child_paths: bool
        """

        self._include_child_paths = include_child_paths

    @property
    def methods(self):
        """Gets the methods of this CreateRouteResponseUriPathRoute.


        :return: The methods of this CreateRouteResponseUriPathRoute.
        :rtype: List
        """
        return self._methods

    @methods.setter
    def methods(self, methods):
        """Sets the methods of this CreateRouteResponseUriPathRoute.


        :param methods: The methods of this CreateRouteResponseUriPathRoute.
        :type methods: List
        """

        self._methods = methods

    @property
    def source_path(self):
        """Gets the source_path of this CreateRouteResponseUriPathRoute.


        :return: The source_path of this CreateRouteResponseUriPathRoute.
        :rtype: str
        """
        return self._source_path

    @source_path.setter
    def source_path(self, source_path):
        """Sets the source_path of this CreateRouteResponseUriPathRoute.


        :param source_path: The source_path of this CreateRouteResponseUriPathRoute.
        :type source_path: str
        """
        if source_path is None:
            raise ValueError("Invalid value for `source_path`, must not be `None`")

        self._source_path = source_path
