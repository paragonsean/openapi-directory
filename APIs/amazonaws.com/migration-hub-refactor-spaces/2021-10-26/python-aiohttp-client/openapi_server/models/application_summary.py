# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_state import ApplicationState
from openapi_server.models.application_summary_api_gateway_proxy import ApplicationSummaryApiGatewayProxy
from openapi_server.models.get_application_response_error import GetApplicationResponseError
from openapi_server.models.proxy_type import ProxyType
from openapi_server import util


class ApplicationSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_gateway_proxy: ApplicationSummaryApiGatewayProxy=None, application_id: str=None, arn: str=None, created_by_account_id: str=None, created_time: datetime=None, environment_id: str=None, error: GetApplicationResponseError=None, last_updated_time: datetime=None, name: str=None, owner_account_id: str=None, proxy_type: ProxyType=None, state: ApplicationState=None, tags: Dict=None, vpc_id: str=None):
        """ApplicationSummary - a model defined in OpenAPI

        :param api_gateway_proxy: The api_gateway_proxy of this ApplicationSummary.
        :param application_id: The application_id of this ApplicationSummary.
        :param arn: The arn of this ApplicationSummary.
        :param created_by_account_id: The created_by_account_id of this ApplicationSummary.
        :param created_time: The created_time of this ApplicationSummary.
        :param environment_id: The environment_id of this ApplicationSummary.
        :param error: The error of this ApplicationSummary.
        :param last_updated_time: The last_updated_time of this ApplicationSummary.
        :param name: The name of this ApplicationSummary.
        :param owner_account_id: The owner_account_id of this ApplicationSummary.
        :param proxy_type: The proxy_type of this ApplicationSummary.
        :param state: The state of this ApplicationSummary.
        :param tags: The tags of this ApplicationSummary.
        :param vpc_id: The vpc_id of this ApplicationSummary.
        """
        self.openapi_types = {
            'api_gateway_proxy': ApplicationSummaryApiGatewayProxy,
            'application_id': str,
            'arn': str,
            'created_by_account_id': str,
            'created_time': datetime,
            'environment_id': str,
            'error': GetApplicationResponseError,
            'last_updated_time': datetime,
            'name': str,
            'owner_account_id': str,
            'proxy_type': ProxyType,
            'state': ApplicationState,
            'tags': Dict,
            'vpc_id': str
        }

        self.attribute_map = {
            'api_gateway_proxy': 'ApiGatewayProxy',
            'application_id': 'ApplicationId',
            'arn': 'Arn',
            'created_by_account_id': 'CreatedByAccountId',
            'created_time': 'CreatedTime',
            'environment_id': 'EnvironmentId',
            'error': 'Error',
            'last_updated_time': 'LastUpdatedTime',
            'name': 'Name',
            'owner_account_id': 'OwnerAccountId',
            'proxy_type': 'ProxyType',
            'state': 'State',
            'tags': 'Tags',
            'vpc_id': 'VpcId'
        }

        self._api_gateway_proxy = api_gateway_proxy
        self._application_id = application_id
        self._arn = arn
        self._created_by_account_id = created_by_account_id
        self._created_time = created_time
        self._environment_id = environment_id
        self._error = error
        self._last_updated_time = last_updated_time
        self._name = name
        self._owner_account_id = owner_account_id
        self._proxy_type = proxy_type
        self._state = state
        self._tags = tags
        self._vpc_id = vpc_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationSummary of this ApplicationSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_gateway_proxy(self):
        """Gets the api_gateway_proxy of this ApplicationSummary.


        :return: The api_gateway_proxy of this ApplicationSummary.
        :rtype: ApplicationSummaryApiGatewayProxy
        """
        return self._api_gateway_proxy

    @api_gateway_proxy.setter
    def api_gateway_proxy(self, api_gateway_proxy):
        """Sets the api_gateway_proxy of this ApplicationSummary.


        :param api_gateway_proxy: The api_gateway_proxy of this ApplicationSummary.
        :type api_gateway_proxy: ApplicationSummaryApiGatewayProxy
        """

        self._api_gateway_proxy = api_gateway_proxy

    @property
    def application_id(self):
        """Gets the application_id of this ApplicationSummary.


        :return: The application_id of this ApplicationSummary.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this ApplicationSummary.


        :param application_id: The application_id of this ApplicationSummary.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def arn(self):
        """Gets the arn of this ApplicationSummary.


        :return: The arn of this ApplicationSummary.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this ApplicationSummary.


        :param arn: The arn of this ApplicationSummary.
        :type arn: str
        """

        self._arn = arn

    @property
    def created_by_account_id(self):
        """Gets the created_by_account_id of this ApplicationSummary.


        :return: The created_by_account_id of this ApplicationSummary.
        :rtype: str
        """
        return self._created_by_account_id

    @created_by_account_id.setter
    def created_by_account_id(self, created_by_account_id):
        """Sets the created_by_account_id of this ApplicationSummary.


        :param created_by_account_id: The created_by_account_id of this ApplicationSummary.
        :type created_by_account_id: str
        """

        self._created_by_account_id = created_by_account_id

    @property
    def created_time(self):
        """Gets the created_time of this ApplicationSummary.


        :return: The created_time of this ApplicationSummary.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this ApplicationSummary.


        :param created_time: The created_time of this ApplicationSummary.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def environment_id(self):
        """Gets the environment_id of this ApplicationSummary.


        :return: The environment_id of this ApplicationSummary.
        :rtype: str
        """
        return self._environment_id

    @environment_id.setter
    def environment_id(self, environment_id):
        """Sets the environment_id of this ApplicationSummary.


        :param environment_id: The environment_id of this ApplicationSummary.
        :type environment_id: str
        """

        self._environment_id = environment_id

    @property
    def error(self):
        """Gets the error of this ApplicationSummary.


        :return: The error of this ApplicationSummary.
        :rtype: GetApplicationResponseError
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this ApplicationSummary.


        :param error: The error of this ApplicationSummary.
        :type error: GetApplicationResponseError
        """

        self._error = error

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this ApplicationSummary.


        :return: The last_updated_time of this ApplicationSummary.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this ApplicationSummary.


        :param last_updated_time: The last_updated_time of this ApplicationSummary.
        :type last_updated_time: datetime
        """

        self._last_updated_time = last_updated_time

    @property
    def name(self):
        """Gets the name of this ApplicationSummary.


        :return: The name of this ApplicationSummary.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApplicationSummary.


        :param name: The name of this ApplicationSummary.
        :type name: str
        """

        self._name = name

    @property
    def owner_account_id(self):
        """Gets the owner_account_id of this ApplicationSummary.


        :return: The owner_account_id of this ApplicationSummary.
        :rtype: str
        """
        return self._owner_account_id

    @owner_account_id.setter
    def owner_account_id(self, owner_account_id):
        """Sets the owner_account_id of this ApplicationSummary.


        :param owner_account_id: The owner_account_id of this ApplicationSummary.
        :type owner_account_id: str
        """

        self._owner_account_id = owner_account_id

    @property
    def proxy_type(self):
        """Gets the proxy_type of this ApplicationSummary.


        :return: The proxy_type of this ApplicationSummary.
        :rtype: ProxyType
        """
        return self._proxy_type

    @proxy_type.setter
    def proxy_type(self, proxy_type):
        """Sets the proxy_type of this ApplicationSummary.


        :param proxy_type: The proxy_type of this ApplicationSummary.
        :type proxy_type: ProxyType
        """

        self._proxy_type = proxy_type

    @property
    def state(self):
        """Gets the state of this ApplicationSummary.


        :return: The state of this ApplicationSummary.
        :rtype: ApplicationState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ApplicationSummary.


        :param state: The state of this ApplicationSummary.
        :type state: ApplicationState
        """

        self._state = state

    @property
    def tags(self):
        """Gets the tags of this ApplicationSummary.


        :return: The tags of this ApplicationSummary.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this ApplicationSummary.


        :param tags: The tags of this ApplicationSummary.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def vpc_id(self):
        """Gets the vpc_id of this ApplicationSummary.


        :return: The vpc_id of this ApplicationSummary.
        :rtype: str
        """
        return self._vpc_id

    @vpc_id.setter
    def vpc_id(self, vpc_id):
        """Sets the vpc_id of this ApplicationSummary.


        :param vpc_id: The vpc_id of this ApplicationSummary.
        :type vpc_id: str
        """

        self._vpc_id = vpc_id
