# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.environment_state import EnvironmentState
from openapi_server import util


class DeleteEnvironmentResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, environment_id: str=None, last_updated_time: datetime=None, name: str=None, state: EnvironmentState=None):
        """DeleteEnvironmentResponse - a model defined in OpenAPI

        :param arn: The arn of this DeleteEnvironmentResponse.
        :param environment_id: The environment_id of this DeleteEnvironmentResponse.
        :param last_updated_time: The last_updated_time of this DeleteEnvironmentResponse.
        :param name: The name of this DeleteEnvironmentResponse.
        :param state: The state of this DeleteEnvironmentResponse.
        """
        self.openapi_types = {
            'arn': str,
            'environment_id': str,
            'last_updated_time': datetime,
            'name': str,
            'state': EnvironmentState
        }

        self.attribute_map = {
            'arn': 'Arn',
            'environment_id': 'EnvironmentId',
            'last_updated_time': 'LastUpdatedTime',
            'name': 'Name',
            'state': 'State'
        }

        self._arn = arn
        self._environment_id = environment_id
        self._last_updated_time = last_updated_time
        self._name = name
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteEnvironmentResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteEnvironmentResponse of this DeleteEnvironmentResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this DeleteEnvironmentResponse.


        :return: The arn of this DeleteEnvironmentResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this DeleteEnvironmentResponse.


        :param arn: The arn of this DeleteEnvironmentResponse.
        :type arn: str
        """

        self._arn = arn

    @property
    def environment_id(self):
        """Gets the environment_id of this DeleteEnvironmentResponse.


        :return: The environment_id of this DeleteEnvironmentResponse.
        :rtype: str
        """
        return self._environment_id

    @environment_id.setter
    def environment_id(self, environment_id):
        """Sets the environment_id of this DeleteEnvironmentResponse.


        :param environment_id: The environment_id of this DeleteEnvironmentResponse.
        :type environment_id: str
        """

        self._environment_id = environment_id

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this DeleteEnvironmentResponse.


        :return: The last_updated_time of this DeleteEnvironmentResponse.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this DeleteEnvironmentResponse.


        :param last_updated_time: The last_updated_time of this DeleteEnvironmentResponse.
        :type last_updated_time: datetime
        """

        self._last_updated_time = last_updated_time

    @property
    def name(self):
        """Gets the name of this DeleteEnvironmentResponse.


        :return: The name of this DeleteEnvironmentResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DeleteEnvironmentResponse.


        :param name: The name of this DeleteEnvironmentResponse.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this DeleteEnvironmentResponse.


        :return: The state of this DeleteEnvironmentResponse.
        :rtype: EnvironmentState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this DeleteEnvironmentResponse.


        :param state: The state of this DeleteEnvironmentResponse.
        :type state: EnvironmentState
        """

        self._state = state
