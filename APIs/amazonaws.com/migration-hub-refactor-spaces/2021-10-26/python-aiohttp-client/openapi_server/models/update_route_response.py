# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.route_state import RouteState
from openapi_server import util


class UpdateRouteResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_id: str=None, arn: str=None, last_updated_time: datetime=None, route_id: str=None, service_id: str=None, state: RouteState=None):
        """UpdateRouteResponse - a model defined in OpenAPI

        :param application_id: The application_id of this UpdateRouteResponse.
        :param arn: The arn of this UpdateRouteResponse.
        :param last_updated_time: The last_updated_time of this UpdateRouteResponse.
        :param route_id: The route_id of this UpdateRouteResponse.
        :param service_id: The service_id of this UpdateRouteResponse.
        :param state: The state of this UpdateRouteResponse.
        """
        self.openapi_types = {
            'application_id': str,
            'arn': str,
            'last_updated_time': datetime,
            'route_id': str,
            'service_id': str,
            'state': RouteState
        }

        self.attribute_map = {
            'application_id': 'ApplicationId',
            'arn': 'Arn',
            'last_updated_time': 'LastUpdatedTime',
            'route_id': 'RouteId',
            'service_id': 'ServiceId',
            'state': 'State'
        }

        self._application_id = application_id
        self._arn = arn
        self._last_updated_time = last_updated_time
        self._route_id = route_id
        self._service_id = service_id
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateRouteResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateRouteResponse of this UpdateRouteResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_id(self):
        """Gets the application_id of this UpdateRouteResponse.


        :return: The application_id of this UpdateRouteResponse.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this UpdateRouteResponse.


        :param application_id: The application_id of this UpdateRouteResponse.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def arn(self):
        """Gets the arn of this UpdateRouteResponse.


        :return: The arn of this UpdateRouteResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this UpdateRouteResponse.


        :param arn: The arn of this UpdateRouteResponse.
        :type arn: str
        """

        self._arn = arn

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this UpdateRouteResponse.


        :return: The last_updated_time of this UpdateRouteResponse.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this UpdateRouteResponse.


        :param last_updated_time: The last_updated_time of this UpdateRouteResponse.
        :type last_updated_time: datetime
        """

        self._last_updated_time = last_updated_time

    @property
    def route_id(self):
        """Gets the route_id of this UpdateRouteResponse.


        :return: The route_id of this UpdateRouteResponse.
        :rtype: str
        """
        return self._route_id

    @route_id.setter
    def route_id(self, route_id):
        """Sets the route_id of this UpdateRouteResponse.


        :param route_id: The route_id of this UpdateRouteResponse.
        :type route_id: str
        """

        self._route_id = route_id

    @property
    def service_id(self):
        """Gets the service_id of this UpdateRouteResponse.


        :return: The service_id of this UpdateRouteResponse.
        :rtype: str
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id):
        """Sets the service_id of this UpdateRouteResponse.


        :param service_id: The service_id of this UpdateRouteResponse.
        :type service_id: str
        """

        self._service_id = service_id

    @property
    def state(self):
        """Gets the state of this UpdateRouteResponse.


        :return: The state of this UpdateRouteResponse.
        :rtype: RouteState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this UpdateRouteResponse.


        :param state: The state of this UpdateRouteResponse.
        :type state: RouteState
        """

        self._state = state
