/**
 * AWS Migration Hub Refactor Spaces
 * <p><fullname>Amazon Web Services Migration Hub Refactor Spaces</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Amazon Web Services Migration Hub Refactor Spaces (Refactor Spaces). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>To share Refactor Spaces environments with other Amazon Web Services accounts or with Organizations and their OUs, use Resource Access Manager's <code>CreateResourceShare</code> API. See <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> in the <i>Amazon Web Services RAM API Reference</i>.</p></p>
 *
 * The version of the OpenAPI document: 2021-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteEnvironmentResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteEnvironmentResponse::OAIDeleteEnvironmentResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteEnvironmentResponse::OAIDeleteEnvironmentResponse() {
    this->initializeModel();
}

OAIDeleteEnvironmentResponse::~OAIDeleteEnvironmentResponse() {}

void OAIDeleteEnvironmentResponse::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_environment_id_isSet = false;
    m_environment_id_isValid = false;

    m_last_updated_time_isSet = false;
    m_last_updated_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIDeleteEnvironmentResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteEnvironmentResponse::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_environment_id_isValid = ::OpenAPI::fromJsonValue(m_environment_id, json[QString("EnvironmentId")]);
    m_environment_id_isSet = !json[QString("EnvironmentId")].isNull() && m_environment_id_isValid;

    m_last_updated_time_isValid = ::OpenAPI::fromJsonValue(m_last_updated_time, json[QString("LastUpdatedTime")]);
    m_last_updated_time_isSet = !json[QString("LastUpdatedTime")].isNull() && m_last_updated_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("State")]);
    m_state_isSet = !json[QString("State")].isNull() && m_state_isValid;
}

QString OAIDeleteEnvironmentResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteEnvironmentResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_environment_id_isSet) {
        obj.insert(QString("EnvironmentId"), ::OpenAPI::toJsonValue(m_environment_id));
    }
    if (m_last_updated_time_isSet) {
        obj.insert(QString("LastUpdatedTime"), ::OpenAPI::toJsonValue(m_last_updated_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_state.isSet()) {
        obj.insert(QString("State"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIDeleteEnvironmentResponse::getArn() const {
    return m_arn;
}
void OAIDeleteEnvironmentResponse::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIDeleteEnvironmentResponse::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIDeleteEnvironmentResponse::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAIDeleteEnvironmentResponse::getEnvironmentId() const {
    return m_environment_id;
}
void OAIDeleteEnvironmentResponse::setEnvironmentId(const QString &environment_id) {
    m_environment_id = environment_id;
    m_environment_id_isSet = true;
}

bool OAIDeleteEnvironmentResponse::is_environment_id_Set() const{
    return m_environment_id_isSet;
}

bool OAIDeleteEnvironmentResponse::is_environment_id_Valid() const{
    return m_environment_id_isValid;
}

QDateTime OAIDeleteEnvironmentResponse::getLastUpdatedTime() const {
    return m_last_updated_time;
}
void OAIDeleteEnvironmentResponse::setLastUpdatedTime(const QDateTime &last_updated_time) {
    m_last_updated_time = last_updated_time;
    m_last_updated_time_isSet = true;
}

bool OAIDeleteEnvironmentResponse::is_last_updated_time_Set() const{
    return m_last_updated_time_isSet;
}

bool OAIDeleteEnvironmentResponse::is_last_updated_time_Valid() const{
    return m_last_updated_time_isValid;
}

QString OAIDeleteEnvironmentResponse::getName() const {
    return m_name;
}
void OAIDeleteEnvironmentResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDeleteEnvironmentResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDeleteEnvironmentResponse::is_name_Valid() const{
    return m_name_isValid;
}

OAIEnvironmentState OAIDeleteEnvironmentResponse::getState() const {
    return m_state;
}
void OAIDeleteEnvironmentResponse::setState(const OAIEnvironmentState &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIDeleteEnvironmentResponse::is_state_Set() const{
    return m_state_isSet;
}

bool OAIDeleteEnvironmentResponse::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIDeleteEnvironmentResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteEnvironmentResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
