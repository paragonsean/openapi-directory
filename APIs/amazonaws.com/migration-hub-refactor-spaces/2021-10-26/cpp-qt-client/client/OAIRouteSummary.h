/**
 * AWS Migration Hub Refactor Spaces
 * <p><fullname>Amazon Web Services Migration Hub Refactor Spaces</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Amazon Web Services Migration Hub Refactor Spaces (Refactor Spaces). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>To share Refactor Spaces environments with other Amazon Web Services accounts or with Organizations and their OUs, use Resource Access Manager's <code>CreateResourceShare</code> API. See <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> in the <i>Amazon Web Services RAM API Reference</i>.</p></p>
 *
 * The version of the OpenAPI document: 2021-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRouteSummary.h
 *
 * The summary information for the routes as a response to &lt;code&gt;ListRoutes&lt;/code&gt;. 
 */

#ifndef OAIRouteSummary_H
#define OAIRouteSummary_H

#include <QJsonObject>

#include "OAIGetRouteResponse_Error.h"
#include "OAIRouteState.h"
#include "OAIRouteType.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetRouteResponse_Error;

class OAIRouteSummary : public OAIObject {
public:
    OAIRouteSummary();
    OAIRouteSummary(QString json);
    ~OAIRouteSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getAppendSourcePath() const;
    void setAppendSourcePath(const bool &append_source_path);
    bool is_append_source_path_Set() const;
    bool is_append_source_path_Valid() const;

    QString getApplicationId() const;
    void setApplicationId(const QString &application_id);
    bool is_application_id_Set() const;
    bool is_application_id_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getCreatedByAccountId() const;
    void setCreatedByAccountId(const QString &created_by_account_id);
    bool is_created_by_account_id_Set() const;
    bool is_created_by_account_id_Valid() const;

    QDateTime getCreatedTime() const;
    void setCreatedTime(const QDateTime &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    QString getEnvironmentId() const;
    void setEnvironmentId(const QString &environment_id);
    bool is_environment_id_Set() const;
    bool is_environment_id_Valid() const;

    OAIGetRouteResponse_Error getError() const;
    void setError(const OAIGetRouteResponse_Error &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    bool getIncludeChildPaths() const;
    void setIncludeChildPaths(const bool &include_child_paths);
    bool is_include_child_paths_Set() const;
    bool is_include_child_paths_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    QList getMethods() const;
    void setMethods(const QList &methods);
    bool is_methods_Set() const;
    bool is_methods_Valid() const;

    QString getOwnerAccountId() const;
    void setOwnerAccountId(const QString &owner_account_id);
    bool is_owner_account_id_Set() const;
    bool is_owner_account_id_Valid() const;

    QMap getPathResourceToId() const;
    void setPathResourceToId(const QMap &path_resource_to_id);
    bool is_path_resource_to_id_Set() const;
    bool is_path_resource_to_id_Valid() const;

    QString getRouteId() const;
    void setRouteId(const QString &route_id);
    bool is_route_id_Set() const;
    bool is_route_id_Valid() const;

    OAIRouteType getRouteType() const;
    void setRouteType(const OAIRouteType &route_type);
    bool is_route_type_Set() const;
    bool is_route_type_Valid() const;

    QString getServiceId() const;
    void setServiceId(const QString &service_id);
    bool is_service_id_Set() const;
    bool is_service_id_Valid() const;

    QString getSourcePath() const;
    void setSourcePath(const QString &source_path);
    bool is_source_path_Set() const;
    bool is_source_path_Valid() const;

    OAIRouteState getState() const;
    void setState(const OAIRouteState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_append_source_path;
    bool m_append_source_path_isSet;
    bool m_append_source_path_isValid;

    QString m_application_id;
    bool m_application_id_isSet;
    bool m_application_id_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_created_by_account_id;
    bool m_created_by_account_id_isSet;
    bool m_created_by_account_id_isValid;

    QDateTime m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    QString m_environment_id;
    bool m_environment_id_isSet;
    bool m_environment_id_isValid;

    OAIGetRouteResponse_Error m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    bool m_include_child_paths;
    bool m_include_child_paths_isSet;
    bool m_include_child_paths_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    QList m_methods;
    bool m_methods_isSet;
    bool m_methods_isValid;

    QString m_owner_account_id;
    bool m_owner_account_id_isSet;
    bool m_owner_account_id_isValid;

    QMap m_path_resource_to_id;
    bool m_path_resource_to_id_isSet;
    bool m_path_resource_to_id_isValid;

    QString m_route_id;
    bool m_route_id_isSet;
    bool m_route_id_isValid;

    OAIRouteType m_route_type;
    bool m_route_type_isSet;
    bool m_route_type_isValid;

    QString m_service_id;
    bool m_service_id_isSet;
    bool m_service_id_isValid;

    QString m_source_path;
    bool m_source_path_isSet;
    bool m_source_path_isValid;

    OAIRouteState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRouteSummary)

#endif // OAIRouteSummary_H
