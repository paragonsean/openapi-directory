/**
 * AWS Migration Hub Refactor Spaces
 * <p><fullname>Amazon Web Services Migration Hub Refactor Spaces</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Amazon Web Services Migration Hub Refactor Spaces (Refactor Spaces). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>To share Refactor Spaces environments with other Amazon Web Services accounts or with Organizations and their OUs, use Resource Access Manager's <code>CreateResourceShare</code> API. See <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> in the <i>Amazon Web Services RAM API Reference</i>.</p></p>
 *
 * The version of the OpenAPI document: 2021-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListEnvironmentsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListEnvironmentsResponse::OAIListEnvironmentsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListEnvironmentsResponse::OAIListEnvironmentsResponse() {
    this->initializeModel();
}

OAIListEnvironmentsResponse::~OAIListEnvironmentsResponse() {}

void OAIListEnvironmentsResponse::initializeModel() {

    m_environment_summary_list_isSet = false;
    m_environment_summary_list_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListEnvironmentsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListEnvironmentsResponse::fromJsonObject(QJsonObject json) {

    m_environment_summary_list_isValid = ::OpenAPI::fromJsonValue(m_environment_summary_list, json[QString("EnvironmentSummaryList")]);
    m_environment_summary_list_isSet = !json[QString("EnvironmentSummaryList")].isNull() && m_environment_summary_list_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListEnvironmentsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListEnvironmentsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_environment_summary_list.isSet()) {
        obj.insert(QString("EnvironmentSummaryList"), ::OpenAPI::toJsonValue(m_environment_summary_list));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListEnvironmentsResponse::getEnvironmentSummaryList() const {
    return m_environment_summary_list;
}
void OAIListEnvironmentsResponse::setEnvironmentSummaryList(const QList &environment_summary_list) {
    m_environment_summary_list = environment_summary_list;
    m_environment_summary_list_isSet = true;
}

bool OAIListEnvironmentsResponse::is_environment_summary_list_Set() const{
    return m_environment_summary_list_isSet;
}

bool OAIListEnvironmentsResponse::is_environment_summary_list_Valid() const{
    return m_environment_summary_list_isValid;
}

QString OAIListEnvironmentsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListEnvironmentsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListEnvironmentsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListEnvironmentsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListEnvironmentsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_environment_summary_list.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListEnvironmentsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
