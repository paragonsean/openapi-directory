/**
 * AWS Migration Hub Refactor Spaces
 * <p><fullname>Amazon Web Services Migration Hub Refactor Spaces</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Amazon Web Services Migration Hub Refactor Spaces (Refactor Spaces). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>To share Refactor Spaces environments with other Amazon Web Services accounts or with Organizations and their OUs, use Resource Access Manager's <code>CreateResourceShare</code> API. See <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> in the <i>Amazon Web Services RAM API Reference</i>.</p></p>
 *
 * The version of the OpenAPI document: 2021-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiGatewayProxyInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiGatewayProxyInput::OAIApiGatewayProxyInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiGatewayProxyInput::OAIApiGatewayProxyInput() {
    this->initializeModel();
}

OAIApiGatewayProxyInput::~OAIApiGatewayProxyInput() {}

void OAIApiGatewayProxyInput::initializeModel() {

    m_endpoint_type_isSet = false;
    m_endpoint_type_isValid = false;

    m_stage_name_isSet = false;
    m_stage_name_isValid = false;
}

void OAIApiGatewayProxyInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApiGatewayProxyInput::fromJsonObject(QJsonObject json) {

    m_endpoint_type_isValid = ::OpenAPI::fromJsonValue(m_endpoint_type, json[QString("EndpointType")]);
    m_endpoint_type_isSet = !json[QString("EndpointType")].isNull() && m_endpoint_type_isValid;

    m_stage_name_isValid = ::OpenAPI::fromJsonValue(m_stage_name, json[QString("StageName")]);
    m_stage_name_isSet = !json[QString("StageName")].isNull() && m_stage_name_isValid;
}

QString OAIApiGatewayProxyInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApiGatewayProxyInput::asJsonObject() const {
    QJsonObject obj;
    if (m_endpoint_type.isSet()) {
        obj.insert(QString("EndpointType"), ::OpenAPI::toJsonValue(m_endpoint_type));
    }
    if (m_stage_name_isSet) {
        obj.insert(QString("StageName"), ::OpenAPI::toJsonValue(m_stage_name));
    }
    return obj;
}

OAIApiGatewayEndpointType OAIApiGatewayProxyInput::getEndpointType() const {
    return m_endpoint_type;
}
void OAIApiGatewayProxyInput::setEndpointType(const OAIApiGatewayEndpointType &endpoint_type) {
    m_endpoint_type = endpoint_type;
    m_endpoint_type_isSet = true;
}

bool OAIApiGatewayProxyInput::is_endpoint_type_Set() const{
    return m_endpoint_type_isSet;
}

bool OAIApiGatewayProxyInput::is_endpoint_type_Valid() const{
    return m_endpoint_type_isValid;
}

QString OAIApiGatewayProxyInput::getStageName() const {
    return m_stage_name;
}
void OAIApiGatewayProxyInput::setStageName(const QString &stage_name) {
    m_stage_name = stage_name;
    m_stage_name_isSet = true;
}

bool OAIApiGatewayProxyInput::is_stage_name_Set() const{
    return m_stage_name_isSet;
}

bool OAIApiGatewayProxyInput::is_stage_name_Valid() const{
    return m_stage_name_isValid;
}

bool OAIApiGatewayProxyInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_endpoint_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_stage_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApiGatewayProxyInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
