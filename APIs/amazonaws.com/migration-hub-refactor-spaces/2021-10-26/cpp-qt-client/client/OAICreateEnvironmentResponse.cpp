/**
 * AWS Migration Hub Refactor Spaces
 * <p><fullname>Amazon Web Services Migration Hub Refactor Spaces</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Amazon Web Services Migration Hub Refactor Spaces (Refactor Spaces). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>To share Refactor Spaces environments with other Amazon Web Services accounts or with Organizations and their OUs, use Resource Access Manager's <code>CreateResourceShare</code> API. See <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> in the <i>Amazon Web Services RAM API Reference</i>.</p></p>
 *
 * The version of the OpenAPI document: 2021-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateEnvironmentResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateEnvironmentResponse::OAICreateEnvironmentResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateEnvironmentResponse::OAICreateEnvironmentResponse() {
    this->initializeModel();
}

OAICreateEnvironmentResponse::~OAICreateEnvironmentResponse() {}

void OAICreateEnvironmentResponse::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_environment_id_isSet = false;
    m_environment_id_isValid = false;

    m_last_updated_time_isSet = false;
    m_last_updated_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_network_fabric_type_isSet = false;
    m_network_fabric_type_isValid = false;

    m_owner_account_id_isSet = false;
    m_owner_account_id_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateEnvironmentResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateEnvironmentResponse::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("CreatedTime")]);
    m_created_time_isSet = !json[QString("CreatedTime")].isNull() && m_created_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_environment_id_isValid = ::OpenAPI::fromJsonValue(m_environment_id, json[QString("EnvironmentId")]);
    m_environment_id_isSet = !json[QString("EnvironmentId")].isNull() && m_environment_id_isValid;

    m_last_updated_time_isValid = ::OpenAPI::fromJsonValue(m_last_updated_time, json[QString("LastUpdatedTime")]);
    m_last_updated_time_isSet = !json[QString("LastUpdatedTime")].isNull() && m_last_updated_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_network_fabric_type_isValid = ::OpenAPI::fromJsonValue(m_network_fabric_type, json[QString("NetworkFabricType")]);
    m_network_fabric_type_isSet = !json[QString("NetworkFabricType")].isNull() && m_network_fabric_type_isValid;

    m_owner_account_id_isValid = ::OpenAPI::fromJsonValue(m_owner_account_id, json[QString("OwnerAccountId")]);
    m_owner_account_id_isSet = !json[QString("OwnerAccountId")].isNull() && m_owner_account_id_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("State")]);
    m_state_isSet = !json[QString("State")].isNull() && m_state_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAICreateEnvironmentResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateEnvironmentResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("CreatedTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_environment_id_isSet) {
        obj.insert(QString("EnvironmentId"), ::OpenAPI::toJsonValue(m_environment_id));
    }
    if (m_last_updated_time_isSet) {
        obj.insert(QString("LastUpdatedTime"), ::OpenAPI::toJsonValue(m_last_updated_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_network_fabric_type.isSet()) {
        obj.insert(QString("NetworkFabricType"), ::OpenAPI::toJsonValue(m_network_fabric_type));
    }
    if (m_owner_account_id_isSet) {
        obj.insert(QString("OwnerAccountId"), ::OpenAPI::toJsonValue(m_owner_account_id));
    }
    if (m_state.isSet()) {
        obj.insert(QString("State"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAICreateEnvironmentResponse::getArn() const {
    return m_arn;
}
void OAICreateEnvironmentResponse::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAICreateEnvironmentResponse::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAICreateEnvironmentResponse::is_arn_Valid() const{
    return m_arn_isValid;
}

QDateTime OAICreateEnvironmentResponse::getCreatedTime() const {
    return m_created_time;
}
void OAICreateEnvironmentResponse::setCreatedTime(const QDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAICreateEnvironmentResponse::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAICreateEnvironmentResponse::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QString OAICreateEnvironmentResponse::getDescription() const {
    return m_description;
}
void OAICreateEnvironmentResponse::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateEnvironmentResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateEnvironmentResponse::is_description_Valid() const{
    return m_description_isValid;
}

QString OAICreateEnvironmentResponse::getEnvironmentId() const {
    return m_environment_id;
}
void OAICreateEnvironmentResponse::setEnvironmentId(const QString &environment_id) {
    m_environment_id = environment_id;
    m_environment_id_isSet = true;
}

bool OAICreateEnvironmentResponse::is_environment_id_Set() const{
    return m_environment_id_isSet;
}

bool OAICreateEnvironmentResponse::is_environment_id_Valid() const{
    return m_environment_id_isValid;
}

QDateTime OAICreateEnvironmentResponse::getLastUpdatedTime() const {
    return m_last_updated_time;
}
void OAICreateEnvironmentResponse::setLastUpdatedTime(const QDateTime &last_updated_time) {
    m_last_updated_time = last_updated_time;
    m_last_updated_time_isSet = true;
}

bool OAICreateEnvironmentResponse::is_last_updated_time_Set() const{
    return m_last_updated_time_isSet;
}

bool OAICreateEnvironmentResponse::is_last_updated_time_Valid() const{
    return m_last_updated_time_isValid;
}

QString OAICreateEnvironmentResponse::getName() const {
    return m_name;
}
void OAICreateEnvironmentResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateEnvironmentResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateEnvironmentResponse::is_name_Valid() const{
    return m_name_isValid;
}

OAINetworkFabricType OAICreateEnvironmentResponse::getNetworkFabricType() const {
    return m_network_fabric_type;
}
void OAICreateEnvironmentResponse::setNetworkFabricType(const OAINetworkFabricType &network_fabric_type) {
    m_network_fabric_type = network_fabric_type;
    m_network_fabric_type_isSet = true;
}

bool OAICreateEnvironmentResponse::is_network_fabric_type_Set() const{
    return m_network_fabric_type_isSet;
}

bool OAICreateEnvironmentResponse::is_network_fabric_type_Valid() const{
    return m_network_fabric_type_isValid;
}

QString OAICreateEnvironmentResponse::getOwnerAccountId() const {
    return m_owner_account_id;
}
void OAICreateEnvironmentResponse::setOwnerAccountId(const QString &owner_account_id) {
    m_owner_account_id = owner_account_id;
    m_owner_account_id_isSet = true;
}

bool OAICreateEnvironmentResponse::is_owner_account_id_Set() const{
    return m_owner_account_id_isSet;
}

bool OAICreateEnvironmentResponse::is_owner_account_id_Valid() const{
    return m_owner_account_id_isValid;
}

OAIEnvironmentState OAICreateEnvironmentResponse::getState() const {
    return m_state;
}
void OAICreateEnvironmentResponse::setState(const OAIEnvironmentState &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAICreateEnvironmentResponse::is_state_Set() const{
    return m_state_isSet;
}

bool OAICreateEnvironmentResponse::is_state_Valid() const{
    return m_state_isValid;
}

QMap OAICreateEnvironmentResponse::getTags() const {
    return m_tags;
}
void OAICreateEnvironmentResponse::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateEnvironmentResponse::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateEnvironmentResponse::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateEnvironmentResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_fabric_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateEnvironmentResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
