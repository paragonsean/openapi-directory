/**
 * AWS Migration Hub Refactor Spaces
 * <p><fullname>Amazon Web Services Migration Hub Refactor Spaces</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Amazon Web Services Migration Hub Refactor Spaces (Refactor Spaces). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>To share Refactor Spaces environments with other Amazon Web Services accounts or with Organizations and their OUs, use Resource Access Manager's <code>CreateResourceShare</code> API. See <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> in the <i>Amazon Web Services RAM API Reference</i>.</p></p>
 *
 * The version of the OpenAPI document: 2021-10-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetRouteResponse_Error.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetRouteResponse_Error::OAIGetRouteResponse_Error(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetRouteResponse_Error::OAIGetRouteResponse_Error() {
    this->initializeModel();
}

OAIGetRouteResponse_Error::~OAIGetRouteResponse_Error() {}

void OAIGetRouteResponse_Error::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_additional_details_isSet = false;
    m_additional_details_isValid = false;

    m_code_isSet = false;
    m_code_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_resource_identifier_isSet = false;
    m_resource_identifier_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;
}

void OAIGetRouteResponse_Error::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetRouteResponse_Error::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("AccountId")]);
    m_account_id_isSet = !json[QString("AccountId")].isNull() && m_account_id_isValid;

    m_additional_details_isValid = ::OpenAPI::fromJsonValue(m_additional_details, json[QString("AdditionalDetails")]);
    m_additional_details_isSet = !json[QString("AdditionalDetails")].isNull() && m_additional_details_isValid;

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("Code")]);
    m_code_isSet = !json[QString("Code")].isNull() && m_code_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("Message")]);
    m_message_isSet = !json[QString("Message")].isNull() && m_message_isValid;

    m_resource_identifier_isValid = ::OpenAPI::fromJsonValue(m_resource_identifier, json[QString("ResourceIdentifier")]);
    m_resource_identifier_isSet = !json[QString("ResourceIdentifier")].isNull() && m_resource_identifier_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("ResourceType")]);
    m_resource_type_isSet = !json[QString("ResourceType")].isNull() && m_resource_type_isValid;
}

QString OAIGetRouteResponse_Error::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetRouteResponse_Error::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("AccountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_additional_details.isSet()) {
        obj.insert(QString("AdditionalDetails"), ::OpenAPI::toJsonValue(m_additional_details));
    }
    if (m_code.isSet()) {
        obj.insert(QString("Code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_message_isSet) {
        obj.insert(QString("Message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_resource_identifier_isSet) {
        obj.insert(QString("ResourceIdentifier"), ::OpenAPI::toJsonValue(m_resource_identifier));
    }
    if (m_resource_type.isSet()) {
        obj.insert(QString("ResourceType"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    return obj;
}

QString OAIGetRouteResponse_Error::getAccountId() const {
    return m_account_id;
}
void OAIGetRouteResponse_Error::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIGetRouteResponse_Error::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIGetRouteResponse_Error::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QMap OAIGetRouteResponse_Error::getAdditionalDetails() const {
    return m_additional_details;
}
void OAIGetRouteResponse_Error::setAdditionalDetails(const QMap &additional_details) {
    m_additional_details = additional_details;
    m_additional_details_isSet = true;
}

bool OAIGetRouteResponse_Error::is_additional_details_Set() const{
    return m_additional_details_isSet;
}

bool OAIGetRouteResponse_Error::is_additional_details_Valid() const{
    return m_additional_details_isValid;
}

OAIErrorCode OAIGetRouteResponse_Error::getCode() const {
    return m_code;
}
void OAIGetRouteResponse_Error::setCode(const OAIErrorCode &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIGetRouteResponse_Error::is_code_Set() const{
    return m_code_isSet;
}

bool OAIGetRouteResponse_Error::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIGetRouteResponse_Error::getMessage() const {
    return m_message;
}
void OAIGetRouteResponse_Error::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIGetRouteResponse_Error::is_message_Set() const{
    return m_message_isSet;
}

bool OAIGetRouteResponse_Error::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIGetRouteResponse_Error::getResourceIdentifier() const {
    return m_resource_identifier;
}
void OAIGetRouteResponse_Error::setResourceIdentifier(const QString &resource_identifier) {
    m_resource_identifier = resource_identifier;
    m_resource_identifier_isSet = true;
}

bool OAIGetRouteResponse_Error::is_resource_identifier_Set() const{
    return m_resource_identifier_isSet;
}

bool OAIGetRouteResponse_Error::is_resource_identifier_Valid() const{
    return m_resource_identifier_isValid;
}

OAIErrorResourceType OAIGetRouteResponse_Error::getResourceType() const {
    return m_resource_type;
}
void OAIGetRouteResponse_Error::setResourceType(const OAIErrorResourceType &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAIGetRouteResponse_Error::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAIGetRouteResponse_Error::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

bool OAIGetRouteResponse_Error::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_additional_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetRouteResponse_Error::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
