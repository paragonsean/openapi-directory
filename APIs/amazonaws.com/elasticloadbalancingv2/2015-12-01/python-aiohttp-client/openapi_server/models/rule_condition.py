# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rule_condition_host_header_config import RuleConditionHostHeaderConfig
from openapi_server.models.rule_condition_http_header_config import RuleConditionHttpHeaderConfig
from openapi_server.models.rule_condition_http_request_method_config import RuleConditionHttpRequestMethodConfig
from openapi_server.models.rule_condition_path_pattern_config import RuleConditionPathPatternConfig
from openapi_server.models.rule_condition_query_string_config import RuleConditionQueryStringConfig
from openapi_server.models.rule_condition_source_ip_config import RuleConditionSourceIpConfig
from openapi_server import util


class RuleCondition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _field: str=None, values: List=None, host_header_config: RuleConditionHostHeaderConfig=None, path_pattern_config: RuleConditionPathPatternConfig=None, http_header_config: RuleConditionHttpHeaderConfig=None, query_string_config: RuleConditionQueryStringConfig=None, http_request_method_config: RuleConditionHttpRequestMethodConfig=None, source_ip_config: RuleConditionSourceIpConfig=None):
        """RuleCondition - a model defined in OpenAPI

        :param _field: The _field of this RuleCondition.
        :param values: The values of this RuleCondition.
        :param host_header_config: The host_header_config of this RuleCondition.
        :param path_pattern_config: The path_pattern_config of this RuleCondition.
        :param http_header_config: The http_header_config of this RuleCondition.
        :param query_string_config: The query_string_config of this RuleCondition.
        :param http_request_method_config: The http_request_method_config of this RuleCondition.
        :param source_ip_config: The source_ip_config of this RuleCondition.
        """
        self.openapi_types = {
            '_field': str,
            'values': List,
            'host_header_config': RuleConditionHostHeaderConfig,
            'path_pattern_config': RuleConditionPathPatternConfig,
            'http_header_config': RuleConditionHttpHeaderConfig,
            'query_string_config': RuleConditionQueryStringConfig,
            'http_request_method_config': RuleConditionHttpRequestMethodConfig,
            'source_ip_config': RuleConditionSourceIpConfig
        }

        self.attribute_map = {
            '_field': 'Field',
            'values': 'Values',
            'host_header_config': 'HostHeaderConfig',
            'path_pattern_config': 'PathPatternConfig',
            'http_header_config': 'HttpHeaderConfig',
            'query_string_config': 'QueryStringConfig',
            'http_request_method_config': 'HttpRequestMethodConfig',
            'source_ip_config': 'SourceIpConfig'
        }

        self.__field = _field
        self._values = values
        self._host_header_config = host_header_config
        self._path_pattern_config = path_pattern_config
        self._http_header_config = http_header_config
        self._query_string_config = query_string_config
        self._http_request_method_config = http_request_method_config
        self._source_ip_config = source_ip_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RuleCondition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RuleCondition of this RuleCondition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _field(self):
        """Gets the _field of this RuleCondition.


        :return: The _field of this RuleCondition.
        :rtype: str
        """
        return self.__field

    @_field.setter
    def _field(self, _field):
        """Sets the _field of this RuleCondition.


        :param _field: The _field of this RuleCondition.
        :type _field: str
        """

        self.__field = _field

    @property
    def values(self):
        """Gets the values of this RuleCondition.


        :return: The values of this RuleCondition.
        :rtype: List
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this RuleCondition.


        :param values: The values of this RuleCondition.
        :type values: List
        """

        self._values = values

    @property
    def host_header_config(self):
        """Gets the host_header_config of this RuleCondition.


        :return: The host_header_config of this RuleCondition.
        :rtype: RuleConditionHostHeaderConfig
        """
        return self._host_header_config

    @host_header_config.setter
    def host_header_config(self, host_header_config):
        """Sets the host_header_config of this RuleCondition.


        :param host_header_config: The host_header_config of this RuleCondition.
        :type host_header_config: RuleConditionHostHeaderConfig
        """

        self._host_header_config = host_header_config

    @property
    def path_pattern_config(self):
        """Gets the path_pattern_config of this RuleCondition.


        :return: The path_pattern_config of this RuleCondition.
        :rtype: RuleConditionPathPatternConfig
        """
        return self._path_pattern_config

    @path_pattern_config.setter
    def path_pattern_config(self, path_pattern_config):
        """Sets the path_pattern_config of this RuleCondition.


        :param path_pattern_config: The path_pattern_config of this RuleCondition.
        :type path_pattern_config: RuleConditionPathPatternConfig
        """

        self._path_pattern_config = path_pattern_config

    @property
    def http_header_config(self):
        """Gets the http_header_config of this RuleCondition.


        :return: The http_header_config of this RuleCondition.
        :rtype: RuleConditionHttpHeaderConfig
        """
        return self._http_header_config

    @http_header_config.setter
    def http_header_config(self, http_header_config):
        """Sets the http_header_config of this RuleCondition.


        :param http_header_config: The http_header_config of this RuleCondition.
        :type http_header_config: RuleConditionHttpHeaderConfig
        """

        self._http_header_config = http_header_config

    @property
    def query_string_config(self):
        """Gets the query_string_config of this RuleCondition.


        :return: The query_string_config of this RuleCondition.
        :rtype: RuleConditionQueryStringConfig
        """
        return self._query_string_config

    @query_string_config.setter
    def query_string_config(self, query_string_config):
        """Sets the query_string_config of this RuleCondition.


        :param query_string_config: The query_string_config of this RuleCondition.
        :type query_string_config: RuleConditionQueryStringConfig
        """

        self._query_string_config = query_string_config

    @property
    def http_request_method_config(self):
        """Gets the http_request_method_config of this RuleCondition.


        :return: The http_request_method_config of this RuleCondition.
        :rtype: RuleConditionHttpRequestMethodConfig
        """
        return self._http_request_method_config

    @http_request_method_config.setter
    def http_request_method_config(self, http_request_method_config):
        """Sets the http_request_method_config of this RuleCondition.


        :param http_request_method_config: The http_request_method_config of this RuleCondition.
        :type http_request_method_config: RuleConditionHttpRequestMethodConfig
        """

        self._http_request_method_config = http_request_method_config

    @property
    def source_ip_config(self):
        """Gets the source_ip_config of this RuleCondition.


        :return: The source_ip_config of this RuleCondition.
        :rtype: RuleConditionSourceIpConfig
        """
        return self._source_ip_config

    @source_ip_config.setter
    def source_ip_config(self, source_ip_config):
        """Sets the source_ip_config of this RuleCondition.


        :param source_ip_config: The source_ip_config of this RuleCondition.
        :type source_ip_config: RuleConditionSourceIpConfig
        """

        self._source_ip_config = source_ip_config
