# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AvailabilityZone(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, zone_name: str=None, subnet_id: str=None, outpost_id: str=None, load_balancer_addresses: List=None):
        """AvailabilityZone - a model defined in OpenAPI

        :param zone_name: The zone_name of this AvailabilityZone.
        :param subnet_id: The subnet_id of this AvailabilityZone.
        :param outpost_id: The outpost_id of this AvailabilityZone.
        :param load_balancer_addresses: The load_balancer_addresses of this AvailabilityZone.
        """
        self.openapi_types = {
            'zone_name': str,
            'subnet_id': str,
            'outpost_id': str,
            'load_balancer_addresses': List
        }

        self.attribute_map = {
            'zone_name': 'ZoneName',
            'subnet_id': 'SubnetId',
            'outpost_id': 'OutpostId',
            'load_balancer_addresses': 'LoadBalancerAddresses'
        }

        self._zone_name = zone_name
        self._subnet_id = subnet_id
        self._outpost_id = outpost_id
        self._load_balancer_addresses = load_balancer_addresses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvailabilityZone':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AvailabilityZone of this AvailabilityZone.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def zone_name(self):
        """Gets the zone_name of this AvailabilityZone.


        :return: The zone_name of this AvailabilityZone.
        :rtype: str
        """
        return self._zone_name

    @zone_name.setter
    def zone_name(self, zone_name):
        """Sets the zone_name of this AvailabilityZone.


        :param zone_name: The zone_name of this AvailabilityZone.
        :type zone_name: str
        """

        self._zone_name = zone_name

    @property
    def subnet_id(self):
        """Gets the subnet_id of this AvailabilityZone.


        :return: The subnet_id of this AvailabilityZone.
        :rtype: str
        """
        return self._subnet_id

    @subnet_id.setter
    def subnet_id(self, subnet_id):
        """Sets the subnet_id of this AvailabilityZone.


        :param subnet_id: The subnet_id of this AvailabilityZone.
        :type subnet_id: str
        """

        self._subnet_id = subnet_id

    @property
    def outpost_id(self):
        """Gets the outpost_id of this AvailabilityZone.


        :return: The outpost_id of this AvailabilityZone.
        :rtype: str
        """
        return self._outpost_id

    @outpost_id.setter
    def outpost_id(self, outpost_id):
        """Sets the outpost_id of this AvailabilityZone.


        :param outpost_id: The outpost_id of this AvailabilityZone.
        :type outpost_id: str
        """

        self._outpost_id = outpost_id

    @property
    def load_balancer_addresses(self):
        """Gets the load_balancer_addresses of this AvailabilityZone.


        :return: The load_balancer_addresses of this AvailabilityZone.
        :rtype: List
        """
        return self._load_balancer_addresses

    @load_balancer_addresses.setter
    def load_balancer_addresses(self, load_balancer_addresses):
        """Sets the load_balancer_addresses of this AvailabilityZone.


        :param load_balancer_addresses: The load_balancer_addresses of this AvailabilityZone.
        :type load_balancer_addresses: List
        """

        self._load_balancer_addresses = load_balancer_addresses
