# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ip_address_type import IpAddressType
from openapi_server import util


class SetIpAddressTypeOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip_address_type: IpAddressType=None):
        """SetIpAddressTypeOutput - a model defined in OpenAPI

        :param ip_address_type: The ip_address_type of this SetIpAddressTypeOutput.
        """
        self.openapi_types = {
            'ip_address_type': IpAddressType
        }

        self.attribute_map = {
            'ip_address_type': 'IpAddressType'
        }

        self._ip_address_type = ip_address_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetIpAddressTypeOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SetIpAddressTypeOutput of this SetIpAddressTypeOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip_address_type(self):
        """Gets the ip_address_type of this SetIpAddressTypeOutput.


        :return: The ip_address_type of this SetIpAddressTypeOutput.
        :rtype: IpAddressType
        """
        return self._ip_address_type

    @ip_address_type.setter
    def ip_address_type(self, ip_address_type):
        """Sets the ip_address_type of this SetIpAddressTypeOutput.


        :param ip_address_type: The ip_address_type of this SetIpAddressTypeOutput.
        :type ip_address_type: IpAddressType
        """

        self._ip_address_type = ip_address_type
