# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateLoadBalancerOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, load_balancers: List=None):
        """CreateLoadBalancerOutput - a model defined in OpenAPI

        :param load_balancers: The load_balancers of this CreateLoadBalancerOutput.
        """
        self.openapi_types = {
            'load_balancers': List
        }

        self.attribute_map = {
            'load_balancers': 'LoadBalancers'
        }

        self._load_balancers = load_balancers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateLoadBalancerOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateLoadBalancerOutput of this CreateLoadBalancerOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def load_balancers(self):
        """Gets the load_balancers of this CreateLoadBalancerOutput.


        :return: The load_balancers of this CreateLoadBalancerOutput.
        :rtype: List
        """
        return self._load_balancers

    @load_balancers.setter
    def load_balancers(self, load_balancers):
        """Sets the load_balancers of this CreateLoadBalancerOutput.


        :param load_balancers: The load_balancers of this CreateLoadBalancerOutput.
        :type load_balancers: List
        """

        self._load_balancers = load_balancers
