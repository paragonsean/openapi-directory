# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ip_address_type import IpAddressType
from openapi_server.models.load_balancer_scheme_enum import LoadBalancerSchemeEnum
from openapi_server.models.load_balancer_state import LoadBalancerState
from openapi_server.models.load_balancer_type_enum import LoadBalancerTypeEnum
from openapi_server import util


class LoadBalancer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, load_balancer_arn: str=None, dns_name: str=None, canonical_hosted_zone_id: str=None, created_time: datetime=None, load_balancer_name: str=None, scheme: LoadBalancerSchemeEnum=None, vpc_id: str=None, state: LoadBalancerState=None, type: LoadBalancerTypeEnum=None, availability_zones: List=None, security_groups: List=None, ip_address_type: IpAddressType=None, customer_owned_ipv4_pool: str=None):
        """LoadBalancer - a model defined in OpenAPI

        :param load_balancer_arn: The load_balancer_arn of this LoadBalancer.
        :param dns_name: The dns_name of this LoadBalancer.
        :param canonical_hosted_zone_id: The canonical_hosted_zone_id of this LoadBalancer.
        :param created_time: The created_time of this LoadBalancer.
        :param load_balancer_name: The load_balancer_name of this LoadBalancer.
        :param scheme: The scheme of this LoadBalancer.
        :param vpc_id: The vpc_id of this LoadBalancer.
        :param state: The state of this LoadBalancer.
        :param type: The type of this LoadBalancer.
        :param availability_zones: The availability_zones of this LoadBalancer.
        :param security_groups: The security_groups of this LoadBalancer.
        :param ip_address_type: The ip_address_type of this LoadBalancer.
        :param customer_owned_ipv4_pool: The customer_owned_ipv4_pool of this LoadBalancer.
        """
        self.openapi_types = {
            'load_balancer_arn': str,
            'dns_name': str,
            'canonical_hosted_zone_id': str,
            'created_time': datetime,
            'load_balancer_name': str,
            'scheme': LoadBalancerSchemeEnum,
            'vpc_id': str,
            'state': LoadBalancerState,
            'type': LoadBalancerTypeEnum,
            'availability_zones': List,
            'security_groups': List,
            'ip_address_type': IpAddressType,
            'customer_owned_ipv4_pool': str
        }

        self.attribute_map = {
            'load_balancer_arn': 'LoadBalancerArn',
            'dns_name': 'DNSName',
            'canonical_hosted_zone_id': 'CanonicalHostedZoneId',
            'created_time': 'CreatedTime',
            'load_balancer_name': 'LoadBalancerName',
            'scheme': 'Scheme',
            'vpc_id': 'VpcId',
            'state': 'State',
            'type': 'Type',
            'availability_zones': 'AvailabilityZones',
            'security_groups': 'SecurityGroups',
            'ip_address_type': 'IpAddressType',
            'customer_owned_ipv4_pool': 'CustomerOwnedIpv4Pool'
        }

        self._load_balancer_arn = load_balancer_arn
        self._dns_name = dns_name
        self._canonical_hosted_zone_id = canonical_hosted_zone_id
        self._created_time = created_time
        self._load_balancer_name = load_balancer_name
        self._scheme = scheme
        self._vpc_id = vpc_id
        self._state = state
        self._type = type
        self._availability_zones = availability_zones
        self._security_groups = security_groups
        self._ip_address_type = ip_address_type
        self._customer_owned_ipv4_pool = customer_owned_ipv4_pool

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoadBalancer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoadBalancer of this LoadBalancer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def load_balancer_arn(self):
        """Gets the load_balancer_arn of this LoadBalancer.


        :return: The load_balancer_arn of this LoadBalancer.
        :rtype: str
        """
        return self._load_balancer_arn

    @load_balancer_arn.setter
    def load_balancer_arn(self, load_balancer_arn):
        """Sets the load_balancer_arn of this LoadBalancer.


        :param load_balancer_arn: The load_balancer_arn of this LoadBalancer.
        :type load_balancer_arn: str
        """

        self._load_balancer_arn = load_balancer_arn

    @property
    def dns_name(self):
        """Gets the dns_name of this LoadBalancer.


        :return: The dns_name of this LoadBalancer.
        :rtype: str
        """
        return self._dns_name

    @dns_name.setter
    def dns_name(self, dns_name):
        """Sets the dns_name of this LoadBalancer.


        :param dns_name: The dns_name of this LoadBalancer.
        :type dns_name: str
        """

        self._dns_name = dns_name

    @property
    def canonical_hosted_zone_id(self):
        """Gets the canonical_hosted_zone_id of this LoadBalancer.


        :return: The canonical_hosted_zone_id of this LoadBalancer.
        :rtype: str
        """
        return self._canonical_hosted_zone_id

    @canonical_hosted_zone_id.setter
    def canonical_hosted_zone_id(self, canonical_hosted_zone_id):
        """Sets the canonical_hosted_zone_id of this LoadBalancer.


        :param canonical_hosted_zone_id: The canonical_hosted_zone_id of this LoadBalancer.
        :type canonical_hosted_zone_id: str
        """

        self._canonical_hosted_zone_id = canonical_hosted_zone_id

    @property
    def created_time(self):
        """Gets the created_time of this LoadBalancer.


        :return: The created_time of this LoadBalancer.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this LoadBalancer.


        :param created_time: The created_time of this LoadBalancer.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def load_balancer_name(self):
        """Gets the load_balancer_name of this LoadBalancer.


        :return: The load_balancer_name of this LoadBalancer.
        :rtype: str
        """
        return self._load_balancer_name

    @load_balancer_name.setter
    def load_balancer_name(self, load_balancer_name):
        """Sets the load_balancer_name of this LoadBalancer.


        :param load_balancer_name: The load_balancer_name of this LoadBalancer.
        :type load_balancer_name: str
        """

        self._load_balancer_name = load_balancer_name

    @property
    def scheme(self):
        """Gets the scheme of this LoadBalancer.


        :return: The scheme of this LoadBalancer.
        :rtype: LoadBalancerSchemeEnum
        """
        return self._scheme

    @scheme.setter
    def scheme(self, scheme):
        """Sets the scheme of this LoadBalancer.


        :param scheme: The scheme of this LoadBalancer.
        :type scheme: LoadBalancerSchemeEnum
        """

        self._scheme = scheme

    @property
    def vpc_id(self):
        """Gets the vpc_id of this LoadBalancer.


        :return: The vpc_id of this LoadBalancer.
        :rtype: str
        """
        return self._vpc_id

    @vpc_id.setter
    def vpc_id(self, vpc_id):
        """Sets the vpc_id of this LoadBalancer.


        :param vpc_id: The vpc_id of this LoadBalancer.
        :type vpc_id: str
        """

        self._vpc_id = vpc_id

    @property
    def state(self):
        """Gets the state of this LoadBalancer.


        :return: The state of this LoadBalancer.
        :rtype: LoadBalancerState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this LoadBalancer.


        :param state: The state of this LoadBalancer.
        :type state: LoadBalancerState
        """

        self._state = state

    @property
    def type(self):
        """Gets the type of this LoadBalancer.


        :return: The type of this LoadBalancer.
        :rtype: LoadBalancerTypeEnum
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this LoadBalancer.


        :param type: The type of this LoadBalancer.
        :type type: LoadBalancerTypeEnum
        """

        self._type = type

    @property
    def availability_zones(self):
        """Gets the availability_zones of this LoadBalancer.


        :return: The availability_zones of this LoadBalancer.
        :rtype: List
        """
        return self._availability_zones

    @availability_zones.setter
    def availability_zones(self, availability_zones):
        """Sets the availability_zones of this LoadBalancer.


        :param availability_zones: The availability_zones of this LoadBalancer.
        :type availability_zones: List
        """

        self._availability_zones = availability_zones

    @property
    def security_groups(self):
        """Gets the security_groups of this LoadBalancer.


        :return: The security_groups of this LoadBalancer.
        :rtype: List
        """
        return self._security_groups

    @security_groups.setter
    def security_groups(self, security_groups):
        """Sets the security_groups of this LoadBalancer.


        :param security_groups: The security_groups of this LoadBalancer.
        :type security_groups: List
        """

        self._security_groups = security_groups

    @property
    def ip_address_type(self):
        """Gets the ip_address_type of this LoadBalancer.


        :return: The ip_address_type of this LoadBalancer.
        :rtype: IpAddressType
        """
        return self._ip_address_type

    @ip_address_type.setter
    def ip_address_type(self, ip_address_type):
        """Sets the ip_address_type of this LoadBalancer.


        :param ip_address_type: The ip_address_type of this LoadBalancer.
        :type ip_address_type: IpAddressType
        """

        self._ip_address_type = ip_address_type

    @property
    def customer_owned_ipv4_pool(self):
        """Gets the customer_owned_ipv4_pool of this LoadBalancer.


        :return: The customer_owned_ipv4_pool of this LoadBalancer.
        :rtype: str
        """
        return self._customer_owned_ipv4_pool

    @customer_owned_ipv4_pool.setter
    def customer_owned_ipv4_pool(self, customer_owned_ipv4_pool):
        """Sets the customer_owned_ipv4_pool of this LoadBalancer.


        :param customer_owned_ipv4_pool: The customer_owned_ipv4_pool of this LoadBalancer.
        :type customer_owned_ipv4_pool: str
        """

        self._customer_owned_ipv4_pool = customer_owned_ipv4_pool
