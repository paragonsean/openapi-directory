# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.target_health_reason_enum import TargetHealthReasonEnum
from openapi_server.models.target_health_state_enum import TargetHealthStateEnum
from openapi_server import util


class TargetHealth(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, state: TargetHealthStateEnum=None, reason: TargetHealthReasonEnum=None, description: str=None):
        """TargetHealth - a model defined in OpenAPI

        :param state: The state of this TargetHealth.
        :param reason: The reason of this TargetHealth.
        :param description: The description of this TargetHealth.
        """
        self.openapi_types = {
            'state': TargetHealthStateEnum,
            'reason': TargetHealthReasonEnum,
            'description': str
        }

        self.attribute_map = {
            'state': 'State',
            'reason': 'Reason',
            'description': 'Description'
        }

        self._state = state
        self._reason = reason
        self._description = description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TargetHealth':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TargetHealth of this TargetHealth.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def state(self):
        """Gets the state of this TargetHealth.


        :return: The state of this TargetHealth.
        :rtype: TargetHealthStateEnum
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this TargetHealth.


        :param state: The state of this TargetHealth.
        :type state: TargetHealthStateEnum
        """

        self._state = state

    @property
    def reason(self):
        """Gets the reason of this TargetHealth.


        :return: The reason of this TargetHealth.
        :rtype: TargetHealthReasonEnum
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this TargetHealth.


        :param reason: The reason of this TargetHealth.
        :type reason: TargetHealthReasonEnum
        """

        self._reason = reason

    @property
    def description(self):
        """Gets the description of this TargetHealth.


        :return: The description of this TargetHealth.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this TargetHealth.


        :param description: The description of this TargetHealth.
        :type description: str
        """

        self._description = description
