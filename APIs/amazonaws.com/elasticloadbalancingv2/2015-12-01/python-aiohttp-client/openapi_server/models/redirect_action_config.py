# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.redirect_action_status_code_enum import RedirectActionStatusCodeEnum
from openapi_server import util


class RedirectActionConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, protocol: str=None, port: str=None, host: str=None, path: str=None, query: str=None, status_code: RedirectActionStatusCodeEnum=None):
        """RedirectActionConfig - a model defined in OpenAPI

        :param protocol: The protocol of this RedirectActionConfig.
        :param port: The port of this RedirectActionConfig.
        :param host: The host of this RedirectActionConfig.
        :param path: The path of this RedirectActionConfig.
        :param query: The query of this RedirectActionConfig.
        :param status_code: The status_code of this RedirectActionConfig.
        """
        self.openapi_types = {
            'protocol': str,
            'port': str,
            'host': str,
            'path': str,
            'query': str,
            'status_code': RedirectActionStatusCodeEnum
        }

        self.attribute_map = {
            'protocol': 'Protocol',
            'port': 'Port',
            'host': 'Host',
            'path': 'Path',
            'query': 'Query',
            'status_code': 'StatusCode'
        }

        self._protocol = protocol
        self._port = port
        self._host = host
        self._path = path
        self._query = query
        self._status_code = status_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RedirectActionConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RedirectActionConfig of this RedirectActionConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def protocol(self):
        """Gets the protocol of this RedirectActionConfig.


        :return: The protocol of this RedirectActionConfig.
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this RedirectActionConfig.


        :param protocol: The protocol of this RedirectActionConfig.
        :type protocol: str
        """

        self._protocol = protocol

    @property
    def port(self):
        """Gets the port of this RedirectActionConfig.


        :return: The port of this RedirectActionConfig.
        :rtype: str
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this RedirectActionConfig.


        :param port: The port of this RedirectActionConfig.
        :type port: str
        """

        self._port = port

    @property
    def host(self):
        """Gets the host of this RedirectActionConfig.


        :return: The host of this RedirectActionConfig.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this RedirectActionConfig.


        :param host: The host of this RedirectActionConfig.
        :type host: str
        """

        self._host = host

    @property
    def path(self):
        """Gets the path of this RedirectActionConfig.


        :return: The path of this RedirectActionConfig.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this RedirectActionConfig.


        :param path: The path of this RedirectActionConfig.
        :type path: str
        """

        self._path = path

    @property
    def query(self):
        """Gets the query of this RedirectActionConfig.


        :return: The query of this RedirectActionConfig.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this RedirectActionConfig.


        :param query: The query of this RedirectActionConfig.
        :type query: str
        """

        self._query = query

    @property
    def status_code(self):
        """Gets the status_code of this RedirectActionConfig.


        :return: The status_code of this RedirectActionConfig.
        :rtype: RedirectActionStatusCodeEnum
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this RedirectActionConfig.


        :param status_code: The status_code of this RedirectActionConfig.
        :type status_code: RedirectActionStatusCodeEnum
        """
        if status_code is None:
            raise ValueError("Invalid value for `status_code`, must not be `None`")

        self._status_code = status_code
