# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ip_address_type import IpAddressType
from openapi_server import util


class SetSubnetsOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, availability_zones: List=None, ip_address_type: IpAddressType=None):
        """SetSubnetsOutput - a model defined in OpenAPI

        :param availability_zones: The availability_zones of this SetSubnetsOutput.
        :param ip_address_type: The ip_address_type of this SetSubnetsOutput.
        """
        self.openapi_types = {
            'availability_zones': List,
            'ip_address_type': IpAddressType
        }

        self.attribute_map = {
            'availability_zones': 'AvailabilityZones',
            'ip_address_type': 'IpAddressType'
        }

        self._availability_zones = availability_zones
        self._ip_address_type = ip_address_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetSubnetsOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SetSubnetsOutput of this SetSubnetsOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def availability_zones(self):
        """Gets the availability_zones of this SetSubnetsOutput.


        :return: The availability_zones of this SetSubnetsOutput.
        :rtype: List
        """
        return self._availability_zones

    @availability_zones.setter
    def availability_zones(self, availability_zones):
        """Sets the availability_zones of this SetSubnetsOutput.


        :param availability_zones: The availability_zones of this SetSubnetsOutput.
        :type availability_zones: List
        """

        self._availability_zones = availability_zones

    @property
    def ip_address_type(self):
        """Gets the ip_address_type of this SetSubnetsOutput.


        :return: The ip_address_type of this SetSubnetsOutput.
        :rtype: IpAddressType
        """
        return self._ip_address_type

    @ip_address_type.setter
    def ip_address_type(self, ip_address_type):
        """Sets the ip_address_type of this SetSubnetsOutput.


        :param ip_address_type: The ip_address_type of this SetSubnetsOutput.
        :type ip_address_type: IpAddressType
        """

        self._ip_address_type = ip_address_type
