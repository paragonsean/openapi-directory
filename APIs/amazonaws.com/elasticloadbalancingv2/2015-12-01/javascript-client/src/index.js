/**
 * Elastic Load Balancing
 * <fullname>Elastic Load Balancing</fullname> <p>A load balancer distributes incoming traffic across targets, such as your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered targets and ensures that it routes traffic only to healthy targets. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer. You configure a target group with a protocol and port number for connections from the load balancer to the targets, and with health check settings to be used when checking the health status of the targets.</p> <p>Elastic Load Balancing supports the following types of load balancers: Application Load Balancers, Network Load Balancers, Gateway Load Balancers, and Classic Load Balancers. This reference covers the following load balancer types:</p> <ul> <li> <p>Application Load Balancer - Operates at the application layer (layer 7) and supports HTTP and HTTPS.</p> </li> <li> <p>Network Load Balancer - Operates at the transport layer (layer 4) and supports TCP, TLS, and UDP.</p> </li> <li> <p>Gateway Load Balancer - Operates at the network layer (layer 3).</p> </li> </ul> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/\">Elastic Load Balancing User Guide</a>.</p> <p>All Elastic Load Balancing operations are idempotent, which means that they complete at most one time. If you repeat an operation, it succeeds.</p>
 *
 * The version of the OpenAPI document: 2015-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Action from './model/Action';
import ActionAuthenticateCognitoConfig from './model/ActionAuthenticateCognitoConfig';
import ActionAuthenticateOidcConfig from './model/ActionAuthenticateOidcConfig';
import ActionFixedResponseConfig from './model/ActionFixedResponseConfig';
import ActionForwardConfig from './model/ActionForwardConfig';
import ActionRedirectConfig from './model/ActionRedirectConfig';
import ActionTypeEnum from './model/ActionTypeEnum';
import AddListenerCertificatesInput from './model/AddListenerCertificatesInput';
import AddListenerCertificatesOutput from './model/AddListenerCertificatesOutput';
import AddTagsInput from './model/AddTagsInput';
import AuthenticateCognitoActionConditionalBehaviorEnum from './model/AuthenticateCognitoActionConditionalBehaviorEnum';
import AuthenticateCognitoActionConfig from './model/AuthenticateCognitoActionConfig';
import AuthenticateOidcActionConditionalBehaviorEnum from './model/AuthenticateOidcActionConditionalBehaviorEnum';
import AuthenticateOidcActionConfig from './model/AuthenticateOidcActionConfig';
import AvailabilityZone from './model/AvailabilityZone';
import Certificate from './model/Certificate';
import Cipher from './model/Cipher';
import CreateListenerInput from './model/CreateListenerInput';
import CreateListenerOutput from './model/CreateListenerOutput';
import CreateLoadBalancerInput from './model/CreateLoadBalancerInput';
import CreateLoadBalancerOutput from './model/CreateLoadBalancerOutput';
import CreateRuleInput from './model/CreateRuleInput';
import CreateRuleOutput from './model/CreateRuleOutput';
import CreateTargetGroupInput from './model/CreateTargetGroupInput';
import CreateTargetGroupInputMatcher from './model/CreateTargetGroupInputMatcher';
import CreateTargetGroupOutput from './model/CreateTargetGroupOutput';
import DeleteListenerInput from './model/DeleteListenerInput';
import DeleteLoadBalancerInput from './model/DeleteLoadBalancerInput';
import DeleteRuleInput from './model/DeleteRuleInput';
import DeleteTargetGroupInput from './model/DeleteTargetGroupInput';
import DeregisterTargetsInput from './model/DeregisterTargetsInput';
import DescribeAccountLimitsInput from './model/DescribeAccountLimitsInput';
import DescribeAccountLimitsOutput from './model/DescribeAccountLimitsOutput';
import DescribeListenerCertificatesInput from './model/DescribeListenerCertificatesInput';
import DescribeListenerCertificatesOutput from './model/DescribeListenerCertificatesOutput';
import DescribeListenersInput from './model/DescribeListenersInput';
import DescribeListenersOutput from './model/DescribeListenersOutput';
import DescribeLoadBalancerAttributesInput from './model/DescribeLoadBalancerAttributesInput';
import DescribeLoadBalancerAttributesOutput from './model/DescribeLoadBalancerAttributesOutput';
import DescribeLoadBalancersInput from './model/DescribeLoadBalancersInput';
import DescribeLoadBalancersOutput from './model/DescribeLoadBalancersOutput';
import DescribeRulesInput from './model/DescribeRulesInput';
import DescribeRulesOutput from './model/DescribeRulesOutput';
import DescribeSSLPoliciesInput from './model/DescribeSSLPoliciesInput';
import DescribeSSLPoliciesOutput from './model/DescribeSSLPoliciesOutput';
import DescribeTagsInput from './model/DescribeTagsInput';
import DescribeTagsOutput from './model/DescribeTagsOutput';
import DescribeTargetGroupAttributesInput from './model/DescribeTargetGroupAttributesInput';
import DescribeTargetGroupAttributesOutput from './model/DescribeTargetGroupAttributesOutput';
import DescribeTargetGroupsInput from './model/DescribeTargetGroupsInput';
import DescribeTargetGroupsOutput from './model/DescribeTargetGroupsOutput';
import DescribeTargetHealthInput from './model/DescribeTargetHealthInput';
import DescribeTargetHealthOutput from './model/DescribeTargetHealthOutput';
import FixedResponseActionConfig from './model/FixedResponseActionConfig';
import ForwardActionConfig from './model/ForwardActionConfig';
import ForwardActionConfigTargetGroupStickinessConfig from './model/ForwardActionConfigTargetGroupStickinessConfig';
import GETCreateTargetGroupMatcherParameter from './model/GETCreateTargetGroupMatcherParameter';
import HostHeaderConditionConfig from './model/HostHeaderConditionConfig';
import HttpHeaderConditionConfig from './model/HttpHeaderConditionConfig';
import HttpRequestMethodConditionConfig from './model/HttpRequestMethodConditionConfig';
import IpAddressType from './model/IpAddressType';
import Limit from './model/Limit';
import Listener from './model/Listener';
import LoadBalancer from './model/LoadBalancer';
import LoadBalancerAddress from './model/LoadBalancerAddress';
import LoadBalancerAttribute from './model/LoadBalancerAttribute';
import LoadBalancerSchemeEnum from './model/LoadBalancerSchemeEnum';
import LoadBalancerState from './model/LoadBalancerState';
import LoadBalancerStateEnum from './model/LoadBalancerStateEnum';
import LoadBalancerTypeEnum from './model/LoadBalancerTypeEnum';
import Matcher from './model/Matcher';
import ModifyListenerInput from './model/ModifyListenerInput';
import ModifyListenerOutput from './model/ModifyListenerOutput';
import ModifyLoadBalancerAttributesInput from './model/ModifyLoadBalancerAttributesInput';
import ModifyLoadBalancerAttributesOutput from './model/ModifyLoadBalancerAttributesOutput';
import ModifyRuleInput from './model/ModifyRuleInput';
import ModifyRuleOutput from './model/ModifyRuleOutput';
import ModifyTargetGroupAttributesInput from './model/ModifyTargetGroupAttributesInput';
import ModifyTargetGroupAttributesOutput from './model/ModifyTargetGroupAttributesOutput';
import ModifyTargetGroupInput from './model/ModifyTargetGroupInput';
import ModifyTargetGroupOutput from './model/ModifyTargetGroupOutput';
import PathPatternConditionConfig from './model/PathPatternConditionConfig';
import ProtocolEnum from './model/ProtocolEnum';
import QueryStringConditionConfig from './model/QueryStringConditionConfig';
import QueryStringKeyValuePair from './model/QueryStringKeyValuePair';
import RedirectActionConfig from './model/RedirectActionConfig';
import RedirectActionStatusCodeEnum from './model/RedirectActionStatusCodeEnum';
import RegisterTargetsInput from './model/RegisterTargetsInput';
import RemoveListenerCertificatesInput from './model/RemoveListenerCertificatesInput';
import RemoveTagsInput from './model/RemoveTagsInput';
import Rule from './model/Rule';
import RuleCondition from './model/RuleCondition';
import RuleConditionHostHeaderConfig from './model/RuleConditionHostHeaderConfig';
import RuleConditionHttpHeaderConfig from './model/RuleConditionHttpHeaderConfig';
import RuleConditionHttpRequestMethodConfig from './model/RuleConditionHttpRequestMethodConfig';
import RuleConditionPathPatternConfig from './model/RuleConditionPathPatternConfig';
import RuleConditionQueryStringConfig from './model/RuleConditionQueryStringConfig';
import RuleConditionSourceIpConfig from './model/RuleConditionSourceIpConfig';
import RulePriorityPair from './model/RulePriorityPair';
import SetIpAddressTypeInput from './model/SetIpAddressTypeInput';
import SetIpAddressTypeOutput from './model/SetIpAddressTypeOutput';
import SetRulePrioritiesInput from './model/SetRulePrioritiesInput';
import SetRulePrioritiesOutput from './model/SetRulePrioritiesOutput';
import SetSecurityGroupsInput from './model/SetSecurityGroupsInput';
import SetSecurityGroupsOutput from './model/SetSecurityGroupsOutput';
import SetSubnetsInput from './model/SetSubnetsInput';
import SetSubnetsOutput from './model/SetSubnetsOutput';
import SourceIpConditionConfig from './model/SourceIpConditionConfig';
import SslPolicy from './model/SslPolicy';
import SubnetMapping from './model/SubnetMapping';
import Tag from './model/Tag';
import TagDescription from './model/TagDescription';
import TargetDescription from './model/TargetDescription';
import TargetGroup from './model/TargetGroup';
import TargetGroupAttribute from './model/TargetGroupAttribute';
import TargetGroupIpAddressTypeEnum from './model/TargetGroupIpAddressTypeEnum';
import TargetGroupMatcher from './model/TargetGroupMatcher';
import TargetGroupStickinessConfig from './model/TargetGroupStickinessConfig';
import TargetGroupTuple from './model/TargetGroupTuple';
import TargetHealth from './model/TargetHealth';
import TargetHealthDescription from './model/TargetHealthDescription';
import TargetHealthDescriptionTarget from './model/TargetHealthDescriptionTarget';
import TargetHealthDescriptionTargetHealth from './model/TargetHealthDescriptionTargetHealth';
import TargetHealthReasonEnum from './model/TargetHealthReasonEnum';
import TargetHealthStateEnum from './model/TargetHealthStateEnum';
import TargetTypeEnum from './model/TargetTypeEnum';
import DefaultApi from './api/DefaultApi';


/**
* &lt;fullname&gt;Elastic Load Balancing&lt;/fullname&gt; &lt;p&gt;A load balancer distributes incoming traffic across targets, such as your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered targets and ensures that it routes traffic only to healthy targets. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer. You configure a target group with a protocol and port number for connections from the load balancer to the targets, and with health check settings to be used when checking the health status of the targets.&lt;/p&gt; &lt;p&gt;Elastic Load Balancing supports the following types of load balancers: Application Load Balancers, Network Load Balancers, Gateway Load Balancers, and Classic Load Balancers. This reference covers the following load balancer types:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Application Load Balancer - Operates at the application layer (layer 7) and supports HTTP and HTTPS.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Network Load Balancer - Operates at the transport layer (layer 4) and supports TCP, TLS, and UDP.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Gateway Load Balancer - Operates at the network layer (layer 3).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/\&quot;&gt;Elastic Load Balancing User Guide&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;All Elastic Load Balancing operations are idempotent, which means that they complete at most one time. If you repeat an operation, it succeeds.&lt;/p&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ElasticLoadBalancing = require('index'); // See note below*.
* var xxxSvc = new ElasticLoadBalancing.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ElasticLoadBalancing.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ElasticLoadBalancing.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ElasticLoadBalancing.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2015-12-01
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Action model constructor.
     * @property {module:model/Action}
     */
    Action,

    /**
     * The ActionAuthenticateCognitoConfig model constructor.
     * @property {module:model/ActionAuthenticateCognitoConfig}
     */
    ActionAuthenticateCognitoConfig,

    /**
     * The ActionAuthenticateOidcConfig model constructor.
     * @property {module:model/ActionAuthenticateOidcConfig}
     */
    ActionAuthenticateOidcConfig,

    /**
     * The ActionFixedResponseConfig model constructor.
     * @property {module:model/ActionFixedResponseConfig}
     */
    ActionFixedResponseConfig,

    /**
     * The ActionForwardConfig model constructor.
     * @property {module:model/ActionForwardConfig}
     */
    ActionForwardConfig,

    /**
     * The ActionRedirectConfig model constructor.
     * @property {module:model/ActionRedirectConfig}
     */
    ActionRedirectConfig,

    /**
     * The ActionTypeEnum model constructor.
     * @property {module:model/ActionTypeEnum}
     */
    ActionTypeEnum,

    /**
     * The AddListenerCertificatesInput model constructor.
     * @property {module:model/AddListenerCertificatesInput}
     */
    AddListenerCertificatesInput,

    /**
     * The AddListenerCertificatesOutput model constructor.
     * @property {module:model/AddListenerCertificatesOutput}
     */
    AddListenerCertificatesOutput,

    /**
     * The AddTagsInput model constructor.
     * @property {module:model/AddTagsInput}
     */
    AddTagsInput,

    /**
     * The AuthenticateCognitoActionConditionalBehaviorEnum model constructor.
     * @property {module:model/AuthenticateCognitoActionConditionalBehaviorEnum}
     */
    AuthenticateCognitoActionConditionalBehaviorEnum,

    /**
     * The AuthenticateCognitoActionConfig model constructor.
     * @property {module:model/AuthenticateCognitoActionConfig}
     */
    AuthenticateCognitoActionConfig,

    /**
     * The AuthenticateOidcActionConditionalBehaviorEnum model constructor.
     * @property {module:model/AuthenticateOidcActionConditionalBehaviorEnum}
     */
    AuthenticateOidcActionConditionalBehaviorEnum,

    /**
     * The AuthenticateOidcActionConfig model constructor.
     * @property {module:model/AuthenticateOidcActionConfig}
     */
    AuthenticateOidcActionConfig,

    /**
     * The AvailabilityZone model constructor.
     * @property {module:model/AvailabilityZone}
     */
    AvailabilityZone,

    /**
     * The Certificate model constructor.
     * @property {module:model/Certificate}
     */
    Certificate,

    /**
     * The Cipher model constructor.
     * @property {module:model/Cipher}
     */
    Cipher,

    /**
     * The CreateListenerInput model constructor.
     * @property {module:model/CreateListenerInput}
     */
    CreateListenerInput,

    /**
     * The CreateListenerOutput model constructor.
     * @property {module:model/CreateListenerOutput}
     */
    CreateListenerOutput,

    /**
     * The CreateLoadBalancerInput model constructor.
     * @property {module:model/CreateLoadBalancerInput}
     */
    CreateLoadBalancerInput,

    /**
     * The CreateLoadBalancerOutput model constructor.
     * @property {module:model/CreateLoadBalancerOutput}
     */
    CreateLoadBalancerOutput,

    /**
     * The CreateRuleInput model constructor.
     * @property {module:model/CreateRuleInput}
     */
    CreateRuleInput,

    /**
     * The CreateRuleOutput model constructor.
     * @property {module:model/CreateRuleOutput}
     */
    CreateRuleOutput,

    /**
     * The CreateTargetGroupInput model constructor.
     * @property {module:model/CreateTargetGroupInput}
     */
    CreateTargetGroupInput,

    /**
     * The CreateTargetGroupInputMatcher model constructor.
     * @property {module:model/CreateTargetGroupInputMatcher}
     */
    CreateTargetGroupInputMatcher,

    /**
     * The CreateTargetGroupOutput model constructor.
     * @property {module:model/CreateTargetGroupOutput}
     */
    CreateTargetGroupOutput,

    /**
     * The DeleteListenerInput model constructor.
     * @property {module:model/DeleteListenerInput}
     */
    DeleteListenerInput,

    /**
     * The DeleteLoadBalancerInput model constructor.
     * @property {module:model/DeleteLoadBalancerInput}
     */
    DeleteLoadBalancerInput,

    /**
     * The DeleteRuleInput model constructor.
     * @property {module:model/DeleteRuleInput}
     */
    DeleteRuleInput,

    /**
     * The DeleteTargetGroupInput model constructor.
     * @property {module:model/DeleteTargetGroupInput}
     */
    DeleteTargetGroupInput,

    /**
     * The DeregisterTargetsInput model constructor.
     * @property {module:model/DeregisterTargetsInput}
     */
    DeregisterTargetsInput,

    /**
     * The DescribeAccountLimitsInput model constructor.
     * @property {module:model/DescribeAccountLimitsInput}
     */
    DescribeAccountLimitsInput,

    /**
     * The DescribeAccountLimitsOutput model constructor.
     * @property {module:model/DescribeAccountLimitsOutput}
     */
    DescribeAccountLimitsOutput,

    /**
     * The DescribeListenerCertificatesInput model constructor.
     * @property {module:model/DescribeListenerCertificatesInput}
     */
    DescribeListenerCertificatesInput,

    /**
     * The DescribeListenerCertificatesOutput model constructor.
     * @property {module:model/DescribeListenerCertificatesOutput}
     */
    DescribeListenerCertificatesOutput,

    /**
     * The DescribeListenersInput model constructor.
     * @property {module:model/DescribeListenersInput}
     */
    DescribeListenersInput,

    /**
     * The DescribeListenersOutput model constructor.
     * @property {module:model/DescribeListenersOutput}
     */
    DescribeListenersOutput,

    /**
     * The DescribeLoadBalancerAttributesInput model constructor.
     * @property {module:model/DescribeLoadBalancerAttributesInput}
     */
    DescribeLoadBalancerAttributesInput,

    /**
     * The DescribeLoadBalancerAttributesOutput model constructor.
     * @property {module:model/DescribeLoadBalancerAttributesOutput}
     */
    DescribeLoadBalancerAttributesOutput,

    /**
     * The DescribeLoadBalancersInput model constructor.
     * @property {module:model/DescribeLoadBalancersInput}
     */
    DescribeLoadBalancersInput,

    /**
     * The DescribeLoadBalancersOutput model constructor.
     * @property {module:model/DescribeLoadBalancersOutput}
     */
    DescribeLoadBalancersOutput,

    /**
     * The DescribeRulesInput model constructor.
     * @property {module:model/DescribeRulesInput}
     */
    DescribeRulesInput,

    /**
     * The DescribeRulesOutput model constructor.
     * @property {module:model/DescribeRulesOutput}
     */
    DescribeRulesOutput,

    /**
     * The DescribeSSLPoliciesInput model constructor.
     * @property {module:model/DescribeSSLPoliciesInput}
     */
    DescribeSSLPoliciesInput,

    /**
     * The DescribeSSLPoliciesOutput model constructor.
     * @property {module:model/DescribeSSLPoliciesOutput}
     */
    DescribeSSLPoliciesOutput,

    /**
     * The DescribeTagsInput model constructor.
     * @property {module:model/DescribeTagsInput}
     */
    DescribeTagsInput,

    /**
     * The DescribeTagsOutput model constructor.
     * @property {module:model/DescribeTagsOutput}
     */
    DescribeTagsOutput,

    /**
     * The DescribeTargetGroupAttributesInput model constructor.
     * @property {module:model/DescribeTargetGroupAttributesInput}
     */
    DescribeTargetGroupAttributesInput,

    /**
     * The DescribeTargetGroupAttributesOutput model constructor.
     * @property {module:model/DescribeTargetGroupAttributesOutput}
     */
    DescribeTargetGroupAttributesOutput,

    /**
     * The DescribeTargetGroupsInput model constructor.
     * @property {module:model/DescribeTargetGroupsInput}
     */
    DescribeTargetGroupsInput,

    /**
     * The DescribeTargetGroupsOutput model constructor.
     * @property {module:model/DescribeTargetGroupsOutput}
     */
    DescribeTargetGroupsOutput,

    /**
     * The DescribeTargetHealthInput model constructor.
     * @property {module:model/DescribeTargetHealthInput}
     */
    DescribeTargetHealthInput,

    /**
     * The DescribeTargetHealthOutput model constructor.
     * @property {module:model/DescribeTargetHealthOutput}
     */
    DescribeTargetHealthOutput,

    /**
     * The FixedResponseActionConfig model constructor.
     * @property {module:model/FixedResponseActionConfig}
     */
    FixedResponseActionConfig,

    /**
     * The ForwardActionConfig model constructor.
     * @property {module:model/ForwardActionConfig}
     */
    ForwardActionConfig,

    /**
     * The ForwardActionConfigTargetGroupStickinessConfig model constructor.
     * @property {module:model/ForwardActionConfigTargetGroupStickinessConfig}
     */
    ForwardActionConfigTargetGroupStickinessConfig,

    /**
     * The GETCreateTargetGroupMatcherParameter model constructor.
     * @property {module:model/GETCreateTargetGroupMatcherParameter}
     */
    GETCreateTargetGroupMatcherParameter,

    /**
     * The HostHeaderConditionConfig model constructor.
     * @property {module:model/HostHeaderConditionConfig}
     */
    HostHeaderConditionConfig,

    /**
     * The HttpHeaderConditionConfig model constructor.
     * @property {module:model/HttpHeaderConditionConfig}
     */
    HttpHeaderConditionConfig,

    /**
     * The HttpRequestMethodConditionConfig model constructor.
     * @property {module:model/HttpRequestMethodConditionConfig}
     */
    HttpRequestMethodConditionConfig,

    /**
     * The IpAddressType model constructor.
     * @property {module:model/IpAddressType}
     */
    IpAddressType,

    /**
     * The Limit model constructor.
     * @property {module:model/Limit}
     */
    Limit,

    /**
     * The Listener model constructor.
     * @property {module:model/Listener}
     */
    Listener,

    /**
     * The LoadBalancer model constructor.
     * @property {module:model/LoadBalancer}
     */
    LoadBalancer,

    /**
     * The LoadBalancerAddress model constructor.
     * @property {module:model/LoadBalancerAddress}
     */
    LoadBalancerAddress,

    /**
     * The LoadBalancerAttribute model constructor.
     * @property {module:model/LoadBalancerAttribute}
     */
    LoadBalancerAttribute,

    /**
     * The LoadBalancerSchemeEnum model constructor.
     * @property {module:model/LoadBalancerSchemeEnum}
     */
    LoadBalancerSchemeEnum,

    /**
     * The LoadBalancerState model constructor.
     * @property {module:model/LoadBalancerState}
     */
    LoadBalancerState,

    /**
     * The LoadBalancerStateEnum model constructor.
     * @property {module:model/LoadBalancerStateEnum}
     */
    LoadBalancerStateEnum,

    /**
     * The LoadBalancerTypeEnum model constructor.
     * @property {module:model/LoadBalancerTypeEnum}
     */
    LoadBalancerTypeEnum,

    /**
     * The Matcher model constructor.
     * @property {module:model/Matcher}
     */
    Matcher,

    /**
     * The ModifyListenerInput model constructor.
     * @property {module:model/ModifyListenerInput}
     */
    ModifyListenerInput,

    /**
     * The ModifyListenerOutput model constructor.
     * @property {module:model/ModifyListenerOutput}
     */
    ModifyListenerOutput,

    /**
     * The ModifyLoadBalancerAttributesInput model constructor.
     * @property {module:model/ModifyLoadBalancerAttributesInput}
     */
    ModifyLoadBalancerAttributesInput,

    /**
     * The ModifyLoadBalancerAttributesOutput model constructor.
     * @property {module:model/ModifyLoadBalancerAttributesOutput}
     */
    ModifyLoadBalancerAttributesOutput,

    /**
     * The ModifyRuleInput model constructor.
     * @property {module:model/ModifyRuleInput}
     */
    ModifyRuleInput,

    /**
     * The ModifyRuleOutput model constructor.
     * @property {module:model/ModifyRuleOutput}
     */
    ModifyRuleOutput,

    /**
     * The ModifyTargetGroupAttributesInput model constructor.
     * @property {module:model/ModifyTargetGroupAttributesInput}
     */
    ModifyTargetGroupAttributesInput,

    /**
     * The ModifyTargetGroupAttributesOutput model constructor.
     * @property {module:model/ModifyTargetGroupAttributesOutput}
     */
    ModifyTargetGroupAttributesOutput,

    /**
     * The ModifyTargetGroupInput model constructor.
     * @property {module:model/ModifyTargetGroupInput}
     */
    ModifyTargetGroupInput,

    /**
     * The ModifyTargetGroupOutput model constructor.
     * @property {module:model/ModifyTargetGroupOutput}
     */
    ModifyTargetGroupOutput,

    /**
     * The PathPatternConditionConfig model constructor.
     * @property {module:model/PathPatternConditionConfig}
     */
    PathPatternConditionConfig,

    /**
     * The ProtocolEnum model constructor.
     * @property {module:model/ProtocolEnum}
     */
    ProtocolEnum,

    /**
     * The QueryStringConditionConfig model constructor.
     * @property {module:model/QueryStringConditionConfig}
     */
    QueryStringConditionConfig,

    /**
     * The QueryStringKeyValuePair model constructor.
     * @property {module:model/QueryStringKeyValuePair}
     */
    QueryStringKeyValuePair,

    /**
     * The RedirectActionConfig model constructor.
     * @property {module:model/RedirectActionConfig}
     */
    RedirectActionConfig,

    /**
     * The RedirectActionStatusCodeEnum model constructor.
     * @property {module:model/RedirectActionStatusCodeEnum}
     */
    RedirectActionStatusCodeEnum,

    /**
     * The RegisterTargetsInput model constructor.
     * @property {module:model/RegisterTargetsInput}
     */
    RegisterTargetsInput,

    /**
     * The RemoveListenerCertificatesInput model constructor.
     * @property {module:model/RemoveListenerCertificatesInput}
     */
    RemoveListenerCertificatesInput,

    /**
     * The RemoveTagsInput model constructor.
     * @property {module:model/RemoveTagsInput}
     */
    RemoveTagsInput,

    /**
     * The Rule model constructor.
     * @property {module:model/Rule}
     */
    Rule,

    /**
     * The RuleCondition model constructor.
     * @property {module:model/RuleCondition}
     */
    RuleCondition,

    /**
     * The RuleConditionHostHeaderConfig model constructor.
     * @property {module:model/RuleConditionHostHeaderConfig}
     */
    RuleConditionHostHeaderConfig,

    /**
     * The RuleConditionHttpHeaderConfig model constructor.
     * @property {module:model/RuleConditionHttpHeaderConfig}
     */
    RuleConditionHttpHeaderConfig,

    /**
     * The RuleConditionHttpRequestMethodConfig model constructor.
     * @property {module:model/RuleConditionHttpRequestMethodConfig}
     */
    RuleConditionHttpRequestMethodConfig,

    /**
     * The RuleConditionPathPatternConfig model constructor.
     * @property {module:model/RuleConditionPathPatternConfig}
     */
    RuleConditionPathPatternConfig,

    /**
     * The RuleConditionQueryStringConfig model constructor.
     * @property {module:model/RuleConditionQueryStringConfig}
     */
    RuleConditionQueryStringConfig,

    /**
     * The RuleConditionSourceIpConfig model constructor.
     * @property {module:model/RuleConditionSourceIpConfig}
     */
    RuleConditionSourceIpConfig,

    /**
     * The RulePriorityPair model constructor.
     * @property {module:model/RulePriorityPair}
     */
    RulePriorityPair,

    /**
     * The SetIpAddressTypeInput model constructor.
     * @property {module:model/SetIpAddressTypeInput}
     */
    SetIpAddressTypeInput,

    /**
     * The SetIpAddressTypeOutput model constructor.
     * @property {module:model/SetIpAddressTypeOutput}
     */
    SetIpAddressTypeOutput,

    /**
     * The SetRulePrioritiesInput model constructor.
     * @property {module:model/SetRulePrioritiesInput}
     */
    SetRulePrioritiesInput,

    /**
     * The SetRulePrioritiesOutput model constructor.
     * @property {module:model/SetRulePrioritiesOutput}
     */
    SetRulePrioritiesOutput,

    /**
     * The SetSecurityGroupsInput model constructor.
     * @property {module:model/SetSecurityGroupsInput}
     */
    SetSecurityGroupsInput,

    /**
     * The SetSecurityGroupsOutput model constructor.
     * @property {module:model/SetSecurityGroupsOutput}
     */
    SetSecurityGroupsOutput,

    /**
     * The SetSubnetsInput model constructor.
     * @property {module:model/SetSubnetsInput}
     */
    SetSubnetsInput,

    /**
     * The SetSubnetsOutput model constructor.
     * @property {module:model/SetSubnetsOutput}
     */
    SetSubnetsOutput,

    /**
     * The SourceIpConditionConfig model constructor.
     * @property {module:model/SourceIpConditionConfig}
     */
    SourceIpConditionConfig,

    /**
     * The SslPolicy model constructor.
     * @property {module:model/SslPolicy}
     */
    SslPolicy,

    /**
     * The SubnetMapping model constructor.
     * @property {module:model/SubnetMapping}
     */
    SubnetMapping,

    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag,

    /**
     * The TagDescription model constructor.
     * @property {module:model/TagDescription}
     */
    TagDescription,

    /**
     * The TargetDescription model constructor.
     * @property {module:model/TargetDescription}
     */
    TargetDescription,

    /**
     * The TargetGroup model constructor.
     * @property {module:model/TargetGroup}
     */
    TargetGroup,

    /**
     * The TargetGroupAttribute model constructor.
     * @property {module:model/TargetGroupAttribute}
     */
    TargetGroupAttribute,

    /**
     * The TargetGroupIpAddressTypeEnum model constructor.
     * @property {module:model/TargetGroupIpAddressTypeEnum}
     */
    TargetGroupIpAddressTypeEnum,

    /**
     * The TargetGroupMatcher model constructor.
     * @property {module:model/TargetGroupMatcher}
     */
    TargetGroupMatcher,

    /**
     * The TargetGroupStickinessConfig model constructor.
     * @property {module:model/TargetGroupStickinessConfig}
     */
    TargetGroupStickinessConfig,

    /**
     * The TargetGroupTuple model constructor.
     * @property {module:model/TargetGroupTuple}
     */
    TargetGroupTuple,

    /**
     * The TargetHealth model constructor.
     * @property {module:model/TargetHealth}
     */
    TargetHealth,

    /**
     * The TargetHealthDescription model constructor.
     * @property {module:model/TargetHealthDescription}
     */
    TargetHealthDescription,

    /**
     * The TargetHealthDescriptionTarget model constructor.
     * @property {module:model/TargetHealthDescriptionTarget}
     */
    TargetHealthDescriptionTarget,

    /**
     * The TargetHealthDescriptionTargetHealth model constructor.
     * @property {module:model/TargetHealthDescriptionTargetHealth}
     */
    TargetHealthDescriptionTargetHealth,

    /**
     * The TargetHealthReasonEnum model constructor.
     * @property {module:model/TargetHealthReasonEnum}
     */
    TargetHealthReasonEnum,

    /**
     * The TargetHealthStateEnum model constructor.
     * @property {module:model/TargetHealthStateEnum}
     */
    TargetHealthStateEnum,

    /**
     * The TargetTypeEnum model constructor.
     * @property {module:model/TargetTypeEnum}
     */
    TargetTypeEnum,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
