/**
 * Elastic Load Balancing
 * <fullname>Elastic Load Balancing</fullname> <p>A load balancer distributes incoming traffic across targets, such as your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered targets and ensures that it routes traffic only to healthy targets. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer. You configure a target group with a protocol and port number for connections from the load balancer to the targets, and with health check settings to be used when checking the health status of the targets.</p> <p>Elastic Load Balancing supports the following types of load balancers: Application Load Balancers, Network Load Balancers, Gateway Load Balancers, and Classic Load Balancers. This reference covers the following load balancer types:</p> <ul> <li> <p>Application Load Balancer - Operates at the application layer (layer 7) and supports HTTP and HTTPS.</p> </li> <li> <p>Network Load Balancer - Operates at the transport layer (layer 4) and supports TCP, TLS, and UDP.</p> </li> <li> <p>Gateway Load Balancer - Operates at the network layer (layer 3).</p> </li> </ul> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/\">Elastic Load Balancing User Guide</a>.</p> <p>All Elastic Load Balancing operations are idempotent, which means that they complete at most one time. If you repeat an operation, it succeeds.</p>
 *
 * The version of the OpenAPI document: 2015-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateTargetGroupInputMatcher from './CreateTargetGroupInputMatcher';
import ProtocolEnum from './ProtocolEnum';

/**
 * The ModifyTargetGroupInput model module.
 * @module model/ModifyTargetGroupInput
 * @version 2015-12-01
 */
class ModifyTargetGroupInput {
    /**
     * Constructs a new <code>ModifyTargetGroupInput</code>.
     * @alias module:model/ModifyTargetGroupInput
     * @param targetGroupArn {String} 
     */
    constructor(targetGroupArn) { 
        
        ModifyTargetGroupInput.initialize(this, targetGroupArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, targetGroupArn) { 
        obj['TargetGroupArn'] = targetGroupArn;
    }

    /**
     * Constructs a <code>ModifyTargetGroupInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModifyTargetGroupInput} obj Optional instance to populate.
     * @return {module:model/ModifyTargetGroupInput} The populated <code>ModifyTargetGroupInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModifyTargetGroupInput();

            if (data.hasOwnProperty('TargetGroupArn')) {
                obj['TargetGroupArn'] = ApiClient.convertToType(data['TargetGroupArn'], 'String');
            }
            if (data.hasOwnProperty('HealthCheckProtocol')) {
                obj['HealthCheckProtocol'] = ApiClient.convertToType(data['HealthCheckProtocol'], ProtocolEnum);
            }
            if (data.hasOwnProperty('HealthCheckPort')) {
                obj['HealthCheckPort'] = ApiClient.convertToType(data['HealthCheckPort'], 'String');
            }
            if (data.hasOwnProperty('HealthCheckPath')) {
                obj['HealthCheckPath'] = ApiClient.convertToType(data['HealthCheckPath'], 'String');
            }
            if (data.hasOwnProperty('HealthCheckEnabled')) {
                obj['HealthCheckEnabled'] = ApiClient.convertToType(data['HealthCheckEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('HealthCheckIntervalSeconds')) {
                obj['HealthCheckIntervalSeconds'] = ApiClient.convertToType(data['HealthCheckIntervalSeconds'], 'Number');
            }
            if (data.hasOwnProperty('HealthCheckTimeoutSeconds')) {
                obj['HealthCheckTimeoutSeconds'] = ApiClient.convertToType(data['HealthCheckTimeoutSeconds'], 'Number');
            }
            if (data.hasOwnProperty('HealthyThresholdCount')) {
                obj['HealthyThresholdCount'] = ApiClient.convertToType(data['HealthyThresholdCount'], 'Number');
            }
            if (data.hasOwnProperty('UnhealthyThresholdCount')) {
                obj['UnhealthyThresholdCount'] = ApiClient.convertToType(data['UnhealthyThresholdCount'], 'Number');
            }
            if (data.hasOwnProperty('Matcher')) {
                obj['Matcher'] = CreateTargetGroupInputMatcher.constructFromObject(data['Matcher']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModifyTargetGroupInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModifyTargetGroupInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ModifyTargetGroupInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `TargetGroupArn`
        if (data['TargetGroupArn']) { // data not null
          String.validateJSON(data['TargetGroupArn']);
        }
        // validate the optional field `HealthCheckProtocol`
        if (data['HealthCheckProtocol']) { // data not null
          ProtocolEnum.validateJSON(data['HealthCheckProtocol']);
        }
        // validate the optional field `HealthCheckPort`
        if (data['HealthCheckPort']) { // data not null
          String.validateJSON(data['HealthCheckPort']);
        }
        // validate the optional field `HealthCheckPath`
        if (data['HealthCheckPath']) { // data not null
          String.validateJSON(data['HealthCheckPath']);
        }
        // validate the optional field `HealthCheckEnabled`
        if (data['HealthCheckEnabled']) { // data not null
          Boolean.validateJSON(data['HealthCheckEnabled']);
        }
        // validate the optional field `HealthCheckIntervalSeconds`
        if (data['HealthCheckIntervalSeconds']) { // data not null
          Number.validateJSON(data['HealthCheckIntervalSeconds']);
        }
        // validate the optional field `HealthCheckTimeoutSeconds`
        if (data['HealthCheckTimeoutSeconds']) { // data not null
          Number.validateJSON(data['HealthCheckTimeoutSeconds']);
        }
        // validate the optional field `HealthyThresholdCount`
        if (data['HealthyThresholdCount']) { // data not null
          Number.validateJSON(data['HealthyThresholdCount']);
        }
        // validate the optional field `UnhealthyThresholdCount`
        if (data['UnhealthyThresholdCount']) { // data not null
          Number.validateJSON(data['UnhealthyThresholdCount']);
        }
        // validate the optional field `Matcher`
        if (data['Matcher']) { // data not null
          CreateTargetGroupInputMatcher.validateJSON(data['Matcher']);
        }

        return true;
    }


}

ModifyTargetGroupInput.RequiredProperties = ["TargetGroupArn"];

/**
 * @member {String} TargetGroupArn
 */
ModifyTargetGroupInput.prototype['TargetGroupArn'] = undefined;

/**
 * @member {module:model/ProtocolEnum} HealthCheckProtocol
 */
ModifyTargetGroupInput.prototype['HealthCheckProtocol'] = undefined;

/**
 * @member {String} HealthCheckPort
 */
ModifyTargetGroupInput.prototype['HealthCheckPort'] = undefined;

/**
 * @member {String} HealthCheckPath
 */
ModifyTargetGroupInput.prototype['HealthCheckPath'] = undefined;

/**
 * @member {Boolean} HealthCheckEnabled
 */
ModifyTargetGroupInput.prototype['HealthCheckEnabled'] = undefined;

/**
 * @member {Number} HealthCheckIntervalSeconds
 */
ModifyTargetGroupInput.prototype['HealthCheckIntervalSeconds'] = undefined;

/**
 * @member {Number} HealthCheckTimeoutSeconds
 */
ModifyTargetGroupInput.prototype['HealthCheckTimeoutSeconds'] = undefined;

/**
 * @member {Number} HealthyThresholdCount
 */
ModifyTargetGroupInput.prototype['HealthyThresholdCount'] = undefined;

/**
 * @member {Number} UnhealthyThresholdCount
 */
ModifyTargetGroupInput.prototype['UnhealthyThresholdCount'] = undefined;

/**
 * @member {module:model/CreateTargetGroupInputMatcher} Matcher
 */
ModifyTargetGroupInput.prototype['Matcher'] = undefined;






export default ModifyTargetGroupInput;

