/*
 * Elastic Load Balancing
 * <fullname>Elastic Load Balancing</fullname> <p>A load balancer distributes incoming traffic across targets, such as your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered targets and ensures that it routes traffic only to healthy targets. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer. You configure a target group with a protocol and port number for connections from the load balancer to the targets, and with health check settings to be used when checking the health status of the targets.</p> <p>Elastic Load Balancing supports the following types of load balancers: Application Load Balancers, Network Load Balancers, Gateway Load Balancers, and Classic Load Balancers. This reference covers the following load balancer types:</p> <ul> <li> <p>Application Load Balancer - Operates at the application layer (layer 7) and supports HTTP and HTTPS.</p> </li> <li> <p>Network Load Balancer - Operates at the transport layer (layer 4) and supports TCP, TLS, and UDP.</p> </li> <li> <p>Gateway Load Balancer - Operates at the network layer (layer 3).</p> </li> </ul> <p>For more information, see the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/\">Elastic Load Balancing User Guide</a>.</p> <p>All Elastic Load Balancing operations are idempotent, which means that they complete at most one time. If you repeat an operation, it succeeds.</p>
 *
 * The version of the OpenAPI document: 2015-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.IpAddressType;
import org.openapitools.client.model.LoadBalancerSchemeEnum;
import org.openapitools.client.model.LoadBalancerState;
import org.openapitools.client.model.LoadBalancerTypeEnum;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about a load balancer.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:23:43.672707-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LoadBalancer {
  public static final String SERIALIZED_NAME_LOAD_BALANCER_ARN = "LoadBalancerArn";
  @SerializedName(SERIALIZED_NAME_LOAD_BALANCER_ARN)
  private String loadBalancerArn;

  public static final String SERIALIZED_NAME_DN_S_NAME = "DNSName";
  @SerializedName(SERIALIZED_NAME_DN_S_NAME)
  private String dnSName;

  public static final String SERIALIZED_NAME_CANONICAL_HOSTED_ZONE_ID = "CanonicalHostedZoneId";
  @SerializedName(SERIALIZED_NAME_CANONICAL_HOSTED_ZONE_ID)
  private String canonicalHostedZoneId;

  public static final String SERIALIZED_NAME_CREATED_TIME = "CreatedTime";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private OffsetDateTime createdTime;

  public static final String SERIALIZED_NAME_LOAD_BALANCER_NAME = "LoadBalancerName";
  @SerializedName(SERIALIZED_NAME_LOAD_BALANCER_NAME)
  private String loadBalancerName;

  public static final String SERIALIZED_NAME_SCHEME = "Scheme";
  @SerializedName(SERIALIZED_NAME_SCHEME)
  private LoadBalancerSchemeEnum scheme;

  public static final String SERIALIZED_NAME_VPC_ID = "VpcId";
  @SerializedName(SERIALIZED_NAME_VPC_ID)
  private String vpcId;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private LoadBalancerState state;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private LoadBalancerTypeEnum type;

  public static final String SERIALIZED_NAME_AVAILABILITY_ZONES = "AvailabilityZones";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONES)
  private List availabilityZones;

  public static final String SERIALIZED_NAME_SECURITY_GROUPS = "SecurityGroups";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUPS)
  private List securityGroups;

  public static final String SERIALIZED_NAME_IP_ADDRESS_TYPE = "IpAddressType";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS_TYPE)
  private IpAddressType ipAddressType;

  public static final String SERIALIZED_NAME_CUSTOMER_OWNED_IPV4_POOL = "CustomerOwnedIpv4Pool";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_OWNED_IPV4_POOL)
  private String customerOwnedIpv4Pool;

  public LoadBalancer() {
  }

  public LoadBalancer loadBalancerArn(String loadBalancerArn) {
    this.loadBalancerArn = loadBalancerArn;
    return this;
  }

  /**
   * Get loadBalancerArn
   * @return loadBalancerArn
   */
  @javax.annotation.Nullable
  public String getLoadBalancerArn() {
    return loadBalancerArn;
  }

  public void setLoadBalancerArn(String loadBalancerArn) {
    this.loadBalancerArn = loadBalancerArn;
  }


  public LoadBalancer dnSName(String dnSName) {
    this.dnSName = dnSName;
    return this;
  }

  /**
   * Get dnSName
   * @return dnSName
   */
  @javax.annotation.Nullable
  public String getDnSName() {
    return dnSName;
  }

  public void setDnSName(String dnSName) {
    this.dnSName = dnSName;
  }


  public LoadBalancer canonicalHostedZoneId(String canonicalHostedZoneId) {
    this.canonicalHostedZoneId = canonicalHostedZoneId;
    return this;
  }

  /**
   * Get canonicalHostedZoneId
   * @return canonicalHostedZoneId
   */
  @javax.annotation.Nullable
  public String getCanonicalHostedZoneId() {
    return canonicalHostedZoneId;
  }

  public void setCanonicalHostedZoneId(String canonicalHostedZoneId) {
    this.canonicalHostedZoneId = canonicalHostedZoneId;
  }


  public LoadBalancer createdTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * Get createdTime
   * @return createdTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
  }


  public LoadBalancer loadBalancerName(String loadBalancerName) {
    this.loadBalancerName = loadBalancerName;
    return this;
  }

  /**
   * Get loadBalancerName
   * @return loadBalancerName
   */
  @javax.annotation.Nullable
  public String getLoadBalancerName() {
    return loadBalancerName;
  }

  public void setLoadBalancerName(String loadBalancerName) {
    this.loadBalancerName = loadBalancerName;
  }


  public LoadBalancer scheme(LoadBalancerSchemeEnum scheme) {
    this.scheme = scheme;
    return this;
  }

  /**
   * Get scheme
   * @return scheme
   */
  @javax.annotation.Nullable
  public LoadBalancerSchemeEnum getScheme() {
    return scheme;
  }

  public void setScheme(LoadBalancerSchemeEnum scheme) {
    this.scheme = scheme;
  }


  public LoadBalancer vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

  /**
   * Get vpcId
   * @return vpcId
   */
  @javax.annotation.Nullable
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }


  public LoadBalancer state(LoadBalancerState state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public LoadBalancerState getState() {
    return state;
  }

  public void setState(LoadBalancerState state) {
    this.state = state;
  }


  public LoadBalancer type(LoadBalancerTypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public LoadBalancerTypeEnum getType() {
    return type;
  }

  public void setType(LoadBalancerTypeEnum type) {
    this.type = type;
  }


  public LoadBalancer availabilityZones(List availabilityZones) {
    this.availabilityZones = availabilityZones;
    return this;
  }

  /**
   * Get availabilityZones
   * @return availabilityZones
   */
  @javax.annotation.Nullable
  public List getAvailabilityZones() {
    return availabilityZones;
  }

  public void setAvailabilityZones(List availabilityZones) {
    this.availabilityZones = availabilityZones;
  }


  public LoadBalancer securityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
    return this;
  }

  /**
   * Get securityGroups
   * @return securityGroups
   */
  @javax.annotation.Nullable
  public List getSecurityGroups() {
    return securityGroups;
  }

  public void setSecurityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
  }


  public LoadBalancer ipAddressType(IpAddressType ipAddressType) {
    this.ipAddressType = ipAddressType;
    return this;
  }

  /**
   * Get ipAddressType
   * @return ipAddressType
   */
  @javax.annotation.Nullable
  public IpAddressType getIpAddressType() {
    return ipAddressType;
  }

  public void setIpAddressType(IpAddressType ipAddressType) {
    this.ipAddressType = ipAddressType;
  }


  public LoadBalancer customerOwnedIpv4Pool(String customerOwnedIpv4Pool) {
    this.customerOwnedIpv4Pool = customerOwnedIpv4Pool;
    return this;
  }

  /**
   * Get customerOwnedIpv4Pool
   * @return customerOwnedIpv4Pool
   */
  @javax.annotation.Nullable
  public String getCustomerOwnedIpv4Pool() {
    return customerOwnedIpv4Pool;
  }

  public void setCustomerOwnedIpv4Pool(String customerOwnedIpv4Pool) {
    this.customerOwnedIpv4Pool = customerOwnedIpv4Pool;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoadBalancer loadBalancer = (LoadBalancer) o;
    return Objects.equals(this.loadBalancerArn, loadBalancer.loadBalancerArn) &&
        Objects.equals(this.dnSName, loadBalancer.dnSName) &&
        Objects.equals(this.canonicalHostedZoneId, loadBalancer.canonicalHostedZoneId) &&
        Objects.equals(this.createdTime, loadBalancer.createdTime) &&
        Objects.equals(this.loadBalancerName, loadBalancer.loadBalancerName) &&
        Objects.equals(this.scheme, loadBalancer.scheme) &&
        Objects.equals(this.vpcId, loadBalancer.vpcId) &&
        Objects.equals(this.state, loadBalancer.state) &&
        Objects.equals(this.type, loadBalancer.type) &&
        Objects.equals(this.availabilityZones, loadBalancer.availabilityZones) &&
        Objects.equals(this.securityGroups, loadBalancer.securityGroups) &&
        Objects.equals(this.ipAddressType, loadBalancer.ipAddressType) &&
        Objects.equals(this.customerOwnedIpv4Pool, loadBalancer.customerOwnedIpv4Pool);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loadBalancerArn, dnSName, canonicalHostedZoneId, createdTime, loadBalancerName, scheme, vpcId, state, type, availabilityZones, securityGroups, ipAddressType, customerOwnedIpv4Pool);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoadBalancer {\n");
    sb.append("    loadBalancerArn: ").append(toIndentedString(loadBalancerArn)).append("\n");
    sb.append("    dnSName: ").append(toIndentedString(dnSName)).append("\n");
    sb.append("    canonicalHostedZoneId: ").append(toIndentedString(canonicalHostedZoneId)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    loadBalancerName: ").append(toIndentedString(loadBalancerName)).append("\n");
    sb.append("    scheme: ").append(toIndentedString(scheme)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    availabilityZones: ").append(toIndentedString(availabilityZones)).append("\n");
    sb.append("    securityGroups: ").append(toIndentedString(securityGroups)).append("\n");
    sb.append("    ipAddressType: ").append(toIndentedString(ipAddressType)).append("\n");
    sb.append("    customerOwnedIpv4Pool: ").append(toIndentedString(customerOwnedIpv4Pool)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("LoadBalancerArn");
    openapiFields.add("DNSName");
    openapiFields.add("CanonicalHostedZoneId");
    openapiFields.add("CreatedTime");
    openapiFields.add("LoadBalancerName");
    openapiFields.add("Scheme");
    openapiFields.add("VpcId");
    openapiFields.add("State");
    openapiFields.add("Type");
    openapiFields.add("AvailabilityZones");
    openapiFields.add("SecurityGroups");
    openapiFields.add("IpAddressType");
    openapiFields.add("CustomerOwnedIpv4Pool");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LoadBalancer
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LoadBalancer.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LoadBalancer is not found in the empty JSON string", LoadBalancer.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LoadBalancer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LoadBalancer` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `LoadBalancerArn`
      if (jsonObj.get("LoadBalancerArn") != null && !jsonObj.get("LoadBalancerArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LoadBalancerArn"));
      }
      // validate the optional field `DNSName`
      if (jsonObj.get("DNSName") != null && !jsonObj.get("DNSName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DNSName"));
      }
      // validate the optional field `CanonicalHostedZoneId`
      if (jsonObj.get("CanonicalHostedZoneId") != null && !jsonObj.get("CanonicalHostedZoneId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CanonicalHostedZoneId"));
      }
      // validate the optional field `CreatedTime`
      if (jsonObj.get("CreatedTime") != null && !jsonObj.get("CreatedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedTime"));
      }
      // validate the optional field `LoadBalancerName`
      if (jsonObj.get("LoadBalancerName") != null && !jsonObj.get("LoadBalancerName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LoadBalancerName"));
      }
      // validate the optional field `Scheme`
      if (jsonObj.get("Scheme") != null && !jsonObj.get("Scheme").isJsonNull()) {
        LoadBalancerSchemeEnum.validateJsonElement(jsonObj.get("Scheme"));
      }
      // validate the optional field `VpcId`
      if (jsonObj.get("VpcId") != null && !jsonObj.get("VpcId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VpcId"));
      }
      // validate the optional field `State`
      if (jsonObj.get("State") != null && !jsonObj.get("State").isJsonNull()) {
        LoadBalancerState.validateJsonElement(jsonObj.get("State"));
      }
      // validate the optional field `Type`
      if (jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) {
        LoadBalancerTypeEnum.validateJsonElement(jsonObj.get("Type"));
      }
      // validate the optional field `AvailabilityZones`
      if (jsonObj.get("AvailabilityZones") != null && !jsonObj.get("AvailabilityZones").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AvailabilityZones"));
      }
      // validate the optional field `SecurityGroups`
      if (jsonObj.get("SecurityGroups") != null && !jsonObj.get("SecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroups"));
      }
      // validate the optional field `IpAddressType`
      if (jsonObj.get("IpAddressType") != null && !jsonObj.get("IpAddressType").isJsonNull()) {
        IpAddressType.validateJsonElement(jsonObj.get("IpAddressType"));
      }
      // validate the optional field `CustomerOwnedIpv4Pool`
      if (jsonObj.get("CustomerOwnedIpv4Pool") != null && !jsonObj.get("CustomerOwnedIpv4Pool").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CustomerOwnedIpv4Pool"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LoadBalancer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LoadBalancer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LoadBalancer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LoadBalancer.class));

       return (TypeAdapter<T>) new TypeAdapter<LoadBalancer>() {
           @Override
           public void write(JsonWriter out, LoadBalancer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LoadBalancer read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LoadBalancer given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LoadBalancer
   * @throws IOException if the JSON string is invalid with respect to LoadBalancer
   */
  public static LoadBalancer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LoadBalancer.class);
  }

  /**
   * Convert an instance of LoadBalancer to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

