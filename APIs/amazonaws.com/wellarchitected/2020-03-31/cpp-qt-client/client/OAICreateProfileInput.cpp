/**
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateProfileInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateProfileInput::OAICreateProfileInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateProfileInput::OAICreateProfileInput() {
    this->initializeModel();
}

OAICreateProfileInput::~OAICreateProfileInput() {}

void OAICreateProfileInput::initializeModel() {

    m_profile_name_isSet = false;
    m_profile_name_isValid = false;

    m_profile_description_isSet = false;
    m_profile_description_isValid = false;

    m_profile_questions_isSet = false;
    m_profile_questions_isValid = false;

    m_client_request_token_isSet = false;
    m_client_request_token_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateProfileInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateProfileInput::fromJsonObject(QJsonObject json) {

    m_profile_name_isValid = ::OpenAPI::fromJsonValue(m_profile_name, json[QString("ProfileName")]);
    m_profile_name_isSet = !json[QString("ProfileName")].isNull() && m_profile_name_isValid;

    m_profile_description_isValid = ::OpenAPI::fromJsonValue(m_profile_description, json[QString("ProfileDescription")]);
    m_profile_description_isSet = !json[QString("ProfileDescription")].isNull() && m_profile_description_isValid;

    m_profile_questions_isValid = ::OpenAPI::fromJsonValue(m_profile_questions, json[QString("ProfileQuestions")]);
    m_profile_questions_isSet = !json[QString("ProfileQuestions")].isNull() && m_profile_questions_isValid;

    m_client_request_token_isValid = ::OpenAPI::fromJsonValue(m_client_request_token, json[QString("ClientRequestToken")]);
    m_client_request_token_isSet = !json[QString("ClientRequestToken")].isNull() && m_client_request_token_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAICreateProfileInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateProfileInput::asJsonObject() const {
    QJsonObject obj;
    if (m_profile_name_isSet) {
        obj.insert(QString("ProfileName"), ::OpenAPI::toJsonValue(m_profile_name));
    }
    if (m_profile_description_isSet) {
        obj.insert(QString("ProfileDescription"), ::OpenAPI::toJsonValue(m_profile_description));
    }
    if (m_profile_questions.isSet()) {
        obj.insert(QString("ProfileQuestions"), ::OpenAPI::toJsonValue(m_profile_questions));
    }
    if (m_client_request_token_isSet) {
        obj.insert(QString("ClientRequestToken"), ::OpenAPI::toJsonValue(m_client_request_token));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAICreateProfileInput::getProfileName() const {
    return m_profile_name;
}
void OAICreateProfileInput::setProfileName(const QString &profile_name) {
    m_profile_name = profile_name;
    m_profile_name_isSet = true;
}

bool OAICreateProfileInput::is_profile_name_Set() const{
    return m_profile_name_isSet;
}

bool OAICreateProfileInput::is_profile_name_Valid() const{
    return m_profile_name_isValid;
}

QString OAICreateProfileInput::getProfileDescription() const {
    return m_profile_description;
}
void OAICreateProfileInput::setProfileDescription(const QString &profile_description) {
    m_profile_description = profile_description;
    m_profile_description_isSet = true;
}

bool OAICreateProfileInput::is_profile_description_Set() const{
    return m_profile_description_isSet;
}

bool OAICreateProfileInput::is_profile_description_Valid() const{
    return m_profile_description_isValid;
}

QList OAICreateProfileInput::getProfileQuestions() const {
    return m_profile_questions;
}
void OAICreateProfileInput::setProfileQuestions(const QList &profile_questions) {
    m_profile_questions = profile_questions;
    m_profile_questions_isSet = true;
}

bool OAICreateProfileInput::is_profile_questions_Set() const{
    return m_profile_questions_isSet;
}

bool OAICreateProfileInput::is_profile_questions_Valid() const{
    return m_profile_questions_isValid;
}

QString OAICreateProfileInput::getClientRequestToken() const {
    return m_client_request_token;
}
void OAICreateProfileInput::setClientRequestToken(const QString &client_request_token) {
    m_client_request_token = client_request_token;
    m_client_request_token_isSet = true;
}

bool OAICreateProfileInput::is_client_request_token_Set() const{
    return m_client_request_token_isSet;
}

bool OAICreateProfileInput::is_client_request_token_Valid() const{
    return m_client_request_token_isValid;
}

QMap OAICreateProfileInput::getTags() const {
    return m_tags;
}
void OAICreateProfileInput::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateProfileInput::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateProfileInput::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateProfileInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_profile_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_questions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_request_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateProfileInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_profile_name_isValid && m_profile_description_isValid && m_profile_questions_isValid && m_client_request_token_isValid && true;
}

} // namespace OpenAPI
