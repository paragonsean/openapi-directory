/**
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateWorkloadInput_DiscoveryConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateWorkloadInput_DiscoveryConfig::OAICreateWorkloadInput_DiscoveryConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateWorkloadInput_DiscoveryConfig::OAICreateWorkloadInput_DiscoveryConfig() {
    this->initializeModel();
}

OAICreateWorkloadInput_DiscoveryConfig::~OAICreateWorkloadInput_DiscoveryConfig() {}

void OAICreateWorkloadInput_DiscoveryConfig::initializeModel() {

    m_trusted_advisor_integration_status_isSet = false;
    m_trusted_advisor_integration_status_isValid = false;

    m_workload_resource_definition_isSet = false;
    m_workload_resource_definition_isValid = false;
}

void OAICreateWorkloadInput_DiscoveryConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateWorkloadInput_DiscoveryConfig::fromJsonObject(QJsonObject json) {

    m_trusted_advisor_integration_status_isValid = ::OpenAPI::fromJsonValue(m_trusted_advisor_integration_status, json[QString("TrustedAdvisorIntegrationStatus")]);
    m_trusted_advisor_integration_status_isSet = !json[QString("TrustedAdvisorIntegrationStatus")].isNull() && m_trusted_advisor_integration_status_isValid;

    m_workload_resource_definition_isValid = ::OpenAPI::fromJsonValue(m_workload_resource_definition, json[QString("WorkloadResourceDefinition")]);
    m_workload_resource_definition_isSet = !json[QString("WorkloadResourceDefinition")].isNull() && m_workload_resource_definition_isValid;
}

QString OAICreateWorkloadInput_DiscoveryConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateWorkloadInput_DiscoveryConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_trusted_advisor_integration_status.isSet()) {
        obj.insert(QString("TrustedAdvisorIntegrationStatus"), ::OpenAPI::toJsonValue(m_trusted_advisor_integration_status));
    }
    if (m_workload_resource_definition.isSet()) {
        obj.insert(QString("WorkloadResourceDefinition"), ::OpenAPI::toJsonValue(m_workload_resource_definition));
    }
    return obj;
}

OAITrustedAdvisorIntegrationStatus OAICreateWorkloadInput_DiscoveryConfig::getTrustedAdvisorIntegrationStatus() const {
    return m_trusted_advisor_integration_status;
}
void OAICreateWorkloadInput_DiscoveryConfig::setTrustedAdvisorIntegrationStatus(const OAITrustedAdvisorIntegrationStatus &trusted_advisor_integration_status) {
    m_trusted_advisor_integration_status = trusted_advisor_integration_status;
    m_trusted_advisor_integration_status_isSet = true;
}

bool OAICreateWorkloadInput_DiscoveryConfig::is_trusted_advisor_integration_status_Set() const{
    return m_trusted_advisor_integration_status_isSet;
}

bool OAICreateWorkloadInput_DiscoveryConfig::is_trusted_advisor_integration_status_Valid() const{
    return m_trusted_advisor_integration_status_isValid;
}

QList OAICreateWorkloadInput_DiscoveryConfig::getWorkloadResourceDefinition() const {
    return m_workload_resource_definition;
}
void OAICreateWorkloadInput_DiscoveryConfig::setWorkloadResourceDefinition(const QList &workload_resource_definition) {
    m_workload_resource_definition = workload_resource_definition;
    m_workload_resource_definition_isSet = true;
}

bool OAICreateWorkloadInput_DiscoveryConfig::is_workload_resource_definition_Set() const{
    return m_workload_resource_definition_isSet;
}

bool OAICreateWorkloadInput_DiscoveryConfig::is_workload_resource_definition_Valid() const{
    return m_workload_resource_definition_isValid;
}

bool OAICreateWorkloadInput_DiscoveryConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_trusted_advisor_integration_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_workload_resource_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateWorkloadInput_DiscoveryConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
