/**
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetWorkloadOutput.h
 *
 * Output of a get workload call.
 */

#ifndef OAIGetWorkloadOutput_H
#define OAIGetWorkloadOutput_H

#include <QJsonObject>

#include "OAIWorkload.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWorkload;

class OAIGetWorkloadOutput : public OAIObject {
public:
    OAIGetWorkloadOutput();
    OAIGetWorkloadOutput(QString json);
    ~OAIGetWorkloadOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIWorkload getWorkload() const;
    void setWorkload(const OAIWorkload &workload);
    bool is_workload_Set() const;
    bool is_workload_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIWorkload m_workload;
    bool m_workload_isSet;
    bool m_workload_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetWorkloadOutput)

#endif // OAIGetWorkloadOutput_H
