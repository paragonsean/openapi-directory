/**
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICheckSummary.h
 *
 * Trusted Advisor check summary.
 */

#ifndef OAICheckSummary_H
#define OAICheckSummary_H

#include <QJsonObject>

#include "OAICheckProvider.h"
#include "OAICheckStatus.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICheckSummary : public OAIObject {
public:
    OAICheckSummary();
    OAICheckSummary(QString json);
    ~OAICheckSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAICheckProvider getProvider() const;
    void setProvider(const OAICheckProvider &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getLensArn() const;
    void setLensArn(const QString &lens_arn);
    bool is_lens_arn_Set() const;
    bool is_lens_arn_Valid() const;

    QString getPillarId() const;
    void setPillarId(const QString &pillar_id);
    bool is_pillar_id_Set() const;
    bool is_pillar_id_Valid() const;

    QString getQuestionId() const;
    void setQuestionId(const QString &question_id);
    bool is_question_id_Set() const;
    bool is_question_id_Valid() const;

    QString getChoiceId() const;
    void setChoiceId(const QString &choice_id);
    bool is_choice_id_Set() const;
    bool is_choice_id_Valid() const;

    OAICheckStatus getStatus() const;
    void setStatus(const OAICheckStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QMap getAccountSummary() const;
    void setAccountSummary(const QMap &account_summary);
    bool is_account_summary_Set() const;
    bool is_account_summary_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAICheckProvider m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_lens_arn;
    bool m_lens_arn_isSet;
    bool m_lens_arn_isValid;

    QString m_pillar_id;
    bool m_pillar_id_isSet;
    bool m_pillar_id_isValid;

    QString m_question_id;
    bool m_question_id_isSet;
    bool m_question_id_isValid;

    QString m_choice_id;
    bool m_choice_id_isSet;
    bool m_choice_id_isValid;

    OAICheckStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QMap m_account_summary;
    bool m_account_summary_isSet;
    bool m_account_summary_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICheckSummary)

#endif // OAICheckSummary_H
