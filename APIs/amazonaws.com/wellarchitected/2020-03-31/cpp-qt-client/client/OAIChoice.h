/**
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChoice.h
 *
 * A choice available to answer question.
 */

#ifndef OAIChoice_H
#define OAIChoice_H

#include <QJsonObject>

#include "OAIChoice_HelpfulResource.h"
#include "OAIChoice_ImprovementPlan.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChoice_HelpfulResource;
class OAIChoice_ImprovementPlan;

class OAIChoice : public OAIObject {
public:
    OAIChoice();
    OAIChoice(QString json);
    ~OAIChoice() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getChoiceId() const;
    void setChoiceId(const QString &choice_id);
    bool is_choice_id_Set() const;
    bool is_choice_id_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIChoice_HelpfulResource getHelpfulResource() const;
    void setHelpfulResource(const OAIChoice_HelpfulResource &helpful_resource);
    bool is_helpful_resource_Set() const;
    bool is_helpful_resource_Valid() const;

    OAIChoice_ImprovementPlan getImprovementPlan() const;
    void setImprovementPlan(const OAIChoice_ImprovementPlan &improvement_plan);
    bool is_improvement_plan_Set() const;
    bool is_improvement_plan_Valid() const;

    QList getAdditionalResources() const;
    void setAdditionalResources(const QList &additional_resources);
    bool is_additional_resources_Set() const;
    bool is_additional_resources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_choice_id;
    bool m_choice_id_isSet;
    bool m_choice_id_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIChoice_HelpfulResource m_helpful_resource;
    bool m_helpful_resource_isSet;
    bool m_helpful_resource_isValid;

    OAIChoice_ImprovementPlan m_improvement_plan;
    bool m_improvement_plan_isSet;
    bool m_improvement_plan_isValid;

    QList m_additional_resources;
    bool m_additional_resources_isSet;
    bool m_additional_resources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChoice)

#endif // OAIChoice_H
