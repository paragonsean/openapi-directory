/**
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProfileNotificationSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProfileNotificationSummary::OAIProfileNotificationSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProfileNotificationSummary::OAIProfileNotificationSummary() {
    this->initializeModel();
}

OAIProfileNotificationSummary::~OAIProfileNotificationSummary() {}

void OAIProfileNotificationSummary::initializeModel() {

    m_current_profile_version_isSet = false;
    m_current_profile_version_isValid = false;

    m_latest_profile_version_isSet = false;
    m_latest_profile_version_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_profile_arn_isSet = false;
    m_profile_arn_isValid = false;

    m_profile_name_isSet = false;
    m_profile_name_isValid = false;

    m_workload_id_isSet = false;
    m_workload_id_isValid = false;

    m_workload_name_isSet = false;
    m_workload_name_isValid = false;
}

void OAIProfileNotificationSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProfileNotificationSummary::fromJsonObject(QJsonObject json) {

    m_current_profile_version_isValid = ::OpenAPI::fromJsonValue(m_current_profile_version, json[QString("CurrentProfileVersion")]);
    m_current_profile_version_isSet = !json[QString("CurrentProfileVersion")].isNull() && m_current_profile_version_isValid;

    m_latest_profile_version_isValid = ::OpenAPI::fromJsonValue(m_latest_profile_version, json[QString("LatestProfileVersion")]);
    m_latest_profile_version_isSet = !json[QString("LatestProfileVersion")].isNull() && m_latest_profile_version_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_profile_arn_isValid = ::OpenAPI::fromJsonValue(m_profile_arn, json[QString("ProfileArn")]);
    m_profile_arn_isSet = !json[QString("ProfileArn")].isNull() && m_profile_arn_isValid;

    m_profile_name_isValid = ::OpenAPI::fromJsonValue(m_profile_name, json[QString("ProfileName")]);
    m_profile_name_isSet = !json[QString("ProfileName")].isNull() && m_profile_name_isValid;

    m_workload_id_isValid = ::OpenAPI::fromJsonValue(m_workload_id, json[QString("WorkloadId")]);
    m_workload_id_isSet = !json[QString("WorkloadId")].isNull() && m_workload_id_isValid;

    m_workload_name_isValid = ::OpenAPI::fromJsonValue(m_workload_name, json[QString("WorkloadName")]);
    m_workload_name_isSet = !json[QString("WorkloadName")].isNull() && m_workload_name_isValid;
}

QString OAIProfileNotificationSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProfileNotificationSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_current_profile_version_isSet) {
        obj.insert(QString("CurrentProfileVersion"), ::OpenAPI::toJsonValue(m_current_profile_version));
    }
    if (m_latest_profile_version_isSet) {
        obj.insert(QString("LatestProfileVersion"), ::OpenAPI::toJsonValue(m_latest_profile_version));
    }
    if (m_type.isSet()) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_profile_arn_isSet) {
        obj.insert(QString("ProfileArn"), ::OpenAPI::toJsonValue(m_profile_arn));
    }
    if (m_profile_name_isSet) {
        obj.insert(QString("ProfileName"), ::OpenAPI::toJsonValue(m_profile_name));
    }
    if (m_workload_id_isSet) {
        obj.insert(QString("WorkloadId"), ::OpenAPI::toJsonValue(m_workload_id));
    }
    if (m_workload_name_isSet) {
        obj.insert(QString("WorkloadName"), ::OpenAPI::toJsonValue(m_workload_name));
    }
    return obj;
}

QString OAIProfileNotificationSummary::getCurrentProfileVersion() const {
    return m_current_profile_version;
}
void OAIProfileNotificationSummary::setCurrentProfileVersion(const QString &current_profile_version) {
    m_current_profile_version = current_profile_version;
    m_current_profile_version_isSet = true;
}

bool OAIProfileNotificationSummary::is_current_profile_version_Set() const{
    return m_current_profile_version_isSet;
}

bool OAIProfileNotificationSummary::is_current_profile_version_Valid() const{
    return m_current_profile_version_isValid;
}

QString OAIProfileNotificationSummary::getLatestProfileVersion() const {
    return m_latest_profile_version;
}
void OAIProfileNotificationSummary::setLatestProfileVersion(const QString &latest_profile_version) {
    m_latest_profile_version = latest_profile_version;
    m_latest_profile_version_isSet = true;
}

bool OAIProfileNotificationSummary::is_latest_profile_version_Set() const{
    return m_latest_profile_version_isSet;
}

bool OAIProfileNotificationSummary::is_latest_profile_version_Valid() const{
    return m_latest_profile_version_isValid;
}

OAIProfileNotificationType OAIProfileNotificationSummary::getType() const {
    return m_type;
}
void OAIProfileNotificationSummary::setType(const OAIProfileNotificationType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIProfileNotificationSummary::is_type_Set() const{
    return m_type_isSet;
}

bool OAIProfileNotificationSummary::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIProfileNotificationSummary::getProfileArn() const {
    return m_profile_arn;
}
void OAIProfileNotificationSummary::setProfileArn(const QString &profile_arn) {
    m_profile_arn = profile_arn;
    m_profile_arn_isSet = true;
}

bool OAIProfileNotificationSummary::is_profile_arn_Set() const{
    return m_profile_arn_isSet;
}

bool OAIProfileNotificationSummary::is_profile_arn_Valid() const{
    return m_profile_arn_isValid;
}

QString OAIProfileNotificationSummary::getProfileName() const {
    return m_profile_name;
}
void OAIProfileNotificationSummary::setProfileName(const QString &profile_name) {
    m_profile_name = profile_name;
    m_profile_name_isSet = true;
}

bool OAIProfileNotificationSummary::is_profile_name_Set() const{
    return m_profile_name_isSet;
}

bool OAIProfileNotificationSummary::is_profile_name_Valid() const{
    return m_profile_name_isValid;
}

QString OAIProfileNotificationSummary::getWorkloadId() const {
    return m_workload_id;
}
void OAIProfileNotificationSummary::setWorkloadId(const QString &workload_id) {
    m_workload_id = workload_id;
    m_workload_id_isSet = true;
}

bool OAIProfileNotificationSummary::is_workload_id_Set() const{
    return m_workload_id_isSet;
}

bool OAIProfileNotificationSummary::is_workload_id_Valid() const{
    return m_workload_id_isValid;
}

QString OAIProfileNotificationSummary::getWorkloadName() const {
    return m_workload_name;
}
void OAIProfileNotificationSummary::setWorkloadName(const QString &workload_name) {
    m_workload_name = workload_name;
    m_workload_name_isSet = true;
}

bool OAIProfileNotificationSummary::is_workload_name_Set() const{
    return m_workload_name_isSet;
}

bool OAIProfileNotificationSummary::is_workload_name_Valid() const{
    return m_workload_name_isValid;
}

bool OAIProfileNotificationSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_current_profile_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_profile_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_workload_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_workload_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProfileNotificationSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
