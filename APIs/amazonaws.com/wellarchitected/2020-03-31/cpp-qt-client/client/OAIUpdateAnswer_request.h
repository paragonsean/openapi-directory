/**
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateAnswer_request.h
 *
 * 
 */

#ifndef OAIUpdateAnswer_request_H
#define OAIUpdateAnswer_request_H

#include <QJsonObject>

#include "OAIChoiceUpdate.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChoiceUpdate;

class OAIUpdateAnswer_request : public OAIObject {
public:
    OAIUpdateAnswer_request();
    OAIUpdateAnswer_request(QString json);
    ~OAIUpdateAnswer_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getSelectedChoices() const;
    void setSelectedChoices(const QList<QString> &selected_choices);
    bool is_selected_choices_Set() const;
    bool is_selected_choices_Valid() const;

    QMap<QString, OAIChoiceUpdate> getChoiceUpdates() const;
    void setChoiceUpdates(const QMap<QString, OAIChoiceUpdate> &choice_updates);
    bool is_choice_updates_Set() const;
    bool is_choice_updates_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    bool isIsApplicable() const;
    void setIsApplicable(const bool &is_applicable);
    bool is_is_applicable_Set() const;
    bool is_is_applicable_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_selected_choices;
    bool m_selected_choices_isSet;
    bool m_selected_choices_isValid;

    QMap<QString, OAIChoiceUpdate> m_choice_updates;
    bool m_choice_updates_isSet;
    bool m_choice_updates_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    bool m_is_applicable;
    bool m_is_applicable_isSet;
    bool m_is_applicable_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateAnswer_request)

#endif // OAIUpdateAnswer_request_H
