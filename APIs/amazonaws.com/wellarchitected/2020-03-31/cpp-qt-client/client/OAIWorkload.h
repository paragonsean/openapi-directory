/**
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkload.h
 *
 * A workload return object.
 */

#ifndef OAIWorkload_H
#define OAIWorkload_H

#include <QJsonObject>

#include "OAIWorkloadEnvironment.h"
#include "OAIWorkloadImprovementStatus.h"
#include "OAIWorkload_DiscoveryConfig.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWorkload_DiscoveryConfig;

class OAIWorkload : public OAIObject {
public:
    OAIWorkload();
    OAIWorkload(QString json);
    ~OAIWorkload() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getWorkloadId() const;
    void setWorkloadId(const QString &workload_id);
    bool is_workload_id_Set() const;
    bool is_workload_id_Valid() const;

    QString getWorkloadArn() const;
    void setWorkloadArn(const QString &workload_arn);
    bool is_workload_arn_Set() const;
    bool is_workload_arn_Valid() const;

    QString getWorkloadName() const;
    void setWorkloadName(const QString &workload_name);
    bool is_workload_name_Set() const;
    bool is_workload_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIWorkloadEnvironment getEnvironment() const;
    void setEnvironment(const OAIWorkloadEnvironment &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QList<QString> getAccountIds() const;
    void setAccountIds(const QList<QString> &account_ids);
    bool is_account_ids_Set() const;
    bool is_account_ids_Valid() const;

    QList<QString> getAwsRegions() const;
    void setAwsRegions(const QList<QString> &aws_regions);
    bool is_aws_regions_Set() const;
    bool is_aws_regions_Valid() const;

    QList<QString> getNonAwsRegions() const;
    void setNonAwsRegions(const QList<QString> &non_aws_regions);
    bool is_non_aws_regions_Set() const;
    bool is_non_aws_regions_Valid() const;

    QString getArchitecturalDesign() const;
    void setArchitecturalDesign(const QString &architectural_design);
    bool is_architectural_design_Set() const;
    bool is_architectural_design_Valid() const;

    QString getReviewOwner() const;
    void setReviewOwner(const QString &review_owner);
    bool is_review_owner_Set() const;
    bool is_review_owner_Valid() const;

    QDateTime getReviewRestrictionDate() const;
    void setReviewRestrictionDate(const QDateTime &review_restriction_date);
    bool is_review_restriction_date_Set() const;
    bool is_review_restriction_date_Valid() const;

    bool getIsReviewOwnerUpdateAcknowledged() const;
    void setIsReviewOwnerUpdateAcknowledged(const bool &is_review_owner_update_acknowledged);
    bool is_is_review_owner_update_acknowledged_Set() const;
    bool is_is_review_owner_update_acknowledged_Valid() const;

    QString getIndustryType() const;
    void setIndustryType(const QString &industry_type);
    bool is_industry_type_Set() const;
    bool is_industry_type_Valid() const;

    QString getIndustry() const;
    void setIndustry(const QString &industry);
    bool is_industry_Set() const;
    bool is_industry_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    OAIWorkloadImprovementStatus getImprovementStatus() const;
    void setImprovementStatus(const OAIWorkloadImprovementStatus &improvement_status);
    bool is_improvement_status_Set() const;
    bool is_improvement_status_Valid() const;

    QMap<QString, qint32> getRiskCounts() const;
    void setRiskCounts(const QMap<QString, qint32> &risk_counts);
    bool is_risk_counts_Set() const;
    bool is_risk_counts_Valid() const;

    QList<QString> getPillarPriorities() const;
    void setPillarPriorities(const QList<QString> &pillar_priorities);
    bool is_pillar_priorities_Set() const;
    bool is_pillar_priorities_Valid() const;

    QList<QString> getLenses() const;
    void setLenses(const QList<QString> &lenses);
    bool is_lenses_Set() const;
    bool is_lenses_Valid() const;

    QString getOwner() const;
    void setOwner(const QString &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    QString getShareInvitationId() const;
    void setShareInvitationId(const QString &share_invitation_id);
    bool is_share_invitation_id_Set() const;
    bool is_share_invitation_id_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIWorkload_DiscoveryConfig getDiscoveryConfig() const;
    void setDiscoveryConfig(const OAIWorkload_DiscoveryConfig &discovery_config);
    bool is_discovery_config_Set() const;
    bool is_discovery_config_Valid() const;

    QList getApplications() const;
    void setApplications(const QList &applications);
    bool is_applications_Set() const;
    bool is_applications_Valid() const;

    QList getProfiles() const;
    void setProfiles(const QList &profiles);
    bool is_profiles_Set() const;
    bool is_profiles_Valid() const;

    QMap<QString, qint32> getPrioritizedRiskCounts() const;
    void setPrioritizedRiskCounts(const QMap<QString, qint32> &prioritized_risk_counts);
    bool is_prioritized_risk_counts_Set() const;
    bool is_prioritized_risk_counts_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_workload_id;
    bool m_workload_id_isSet;
    bool m_workload_id_isValid;

    QString m_workload_arn;
    bool m_workload_arn_isSet;
    bool m_workload_arn_isValid;

    QString m_workload_name;
    bool m_workload_name_isSet;
    bool m_workload_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIWorkloadEnvironment m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QList<QString> m_account_ids;
    bool m_account_ids_isSet;
    bool m_account_ids_isValid;

    QList<QString> m_aws_regions;
    bool m_aws_regions_isSet;
    bool m_aws_regions_isValid;

    QList<QString> m_non_aws_regions;
    bool m_non_aws_regions_isSet;
    bool m_non_aws_regions_isValid;

    QString m_architectural_design;
    bool m_architectural_design_isSet;
    bool m_architectural_design_isValid;

    QString m_review_owner;
    bool m_review_owner_isSet;
    bool m_review_owner_isValid;

    QDateTime m_review_restriction_date;
    bool m_review_restriction_date_isSet;
    bool m_review_restriction_date_isValid;

    bool m_is_review_owner_update_acknowledged;
    bool m_is_review_owner_update_acknowledged_isSet;
    bool m_is_review_owner_update_acknowledged_isValid;

    QString m_industry_type;
    bool m_industry_type_isSet;
    bool m_industry_type_isValid;

    QString m_industry;
    bool m_industry_isSet;
    bool m_industry_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    OAIWorkloadImprovementStatus m_improvement_status;
    bool m_improvement_status_isSet;
    bool m_improvement_status_isValid;

    QMap<QString, qint32> m_risk_counts;
    bool m_risk_counts_isSet;
    bool m_risk_counts_isValid;

    QList<QString> m_pillar_priorities;
    bool m_pillar_priorities_isSet;
    bool m_pillar_priorities_isValid;

    QList<QString> m_lenses;
    bool m_lenses_isSet;
    bool m_lenses_isValid;

    QString m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    QString m_share_invitation_id;
    bool m_share_invitation_id_isSet;
    bool m_share_invitation_id_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIWorkload_DiscoveryConfig m_discovery_config;
    bool m_discovery_config_isSet;
    bool m_discovery_config_isValid;

    QList m_applications;
    bool m_applications_isSet;
    bool m_applications_isValid;

    QList m_profiles;
    bool m_profiles_isSet;
    bool m_profiles_isValid;

    QMap<QString, qint32> m_prioritized_risk_counts;
    bool m_prioritized_risk_counts_isSet;
    bool m_prioritized_risk_counts_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkload)

#endif // OAIWorkload_H
