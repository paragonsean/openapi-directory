/**
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPillarReviewSummary.h
 *
 * A pillar review summary of a lens review.
 */

#ifndef OAIPillarReviewSummary_H
#define OAIPillarReviewSummary_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPillarReviewSummary : public OAIObject {
public:
    OAIPillarReviewSummary();
    OAIPillarReviewSummary(QString json);
    ~OAIPillarReviewSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPillarId() const;
    void setPillarId(const QString &pillar_id);
    bool is_pillar_id_Set() const;
    bool is_pillar_id_Valid() const;

    QString getPillarName() const;
    void setPillarName(const QString &pillar_name);
    bool is_pillar_name_Set() const;
    bool is_pillar_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QMap<QString, qint32> getRiskCounts() const;
    void setRiskCounts(const QMap<QString, qint32> &risk_counts);
    bool is_risk_counts_Set() const;
    bool is_risk_counts_Valid() const;

    QMap<QString, qint32> getPrioritizedRiskCounts() const;
    void setPrioritizedRiskCounts(const QMap<QString, qint32> &prioritized_risk_counts);
    bool is_prioritized_risk_counts_Set() const;
    bool is_prioritized_risk_counts_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_pillar_id;
    bool m_pillar_id_isSet;
    bool m_pillar_id_isValid;

    QString m_pillar_name;
    bool m_pillar_name_isSet;
    bool m_pillar_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QMap<QString, qint32> m_risk_counts;
    bool m_risk_counts_isSet;
    bool m_risk_counts_isValid;

    QMap<QString, qint32> m_prioritized_risk_counts;
    bool m_prioritized_risk_counts_isSet;
    bool m_prioritized_risk_counts_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPillarReviewSummary)

#endif // OAIPillarReviewSummary_H
