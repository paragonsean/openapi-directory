/**
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsWellArchitectedTool);
  }
}(this, function(expect, AwsWellArchitectedTool) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateWorkloadRequest', function() {
    it('should create an instance of CreateWorkloadRequest', function() {
      // uncomment below and update the code to test CreateWorkloadRequest
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be.a(AwsWellArchitectedTool.CreateWorkloadRequest);
    });

    it('should have the property workloadName (base name: "WorkloadName")', function() {
      // uncomment below and update the code to test the property workloadName
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property environment (base name: "Environment")', function() {
      // uncomment below and update the code to test the property environment
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property accountIds (base name: "AccountIds")', function() {
      // uncomment below and update the code to test the property accountIds
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property awsRegions (base name: "AwsRegions")', function() {
      // uncomment below and update the code to test the property awsRegions
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property nonAwsRegions (base name: "NonAwsRegions")', function() {
      // uncomment below and update the code to test the property nonAwsRegions
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property pillarPriorities (base name: "PillarPriorities")', function() {
      // uncomment below and update the code to test the property pillarPriorities
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property architecturalDesign (base name: "ArchitecturalDesign")', function() {
      // uncomment below and update the code to test the property architecturalDesign
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property reviewOwner (base name: "ReviewOwner")', function() {
      // uncomment below and update the code to test the property reviewOwner
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property industryType (base name: "IndustryType")', function() {
      // uncomment below and update the code to test the property industryType
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property industry (base name: "Industry")', function() {
      // uncomment below and update the code to test the property industry
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property lenses (base name: "Lenses")', function() {
      // uncomment below and update the code to test the property lenses
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "Notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property clientRequestToken (base name: "ClientRequestToken")', function() {
      // uncomment below and update the code to test the property clientRequestToken
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property discoveryConfig (base name: "DiscoveryConfig")', function() {
      // uncomment below and update the code to test the property discoveryConfig
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property applications (base name: "Applications")', function() {
      // uncomment below and update the code to test the property applications
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property profileArns (base name: "ProfileArns")', function() {
      // uncomment below and update the code to test the property profileArns
      //var instance = new AwsWellArchitectedTool.CreateWorkloadRequest();
      //expect(instance).to.be();
    });

  });

}));
