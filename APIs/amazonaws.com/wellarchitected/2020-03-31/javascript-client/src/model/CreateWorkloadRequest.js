/**
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateWorkloadRequestDiscoveryConfig from './CreateWorkloadRequestDiscoveryConfig';

/**
 * The CreateWorkloadRequest model module.
 * @module model/CreateWorkloadRequest
 * @version 2020-03-31
 */
class CreateWorkloadRequest {
    /**
     * Constructs a new <code>CreateWorkloadRequest</code>.
     * @alias module:model/CreateWorkloadRequest
     * @param workloadName {String} <p>The name of the workload.</p> <p>The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.</p>
     * @param description {String} The description for the workload.
     * @param environment {module:model/CreateWorkloadRequest.EnvironmentEnum} The environment for the workload.
     * @param lenses {Array.<String>} The list of lenses associated with the workload. Each lens is identified by its <a>LensSummary$LensAlias</a>.
     * @param clientRequestToken {String} <p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after the original request has completed successfully, the result of the original request is returned.</p> <important> <p>This token is listed as required, however, if you do not specify it, the Amazon Web Services SDKs automatically generate one for you. If you are not using the Amazon Web Services SDK or the CLI, you must provide this token or the request will fail.</p> </important>
     */
    constructor(workloadName, description, environment, lenses, clientRequestToken) { 
        
        CreateWorkloadRequest.initialize(this, workloadName, description, environment, lenses, clientRequestToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, workloadName, description, environment, lenses, clientRequestToken) { 
        obj['WorkloadName'] = workloadName;
        obj['Description'] = description;
        obj['Environment'] = environment;
        obj['Lenses'] = lenses;
        obj['ClientRequestToken'] = clientRequestToken;
    }

    /**
     * Constructs a <code>CreateWorkloadRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateWorkloadRequest} obj Optional instance to populate.
     * @return {module:model/CreateWorkloadRequest} The populated <code>CreateWorkloadRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateWorkloadRequest();

            if (data.hasOwnProperty('WorkloadName')) {
                obj['WorkloadName'] = ApiClient.convertToType(data['WorkloadName'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Environment')) {
                obj['Environment'] = ApiClient.convertToType(data['Environment'], 'String');
            }
            if (data.hasOwnProperty('AccountIds')) {
                obj['AccountIds'] = ApiClient.convertToType(data['AccountIds'], ['String']);
            }
            if (data.hasOwnProperty('AwsRegions')) {
                obj['AwsRegions'] = ApiClient.convertToType(data['AwsRegions'], ['String']);
            }
            if (data.hasOwnProperty('NonAwsRegions')) {
                obj['NonAwsRegions'] = ApiClient.convertToType(data['NonAwsRegions'], ['String']);
            }
            if (data.hasOwnProperty('PillarPriorities')) {
                obj['PillarPriorities'] = ApiClient.convertToType(data['PillarPriorities'], ['String']);
            }
            if (data.hasOwnProperty('ArchitecturalDesign')) {
                obj['ArchitecturalDesign'] = ApiClient.convertToType(data['ArchitecturalDesign'], 'String');
            }
            if (data.hasOwnProperty('ReviewOwner')) {
                obj['ReviewOwner'] = ApiClient.convertToType(data['ReviewOwner'], 'String');
            }
            if (data.hasOwnProperty('IndustryType')) {
                obj['IndustryType'] = ApiClient.convertToType(data['IndustryType'], 'String');
            }
            if (data.hasOwnProperty('Industry')) {
                obj['Industry'] = ApiClient.convertToType(data['Industry'], 'String');
            }
            if (data.hasOwnProperty('Lenses')) {
                obj['Lenses'] = ApiClient.convertToType(data['Lenses'], ['String']);
            }
            if (data.hasOwnProperty('Notes')) {
                obj['Notes'] = ApiClient.convertToType(data['Notes'], 'String');
            }
            if (data.hasOwnProperty('ClientRequestToken')) {
                obj['ClientRequestToken'] = ApiClient.convertToType(data['ClientRequestToken'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('DiscoveryConfig')) {
                obj['DiscoveryConfig'] = CreateWorkloadRequestDiscoveryConfig.constructFromObject(data['DiscoveryConfig']);
            }
            if (data.hasOwnProperty('Applications')) {
                obj['Applications'] = ApiClient.convertToType(data['Applications'], ['String']);
            }
            if (data.hasOwnProperty('ProfileArns')) {
                obj['ProfileArns'] = ApiClient.convertToType(data['ProfileArns'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateWorkloadRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateWorkloadRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateWorkloadRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['WorkloadName'] && !(typeof data['WorkloadName'] === 'string' || data['WorkloadName'] instanceof String)) {
            throw new Error("Expected the field `WorkloadName` to be a primitive type in the JSON string but got " + data['WorkloadName']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['Environment'] && !(typeof data['Environment'] === 'string' || data['Environment'] instanceof String)) {
            throw new Error("Expected the field `Environment` to be a primitive type in the JSON string but got " + data['Environment']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['AccountIds'])) {
            throw new Error("Expected the field `AccountIds` to be an array in the JSON data but got " + data['AccountIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['AwsRegions'])) {
            throw new Error("Expected the field `AwsRegions` to be an array in the JSON data but got " + data['AwsRegions']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['NonAwsRegions'])) {
            throw new Error("Expected the field `NonAwsRegions` to be an array in the JSON data but got " + data['NonAwsRegions']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['PillarPriorities'])) {
            throw new Error("Expected the field `PillarPriorities` to be an array in the JSON data but got " + data['PillarPriorities']);
        }
        // ensure the json data is a string
        if (data['ArchitecturalDesign'] && !(typeof data['ArchitecturalDesign'] === 'string' || data['ArchitecturalDesign'] instanceof String)) {
            throw new Error("Expected the field `ArchitecturalDesign` to be a primitive type in the JSON string but got " + data['ArchitecturalDesign']);
        }
        // ensure the json data is a string
        if (data['ReviewOwner'] && !(typeof data['ReviewOwner'] === 'string' || data['ReviewOwner'] instanceof String)) {
            throw new Error("Expected the field `ReviewOwner` to be a primitive type in the JSON string but got " + data['ReviewOwner']);
        }
        // ensure the json data is a string
        if (data['IndustryType'] && !(typeof data['IndustryType'] === 'string' || data['IndustryType'] instanceof String)) {
            throw new Error("Expected the field `IndustryType` to be a primitive type in the JSON string but got " + data['IndustryType']);
        }
        // ensure the json data is a string
        if (data['Industry'] && !(typeof data['Industry'] === 'string' || data['Industry'] instanceof String)) {
            throw new Error("Expected the field `Industry` to be a primitive type in the JSON string but got " + data['Industry']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Lenses'])) {
            throw new Error("Expected the field `Lenses` to be an array in the JSON data but got " + data['Lenses']);
        }
        // ensure the json data is a string
        if (data['Notes'] && !(typeof data['Notes'] === 'string' || data['Notes'] instanceof String)) {
            throw new Error("Expected the field `Notes` to be a primitive type in the JSON string but got " + data['Notes']);
        }
        // ensure the json data is a string
        if (data['ClientRequestToken'] && !(typeof data['ClientRequestToken'] === 'string' || data['ClientRequestToken'] instanceof String)) {
            throw new Error("Expected the field `ClientRequestToken` to be a primitive type in the JSON string but got " + data['ClientRequestToken']);
        }
        // validate the optional field `DiscoveryConfig`
        if (data['DiscoveryConfig']) { // data not null
          CreateWorkloadRequestDiscoveryConfig.validateJSON(data['DiscoveryConfig']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Applications'])) {
            throw new Error("Expected the field `Applications` to be an array in the JSON data but got " + data['Applications']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ProfileArns'])) {
            throw new Error("Expected the field `ProfileArns` to be an array in the JSON data but got " + data['ProfileArns']);
        }

        return true;
    }


}

CreateWorkloadRequest.RequiredProperties = ["WorkloadName", "Description", "Environment", "Lenses", "ClientRequestToken"];

/**
 * <p>The name of the workload.</p> <p>The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.</p>
 * @member {String} WorkloadName
 */
CreateWorkloadRequest.prototype['WorkloadName'] = undefined;

/**
 * The description for the workload.
 * @member {String} Description
 */
CreateWorkloadRequest.prototype['Description'] = undefined;

/**
 * The environment for the workload.
 * @member {module:model/CreateWorkloadRequest.EnvironmentEnum} Environment
 */
CreateWorkloadRequest.prototype['Environment'] = undefined;

/**
 * The list of Amazon Web Services account IDs associated with the workload.
 * @member {Array.<String>} AccountIds
 */
CreateWorkloadRequest.prototype['AccountIds'] = undefined;

/**
 * The list of Amazon Web Services Regions associated with the workload, for example, <code>us-east-2</code>, or <code>ca-central-1</code>.
 * @member {Array.<String>} AwsRegions
 */
CreateWorkloadRequest.prototype['AwsRegions'] = undefined;

/**
 *  The list of non-Amazon Web Services Regions associated with the workload.
 * @member {Array.<String>} NonAwsRegions
 */
CreateWorkloadRequest.prototype['NonAwsRegions'] = undefined;

/**
 * The priorities of the pillars, which are used to order items in the improvement plan. Each pillar is represented by its <a>PillarReviewSummary$PillarId</a>.
 * @member {Array.<String>} PillarPriorities
 */
CreateWorkloadRequest.prototype['PillarPriorities'] = undefined;

/**
 * The URL of the architectural design for the workload.
 * @member {String} ArchitecturalDesign
 */
CreateWorkloadRequest.prototype['ArchitecturalDesign'] = undefined;

/**
 * The review owner of the workload. The name, email address, or identifier for the primary group or individual that owns the workload review process.
 * @member {String} ReviewOwner
 */
CreateWorkloadRequest.prototype['ReviewOwner'] = undefined;

/**
 * <p>The industry type for the workload.</p> <p>If specified, must be one of the following:</p> <ul> <li> <p> <code>Agriculture</code> </p> </li> <li> <p> <code>Automobile</code> </p> </li> <li> <p> <code>Defense</code> </p> </li> <li> <p> <code>Design and Engineering</code> </p> </li> <li> <p> <code>Digital Advertising</code> </p> </li> <li> <p> <code>Education</code> </p> </li> <li> <p> <code>Environmental Protection</code> </p> </li> <li> <p> <code>Financial Services</code> </p> </li> <li> <p> <code>Gaming</code> </p> </li> <li> <p> <code>General Public Services</code> </p> </li> <li> <p> <code>Healthcare</code> </p> </li> <li> <p> <code>Hospitality</code> </p> </li> <li> <p> <code>InfoTech</code> </p> </li> <li> <p> <code>Justice and Public Safety</code> </p> </li> <li> <p> <code>Life Sciences</code> </p> </li> <li> <p> <code>Manufacturing</code> </p> </li> <li> <p> <code>Media &amp; Entertainment</code> </p> </li> <li> <p> <code>Mining &amp; Resources</code> </p> </li> <li> <p> <code>Oil &amp; Gas</code> </p> </li> <li> <p> <code>Power &amp; Utilities</code> </p> </li> <li> <p> <code>Professional Services</code> </p> </li> <li> <p> <code>Real Estate &amp; Construction</code> </p> </li> <li> <p> <code>Retail &amp; Wholesale</code> </p> </li> <li> <p> <code>Social Protection</code> </p> </li> <li> <p> <code>Telecommunications</code> </p> </li> <li> <p> <code>Travel, Transportation &amp; Logistics</code> </p> </li> <li> <p> <code>Other</code> </p> </li> </ul>
 * @member {String} IndustryType
 */
CreateWorkloadRequest.prototype['IndustryType'] = undefined;

/**
 * The industry for the workload.
 * @member {String} Industry
 */
CreateWorkloadRequest.prototype['Industry'] = undefined;

/**
 * The list of lenses associated with the workload. Each lens is identified by its <a>LensSummary$LensAlias</a>.
 * @member {Array.<String>} Lenses
 */
CreateWorkloadRequest.prototype['Lenses'] = undefined;

/**
 * The notes associated with the workload.
 * @member {String} Notes
 */
CreateWorkloadRequest.prototype['Notes'] = undefined;

/**
 * <p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after the original request has completed successfully, the result of the original request is returned.</p> <important> <p>This token is listed as required, however, if you do not specify it, the Amazon Web Services SDKs automatically generate one for you. If you are not using the Amazon Web Services SDK or the CLI, you must provide this token or the request will fail.</p> </important>
 * @member {String} ClientRequestToken
 */
CreateWorkloadRequest.prototype['ClientRequestToken'] = undefined;

/**
 * The tags to be associated with the workload.
 * @member {Object.<String, String>} Tags
 */
CreateWorkloadRequest.prototype['Tags'] = undefined;

/**
 * @member {module:model/CreateWorkloadRequestDiscoveryConfig} DiscoveryConfig
 */
CreateWorkloadRequest.prototype['DiscoveryConfig'] = undefined;

/**
 * List of AppRegistry application ARNs associated to the workload.
 * @member {Array.<String>} Applications
 */
CreateWorkloadRequest.prototype['Applications'] = undefined;

/**
 * The list of profile ARNs associated with the workload.
 * @member {Array.<String>} ProfileArns
 */
CreateWorkloadRequest.prototype['ProfileArns'] = undefined;





/**
 * Allowed values for the <code>Environment</code> property.
 * @enum {String}
 * @readonly
 */
CreateWorkloadRequest['EnvironmentEnum'] = {

    /**
     * value: "PRODUCTION"
     * @const
     */
    "PRODUCTION": "PRODUCTION",

    /**
     * value: "PREPRODUCTION"
     * @const
     */
    "PREPRODUCTION": "PREPRODUCTION"
};



export default CreateWorkloadRequest;

