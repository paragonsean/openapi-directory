/**
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PermissionType from './PermissionType';
import ShareResourceType from './ShareResourceType';

/**
 * The ShareInvitationSummary model module.
 * @module model/ShareInvitationSummary
 * @version 2020-03-31
 */
class ShareInvitationSummary {
    /**
     * Constructs a new <code>ShareInvitationSummary</code>.
     * A share invitation summary return object.
     * @alias module:model/ShareInvitationSummary
     */
    constructor() { 
        
        ShareInvitationSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShareInvitationSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShareInvitationSummary} obj Optional instance to populate.
     * @return {module:model/ShareInvitationSummary} The populated <code>ShareInvitationSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShareInvitationSummary();

            if (data.hasOwnProperty('ShareInvitationId')) {
                obj['ShareInvitationId'] = ApiClient.convertToType(data['ShareInvitationId'], 'String');
            }
            if (data.hasOwnProperty('SharedBy')) {
                obj['SharedBy'] = ApiClient.convertToType(data['SharedBy'], 'String');
            }
            if (data.hasOwnProperty('SharedWith')) {
                obj['SharedWith'] = ApiClient.convertToType(data['SharedWith'], 'String');
            }
            if (data.hasOwnProperty('PermissionType')) {
                obj['PermissionType'] = PermissionType.constructFromObject(data['PermissionType']);
            }
            if (data.hasOwnProperty('ShareResourceType')) {
                obj['ShareResourceType'] = ApiClient.convertToType(data['ShareResourceType'], ShareResourceType);
            }
            if (data.hasOwnProperty('WorkloadName')) {
                obj['WorkloadName'] = ApiClient.convertToType(data['WorkloadName'], 'String');
            }
            if (data.hasOwnProperty('WorkloadId')) {
                obj['WorkloadId'] = ApiClient.convertToType(data['WorkloadId'], 'String');
            }
            if (data.hasOwnProperty('LensName')) {
                obj['LensName'] = ApiClient.convertToType(data['LensName'], 'String');
            }
            if (data.hasOwnProperty('LensArn')) {
                obj['LensArn'] = ApiClient.convertToType(data['LensArn'], 'String');
            }
            if (data.hasOwnProperty('ProfileName')) {
                obj['ProfileName'] = ApiClient.convertToType(data['ProfileName'], 'String');
            }
            if (data.hasOwnProperty('ProfileArn')) {
                obj['ProfileArn'] = ApiClient.convertToType(data['ProfileArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShareInvitationSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShareInvitationSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ShareInvitationId`
        if (data['ShareInvitationId']) { // data not null
          String.validateJSON(data['ShareInvitationId']);
        }
        // ensure the json data is a string
        if (data['SharedBy'] && !(typeof data['SharedBy'] === 'string' || data['SharedBy'] instanceof String)) {
            throw new Error("Expected the field `SharedBy` to be a primitive type in the JSON string but got " + data['SharedBy']);
        }
        // ensure the json data is a string
        if (data['SharedWith'] && !(typeof data['SharedWith'] === 'string' || data['SharedWith'] instanceof String)) {
            throw new Error("Expected the field `SharedWith` to be a primitive type in the JSON string but got " + data['SharedWith']);
        }
        // validate the optional field `ShareResourceType`
        if (data['ShareResourceType']) { // data not null
          ShareResourceType.validateJSON(data['ShareResourceType']);
        }
        // ensure the json data is a string
        if (data['WorkloadName'] && !(typeof data['WorkloadName'] === 'string' || data['WorkloadName'] instanceof String)) {
            throw new Error("Expected the field `WorkloadName` to be a primitive type in the JSON string but got " + data['WorkloadName']);
        }
        // ensure the json data is a string
        if (data['WorkloadId'] && !(typeof data['WorkloadId'] === 'string' || data['WorkloadId'] instanceof String)) {
            throw new Error("Expected the field `WorkloadId` to be a primitive type in the JSON string but got " + data['WorkloadId']);
        }
        // ensure the json data is a string
        if (data['LensName'] && !(typeof data['LensName'] === 'string' || data['LensName'] instanceof String)) {
            throw new Error("Expected the field `LensName` to be a primitive type in the JSON string but got " + data['LensName']);
        }
        // validate the optional field `LensArn`
        if (data['LensArn']) { // data not null
          String.validateJSON(data['LensArn']);
        }
        // validate the optional field `ProfileName`
        if (data['ProfileName']) { // data not null
          String.validateJSON(data['ProfileName']);
        }
        // validate the optional field `ProfileArn`
        if (data['ProfileArn']) { // data not null
          String.validateJSON(data['ProfileArn']);
        }

        return true;
    }


}



/**
 * @member {String} ShareInvitationId
 */
ShareInvitationSummary.prototype['ShareInvitationId'] = undefined;

/**
 * An Amazon Web Services account ID.
 * @member {String} SharedBy
 */
ShareInvitationSummary.prototype['SharedBy'] = undefined;

/**
 * The Amazon Web Services account ID, IAM role, organization ID, or organizational unit (OU) ID with which the workload, lens, or profile is shared.
 * @member {String} SharedWith
 */
ShareInvitationSummary.prototype['SharedWith'] = undefined;

/**
 * @member {module:model/PermissionType} PermissionType
 */
ShareInvitationSummary.prototype['PermissionType'] = undefined;

/**
 * @member {module:model/ShareResourceType} ShareResourceType
 */
ShareInvitationSummary.prototype['ShareResourceType'] = undefined;

/**
 * <p>The name of the workload.</p> <p>The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.</p>
 * @member {String} WorkloadName
 */
ShareInvitationSummary.prototype['WorkloadName'] = undefined;

/**
 * The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
 * @member {String} WorkloadId
 */
ShareInvitationSummary.prototype['WorkloadId'] = undefined;

/**
 * The full name of the lens.
 * @member {String} LensName
 */
ShareInvitationSummary.prototype['LensName'] = undefined;

/**
 * @member {String} LensArn
 */
ShareInvitationSummary.prototype['LensArn'] = undefined;

/**
 * @member {String} ProfileName
 */
ShareInvitationSummary.prototype['ProfileName'] = undefined;

/**
 * @member {String} ProfileArn
 */
ShareInvitationSummary.prototype['ProfileArn'] = undefined;






export default ShareInvitationSummary;

