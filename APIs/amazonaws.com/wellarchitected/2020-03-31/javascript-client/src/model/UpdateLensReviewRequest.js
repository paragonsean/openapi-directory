/**
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateLensReviewRequest model module.
 * @module model/UpdateLensReviewRequest
 * @version 2020-03-31
 */
class UpdateLensReviewRequest {
    /**
     * Constructs a new <code>UpdateLensReviewRequest</code>.
     * @alias module:model/UpdateLensReviewRequest
     */
    constructor() { 
        
        UpdateLensReviewRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateLensReviewRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateLensReviewRequest} obj Optional instance to populate.
     * @return {module:model/UpdateLensReviewRequest} The populated <code>UpdateLensReviewRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateLensReviewRequest();

            if (data.hasOwnProperty('LensNotes')) {
                obj['LensNotes'] = ApiClient.convertToType(data['LensNotes'], 'String');
            }
            if (data.hasOwnProperty('PillarNotes')) {
                obj['PillarNotes'] = ApiClient.convertToType(data['PillarNotes'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateLensReviewRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateLensReviewRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['LensNotes'] && !(typeof data['LensNotes'] === 'string' || data['LensNotes'] instanceof String)) {
            throw new Error("Expected the field `LensNotes` to be a primitive type in the JSON string but got " + data['LensNotes']);
        }

        return true;
    }


}



/**
 * The notes associated with the workload.
 * @member {String} LensNotes
 */
UpdateLensReviewRequest.prototype['LensNotes'] = undefined;

/**
 * List of pillar notes of a lens review in a workload.
 * @member {Object.<String, String>} PillarNotes
 */
UpdateLensReviewRequest.prototype['PillarNotes'] = undefined;






export default UpdateLensReviewRequest;

