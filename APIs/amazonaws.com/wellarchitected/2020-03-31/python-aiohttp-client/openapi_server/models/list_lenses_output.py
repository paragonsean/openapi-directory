# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lens_summary import LensSummary
from openapi_server import util


class ListLensesOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lens_summaries: List[LensSummary]=None, next_token: str=None):
        """ListLensesOutput - a model defined in OpenAPI

        :param lens_summaries: The lens_summaries of this ListLensesOutput.
        :param next_token: The next_token of this ListLensesOutput.
        """
        self.openapi_types = {
            'lens_summaries': List[LensSummary],
            'next_token': str
        }

        self.attribute_map = {
            'lens_summaries': 'LensSummaries',
            'next_token': 'NextToken'
        }

        self._lens_summaries = lens_summaries
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListLensesOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListLensesOutput of this ListLensesOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lens_summaries(self):
        """Gets the lens_summaries of this ListLensesOutput.

        List of lens summaries of available lenses.

        :return: The lens_summaries of this ListLensesOutput.
        :rtype: List[LensSummary]
        """
        return self._lens_summaries

    @lens_summaries.setter
    def lens_summaries(self, lens_summaries):
        """Sets the lens_summaries of this ListLensesOutput.

        List of lens summaries of available lenses.

        :param lens_summaries: The lens_summaries of this ListLensesOutput.
        :type lens_summaries: List[LensSummary]
        """

        self._lens_summaries = lens_summaries

    @property
    def next_token(self):
        """Gets the next_token of this ListLensesOutput.

        The token to use to retrieve the next set of results.

        :return: The next_token of this ListLensesOutput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListLensesOutput.

        The token to use to retrieve the next set of results.

        :param next_token: The next_token of this ListLensesOutput.
        :type next_token: str
        """

        self._next_token = next_token
