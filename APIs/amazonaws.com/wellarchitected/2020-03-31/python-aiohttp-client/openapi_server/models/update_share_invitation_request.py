# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateShareInvitationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, share_invitation_action: str=None):
        """UpdateShareInvitationRequest - a model defined in OpenAPI

        :param share_invitation_action: The share_invitation_action of this UpdateShareInvitationRequest.
        """
        self.openapi_types = {
            'share_invitation_action': str
        }

        self.attribute_map = {
            'share_invitation_action': 'ShareInvitationAction'
        }

        self._share_invitation_action = share_invitation_action

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateShareInvitationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateShareInvitation_request of this UpdateShareInvitationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def share_invitation_action(self):
        """Gets the share_invitation_action of this UpdateShareInvitationRequest.

        Share invitation action taken by contributor.

        :return: The share_invitation_action of this UpdateShareInvitationRequest.
        :rtype: str
        """
        return self._share_invitation_action

    @share_invitation_action.setter
    def share_invitation_action(self, share_invitation_action):
        """Sets the share_invitation_action of this UpdateShareInvitationRequest.

        Share invitation action taken by contributor.

        :param share_invitation_action: The share_invitation_action of this UpdateShareInvitationRequest.
        :type share_invitation_action: str
        """
        allowed_values = ["ACCEPT", "REJECT"]  # noqa: E501
        if share_invitation_action not in allowed_values:
            raise ValueError(
                "Invalid value for `share_invitation_action` ({0}), must be one of {1}"
                .format(share_invitation_action, allowed_values)
            )

        self._share_invitation_action = share_invitation_action
