# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ProfileSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, profile_arn: str=None, profile_version: str=None, profile_name: str=None, profile_description: str=None, owner: str=None, created_at: datetime=None, updated_at: datetime=None):
        """ProfileSummary - a model defined in OpenAPI

        :param profile_arn: The profile_arn of this ProfileSummary.
        :param profile_version: The profile_version of this ProfileSummary.
        :param profile_name: The profile_name of this ProfileSummary.
        :param profile_description: The profile_description of this ProfileSummary.
        :param owner: The owner of this ProfileSummary.
        :param created_at: The created_at of this ProfileSummary.
        :param updated_at: The updated_at of this ProfileSummary.
        """
        self.openapi_types = {
            'profile_arn': str,
            'profile_version': str,
            'profile_name': str,
            'profile_description': str,
            'owner': str,
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'profile_arn': 'ProfileArn',
            'profile_version': 'ProfileVersion',
            'profile_name': 'ProfileName',
            'profile_description': 'ProfileDescription',
            'owner': 'Owner',
            'created_at': 'CreatedAt',
            'updated_at': 'UpdatedAt'
        }

        self._profile_arn = profile_arn
        self._profile_version = profile_version
        self._profile_name = profile_name
        self._profile_description = profile_description
        self._owner = owner
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProfileSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProfileSummary of this ProfileSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def profile_arn(self):
        """Gets the profile_arn of this ProfileSummary.


        :return: The profile_arn of this ProfileSummary.
        :rtype: str
        """
        return self._profile_arn

    @profile_arn.setter
    def profile_arn(self, profile_arn):
        """Sets the profile_arn of this ProfileSummary.


        :param profile_arn: The profile_arn of this ProfileSummary.
        :type profile_arn: str
        """

        self._profile_arn = profile_arn

    @property
    def profile_version(self):
        """Gets the profile_version of this ProfileSummary.


        :return: The profile_version of this ProfileSummary.
        :rtype: str
        """
        return self._profile_version

    @profile_version.setter
    def profile_version(self, profile_version):
        """Sets the profile_version of this ProfileSummary.


        :param profile_version: The profile_version of this ProfileSummary.
        :type profile_version: str
        """

        self._profile_version = profile_version

    @property
    def profile_name(self):
        """Gets the profile_name of this ProfileSummary.


        :return: The profile_name of this ProfileSummary.
        :rtype: str
        """
        return self._profile_name

    @profile_name.setter
    def profile_name(self, profile_name):
        """Sets the profile_name of this ProfileSummary.


        :param profile_name: The profile_name of this ProfileSummary.
        :type profile_name: str
        """

        self._profile_name = profile_name

    @property
    def profile_description(self):
        """Gets the profile_description of this ProfileSummary.


        :return: The profile_description of this ProfileSummary.
        :rtype: str
        """
        return self._profile_description

    @profile_description.setter
    def profile_description(self, profile_description):
        """Sets the profile_description of this ProfileSummary.


        :param profile_description: The profile_description of this ProfileSummary.
        :type profile_description: str
        """

        self._profile_description = profile_description

    @property
    def owner(self):
        """Gets the owner of this ProfileSummary.

        An Amazon Web Services account ID.

        :return: The owner of this ProfileSummary.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this ProfileSummary.

        An Amazon Web Services account ID.

        :param owner: The owner of this ProfileSummary.
        :type owner: str
        """
        if owner is not None and len(owner) > 12:
            raise ValueError("Invalid value for `owner`, length must be less than or equal to `12`")
        if owner is not None and len(owner) < 12:
            raise ValueError("Invalid value for `owner`, length must be greater than or equal to `12`")
        if owner is not None and not re.search(r'[0-9]{12}', owner):
            raise ValueError("Invalid value for `owner`, must be a follow pattern or equal to `/[0-9]{12}/`")

        self._owner = owner

    @property
    def created_at(self):
        """Gets the created_at of this ProfileSummary.

        The date and time recorded.

        :return: The created_at of this ProfileSummary.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ProfileSummary.

        The date and time recorded.

        :param created_at: The created_at of this ProfileSummary.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this ProfileSummary.

        The date and time recorded.

        :return: The updated_at of this ProfileSummary.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this ProfileSummary.

        The date and time recorded.

        :param updated_at: The updated_at of this ProfileSummary.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
