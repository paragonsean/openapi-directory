# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateGlobalSettingsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, organization_sharing_status: str=None, discovery_integration_status: str=None):
        """UpdateGlobalSettingsRequest - a model defined in OpenAPI

        :param organization_sharing_status: The organization_sharing_status of this UpdateGlobalSettingsRequest.
        :param discovery_integration_status: The discovery_integration_status of this UpdateGlobalSettingsRequest.
        """
        self.openapi_types = {
            'organization_sharing_status': str,
            'discovery_integration_status': str
        }

        self.attribute_map = {
            'organization_sharing_status': 'OrganizationSharingStatus',
            'discovery_integration_status': 'DiscoveryIntegrationStatus'
        }

        self._organization_sharing_status = organization_sharing_status
        self._discovery_integration_status = discovery_integration_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateGlobalSettingsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateGlobalSettings_request of this UpdateGlobalSettingsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def organization_sharing_status(self):
        """Gets the organization_sharing_status of this UpdateGlobalSettingsRequest.

        The status of organization sharing settings.

        :return: The organization_sharing_status of this UpdateGlobalSettingsRequest.
        :rtype: str
        """
        return self._organization_sharing_status

    @organization_sharing_status.setter
    def organization_sharing_status(self, organization_sharing_status):
        """Sets the organization_sharing_status of this UpdateGlobalSettingsRequest.

        The status of organization sharing settings.

        :param organization_sharing_status: The organization_sharing_status of this UpdateGlobalSettingsRequest.
        :type organization_sharing_status: str
        """
        allowed_values = ["ENABLED", "DISABLED"]  # noqa: E501
        if organization_sharing_status not in allowed_values:
            raise ValueError(
                "Invalid value for `organization_sharing_status` ({0}), must be one of {1}"
                .format(organization_sharing_status, allowed_values)
            )

        self._organization_sharing_status = organization_sharing_status

    @property
    def discovery_integration_status(self):
        """Gets the discovery_integration_status of this UpdateGlobalSettingsRequest.

        The status of discovery support settings.

        :return: The discovery_integration_status of this UpdateGlobalSettingsRequest.
        :rtype: str
        """
        return self._discovery_integration_status

    @discovery_integration_status.setter
    def discovery_integration_status(self, discovery_integration_status):
        """Sets the discovery_integration_status of this UpdateGlobalSettingsRequest.

        The status of discovery support settings.

        :param discovery_integration_status: The discovery_integration_status of this UpdateGlobalSettingsRequest.
        :type discovery_integration_status: str
        """
        allowed_values = ["ENABLED", "DISABLED"]  # noqa: E501
        if discovery_integration_status not in allowed_values:
            raise ValueError(
                "Invalid value for `discovery_integration_status` ({0}), must be one of {1}"
                .format(discovery_integration_status, allowed_values)
            )

        self._discovery_integration_status = discovery_integration_status
