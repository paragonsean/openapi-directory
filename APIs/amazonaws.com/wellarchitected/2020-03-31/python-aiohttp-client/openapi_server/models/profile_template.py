# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProfileTemplate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, template_name: str=None, template_questions: List=None, created_at: datetime=None, updated_at: datetime=None):
        """ProfileTemplate - a model defined in OpenAPI

        :param template_name: The template_name of this ProfileTemplate.
        :param template_questions: The template_questions of this ProfileTemplate.
        :param created_at: The created_at of this ProfileTemplate.
        :param updated_at: The updated_at of this ProfileTemplate.
        """
        self.openapi_types = {
            'template_name': str,
            'template_questions': List,
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'template_name': 'TemplateName',
            'template_questions': 'TemplateQuestions',
            'created_at': 'CreatedAt',
            'updated_at': 'UpdatedAt'
        }

        self._template_name = template_name
        self._template_questions = template_questions
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProfileTemplate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProfileTemplate of this ProfileTemplate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def template_name(self):
        """Gets the template_name of this ProfileTemplate.


        :return: The template_name of this ProfileTemplate.
        :rtype: str
        """
        return self._template_name

    @template_name.setter
    def template_name(self, template_name):
        """Sets the template_name of this ProfileTemplate.


        :param template_name: The template_name of this ProfileTemplate.
        :type template_name: str
        """

        self._template_name = template_name

    @property
    def template_questions(self):
        """Gets the template_questions of this ProfileTemplate.


        :return: The template_questions of this ProfileTemplate.
        :rtype: List
        """
        return self._template_questions

    @template_questions.setter
    def template_questions(self, template_questions):
        """Sets the template_questions of this ProfileTemplate.


        :param template_questions: The template_questions of this ProfileTemplate.
        :type template_questions: List
        """

        self._template_questions = template_questions

    @property
    def created_at(self):
        """Gets the created_at of this ProfileTemplate.

        The date and time recorded.

        :return: The created_at of this ProfileTemplate.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ProfileTemplate.

        The date and time recorded.

        :param created_at: The created_at of this ProfileTemplate.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this ProfileTemplate.

        The date and time recorded.

        :return: The updated_at of this ProfileTemplate.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this ProfileTemplate.

        The date and time recorded.

        :param updated_at: The updated_at of this ProfileTemplate.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
