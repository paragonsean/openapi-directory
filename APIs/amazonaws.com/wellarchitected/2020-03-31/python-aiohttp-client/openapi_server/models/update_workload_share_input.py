# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.permission_type import PermissionType
from openapi_server import util


class UpdateWorkloadShareInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, permission_type: PermissionType=None):
        """UpdateWorkloadShareInput - a model defined in OpenAPI

        :param permission_type: The permission_type of this UpdateWorkloadShareInput.
        """
        self.openapi_types = {
            'permission_type': PermissionType
        }

        self.attribute_map = {
            'permission_type': 'PermissionType'
        }

        self._permission_type = permission_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateWorkloadShareInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateWorkloadShareInput of this UpdateWorkloadShareInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def permission_type(self):
        """Gets the permission_type of this UpdateWorkloadShareInput.


        :return: The permission_type of this UpdateWorkloadShareInput.
        :rtype: PermissionType
        """
        return self._permission_type

    @permission_type.setter
    def permission_type(self, permission_type):
        """Sets the permission_type of this UpdateWorkloadShareInput.


        :param permission_type: The permission_type of this UpdateWorkloadShareInput.
        :type permission_type: PermissionType
        """
        if permission_type is None:
            raise ValueError("Invalid value for `permission_type`, must not be `None`")

        self._permission_type = permission_type
