# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateLensReviewInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lens_notes: str=None, pillar_notes: Dict[str, str]=None):
        """UpdateLensReviewInput - a model defined in OpenAPI

        :param lens_notes: The lens_notes of this UpdateLensReviewInput.
        :param pillar_notes: The pillar_notes of this UpdateLensReviewInput.
        """
        self.openapi_types = {
            'lens_notes': str,
            'pillar_notes': Dict[str, str]
        }

        self.attribute_map = {
            'lens_notes': 'LensNotes',
            'pillar_notes': 'PillarNotes'
        }

        self._lens_notes = lens_notes
        self._pillar_notes = pillar_notes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateLensReviewInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateLensReviewInput of this UpdateLensReviewInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lens_notes(self):
        """Gets the lens_notes of this UpdateLensReviewInput.

        The notes associated with the workload.

        :return: The lens_notes of this UpdateLensReviewInput.
        :rtype: str
        """
        return self._lens_notes

    @lens_notes.setter
    def lens_notes(self, lens_notes):
        """Sets the lens_notes of this UpdateLensReviewInput.

        The notes associated with the workload.

        :param lens_notes: The lens_notes of this UpdateLensReviewInput.
        :type lens_notes: str
        """
        if lens_notes is not None and len(lens_notes) > 2084:
            raise ValueError("Invalid value for `lens_notes`, length must be less than or equal to `2084`")

        self._lens_notes = lens_notes

    @property
    def pillar_notes(self):
        """Gets the pillar_notes of this UpdateLensReviewInput.

        List of pillar notes of a lens review in a workload.

        :return: The pillar_notes of this UpdateLensReviewInput.
        :rtype: Dict[str, str]
        """
        return self._pillar_notes

    @pillar_notes.setter
    def pillar_notes(self, pillar_notes):
        """Sets the pillar_notes of this UpdateLensReviewInput.

        List of pillar notes of a lens review in a workload.

        :param pillar_notes: The pillar_notes of this UpdateLensReviewInput.
        :type pillar_notes: Dict[str, str]
        """

        self._pillar_notes = pillar_notes
