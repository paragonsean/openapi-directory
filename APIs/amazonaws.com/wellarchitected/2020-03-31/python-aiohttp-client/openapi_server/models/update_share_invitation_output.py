# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_share_invitation_output_share_invitation import UpdateShareInvitationOutputShareInvitation
from openapi_server import util


class UpdateShareInvitationOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, share_invitation: UpdateShareInvitationOutputShareInvitation=None):
        """UpdateShareInvitationOutput - a model defined in OpenAPI

        :param share_invitation: The share_invitation of this UpdateShareInvitationOutput.
        """
        self.openapi_types = {
            'share_invitation': UpdateShareInvitationOutputShareInvitation
        }

        self.attribute_map = {
            'share_invitation': 'ShareInvitation'
        }

        self._share_invitation = share_invitation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateShareInvitationOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateShareInvitationOutput of this UpdateShareInvitationOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def share_invitation(self):
        """Gets the share_invitation of this UpdateShareInvitationOutput.


        :return: The share_invitation of this UpdateShareInvitationOutput.
        :rtype: UpdateShareInvitationOutputShareInvitation
        """
        return self._share_invitation

    @share_invitation.setter
    def share_invitation(self, share_invitation):
        """Sets the share_invitation of this UpdateShareInvitationOutput.


        :param share_invitation: The share_invitation of this UpdateShareInvitationOutput.
        :type share_invitation: UpdateShareInvitationOutputShareInvitation
        """

        self._share_invitation = share_invitation
