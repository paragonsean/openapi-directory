# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExportLensOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lens_json: str=None):
        """ExportLensOutput - a model defined in OpenAPI

        :param lens_json: The lens_json of this ExportLensOutput.
        """
        self.openapi_types = {
            'lens_json': str
        }

        self.attribute_map = {
            'lens_json': 'LensJSON'
        }

        self._lens_json = lens_json

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportLensOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportLensOutput of this ExportLensOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lens_json(self):
        """Gets the lens_json of this ExportLensOutput.


        :return: The lens_json of this ExportLensOutput.
        :rtype: str
        """
        return self._lens_json

    @lens_json.setter
    def lens_json(self, lens_json):
        """Sets the lens_json of this ExportLensOutput.


        :param lens_json: The lens_json of this ExportLensOutput.
        :type lens_json: str
        """

        self._lens_json = lens_json
