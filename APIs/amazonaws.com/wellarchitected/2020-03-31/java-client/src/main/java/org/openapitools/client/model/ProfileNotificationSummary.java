/*
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ProfileNotificationType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The profile notification summary.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:42.757173-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProfileNotificationSummary {
  public static final String SERIALIZED_NAME_CURRENT_PROFILE_VERSION = "CurrentProfileVersion";
  @SerializedName(SERIALIZED_NAME_CURRENT_PROFILE_VERSION)
  private String currentProfileVersion;

  public static final String SERIALIZED_NAME_LATEST_PROFILE_VERSION = "LatestProfileVersion";
  @SerializedName(SERIALIZED_NAME_LATEST_PROFILE_VERSION)
  private String latestProfileVersion;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private ProfileNotificationType type;

  public static final String SERIALIZED_NAME_PROFILE_ARN = "ProfileArn";
  @SerializedName(SERIALIZED_NAME_PROFILE_ARN)
  private String profileArn;

  public static final String SERIALIZED_NAME_PROFILE_NAME = "ProfileName";
  @SerializedName(SERIALIZED_NAME_PROFILE_NAME)
  private String profileName;

  public static final String SERIALIZED_NAME_WORKLOAD_ID = "WorkloadId";
  @SerializedName(SERIALIZED_NAME_WORKLOAD_ID)
  private String workloadId;

  public static final String SERIALIZED_NAME_WORKLOAD_NAME = "WorkloadName";
  @SerializedName(SERIALIZED_NAME_WORKLOAD_NAME)
  private String workloadName;

  public ProfileNotificationSummary() {
  }

  public ProfileNotificationSummary currentProfileVersion(String currentProfileVersion) {
    this.currentProfileVersion = currentProfileVersion;
    return this;
  }

  /**
   * Get currentProfileVersion
   * @return currentProfileVersion
   */
  @javax.annotation.Nullable
  public String getCurrentProfileVersion() {
    return currentProfileVersion;
  }

  public void setCurrentProfileVersion(String currentProfileVersion) {
    this.currentProfileVersion = currentProfileVersion;
  }


  public ProfileNotificationSummary latestProfileVersion(String latestProfileVersion) {
    this.latestProfileVersion = latestProfileVersion;
    return this;
  }

  /**
   * Get latestProfileVersion
   * @return latestProfileVersion
   */
  @javax.annotation.Nullable
  public String getLatestProfileVersion() {
    return latestProfileVersion;
  }

  public void setLatestProfileVersion(String latestProfileVersion) {
    this.latestProfileVersion = latestProfileVersion;
  }


  public ProfileNotificationSummary type(ProfileNotificationType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public ProfileNotificationType getType() {
    return type;
  }

  public void setType(ProfileNotificationType type) {
    this.type = type;
  }


  public ProfileNotificationSummary profileArn(String profileArn) {
    this.profileArn = profileArn;
    return this;
  }

  /**
   * Get profileArn
   * @return profileArn
   */
  @javax.annotation.Nullable
  public String getProfileArn() {
    return profileArn;
  }

  public void setProfileArn(String profileArn) {
    this.profileArn = profileArn;
  }


  public ProfileNotificationSummary profileName(String profileName) {
    this.profileName = profileName;
    return this;
  }

  /**
   * Get profileName
   * @return profileName
   */
  @javax.annotation.Nullable
  public String getProfileName() {
    return profileName;
  }

  public void setProfileName(String profileName) {
    this.profileName = profileName;
  }


  public ProfileNotificationSummary workloadId(String workloadId) {
    this.workloadId = workloadId;
    return this;
  }

  /**
   * The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
   * @return workloadId
   */
  @javax.annotation.Nullable
  public String getWorkloadId() {
    return workloadId;
  }

  public void setWorkloadId(String workloadId) {
    this.workloadId = workloadId;
  }


  public ProfileNotificationSummary workloadName(String workloadName) {
    this.workloadName = workloadName;
    return this;
  }

  /**
   * &lt;p&gt;The name of the workload.&lt;/p&gt; &lt;p&gt;The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.&lt;/p&gt;
   * @return workloadName
   */
  @javax.annotation.Nullable
  public String getWorkloadName() {
    return workloadName;
  }

  public void setWorkloadName(String workloadName) {
    this.workloadName = workloadName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProfileNotificationSummary profileNotificationSummary = (ProfileNotificationSummary) o;
    return Objects.equals(this.currentProfileVersion, profileNotificationSummary.currentProfileVersion) &&
        Objects.equals(this.latestProfileVersion, profileNotificationSummary.latestProfileVersion) &&
        Objects.equals(this.type, profileNotificationSummary.type) &&
        Objects.equals(this.profileArn, profileNotificationSummary.profileArn) &&
        Objects.equals(this.profileName, profileNotificationSummary.profileName) &&
        Objects.equals(this.workloadId, profileNotificationSummary.workloadId) &&
        Objects.equals(this.workloadName, profileNotificationSummary.workloadName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentProfileVersion, latestProfileVersion, type, profileArn, profileName, workloadId, workloadName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProfileNotificationSummary {\n");
    sb.append("    currentProfileVersion: ").append(toIndentedString(currentProfileVersion)).append("\n");
    sb.append("    latestProfileVersion: ").append(toIndentedString(latestProfileVersion)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    profileArn: ").append(toIndentedString(profileArn)).append("\n");
    sb.append("    profileName: ").append(toIndentedString(profileName)).append("\n");
    sb.append("    workloadId: ").append(toIndentedString(workloadId)).append("\n");
    sb.append("    workloadName: ").append(toIndentedString(workloadName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CurrentProfileVersion");
    openapiFields.add("LatestProfileVersion");
    openapiFields.add("Type");
    openapiFields.add("ProfileArn");
    openapiFields.add("ProfileName");
    openapiFields.add("WorkloadId");
    openapiFields.add("WorkloadName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProfileNotificationSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProfileNotificationSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProfileNotificationSummary is not found in the empty JSON string", ProfileNotificationSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProfileNotificationSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProfileNotificationSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `CurrentProfileVersion`
      if (jsonObj.get("CurrentProfileVersion") != null && !jsonObj.get("CurrentProfileVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CurrentProfileVersion"));
      }
      // validate the optional field `LatestProfileVersion`
      if (jsonObj.get("LatestProfileVersion") != null && !jsonObj.get("LatestProfileVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LatestProfileVersion"));
      }
      // validate the optional field `Type`
      if (jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) {
        ProfileNotificationType.validateJsonElement(jsonObj.get("Type"));
      }
      // validate the optional field `ProfileArn`
      if (jsonObj.get("ProfileArn") != null && !jsonObj.get("ProfileArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ProfileArn"));
      }
      // validate the optional field `ProfileName`
      if (jsonObj.get("ProfileName") != null && !jsonObj.get("ProfileName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ProfileName"));
      }
      if ((jsonObj.get("WorkloadId") != null && !jsonObj.get("WorkloadId").isJsonNull()) && !jsonObj.get("WorkloadId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `WorkloadId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("WorkloadId").toString()));
      }
      if ((jsonObj.get("WorkloadName") != null && !jsonObj.get("WorkloadName").isJsonNull()) && !jsonObj.get("WorkloadName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `WorkloadName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("WorkloadName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProfileNotificationSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProfileNotificationSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProfileNotificationSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProfileNotificationSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<ProfileNotificationSummary>() {
           @Override
           public void write(JsonWriter out, ProfileNotificationSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProfileNotificationSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProfileNotificationSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProfileNotificationSummary
   * @throws IOException if the JSON string is invalid with respect to ProfileNotificationSummary
   */
  public static ProfileNotificationSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProfileNotificationSummary.class);
  }

  /**
   * Convert an instance of ProfileNotificationSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

