/*
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.PermissionType;
import org.openapitools.client.model.ShareResourceType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A share invitation summary return object.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:42.757173-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ShareInvitationSummary {
  public static final String SERIALIZED_NAME_SHARE_INVITATION_ID = "ShareInvitationId";
  @SerializedName(SERIALIZED_NAME_SHARE_INVITATION_ID)
  private String shareInvitationId;

  public static final String SERIALIZED_NAME_SHARED_BY = "SharedBy";
  @SerializedName(SERIALIZED_NAME_SHARED_BY)
  private String sharedBy;

  public static final String SERIALIZED_NAME_SHARED_WITH = "SharedWith";
  @SerializedName(SERIALIZED_NAME_SHARED_WITH)
  private String sharedWith;

  public static final String SERIALIZED_NAME_PERMISSION_TYPE = "PermissionType";
  @SerializedName(SERIALIZED_NAME_PERMISSION_TYPE)
  private PermissionType permissionType;

  public static final String SERIALIZED_NAME_SHARE_RESOURCE_TYPE = "ShareResourceType";
  @SerializedName(SERIALIZED_NAME_SHARE_RESOURCE_TYPE)
  private ShareResourceType shareResourceType;

  public static final String SERIALIZED_NAME_WORKLOAD_NAME = "WorkloadName";
  @SerializedName(SERIALIZED_NAME_WORKLOAD_NAME)
  private String workloadName;

  public static final String SERIALIZED_NAME_WORKLOAD_ID = "WorkloadId";
  @SerializedName(SERIALIZED_NAME_WORKLOAD_ID)
  private String workloadId;

  public static final String SERIALIZED_NAME_LENS_NAME = "LensName";
  @SerializedName(SERIALIZED_NAME_LENS_NAME)
  private String lensName;

  public static final String SERIALIZED_NAME_LENS_ARN = "LensArn";
  @SerializedName(SERIALIZED_NAME_LENS_ARN)
  private String lensArn;

  public static final String SERIALIZED_NAME_PROFILE_NAME = "ProfileName";
  @SerializedName(SERIALIZED_NAME_PROFILE_NAME)
  private String profileName;

  public static final String SERIALIZED_NAME_PROFILE_ARN = "ProfileArn";
  @SerializedName(SERIALIZED_NAME_PROFILE_ARN)
  private String profileArn;

  public ShareInvitationSummary() {
  }

  public ShareInvitationSummary shareInvitationId(String shareInvitationId) {
    this.shareInvitationId = shareInvitationId;
    return this;
  }

  /**
   * Get shareInvitationId
   * @return shareInvitationId
   */
  @javax.annotation.Nullable
  public String getShareInvitationId() {
    return shareInvitationId;
  }

  public void setShareInvitationId(String shareInvitationId) {
    this.shareInvitationId = shareInvitationId;
  }


  public ShareInvitationSummary sharedBy(String sharedBy) {
    this.sharedBy = sharedBy;
    return this;
  }

  /**
   * An Amazon Web Services account ID.
   * @return sharedBy
   */
  @javax.annotation.Nullable
  public String getSharedBy() {
    return sharedBy;
  }

  public void setSharedBy(String sharedBy) {
    this.sharedBy = sharedBy;
  }


  public ShareInvitationSummary sharedWith(String sharedWith) {
    this.sharedWith = sharedWith;
    return this;
  }

  /**
   * The Amazon Web Services account ID, IAM role, organization ID, or organizational unit (OU) ID with which the workload, lens, or profile is shared.
   * @return sharedWith
   */
  @javax.annotation.Nullable
  public String getSharedWith() {
    return sharedWith;
  }

  public void setSharedWith(String sharedWith) {
    this.sharedWith = sharedWith;
  }


  public ShareInvitationSummary permissionType(PermissionType permissionType) {
    this.permissionType = permissionType;
    return this;
  }

  /**
   * Get permissionType
   * @return permissionType
   */
  @javax.annotation.Nullable
  public PermissionType getPermissionType() {
    return permissionType;
  }

  public void setPermissionType(PermissionType permissionType) {
    this.permissionType = permissionType;
  }


  public ShareInvitationSummary shareResourceType(ShareResourceType shareResourceType) {
    this.shareResourceType = shareResourceType;
    return this;
  }

  /**
   * Get shareResourceType
   * @return shareResourceType
   */
  @javax.annotation.Nullable
  public ShareResourceType getShareResourceType() {
    return shareResourceType;
  }

  public void setShareResourceType(ShareResourceType shareResourceType) {
    this.shareResourceType = shareResourceType;
  }


  public ShareInvitationSummary workloadName(String workloadName) {
    this.workloadName = workloadName;
    return this;
  }

  /**
   * &lt;p&gt;The name of the workload.&lt;/p&gt; &lt;p&gt;The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.&lt;/p&gt;
   * @return workloadName
   */
  @javax.annotation.Nullable
  public String getWorkloadName() {
    return workloadName;
  }

  public void setWorkloadName(String workloadName) {
    this.workloadName = workloadName;
  }


  public ShareInvitationSummary workloadId(String workloadId) {
    this.workloadId = workloadId;
    return this;
  }

  /**
   * The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
   * @return workloadId
   */
  @javax.annotation.Nullable
  public String getWorkloadId() {
    return workloadId;
  }

  public void setWorkloadId(String workloadId) {
    this.workloadId = workloadId;
  }


  public ShareInvitationSummary lensName(String lensName) {
    this.lensName = lensName;
    return this;
  }

  /**
   * The full name of the lens.
   * @return lensName
   */
  @javax.annotation.Nullable
  public String getLensName() {
    return lensName;
  }

  public void setLensName(String lensName) {
    this.lensName = lensName;
  }


  public ShareInvitationSummary lensArn(String lensArn) {
    this.lensArn = lensArn;
    return this;
  }

  /**
   * Get lensArn
   * @return lensArn
   */
  @javax.annotation.Nullable
  public String getLensArn() {
    return lensArn;
  }

  public void setLensArn(String lensArn) {
    this.lensArn = lensArn;
  }


  public ShareInvitationSummary profileName(String profileName) {
    this.profileName = profileName;
    return this;
  }

  /**
   * Get profileName
   * @return profileName
   */
  @javax.annotation.Nullable
  public String getProfileName() {
    return profileName;
  }

  public void setProfileName(String profileName) {
    this.profileName = profileName;
  }


  public ShareInvitationSummary profileArn(String profileArn) {
    this.profileArn = profileArn;
    return this;
  }

  /**
   * Get profileArn
   * @return profileArn
   */
  @javax.annotation.Nullable
  public String getProfileArn() {
    return profileArn;
  }

  public void setProfileArn(String profileArn) {
    this.profileArn = profileArn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShareInvitationSummary shareInvitationSummary = (ShareInvitationSummary) o;
    return Objects.equals(this.shareInvitationId, shareInvitationSummary.shareInvitationId) &&
        Objects.equals(this.sharedBy, shareInvitationSummary.sharedBy) &&
        Objects.equals(this.sharedWith, shareInvitationSummary.sharedWith) &&
        Objects.equals(this.permissionType, shareInvitationSummary.permissionType) &&
        Objects.equals(this.shareResourceType, shareInvitationSummary.shareResourceType) &&
        Objects.equals(this.workloadName, shareInvitationSummary.workloadName) &&
        Objects.equals(this.workloadId, shareInvitationSummary.workloadId) &&
        Objects.equals(this.lensName, shareInvitationSummary.lensName) &&
        Objects.equals(this.lensArn, shareInvitationSummary.lensArn) &&
        Objects.equals(this.profileName, shareInvitationSummary.profileName) &&
        Objects.equals(this.profileArn, shareInvitationSummary.profileArn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(shareInvitationId, sharedBy, sharedWith, permissionType, shareResourceType, workloadName, workloadId, lensName, lensArn, profileName, profileArn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShareInvitationSummary {\n");
    sb.append("    shareInvitationId: ").append(toIndentedString(shareInvitationId)).append("\n");
    sb.append("    sharedBy: ").append(toIndentedString(sharedBy)).append("\n");
    sb.append("    sharedWith: ").append(toIndentedString(sharedWith)).append("\n");
    sb.append("    permissionType: ").append(toIndentedString(permissionType)).append("\n");
    sb.append("    shareResourceType: ").append(toIndentedString(shareResourceType)).append("\n");
    sb.append("    workloadName: ").append(toIndentedString(workloadName)).append("\n");
    sb.append("    workloadId: ").append(toIndentedString(workloadId)).append("\n");
    sb.append("    lensName: ").append(toIndentedString(lensName)).append("\n");
    sb.append("    lensArn: ").append(toIndentedString(lensArn)).append("\n");
    sb.append("    profileName: ").append(toIndentedString(profileName)).append("\n");
    sb.append("    profileArn: ").append(toIndentedString(profileArn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ShareInvitationId");
    openapiFields.add("SharedBy");
    openapiFields.add("SharedWith");
    openapiFields.add("PermissionType");
    openapiFields.add("ShareResourceType");
    openapiFields.add("WorkloadName");
    openapiFields.add("WorkloadId");
    openapiFields.add("LensName");
    openapiFields.add("LensArn");
    openapiFields.add("ProfileName");
    openapiFields.add("ProfileArn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ShareInvitationSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ShareInvitationSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ShareInvitationSummary is not found in the empty JSON string", ShareInvitationSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ShareInvitationSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ShareInvitationSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ShareInvitationId`
      if (jsonObj.get("ShareInvitationId") != null && !jsonObj.get("ShareInvitationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ShareInvitationId"));
      }
      if ((jsonObj.get("SharedBy") != null && !jsonObj.get("SharedBy").isJsonNull()) && !jsonObj.get("SharedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SharedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SharedBy").toString()));
      }
      if ((jsonObj.get("SharedWith") != null && !jsonObj.get("SharedWith").isJsonNull()) && !jsonObj.get("SharedWith").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SharedWith` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SharedWith").toString()));
      }
      // validate the optional field `PermissionType`
      if (jsonObj.get("PermissionType") != null && !jsonObj.get("PermissionType").isJsonNull()) {
        PermissionType.validateJsonElement(jsonObj.get("PermissionType"));
      }
      // validate the optional field `ShareResourceType`
      if (jsonObj.get("ShareResourceType") != null && !jsonObj.get("ShareResourceType").isJsonNull()) {
        ShareResourceType.validateJsonElement(jsonObj.get("ShareResourceType"));
      }
      if ((jsonObj.get("WorkloadName") != null && !jsonObj.get("WorkloadName").isJsonNull()) && !jsonObj.get("WorkloadName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `WorkloadName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("WorkloadName").toString()));
      }
      if ((jsonObj.get("WorkloadId") != null && !jsonObj.get("WorkloadId").isJsonNull()) && !jsonObj.get("WorkloadId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `WorkloadId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("WorkloadId").toString()));
      }
      if ((jsonObj.get("LensName") != null && !jsonObj.get("LensName").isJsonNull()) && !jsonObj.get("LensName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LensName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LensName").toString()));
      }
      // validate the optional field `LensArn`
      if (jsonObj.get("LensArn") != null && !jsonObj.get("LensArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LensArn"));
      }
      // validate the optional field `ProfileName`
      if (jsonObj.get("ProfileName") != null && !jsonObj.get("ProfileName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ProfileName"));
      }
      // validate the optional field `ProfileArn`
      if (jsonObj.get("ProfileArn") != null && !jsonObj.get("ProfileArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ProfileArn"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ShareInvitationSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ShareInvitationSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ShareInvitationSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ShareInvitationSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<ShareInvitationSummary>() {
           @Override
           public void write(JsonWriter out, ShareInvitationSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ShareInvitationSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ShareInvitationSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ShareInvitationSummary
   * @throws IOException if the JSON string is invalid with respect to ShareInvitationSummary
   */
  public static ShareInvitationSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ShareInvitationSummary.class);
  }

  /**
   * Convert an instance of ShareInvitationSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

