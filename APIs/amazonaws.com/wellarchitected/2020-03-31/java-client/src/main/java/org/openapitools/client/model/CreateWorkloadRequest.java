/*
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CreateWorkloadRequestDiscoveryConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateWorkloadRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:42.757173-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateWorkloadRequest {
  public static final String SERIALIZED_NAME_WORKLOAD_NAME = "WorkloadName";
  @SerializedName(SERIALIZED_NAME_WORKLOAD_NAME)
  private String workloadName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  /**
   * The environment for the workload.
   */
  @JsonAdapter(EnvironmentEnum.Adapter.class)
  public enum EnvironmentEnum {
    PRODUCTION("PRODUCTION"),
    
    PREPRODUCTION("PREPRODUCTION");

    private String value;

    EnvironmentEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EnvironmentEnum fromValue(String value) {
      for (EnvironmentEnum b : EnvironmentEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EnvironmentEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EnvironmentEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EnvironmentEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EnvironmentEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      EnvironmentEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ENVIRONMENT = "Environment";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT)
  private EnvironmentEnum environment;

  public static final String SERIALIZED_NAME_ACCOUNT_IDS = "AccountIds";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_IDS)
  private List<String> accountIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_AWS_REGIONS = "AwsRegions";
  @SerializedName(SERIALIZED_NAME_AWS_REGIONS)
  private List<String> awsRegions = new ArrayList<>();

  public static final String SERIALIZED_NAME_NON_AWS_REGIONS = "NonAwsRegions";
  @SerializedName(SERIALIZED_NAME_NON_AWS_REGIONS)
  private List<String> nonAwsRegions = new ArrayList<>();

  public static final String SERIALIZED_NAME_PILLAR_PRIORITIES = "PillarPriorities";
  @SerializedName(SERIALIZED_NAME_PILLAR_PRIORITIES)
  private List<String> pillarPriorities = new ArrayList<>();

  public static final String SERIALIZED_NAME_ARCHITECTURAL_DESIGN = "ArchitecturalDesign";
  @SerializedName(SERIALIZED_NAME_ARCHITECTURAL_DESIGN)
  private String architecturalDesign;

  public static final String SERIALIZED_NAME_REVIEW_OWNER = "ReviewOwner";
  @SerializedName(SERIALIZED_NAME_REVIEW_OWNER)
  private String reviewOwner;

  public static final String SERIALIZED_NAME_INDUSTRY_TYPE = "IndustryType";
  @SerializedName(SERIALIZED_NAME_INDUSTRY_TYPE)
  private String industryType;

  public static final String SERIALIZED_NAME_INDUSTRY = "Industry";
  @SerializedName(SERIALIZED_NAME_INDUSTRY)
  private String industry;

  public static final String SERIALIZED_NAME_LENSES = "Lenses";
  @SerializedName(SERIALIZED_NAME_LENSES)
  private List<String> lenses = new ArrayList<>();

  public static final String SERIALIZED_NAME_NOTES = "Notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_CLIENT_REQUEST_TOKEN = "ClientRequestToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_REQUEST_TOKEN)
  private String clientRequestToken;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = new HashMap<>();

  public static final String SERIALIZED_NAME_DISCOVERY_CONFIG = "DiscoveryConfig";
  @SerializedName(SERIALIZED_NAME_DISCOVERY_CONFIG)
  private CreateWorkloadRequestDiscoveryConfig discoveryConfig;

  public static final String SERIALIZED_NAME_APPLICATIONS = "Applications";
  @SerializedName(SERIALIZED_NAME_APPLICATIONS)
  private List<String> applications = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROFILE_ARNS = "ProfileArns";
  @SerializedName(SERIALIZED_NAME_PROFILE_ARNS)
  private List<String> profileArns = new ArrayList<>();

  public CreateWorkloadRequest() {
  }

  public CreateWorkloadRequest workloadName(String workloadName) {
    this.workloadName = workloadName;
    return this;
  }

  /**
   * &lt;p&gt;The name of the workload.&lt;/p&gt; &lt;p&gt;The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.&lt;/p&gt;
   * @return workloadName
   */
  @javax.annotation.Nonnull
  public String getWorkloadName() {
    return workloadName;
  }

  public void setWorkloadName(String workloadName) {
    this.workloadName = workloadName;
  }


  public CreateWorkloadRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The description for the workload.
   * @return description
   */
  @javax.annotation.Nonnull
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateWorkloadRequest environment(EnvironmentEnum environment) {
    this.environment = environment;
    return this;
  }

  /**
   * The environment for the workload.
   * @return environment
   */
  @javax.annotation.Nonnull
  public EnvironmentEnum getEnvironment() {
    return environment;
  }

  public void setEnvironment(EnvironmentEnum environment) {
    this.environment = environment;
  }


  public CreateWorkloadRequest accountIds(List<String> accountIds) {
    this.accountIds = accountIds;
    return this;
  }

  public CreateWorkloadRequest addAccountIdsItem(String accountIdsItem) {
    if (this.accountIds == null) {
      this.accountIds = new ArrayList<>();
    }
    this.accountIds.add(accountIdsItem);
    return this;
  }

  /**
   * The list of Amazon Web Services account IDs associated with the workload.
   * @return accountIds
   */
  @javax.annotation.Nullable
  public List<String> getAccountIds() {
    return accountIds;
  }

  public void setAccountIds(List<String> accountIds) {
    this.accountIds = accountIds;
  }


  public CreateWorkloadRequest awsRegions(List<String> awsRegions) {
    this.awsRegions = awsRegions;
    return this;
  }

  public CreateWorkloadRequest addAwsRegionsItem(String awsRegionsItem) {
    if (this.awsRegions == null) {
      this.awsRegions = new ArrayList<>();
    }
    this.awsRegions.add(awsRegionsItem);
    return this;
  }

  /**
   * The list of Amazon Web Services Regions associated with the workload, for example, &lt;code&gt;us-east-2&lt;/code&gt;, or &lt;code&gt;ca-central-1&lt;/code&gt;.
   * @return awsRegions
   */
  @javax.annotation.Nullable
  public List<String> getAwsRegions() {
    return awsRegions;
  }

  public void setAwsRegions(List<String> awsRegions) {
    this.awsRegions = awsRegions;
  }


  public CreateWorkloadRequest nonAwsRegions(List<String> nonAwsRegions) {
    this.nonAwsRegions = nonAwsRegions;
    return this;
  }

  public CreateWorkloadRequest addNonAwsRegionsItem(String nonAwsRegionsItem) {
    if (this.nonAwsRegions == null) {
      this.nonAwsRegions = new ArrayList<>();
    }
    this.nonAwsRegions.add(nonAwsRegionsItem);
    return this;
  }

  /**
   *  The list of non-Amazon Web Services Regions associated with the workload.
   * @return nonAwsRegions
   */
  @javax.annotation.Nullable
  public List<String> getNonAwsRegions() {
    return nonAwsRegions;
  }

  public void setNonAwsRegions(List<String> nonAwsRegions) {
    this.nonAwsRegions = nonAwsRegions;
  }


  public CreateWorkloadRequest pillarPriorities(List<String> pillarPriorities) {
    this.pillarPriorities = pillarPriorities;
    return this;
  }

  public CreateWorkloadRequest addPillarPrioritiesItem(String pillarPrioritiesItem) {
    if (this.pillarPriorities == null) {
      this.pillarPriorities = new ArrayList<>();
    }
    this.pillarPriorities.add(pillarPrioritiesItem);
    return this;
  }

  /**
   * The priorities of the pillars, which are used to order items in the improvement plan. Each pillar is represented by its &lt;a&gt;PillarReviewSummary$PillarId&lt;/a&gt;.
   * @return pillarPriorities
   */
  @javax.annotation.Nullable
  public List<String> getPillarPriorities() {
    return pillarPriorities;
  }

  public void setPillarPriorities(List<String> pillarPriorities) {
    this.pillarPriorities = pillarPriorities;
  }


  public CreateWorkloadRequest architecturalDesign(String architecturalDesign) {
    this.architecturalDesign = architecturalDesign;
    return this;
  }

  /**
   * The URL of the architectural design for the workload.
   * @return architecturalDesign
   */
  @javax.annotation.Nullable
  public String getArchitecturalDesign() {
    return architecturalDesign;
  }

  public void setArchitecturalDesign(String architecturalDesign) {
    this.architecturalDesign = architecturalDesign;
  }


  public CreateWorkloadRequest reviewOwner(String reviewOwner) {
    this.reviewOwner = reviewOwner;
    return this;
  }

  /**
   * The review owner of the workload. The name, email address, or identifier for the primary group or individual that owns the workload review process.
   * @return reviewOwner
   */
  @javax.annotation.Nullable
  public String getReviewOwner() {
    return reviewOwner;
  }

  public void setReviewOwner(String reviewOwner) {
    this.reviewOwner = reviewOwner;
  }


  public CreateWorkloadRequest industryType(String industryType) {
    this.industryType = industryType;
    return this;
  }

  /**
   * &lt;p&gt;The industry type for the workload.&lt;/p&gt; &lt;p&gt;If specified, must be one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Agriculture&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Automobile&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Defense&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Design and Engineering&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Digital Advertising&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Education&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Environmental Protection&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Financial Services&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Gaming&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;General Public Services&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Healthcare&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Hospitality&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;InfoTech&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Justice and Public Safety&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Life Sciences&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Manufacturing&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Media &amp;amp; Entertainment&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Mining &amp;amp; Resources&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Oil &amp;amp; Gas&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Power &amp;amp; Utilities&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Professional Services&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Real Estate &amp;amp; Construction&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Retail &amp;amp; Wholesale&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Social Protection&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Telecommunications&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Travel, Transportation &amp;amp; Logistics&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Other&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   * @return industryType
   */
  @javax.annotation.Nullable
  public String getIndustryType() {
    return industryType;
  }

  public void setIndustryType(String industryType) {
    this.industryType = industryType;
  }


  public CreateWorkloadRequest industry(String industry) {
    this.industry = industry;
    return this;
  }

  /**
   * The industry for the workload.
   * @return industry
   */
  @javax.annotation.Nullable
  public String getIndustry() {
    return industry;
  }

  public void setIndustry(String industry) {
    this.industry = industry;
  }


  public CreateWorkloadRequest lenses(List<String> lenses) {
    this.lenses = lenses;
    return this;
  }

  public CreateWorkloadRequest addLensesItem(String lensesItem) {
    if (this.lenses == null) {
      this.lenses = new ArrayList<>();
    }
    this.lenses.add(lensesItem);
    return this;
  }

  /**
   * The list of lenses associated with the workload. Each lens is identified by its &lt;a&gt;LensSummary$LensAlias&lt;/a&gt;.
   * @return lenses
   */
  @javax.annotation.Nonnull
  public List<String> getLenses() {
    return lenses;
  }

  public void setLenses(List<String> lenses) {
    this.lenses = lenses;
  }


  public CreateWorkloadRequest notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * The notes associated with the workload.
   * @return notes
   */
  @javax.annotation.Nullable
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  public CreateWorkloadRequest clientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
    return this;
  }

  /**
   * &lt;p&gt;A unique case-sensitive string used to ensure that this request is idempotent (executes only once).&lt;/p&gt; &lt;p&gt;You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after the original request has completed successfully, the result of the original request is returned.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This token is listed as required, however, if you do not specify it, the Amazon Web Services SDKs automatically generate one for you. If you are not using the Amazon Web Services SDK or the CLI, you must provide this token or the request will fail.&lt;/p&gt; &lt;/important&gt;
   * @return clientRequestToken
   */
  @javax.annotation.Nonnull
  public String getClientRequestToken() {
    return clientRequestToken;
  }

  public void setClientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
  }


  public CreateWorkloadRequest tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public CreateWorkloadRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * The tags to be associated with the workload.
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }


  public CreateWorkloadRequest discoveryConfig(CreateWorkloadRequestDiscoveryConfig discoveryConfig) {
    this.discoveryConfig = discoveryConfig;
    return this;
  }

  /**
   * Get discoveryConfig
   * @return discoveryConfig
   */
  @javax.annotation.Nullable
  public CreateWorkloadRequestDiscoveryConfig getDiscoveryConfig() {
    return discoveryConfig;
  }

  public void setDiscoveryConfig(CreateWorkloadRequestDiscoveryConfig discoveryConfig) {
    this.discoveryConfig = discoveryConfig;
  }


  public CreateWorkloadRequest applications(List<String> applications) {
    this.applications = applications;
    return this;
  }

  public CreateWorkloadRequest addApplicationsItem(String applicationsItem) {
    if (this.applications == null) {
      this.applications = new ArrayList<>();
    }
    this.applications.add(applicationsItem);
    return this;
  }

  /**
   * List of AppRegistry application ARNs associated to the workload.
   * @return applications
   */
  @javax.annotation.Nullable
  public List<String> getApplications() {
    return applications;
  }

  public void setApplications(List<String> applications) {
    this.applications = applications;
  }


  public CreateWorkloadRequest profileArns(List<String> profileArns) {
    this.profileArns = profileArns;
    return this;
  }

  public CreateWorkloadRequest addProfileArnsItem(String profileArnsItem) {
    if (this.profileArns == null) {
      this.profileArns = new ArrayList<>();
    }
    this.profileArns.add(profileArnsItem);
    return this;
  }

  /**
   * The list of profile ARNs associated with the workload.
   * @return profileArns
   */
  @javax.annotation.Nullable
  public List<String> getProfileArns() {
    return profileArns;
  }

  public void setProfileArns(List<String> profileArns) {
    this.profileArns = profileArns;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateWorkloadRequest createWorkloadRequest = (CreateWorkloadRequest) o;
    return Objects.equals(this.workloadName, createWorkloadRequest.workloadName) &&
        Objects.equals(this.description, createWorkloadRequest.description) &&
        Objects.equals(this.environment, createWorkloadRequest.environment) &&
        Objects.equals(this.accountIds, createWorkloadRequest.accountIds) &&
        Objects.equals(this.awsRegions, createWorkloadRequest.awsRegions) &&
        Objects.equals(this.nonAwsRegions, createWorkloadRequest.nonAwsRegions) &&
        Objects.equals(this.pillarPriorities, createWorkloadRequest.pillarPriorities) &&
        Objects.equals(this.architecturalDesign, createWorkloadRequest.architecturalDesign) &&
        Objects.equals(this.reviewOwner, createWorkloadRequest.reviewOwner) &&
        Objects.equals(this.industryType, createWorkloadRequest.industryType) &&
        Objects.equals(this.industry, createWorkloadRequest.industry) &&
        Objects.equals(this.lenses, createWorkloadRequest.lenses) &&
        Objects.equals(this.notes, createWorkloadRequest.notes) &&
        Objects.equals(this.clientRequestToken, createWorkloadRequest.clientRequestToken) &&
        Objects.equals(this.tags, createWorkloadRequest.tags) &&
        Objects.equals(this.discoveryConfig, createWorkloadRequest.discoveryConfig) &&
        Objects.equals(this.applications, createWorkloadRequest.applications) &&
        Objects.equals(this.profileArns, createWorkloadRequest.profileArns);
  }

  @Override
  public int hashCode() {
    return Objects.hash(workloadName, description, environment, accountIds, awsRegions, nonAwsRegions, pillarPriorities, architecturalDesign, reviewOwner, industryType, industry, lenses, notes, clientRequestToken, tags, discoveryConfig, applications, profileArns);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateWorkloadRequest {\n");
    sb.append("    workloadName: ").append(toIndentedString(workloadName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    accountIds: ").append(toIndentedString(accountIds)).append("\n");
    sb.append("    awsRegions: ").append(toIndentedString(awsRegions)).append("\n");
    sb.append("    nonAwsRegions: ").append(toIndentedString(nonAwsRegions)).append("\n");
    sb.append("    pillarPriorities: ").append(toIndentedString(pillarPriorities)).append("\n");
    sb.append("    architecturalDesign: ").append(toIndentedString(architecturalDesign)).append("\n");
    sb.append("    reviewOwner: ").append(toIndentedString(reviewOwner)).append("\n");
    sb.append("    industryType: ").append(toIndentedString(industryType)).append("\n");
    sb.append("    industry: ").append(toIndentedString(industry)).append("\n");
    sb.append("    lenses: ").append(toIndentedString(lenses)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    clientRequestToken: ").append(toIndentedString(clientRequestToken)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    discoveryConfig: ").append(toIndentedString(discoveryConfig)).append("\n");
    sb.append("    applications: ").append(toIndentedString(applications)).append("\n");
    sb.append("    profileArns: ").append(toIndentedString(profileArns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("WorkloadName");
    openapiFields.add("Description");
    openapiFields.add("Environment");
    openapiFields.add("AccountIds");
    openapiFields.add("AwsRegions");
    openapiFields.add("NonAwsRegions");
    openapiFields.add("PillarPriorities");
    openapiFields.add("ArchitecturalDesign");
    openapiFields.add("ReviewOwner");
    openapiFields.add("IndustryType");
    openapiFields.add("Industry");
    openapiFields.add("Lenses");
    openapiFields.add("Notes");
    openapiFields.add("ClientRequestToken");
    openapiFields.add("Tags");
    openapiFields.add("DiscoveryConfig");
    openapiFields.add("Applications");
    openapiFields.add("ProfileArns");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("WorkloadName");
    openapiRequiredFields.add("Description");
    openapiRequiredFields.add("Environment");
    openapiRequiredFields.add("Lenses");
    openapiRequiredFields.add("ClientRequestToken");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateWorkloadRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateWorkloadRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateWorkloadRequest is not found in the empty JSON string", CreateWorkloadRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateWorkloadRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateWorkloadRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateWorkloadRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("WorkloadName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `WorkloadName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("WorkloadName").toString()));
      }
      if (!jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
      if (!jsonObj.get("Environment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Environment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Environment").toString()));
      }
      // validate the required field `Environment`
      EnvironmentEnum.validateJsonElement(jsonObj.get("Environment"));
      // ensure the optional json data is an array if present
      if (jsonObj.get("AccountIds") != null && !jsonObj.get("AccountIds").isJsonNull() && !jsonObj.get("AccountIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `AccountIds` to be an array in the JSON string but got `%s`", jsonObj.get("AccountIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("AwsRegions") != null && !jsonObj.get("AwsRegions").isJsonNull() && !jsonObj.get("AwsRegions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `AwsRegions` to be an array in the JSON string but got `%s`", jsonObj.get("AwsRegions").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("NonAwsRegions") != null && !jsonObj.get("NonAwsRegions").isJsonNull() && !jsonObj.get("NonAwsRegions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `NonAwsRegions` to be an array in the JSON string but got `%s`", jsonObj.get("NonAwsRegions").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("PillarPriorities") != null && !jsonObj.get("PillarPriorities").isJsonNull() && !jsonObj.get("PillarPriorities").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `PillarPriorities` to be an array in the JSON string but got `%s`", jsonObj.get("PillarPriorities").toString()));
      }
      if ((jsonObj.get("ArchitecturalDesign") != null && !jsonObj.get("ArchitecturalDesign").isJsonNull()) && !jsonObj.get("ArchitecturalDesign").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ArchitecturalDesign` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ArchitecturalDesign").toString()));
      }
      if ((jsonObj.get("ReviewOwner") != null && !jsonObj.get("ReviewOwner").isJsonNull()) && !jsonObj.get("ReviewOwner").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ReviewOwner` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ReviewOwner").toString()));
      }
      if ((jsonObj.get("IndustryType") != null && !jsonObj.get("IndustryType").isJsonNull()) && !jsonObj.get("IndustryType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IndustryType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IndustryType").toString()));
      }
      if ((jsonObj.get("Industry") != null && !jsonObj.get("Industry").isJsonNull()) && !jsonObj.get("Industry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Industry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Industry").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("Lenses") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("Lenses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Lenses` to be an array in the JSON string but got `%s`", jsonObj.get("Lenses").toString()));
      }
      if ((jsonObj.get("Notes") != null && !jsonObj.get("Notes").isJsonNull()) && !jsonObj.get("Notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Notes").toString()));
      }
      if (!jsonObj.get("ClientRequestToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ClientRequestToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ClientRequestToken").toString()));
      }
      // validate the optional field `DiscoveryConfig`
      if (jsonObj.get("DiscoveryConfig") != null && !jsonObj.get("DiscoveryConfig").isJsonNull()) {
        CreateWorkloadRequestDiscoveryConfig.validateJsonElement(jsonObj.get("DiscoveryConfig"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("Applications") != null && !jsonObj.get("Applications").isJsonNull() && !jsonObj.get("Applications").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Applications` to be an array in the JSON string but got `%s`", jsonObj.get("Applications").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ProfileArns") != null && !jsonObj.get("ProfileArns").isJsonNull() && !jsonObj.get("ProfileArns").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProfileArns` to be an array in the JSON string but got `%s`", jsonObj.get("ProfileArns").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateWorkloadRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateWorkloadRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateWorkloadRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateWorkloadRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateWorkloadRequest>() {
           @Override
           public void write(JsonWriter out, CreateWorkloadRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateWorkloadRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateWorkloadRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateWorkloadRequest
   * @throws IOException if the JSON string is invalid with respect to CreateWorkloadRequest
   */
  public static CreateWorkloadRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateWorkloadRequest.class);
  }

  /**
   * Convert an instance of CreateWorkloadRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

