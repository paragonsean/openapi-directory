/*
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.UpdateWorkloadInputDiscoveryConfig;
import org.openapitools.client.model.WorkloadEnvironment;
import org.openapitools.client.model.WorkloadImprovementStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Input to update a workload.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:42.757173-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateWorkloadInput {
  public static final String SERIALIZED_NAME_WORKLOAD_NAME = "WorkloadName";
  @SerializedName(SERIALIZED_NAME_WORKLOAD_NAME)
  private String workloadName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENVIRONMENT = "Environment";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT)
  private WorkloadEnvironment environment;

  public static final String SERIALIZED_NAME_ACCOUNT_IDS = "AccountIds";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_IDS)
  private List<String> accountIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_AWS_REGIONS = "AwsRegions";
  @SerializedName(SERIALIZED_NAME_AWS_REGIONS)
  private List<String> awsRegions = new ArrayList<>();

  public static final String SERIALIZED_NAME_NON_AWS_REGIONS = "NonAwsRegions";
  @SerializedName(SERIALIZED_NAME_NON_AWS_REGIONS)
  private List<String> nonAwsRegions = new ArrayList<>();

  public static final String SERIALIZED_NAME_PILLAR_PRIORITIES = "PillarPriorities";
  @SerializedName(SERIALIZED_NAME_PILLAR_PRIORITIES)
  private List<String> pillarPriorities = new ArrayList<>();

  public static final String SERIALIZED_NAME_ARCHITECTURAL_DESIGN = "ArchitecturalDesign";
  @SerializedName(SERIALIZED_NAME_ARCHITECTURAL_DESIGN)
  private String architecturalDesign;

  public static final String SERIALIZED_NAME_REVIEW_OWNER = "ReviewOwner";
  @SerializedName(SERIALIZED_NAME_REVIEW_OWNER)
  private String reviewOwner;

  public static final String SERIALIZED_NAME_IS_REVIEW_OWNER_UPDATE_ACKNOWLEDGED = "IsReviewOwnerUpdateAcknowledged";
  @SerializedName(SERIALIZED_NAME_IS_REVIEW_OWNER_UPDATE_ACKNOWLEDGED)
  private Boolean isReviewOwnerUpdateAcknowledged;

  public static final String SERIALIZED_NAME_INDUSTRY_TYPE = "IndustryType";
  @SerializedName(SERIALIZED_NAME_INDUSTRY_TYPE)
  private String industryType;

  public static final String SERIALIZED_NAME_INDUSTRY = "Industry";
  @SerializedName(SERIALIZED_NAME_INDUSTRY)
  private String industry;

  public static final String SERIALIZED_NAME_NOTES = "Notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_IMPROVEMENT_STATUS = "ImprovementStatus";
  @SerializedName(SERIALIZED_NAME_IMPROVEMENT_STATUS)
  private WorkloadImprovementStatus improvementStatus;

  public static final String SERIALIZED_NAME_DISCOVERY_CONFIG = "DiscoveryConfig";
  @SerializedName(SERIALIZED_NAME_DISCOVERY_CONFIG)
  private UpdateWorkloadInputDiscoveryConfig discoveryConfig;

  public static final String SERIALIZED_NAME_APPLICATIONS = "Applications";
  @SerializedName(SERIALIZED_NAME_APPLICATIONS)
  private List applications;

  public UpdateWorkloadInput() {
  }

  public UpdateWorkloadInput workloadName(String workloadName) {
    this.workloadName = workloadName;
    return this;
  }

  /**
   * &lt;p&gt;The name of the workload.&lt;/p&gt; &lt;p&gt;The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.&lt;/p&gt;
   * @return workloadName
   */
  @javax.annotation.Nullable
  public String getWorkloadName() {
    return workloadName;
  }

  public void setWorkloadName(String workloadName) {
    this.workloadName = workloadName;
  }


  public UpdateWorkloadInput description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The description for the workload.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateWorkloadInput environment(WorkloadEnvironment environment) {
    this.environment = environment;
    return this;
  }

  /**
   * Get environment
   * @return environment
   */
  @javax.annotation.Nullable
  public WorkloadEnvironment getEnvironment() {
    return environment;
  }

  public void setEnvironment(WorkloadEnvironment environment) {
    this.environment = environment;
  }


  public UpdateWorkloadInput accountIds(List<String> accountIds) {
    this.accountIds = accountIds;
    return this;
  }

  public UpdateWorkloadInput addAccountIdsItem(String accountIdsItem) {
    if (this.accountIds == null) {
      this.accountIds = new ArrayList<>();
    }
    this.accountIds.add(accountIdsItem);
    return this;
  }

  /**
   * The list of Amazon Web Services account IDs associated with the workload.
   * @return accountIds
   */
  @javax.annotation.Nullable
  public List<String> getAccountIds() {
    return accountIds;
  }

  public void setAccountIds(List<String> accountIds) {
    this.accountIds = accountIds;
  }


  public UpdateWorkloadInput awsRegions(List<String> awsRegions) {
    this.awsRegions = awsRegions;
    return this;
  }

  public UpdateWorkloadInput addAwsRegionsItem(String awsRegionsItem) {
    if (this.awsRegions == null) {
      this.awsRegions = new ArrayList<>();
    }
    this.awsRegions.add(awsRegionsItem);
    return this;
  }

  /**
   * The list of Amazon Web Services Regions associated with the workload, for example, &lt;code&gt;us-east-2&lt;/code&gt;, or &lt;code&gt;ca-central-1&lt;/code&gt;.
   * @return awsRegions
   */
  @javax.annotation.Nullable
  public List<String> getAwsRegions() {
    return awsRegions;
  }

  public void setAwsRegions(List<String> awsRegions) {
    this.awsRegions = awsRegions;
  }


  public UpdateWorkloadInput nonAwsRegions(List<String> nonAwsRegions) {
    this.nonAwsRegions = nonAwsRegions;
    return this;
  }

  public UpdateWorkloadInput addNonAwsRegionsItem(String nonAwsRegionsItem) {
    if (this.nonAwsRegions == null) {
      this.nonAwsRegions = new ArrayList<>();
    }
    this.nonAwsRegions.add(nonAwsRegionsItem);
    return this;
  }

  /**
   *  The list of non-Amazon Web Services Regions associated with the workload.
   * @return nonAwsRegions
   */
  @javax.annotation.Nullable
  public List<String> getNonAwsRegions() {
    return nonAwsRegions;
  }

  public void setNonAwsRegions(List<String> nonAwsRegions) {
    this.nonAwsRegions = nonAwsRegions;
  }


  public UpdateWorkloadInput pillarPriorities(List<String> pillarPriorities) {
    this.pillarPriorities = pillarPriorities;
    return this;
  }

  public UpdateWorkloadInput addPillarPrioritiesItem(String pillarPrioritiesItem) {
    if (this.pillarPriorities == null) {
      this.pillarPriorities = new ArrayList<>();
    }
    this.pillarPriorities.add(pillarPrioritiesItem);
    return this;
  }

  /**
   * The priorities of the pillars, which are used to order items in the improvement plan. Each pillar is represented by its &lt;a&gt;PillarReviewSummary$PillarId&lt;/a&gt;.
   * @return pillarPriorities
   */
  @javax.annotation.Nullable
  public List<String> getPillarPriorities() {
    return pillarPriorities;
  }

  public void setPillarPriorities(List<String> pillarPriorities) {
    this.pillarPriorities = pillarPriorities;
  }


  public UpdateWorkloadInput architecturalDesign(String architecturalDesign) {
    this.architecturalDesign = architecturalDesign;
    return this;
  }

  /**
   * The URL of the architectural design for the workload.
   * @return architecturalDesign
   */
  @javax.annotation.Nullable
  public String getArchitecturalDesign() {
    return architecturalDesign;
  }

  public void setArchitecturalDesign(String architecturalDesign) {
    this.architecturalDesign = architecturalDesign;
  }


  public UpdateWorkloadInput reviewOwner(String reviewOwner) {
    this.reviewOwner = reviewOwner;
    return this;
  }

  /**
   * The review owner of the workload. The name, email address, or identifier for the primary group or individual that owns the workload review process.
   * @return reviewOwner
   */
  @javax.annotation.Nullable
  public String getReviewOwner() {
    return reviewOwner;
  }

  public void setReviewOwner(String reviewOwner) {
    this.reviewOwner = reviewOwner;
  }


  public UpdateWorkloadInput isReviewOwnerUpdateAcknowledged(Boolean isReviewOwnerUpdateAcknowledged) {
    this.isReviewOwnerUpdateAcknowledged = isReviewOwnerUpdateAcknowledged;
    return this;
  }

  /**
   * Get isReviewOwnerUpdateAcknowledged
   * @return isReviewOwnerUpdateAcknowledged
   */
  @javax.annotation.Nullable
  public Boolean getIsReviewOwnerUpdateAcknowledged() {
    return isReviewOwnerUpdateAcknowledged;
  }

  public void setIsReviewOwnerUpdateAcknowledged(Boolean isReviewOwnerUpdateAcknowledged) {
    this.isReviewOwnerUpdateAcknowledged = isReviewOwnerUpdateAcknowledged;
  }


  public UpdateWorkloadInput industryType(String industryType) {
    this.industryType = industryType;
    return this;
  }

  /**
   * &lt;p&gt;The industry type for the workload.&lt;/p&gt; &lt;p&gt;If specified, must be one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Agriculture&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Automobile&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Defense&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Design and Engineering&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Digital Advertising&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Education&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Environmental Protection&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Financial Services&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Gaming&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;General Public Services&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Healthcare&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Hospitality&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;InfoTech&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Justice and Public Safety&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Life Sciences&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Manufacturing&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Media &amp;amp; Entertainment&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Mining &amp;amp; Resources&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Oil &amp;amp; Gas&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Power &amp;amp; Utilities&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Professional Services&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Real Estate &amp;amp; Construction&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Retail &amp;amp; Wholesale&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Social Protection&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Telecommunications&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Travel, Transportation &amp;amp; Logistics&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Other&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   * @return industryType
   */
  @javax.annotation.Nullable
  public String getIndustryType() {
    return industryType;
  }

  public void setIndustryType(String industryType) {
    this.industryType = industryType;
  }


  public UpdateWorkloadInput industry(String industry) {
    this.industry = industry;
    return this;
  }

  /**
   * The industry for the workload.
   * @return industry
   */
  @javax.annotation.Nullable
  public String getIndustry() {
    return industry;
  }

  public void setIndustry(String industry) {
    this.industry = industry;
  }


  public UpdateWorkloadInput notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * The notes associated with the workload.
   * @return notes
   */
  @javax.annotation.Nullable
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  public UpdateWorkloadInput improvementStatus(WorkloadImprovementStatus improvementStatus) {
    this.improvementStatus = improvementStatus;
    return this;
  }

  /**
   * Get improvementStatus
   * @return improvementStatus
   */
  @javax.annotation.Nullable
  public WorkloadImprovementStatus getImprovementStatus() {
    return improvementStatus;
  }

  public void setImprovementStatus(WorkloadImprovementStatus improvementStatus) {
    this.improvementStatus = improvementStatus;
  }


  public UpdateWorkloadInput discoveryConfig(UpdateWorkloadInputDiscoveryConfig discoveryConfig) {
    this.discoveryConfig = discoveryConfig;
    return this;
  }

  /**
   * Get discoveryConfig
   * @return discoveryConfig
   */
  @javax.annotation.Nullable
  public UpdateWorkloadInputDiscoveryConfig getDiscoveryConfig() {
    return discoveryConfig;
  }

  public void setDiscoveryConfig(UpdateWorkloadInputDiscoveryConfig discoveryConfig) {
    this.discoveryConfig = discoveryConfig;
  }


  public UpdateWorkloadInput applications(List applications) {
    this.applications = applications;
    return this;
  }

  /**
   * Get applications
   * @return applications
   */
  @javax.annotation.Nullable
  public List getApplications() {
    return applications;
  }

  public void setApplications(List applications) {
    this.applications = applications;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateWorkloadInput updateWorkloadInput = (UpdateWorkloadInput) o;
    return Objects.equals(this.workloadName, updateWorkloadInput.workloadName) &&
        Objects.equals(this.description, updateWorkloadInput.description) &&
        Objects.equals(this.environment, updateWorkloadInput.environment) &&
        Objects.equals(this.accountIds, updateWorkloadInput.accountIds) &&
        Objects.equals(this.awsRegions, updateWorkloadInput.awsRegions) &&
        Objects.equals(this.nonAwsRegions, updateWorkloadInput.nonAwsRegions) &&
        Objects.equals(this.pillarPriorities, updateWorkloadInput.pillarPriorities) &&
        Objects.equals(this.architecturalDesign, updateWorkloadInput.architecturalDesign) &&
        Objects.equals(this.reviewOwner, updateWorkloadInput.reviewOwner) &&
        Objects.equals(this.isReviewOwnerUpdateAcknowledged, updateWorkloadInput.isReviewOwnerUpdateAcknowledged) &&
        Objects.equals(this.industryType, updateWorkloadInput.industryType) &&
        Objects.equals(this.industry, updateWorkloadInput.industry) &&
        Objects.equals(this.notes, updateWorkloadInput.notes) &&
        Objects.equals(this.improvementStatus, updateWorkloadInput.improvementStatus) &&
        Objects.equals(this.discoveryConfig, updateWorkloadInput.discoveryConfig) &&
        Objects.equals(this.applications, updateWorkloadInput.applications);
  }

  @Override
  public int hashCode() {
    return Objects.hash(workloadName, description, environment, accountIds, awsRegions, nonAwsRegions, pillarPriorities, architecturalDesign, reviewOwner, isReviewOwnerUpdateAcknowledged, industryType, industry, notes, improvementStatus, discoveryConfig, applications);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateWorkloadInput {\n");
    sb.append("    workloadName: ").append(toIndentedString(workloadName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    accountIds: ").append(toIndentedString(accountIds)).append("\n");
    sb.append("    awsRegions: ").append(toIndentedString(awsRegions)).append("\n");
    sb.append("    nonAwsRegions: ").append(toIndentedString(nonAwsRegions)).append("\n");
    sb.append("    pillarPriorities: ").append(toIndentedString(pillarPriorities)).append("\n");
    sb.append("    architecturalDesign: ").append(toIndentedString(architecturalDesign)).append("\n");
    sb.append("    reviewOwner: ").append(toIndentedString(reviewOwner)).append("\n");
    sb.append("    isReviewOwnerUpdateAcknowledged: ").append(toIndentedString(isReviewOwnerUpdateAcknowledged)).append("\n");
    sb.append("    industryType: ").append(toIndentedString(industryType)).append("\n");
    sb.append("    industry: ").append(toIndentedString(industry)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    improvementStatus: ").append(toIndentedString(improvementStatus)).append("\n");
    sb.append("    discoveryConfig: ").append(toIndentedString(discoveryConfig)).append("\n");
    sb.append("    applications: ").append(toIndentedString(applications)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("WorkloadName");
    openapiFields.add("Description");
    openapiFields.add("Environment");
    openapiFields.add("AccountIds");
    openapiFields.add("AwsRegions");
    openapiFields.add("NonAwsRegions");
    openapiFields.add("PillarPriorities");
    openapiFields.add("ArchitecturalDesign");
    openapiFields.add("ReviewOwner");
    openapiFields.add("IsReviewOwnerUpdateAcknowledged");
    openapiFields.add("IndustryType");
    openapiFields.add("Industry");
    openapiFields.add("Notes");
    openapiFields.add("ImprovementStatus");
    openapiFields.add("DiscoveryConfig");
    openapiFields.add("Applications");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateWorkloadInput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateWorkloadInput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateWorkloadInput is not found in the empty JSON string", UpdateWorkloadInput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateWorkloadInput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateWorkloadInput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("WorkloadName") != null && !jsonObj.get("WorkloadName").isJsonNull()) && !jsonObj.get("WorkloadName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `WorkloadName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("WorkloadName").toString()));
      }
      if ((jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) && !jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
      // validate the optional field `Environment`
      if (jsonObj.get("Environment") != null && !jsonObj.get("Environment").isJsonNull()) {
        WorkloadEnvironment.validateJsonElement(jsonObj.get("Environment"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("AccountIds") != null && !jsonObj.get("AccountIds").isJsonNull() && !jsonObj.get("AccountIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `AccountIds` to be an array in the JSON string but got `%s`", jsonObj.get("AccountIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("AwsRegions") != null && !jsonObj.get("AwsRegions").isJsonNull() && !jsonObj.get("AwsRegions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `AwsRegions` to be an array in the JSON string but got `%s`", jsonObj.get("AwsRegions").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("NonAwsRegions") != null && !jsonObj.get("NonAwsRegions").isJsonNull() && !jsonObj.get("NonAwsRegions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `NonAwsRegions` to be an array in the JSON string but got `%s`", jsonObj.get("NonAwsRegions").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("PillarPriorities") != null && !jsonObj.get("PillarPriorities").isJsonNull() && !jsonObj.get("PillarPriorities").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `PillarPriorities` to be an array in the JSON string but got `%s`", jsonObj.get("PillarPriorities").toString()));
      }
      if ((jsonObj.get("ArchitecturalDesign") != null && !jsonObj.get("ArchitecturalDesign").isJsonNull()) && !jsonObj.get("ArchitecturalDesign").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ArchitecturalDesign` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ArchitecturalDesign").toString()));
      }
      if ((jsonObj.get("ReviewOwner") != null && !jsonObj.get("ReviewOwner").isJsonNull()) && !jsonObj.get("ReviewOwner").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ReviewOwner` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ReviewOwner").toString()));
      }
      // validate the optional field `IsReviewOwnerUpdateAcknowledged`
      if (jsonObj.get("IsReviewOwnerUpdateAcknowledged") != null && !jsonObj.get("IsReviewOwnerUpdateAcknowledged").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IsReviewOwnerUpdateAcknowledged"));
      }
      if ((jsonObj.get("IndustryType") != null && !jsonObj.get("IndustryType").isJsonNull()) && !jsonObj.get("IndustryType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IndustryType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IndustryType").toString()));
      }
      if ((jsonObj.get("Industry") != null && !jsonObj.get("Industry").isJsonNull()) && !jsonObj.get("Industry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Industry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Industry").toString()));
      }
      if ((jsonObj.get("Notes") != null && !jsonObj.get("Notes").isJsonNull()) && !jsonObj.get("Notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Notes").toString()));
      }
      // validate the optional field `ImprovementStatus`
      if (jsonObj.get("ImprovementStatus") != null && !jsonObj.get("ImprovementStatus").isJsonNull()) {
        WorkloadImprovementStatus.validateJsonElement(jsonObj.get("ImprovementStatus"));
      }
      // validate the optional field `DiscoveryConfig`
      if (jsonObj.get("DiscoveryConfig") != null && !jsonObj.get("DiscoveryConfig").isJsonNull()) {
        UpdateWorkloadInputDiscoveryConfig.validateJsonElement(jsonObj.get("DiscoveryConfig"));
      }
      // validate the optional field `Applications`
      if (jsonObj.get("Applications") != null && !jsonObj.get("Applications").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Applications"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateWorkloadInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateWorkloadInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateWorkloadInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateWorkloadInput.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateWorkloadInput>() {
           @Override
           public void write(JsonWriter out, UpdateWorkloadInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateWorkloadInput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateWorkloadInput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateWorkloadInput
   * @throws IOException if the JSON string is invalid with respect to UpdateWorkloadInput
   */
  public static UpdateWorkloadInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateWorkloadInput.class);
  }

  /**
   * Convert an instance of UpdateWorkloadInput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

