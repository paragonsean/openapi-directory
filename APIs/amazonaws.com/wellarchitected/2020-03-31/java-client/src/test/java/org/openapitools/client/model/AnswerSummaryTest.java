/*
 * AWS Well-Architected Tool
 * <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AnswerReason;
import org.openapitools.client.model.Choice;
import org.openapitools.client.model.QuestionType;
import org.openapitools.client.model.Risk;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AnswerSummary
 */
public class AnswerSummaryTest {
    private final AnswerSummary model = new AnswerSummary();

    /**
     * Model tests for AnswerSummary
     */
    @Test
    public void testAnswerSummary() {
        // TODO: test AnswerSummary
    }

    /**
     * Test the property 'questionId'
     */
    @Test
    public void questionIdTest() {
        // TODO: test questionId
    }

    /**
     * Test the property 'pillarId'
     */
    @Test
    public void pillarIdTest() {
        // TODO: test pillarId
    }

    /**
     * Test the property 'questionTitle'
     */
    @Test
    public void questionTitleTest() {
        // TODO: test questionTitle
    }

    /**
     * Test the property 'choices'
     */
    @Test
    public void choicesTest() {
        // TODO: test choices
    }

    /**
     * Test the property 'selectedChoices'
     */
    @Test
    public void selectedChoicesTest() {
        // TODO: test selectedChoices
    }

    /**
     * Test the property 'choiceAnswerSummaries'
     */
    @Test
    public void choiceAnswerSummariesTest() {
        // TODO: test choiceAnswerSummaries
    }

    /**
     * Test the property 'isApplicable'
     */
    @Test
    public void isApplicableTest() {
        // TODO: test isApplicable
    }

    /**
     * Test the property 'risk'
     */
    @Test
    public void riskTest() {
        // TODO: test risk
    }

    /**
     * Test the property 'reason'
     */
    @Test
    public void reasonTest() {
        // TODO: test reason
    }

    /**
     * Test the property 'questionType'
     */
    @Test
    public void questionTypeTest() {
        // TODO: test questionType
    }

}
