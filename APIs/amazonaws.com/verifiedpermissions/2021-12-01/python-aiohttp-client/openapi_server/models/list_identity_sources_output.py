# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListIdentitySourcesOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_token: str=None, identity_sources: List=None):
        """ListIdentitySourcesOutput - a model defined in OpenAPI

        :param next_token: The next_token of this ListIdentitySourcesOutput.
        :param identity_sources: The identity_sources of this ListIdentitySourcesOutput.
        """
        self.openapi_types = {
            'next_token': str,
            'identity_sources': List
        }

        self.attribute_map = {
            'next_token': 'nextToken',
            'identity_sources': 'identitySources'
        }

        self._next_token = next_token
        self._identity_sources = identity_sources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListIdentitySourcesOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListIdentitySourcesOutput of this ListIdentitySourcesOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_token(self):
        """Gets the next_token of this ListIdentitySourcesOutput.


        :return: The next_token of this ListIdentitySourcesOutput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListIdentitySourcesOutput.


        :param next_token: The next_token of this ListIdentitySourcesOutput.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def identity_sources(self):
        """Gets the identity_sources of this ListIdentitySourcesOutput.


        :return: The identity_sources of this ListIdentitySourcesOutput.
        :rtype: List
        """
        return self._identity_sources

    @identity_sources.setter
    def identity_sources(self, identity_sources):
        """Sets the identity_sources of this ListIdentitySourcesOutput.


        :param identity_sources: The identity_sources of this ListIdentitySourcesOutput.
        :type identity_sources: List
        """
        if identity_sources is None:
            raise ValueError("Invalid value for `identity_sources`, must not be `None`")

        self._identity_sources = identity_sources
