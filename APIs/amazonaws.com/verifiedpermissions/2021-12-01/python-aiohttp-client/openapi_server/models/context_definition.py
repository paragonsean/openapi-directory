# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContextDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, context_map: Dict=None):
        """ContextDefinition - a model defined in OpenAPI

        :param context_map: The context_map of this ContextDefinition.
        """
        self.openapi_types = {
            'context_map': Dict
        }

        self.attribute_map = {
            'context_map': 'contextMap'
        }

        self._context_map = context_map

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContextDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContextDefinition of this ContextDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def context_map(self):
        """Gets the context_map of this ContextDefinition.


        :return: The context_map of this ContextDefinition.
        :rtype: Dict
        """
        return self._context_map

    @context_map.setter
    def context_map(self, context_map):
        """Sets the context_map of this ContextDefinition.


        :param context_map: The context_map of this ContextDefinition.
        :type context_map: Dict
        """

        self._context_map = context_map
