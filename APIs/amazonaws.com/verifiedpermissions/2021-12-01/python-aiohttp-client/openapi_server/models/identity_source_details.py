# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.open_id_issuer import OpenIdIssuer
from openapi_server import util


class IdentitySourceDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_ids: List=None, user_pool_arn: str=None, discovery_url: str=None, open_id_issuer: OpenIdIssuer=None):
        """IdentitySourceDetails - a model defined in OpenAPI

        :param client_ids: The client_ids of this IdentitySourceDetails.
        :param user_pool_arn: The user_pool_arn of this IdentitySourceDetails.
        :param discovery_url: The discovery_url of this IdentitySourceDetails.
        :param open_id_issuer: The open_id_issuer of this IdentitySourceDetails.
        """
        self.openapi_types = {
            'client_ids': List,
            'user_pool_arn': str,
            'discovery_url': str,
            'open_id_issuer': OpenIdIssuer
        }

        self.attribute_map = {
            'client_ids': 'clientIds',
            'user_pool_arn': 'userPoolArn',
            'discovery_url': 'discoveryUrl',
            'open_id_issuer': 'openIdIssuer'
        }

        self._client_ids = client_ids
        self._user_pool_arn = user_pool_arn
        self._discovery_url = discovery_url
        self._open_id_issuer = open_id_issuer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentitySourceDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentitySourceDetails of this IdentitySourceDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_ids(self):
        """Gets the client_ids of this IdentitySourceDetails.


        :return: The client_ids of this IdentitySourceDetails.
        :rtype: List
        """
        return self._client_ids

    @client_ids.setter
    def client_ids(self, client_ids):
        """Sets the client_ids of this IdentitySourceDetails.


        :param client_ids: The client_ids of this IdentitySourceDetails.
        :type client_ids: List
        """

        self._client_ids = client_ids

    @property
    def user_pool_arn(self):
        """Gets the user_pool_arn of this IdentitySourceDetails.


        :return: The user_pool_arn of this IdentitySourceDetails.
        :rtype: str
        """
        return self._user_pool_arn

    @user_pool_arn.setter
    def user_pool_arn(self, user_pool_arn):
        """Sets the user_pool_arn of this IdentitySourceDetails.


        :param user_pool_arn: The user_pool_arn of this IdentitySourceDetails.
        :type user_pool_arn: str
        """

        self._user_pool_arn = user_pool_arn

    @property
    def discovery_url(self):
        """Gets the discovery_url of this IdentitySourceDetails.


        :return: The discovery_url of this IdentitySourceDetails.
        :rtype: str
        """
        return self._discovery_url

    @discovery_url.setter
    def discovery_url(self, discovery_url):
        """Sets the discovery_url of this IdentitySourceDetails.


        :param discovery_url: The discovery_url of this IdentitySourceDetails.
        :type discovery_url: str
        """

        self._discovery_url = discovery_url

    @property
    def open_id_issuer(self):
        """Gets the open_id_issuer of this IdentitySourceDetails.


        :return: The open_id_issuer of this IdentitySourceDetails.
        :rtype: OpenIdIssuer
        """
        return self._open_id_issuer

    @open_id_issuer.setter
    def open_id_issuer(self, open_id_issuer):
        """Sets the open_id_issuer of this IdentitySourceDetails.


        :param open_id_issuer: The open_id_issuer of this IdentitySourceDetails.
        :type open_id_issuer: OpenIdIssuer
        """

        self._open_id_issuer = open_id_issuer
