# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetIdentitySourceInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy_store_id: str=None, identity_source_id: str=None):
        """GetIdentitySourceInput - a model defined in OpenAPI

        :param policy_store_id: The policy_store_id of this GetIdentitySourceInput.
        :param identity_source_id: The identity_source_id of this GetIdentitySourceInput.
        """
        self.openapi_types = {
            'policy_store_id': str,
            'identity_source_id': str
        }

        self.attribute_map = {
            'policy_store_id': 'policyStoreId',
            'identity_source_id': 'identitySourceId'
        }

        self._policy_store_id = policy_store_id
        self._identity_source_id = identity_source_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetIdentitySourceInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetIdentitySourceInput of this GetIdentitySourceInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy_store_id(self):
        """Gets the policy_store_id of this GetIdentitySourceInput.


        :return: The policy_store_id of this GetIdentitySourceInput.
        :rtype: str
        """
        return self._policy_store_id

    @policy_store_id.setter
    def policy_store_id(self, policy_store_id):
        """Sets the policy_store_id of this GetIdentitySourceInput.


        :param policy_store_id: The policy_store_id of this GetIdentitySourceInput.
        :type policy_store_id: str
        """
        if policy_store_id is None:
            raise ValueError("Invalid value for `policy_store_id`, must not be `None`")

        self._policy_store_id = policy_store_id

    @property
    def identity_source_id(self):
        """Gets the identity_source_id of this GetIdentitySourceInput.


        :return: The identity_source_id of this GetIdentitySourceInput.
        :rtype: str
        """
        return self._identity_source_id

    @identity_source_id.setter
    def identity_source_id(self, identity_source_id):
        """Sets the identity_source_id of this GetIdentitySourceInput.


        :param identity_source_id: The identity_source_id of this GetIdentitySourceInput.
        :type identity_source_id: str
        """
        if identity_source_id is None:
            raise ValueError("Invalid value for `identity_source_id`, must not be `None`")

        self._identity_source_id = identity_source_id
