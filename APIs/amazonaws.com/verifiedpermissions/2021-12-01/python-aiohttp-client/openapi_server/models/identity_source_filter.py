# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentitySourceFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, principal_entity_type: str=None):
        """IdentitySourceFilter - a model defined in OpenAPI

        :param principal_entity_type: The principal_entity_type of this IdentitySourceFilter.
        """
        self.openapi_types = {
            'principal_entity_type': str
        }

        self.attribute_map = {
            'principal_entity_type': 'principalEntityType'
        }

        self._principal_entity_type = principal_entity_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentitySourceFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentitySourceFilter of this IdentitySourceFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def principal_entity_type(self):
        """Gets the principal_entity_type of this IdentitySourceFilter.


        :return: The principal_entity_type of this IdentitySourceFilter.
        :rtype: str
        """
        return self._principal_entity_type

    @principal_entity_type.setter
    def principal_entity_type(self, principal_entity_type):
        """Sets the principal_entity_type of this IdentitySourceFilter.


        :param principal_entity_type: The principal_entity_type of this IdentitySourceFilter.
        :type principal_entity_type: str
        """

        self._principal_entity_type = principal_entity_type
