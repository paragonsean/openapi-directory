# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Resource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, last_reported_at: datetime=None, owning_account_id: str=None, properties: List=None, region: str=None, resource_type: str=None, service: str=None):
        """Resource - a model defined in OpenAPI

        :param arn: The arn of this Resource.
        :param last_reported_at: The last_reported_at of this Resource.
        :param owning_account_id: The owning_account_id of this Resource.
        :param properties: The properties of this Resource.
        :param region: The region of this Resource.
        :param resource_type: The resource_type of this Resource.
        :param service: The service of this Resource.
        """
        self.openapi_types = {
            'arn': str,
            'last_reported_at': datetime,
            'owning_account_id': str,
            'properties': List,
            'region': str,
            'resource_type': str,
            'service': str
        }

        self.attribute_map = {
            'arn': 'Arn',
            'last_reported_at': 'LastReportedAt',
            'owning_account_id': 'OwningAccountId',
            'properties': 'Properties',
            'region': 'Region',
            'resource_type': 'ResourceType',
            'service': 'Service'
        }

        self._arn = arn
        self._last_reported_at = last_reported_at
        self._owning_account_id = owning_account_id
        self._properties = properties
        self._region = region
        self._resource_type = resource_type
        self._service = service

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Resource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Resource of this Resource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this Resource.


        :return: The arn of this Resource.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this Resource.


        :param arn: The arn of this Resource.
        :type arn: str
        """

        self._arn = arn

    @property
    def last_reported_at(self):
        """Gets the last_reported_at of this Resource.


        :return: The last_reported_at of this Resource.
        :rtype: datetime
        """
        return self._last_reported_at

    @last_reported_at.setter
    def last_reported_at(self, last_reported_at):
        """Sets the last_reported_at of this Resource.


        :param last_reported_at: The last_reported_at of this Resource.
        :type last_reported_at: datetime
        """

        self._last_reported_at = last_reported_at

    @property
    def owning_account_id(self):
        """Gets the owning_account_id of this Resource.


        :return: The owning_account_id of this Resource.
        :rtype: str
        """
        return self._owning_account_id

    @owning_account_id.setter
    def owning_account_id(self, owning_account_id):
        """Sets the owning_account_id of this Resource.


        :param owning_account_id: The owning_account_id of this Resource.
        :type owning_account_id: str
        """

        self._owning_account_id = owning_account_id

    @property
    def properties(self):
        """Gets the properties of this Resource.


        :return: The properties of this Resource.
        :rtype: List
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this Resource.


        :param properties: The properties of this Resource.
        :type properties: List
        """

        self._properties = properties

    @property
    def region(self):
        """Gets the region of this Resource.


        :return: The region of this Resource.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this Resource.


        :param region: The region of this Resource.
        :type region: str
        """

        self._region = region

    @property
    def resource_type(self):
        """Gets the resource_type of this Resource.


        :return: The resource_type of this Resource.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this Resource.


        :param resource_type: The resource_type of this Resource.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def service(self):
        """Gets the service of this Resource.


        :return: The service of this Resource.
        :rtype: str
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this Resource.


        :param service: The service of this Resource.
        :type service: str
        """

        self._service = service
