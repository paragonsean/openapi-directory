# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResourceCount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, complete: bool=None, total_resources: int=None):
        """ResourceCount - a model defined in OpenAPI

        :param complete: The complete of this ResourceCount.
        :param total_resources: The total_resources of this ResourceCount.
        """
        self.openapi_types = {
            'complete': bool,
            'total_resources': int
        }

        self.attribute_map = {
            'complete': 'Complete',
            'total_resources': 'TotalResources'
        }

        self._complete = complete
        self._total_resources = total_resources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceCount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceCount of this ResourceCount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def complete(self):
        """Gets the complete of this ResourceCount.


        :return: The complete of this ResourceCount.
        :rtype: bool
        """
        return self._complete

    @complete.setter
    def complete(self, complete):
        """Sets the complete of this ResourceCount.


        :param complete: The complete of this ResourceCount.
        :type complete: bool
        """

        self._complete = complete

    @property
    def total_resources(self):
        """Gets the total_resources of this ResourceCount.


        :return: The total_resources of this ResourceCount.
        :rtype: int
        """
        return self._total_resources

    @total_resources.setter
    def total_resources(self, total_resources):
        """Sets the total_resources of this ResourceCount.


        :param total_resources: The total_resources of this ResourceCount.
        :type total_resources: int
        """

        self._total_resources = total_resources
