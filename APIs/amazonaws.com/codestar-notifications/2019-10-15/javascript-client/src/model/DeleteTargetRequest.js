/**
 * AWS CodeStar Notifications
 * <p>This AWS CodeStar Notifications API Reference provides descriptions and usage examples of the operations and data types for the AWS CodeStar Notifications API. You can use the AWS CodeStar Notifications API to work with the following objects:</p> <p>Notification rules, by calling the following: </p> <ul> <li> <p> <a>CreateNotificationRule</a>, which creates a notification rule for a resource in your account. </p> </li> <li> <p> <a>DeleteNotificationRule</a>, which deletes a notification rule. </p> </li> <li> <p> <a>DescribeNotificationRule</a>, which provides information about a notification rule. </p> </li> <li> <p> <a>ListNotificationRules</a>, which lists the notification rules associated with your account. </p> </li> <li> <p> <a>UpdateNotificationRule</a>, which changes the name, events, or targets associated with a notification rule. </p> </li> <li> <p> <a>Subscribe</a>, which subscribes a target to a notification rule. </p> </li> <li> <p> <a>Unsubscribe</a>, which removes a target from a notification rule. </p> </li> </ul> <p>Targets, by calling the following: </p> <ul> <li> <p> <a>DeleteTarget</a>, which removes a notification rule target from a notification rule. </p> </li> <li> <p> <a>ListTargets</a>, which lists the targets associated with a notification rule. </p> </li> </ul> <p>Events, by calling the following: </p> <ul> <li> <p> <a>ListEventTypes</a>, which lists the event types you can include in a notification rule. </p> </li> </ul> <p>Tags, by calling the following: </p> <ul> <li> <p> <a>ListTagsForResource</a>, which lists the tags already associated with a notification rule in your account. </p> </li> <li> <p> <a>TagResource</a>, which associates a tag you provide with a notification rule in your account. </p> </li> <li> <p> <a>UntagResource</a>, which removes a tag from a notification rule in your account. </p> </li> </ul> <p> For information about how to use AWS CodeStar Notifications, see the <a href=\"https://docs.aws.amazon.com/dtconsole/latest/userguide/what-is-dtconsole.html\">Amazon Web Services Developer Tools Console User Guide</a>. </p>
 *
 * The version of the OpenAPI document: 2019-10-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeleteTargetRequest model module.
 * @module model/DeleteTargetRequest
 * @version 2019-10-15
 */
class DeleteTargetRequest {
    /**
     * Constructs a new <code>DeleteTargetRequest</code>.
     * @alias module:model/DeleteTargetRequest
     * @param targetAddress {String} The Amazon Resource Name (ARN) of the Chatbot topic or Chatbot client to delete.
     */
    constructor(targetAddress) { 
        
        DeleteTargetRequest.initialize(this, targetAddress);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, targetAddress) { 
        obj['TargetAddress'] = targetAddress;
    }

    /**
     * Constructs a <code>DeleteTargetRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeleteTargetRequest} obj Optional instance to populate.
     * @return {module:model/DeleteTargetRequest} The populated <code>DeleteTargetRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeleteTargetRequest();

            if (data.hasOwnProperty('TargetAddress')) {
                obj['TargetAddress'] = ApiClient.convertToType(data['TargetAddress'], 'String');
            }
            if (data.hasOwnProperty('ForceUnsubscribeAll')) {
                obj['ForceUnsubscribeAll'] = ApiClient.convertToType(data['ForceUnsubscribeAll'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeleteTargetRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeleteTargetRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeleteTargetRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['TargetAddress'] && !(typeof data['TargetAddress'] === 'string' || data['TargetAddress'] instanceof String)) {
            throw new Error("Expected the field `TargetAddress` to be a primitive type in the JSON string but got " + data['TargetAddress']);
        }

        return true;
    }


}

DeleteTargetRequest.RequiredProperties = ["TargetAddress"];

/**
 * The Amazon Resource Name (ARN) of the Chatbot topic or Chatbot client to delete.
 * @member {String} TargetAddress
 */
DeleteTargetRequest.prototype['TargetAddress'] = undefined;

/**
 * A Boolean value that can be used to delete all associations with this Chatbot topic. The default value is FALSE. If set to TRUE, all associations between that target and every notification rule in your Amazon Web Services account are deleted.
 * @member {Boolean} ForceUnsubscribeAll
 */
DeleteTargetRequest.prototype['ForceUnsubscribeAll'] = undefined;






export default DeleteTargetRequest;

