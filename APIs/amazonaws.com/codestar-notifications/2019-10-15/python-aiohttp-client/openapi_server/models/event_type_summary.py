# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventTypeSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_type_id: str=None, service_name: str=None, event_type_name: str=None, resource_type: str=None):
        """EventTypeSummary - a model defined in OpenAPI

        :param event_type_id: The event_type_id of this EventTypeSummary.
        :param service_name: The service_name of this EventTypeSummary.
        :param event_type_name: The event_type_name of this EventTypeSummary.
        :param resource_type: The resource_type of this EventTypeSummary.
        """
        self.openapi_types = {
            'event_type_id': str,
            'service_name': str,
            'event_type_name': str,
            'resource_type': str
        }

        self.attribute_map = {
            'event_type_id': 'EventTypeId',
            'service_name': 'ServiceName',
            'event_type_name': 'EventTypeName',
            'resource_type': 'ResourceType'
        }

        self._event_type_id = event_type_id
        self._service_name = service_name
        self._event_type_name = event_type_name
        self._resource_type = resource_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventTypeSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventTypeSummary of this EventTypeSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_type_id(self):
        """Gets the event_type_id of this EventTypeSummary.


        :return: The event_type_id of this EventTypeSummary.
        :rtype: str
        """
        return self._event_type_id

    @event_type_id.setter
    def event_type_id(self, event_type_id):
        """Sets the event_type_id of this EventTypeSummary.


        :param event_type_id: The event_type_id of this EventTypeSummary.
        :type event_type_id: str
        """

        self._event_type_id = event_type_id

    @property
    def service_name(self):
        """Gets the service_name of this EventTypeSummary.


        :return: The service_name of this EventTypeSummary.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this EventTypeSummary.


        :param service_name: The service_name of this EventTypeSummary.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def event_type_name(self):
        """Gets the event_type_name of this EventTypeSummary.


        :return: The event_type_name of this EventTypeSummary.
        :rtype: str
        """
        return self._event_type_name

    @event_type_name.setter
    def event_type_name(self, event_type_name):
        """Sets the event_type_name of this EventTypeSummary.


        :param event_type_name: The event_type_name of this EventTypeSummary.
        :type event_type_name: str
        """

        self._event_type_name = event_type_name

    @property
    def resource_type(self):
        """Gets the resource_type of this EventTypeSummary.


        :return: The resource_type of this EventTypeSummary.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this EventTypeSummary.


        :param resource_type: The resource_type of this EventTypeSummary.
        :type resource_type: str
        """

        self._resource_type = resource_type
