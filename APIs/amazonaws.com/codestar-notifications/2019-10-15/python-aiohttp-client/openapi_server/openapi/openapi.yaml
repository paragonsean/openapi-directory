openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>This AWS CodeStar Notifications API Reference provides descriptions\
    \ and usage examples of the operations and data types for the AWS CodeStar Notifications\
    \ API. You can use the AWS CodeStar Notifications API to work with the following\
    \ objects:</p> <p>Notification rules, by calling the following: </p> <ul> <li>\
    \ <p> <a>CreateNotificationRule</a>, which creates a notification rule for a resource\
    \ in your account. </p> </li> <li> <p> <a>DeleteNotificationRule</a>, which deletes\
    \ a notification rule. </p> </li> <li> <p> <a>DescribeNotificationRule</a>, which\
    \ provides information about a notification rule. </p> </li> <li> <p> <a>ListNotificationRules</a>,\
    \ which lists the notification rules associated with your account. </p> </li>\
    \ <li> <p> <a>UpdateNotificationRule</a>, which changes the name, events, or targets\
    \ associated with a notification rule. </p> </li> <li> <p> <a>Subscribe</a>, which\
    \ subscribes a target to a notification rule. </p> </li> <li> <p> <a>Unsubscribe</a>,\
    \ which removes a target from a notification rule. </p> </li> </ul> <p>Targets,\
    \ by calling the following: </p> <ul> <li> <p> <a>DeleteTarget</a>, which removes\
    \ a notification rule target from a notification rule. </p> </li> <li> <p> <a>ListTargets</a>,\
    \ which lists the targets associated with a notification rule. </p> </li> </ul>\
    \ <p>Events, by calling the following: </p> <ul> <li> <p> <a>ListEventTypes</a>,\
    \ which lists the event types you can include in a notification rule. </p> </li>\
    \ </ul> <p>Tags, by calling the following: </p> <ul> <li> <p> <a>ListTagsForResource</a>,\
    \ which lists the tags already associated with a notification rule in your account.\
    \ </p> </li> <li> <p> <a>TagResource</a>, which associates a tag you provide with\
    \ a notification rule in your account. </p> </li> <li> <p> <a>UntagResource</a>,\
    \ which removes a tag from a notification rule in your account. </p> </li> </ul>\
    \ <p> For information about how to use AWS CodeStar Notifications, see the <a\
    \ href=\"https://docs.aws.amazon.com/dtconsole/latest/userguide/what-is-dtconsole.html\"\
    >Amazon Web Services Developer Tools Console User Guide</a>. </p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS CodeStar Notifications
  version: 2019-10-15
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: codestar-notifications
  x-aws-signingName: codestar-notifications
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codestar-notifications-2019-10-15.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/codestar-notifications/
servers:
- description: The AWS CodeStar Notifications multi-region endpoint
  url: "http://codestar-notifications.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS CodeStar Notifications multi-region endpoint
  url: "https://codestar-notifications.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS CodeStar Notifications endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://codestar-notifications.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS CodeStar Notifications endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://codestar-notifications.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /createNotificationRule:
    post:
      description: Creates a notification rule for a resource. The rule specifies
        the events you want notifications about and the targets (such as Chatbot topics
        or Chatbot clients configured for Slack) where you want to receive them.
      operationId: create_notification_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotificationRule_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNotificationRuleResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationException'
          description: ConfigurationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /deleteNotificationRule:
    post:
      description: Deletes a notification rule for a resource.
      operationId: delete_notification_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteNotificationRule_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteNotificationRuleResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /deleteTarget:
    post:
      description: Deletes a specified target for notifications.
      operationId: delete_target
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTarget_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTargetResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeNotificationRule:
    post:
      description: Returns information about a specified notification rule.
      operationId: describe_notification_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeNotificationRule_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeNotificationRuleResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listEventTypes:
    post:
      description: Returns information about the event types available for configuring
        notifications.
      operationId: list_event_types
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEventTypes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEventTypesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listNotificationRules:
    post:
      description: Returns a list of the notification rules for an Amazon Web Services
        account.
      operationId: list_notification_rules
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListNotificationRules_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotificationRulesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listTagsForResource:
    post:
      description: Returns a list of the tags associated with a notification rule.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listTargets:
    post:
      description: Returns a list of the notification rule targets for an Amazon Web
        Services account.
      operationId: list_targets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTargets_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /subscribe:
    post:
      description: Creates an association between a notification rule and an Chatbot
        topic or Chatbot client so that the associated target can receive notifications
        when the events described in the rule are triggered.
      operationId: subscribe
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscribe_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribeResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationException'
          description: ConfigurationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tagResource:
    post:
      description: Associates a set of provided tags with a notification rule.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /unsubscribe:
    post:
      description: Removes an association between a notification rule and an Chatbot
        topic so that subscribers to that topic stop receiving notifications when
        the events described in the rule are triggered.
      operationId: unsubscribe
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unsubscribe_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsubscribeResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /untagResource/{resourceArn}#tagKeys:
    post:
      description: Removes the association between one or more provided tags and a
        notification rule.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the notification rule from
          which to remove the tags.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "^arn:aws[^:\\s]*:codestar-notifications:[^:\\s]+:\\d{12}:notificationrule\\\
            /(.*\\S)?$"
          type: string
        style: simple
      - description: The key names of the tags to remove.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /updateNotificationRule:
    post:
      description: "<p>Updates a notification rule for a resource. You can change\
        \ the events that trigger the notification rule, the status of the rule, and\
        \ the targets that receive the notifications.</p> <note> <p>To add or remove\
        \ tags for a notification rule, you must use <a>TagResource</a> and <a>UntagResource</a>.</p>\
        \ </note>"
      operationId: update_notification_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotificationRule_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNotificationRuleResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationException'
          description: ConfigurationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateNotificationRuleResult:
      example:
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          - description: The Amazon Resource Name (ARN) of the notification rule.
          title: Arn
      title: CreateNotificationRuleResult
      type: object
    EventTypeId:
      maxLength: 200
      minLength: 1
      title: EventTypeId
      type: string
    Target:
      description: Information about the Chatbot topics or Chatbot clients associated
        with a notification rule.
      example:
        TargetType: ""
        TargetAddress: ""
      properties:
        TargetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          - description: <p>The target type. Can be an Chatbot topic or Chatbot client.</p>
              <ul> <li> <p>Chatbot topics are specified as <code>SNS</code>.</p> </li>
              <li> <p>Chatbot clients are specified as <code>AWSChatbotSlack</code>.</p>
              </li> </ul>
          title: TargetType
        TargetAddress:
          allOf:
          - $ref: '#/components/schemas/TargetAddress'
          - description: The Amazon Resource Name (ARN) of the Chatbot topic or Chatbot
              client.
          title: TargetAddress
      title: Target
      type: object
    TagValue:
      maxLength: 256
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      title: TagValue
      type: string
    ResourceAlreadyExistsException: {}
    ValidationException: {}
    LimitExceededException: {}
    ConfigurationException: {}
    ConcurrentModificationException: {}
    AccessDeniedException: {}
    DeleteNotificationRuleResult:
      example:
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          - description: The Amazon Resource Name (ARN) of the deleted notification
              rule.
          title: Arn
      title: DeleteNotificationRuleResult
      type: object
    DeleteTargetResult:
      properties: {}
      type: object
    DescribeNotificationRuleResult:
      example:
        Status: ""
        CreatedBy: ""
        CreatedTimestamp: ""
        DetailType: ""
        Resource: ""
        EventTypes: ""
        Targets: ""
        Arn: ""
        LastModifiedTimestamp: ""
        Tags: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          - description: The Amazon Resource Name (ARN) of the notification rule.
          title: Arn
        Name:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleName'
          - description: The name of the notification rule.
          title: Name
        EventTypes:
          allOf:
          - $ref: '#/components/schemas/EventTypeBatch'
          - description: A list of the event types associated with the notification
              rule.
          title: EventTypes
        Resource:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleResource'
          - description: The Amazon Resource Name (ARN) of the resource associated
              with the notification rule.
          title: Resource
        Targets:
          allOf:
          - $ref: '#/components/schemas/TargetsBatch'
          - description: A list of the Chatbot topics and Chatbot clients associated
              with the notification rule.
          title: Targets
        DetailType:
          allOf:
          - $ref: '#/components/schemas/DetailType'
          - description: The level of detail included in the notifications for this
              resource. BASIC will include only the contents of the event as it would
              appear in Amazon CloudWatch. FULL will include any supplemental information
              provided by AWS CodeStar Notifications and/or the service for the resource
              for which the notification is created.
          title: DetailType
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleCreatedBy'
          - description: The name or email alias of the person who created the notification
              rule.
          title: CreatedBy
        Status:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleStatus'
          - description: The status of the notification rule. Valid statuses are on
              (sending notifications) or off (not sending notifications).
          title: Status
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/CreatedTimestamp'
          - description: "The date and time the notification rule was created, in\
              \ timestamp format."
          title: CreatedTimestamp
        LastModifiedTimestamp:
          allOf:
          - $ref: '#/components/schemas/LastModifiedTimestamp'
          - description: "The date and time the notification rule was most recently\
              \ updated, in timestamp format."
          title: LastModifiedTimestamp
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags associated with the notification rule.
          title: Tags
      required:
      - Arn
      title: DescribeNotificationRuleResult
      type: object
    ResourceNotFoundException: {}
    ListEventTypesResult:
      example:
        NextToken: ""
        EventTypes: ""
      properties:
        EventTypes:
          allOf:
          - $ref: '#/components/schemas/EventTypeBatch'
          - description: "Information about each event, including service name, resource\
              \ type, event ID, and event name."
          title: EventTypes
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: An enumeration token that can be used in a request to return
              the next batch of the results.
          title: NextToken
      title: ListEventTypesResult
      type: object
    ListEventTypesFilter:
      description: Information about a filter to apply to the list of returned event
        types. You can filter by resource type or service name.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ListEventTypesFilterName'
          - description: The system-generated name of the filter type you want to
              filter by.
          title: Name
        Value:
          allOf:
          - $ref: '#/components/schemas/ListEventTypesFilterValue'
          - description: "The name of the resource type (for example, pipeline) or\
              \ service name (for example, CodePipeline) that you want to filter by."
          title: Value
      required:
      - Name
      - Value
      title: ListEventTypesFilter
      type: object
    InvalidNextTokenException: {}
    ListNotificationRulesResult:
      example:
        NextToken: ""
        NotificationRules: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: An enumeration token that can be used in a request to return
              the next batch of the results.
          title: NextToken
        NotificationRules:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleBatch'
          - description: "The list of notification rules for the Amazon Web Services\
              \ account, by Amazon Resource Name (ARN) and ID. "
          title: NotificationRules
      title: ListNotificationRulesResult
      type: object
    ListNotificationRulesFilter:
      description: "Information about a filter to apply to the list of returned notification\
        \ rules. You can filter by event type, owner, resource, or target."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ListNotificationRulesFilterName'
          - description: The name of the attribute you want to use to filter the returned
              notification rules.
          title: Name
        Value:
          allOf:
          - $ref: '#/components/schemas/ListNotificationRulesFilterValue'
          - description: "The value of the attribute you want to use to filter the\
              \ returned notification rules. For example, if you specify filtering\
              \ by <i>RESOURCE</i> in Name, you might specify the ARN of a pipeline\
              \ in CodePipeline for the value."
          title: Value
      required:
      - Name
      - Value
      title: ListNotificationRulesFilter
      type: object
    ListTagsForResourceResult:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags associated with the notification rule.
          title: Tags
      title: ListTagsForResourceResult
      type: object
    ListTargetsResult:
      example:
        NextToken: ""
        Targets: ""
      properties:
        Targets:
          allOf:
          - $ref: '#/components/schemas/TargetsBatch'
          - description: 'The list of notification rule targets. '
          title: Targets
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: An enumeration token that can be used in a request to return
              the next batch of results.
          title: NextToken
      title: ListTargetsResult
      type: object
    ListTargetsFilter:
      description: "Information about a filter to apply to the list of returned targets.\
        \ You can filter by target type, address, or status. For example, to filter\
        \ results to notification rules that have active Chatbot topics as targets,\
        \ you could specify a ListTargetsFilter Name as <code>TargetType</code> and\
        \ a Value of <code>SNS</code>, and a Name of <code>TARGET_STATUS</code> and\
        \ a Value of <code>ACTIVE</code>."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ListTargetsFilterName'
          - description: The name of the attribute you want to use to filter the returned
              targets.
          title: Name
        Value:
          allOf:
          - $ref: '#/components/schemas/ListTargetsFilterValue'
          - description: "The value of the attribute you want to use to filter the\
              \ returned targets. For example, if you specify <code>SNS</code> for\
              \ the Target type, you could specify an Amazon Resource Name (ARN) for\
              \ a topic as the value."
          title: Value
      required:
      - Name
      - Value
      title: ListTargetsFilter
      type: object
    SubscribeResult:
      example:
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          - description: The Amazon Resource Name (ARN) of the notification rule for
              which you have created assocations.
          title: Arn
      title: SubscribeResult
      type: object
    TargetType:
      pattern: "^[A-Za-z]+$"
      type: string
    TargetAddress:
      format: password
      maxLength: 320
      minLength: 1
      type: string
    TagResourceResult:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The list of tags associated with the resource.
          title: Tags
      title: TagResourceResult
      type: object
    UnsubscribeResult:
      example:
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          - description: The Amazon Resource Name (ARN) of the the notification rule
              from which you have removed a subscription.
          title: Arn
      required:
      - Arn
      title: UnsubscribeResult
      type: object
    UntagResourceResult:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      title: TagKey
      type: string
    UpdateNotificationRuleResult:
      properties: {}
      type: object
    ClientRequestToken:
      maxLength: 256
      minLength: 1
      pattern: "^[\\w:/-]+$"
      type: string
    NotificationRuleName:
      format: password
      maxLength: 64
      minLength: 1
      pattern: "[A-Za-z0-9\\-_ ]+$"
      type: string
    EventTypeIds:
      items:
        $ref: '#/components/schemas/EventTypeId'
      type: array
    NotificationRuleResource:
      pattern: "^arn:aws[^:\\s]*:[^:\\s]*:[^:\\s]*:[0-9]{12}:[^\\s]+$"
      type: string
    Targets:
      items:
        $ref: '#/components/schemas/Target'
      maxItems: 10
      type: array
    DetailType:
      enum:
      - BASIC
      - FULL
      title: DetailType
      type: string
    Tags:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      type: object
    NotificationRuleStatus:
      enum:
      - ENABLED
      - DISABLED
      title: NotificationRuleStatus
      type: string
    CreateNotificationRuleRequest:
      example:
        EventTypeIds: ""
        Status: ""
        ClientRequestToken: ""
        DetailType: ""
        Resource: ""
        Targets: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleName'
          - description: The name for the notification rule. Notification rule names
              must be unique in your Amazon Web Services account.
        EventTypeIds:
          allOf:
          - $ref: '#/components/schemas/EventTypeIds'
          - description: "A list of event types associated with this notification\
              \ rule. For a list of allowed events, see <a>EventTypeSummary</a>."
        Resource:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleResource'
          - description: "The Amazon Resource Name (ARN) of the resource to associate\
              \ with the notification rule. Supported resources include pipelines\
              \ in CodePipeline, repositories in CodeCommit, and build projects in\
              \ CodeBuild."
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: A list of Amazon Resource Names (ARNs) of Amazon Simple Notification
              Service topics and Chatbot clients to associate with the notification
              rule.
        DetailType:
          allOf:
          - $ref: '#/components/schemas/DetailType'
          - description: The level of detail to include in the notifications for this
              resource. <code>BASIC</code> will include only the contents of the event
              as it would appear in Amazon CloudWatch. <code>FULL</code> will include
              any supplemental information provided by AWS CodeStar Notifications
              and/or the service for the resource for which the notification is created.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "<p>A unique, client-generated idempotency token that, when\
              \ provided in a request, ensures the request cannot be repeated with\
              \ a changed parameter. If a request with the same parameters is received\
              \ and a token is included, the request returns information about the\
              \ initial request that used that token.</p> <note> <p>The Amazon Web\
              \ Services SDKs prepopulate client request tokens. If you are using\
              \ an Amazon Web Services SDK, an idempotency token is created for you.</p>\
              \ </note>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: 'A list of tags to apply to this notification rule. Key names
              cannot start with "<code>aws</code>". '
        Status:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleStatus'
          - description: "The status of the notification rule. The default value is\
              \ <code>ENABLED</code>. If the status is set to <code>DISABLED</code>,\
              \ notifications aren't sent for the notification rule."
      required:
      - DetailType
      - EventTypeIds
      - Name
      - Resource
      - Targets
      title: CreateNotificationRuleRequest
      type: object
    NotificationRuleArn:
      pattern: "^arn:aws[^:\\s]*:codestar-notifications:[^:\\s]+:\\d{12}:notificationrule\\\
        /(.*\\S)?$"
      type: string
    CreatedTimestamp:
      format: date-time
      type: string
    DeleteNotificationRuleRequest:
      example:
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          - description: The Amazon Resource Name (ARN) of the notification rule you
              want to delete.
      required:
      - Arn
      title: DeleteNotificationRuleRequest
      type: object
    ForceUnsubscribeAll:
      type: boolean
    DeleteTargetRequest:
      example:
        TargetAddress: ""
        ForceUnsubscribeAll: ""
      properties:
        TargetAddress:
          allOf:
          - $ref: '#/components/schemas/TargetAddress'
          - description: The Amazon Resource Name (ARN) of the Chatbot topic or Chatbot
              client to delete.
        ForceUnsubscribeAll:
          allOf:
          - $ref: '#/components/schemas/ForceUnsubscribeAll'
          - description: "A Boolean value that can be used to delete all associations\
              \ with this Chatbot topic. The default value is FALSE. If set to TRUE,\
              \ all associations between that target and every notification rule in\
              \ your Amazon Web Services account are deleted."
      required:
      - TargetAddress
      title: DeleteTargetRequest
      type: object
    DescribeNotificationRuleRequest:
      example:
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          - description: The Amazon Resource Name (ARN) of the notification rule.
      required:
      - Arn
      title: DescribeNotificationRuleRequest
      type: object
    EventTypeBatch:
      items:
        $ref: '#/components/schemas/EventTypeSummary'
      type: array
    TargetsBatch:
      items:
        $ref: '#/components/schemas/TargetSummary'
      type: array
    NotificationRuleCreatedBy:
      minLength: 1
      type: string
    LastModifiedTimestamp:
      format: date-time
      type: string
    EventTypeSummary:
      description: Returns information about an event that has triggered a notification
        rule.
      properties:
        EventTypeId:
          allOf:
          - $ref: '#/components/schemas/EventTypeId'
          - description: "The system-generated ID of the event. For a complete list\
              \ of event types and IDs, see <a href=\"https://docs.aws.amazon.com/codestar-notifications/latest/userguide/concepts.html#concepts-api\"\
              >Notification concepts</a> in the <i>Developer Tools Console User Guide</i>."
          title: EventTypeId
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the service for which the event applies.
          title: ServiceName
        EventTypeName:
          allOf:
          - $ref: '#/components/schemas/EventTypeName'
          - description: The name of the event.
          title: EventTypeName
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: The resource type of the event.
          title: ResourceType
      title: EventTypeSummary
      type: object
    EventTypeName:
      type: string
    ServiceName:
      type: string
    ResourceType:
      minLength: 1
      pattern: "^([a-zA-Z0-9-])+$"
      type: string
    ListEventTypesFilterName:
      enum:
      - RESOURCE_TYPE
      - SERVICE_NAME
      title: ListEventTypesFilterName
      type: string
    ListEventTypesFilterValue:
      type: string
    ListEventTypesFilters:
      items:
        $ref: '#/components/schemas/ListEventTypesFilter'
      type: array
    NextToken:
      pattern: "^[\\w/+=]+$"
      type: string
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    ListEventTypesRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/ListEventTypesFilters'
          - description: The filters to use to return information by service or resource
              type.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "An enumeration token that, when provided in a request, returns\
              \ the next batch of the results."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: A non-negative integer used to limit the number of returned
              results. The default number is 50. The maximum number of results that
              can be returned is 100.
      title: ListEventTypesRequest
      type: object
    ListNotificationRulesFilterName:
      enum:
      - EVENT_TYPE_ID
      - CREATED_BY
      - RESOURCE
      - TARGET_ADDRESS
      title: ListNotificationRulesFilterName
      type: string
    ListNotificationRulesFilterValue:
      maxLength: 2048
      type: string
    ListNotificationRulesFilters:
      items:
        $ref: '#/components/schemas/ListNotificationRulesFilter'
      type: array
    ListNotificationRulesRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/ListNotificationRulesFilters'
          - description: "<p>The filters to use to return information by service or\
              \ resource type. For valid values, see <a>ListNotificationRulesFilter</a>.</p>\
              \ <note> <p>A filter with the same name can appear more than once when\
              \ used with OR statements. Filters with different names should be applied\
              \ with AND statements.</p> </note>"
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "An enumeration token that, when provided in a request, returns\
              \ the next batch of the results."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: A non-negative integer used to limit the number of returned
              results. The maximum number of results that can be returned is 100.
      title: ListNotificationRulesRequest
      type: object
    NotificationRuleBatch:
      items:
        $ref: '#/components/schemas/NotificationRuleSummary'
      type: array
    ListTagsForResourceRequest:
      example:
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          - description: The Amazon Resource Name (ARN) for the notification rule.
      required:
      - Arn
      title: ListTagsForResourceRequest
      type: object
    ListTargetsFilterName:
      enum:
      - TARGET_TYPE
      - TARGET_ADDRESS
      - TARGET_STATUS
      title: ListTargetsFilterName
      type: string
    ListTargetsFilterValue:
      maxLength: 2048
      type: string
    ListTargetsFilters:
      items:
        $ref: '#/components/schemas/ListTargetsFilter'
      type: array
    ListTargetsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/ListTargetsFilters'
          - description: "<p>The filters to use to return information by service or\
              \ resource type. Valid filters include target type, target address,\
              \ and target status.</p> <note> <p>A filter with the same name can appear\
              \ more than once when used with OR statements. Filters with different\
              \ names should be applied with AND statements.</p> </note>"
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "An enumeration token that, when provided in a request, returns\
              \ the next batch of the results."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: A non-negative integer used to limit the number of returned
              results. The maximum number of results that can be returned is 100.
      title: ListTargetsRequest
      type: object
    NotificationRuleSummary:
      description: Information about a specified notification rule.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleId'
          - description: The unique ID of the notification rule.
          title: Id
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          - description: The Amazon Resource Name (ARN) of the notification rule.
          title: Arn
      title: NotificationRuleSummary
      type: object
    NotificationRuleId:
      maxLength: 40
      minLength: 1
      type: string
    SubscribeRequest:
      example:
        ClientRequestToken: ""
        Target:
          TargetType: ""
          TargetAddress: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          - description: The Amazon Resource Name (ARN) of the notification rule for
              which you want to create the association.
        Target:
          $ref: '#/components/schemas/Target'
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "An enumeration token that, when provided in a request, returns\
              \ the next batch of the results."
      required:
      - Arn
      - Target
      title: SubscribeRequest
      type: object
    TagKeys:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    TagResourceRequest:
      example:
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          - description: The Amazon Resource Name (ARN) of the notification rule to
              tag.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The list of tags to associate with the resource. Tag key
              names cannot start with "<code>aws</code>".
      required:
      - Arn
      - Tags
      title: TagResourceRequest
      type: object
    TargetStatus:
      enum:
      - PENDING
      - ACTIVE
      - UNREACHABLE
      - INACTIVE
      - DEACTIVATED
      title: TargetStatus
      type: string
    TargetSummary:
      description: Information about the targets specified for a notification rule.
      properties:
        TargetAddress:
          allOf:
          - $ref: '#/components/schemas/TargetAddress'
          - description: The Amazon Resource Name (ARN) of the Chatbot topic or Chatbot
              client.
          title: TargetAddress
        TargetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          - description: "<p>The type of the target (for example, <code>SNS</code>).</p>\
              \ <ul> <li> <p>Chatbot topics are specified as <code>SNS</code>.</p>\
              \ </li> <li> <p>Chatbot clients are specified as <code>AWSChatbotSlack</code>.</p>\
              \ </li> </ul>"
          title: TargetType
        TargetStatus:
          allOf:
          - $ref: '#/components/schemas/TargetStatus'
          - description: The status of the target.
          title: TargetStatus
      title: TargetSummary
      type: object
    UnsubscribeRequest:
      example:
        TargetAddress: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          - description: The Amazon Resource Name (ARN) of the notification rule.
        TargetAddress:
          allOf:
          - $ref: '#/components/schemas/TargetAddress'
          - description: The ARN of the Chatbot topic to unsubscribe from the notification
              rule.
      required:
      - Arn
      - TargetAddress
      title: UnsubscribeRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateNotificationRuleRequest:
      example:
        Status: ""
        EventTypeIds: ""
        DetailType: ""
        Targets: ""
        Arn: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          - description: The Amazon Resource Name (ARN) of the notification rule.
        Name:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleName'
          - description: The name of the notification rule.
        Status:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleStatus'
          - description: The status of the notification rule. Valid statuses include
              enabled (sending notifications) or disabled (not sending notifications).
        EventTypeIds:
          allOf:
          - $ref: '#/components/schemas/EventTypeIds'
          - description: "A list of event types associated with this notification\
              \ rule. For a complete list of event types and IDs, see <a href=\"https://docs.aws.amazon.com/codestar-notifications/latest/userguide/concepts.html#concepts-api\"\
              >Notification concepts</a> in the <i>Developer Tools Console User Guide</i>."
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: The address and type of the targets to receive notifications
              from this notification rule.
        DetailType:
          allOf:
          - $ref: '#/components/schemas/DetailType'
          - description: The level of detail to include in the notifications for this
              resource. BASIC will include only the contents of the event as it would
              appear in Amazon CloudWatch. FULL will include any supplemental information
              provided by AWS CodeStar Notifications and/or the service for the resource
              for which the notification is created.
      required:
      - Arn
      title: UpdateNotificationRuleRequest
      type: object
    CreateNotificationRule_request:
      properties:
        Name:
          description: The name for the notification rule. Notification rule names
            must be unique in your Amazon Web Services account.
          format: password
          maxLength: 64
          minLength: 1
          pattern: "[A-Za-z0-9\\-_ ]+$"
          title: Name
          type: string
        EventTypeIds:
          description: "A list of event types associated with this notification rule.\
            \ For a list of allowed events, see <a>EventTypeSummary</a>."
          items:
            $ref: '#/components/schemas/EventTypeId'
          title: EventTypeIds
          type: array
        Resource:
          description: "The Amazon Resource Name (ARN) of the resource to associate\
            \ with the notification rule. Supported resources include pipelines in\
            \ CodePipeline, repositories in CodeCommit, and build projects in CodeBuild."
          pattern: "^arn:aws[^:\\s]*:[^:\\s]*:[^:\\s]*:[0-9]{12}:[^\\s]+$"
          title: Resource
          type: string
        Targets:
          description: A list of Amazon Resource Names (ARNs) of Amazon Simple Notification
            Service topics and Chatbot clients to associate with the notification
            rule.
          items:
            $ref: '#/components/schemas/Target'
          maxItems: 10
          title: Targets
          type: array
        DetailType:
          description: The level of detail to include in the notifications for this
            resource. <code>BASIC</code> will include only the contents of the event
            as it would appear in Amazon CloudWatch. <code>FULL</code> will include
            any supplemental information provided by AWS CodeStar Notifications and/or
            the service for the resource for which the notification is created.
          enum:
          - BASIC
          - FULL
          title: DetailType
          type: string
        ClientRequestToken:
          description: "<p>A unique, client-generated idempotency token that, when\
            \ provided in a request, ensures the request cannot be repeated with a\
            \ changed parameter. If a request with the same parameters is received\
            \ and a token is included, the request returns information about the initial\
            \ request that used that token.</p> <note> <p>The Amazon Web Services\
            \ SDKs prepopulate client request tokens. If you are using an Amazon Web\
            \ Services SDK, an idempotency token is created for you.</p> </note>"
          maxLength: 256
          minLength: 1
          pattern: "^[\\w:/-]+$"
          title: ClientRequestToken
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: 'A list of tags to apply to this notification rule. Key names
            cannot start with "<code>aws</code>". '
          title: Tags
          type: object
        Status:
          description: "The status of the notification rule. The default value is\
            \ <code>ENABLED</code>. If the status is set to <code>DISABLED</code>,\
            \ notifications aren't sent for the notification rule."
          enum:
          - ENABLED
          - DISABLED
          title: Status
          type: string
      required:
      - DetailType
      - EventTypeIds
      - Name
      - Resource
      - Targets
      title: CreateNotificationRule_request
      type: object
    DeleteNotificationRule_request:
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the notification rule you
            want to delete.
          pattern: "^arn:aws[^:\\s]*:codestar-notifications:[^:\\s]+:\\d{12}:notificationrule\\\
            /(.*\\S)?$"
          title: Arn
          type: string
      required:
      - Arn
      title: DeleteNotificationRule_request
      type: object
    DeleteTarget_request:
      properties:
        TargetAddress:
          description: The Amazon Resource Name (ARN) of the Chatbot topic or Chatbot
            client to delete.
          format: password
          maxLength: 320
          minLength: 1
          title: TargetAddress
          type: string
        ForceUnsubscribeAll:
          description: "A Boolean value that can be used to delete all associations\
            \ with this Chatbot topic. The default value is FALSE. If set to TRUE,\
            \ all associations between that target and every notification rule in\
            \ your Amazon Web Services account are deleted."
          title: ForceUnsubscribeAll
          type: boolean
      required:
      - TargetAddress
      title: DeleteTarget_request
      type: object
    DescribeNotificationRule_request:
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the notification rule.
          pattern: "^arn:aws[^:\\s]*:codestar-notifications:[^:\\s]+:\\d{12}:notificationrule\\\
            /(.*\\S)?$"
          title: Arn
          type: string
      required:
      - Arn
      title: DescribeNotificationRule_request
      type: object
    ListEventTypes_request:
      properties:
        Filters:
          description: The filters to use to return information by service or resource
            type.
          items:
            $ref: '#/components/schemas/ListEventTypesFilter'
          title: Filters
          type: array
        NextToken:
          description: "An enumeration token that, when provided in a request, returns\
            \ the next batch of the results."
          pattern: "^[\\w/+=]+$"
          title: NextToken
          type: string
        MaxResults:
          description: A non-negative integer used to limit the number of returned
            results. The default number is 50. The maximum number of results that
            can be returned is 100.
          maximum: 100
          minimum: 1
          title: MaxResults
          type: integer
      title: ListEventTypes_request
      type: object
    ListNotificationRules_request:
      properties:
        Filters:
          description: "<p>The filters to use to return information by service or\
            \ resource type. For valid values, see <a>ListNotificationRulesFilter</a>.</p>\
            \ <note> <p>A filter with the same name can appear more than once when\
            \ used with OR statements. Filters with different names should be applied\
            \ with AND statements.</p> </note>"
          items:
            $ref: '#/components/schemas/ListNotificationRulesFilter'
          title: Filters
          type: array
        NextToken:
          description: "An enumeration token that, when provided in a request, returns\
            \ the next batch of the results."
          pattern: "^[\\w/+=]+$"
          title: NextToken
          type: string
        MaxResults:
          description: A non-negative integer used to limit the number of returned
            results. The maximum number of results that can be returned is 100.
          maximum: 100
          minimum: 1
          title: MaxResults
          type: integer
      title: ListNotificationRules_request
      type: object
    ListTagsForResource_request:
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) for the notification rule.
          pattern: "^arn:aws[^:\\s]*:codestar-notifications:[^:\\s]+:\\d{12}:notificationrule\\\
            /(.*\\S)?$"
          title: Arn
          type: string
      required:
      - Arn
      title: ListTagsForResource_request
      type: object
    ListTargets_request:
      properties:
        Filters:
          description: "<p>The filters to use to return information by service or\
            \ resource type. Valid filters include target type, target address, and\
            \ target status.</p> <note> <p>A filter with the same name can appear\
            \ more than once when used with OR statements. Filters with different\
            \ names should be applied with AND statements.</p> </note>"
          items:
            $ref: '#/components/schemas/ListTargetsFilter'
          title: Filters
          type: array
        NextToken:
          description: "An enumeration token that, when provided in a request, returns\
            \ the next batch of the results."
          pattern: "^[\\w/+=]+$"
          title: NextToken
          type: string
        MaxResults:
          description: A non-negative integer used to limit the number of returned
            results. The maximum number of results that can be returned is 100.
          maximum: 100
          minimum: 1
          title: MaxResults
          type: integer
      title: ListTargets_request
      type: object
    Subscribe_request_Target:
      description: Information about the Chatbot topics or Chatbot clients associated
        with a notification rule.
      properties:
        TargetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          - description: <p>The target type. Can be an Chatbot topic or Chatbot client.</p>
              <ul> <li> <p>Chatbot topics are specified as <code>SNS</code>.</p> </li>
              <li> <p>Chatbot clients are specified as <code>AWSChatbotSlack</code>.</p>
              </li> </ul>
          title: TargetType
        TargetAddress:
          allOf:
          - $ref: '#/components/schemas/TargetAddress'
          - description: The Amazon Resource Name (ARN) of the Chatbot topic or Chatbot
              client.
          title: TargetAddress
      title: Subscribe_request_Target
      type: object
    Subscribe_request:
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the notification rule for
            which you want to create the association.
          pattern: "^arn:aws[^:\\s]*:codestar-notifications:[^:\\s]+:\\d{12}:notificationrule\\\
            /(.*\\S)?$"
          title: Arn
          type: string
        Target:
          $ref: '#/components/schemas/Subscribe_request_Target'
        ClientRequestToken:
          description: "An enumeration token that, when provided in a request, returns\
            \ the next batch of the results."
          maxLength: 256
          minLength: 1
          pattern: "^[\\w:/-]+$"
          title: ClientRequestToken
          type: string
      required:
      - Arn
      - Target
      title: Subscribe_request
      type: object
    TagResource_request:
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the notification rule to
            tag.
          pattern: "^arn:aws[^:\\s]*:codestar-notifications:[^:\\s]+:\\d{12}:notificationrule\\\
            /(.*\\S)?$"
          title: Arn
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The list of tags to associate with the resource. Tag key names
            cannot start with "<code>aws</code>".
          title: Tags
          type: object
      required:
      - Arn
      - Tags
      title: TagResource_request
      type: object
    Unsubscribe_request:
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the notification rule.
          pattern: "^arn:aws[^:\\s]*:codestar-notifications:[^:\\s]+:\\d{12}:notificationrule\\\
            /(.*\\S)?$"
          title: Arn
          type: string
        TargetAddress:
          description: The ARN of the Chatbot topic to unsubscribe from the notification
            rule.
          format: password
          maxLength: 320
          minLength: 1
          title: TargetAddress
          type: string
      required:
      - Arn
      - TargetAddress
      title: Unsubscribe_request
      type: object
    UpdateNotificationRule_request:
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the notification rule.
          pattern: "^arn:aws[^:\\s]*:codestar-notifications:[^:\\s]+:\\d{12}:notificationrule\\\
            /(.*\\S)?$"
          title: Arn
          type: string
        Name:
          description: The name of the notification rule.
          format: password
          maxLength: 64
          minLength: 1
          pattern: "[A-Za-z0-9\\-_ ]+$"
          title: Name
          type: string
        Status:
          description: The status of the notification rule. Valid statuses include
            enabled (sending notifications) or disabled (not sending notifications).
          enum:
          - ENABLED
          - DISABLED
          title: Status
          type: string
        EventTypeIds:
          description: "A list of event types associated with this notification rule.\
            \ For a complete list of event types and IDs, see <a href=\"https://docs.aws.amazon.com/codestar-notifications/latest/userguide/concepts.html#concepts-api\"\
            >Notification concepts</a> in the <i>Developer Tools Console User Guide</i>."
          items:
            $ref: '#/components/schemas/EventTypeId'
          title: EventTypeIds
          type: array
        Targets:
          description: The address and type of the targets to receive notifications
            from this notification rule.
          items:
            $ref: '#/components/schemas/Target'
          maxItems: 10
          title: Targets
          type: array
        DetailType:
          description: The level of detail to include in the notifications for this
            resource. BASIC will include only the contents of the event as it would
            appear in Amazon CloudWatch. FULL will include any supplemental information
            provided by AWS CodeStar Notifications and/or the service for the resource
            for which the notification is created.
          enum:
          - BASIC
          - FULL
          title: DetailType
          type: string
      required:
      - Arn
      title: UpdateNotificationRule_request
      type: object
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
