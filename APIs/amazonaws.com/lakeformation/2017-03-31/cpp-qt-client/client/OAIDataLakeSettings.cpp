/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataLakeSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataLakeSettings::OAIDataLakeSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataLakeSettings::OAIDataLakeSettings() {
    this->initializeModel();
}

OAIDataLakeSettings::~OAIDataLakeSettings() {}

void OAIDataLakeSettings::initializeModel() {

    m_data_lake_admins_isSet = false;
    m_data_lake_admins_isValid = false;

    m_read_only_admins_isSet = false;
    m_read_only_admins_isValid = false;

    m_create_database_default_permissions_isSet = false;
    m_create_database_default_permissions_isValid = false;

    m_create_table_default_permissions_isSet = false;
    m_create_table_default_permissions_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_trusted_resource_owners_isSet = false;
    m_trusted_resource_owners_isValid = false;

    m_allow_external_data_filtering_isSet = false;
    m_allow_external_data_filtering_isValid = false;

    m_allow_full_table_external_data_access_isSet = false;
    m_allow_full_table_external_data_access_isValid = false;

    m_external_data_filtering_allow_list_isSet = false;
    m_external_data_filtering_allow_list_isValid = false;

    m_authorized_session_tag_value_list_isSet = false;
    m_authorized_session_tag_value_list_isValid = false;
}

void OAIDataLakeSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataLakeSettings::fromJsonObject(QJsonObject json) {

    m_data_lake_admins_isValid = ::OpenAPI::fromJsonValue(m_data_lake_admins, json[QString("DataLakeAdmins")]);
    m_data_lake_admins_isSet = !json[QString("DataLakeAdmins")].isNull() && m_data_lake_admins_isValid;

    m_read_only_admins_isValid = ::OpenAPI::fromJsonValue(m_read_only_admins, json[QString("ReadOnlyAdmins")]);
    m_read_only_admins_isSet = !json[QString("ReadOnlyAdmins")].isNull() && m_read_only_admins_isValid;

    m_create_database_default_permissions_isValid = ::OpenAPI::fromJsonValue(m_create_database_default_permissions, json[QString("CreateDatabaseDefaultPermissions")]);
    m_create_database_default_permissions_isSet = !json[QString("CreateDatabaseDefaultPermissions")].isNull() && m_create_database_default_permissions_isValid;

    m_create_table_default_permissions_isValid = ::OpenAPI::fromJsonValue(m_create_table_default_permissions, json[QString("CreateTableDefaultPermissions")]);
    m_create_table_default_permissions_isSet = !json[QString("CreateTableDefaultPermissions")].isNull() && m_create_table_default_permissions_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("Parameters")]);
    m_parameters_isSet = !json[QString("Parameters")].isNull() && m_parameters_isValid;

    m_trusted_resource_owners_isValid = ::OpenAPI::fromJsonValue(m_trusted_resource_owners, json[QString("TrustedResourceOwners")]);
    m_trusted_resource_owners_isSet = !json[QString("TrustedResourceOwners")].isNull() && m_trusted_resource_owners_isValid;

    m_allow_external_data_filtering_isValid = ::OpenAPI::fromJsonValue(m_allow_external_data_filtering, json[QString("AllowExternalDataFiltering")]);
    m_allow_external_data_filtering_isSet = !json[QString("AllowExternalDataFiltering")].isNull() && m_allow_external_data_filtering_isValid;

    m_allow_full_table_external_data_access_isValid = ::OpenAPI::fromJsonValue(m_allow_full_table_external_data_access, json[QString("AllowFullTableExternalDataAccess")]);
    m_allow_full_table_external_data_access_isSet = !json[QString("AllowFullTableExternalDataAccess")].isNull() && m_allow_full_table_external_data_access_isValid;

    m_external_data_filtering_allow_list_isValid = ::OpenAPI::fromJsonValue(m_external_data_filtering_allow_list, json[QString("ExternalDataFilteringAllowList")]);
    m_external_data_filtering_allow_list_isSet = !json[QString("ExternalDataFilteringAllowList")].isNull() && m_external_data_filtering_allow_list_isValid;

    m_authorized_session_tag_value_list_isValid = ::OpenAPI::fromJsonValue(m_authorized_session_tag_value_list, json[QString("AuthorizedSessionTagValueList")]);
    m_authorized_session_tag_value_list_isSet = !json[QString("AuthorizedSessionTagValueList")].isNull() && m_authorized_session_tag_value_list_isValid;
}

QString OAIDataLakeSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataLakeSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_data_lake_admins.isSet()) {
        obj.insert(QString("DataLakeAdmins"), ::OpenAPI::toJsonValue(m_data_lake_admins));
    }
    if (m_read_only_admins.isSet()) {
        obj.insert(QString("ReadOnlyAdmins"), ::OpenAPI::toJsonValue(m_read_only_admins));
    }
    if (m_create_database_default_permissions.isSet()) {
        obj.insert(QString("CreateDatabaseDefaultPermissions"), ::OpenAPI::toJsonValue(m_create_database_default_permissions));
    }
    if (m_create_table_default_permissions.isSet()) {
        obj.insert(QString("CreateTableDefaultPermissions"), ::OpenAPI::toJsonValue(m_create_table_default_permissions));
    }
    if (m_parameters.isSet()) {
        obj.insert(QString("Parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_trusted_resource_owners.isSet()) {
        obj.insert(QString("TrustedResourceOwners"), ::OpenAPI::toJsonValue(m_trusted_resource_owners));
    }
    if (m_allow_external_data_filtering_isSet) {
        obj.insert(QString("AllowExternalDataFiltering"), ::OpenAPI::toJsonValue(m_allow_external_data_filtering));
    }
    if (m_allow_full_table_external_data_access_isSet) {
        obj.insert(QString("AllowFullTableExternalDataAccess"), ::OpenAPI::toJsonValue(m_allow_full_table_external_data_access));
    }
    if (m_external_data_filtering_allow_list.isSet()) {
        obj.insert(QString("ExternalDataFilteringAllowList"), ::OpenAPI::toJsonValue(m_external_data_filtering_allow_list));
    }
    if (m_authorized_session_tag_value_list.isSet()) {
        obj.insert(QString("AuthorizedSessionTagValueList"), ::OpenAPI::toJsonValue(m_authorized_session_tag_value_list));
    }
    return obj;
}

QList OAIDataLakeSettings::getDataLakeAdmins() const {
    return m_data_lake_admins;
}
void OAIDataLakeSettings::setDataLakeAdmins(const QList &data_lake_admins) {
    m_data_lake_admins = data_lake_admins;
    m_data_lake_admins_isSet = true;
}

bool OAIDataLakeSettings::is_data_lake_admins_Set() const{
    return m_data_lake_admins_isSet;
}

bool OAIDataLakeSettings::is_data_lake_admins_Valid() const{
    return m_data_lake_admins_isValid;
}

QList OAIDataLakeSettings::getReadOnlyAdmins() const {
    return m_read_only_admins;
}
void OAIDataLakeSettings::setReadOnlyAdmins(const QList &read_only_admins) {
    m_read_only_admins = read_only_admins;
    m_read_only_admins_isSet = true;
}

bool OAIDataLakeSettings::is_read_only_admins_Set() const{
    return m_read_only_admins_isSet;
}

bool OAIDataLakeSettings::is_read_only_admins_Valid() const{
    return m_read_only_admins_isValid;
}

QList OAIDataLakeSettings::getCreateDatabaseDefaultPermissions() const {
    return m_create_database_default_permissions;
}
void OAIDataLakeSettings::setCreateDatabaseDefaultPermissions(const QList &create_database_default_permissions) {
    m_create_database_default_permissions = create_database_default_permissions;
    m_create_database_default_permissions_isSet = true;
}

bool OAIDataLakeSettings::is_create_database_default_permissions_Set() const{
    return m_create_database_default_permissions_isSet;
}

bool OAIDataLakeSettings::is_create_database_default_permissions_Valid() const{
    return m_create_database_default_permissions_isValid;
}

QList OAIDataLakeSettings::getCreateTableDefaultPermissions() const {
    return m_create_table_default_permissions;
}
void OAIDataLakeSettings::setCreateTableDefaultPermissions(const QList &create_table_default_permissions) {
    m_create_table_default_permissions = create_table_default_permissions;
    m_create_table_default_permissions_isSet = true;
}

bool OAIDataLakeSettings::is_create_table_default_permissions_Set() const{
    return m_create_table_default_permissions_isSet;
}

bool OAIDataLakeSettings::is_create_table_default_permissions_Valid() const{
    return m_create_table_default_permissions_isValid;
}

QMap OAIDataLakeSettings::getParameters() const {
    return m_parameters;
}
void OAIDataLakeSettings::setParameters(const QMap &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIDataLakeSettings::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIDataLakeSettings::is_parameters_Valid() const{
    return m_parameters_isValid;
}

QList OAIDataLakeSettings::getTrustedResourceOwners() const {
    return m_trusted_resource_owners;
}
void OAIDataLakeSettings::setTrustedResourceOwners(const QList &trusted_resource_owners) {
    m_trusted_resource_owners = trusted_resource_owners;
    m_trusted_resource_owners_isSet = true;
}

bool OAIDataLakeSettings::is_trusted_resource_owners_Set() const{
    return m_trusted_resource_owners_isSet;
}

bool OAIDataLakeSettings::is_trusted_resource_owners_Valid() const{
    return m_trusted_resource_owners_isValid;
}

bool OAIDataLakeSettings::getAllowExternalDataFiltering() const {
    return m_allow_external_data_filtering;
}
void OAIDataLakeSettings::setAllowExternalDataFiltering(const bool &allow_external_data_filtering) {
    m_allow_external_data_filtering = allow_external_data_filtering;
    m_allow_external_data_filtering_isSet = true;
}

bool OAIDataLakeSettings::is_allow_external_data_filtering_Set() const{
    return m_allow_external_data_filtering_isSet;
}

bool OAIDataLakeSettings::is_allow_external_data_filtering_Valid() const{
    return m_allow_external_data_filtering_isValid;
}

bool OAIDataLakeSettings::getAllowFullTableExternalDataAccess() const {
    return m_allow_full_table_external_data_access;
}
void OAIDataLakeSettings::setAllowFullTableExternalDataAccess(const bool &allow_full_table_external_data_access) {
    m_allow_full_table_external_data_access = allow_full_table_external_data_access;
    m_allow_full_table_external_data_access_isSet = true;
}

bool OAIDataLakeSettings::is_allow_full_table_external_data_access_Set() const{
    return m_allow_full_table_external_data_access_isSet;
}

bool OAIDataLakeSettings::is_allow_full_table_external_data_access_Valid() const{
    return m_allow_full_table_external_data_access_isValid;
}

QList OAIDataLakeSettings::getExternalDataFilteringAllowList() const {
    return m_external_data_filtering_allow_list;
}
void OAIDataLakeSettings::setExternalDataFilteringAllowList(const QList &external_data_filtering_allow_list) {
    m_external_data_filtering_allow_list = external_data_filtering_allow_list;
    m_external_data_filtering_allow_list_isSet = true;
}

bool OAIDataLakeSettings::is_external_data_filtering_allow_list_Set() const{
    return m_external_data_filtering_allow_list_isSet;
}

bool OAIDataLakeSettings::is_external_data_filtering_allow_list_Valid() const{
    return m_external_data_filtering_allow_list_isValid;
}

QList OAIDataLakeSettings::getAuthorizedSessionTagValueList() const {
    return m_authorized_session_tag_value_list;
}
void OAIDataLakeSettings::setAuthorizedSessionTagValueList(const QList &authorized_session_tag_value_list) {
    m_authorized_session_tag_value_list = authorized_session_tag_value_list;
    m_authorized_session_tag_value_list_isSet = true;
}

bool OAIDataLakeSettings::is_authorized_session_tag_value_list_Set() const{
    return m_authorized_session_tag_value_list_isSet;
}

bool OAIDataLakeSettings::is_authorized_session_tag_value_list_Valid() const{
    return m_authorized_session_tag_value_list_isValid;
}

bool OAIDataLakeSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_lake_admins.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_read_only_admins.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_database_default_permissions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_table_default_permissions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_trusted_resource_owners.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_allow_external_data_filtering_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allow_full_table_external_data_access_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_data_filtering_allow_list.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_authorized_session_tag_value_list.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataLakeSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
