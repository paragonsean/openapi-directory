/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetTableObjectsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetTableObjectsResponse::OAIGetTableObjectsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetTableObjectsResponse::OAIGetTableObjectsResponse() {
    this->initializeModel();
}

OAIGetTableObjectsResponse::~OAIGetTableObjectsResponse() {}

void OAIGetTableObjectsResponse::initializeModel() {

    m_objects_isSet = false;
    m_objects_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIGetTableObjectsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetTableObjectsResponse::fromJsonObject(QJsonObject json) {

    m_objects_isValid = ::OpenAPI::fromJsonValue(m_objects, json[QString("Objects")]);
    m_objects_isSet = !json[QString("Objects")].isNull() && m_objects_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIGetTableObjectsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetTableObjectsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_objects.isSet()) {
        obj.insert(QString("Objects"), ::OpenAPI::toJsonValue(m_objects));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIGetTableObjectsResponse::getObjects() const {
    return m_objects;
}
void OAIGetTableObjectsResponse::setObjects(const QList &objects) {
    m_objects = objects;
    m_objects_isSet = true;
}

bool OAIGetTableObjectsResponse::is_objects_Set() const{
    return m_objects_isSet;
}

bool OAIGetTableObjectsResponse::is_objects_Valid() const{
    return m_objects_isValid;
}

QString OAIGetTableObjectsResponse::getNextToken() const {
    return m_next_token;
}
void OAIGetTableObjectsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIGetTableObjectsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIGetTableObjectsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIGetTableObjectsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_objects.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetTableObjectsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
