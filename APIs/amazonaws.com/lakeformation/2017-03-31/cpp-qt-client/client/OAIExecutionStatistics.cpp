/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExecutionStatistics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExecutionStatistics::OAIExecutionStatistics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExecutionStatistics::OAIExecutionStatistics() {
    this->initializeModel();
}

OAIExecutionStatistics::~OAIExecutionStatistics() {}

void OAIExecutionStatistics::initializeModel() {

    m_average_execution_time_millis_isSet = false;
    m_average_execution_time_millis_isValid = false;

    m_data_scanned_bytes_isSet = false;
    m_data_scanned_bytes_isValid = false;

    m_work_units_executed_count_isSet = false;
    m_work_units_executed_count_isValid = false;
}

void OAIExecutionStatistics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExecutionStatistics::fromJsonObject(QJsonObject json) {

    m_average_execution_time_millis_isValid = ::OpenAPI::fromJsonValue(m_average_execution_time_millis, json[QString("AverageExecutionTimeMillis")]);
    m_average_execution_time_millis_isSet = !json[QString("AverageExecutionTimeMillis")].isNull() && m_average_execution_time_millis_isValid;

    m_data_scanned_bytes_isValid = ::OpenAPI::fromJsonValue(m_data_scanned_bytes, json[QString("DataScannedBytes")]);
    m_data_scanned_bytes_isSet = !json[QString("DataScannedBytes")].isNull() && m_data_scanned_bytes_isValid;

    m_work_units_executed_count_isValid = ::OpenAPI::fromJsonValue(m_work_units_executed_count, json[QString("WorkUnitsExecutedCount")]);
    m_work_units_executed_count_isSet = !json[QString("WorkUnitsExecutedCount")].isNull() && m_work_units_executed_count_isValid;
}

QString OAIExecutionStatistics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExecutionStatistics::asJsonObject() const {
    QJsonObject obj;
    if (m_average_execution_time_millis_isSet) {
        obj.insert(QString("AverageExecutionTimeMillis"), ::OpenAPI::toJsonValue(m_average_execution_time_millis));
    }
    if (m_data_scanned_bytes_isSet) {
        obj.insert(QString("DataScannedBytes"), ::OpenAPI::toJsonValue(m_data_scanned_bytes));
    }
    if (m_work_units_executed_count_isSet) {
        obj.insert(QString("WorkUnitsExecutedCount"), ::OpenAPI::toJsonValue(m_work_units_executed_count));
    }
    return obj;
}

qint32 OAIExecutionStatistics::getAverageExecutionTimeMillis() const {
    return m_average_execution_time_millis;
}
void OAIExecutionStatistics::setAverageExecutionTimeMillis(const qint32 &average_execution_time_millis) {
    m_average_execution_time_millis = average_execution_time_millis;
    m_average_execution_time_millis_isSet = true;
}

bool OAIExecutionStatistics::is_average_execution_time_millis_Set() const{
    return m_average_execution_time_millis_isSet;
}

bool OAIExecutionStatistics::is_average_execution_time_millis_Valid() const{
    return m_average_execution_time_millis_isValid;
}

qint32 OAIExecutionStatistics::getDataScannedBytes() const {
    return m_data_scanned_bytes;
}
void OAIExecutionStatistics::setDataScannedBytes(const qint32 &data_scanned_bytes) {
    m_data_scanned_bytes = data_scanned_bytes;
    m_data_scanned_bytes_isSet = true;
}

bool OAIExecutionStatistics::is_data_scanned_bytes_Set() const{
    return m_data_scanned_bytes_isSet;
}

bool OAIExecutionStatistics::is_data_scanned_bytes_Valid() const{
    return m_data_scanned_bytes_isValid;
}

qint32 OAIExecutionStatistics::getWorkUnitsExecutedCount() const {
    return m_work_units_executed_count;
}
void OAIExecutionStatistics::setWorkUnitsExecutedCount(const qint32 &work_units_executed_count) {
    m_work_units_executed_count = work_units_executed_count;
    m_work_units_executed_count_isSet = true;
}

bool OAIExecutionStatistics::is_work_units_executed_count_Set() const{
    return m_work_units_executed_count_isSet;
}

bool OAIExecutionStatistics::is_work_units_executed_count_Valid() const{
    return m_work_units_executed_count_isValid;
}

bool OAIExecutionStatistics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_average_execution_time_millis_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_scanned_bytes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_work_units_executed_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExecutionStatistics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
