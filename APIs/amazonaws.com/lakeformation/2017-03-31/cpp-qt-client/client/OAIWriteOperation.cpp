/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWriteOperation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWriteOperation::OAIWriteOperation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWriteOperation::OAIWriteOperation() {
    this->initializeModel();
}

OAIWriteOperation::~OAIWriteOperation() {}

void OAIWriteOperation::initializeModel() {

    m_add_object_isSet = false;
    m_add_object_isValid = false;

    m_delete_object_isSet = false;
    m_delete_object_isValid = false;
}

void OAIWriteOperation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWriteOperation::fromJsonObject(QJsonObject json) {

    m_add_object_isValid = ::OpenAPI::fromJsonValue(m_add_object, json[QString("AddObject")]);
    m_add_object_isSet = !json[QString("AddObject")].isNull() && m_add_object_isValid;

    m_delete_object_isValid = ::OpenAPI::fromJsonValue(m_delete_object, json[QString("DeleteObject")]);
    m_delete_object_isSet = !json[QString("DeleteObject")].isNull() && m_delete_object_isValid;
}

QString OAIWriteOperation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWriteOperation::asJsonObject() const {
    QJsonObject obj;
    if (m_add_object.isSet()) {
        obj.insert(QString("AddObject"), ::OpenAPI::toJsonValue(m_add_object));
    }
    if (m_delete_object.isSet()) {
        obj.insert(QString("DeleteObject"), ::OpenAPI::toJsonValue(m_delete_object));
    }
    return obj;
}

OAIWriteOperation_AddObject OAIWriteOperation::getAddObject() const {
    return m_add_object;
}
void OAIWriteOperation::setAddObject(const OAIWriteOperation_AddObject &add_object) {
    m_add_object = add_object;
    m_add_object_isSet = true;
}

bool OAIWriteOperation::is_add_object_Set() const{
    return m_add_object_isSet;
}

bool OAIWriteOperation::is_add_object_Valid() const{
    return m_add_object_isValid;
}

OAIWriteOperation_DeleteObject OAIWriteOperation::getDeleteObject() const {
    return m_delete_object;
}
void OAIWriteOperation::setDeleteObject(const OAIWriteOperation_DeleteObject &delete_object) {
    m_delete_object = delete_object;
    m_delete_object_isSet = true;
}

bool OAIWriteOperation::is_delete_object_Set() const{
    return m_delete_object_isSet;
}

bool OAIWriteOperation::is_delete_object_Valid() const{
    return m_delete_object_isValid;
}

bool OAIWriteOperation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_add_object.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_delete_object.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWriteOperation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
