/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataLakeSettings.h
 *
 * A structure representing a list of Lake Formation principals designated as data lake administrators and lists of principal permission entries for default create database and default create table permissions.
 */

#ifndef OAIDataLakeSettings_H
#define OAIDataLakeSettings_H

#include <QJsonObject>

#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDataLakeSettings : public OAIObject {
public:
    OAIDataLakeSettings();
    OAIDataLakeSettings(QString json);
    ~OAIDataLakeSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getDataLakeAdmins() const;
    void setDataLakeAdmins(const QList &data_lake_admins);
    bool is_data_lake_admins_Set() const;
    bool is_data_lake_admins_Valid() const;

    QList getReadOnlyAdmins() const;
    void setReadOnlyAdmins(const QList &read_only_admins);
    bool is_read_only_admins_Set() const;
    bool is_read_only_admins_Valid() const;

    QList getCreateDatabaseDefaultPermissions() const;
    void setCreateDatabaseDefaultPermissions(const QList &create_database_default_permissions);
    bool is_create_database_default_permissions_Set() const;
    bool is_create_database_default_permissions_Valid() const;

    QList getCreateTableDefaultPermissions() const;
    void setCreateTableDefaultPermissions(const QList &create_table_default_permissions);
    bool is_create_table_default_permissions_Set() const;
    bool is_create_table_default_permissions_Valid() const;

    QMap getParameters() const;
    void setParameters(const QMap &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QList getTrustedResourceOwners() const;
    void setTrustedResourceOwners(const QList &trusted_resource_owners);
    bool is_trusted_resource_owners_Set() const;
    bool is_trusted_resource_owners_Valid() const;

    bool getAllowExternalDataFiltering() const;
    void setAllowExternalDataFiltering(const bool &allow_external_data_filtering);
    bool is_allow_external_data_filtering_Set() const;
    bool is_allow_external_data_filtering_Valid() const;

    bool getAllowFullTableExternalDataAccess() const;
    void setAllowFullTableExternalDataAccess(const bool &allow_full_table_external_data_access);
    bool is_allow_full_table_external_data_access_Set() const;
    bool is_allow_full_table_external_data_access_Valid() const;

    QList getExternalDataFilteringAllowList() const;
    void setExternalDataFilteringAllowList(const QList &external_data_filtering_allow_list);
    bool is_external_data_filtering_allow_list_Set() const;
    bool is_external_data_filtering_allow_list_Valid() const;

    QList getAuthorizedSessionTagValueList() const;
    void setAuthorizedSessionTagValueList(const QList &authorized_session_tag_value_list);
    bool is_authorized_session_tag_value_list_Set() const;
    bool is_authorized_session_tag_value_list_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_data_lake_admins;
    bool m_data_lake_admins_isSet;
    bool m_data_lake_admins_isValid;

    QList m_read_only_admins;
    bool m_read_only_admins_isSet;
    bool m_read_only_admins_isValid;

    QList m_create_database_default_permissions;
    bool m_create_database_default_permissions_isSet;
    bool m_create_database_default_permissions_isValid;

    QList m_create_table_default_permissions;
    bool m_create_table_default_permissions_isSet;
    bool m_create_table_default_permissions_isValid;

    QMap m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QList m_trusted_resource_owners;
    bool m_trusted_resource_owners_isSet;
    bool m_trusted_resource_owners_isValid;

    bool m_allow_external_data_filtering;
    bool m_allow_external_data_filtering_isSet;
    bool m_allow_external_data_filtering_isValid;

    bool m_allow_full_table_external_data_access;
    bool m_allow_full_table_external_data_access_isSet;
    bool m_allow_full_table_external_data_access_isValid;

    QList m_external_data_filtering_allow_list;
    bool m_external_data_filtering_allow_list_isSet;
    bool m_external_data_filtering_allow_list_isValid;

    QList m_authorized_session_tag_value_list;
    bool m_authorized_session_tag_value_list_isSet;
    bool m_authorized_session_tag_value_list_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataLakeSettings)

#endif // OAIDataLakeSettings_H
