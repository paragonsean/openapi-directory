/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartQueryPlanningRequest_QueryPlanningContext.h
 *
 * 
 */

#ifndef OAIStartQueryPlanningRequest_QueryPlanningContext_H
#define OAIStartQueryPlanningRequest_QueryPlanningContext_H

#include <QJsonObject>

#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStartQueryPlanningRequest_QueryPlanningContext : public OAIObject {
public:
    OAIStartQueryPlanningRequest_QueryPlanningContext();
    OAIStartQueryPlanningRequest_QueryPlanningContext(QString json);
    ~OAIStartQueryPlanningRequest_QueryPlanningContext() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCatalogId() const;
    void setCatalogId(const QString &catalog_id);
    bool is_catalog_id_Set() const;
    bool is_catalog_id_Valid() const;

    QString getDatabaseName() const;
    void setDatabaseName(const QString &database_name);
    bool is_database_name_Set() const;
    bool is_database_name_Valid() const;

    QDateTime getQueryAsOfTime() const;
    void setQueryAsOfTime(const QDateTime &query_as_of_time);
    bool is_query_as_of_time_Set() const;
    bool is_query_as_of_time_Valid() const;

    QMap getQueryParameters() const;
    void setQueryParameters(const QMap &query_parameters);
    bool is_query_parameters_Set() const;
    bool is_query_parameters_Valid() const;

    QString getTransactionId() const;
    void setTransactionId(const QString &transaction_id);
    bool is_transaction_id_Set() const;
    bool is_transaction_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_catalog_id;
    bool m_catalog_id_isSet;
    bool m_catalog_id_isValid;

    QString m_database_name;
    bool m_database_name_isSet;
    bool m_database_name_isValid;

    QDateTime m_query_as_of_time;
    bool m_query_as_of_time_isSet;
    bool m_query_as_of_time_isValid;

    QMap m_query_parameters;
    bool m_query_parameters_isSet;
    bool m_query_parameters_isValid;

    QString m_transaction_id;
    bool m_transaction_id_isSet;
    bool m_transaction_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartQueryPlanningRequest_QueryPlanningContext)

#endif // OAIStartQueryPlanningRequest_QueryPlanningContext_H
