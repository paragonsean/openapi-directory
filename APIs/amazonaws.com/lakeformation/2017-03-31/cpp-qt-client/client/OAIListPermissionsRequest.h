/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListPermissionsRequest.h
 *
 * 
 */

#ifndef OAIListPermissionsRequest_H
#define OAIListPermissionsRequest_H

#include <QJsonObject>

#include "OAIDataLakeResourceType.h"
#include "OAIListPermissionsRequest_Principal.h"
#include "OAIListPermissionsRequest_Resource.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIListPermissionsRequest_Principal;
class OAIListPermissionsRequest_Resource;

class OAIListPermissionsRequest : public OAIObject {
public:
    OAIListPermissionsRequest();
    OAIListPermissionsRequest(QString json);
    ~OAIListPermissionsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCatalogId() const;
    void setCatalogId(const QString &catalog_id);
    bool is_catalog_id_Set() const;
    bool is_catalog_id_Valid() const;

    OAIListPermissionsRequest_Principal getPrincipal() const;
    void setPrincipal(const OAIListPermissionsRequest_Principal &principal);
    bool is_principal_Set() const;
    bool is_principal_Valid() const;

    OAIDataLakeResourceType getResourceType() const;
    void setResourceType(const OAIDataLakeResourceType &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    OAIListPermissionsRequest_Resource getResource() const;
    void setResource(const OAIListPermissionsRequest_Resource &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getIncludeRelated() const;
    void setIncludeRelated(const QString &include_related);
    bool is_include_related_Set() const;
    bool is_include_related_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_catalog_id;
    bool m_catalog_id_isSet;
    bool m_catalog_id_isValid;

    OAIListPermissionsRequest_Principal m_principal;
    bool m_principal_isSet;
    bool m_principal_isValid;

    OAIDataLakeResourceType m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    OAIListPermissionsRequest_Resource m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_include_related;
    bool m_include_related_isSet;
    bool m_include_related_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListPermissionsRequest)

#endif // OAIListPermissionsRequest_H
