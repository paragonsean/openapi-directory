/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITableWithColumnsResource.h
 *
 * &lt;p&gt;A structure for a table with columns object. This object is only used when granting a SELECT permission.&lt;/p&gt; &lt;p&gt;This object must take a value for at least one of &lt;code&gt;ColumnsNames&lt;/code&gt;, &lt;code&gt;ColumnsIndexes&lt;/code&gt;, or &lt;code&gt;ColumnsWildcard&lt;/code&gt;.&lt;/p&gt;
 */

#ifndef OAITableWithColumnsResource_H
#define OAITableWithColumnsResource_H

#include <QJsonObject>

#include "OAITableWithColumnsResource_ColumnWildcard.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITableWithColumnsResource_ColumnWildcard;

class OAITableWithColumnsResource : public OAIObject {
public:
    OAITableWithColumnsResource();
    OAITableWithColumnsResource(QString json);
    ~OAITableWithColumnsResource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCatalogId() const;
    void setCatalogId(const QString &catalog_id);
    bool is_catalog_id_Set() const;
    bool is_catalog_id_Valid() const;

    QString getDatabaseName() const;
    void setDatabaseName(const QString &database_name);
    bool is_database_name_Set() const;
    bool is_database_name_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList getColumnNames() const;
    void setColumnNames(const QList &column_names);
    bool is_column_names_Set() const;
    bool is_column_names_Valid() const;

    OAITableWithColumnsResource_ColumnWildcard getColumnWildcard() const;
    void setColumnWildcard(const OAITableWithColumnsResource_ColumnWildcard &column_wildcard);
    bool is_column_wildcard_Set() const;
    bool is_column_wildcard_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_catalog_id;
    bool m_catalog_id_isSet;
    bool m_catalog_id_isValid;

    QString m_database_name;
    bool m_database_name_isSet;
    bool m_database_name_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList m_column_names;
    bool m_column_names_isSet;
    bool m_column_names_isValid;

    OAITableWithColumnsResource_ColumnWildcard m_column_wildcard;
    bool m_column_wildcard_isSet;
    bool m_column_wildcard_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITableWithColumnsResource)

#endif // OAITableWithColumnsResource_H
