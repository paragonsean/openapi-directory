/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommitTransactionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommitTransactionResponse::OAICommitTransactionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommitTransactionResponse::OAICommitTransactionResponse() {
    this->initializeModel();
}

OAICommitTransactionResponse::~OAICommitTransactionResponse() {}

void OAICommitTransactionResponse::initializeModel() {

    m_transaction_status_isSet = false;
    m_transaction_status_isValid = false;
}

void OAICommitTransactionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommitTransactionResponse::fromJsonObject(QJsonObject json) {

    m_transaction_status_isValid = ::OpenAPI::fromJsonValue(m_transaction_status, json[QString("TransactionStatus")]);
    m_transaction_status_isSet = !json[QString("TransactionStatus")].isNull() && m_transaction_status_isValid;
}

QString OAICommitTransactionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommitTransactionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_transaction_status.isSet()) {
        obj.insert(QString("TransactionStatus"), ::OpenAPI::toJsonValue(m_transaction_status));
    }
    return obj;
}

OAITransactionStatus OAICommitTransactionResponse::getTransactionStatus() const {
    return m_transaction_status;
}
void OAICommitTransactionResponse::setTransactionStatus(const OAITransactionStatus &transaction_status) {
    m_transaction_status = transaction_status;
    m_transaction_status_isSet = true;
}

bool OAICommitTransactionResponse::is_transaction_status_Set() const{
    return m_transaction_status_isSet;
}

bool OAICommitTransactionResponse::is_transaction_status_Valid() const{
    return m_transaction_status_isValid;
}

bool OAICommitTransactionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_transaction_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommitTransactionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
