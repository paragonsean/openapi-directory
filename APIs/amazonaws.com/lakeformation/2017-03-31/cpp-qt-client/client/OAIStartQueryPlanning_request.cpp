/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartQueryPlanning_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartQueryPlanning_request::OAIStartQueryPlanning_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartQueryPlanning_request::OAIStartQueryPlanning_request() {
    this->initializeModel();
}

OAIStartQueryPlanning_request::~OAIStartQueryPlanning_request() {}

void OAIStartQueryPlanning_request::initializeModel() {

    m_query_planning_context_isSet = false;
    m_query_planning_context_isValid = false;

    m_query_string_isSet = false;
    m_query_string_isValid = false;
}

void OAIStartQueryPlanning_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartQueryPlanning_request::fromJsonObject(QJsonObject json) {

    m_query_planning_context_isValid = ::OpenAPI::fromJsonValue(m_query_planning_context, json[QString("QueryPlanningContext")]);
    m_query_planning_context_isSet = !json[QString("QueryPlanningContext")].isNull() && m_query_planning_context_isValid;

    m_query_string_isValid = ::OpenAPI::fromJsonValue(m_query_string, json[QString("QueryString")]);
    m_query_string_isSet = !json[QString("QueryString")].isNull() && m_query_string_isValid;
}

QString OAIStartQueryPlanning_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartQueryPlanning_request::asJsonObject() const {
    QJsonObject obj;
    if (m_query_planning_context.isSet()) {
        obj.insert(QString("QueryPlanningContext"), ::OpenAPI::toJsonValue(m_query_planning_context));
    }
    if (m_query_string_isSet) {
        obj.insert(QString("QueryString"), ::OpenAPI::toJsonValue(m_query_string));
    }
    return obj;
}

OAIStartQueryPlanning_request_QueryPlanningContext OAIStartQueryPlanning_request::getQueryPlanningContext() const {
    return m_query_planning_context;
}
void OAIStartQueryPlanning_request::setQueryPlanningContext(const OAIStartQueryPlanning_request_QueryPlanningContext &query_planning_context) {
    m_query_planning_context = query_planning_context;
    m_query_planning_context_isSet = true;
}

bool OAIStartQueryPlanning_request::is_query_planning_context_Set() const{
    return m_query_planning_context_isSet;
}

bool OAIStartQueryPlanning_request::is_query_planning_context_Valid() const{
    return m_query_planning_context_isValid;
}

QString OAIStartQueryPlanning_request::getQueryString() const {
    return m_query_string;
}
void OAIStartQueryPlanning_request::setQueryString(const QString &query_string) {
    m_query_string = query_string;
    m_query_string_isSet = true;
}

bool OAIStartQueryPlanning_request::is_query_string_Set() const{
    return m_query_string_isSet;
}

bool OAIStartQueryPlanning_request::is_query_string_Valid() const{
    return m_query_string_isValid;
}

bool OAIStartQueryPlanning_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_query_planning_context.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_string_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartQueryPlanning_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_query_planning_context_isValid && m_query_string_isValid && true;
}

} // namespace OpenAPI
