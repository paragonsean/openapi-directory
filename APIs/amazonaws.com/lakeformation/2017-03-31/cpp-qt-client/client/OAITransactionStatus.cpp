/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransactionStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransactionStatus::OAITransactionStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransactionStatus::OAITransactionStatus() {
    this->initializeModel();
}

OAITransactionStatus::~OAITransactionStatus() {}

void OAITransactionStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITransactionStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITransactionStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ACTIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransactionStatus::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COMMITTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransactionStatus::COMMITTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ABORTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransactionStatus::ABORTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COMMIT_IN_PROGRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransactionStatus::COMMIT_IN_PROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITransactionStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITransactionStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITransactionStatus::ACTIVE:
            val = "ACTIVE";
            break;
        case eOAITransactionStatus::COMMITTED:
            val = "COMMITTED";
            break;
        case eOAITransactionStatus::ABORTED:
            val = "ABORTED";
            break;
        case eOAITransactionStatus::COMMIT_IN_PROGRESS:
            val = "COMMIT_IN_PROGRESS";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITransactionStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITransactionStatus::eOAITransactionStatus OAITransactionStatus::getValue() const {
    return m_value;
}

void OAITransactionStatus::setValue(const OAITransactionStatus::eOAITransactionStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITransactionStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAITransactionStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
