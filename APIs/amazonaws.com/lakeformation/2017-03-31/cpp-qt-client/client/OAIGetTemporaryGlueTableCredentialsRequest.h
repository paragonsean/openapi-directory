/**
 * AWS Lake Formation
 * <fullname>Lake Formation</fullname> <p>Defines the public endpoint for the Lake Formation service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetTemporaryGlueTableCredentialsRequest.h
 *
 * 
 */

#ifndef OAIGetTemporaryGlueTableCredentialsRequest_H
#define OAIGetTemporaryGlueTableCredentialsRequest_H

#include <QJsonObject>

#include "OAIGetTemporaryGluePartitionCredentialsRequest_AuditContext.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetTemporaryGluePartitionCredentialsRequest_AuditContext;

class OAIGetTemporaryGlueTableCredentialsRequest : public OAIObject {
public:
    OAIGetTemporaryGlueTableCredentialsRequest();
    OAIGetTemporaryGlueTableCredentialsRequest(QString json);
    ~OAIGetTemporaryGlueTableCredentialsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTableArn() const;
    void setTableArn(const QString &table_arn);
    bool is_table_arn_Set() const;
    bool is_table_arn_Valid() const;

    QList getPermissions() const;
    void setPermissions(const QList &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    qint32 getDurationSeconds() const;
    void setDurationSeconds(const qint32 &duration_seconds);
    bool is_duration_seconds_Set() const;
    bool is_duration_seconds_Valid() const;

    OAIGetTemporaryGluePartitionCredentialsRequest_AuditContext getAuditContext() const;
    void setAuditContext(const OAIGetTemporaryGluePartitionCredentialsRequest_AuditContext &audit_context);
    bool is_audit_context_Set() const;
    bool is_audit_context_Valid() const;

    QList getSupportedPermissionTypes() const;
    void setSupportedPermissionTypes(const QList &supported_permission_types);
    bool is_supported_permission_types_Set() const;
    bool is_supported_permission_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_table_arn;
    bool m_table_arn_isSet;
    bool m_table_arn_isValid;

    QList m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    qint32 m_duration_seconds;
    bool m_duration_seconds_isSet;
    bool m_duration_seconds_isValid;

    OAIGetTemporaryGluePartitionCredentialsRequest_AuditContext m_audit_context;
    bool m_audit_context_isSet;
    bool m_audit_context_isValid;

    QList m_supported_permission_types;
    bool m_supported_permission_types_isSet;
    bool m_supported_permission_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetTemporaryGlueTableCredentialsRequest)

#endif // OAIGetTemporaryGlueTableCredentialsRequest_H
